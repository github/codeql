description: Add ERB tables and rename Ruby tables
compatibility: backwards
ruby_alias_def.rel: reorder alias_def.rel ( @alias id, @underscore_method_name alias, @underscore_method_name name, @location loc ) id alias name loc 
ruby_argument_list_child.rel: reorder argument_list_child.rel ( @argument_list ruby_argument_list, int index, @argument_list_child_type child ) ruby_argument_list index child 
ruby_argument_list_def.rel: reorder argument_list_def.rel ( @argument_list id, @location loc ) id loc 
ruby_array_child.rel: reorder array_child.rel ( @array ruby_array, int index, @array_child_type child ) ruby_array index child 
ruby_array_def.rel: reorder array_def.rel ( @array id, @location loc ) id loc 
ruby_assignment_def.rel: reorder assignment_def.rel ( @assignment id, @assignment_left_type left, @assignment_right_type right, @location loc ) id left right loc 
ruby_bare_string_child.rel: reorder bare_string_child.rel ( @bare_string ruby_bare_string, int index, @bare_string_child_type child ) ruby_bare_string index child 
ruby_bare_string_def.rel: reorder bare_string_def.rel ( @bare_string id, @location loc ) id loc 
ruby_bare_symbol_child.rel: reorder bare_symbol_child.rel ( @bare_symbol ruby_bare_symbol, int index, @bare_symbol_child_type child ) ruby_bare_symbol index child 
ruby_bare_symbol_def.rel: reorder bare_symbol_def.rel ( @bare_symbol id, @location loc ) id loc 
ruby_begin_child.rel: reorder begin_child.rel ( @begin ruby_begin, int index, @begin_child_type child ) ruby_begin index child 
ruby_begin_def.rel: reorder begin_def.rel ( @begin id, @location loc ) id loc 
ruby_begin_block_child.rel: reorder begin_block_child.rel ( @begin_block ruby_begin_block, int index, @begin_block_child_type child ) ruby_begin_block index child 
ruby_begin_block_def.rel: reorder begin_block_def.rel ( @begin_block id, @location loc ) id loc 
ruby_binary_def.rel: reorder binary_def.rel ( @binary id, @binary_left_type left, int operator, @binary_right_type right, @location loc ) id left operator right loc 
ruby_block_parameters.rel: reorder block_parameters.rel ( @block ruby_block, @block_parameters parameters ) ruby_block parameters 
ruby_block_child.rel: reorder block_child.rel ( @block ruby_block, int index, @block_child_type child ) ruby_block index child 
ruby_block_def.rel: reorder block_def.rel ( @block id, @location loc ) id loc 
ruby_block_argument_def.rel: reorder block_argument_def.rel ( @block_argument id, @underscore_arg child, @location loc ) id child loc 
ruby_block_parameter_def.rel: reorder block_parameter_def.rel ( @block_parameter id, @token_identifier name, @location loc ) id name loc 
ruby_block_parameters_child.rel: reorder block_parameters_child.rel ( @block_parameters ruby_block_parameters, int index, @block_parameters_child_type child ) ruby_block_parameters index child 
ruby_block_parameters_def.rel: reorder block_parameters_def.rel ( @block_parameters id, @location loc ) id loc 
ruby_break_child.rel: reorder break_child.rel ( @break ruby_break, @argument_list child ) ruby_break child 
ruby_break_def.rel: reorder break_def.rel ( @break id, @location loc ) id loc 
ruby_call_arguments.rel: reorder call_arguments.rel ( @call ruby_call, @argument_list arguments ) ruby_call arguments 
ruby_call_block.rel: reorder call_block.rel ( @call ruby_call, @call_block_type block ) ruby_call block 
ruby_call_receiver.rel: reorder call_receiver.rel ( @call ruby_call, @call_receiver_type receiver ) ruby_call receiver 
ruby_call_def.rel: reorder call_def.rel ( @call id, @call_method_type method, @location loc ) id method loc 
ruby_case_value.rel: reorder case_value.rel ( @case__ ruby_case__, @underscore_statement value ) ruby_case__ value 
ruby_case_child.rel: reorder case_child.rel ( @case__ ruby_case__, int index, @case_child_type child ) ruby_case__ index child 
ruby_case_def.rel: reorder case_def.rel ( @case__ id, @location loc ) id loc 
ruby_chained_string_child.rel: reorder chained_string_child.rel ( @chained_string ruby_chained_string, int index, @string__ child ) ruby_chained_string index child 
ruby_chained_string_def.rel: reorder chained_string_def.rel ( @chained_string id, @location loc ) id loc 
ruby_class_superclass.rel: reorder class_superclass.rel ( @class ruby_class, @superclass superclass ) ruby_class superclass 
ruby_class_child.rel: reorder class_child.rel ( @class ruby_class, int index, @class_child_type child ) ruby_class index child 
ruby_class_def.rel: reorder class_def.rel ( @class id, @class_name_type name, @location loc ) id name loc 
ruby_conditional_def.rel: reorder conditional_def.rel ( @conditional id, @underscore_arg alternative, @underscore_arg condition, @underscore_arg consequence, @location loc ) id alternative condition consequence loc 
ruby_delimited_symbol_child.rel: reorder delimited_symbol_child.rel ( @delimited_symbol ruby_delimited_symbol, int index, @delimited_symbol_child_type child ) ruby_delimited_symbol index child 
ruby_delimited_symbol_def.rel: reorder delimited_symbol_def.rel ( @delimited_symbol id, @location loc ) id loc 
ruby_destructured_left_assignment_child.rel: reorder destructured_left_assignment_child.rel ( @destructured_left_assignment ruby_destructured_left_assignment, int index, @destructured_left_assignment_child_type child ) ruby_destructured_left_assignment index child 
ruby_destructured_left_assignment_def.rel: reorder destructured_left_assignment_def.rel ( @destructured_left_assignment id, @location loc ) id loc 
ruby_destructured_parameter_child.rel: reorder destructured_parameter_child.rel ( @destructured_parameter ruby_destructured_parameter, int index, @destructured_parameter_child_type child ) ruby_destructured_parameter index child 
ruby_destructured_parameter_def.rel: reorder destructured_parameter_def.rel ( @destructured_parameter id, @location loc ) id loc 
ruby_do_child.rel: reorder do_child.rel ( @do ruby_do, int index, @do_child_type child ) ruby_do index child 
ruby_do_def.rel: reorder do_def.rel ( @do id, @location loc ) id loc 
ruby_do_block_parameters.rel: reorder do_block_parameters.rel ( @do_block ruby_do_block, @block_parameters parameters ) ruby_do_block parameters 
ruby_do_block_child.rel: reorder do_block_child.rel ( @do_block ruby_do_block, int index, @do_block_child_type child ) ruby_do_block index child 
ruby_do_block_def.rel: reorder do_block_def.rel ( @do_block id, @location loc ) id loc 
ruby_element_reference_child.rel: reorder element_reference_child.rel ( @element_reference ruby_element_reference, int index, @element_reference_child_type child ) ruby_element_reference index child 
ruby_element_reference_def.rel: reorder element_reference_def.rel ( @element_reference id, @underscore_primary object, @location loc ) id object loc 
ruby_else_child.rel: reorder else_child.rel ( @else ruby_else, int index, @else_child_type child ) ruby_else index child 
ruby_else_def.rel: reorder else_def.rel ( @else id, @location loc ) id loc 
ruby_elsif_alternative.rel: reorder elsif_alternative.rel ( @elsif ruby_elsif, @elsif_alternative_type alternative ) ruby_elsif alternative 
ruby_elsif_consequence.rel: reorder elsif_consequence.rel ( @elsif ruby_elsif, @then consequence ) ruby_elsif consequence 
ruby_elsif_def.rel: reorder elsif_def.rel ( @elsif id, @underscore_statement condition, @location loc ) id condition loc 
ruby_end_block_child.rel: reorder end_block_child.rel ( @end_block ruby_end_block, int index, @end_block_child_type child ) ruby_end_block index child 
ruby_end_block_def.rel: reorder end_block_def.rel ( @end_block id, @location loc ) id loc 
ruby_ensure_child.rel: reorder ensure_child.rel ( @ensure ruby_ensure, int index, @ensure_child_type child ) ruby_ensure index child 
ruby_ensure_def.rel: reorder ensure_def.rel ( @ensure id, @location loc ) id loc 
ruby_exception_variable_def.rel: reorder exception_variable_def.rel ( @exception_variable id, @underscore_lhs child, @location loc ) id child loc 
ruby_exceptions_child.rel: reorder exceptions_child.rel ( @exceptions ruby_exceptions, int index, @exceptions_child_type child ) ruby_exceptions index child 
ruby_exceptions_def.rel: reorder exceptions_def.rel ( @exceptions id, @location loc ) id loc 
ruby_for_def.rel: reorder for_def.rel ( @for id, @do body, @for_pattern_type pattern, @in value, @location loc ) id body pattern value loc 
ruby_hash_child.rel: reorder hash_child.rel ( @hash ruby_hash, int index, @hash_child_type child ) ruby_hash index child 
ruby_hash_def.rel: reorder hash_def.rel ( @hash id, @location loc ) id loc 
ruby_hash_splat_argument_def.rel: reorder hash_splat_argument_def.rel ( @hash_splat_argument id, @underscore_arg child, @location loc ) id child loc 
ruby_hash_splat_parameter_name.rel: reorder hash_splat_parameter_name.rel ( @hash_splat_parameter ruby_hash_splat_parameter, @token_identifier name ) ruby_hash_splat_parameter name 
ruby_hash_splat_parameter_def.rel: reorder hash_splat_parameter_def.rel ( @hash_splat_parameter id, @location loc ) id loc 
ruby_heredoc_body_child.rel: reorder heredoc_body_child.rel ( @heredoc_body ruby_heredoc_body, int index, @heredoc_body_child_type child ) ruby_heredoc_body index child 
ruby_heredoc_body_def.rel: reorder heredoc_body_def.rel ( @heredoc_body id, @location loc ) id loc 
ruby_if_alternative.rel: reorder if_alternative.rel ( @if ruby_if, @if_alternative_type alternative ) ruby_if alternative 
ruby_if_consequence.rel: reorder if_consequence.rel ( @if ruby_if, @then consequence ) ruby_if consequence 
ruby_if_def.rel: reorder if_def.rel ( @if id, @underscore_statement condition, @location loc ) id condition loc 
ruby_if_modifier_def.rel: reorder if_modifier_def.rel ( @if_modifier id, @underscore_statement body, @if_modifier_condition_type condition, @location loc ) id body condition loc 
ruby_in_def.rel: reorder in_def.rel ( @in id, @underscore_arg child, @location loc ) id child loc 
ruby_interpolation_child.rel: reorder interpolation_child.rel ( @interpolation ruby_interpolation, int index, @interpolation_child_type child ) ruby_interpolation index child 
ruby_interpolation_def.rel: reorder interpolation_def.rel ( @interpolation id, @location loc ) id loc 
ruby_keyword_parameter_value.rel: reorder keyword_parameter_value.rel ( @keyword_parameter ruby_keyword_parameter, @underscore_arg value ) ruby_keyword_parameter value 
ruby_keyword_parameter_def.rel: reorder keyword_parameter_def.rel ( @keyword_parameter id, @token_identifier name, @location loc ) id name loc 
ruby_lambda_parameters.rel: reorder lambda_parameters.rel ( @lambda ruby_lambda, @lambda_parameters parameters ) ruby_lambda parameters 
ruby_lambda_def.rel: reorder lambda_def.rel ( @lambda id, @lambda_body_type body, @location loc ) id body loc 
ruby_lambda_parameters_child.rel: reorder lambda_parameters_child.rel ( @lambda_parameters ruby_lambda_parameters, int index, @lambda_parameters_child_type child ) ruby_lambda_parameters index child 
ruby_lambda_parameters_def.rel: reorder lambda_parameters_def.rel ( @lambda_parameters id, @location loc ) id loc 
ruby_left_assignment_list_child.rel: reorder left_assignment_list_child.rel ( @left_assignment_list ruby_left_assignment_list, int index, @left_assignment_list_child_type child ) ruby_left_assignment_list index child 
ruby_left_assignment_list_def.rel: reorder left_assignment_list_def.rel ( @left_assignment_list id, @location loc ) id loc 
ruby_method_parameters.rel: reorder method_parameters.rel ( @method ruby_method, @method_parameters parameters ) ruby_method parameters 
ruby_method_child.rel: reorder method_child.rel ( @method ruby_method, int index, @method_child_type child ) ruby_method index child 
ruby_method_def.rel: reorder method_def.rel ( @method id, @underscore_method_name name, @location loc ) id name loc 
ruby_method_parameters_child.rel: reorder method_parameters_child.rel ( @method_parameters ruby_method_parameters, int index, @method_parameters_child_type child ) ruby_method_parameters index child 
ruby_method_parameters_def.rel: reorder method_parameters_def.rel ( @method_parameters id, @location loc ) id loc 
ruby_module_child.rel: reorder module_child.rel ( @module ruby_module, int index, @module_child_type child ) ruby_module index child 
ruby_module_def.rel: reorder module_def.rel ( @module id, @module_name_type name, @location loc ) id name loc 
ruby_next_child.rel: reorder next_child.rel ( @next ruby_next, @argument_list child ) ruby_next child 
ruby_next_def.rel: reorder next_def.rel ( @next id, @location loc ) id loc 
ruby_operator_assignment_def.rel: reorder operator_assignment_def.rel ( @operator_assignment id, @underscore_lhs left, int operator, @operator_assignment_right_type right, @location loc ) id left operator right loc 
ruby_optional_parameter_def.rel: reorder optional_parameter_def.rel ( @optional_parameter id, @token_identifier name, @underscore_arg value, @location loc ) id name value loc 
ruby_pair_def.rel: reorder pair_def.rel ( @pair id, @pair_key_type key__, @underscore_arg value, @location loc ) id key__ value loc 
ruby_parenthesized_statements_child.rel: reorder parenthesized_statements_child.rel ( @parenthesized_statements ruby_parenthesized_statements, int index, @parenthesized_statements_child_type child ) ruby_parenthesized_statements index child 
ruby_parenthesized_statements_def.rel: reorder parenthesized_statements_def.rel ( @parenthesized_statements id, @location loc ) id loc 
ruby_pattern_def.rel: reorder pattern_def.rel ( @pattern id, @pattern_child_type child, @location loc ) id child loc 
ruby_program_child.rel: reorder program_child.rel ( @program ruby_program, int index, @program_child_type child ) ruby_program index child 
ruby_program_def.rel: reorder program_def.rel ( @program id, @location loc ) id loc 
ruby_range_begin.rel: reorder range_begin.rel ( @range ruby_range, @underscore_arg begin ) ruby_range begin 
ruby_range_end.rel: reorder range_end.rel ( @range ruby_range, @underscore_arg end ) ruby_range end 
ruby_range_def.rel: reorder range_def.rel ( @range id, int operator, @location loc ) id operator loc 
ruby_rational_def.rel: reorder rational_def.rel ( @rational id, @rational_child_type child, @location loc ) id child loc 
ruby_redo_child.rel: reorder redo_child.rel ( @redo ruby_redo, @argument_list child ) ruby_redo child 
ruby_redo_def.rel: reorder redo_def.rel ( @redo id, @location loc ) id loc 
ruby_regex_child.rel: reorder regex_child.rel ( @regex ruby_regex, int index, @regex_child_type child ) ruby_regex index child 
ruby_regex_def.rel: reorder regex_def.rel ( @regex id, @location loc ) id loc 
ruby_rescue_body.rel: reorder rescue_body.rel ( @rescue ruby_rescue, @then body ) ruby_rescue body 
ruby_rescue_exceptions.rel: reorder rescue_exceptions.rel ( @rescue ruby_rescue, @exceptions exceptions ) ruby_rescue exceptions 
ruby_rescue_variable.rel: reorder rescue_variable.rel ( @rescue ruby_rescue, @exception_variable variable ) ruby_rescue variable 
ruby_rescue_def.rel: reorder rescue_def.rel ( @rescue id, @location loc ) id loc 
ruby_rescue_modifier_def.rel: reorder rescue_modifier_def.rel ( @rescue_modifier id, @underscore_statement body, @rescue_modifier_handler_type handler, @location loc ) id body handler loc 
ruby_rest_assignment_child.rel: reorder rest_assignment_child.rel ( @rest_assignment ruby_rest_assignment, @underscore_lhs child ) ruby_rest_assignment child 
ruby_rest_assignment_def.rel: reorder rest_assignment_def.rel ( @rest_assignment id, @location loc ) id loc 
ruby_retry_child.rel: reorder retry_child.rel ( @retry ruby_retry, @argument_list child ) ruby_retry child 
ruby_retry_def.rel: reorder retry_def.rel ( @retry id, @location loc ) id loc 
ruby_return_child.rel: reorder return_child.rel ( @return ruby_return, @argument_list child ) ruby_return child 
ruby_return_def.rel: reorder return_def.rel ( @return id, @location loc ) id loc 
ruby_right_assignment_list_child.rel: reorder right_assignment_list_child.rel ( @right_assignment_list ruby_right_assignment_list, int index, @right_assignment_list_child_type child ) ruby_right_assignment_list index child 
ruby_right_assignment_list_def.rel: reorder right_assignment_list_def.rel ( @right_assignment_list id, @location loc ) id loc 
ruby_scope_resolution_scope.rel: reorder scope_resolution_scope.rel ( @scope_resolution ruby_scope_resolution, @underscore_primary scope ) ruby_scope_resolution scope 
ruby_scope_resolution_def.rel: reorder scope_resolution_def.rel ( @scope_resolution id, @scope_resolution_name_type name, @location loc ) id name loc 
ruby_setter_def.rel: reorder setter_def.rel ( @setter id, @token_identifier name, @location loc ) id name loc 
ruby_singleton_class_child.rel: reorder singleton_class_child.rel ( @singleton_class ruby_singleton_class, int index, @singleton_class_child_type child ) ruby_singleton_class index child 
ruby_singleton_class_def.rel: reorder singleton_class_def.rel ( @singleton_class id, @underscore_arg value, @location loc ) id value loc 
ruby_singleton_method_parameters.rel: reorder singleton_method_parameters.rel ( @singleton_method ruby_singleton_method, @method_parameters parameters ) ruby_singleton_method parameters 
ruby_singleton_method_child.rel: reorder singleton_method_child.rel ( @singleton_method ruby_singleton_method, int index, @singleton_method_child_type child ) ruby_singleton_method index child 
ruby_singleton_method_def.rel: reorder singleton_method_def.rel ( @singleton_method id, @underscore_method_name name, @singleton_method_object_type object, @location loc ) id name object loc 
ruby_splat_argument_def.rel: reorder splat_argument_def.rel ( @splat_argument id, @underscore_arg child, @location loc ) id child loc 
ruby_splat_parameter_name.rel: reorder splat_parameter_name.rel ( @splat_parameter ruby_splat_parameter, @token_identifier name ) ruby_splat_parameter name 
ruby_splat_parameter_def.rel: reorder splat_parameter_def.rel ( @splat_parameter id, @location loc ) id loc 
ruby_string_child.rel: reorder string_child.rel ( @string__ ruby_string__, int index, @string_child_type child ) ruby_string__ index child 
ruby_string_def.rel: reorder string_def.rel ( @string__ id, @location loc ) id loc 
ruby_string_array_child.rel: reorder string_array_child.rel ( @string_array ruby_string_array, int index, @bare_string child ) ruby_string_array index child 
ruby_string_array_def.rel: reorder string_array_def.rel ( @string_array id, @location loc ) id loc 
ruby_subshell_child.rel: reorder subshell_child.rel ( @subshell ruby_subshell, int index, @subshell_child_type child ) ruby_subshell index child 
ruby_subshell_def.rel: reorder subshell_def.rel ( @subshell id, @location loc ) id loc 
ruby_superclass_def.rel: reorder superclass_def.rel ( @superclass id, @superclass_child_type child, @location loc ) id child loc 
ruby_symbol_array_child.rel: reorder symbol_array_child.rel ( @symbol_array ruby_symbol_array, int index, @bare_symbol child ) ruby_symbol_array index child 
ruby_symbol_array_def.rel: reorder symbol_array_def.rel ( @symbol_array id, @location loc ) id loc 
ruby_then_child.rel: reorder then_child.rel ( @then ruby_then, int index, @then_child_type child ) ruby_then index child 
ruby_then_def.rel: reorder then_def.rel ( @then id, @location loc ) id loc 
ruby_unary_def.rel: reorder unary_def.rel ( @unary id, @unary_operand_type operand, int operator, @location loc ) id operand operator loc 
ruby_undef_child.rel: reorder undef_child.rel ( @undef ruby_undef, int index, @underscore_method_name child ) ruby_undef index child 
ruby_undef_def.rel: reorder undef_def.rel ( @undef id, @location loc ) id loc 
ruby_unless_alternative.rel: reorder unless_alternative.rel ( @unless ruby_unless, @unless_alternative_type alternative ) ruby_unless alternative 
ruby_unless_consequence.rel: reorder unless_consequence.rel ( @unless ruby_unless, @then consequence ) ruby_unless consequence 
ruby_unless_def.rel: reorder unless_def.rel ( @unless id, @underscore_statement condition, @location loc ) id condition loc 
ruby_unless_modifier_def.rel: reorder unless_modifier_def.rel ( @unless_modifier id, @underscore_statement body, @unless_modifier_condition_type condition, @location loc ) id body condition loc 
ruby_until_def.rel: reorder until_def.rel ( @until id, @do body, @underscore_statement condition, @location loc ) id body condition loc 
ruby_until_modifier_def.rel: reorder until_modifier_def.rel ( @until_modifier id, @underscore_statement body, @until_modifier_condition_type condition, @location loc ) id body condition loc 
ruby_when_body.rel: reorder when_body.rel ( @when ruby_when, @then body ) ruby_when body 
ruby_when_pattern.rel: reorder when_pattern.rel ( @when ruby_when, int index, @pattern pattern ) ruby_when index pattern 
ruby_when_def.rel: reorder when_def.rel ( @when id, @location loc ) id loc 
ruby_while_def.rel: reorder while_def.rel ( @while id, @do body, @underscore_statement condition, @location loc ) id body condition loc 
ruby_while_modifier_def.rel: reorder while_modifier_def.rel ( @while_modifier id, @underscore_statement body, @while_modifier_condition_type condition, @location loc ) id body condition loc 
ruby_yield_child.rel: reorder yield_child.rel ( @yield ruby_yield, @argument_list child ) ruby_yield child 
ruby_yield_def.rel: reorder yield_def.rel ( @yield id, @location loc ) id loc 
ruby_tokeninfo.rel: reorder tokeninfo.rel ( @token id, int kind, @file file, int idx, string value, @location loc ) id kind file idx value loc 
ruby_ast_node_parent.rel: reorder ast_node_parent.rel ( @ast_node child, @ast_node_parent parent, int parent_index) child parent parent_index
alias_def.rel: delete
argument_list_child.rel: delete
argument_list_def.rel: delete
array_child.rel: delete
array_def.rel: delete
assignment_def.rel: delete
ast_node_parent.rel: delete
bare_string_child.rel: delete
bare_string_def.rel: delete
bare_symbol_child.rel: delete
bare_symbol_def.rel: delete
begin_block_child.rel: delete
begin_block_def.rel: delete
begin_child.rel: delete
begin_def.rel: delete
binary_def.rel: delete
block_argument_def.rel: delete
block_child.rel: delete
block_def.rel: delete
block_parameter_def.rel: delete
block_parameters.rel: delete
block_parameters_child.rel: delete
block_parameters_def.rel: delete
break_child.rel: delete
break_def.rel: delete
call_arguments.rel: delete
call_block.rel: delete
call_def.rel: delete
call_receiver.rel: delete
case_child.rel: delete
case_def.rel: delete
case_value.rel: delete
chained_string_child.rel: delete
chained_string_def.rel: delete
class_child.rel: delete
class_def.rel: delete
class_superclass.rel: delete
conditional_def.rel: delete
delimited_symbol_child.rel: delete
delimited_symbol_def.rel: delete
destructured_left_assignment_child.rel: delete
destructured_left_assignment_def.rel: delete
destructured_parameter_child.rel: delete
destructured_parameter_def.rel: delete
do_block_child.rel: delete
do_block_def.rel: delete
do_block_parameters.rel: delete
do_child.rel: delete
do_def.rel: delete
element_reference_child.rel: delete
element_reference_def.rel: delete
else_child.rel: delete
else_def.rel: delete
elsif_alternative.rel: delete
elsif_consequence.rel: delete
elsif_def.rel: delete
end_block_child.rel: delete
end_block_def.rel: delete
ensure_child.rel: delete
ensure_def.rel: delete
exception_variable_def.rel: delete
exceptions_child.rel: delete
exceptions_def.rel: delete
for_def.rel: delete
hash_child.rel: delete
hash_def.rel: delete
hash_splat_argument_def.rel: delete
hash_splat_parameter_def.rel: delete
hash_splat_parameter_name.rel: delete
heredoc_body_child.rel: delete
heredoc_body_def.rel: delete
if_alternative.rel: delete
if_consequence.rel: delete
if_def.rel: delete
if_modifier_def.rel: delete
in_def.rel: delete
interpolation_child.rel: delete
interpolation_def.rel: delete
keyword_parameter_def.rel: delete
keyword_parameter_value.rel: delete
lambda_def.rel: delete
lambda_parameters.rel: delete
lambda_parameters_child.rel: delete
lambda_parameters_def.rel: delete
left_assignment_list_child.rel: delete
left_assignment_list_def.rel: delete
method_child.rel: delete
method_def.rel: delete
method_parameters.rel: delete
method_parameters_child.rel: delete
method_parameters_def.rel: delete
module_child.rel: delete
module_def.rel: delete
next_child.rel: delete
next_def.rel: delete
operator_assignment_def.rel: delete
optional_parameter_def.rel: delete
pair_def.rel: delete
parenthesized_statements_child.rel: delete
parenthesized_statements_def.rel: delete
pattern_def.rel: delete
program_child.rel: delete
program_def.rel: delete
range_begin.rel: delete
range_def.rel: delete
range_end.rel: delete
rational_def.rel: delete
redo_child.rel: delete
redo_def.rel: delete
regex_child.rel: delete
regex_def.rel: delete
rescue_body.rel: delete
rescue_def.rel: delete
rescue_exceptions.rel: delete
rescue_modifier_def.rel: delete
rescue_variable.rel: delete
rest_assignment_child.rel: delete
rest_assignment_def.rel: delete
retry_child.rel: delete
retry_def.rel: delete
return_child.rel: delete
return_def.rel: delete
right_assignment_list_child.rel: delete
right_assignment_list_def.rel: delete
scope_resolution_def.rel: delete
scope_resolution_scope.rel: delete
setter_def.rel: delete
singleton_class_child.rel: delete
singleton_class_def.rel: delete
singleton_method_child.rel: delete
singleton_method_def.rel: delete
singleton_method_parameters.rel: delete
splat_argument_def.rel: delete
splat_parameter_def.rel: delete
splat_parameter_name.rel: delete
string_array_child.rel: delete
string_array_def.rel: delete
string_child.rel: delete
string_def.rel: delete
subshell_child.rel: delete
subshell_def.rel: delete
superclass_def.rel: delete
symbol_array_child.rel: delete
symbol_array_def.rel: delete
then_child.rel: delete
then_def.rel: delete
tokeninfo.rel: delete
unary_def.rel: delete
undef_child.rel: delete
undef_def.rel: delete
unless_alternative.rel: delete
unless_consequence.rel: delete
unless_def.rel: delete
unless_modifier_def.rel: delete
until_def.rel: delete
until_modifier_def.rel: delete
when_body.rel: delete
when_def.rel: delete
when_pattern.rel: delete
while_def.rel: delete
while_modifier_def.rel: delete
yield_child.rel: delete
yield_def.rel: delete
