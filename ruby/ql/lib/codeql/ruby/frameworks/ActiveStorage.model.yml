extensions:
  - addsTo:
      pack: codeql/ruby-all
      extensible: summaryModel
    data:
      - ['ActiveStorage::Filename!', 'Method[new]', 'Argument[0]', 'ReturnValue', 'taint']
      - ['ActiveStorage::Filename', 'Method[sanitized]', 'Argument[self]', 'ReturnValue', 'taint']

  - addsTo:
      pack: codeql/ruby-all
      extensible: typeModel
    data:
      # ActiveStorage::Blob.compose(blobs : [Blob]) : Blob
      - ['ActiveStorage::Blob', 'ActiveStorage::Blob!', 'Method[compose].ReturnValue']
      # ActiveStorage::Blob.create_and_upload! : Blob
      - ['ActiveStorage::Blob', 'ActiveStorage::Blob!', 'Method[create_and_upload!].ReturnValue']
      # ActiveStorage::Blob.create_before_direct_upload! : Blob
      - ['ActiveStorage::Blob', 'ActiveStorage::Blob!', 'Method[create_before_direct_upload!].ReturnValue']
      # ActiveStorage::Blob.find_signed(!) : Blob
      - ['ActiveStorage::Blob', 'ActiveStorage::Blob!', 'Method[find_signed,find_signed!].ReturnValue']
      # gives error: Invalid name 'Element' in access path
      # - ['ActiveStorage::Blob', 'ActiveStorage::Blob!', 'Method[compose].Argument[0].Element[any]']