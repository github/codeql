<!DOCTYPE qhelp PUBLIC
  "-//Semmle//qhelp//EN"
  "qhelp.dtd">
<qhelp>
<overview>
<p>
Many C# constructs enable code statements to be executed conditionally, for example, <code>if</code>
statements and <code>for</code> statements. If the statements contain important authentication or
login code, and user-controlled data determines whether or not the code is executed, an attacker may
be able to bypass security systems.
</p>

</overview>
<recommendation>

<p>
Never decide whether to authenticate a user based on data that may be controlled by that user. If
necessary, ensure that the data is validated extensively when it is input before any authentication
checks are performed.
</p>

<p>
It is still possible to have a system that "remembers" users, thus not requiring the user to login
on every interaction. For example, personalization settings can be applied without authentication
because this is not sensitive information. However, users should be allowed to take sensitive
actions only when they have been fully authenticated.
</p>

</recommendation>
<example>

<p>
This example shows two ways of deciding whether to authenticate a user. The first way shows a
decision that is based on the value of a cookie. Cookies can be easily controlled by the user, and 
so this allows a user to become authenticated without providing valid credentials. The second, more
secure way shows a decision that is based on looking up the user in a security database.
</p>

<sample src="ConditionalBypass.cs" />

</example>
<references>

</references>
</qhelp>
