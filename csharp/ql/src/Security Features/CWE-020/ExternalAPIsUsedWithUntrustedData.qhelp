<!DOCTYPE qhelp PUBLIC
  "-//Semmle//qhelp//EN"
  "qhelp.dtd">
<qhelp>
  <overview>
    <p>Using unsanitized untrusted data in an external API can cause a variety of security issues. This query reports
all external APIs that are used with untrusted data, along with how frequently the API is used, and how many
unique sources of untrusted data flow to this API. This query is designed primarily to help identify which APIs
may be relevant for security analysis of this application.</p>

    <p>An external API is defined as a call to a callable (method/property accessor/operator/...) that is not defined
in the source code, not overridden in the source code, and is not modeled as a taint step in the default taint library.
External APIs may be from the .NET standard library, third-party dependencies or from internal dependencies. The query
will report the signature with a fully qualified name, along with either <code>[param x]</code>, where <code>x</code>
indicates the position of the parameter receiving the untrusted data or <code>[qualifier]</code> indicating the untrusted
data is used as the qualifier to the call.</p>

  </overview>
  <recommendation>

    <p>For each result:</p>

    <ul>
      <li>If the result highlights a known sink, no action is required.</li>
      <li>If the result highlights an unknown sink for a problem, then add modeling for the sink to the relevant query.</li>
      <li>If the result represents a call to an external API which transfers taint, add the appropriate modeling, and
  re-run the query to determine what new results have appeared due to this additional modeling.</li>
    </ul>

    <p>Otherwise, the result is likely uninteresting. Custom versions of this query can extend the <code>SafeExternalAPICallable</code>
class to exclude known safe external APIs from future analysis.</p>

  </recommendation>
  <example>

    <p>If the query were to return the API <code>System.Web.HttpResponse.Write(string) [param 0]</code>
then we should first consider whether this a security relevant sink. In this case, this is writing to a HTTP response, so we should
consider whether this is an XSS sink. If it is, we should confirm that it is handled by the XSS query.</p>

  </example>
  <references>

  </references>
</qhelp>
