# THIS FILE IS AN AUTO-GENERATED MODELS AS DATA FILE. DO NOT EDIT.
extensions:
  - addsTo:
      pack: codeql/csharp-all
      extensible: summaryModel
    data:
      - ["Mono.Linker.Dataflow", "AttributeDataFlow", False, "AttributeDataFlow", "(Mono.Linker.LinkContext,Mono.Linker.Steps.MarkStep,Mono.Linker.MessageOrigin)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["Mono.Linker.Dataflow", "AttributeDataFlow", False, "AttributeDataFlow", "(Mono.Linker.LinkContext,Mono.Linker.Steps.MarkStep,Mono.Linker.MessageOrigin)", "", "Argument[1]", "Argument[this]", "taint", "df-generated"]
      - ["Mono.Linker.Dataflow", "AttributeDataFlow", False, "AttributeDataFlow", "(Mono.Linker.LinkContext,Mono.Linker.Steps.MarkStep,Mono.Linker.MessageOrigin)", "", "Argument[2]", "Argument[this]", "taint", "df-generated"]
      - ["Mono.Linker.Dataflow", "CompilerGeneratedState", False, "CompilerGeneratedState", "(Mono.Linker.LinkContext)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["Mono.Linker.Dataflow", "GenericArgumentDataFlow", False, "GenericArgumentDataFlow", "(Mono.Linker.LinkContext,Mono.Linker.Steps.MarkStep,Mono.Linker.MessageOrigin)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["Mono.Linker.Dataflow", "GenericArgumentDataFlow", False, "GenericArgumentDataFlow", "(Mono.Linker.LinkContext,Mono.Linker.Steps.MarkStep,Mono.Linker.MessageOrigin)", "", "Argument[1]", "Argument[this]", "taint", "df-generated"]
      - ["Mono.Linker.Dataflow", "GenericArgumentDataFlow", False, "GenericArgumentDataFlow", "(Mono.Linker.LinkContext,Mono.Linker.Steps.MarkStep,Mono.Linker.MessageOrigin)", "", "Argument[2]", "Argument[this]", "taint", "df-generated"]
      - ["Mono.Linker.Dataflow", "HoistedLocalKey", False, "HoistedLocalKey", "(Mono.Cecil.FieldDefinition)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["Mono.Linker.Dataflow", "ReflectionMarker", False, "ReflectionMarker", "(Mono.Linker.LinkContext,Mono.Linker.Steps.MarkStep,System.Boolean)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["Mono.Linker.Dataflow", "ReflectionMarker", False, "ReflectionMarker", "(Mono.Linker.LinkContext,Mono.Linker.Steps.MarkStep,System.Boolean)", "", "Argument[1]", "Argument[this]", "taint", "df-generated"]
      - ["Mono.Linker.Dataflow", "TrimAnalysisMethodCallPattern", False, "Merge", "(ILLink.Shared.DataFlow.ValueSetLattice<ILLink.Shared.DataFlow.SingleValue>,Mono.Linker.Dataflow.TrimAnalysisMethodCallPattern)", "", "Argument[1]", "ReturnValue", "taint", "df-generated"]
      - ["Mono.Linker.Dataflow", "TrimAnalysisMethodCallPattern", False, "Merge", "(ILLink.Shared.DataFlow.ValueSetLattice<ILLink.Shared.DataFlow.SingleValue>,Mono.Linker.Dataflow.TrimAnalysisMethodCallPattern)", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["Mono.Linker.Dataflow", "TrimAnalysisMethodCallPattern", False, "TrimAnalysisMethodCallPattern", "(Mono.Cecil.Cil.Instruction,Mono.Cecil.MethodReference,ILLink.Shared.DataFlow.ValueSet<ILLink.Shared.DataFlow.SingleValue>,System.Collections.Immutable.ImmutableArray<ILLink.Shared.DataFlow.ValueSet<ILLink.Shared.DataFlow.SingleValue>>,Mono.Linker.MessageOrigin)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["Mono.Linker.Dataflow", "TrimAnalysisMethodCallPattern", False, "TrimAnalysisMethodCallPattern", "(Mono.Cecil.Cil.Instruction,Mono.Cecil.MethodReference,ILLink.Shared.DataFlow.ValueSet<ILLink.Shared.DataFlow.SingleValue>,System.Collections.Immutable.ImmutableArray<ILLink.Shared.DataFlow.ValueSet<ILLink.Shared.DataFlow.SingleValue>>,Mono.Linker.MessageOrigin)", "", "Argument[1]", "Argument[this]", "taint", "df-generated"]
      - ["Mono.Linker.Dataflow", "TrimAnalysisMethodCallPattern", False, "TrimAnalysisMethodCallPattern", "(Mono.Cecil.Cil.Instruction,Mono.Cecil.MethodReference,ILLink.Shared.DataFlow.ValueSet<ILLink.Shared.DataFlow.SingleValue>,System.Collections.Immutable.ImmutableArray<ILLink.Shared.DataFlow.ValueSet<ILLink.Shared.DataFlow.SingleValue>>,Mono.Linker.MessageOrigin)", "", "Argument[2]", "Argument[this]", "taint", "df-generated"]
      - ["Mono.Linker.Dataflow", "TrimAnalysisMethodCallPattern", False, "TrimAnalysisMethodCallPattern", "(Mono.Cecil.Cil.Instruction,Mono.Cecil.MethodReference,ILLink.Shared.DataFlow.ValueSet<ILLink.Shared.DataFlow.SingleValue>,System.Collections.Immutable.ImmutableArray<ILLink.Shared.DataFlow.ValueSet<ILLink.Shared.DataFlow.SingleValue>>,Mono.Linker.MessageOrigin)", "", "Argument[4]", "Argument[this]", "taint", "df-generated"]
      - ["Mono.Linker.Dataflow", "TrimAnalysisPatternStore", False, "TrimAnalysisPatternStore", "(ILLink.Shared.DataFlow.ValueSetLattice<ILLink.Shared.DataFlow.SingleValue>,Mono.Linker.LinkContext)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["Mono.Linker.Dataflow", "TrimAnalysisPatternStore", False, "TrimAnalysisPatternStore", "(ILLink.Shared.DataFlow.ValueSetLattice<ILLink.Shared.DataFlow.SingleValue>,Mono.Linker.LinkContext)", "", "Argument[1]", "Argument[this]", "taint", "df-generated"]
  - addsTo:
      pack: codeql/csharp-all
      extensible: neutralModel
    data:
      - ["Mono.Linker.Dataflow", "AttributeDataFlow", "ProcessAttributeDataflow", "(Mono.Cecil.FieldDefinition,Mono.Cecil.CustomAttributeArgument)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "AttributeDataFlow", "ProcessAttributeDataflow", "(Mono.Cecil.MethodDefinition,System.Collections.Generic.IList<Mono.Cecil.CustomAttributeArgument>)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "CompilerGeneratedState", "GetGeneratedTypeAttributes", "(Mono.Cecil.TypeDefinition)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "CompilerGeneratedState", "IsHoistedLocal", "(Mono.Cecil.FieldDefinition)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "CompilerGeneratedState", "IsNestedFunctionOrStateMachineMember", "(Mono.Cecil.IMemberDefinition)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "CompilerGeneratedState", "TryGetCompilerGeneratedCalleesForUserMethod", "(Mono.Cecil.MethodDefinition,System.Collections.Generic.List<Mono.Cecil.IMemberDefinition>)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "CompilerGeneratedState", "TryGetOwningMethodForCompilerGeneratedMember", "(Mono.Cecil.IMemberDefinition,Mono.Cecil.MethodDefinition)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "CompilerGeneratedState", "TryGetStateMachineType", "(Mono.Cecil.MethodDefinition,Mono.Cecil.TypeDefinition)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "GenericArgumentDataFlow", "ProcessGenericArgumentDataFlow", "(Mono.Cecil.GenericParameter,Mono.Cecil.TypeReference)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "HoistedLocalKey", "Equals", "(Mono.Linker.Dataflow.HoistedLocalKey)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "HoistedLocalKey", "Equals", "(System.Object)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "HoistedLocalKey", "GetHashCode", "()", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "HoistedLocalKey", "op_Equality", "(Mono.Linker.Dataflow.HoistedLocalKey,Mono.Linker.Dataflow.HoistedLocalKey)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "HoistedLocalKey", "op_Inequality", "(Mono.Linker.Dataflow.HoistedLocalKey,Mono.Linker.Dataflow.HoistedLocalKey)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "TrimAnalysisAssignmentPattern", "MarkAndProduceDiagnostics", "(Mono.Linker.Dataflow.ReflectionMarker,Mono.Linker.LinkContext)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "TrimAnalysisAssignmentPattern", "Merge", "(ILLink.Shared.DataFlow.ValueSetLattice<ILLink.Shared.DataFlow.SingleValue>,Mono.Linker.Dataflow.TrimAnalysisAssignmentPattern)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "TrimAnalysisAssignmentPattern", "TrimAnalysisAssignmentPattern", "(ILLink.Shared.DataFlow.ValueSet<ILLink.Shared.DataFlow.SingleValue>,ILLink.Shared.DataFlow.ValueSet<ILLink.Shared.DataFlow.SingleValue>,Mono.Linker.MessageOrigin)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "TrimAnalysisAssignmentPattern", "op_Equality", "(Mono.Linker.Dataflow.TrimAnalysisAssignmentPattern,Mono.Linker.Dataflow.TrimAnalysisAssignmentPattern)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "TrimAnalysisAssignmentPattern", "op_Inequality", "(Mono.Linker.Dataflow.TrimAnalysisAssignmentPattern,Mono.Linker.Dataflow.TrimAnalysisAssignmentPattern)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "TrimAnalysisMethodCallPattern", "MarkAndProduceDiagnostics", "(Mono.Linker.Dataflow.ReflectionMarker,Mono.Linker.Steps.MarkStep,Mono.Linker.LinkContext)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "TrimAnalysisMethodCallPattern", "op_Equality", "(Mono.Linker.Dataflow.TrimAnalysisMethodCallPattern,Mono.Linker.Dataflow.TrimAnalysisMethodCallPattern)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "TrimAnalysisMethodCallPattern", "op_Inequality", "(Mono.Linker.Dataflow.TrimAnalysisMethodCallPattern,Mono.Linker.Dataflow.TrimAnalysisMethodCallPattern)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "TrimAnalysisPatternStore", "Add", "(Mono.Linker.Dataflow.TrimAnalysisAssignmentPattern)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "TrimAnalysisPatternStore", "Add", "(Mono.Linker.Dataflow.TrimAnalysisMethodCallPattern)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "TrimAnalysisPatternStore", "MarkAndProduceDiagnostics", "(Mono.Linker.Dataflow.ReflectionMarker,Mono.Linker.Steps.MarkStep)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "ValueBasicBlockPair", "Equals", "(Mono.Linker.Dataflow.ValueBasicBlockPair)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "ValueBasicBlockPair", "Equals", "(System.Object)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "ValueBasicBlockPair", "GetHashCode", "()", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "ValueBasicBlockPair", "ValueBasicBlockPair", "(ILLink.Shared.DataFlow.ValueSet<ILLink.Shared.DataFlow.SingleValue>,System.Int32)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "ValueBasicBlockPair", "get_BasicBlockIndex", "()", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "ValueBasicBlockPair", "get_Value", "()", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "ValueBasicBlockPair", "op_Equality", "(Mono.Linker.Dataflow.ValueBasicBlockPair,Mono.Linker.Dataflow.ValueBasicBlockPair)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "ValueBasicBlockPair", "op_Inequality", "(Mono.Linker.Dataflow.ValueBasicBlockPair,Mono.Linker.Dataflow.ValueBasicBlockPair)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "ValueNodeList", "Equals", "(System.Object)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "ValueNodeList", "GetHashCode", "()", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "ValueNodeList", "ValueNodeList", "(System.Collections.Generic.List<ILLink.Shared.DataFlow.ValueSet<ILLink.Shared.DataFlow.SingleValue>>)", "summary", "df-generated"]
      - ["Mono.Linker.Dataflow", "ValueNodeList", "ValueNodeList", "(System.Int32)", "summary", "df-generated"]
