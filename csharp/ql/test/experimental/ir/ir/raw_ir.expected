array.cs:
#    2| System.Void ArrayTest.one_dim_init_acc()
#    2|   Block 0
#    2|     v2_1(Void)             = EnterFunction            : 
#    2|     mu2_2(<unknown>)       = AliasedDefinition        : 
#    2|     r2_3(glval<ArrayTest>) = InitializeThis           : 
#    4|     r4_1(glval<Int32[]>)   = VariableAddress[one_dim] : 
#    4|     mu4_2(Int32[])         = Uninitialized[one_dim]   : &:r4_1
#    4|     r4_3(Int32)            = Constant[0]              : 
#    4|     r4_4(glval<Int32>)     = PointerAdd[4]            : r4_1, r4_3
#    4|     r4_5(Int32)            = Constant[100]            : 
#    4|     mu4_6(Int32)           = Store[?]                 : &:r4_4, r4_5
#    4|     r4_7(Int32)            = Constant[1]              : 
#    4|     r4_8(glval<Int32>)     = PointerAdd[4]            : r4_1, r4_7
#    4|     r4_9(Int32)            = Constant[101]            : 
#    4|     mu4_10(Int32)          = Store[?]                 : &:r4_8, r4_9
#    4|     r4_11(Int32)           = Constant[2]              : 
#    4|     r4_12(glval<Int32>)    = PointerAdd[4]            : r4_1, r4_11
#    4|     r4_13(Int32)           = Constant[102]            : 
#    4|     mu4_14(Int32)          = Store[?]                 : &:r4_12, r4_13
#    5|     r5_1(Int32)            = Constant[1000]           : 
#    5|     r5_2(glval<Int32[]>)   = VariableAddress[one_dim] : 
#    5|     r5_3(Int32[])          = ElementsAddress          : r5_2
#    5|     r5_4(Int32)            = Constant[0]              : 
#    5|     r5_5(Int32[])          = PointerAdd[4]            : r5_3, r5_4
#    5|     mu5_6(Int32)           = Store[?]                 : &:r5_5, r5_1
#    6|     r6_1(glval<Int32[]>)   = VariableAddress[one_dim] : 
#    6|     r6_2(Int32[])          = ElementsAddress          : r6_1
#    6|     r6_3(Int32)            = Constant[0]              : 
#    6|     r6_4(Int32[])          = PointerAdd[4]            : r6_2, r6_3
#    6|     r6_5(Int32)            = Load[?]                  : &:r6_4, ~m?
#    6|     r6_6(glval<Int32[]>)   = VariableAddress[one_dim] : 
#    6|     r6_7(Int32[])          = ElementsAddress          : r6_6
#    6|     r6_8(Int32)            = Constant[1]              : 
#    6|     r6_9(Int32[])          = PointerAdd[4]            : r6_7, r6_8
#    6|     mu6_10(Int32)          = Store[?]                 : &:r6_9, r6_5
#    7|     r7_1(Int32)            = Constant[1003]           : 
#    7|     r7_2(glval<Int32[]>)   = VariableAddress[one_dim] : 
#    7|     r7_3(Int32[])          = ElementsAddress          : r7_2
#    7|     r7_4(Int32)            = Constant[1]              : 
#    7|     r7_5(Int32[])          = PointerAdd[4]            : r7_3, r7_4
#    7|     mu7_6(Int32)           = Store[?]                 : &:r7_5, r7_1
#    9|     r9_1(glval<Int32>)     = VariableAddress[i]       : 
#    9|     r9_2(Int32)            = Constant[0]              : 
#    9|     mu9_3(Int32)           = Store[i]                 : &:r9_1, r9_2
#   10|     r10_1(Int32)           = Constant[0]              : 
#   10|     r10_2(glval<Int32[]>)  = VariableAddress[one_dim] : 
#   10|     r10_3(Int32[])         = ElementsAddress          : r10_2
#   10|     r10_4(glval<Int32>)    = VariableAddress[i]       : 
#   10|     r10_5(Int32)           = Load[i]                  : &:r10_4, ~m?
#   10|     r10_6(Int32[])         = PointerAdd[4]            : r10_3, r10_5
#   10|     mu10_7(Int32)          = Store[?]                 : &:r10_6, r10_1
#    2|     v2_4(Void)             = ReturnVoid               : 
#    2|     v2_5(Void)             = AliasedUse               : ~m?
#    2|     v2_6(Void)             = ExitFunction             : 

#   13| System.Void ArrayTest.twod_and_init_acc()
#   13|   Block 0
#   13|     v13_1(Void)             = EnterFunction      : 
#   13|     mu13_2(<unknown>)       = AliasedDefinition  : 
#   13|     r13_3(glval<ArrayTest>) = InitializeThis     : 
#   15|     r15_1(glval<Int32[,]>)  = VariableAddress[a] : 
#   15|     mu15_2(Int32[,])        = Uninitialized[a]   : &:r15_1
#   15|     r15_3(Int32)            = Constant[0]        : 
#   15|     r15_4(glval<null>)      = PointerAdd[8]      : r15_1, r15_3
#   15|     r15_5(Int32)            = Constant[0]        : 
#   15|     r15_6(glval<Int32>)     = PointerAdd[4]      : r15_4, r15_5
#   15|     r15_7(Int32)            = Constant[100]      : 
#   15|     mu15_8(Int32)           = Store[?]           : &:r15_6, r15_7
#   15|     r15_9(Int32)            = Constant[1]        : 
#   15|     r15_10(glval<Int32>)    = PointerAdd[4]      : r15_4, r15_9
#   15|     r15_11(Int32)           = Constant[101]      : 
#   15|     mu15_12(Int32)          = Store[?]           : &:r15_10, r15_11
#   15|     r15_13(Int32)           = Constant[1]        : 
#   15|     r15_14(glval<null>)     = PointerAdd[8]      : r15_1, r15_13
#   15|     r15_15(Int32)           = Constant[0]        : 
#   15|     r15_16(glval<Int32>)    = PointerAdd[4]      : r15_14, r15_15
#   15|     r15_17(Int32)           = Constant[102]      : 
#   15|     mu15_18(Int32)          = Store[?]           : &:r15_16, r15_17
#   15|     r15_19(Int32)           = Constant[1]        : 
#   15|     r15_20(glval<Int32>)    = PointerAdd[4]      : r15_14, r15_19
#   15|     r15_21(Int32)           = Constant[103]      : 
#   15|     mu15_22(Int32)          = Store[?]           : &:r15_20, r15_21
#   16|     r16_1(glval<Int32[,]>)  = VariableAddress[b] : 
#   16|     mu16_2(Int32[,])        = Uninitialized[b]   : &:r16_1
#   17|     r17_1(glval<Int32[,]>)  = VariableAddress[c] : 
#   17|     mu17_2(Int32[,])        = Uninitialized[c]   : &:r17_1
#   17|     r17_3(Int32)            = Constant[0]        : 
#   17|     r17_4(glval<null>)      = PointerAdd[8]      : r17_1, r17_3
#   17|     r17_5(Int32)            = Constant[0]        : 
#   17|     r17_6(glval<Int32>)     = PointerAdd[4]      : r17_4, r17_5
#   17|     r17_7(Int32)            = Constant[100]      : 
#   17|     mu17_8(Int32)           = Store[?]           : &:r17_6, r17_7
#   17|     r17_9(Int32)            = Constant[1]        : 
#   17|     r17_10(glval<Int32>)    = PointerAdd[4]      : r17_4, r17_9
#   17|     r17_11(Int32)           = Constant[101]      : 
#   17|     mu17_12(Int32)          = Store[?]           : &:r17_10, r17_11
#   17|     r17_13(Int32)           = Constant[1]        : 
#   17|     r17_14(glval<null>)     = PointerAdd[8]      : r17_1, r17_13
#   17|     r17_15(Int32)           = Constant[0]        : 
#   17|     r17_16(glval<Int32>)    = PointerAdd[4]      : r17_14, r17_15
#   17|     r17_17(Int32)           = Constant[102]      : 
#   17|     mu17_18(Int32)          = Store[?]           : &:r17_16, r17_17
#   17|     r17_19(Int32)           = Constant[1]        : 
#   17|     r17_20(glval<Int32>)    = PointerAdd[4]      : r17_14, r17_19
#   17|     r17_21(Int32)           = Constant[103]      : 
#   17|     mu17_22(Int32)          = Store[?]           : &:r17_20, r17_21
#   18|     r18_1(glval<Int32[,]>)  = VariableAddress[d] : 
#   18|     mu18_2(Int32[,])        = Uninitialized[d]   : &:r18_1
#   18|     r18_3(Int32)            = Constant[0]        : 
#   18|     r18_4(glval<null>)      = PointerAdd[8]      : r18_1, r18_3
#   18|     r18_5(Int32)            = Constant[0]        : 
#   18|     r18_6(glval<Int32>)     = PointerAdd[4]      : r18_4, r18_5
#   18|     r18_7(Int32)            = Constant[100]      : 
#   18|     mu18_8(Int32)           = Store[?]           : &:r18_6, r18_7
#   18|     r18_9(Int32)            = Constant[1]        : 
#   18|     r18_10(glval<Int32>)    = PointerAdd[4]      : r18_4, r18_9
#   18|     r18_11(Int32)           = Constant[101]      : 
#   18|     mu18_12(Int32)          = Store[?]           : &:r18_10, r18_11
#   18|     r18_13(Int32)           = Constant[1]        : 
#   18|     r18_14(glval<null>)     = PointerAdd[8]      : r18_1, r18_13
#   18|     r18_15(Int32)           = Constant[0]        : 
#   18|     r18_16(glval<Int32>)    = PointerAdd[4]      : r18_14, r18_15
#   18|     r18_17(Int32)           = Constant[102]      : 
#   18|     mu18_18(Int32)          = Store[?]           : &:r18_16, r18_17
#   18|     r18_19(Int32)           = Constant[1]        : 
#   18|     r18_20(glval<Int32>)    = PointerAdd[4]      : r18_14, r18_19
#   18|     r18_21(Int32)           = Constant[103]      : 
#   18|     mu18_22(Int32)          = Store[?]           : &:r18_20, r18_21
#   19|     r19_1(glval<Int32[,]>)  = VariableAddress[e] : 
#   19|     r19_2(glval<Int32[,]>)  = VariableAddress[a] : 
#   19|     r19_3(Int32[,])         = Load[a]            : &:r19_2, ~m?
#   19|     mu19_4(Int32[,])        = Store[e]           : &:r19_1, r19_3
#   20|     r20_1(Int32)            = Constant[-1]       : 
#   20|     r20_2(glval<Int32[,]>)  = VariableAddress[e] : 
#   20|     r20_3(Int32[,])         = ElementsAddress    : r20_2
#   20|     r20_4(Int32)            = Constant[1]        : 
#   20|     r20_5(Int32[,])         = PointerAdd[4]      : r20_3, r20_4
#   20|     r20_6(Int32[])          = ElementsAddress    : r20_5
#   20|     r20_7(Int32)            = Constant[1]        : 
#   20|     r20_8(Int32[])          = PointerAdd[4]      : r20_6, r20_7
#   20|     mu20_9(Int32)           = Store[?]           : &:r20_8, r20_1
#   13|     v13_4(Void)             = ReturnVoid         : 
#   13|     v13_5(Void)             = AliasedUse         : ~m?
#   13|     v13_6(Void)             = ExitFunction       : 

assignop.cs:
#    5| System.Void AssignOp.Main()
#    5|   Block 0
#    5|     v5_1(Void)          = EnterFunction      : 
#    5|     mu5_2(<unknown>)    = AliasedDefinition  : 
#    7|     r7_1(glval<Int32>)  = VariableAddress[a] : 
#    7|     r7_2(Int32)         = Constant[1]        : 
#    7|     mu7_3(Int32)        = Store[a]           : &:r7_1, r7_2
#    8|     r8_1(glval<Int32>)  = VariableAddress[c] : 
#    8|     r8_2(Int32)         = Constant[1]        : 
#    8|     mu8_3(Int32)        = Store[c]           : &:r8_1, r8_2
#   10|     r10_1(glval<Int32>) = VariableAddress[a] : 
#   10|     r10_2(Int32)        = Load[a]            : &:r10_1, ~m?
#   10|     r10_3(glval<Int32>) = VariableAddress[c] : 
#   10|     r10_4(Int32)        = Load[c]            : &:r10_3, ~m?
#   10|     r10_5(Int32)        = Add                : r10_4, r10_2
#   10|     mu10_6(Int32)       = Store[c]           : &:r10_3, r10_5
#   11|     r11_1(glval<Int32>) = VariableAddress[a] : 
#   11|     r11_2(Int32)        = Load[a]            : &:r11_1, ~m?
#   11|     r11_3(glval<Int32>) = VariableAddress[c] : 
#   11|     r11_4(Int32)        = Load[c]            : &:r11_3, ~m?
#   11|     r11_5(Int32)        = Sub                : r11_4, r11_2
#   11|     mu11_6(Int32)       = Store[c]           : &:r11_3, r11_5
#   12|     r12_1(glval<Int32>) = VariableAddress[a] : 
#   12|     r12_2(Int32)        = Load[a]            : &:r12_1, ~m?
#   12|     r12_3(glval<Int32>) = VariableAddress[c] : 
#   12|     r12_4(Int32)        = Load[c]            : &:r12_3, ~m?
#   12|     r12_5(Int32)        = Mul                : r12_4, r12_2
#   12|     mu12_6(Int32)       = Store[c]           : &:r12_3, r12_5
#   13|     r13_1(glval<Int32>) = VariableAddress[a] : 
#   13|     r13_2(Int32)        = Load[a]            : &:r13_1, ~m?
#   13|     r13_3(glval<Int32>) = VariableAddress[c] : 
#   13|     r13_4(Int32)        = Load[c]            : &:r13_3, ~m?
#   13|     r13_5(Int32)        = Div                : r13_4, r13_2
#   13|     mu13_6(Int32)       = Store[c]           : &:r13_3, r13_5
#   14|     r14_1(glval<Int32>) = VariableAddress[a] : 
#   14|     r14_2(Int32)        = Load[a]            : &:r14_1, ~m?
#   14|     r14_3(glval<Int32>) = VariableAddress[c] : 
#   14|     r14_4(Int32)        = Load[c]            : &:r14_3, ~m?
#   14|     r14_5(Int32)        = Rem                : r14_4, r14_2
#   14|     mu14_6(Int32)       = Store[c]           : &:r14_3, r14_5
#   15|     r15_1(Int32)        = Constant[2]        : 
#   15|     r15_2(glval<Int32>) = VariableAddress[c] : 
#   15|     r15_3(Int32)        = Load[c]            : &:r15_2, ~m?
#   15|     r15_4(Int32)        = ShiftLeft          : r15_3, r15_1
#   15|     mu15_5(Int32)       = Store[c]           : &:r15_2, r15_4
#   16|     r16_1(Int32)        = Constant[2]        : 
#   16|     r16_2(glval<Int32>) = VariableAddress[c] : 
#   16|     r16_3(Int32)        = Load[c]            : &:r16_2, ~m?
#   16|     r16_4(Int32)        = ShiftRight         : r16_3, r16_1
#   16|     mu16_5(Int32)       = Store[c]           : &:r16_2, r16_4
#   17|     r17_1(Int32)        = Constant[2]        : 
#   17|     r17_2(glval<Int32>) = VariableAddress[c] : 
#   17|     r17_3(Int32)        = Load[c]            : &:r17_2, ~m?
#   17|     r17_4(Int32)        = BitAnd             : r17_3, r17_1
#   17|     mu17_5(Int32)       = Store[c]           : &:r17_2, r17_4
#   18|     r18_1(Int32)        = Constant[2]        : 
#   18|     r18_2(glval<Int32>) = VariableAddress[c] : 
#   18|     r18_3(Int32)        = Load[c]            : &:r18_2, ~m?
#   18|     r18_4(Int32)        = BitXor             : r18_3, r18_1
#   18|     mu18_5(Int32)       = Store[c]           : &:r18_2, r18_4
#   19|     r19_1(Int32)        = Constant[2]        : 
#   19|     r19_2(glval<Int32>) = VariableAddress[c] : 
#   19|     r19_3(Int32)        = Load[c]            : &:r19_2, ~m?
#   19|     r19_4(Int32)        = BitOr              : r19_3, r19_1
#   19|     mu19_5(Int32)       = Store[c]           : &:r19_2, r19_4
#   20|     r20_1(Int32)        = Constant[2]        : 
#   20|     r20_2(glval<Int32>) = VariableAddress[c] : 
#   20|     r20_3(Int32)        = Load[c]            : &:r20_2, ~m?
#   20|     r20_4(Int32)        = UnsignedShiftRight : r20_3, r20_1
#   20|     mu20_5(Int32)       = Store[c]           : &:r20_2, r20_4
#    5|     v5_3(Void)          = ReturnVoid         : 
#    5|     v5_4(Void)          = AliasedUse         : ~m?
#    5|     v5_5(Void)          = ExitFunction       : 

casts.cs:
#   11| System.Void Casts.Main()
#   11|   Block 0
#   11|     v11_1(Void)           = EnterFunction            : 
#   11|     mu11_2(<unknown>)     = AliasedDefinition        : 
#   13|     r13_1(glval<Casts_A>) = VariableAddress[Aobj]    : 
#   13|     r13_2(Casts_A)        = NewObj                   : 
#   13|     r13_3(<funcaddr>)     = FunctionAddress[Casts_A] : 
#   13|     v13_4(Void)           = Call[Casts_A]            : func:r13_3, this:r13_2
#   13|     mu13_5(<unknown>)     = ^CallSideEffect          : ~m?
#   13|     mu13_6(Casts_A)       = Store[Aobj]              : &:r13_1, r13_2
#   14|     r14_1(glval<Casts_B>) = VariableAddress[bobjCE]  : 
#   14|     r14_2(glval<Casts_A>) = VariableAddress[Aobj]    : 
#   14|     r14_3(Casts_A)        = Load[Aobj]               : &:r14_2, ~m?
#   14|     r14_4(Casts_B)        = CheckedConvertOrThrow    : r14_3
#   14|     mu14_5(Casts_B)       = Store[bobjCE]            : &:r14_1, r14_4
#   15|     r15_1(glval<Casts_B>) = VariableAddress[bobjAS]  : 
#   15|     r15_2(glval<Casts_A>) = VariableAddress[Aobj]    : 
#   15|     r15_3(Casts_A)        = Load[Aobj]               : &:r15_2, ~m?
#   15|     r15_4(Casts_B)        = CheckedConvertOrNull     : r15_3
#   15|     mu15_5(Casts_B)       = Store[bobjAS]            : &:r15_1, r15_4
#   11|     v11_3(Void)           = ReturnVoid               : 
#   11|     v11_4(Void)           = AliasedUse               : ~m?
#   11|     v11_5(Void)           = ExitFunction             : 

collections.cs:
#   11| System.Void Collections.Main()
#   11|   Block 0
#   11|     v11_1(Void)                             = EnterFunction               : 
#   11|     mu11_2(<unknown>)                       = AliasedDefinition           : 
#   13|     r13_1(glval<Dictionary<Int32,MyClass>>) = VariableAddress[dict]       : 
#   13|     r13_2(Dictionary<Int32,MyClass>)        = NewObj                      : 
#   13|     r13_3(<funcaddr>)                       = FunctionAddress[Dictionary] : 
#   13|     v13_4(Void)                             = Call[Dictionary]            : func:r13_3, this:r13_2
#   13|     mu13_5(<unknown>)                       = ^CallSideEffect             : ~m?
#   15|     r15_1(<funcaddr>)                       = FunctionAddress[Add]        : 
#   15|     r15_2(Int32)                            = Constant[0]                 : 
#   15|     r15_3(MyClass)                          = NewObj                      : 
#   15|     r15_4(<funcaddr>)                       = FunctionAddress[MyClass]    : 
#   15|     v15_5(Void)                             = Call[MyClass]               : func:r15_4, this:r15_3
#   15|     mu15_6(<unknown>)                       = ^CallSideEffect             : ~m?
#   15|     r15_7(String)                           = StringConstant["Hello"]     : 
#   15|     r15_8(glval<String>)                    = FieldAddress[a]             : r15_3
#   15|     mu15_9(String)                          = Store[?]                    : &:r15_8, r15_7
#   15|     r15_10(String)                          = StringConstant["World"]     : 
#   15|     r15_11(glval<String>)                   = FieldAddress[b]             : r15_3
#   15|     mu15_12(String)                         = Store[?]                    : &:r15_11, r15_10
#   15|     v15_13(Void)                            = Call[Add]                   : func:r15_1, this:r13_2, 0:r15_2, 1:r15_3
#   15|     mu15_14(<unknown>)                      = ^CallSideEffect             : ~m?
#   16|     r16_1(<funcaddr>)                       = FunctionAddress[Add]        : 
#   16|     r16_2(Int32)                            = Constant[1]                 : 
#   16|     r16_3(MyClass)                          = NewObj                      : 
#   16|     r16_4(<funcaddr>)                       = FunctionAddress[MyClass]    : 
#   16|     v16_5(Void)                             = Call[MyClass]               : func:r16_4, this:r16_3
#   16|     mu16_6(<unknown>)                       = ^CallSideEffect             : ~m?
#   16|     r16_7(String)                           = StringConstant["Foo"]       : 
#   16|     r16_8(glval<String>)                    = FieldAddress[a]             : r16_3
#   16|     mu16_9(String)                          = Store[?]                    : &:r16_8, r16_7
#   16|     r16_10(String)                          = StringConstant["Bar"]       : 
#   16|     r16_11(glval<String>)                   = FieldAddress[b]             : r16_3
#   16|     mu16_12(String)                         = Store[?]                    : &:r16_11, r16_10
#   16|     v16_13(Void)                            = Call[Add]                   : func:r16_1, this:r13_2, 0:r16_2, 1:r16_3
#   16|     mu16_14(<unknown>)                      = ^CallSideEffect             : ~m?
#   13|     mu13_6(Dictionary<Int32,MyClass>)       = Store[dict]                 : &:r13_1, r13_2
#   11|     v11_3(Void)                             = ReturnVoid                  : 
#   11|     v11_4(Void)                             = AliasedUse                  : ~m?
#   11|     v11_5(Void)                             = ExitFunction                : 

constructor_init.cs:
#    5| System.Void BaseClass..ctor()
#    5|   Block 0
#    5|     v5_1(Void)             = EnterFunction               : 
#    5|     mu5_2(<unknown>)       = AliasedDefinition           : 
#    5|     r5_3(glval<BaseClass>) = InitializeThis              : 
#    5|     r5_4(glval<Object>)    = Convert[BaseClass : Object] : r5_3
#    5|     r5_5(<funcaddr>)       = FunctionAddress[Object]     : 
#    5|     v5_6(Void)             = Call[Object]                : func:r5_5, this:r5_4
#    5|     mu5_7(<unknown>)       = ^CallSideEffect             : ~m?
#    6|     v6_1(Void)             = NoOp                        : 
#    5|     v5_8(Void)             = ReturnVoid                  : 
#    5|     v5_9(Void)             = AliasedUse                  : ~m?
#    5|     v5_10(Void)            = ExitFunction                : 

#    9| System.Void BaseClass..ctor(System.Int32)
#    9|   Block 0
#    9|     v9_1(Void)             = EnterFunction               : 
#    9|     mu9_2(<unknown>)       = AliasedDefinition           : 
#    9|     r9_3(glval<BaseClass>) = InitializeThis              : 
#    9|     r9_4(glval<Int32>)     = VariableAddress[i]          : 
#    9|     mu9_5(Int32)           = InitializeParameter[i]      : &:r9_4
#    9|     r9_6(glval<Object>)    = Convert[BaseClass : Object] : r9_3
#    9|     r9_7(<funcaddr>)       = FunctionAddress[Object]     : 
#    9|     v9_8(Void)             = Call[Object]                : func:r9_7, this:r9_6
#    9|     mu9_9(<unknown>)       = ^CallSideEffect             : ~m?
#   11|     r11_1(glval<Int32>)    = VariableAddress[i]          : 
#   11|     r11_2(Int32)           = Load[i]                     : &:r11_1, ~m?
#   11|     r11_3(BaseClass)       = CopyValue                   : r9_3
#   11|     r11_4(glval<Int32>)    = FieldAddress[num]           : r11_3
#   11|     mu11_5(Int32)          = Store[?]                    : &:r11_4, r11_2
#    9|     v9_10(Void)            = ReturnVoid                  : 
#    9|     v9_11(Void)            = AliasedUse                  : ~m?
#    9|     v9_12(Void)            = ExitFunction                : 

#   17| System.Void DerivedClass..ctor()
#   17|   Block 0
#   17|     v17_1(Void)                = EnterFunction                     : 
#   17|     mu17_2(<unknown>)          = AliasedDefinition                 : 
#   17|     r17_3(glval<DerivedClass>) = InitializeThis                    : 
#   17|     r17_4(glval<BaseClass>)    = Convert[DerivedClass : BaseClass] : r17_3
#   17|     r17_5(<funcaddr>)          = FunctionAddress[BaseClass]        : 
#   17|     v17_6(Void)                = Call[BaseClass]                   : func:r17_5, this:r17_4
#   17|     mu17_7(<unknown>)          = ^CallSideEffect                   : ~m?
#   18|     v18_1(Void)                = NoOp                              : 
#   17|     v17_8(Void)                = ReturnVoid                        : 
#   17|     v17_9(Void)                = AliasedUse                        : ~m?
#   17|     v17_10(Void)               = ExitFunction                      : 

#   21| System.Void DerivedClass..ctor(System.Int32)
#   21|   Block 0
#   21|     v21_1(Void)                = EnterFunction                     : 
#   21|     mu21_2(<unknown>)          = AliasedDefinition                 : 
#   21|     r21_3(glval<DerivedClass>) = InitializeThis                    : 
#   21|     r21_4(glval<Int32>)        = VariableAddress[i]                : 
#   21|     mu21_5(Int32)              = InitializeParameter[i]            : &:r21_4
#   21|     r21_6(glval<BaseClass>)    = Convert[DerivedClass : BaseClass] : r21_3
#   21|     r21_7(<funcaddr>)          = FunctionAddress[BaseClass]        : 
#   21|     r21_8(glval<Int32>)        = VariableAddress[i]                : 
#   21|     r21_9(Int32)               = Load[i]                           : &:r21_8, ~m?
#   21|     v21_10(Void)               = Call[BaseClass]                   : func:r21_7, this:r21_6, 0:r21_9
#   21|     mu21_11(<unknown>)         = ^CallSideEffect                   : ~m?
#   22|     v22_1(Void)                = NoOp                              : 
#   21|     v21_12(Void)               = ReturnVoid                        : 
#   21|     v21_13(Void)               = AliasedUse                        : ~m?
#   21|     v21_14(Void)               = ExitFunction                      : 

#   25| System.Void DerivedClass..ctor(System.Int32,System.Int32)
#   25|   Block 0
#   25|     v25_1(Void)                = EnterFunction                 : 
#   25|     mu25_2(<unknown>)          = AliasedDefinition             : 
#   25|     r25_3(glval<DerivedClass>) = InitializeThis                : 
#   25|     r25_4(glval<Int32>)        = VariableAddress[i]            : 
#   25|     mu25_5(Int32)              = InitializeParameter[i]        : &:r25_4
#   25|     r25_6(glval<Int32>)        = VariableAddress[j]            : 
#   25|     mu25_7(Int32)              = InitializeParameter[j]        : &:r25_6
#   25|     r25_8(<funcaddr>)          = FunctionAddress[DerivedClass] : 
#   25|     r25_9(glval<Int32>)        = VariableAddress[i]            : 
#   25|     r25_10(Int32)              = Load[i]                       : &:r25_9, ~m?
#   25|     v25_11(Void)               = Call[DerivedClass]            : func:r25_8, this:r25_3, 0:r25_10
#   25|     mu25_12(<unknown>)         = ^CallSideEffect               : ~m?
#   26|     v26_1(Void)                = NoOp                          : 
#   25|     v25_13(Void)               = ReturnVoid                    : 
#   25|     v25_14(Void)               = AliasedUse                    : ~m?
#   25|     v25_15(Void)               = ExitFunction                  : 

#   29| System.Void DerivedClass.Main()
#   29|   Block 0
#   29|     v29_1(Void)                = EnterFunction                 : 
#   29|     mu29_2(<unknown>)          = AliasedDefinition             : 
#   31|     r31_1(glval<DerivedClass>) = VariableAddress[obj1]         : 
#   31|     r31_2(DerivedClass)        = NewObj                        : 
#   31|     r31_3(<funcaddr>)          = FunctionAddress[DerivedClass] : 
#   31|     v31_4(Void)                = Call[DerivedClass]            : func:r31_3, this:r31_2
#   31|     mu31_5(<unknown>)          = ^CallSideEffect               : ~m?
#   31|     mu31_6(DerivedClass)       = Store[obj1]                   : &:r31_1, r31_2
#   32|     r32_1(glval<DerivedClass>) = VariableAddress[obj2]         : 
#   32|     r32_2(DerivedClass)        = NewObj                        : 
#   32|     r32_3(<funcaddr>)          = FunctionAddress[DerivedClass] : 
#   32|     r32_4(Int32)               = Constant[1]                   : 
#   32|     v32_5(Void)                = Call[DerivedClass]            : func:r32_3, this:r32_2, 0:r32_4
#   32|     mu32_6(<unknown>)          = ^CallSideEffect               : ~m?
#   32|     mu32_7(DerivedClass)       = Store[obj2]                   : &:r32_1, r32_2
#   33|     r33_1(glval<DerivedClass>) = VariableAddress[obj3]         : 
#   33|     r33_2(DerivedClass)        = NewObj                        : 
#   33|     r33_3(<funcaddr>)          = FunctionAddress[DerivedClass] : 
#   33|     r33_4(Int32)               = Constant[1]                   : 
#   33|     r33_5(Int32)               = Constant[2]                   : 
#   33|     v33_6(Void)                = Call[DerivedClass]            : func:r33_3, this:r33_2, 0:r33_4, 1:r33_5
#   33|     mu33_7(<unknown>)          = ^CallSideEffect               : ~m?
#   33|     mu33_8(DerivedClass)       = Store[obj3]                   : &:r33_1, r33_2
#   29|     v29_3(Void)                = ReturnVoid                    : 
#   29|     v29_4(Void)                = AliasedUse                    : ~m?
#   29|     v29_5(Void)                = ExitFunction                  : 

crement.cs:
#    3| System.Void CrementOpsTest.Main()
#    3|   Block 0
#    3|     v3_1(Void)         = EnterFunction      : 
#    3|     mu3_2(<unknown>)   = AliasedDefinition  : 
#    5|     r5_1(glval<Int32>) = VariableAddress[x] : 
#    5|     r5_2(Int32)        = Constant[10]       : 
#    5|     mu5_3(Int32)       = Store[x]           : &:r5_1, r5_2
#    6|     r6_1(glval<Int32>) = VariableAddress[a] : 
#    6|     r6_2(glval<Int32>) = VariableAddress[x] : 
#    6|     r6_3(Int32)        = Load[x]            : &:r6_2, ~m?
#    6|     r6_4(Int32)        = Constant[1]        : 
#    6|     r6_5(Int32)        = Add                : r6_3, r6_4
#    6|     mu6_6(Int32)       = Store[x]           : &:r6_2, r6_5
#    6|     mu6_7(Int32)       = Store[a]           : &:r6_1, r6_3
#    7|     r7_1(glval<Int32>) = VariableAddress[b] : 
#    7|     r7_2(glval<Int32>) = VariableAddress[x] : 
#    7|     r7_3(Int32)        = Load[x]            : &:r7_2, ~m?
#    7|     r7_4(Int32)        = Constant[1]        : 
#    7|     r7_5(Int32)        = Sub                : r7_3, r7_4
#    7|     mu7_6(Int32)       = Store[x]           : &:r7_2, r7_5
#    7|     mu7_7(Int32)       = Store[b]           : &:r7_1, r7_5
#    8|     r8_1(glval<Int32>) = VariableAddress[c] : 
#    8|     r8_2(glval<Int32>) = VariableAddress[x] : 
#    8|     r8_3(Int32)        = Load[x]            : &:r8_2, ~m?
#    8|     r8_4(Int32)        = Constant[1]        : 
#    8|     r8_5(Int32)        = Add                : r8_3, r8_4
#    8|     mu8_6(Int32)       = Store[x]           : &:r8_2, r8_5
#    8|     mu8_7(Int32)       = Store[c]           : &:r8_1, r8_5
#    9|     r9_1(glval<Int32>) = VariableAddress[x] : 
#    9|     r9_2(Int32)        = Load[x]            : &:r9_1, ~m?
#    9|     r9_3(Int32)        = Constant[1]        : 
#    9|     r9_4(Int32)        = Sub                : r9_2, r9_3
#    9|     mu9_5(Int32)       = Store[x]           : &:r9_1, r9_4
#    9|     r9_6(glval<Int32>) = VariableAddress[x] : 
#    9|     mu9_7(Int32)       = Store[x]           : &:r9_6, r9_2
#    3|     v3_3(Void)         = ReturnVoid         : 
#    3|     v3_4(Void)         = AliasedUse         : ~m?
#    3|     v3_5(Void)         = ExitFunction       : 

delegates.cs:
#    6| System.Int32 Delegates.returns(System.Int32)
#    6|   Block 0
#    6|     v6_1(Void)         = EnterFunction            : 
#    6|     mu6_2(<unknown>)   = AliasedDefinition        : 
#    6|     r6_3(glval<Int32>) = VariableAddress[ret]     : 
#    6|     mu6_4(Int32)       = InitializeParameter[ret] : &:r6_3
#    8|     r8_1(glval<Int32>) = VariableAddress[#return] : 
#    8|     r8_2(glval<Int32>) = VariableAddress[ret]     : 
#    8|     r8_3(Int32)        = Load[ret]                : &:r8_2, ~m?
#    8|     mu8_4(Int32)       = Store[#return]           : &:r8_1, r8_3
#    6|     r6_5(glval<Int32>) = VariableAddress[#return] : 
#    6|     v6_6(Void)         = ReturnValue              : &:r6_5, ~m?
#    6|     v6_7(Void)         = AliasedUse               : ~m?
#    6|     v6_8(Void)         = ExitFunction             : 

#   11| System.Void Delegates.Main()
#   11|   Block 0
#   11|     v11_1(Void)       = EnterFunction            : 
#   11|     mu11_2(<unknown>) = AliasedDefinition        : 
#   12|     r12_1(glval<Del>) = VariableAddress[del1]    : 
#   12|     r12_2(Del)        = NewObj                   : 
#   12|     r12_3(<funcaddr>) = FunctionAddress[Del]     : 
#   12|     r12_4(glval<Del>) = FunctionAddress[returns] : 
#   12|     v12_5(Void)       = Call[Del]                : func:r12_3, this:r12_2, 0:r12_4
#   12|     mu12_6(<unknown>) = ^CallSideEffect          : ~m?
#   12|     mu12_7(Del)       = Store[del1]              : &:r12_1, r12_2
#   13|     r13_1(glval<Del>) = VariableAddress[del1]    : 
#   13|     r13_2(Del)        = Load[del1]               : &:r13_1, ~m?
#   13|     r13_3(<funcaddr>) = FunctionAddress[Invoke]  : 
#   13|     r13_4(Int32)      = Constant[5]              : 
#   13|     v13_5(Void)       = Call[Invoke]             : func:r13_3, this:r13_2, 0:r13_4
#   13|     mu13_6(<unknown>) = ^CallSideEffect          : ~m?
#   11|     v11_3(Void)       = ReturnVoid               : 
#   11|     v11_4(Void)       = AliasedUse               : ~m?
#   11|     v11_5(Void)       = ExitFunction             : 

events.cs:
#    8| System.Void Events..ctor()
#    8|   Block 0
#    8|     v8_1(Void)          = EnterFunction            : 
#    8|     mu8_2(<unknown>)    = AliasedDefinition        : 
#    8|     r8_3(glval<Events>) = InitializeThis           : 
#    8|     r8_4(glval<Object>) = Convert[Events : Object] : r8_3
#    8|     r8_5(<funcaddr>)    = FunctionAddress[Object]  : 
#    8|     v8_6(Void)          = Call[Object]             : func:r8_5, this:r8_4
#    8|     mu8_7(<unknown>)    = ^CallSideEffect          : ~m?
#   10|     r10_1(MyDel)        = NewObj                   : 
#   10|     r10_2(<funcaddr>)   = FunctionAddress[MyDel]   : 
#   10|     r10_3(glval<MyDel>) = FunctionAddress[Fun]     : 
#   10|     v10_4(Void)         = Call[MyDel]              : func:r10_2, this:r10_1, 0:r10_3
#   10|     mu10_5(<unknown>)   = ^CallSideEffect          : ~m?
#   10|     r10_6(Events)       = CopyValue                : r8_3
#   10|     r10_7(glval<MyDel>) = FieldAddress[Inst]       : r10_6
#   10|     mu10_8(MyDel)       = Store[?]                 : &:r10_7, r10_1
#    8|     v8_8(Void)          = ReturnVoid               : 
#    8|     v8_9(Void)          = AliasedUse               : ~m?
#    8|     v8_10(Void)         = ExitFunction             : 

#   13| System.Void Events.AddEvent()
#   13|   Block 0
#   13|     v13_1(Void)          = EnterFunction                : 
#   13|     mu13_2(<unknown>)    = AliasedDefinition            : 
#   13|     r13_3(glval<Events>) = InitializeThis               : 
#   15|     r15_1(Events)        = CopyValue                    : r13_3
#   15|     r15_2(<funcaddr>)    = FunctionAddress[add_MyEvent] : 
#   15|     r15_3(Events)        = CopyValue                    : r13_3
#   15|     r15_4(glval<MyDel>)  = FieldAddress[Inst]           : r15_3
#   15|     r15_5(MyDel)         = Load[?]                      : &:r15_4, ~m?
#   15|     v15_6(Void)          = Call[add_MyEvent]            : func:r15_2, this:r15_1, 0:r15_5
#   15|     mu15_7(<unknown>)    = ^CallSideEffect              : ~m?
#   13|     v13_4(Void)          = ReturnVoid                   : 
#   13|     v13_5(Void)          = AliasedUse                   : ~m?
#   13|     v13_6(Void)          = ExitFunction                 : 

#   18| System.Void Events.RemoveEvent()
#   18|   Block 0
#   18|     v18_1(Void)          = EnterFunction                   : 
#   18|     mu18_2(<unknown>)    = AliasedDefinition               : 
#   18|     r18_3(glval<Events>) = InitializeThis                  : 
#   20|     r20_1(Events)        = CopyValue                       : r18_3
#   20|     r20_2(<funcaddr>)    = FunctionAddress[remove_MyEvent] : 
#   20|     r20_3(Events)        = CopyValue                       : r18_3
#   20|     r20_4(glval<MyDel>)  = FieldAddress[Inst]              : r20_3
#   20|     r20_5(MyDel)         = Load[?]                         : &:r20_4, ~m?
#   20|     v20_6(Void)          = Call[remove_MyEvent]            : func:r20_2, this:r20_1, 0:r20_5
#   20|     mu20_7(<unknown>)    = ^CallSideEffect                 : ~m?
#   18|     v18_4(Void)          = ReturnVoid                      : 
#   18|     v18_5(Void)          = AliasedUse                      : ~m?
#   18|     v18_6(Void)          = ExitFunction                    : 

#   23| System.String Events.Fun(System.String)
#   23|   Block 0
#   23|     v23_1(Void)          = EnterFunction            : 
#   23|     mu23_2(<unknown>)    = AliasedDefinition        : 
#   23|     r23_3(glval<Events>) = InitializeThis           : 
#   23|     r23_4(glval<String>) = VariableAddress[str]     : 
#   23|     mu23_5(String)       = InitializeParameter[str] : &:r23_4
#   25|     r25_1(glval<String>) = VariableAddress[#return] : 
#   25|     r25_2(glval<String>) = VariableAddress[str]     : 
#   25|     r25_3(String)        = Load[str]                : &:r25_2, ~m?
#   25|     mu25_4(String)       = Store[#return]           : &:r25_1, r25_3
#   23|     r23_6(glval<String>) = VariableAddress[#return] : 
#   23|     v23_7(Void)          = ReturnValue              : &:r23_6, ~m?
#   23|     v23_8(Void)          = AliasedUse               : ~m?
#   23|     v23_9(Void)          = ExitFunction             : 

#   28| System.Void Events.Main(System.String[])
#   28|   Block 0
#   28|     v28_1(Void)            = EnterFunction                : 
#   28|     mu28_2(<unknown>)      = AliasedDefinition            : 
#   28|     r28_3(glval<String[]>) = VariableAddress[args]        : 
#   28|     mu28_4(String[])       = InitializeParameter[args]    : &:r28_3
#   30|     r30_1(glval<Events>)   = VariableAddress[obj]         : 
#   30|     r30_2(Events)          = NewObj                       : 
#   30|     r30_3(<funcaddr>)      = FunctionAddress[Events]      : 
#   30|     v30_4(Void)            = Call[Events]                 : func:r30_3, this:r30_2
#   30|     mu30_5(<unknown>)      = ^CallSideEffect              : ~m?
#   30|     mu30_6(Events)         = Store[obj]                   : &:r30_1, r30_2
#   31|     r31_1(glval<Events>)   = VariableAddress[obj]         : 
#   31|     r31_2(Events)          = Load[obj]                    : &:r31_1, ~m?
#   31|     r31_3(<funcaddr>)      = FunctionAddress[AddEvent]    : 
#   31|     v31_4(Void)            = Call[AddEvent]               : func:r31_3, this:r31_2
#   31|     mu31_5(<unknown>)      = ^CallSideEffect              : ~m?
#   32|     r32_1(glval<String>)   = VariableAddress[result]      : 
#   32|     r32_2(glval<Events>)   = VariableAddress[obj]         : 
#   32|     r32_3(Events)          = Load[obj]                    : &:r32_2, ~m?
#   32|     r32_4(<funcaddr>)      = FunctionAddress[Invoke]      : 
#   32|     r32_5(String)          = StringConstant["string"]     : 
#   32|     v32_6(Void)            = Call[Invoke]                 : func:r32_4, this:r32_3, 0:r32_5
#   32|     mu32_7(<unknown>)      = ^CallSideEffect              : ~m?
#   32|     mu32_8(String)         = Store[result]                : &:r32_1, v32_6
#   33|     r33_1(glval<Events>)   = VariableAddress[obj]         : 
#   33|     r33_2(Events)          = Load[obj]                    : &:r33_1, ~m?
#   33|     r33_3(<funcaddr>)      = FunctionAddress[RemoveEvent] : 
#   33|     v33_4(Void)            = Call[RemoveEvent]            : func:r33_3, this:r33_2
#   33|     mu33_5(<unknown>)      = ^CallSideEffect              : ~m?
#   28|     v28_5(Void)            = ReturnVoid                   : 
#   28|     v28_6(Void)            = AliasedUse                   : ~m?
#   28|     v28_7(Void)            = ExitFunction                 : 

foreach.cs:
#    4| System.Void ForEach.Main()
#    4|   Block 0
#    4|     v4_1(Void)               = EnterFunction                  : 
#    4|     mu4_2(<unknown>)         = AliasedDefinition              : 
#    5|     r5_1(glval<Int32[]>)     = VariableAddress[a_array]       : 
#    5|     mu5_2(Int32[])           = Uninitialized[a_array]         : &:r5_1
#    5|     r5_3(Int32)              = Constant[0]                    : 
#    5|     r5_4(glval<Int32>)       = PointerAdd[4]                  : r5_1, r5_3
#    5|     r5_5(Int32)              = Constant[1]                    : 
#    5|     mu5_6(Int32)             = Store[?]                       : &:r5_4, r5_5
#    5|     r5_7(Int32)              = Constant[1]                    : 
#    5|     r5_8(glval<Int32>)       = PointerAdd[4]                  : r5_1, r5_7
#    5|     r5_9(Int32)              = Constant[2]                    : 
#    5|     mu5_10(Int32)            = Store[?]                       : &:r5_8, r5_9
#    5|     r5_11(Int32)             = Constant[2]                    : 
#    5|     r5_12(glval<Int32>)      = PointerAdd[4]                  : r5_1, r5_11
#    5|     r5_13(Int32)             = Constant[3]                    : 
#    5|     mu5_14(Int32)            = Store[?]                       : &:r5_12, r5_13
#    5|     r5_15(Int32)             = Constant[3]                    : 
#    5|     r5_16(glval<Int32>)      = PointerAdd[4]                  : r5_1, r5_15
#    5|     r5_17(Int32)             = Constant[4]                    : 
#    5|     mu5_18(Int32)            = Store[?]                       : &:r5_16, r5_17
#    5|     r5_19(Int32)             = Constant[4]                    : 
#    5|     r5_20(glval<Int32>)      = PointerAdd[4]                  : r5_1, r5_19
#    5|     r5_21(Int32)             = Constant[5]                    : 
#    5|     mu5_22(Int32)            = Store[?]                       : &:r5_20, r5_21
#    5|     r5_23(Int32)             = Constant[5]                    : 
#    5|     r5_24(glval<Int32>)      = PointerAdd[4]                  : r5_1, r5_23
#    5|     r5_25(Int32)             = Constant[6]                    : 
#    5|     mu5_26(Int32)            = Store[?]                       : &:r5_24, r5_25
#    5|     r5_27(Int32)             = Constant[6]                    : 
#    5|     r5_28(glval<Int32>)      = PointerAdd[4]                  : r5_1, r5_27
#    5|     r5_29(Int32)             = Constant[7]                    : 
#    5|     mu5_30(Int32)            = Store[?]                       : &:r5_28, r5_29
#    7|     r7_1(glval<IEnumerator>) = VariableAddress[#temp7:9]      : 
#    7|     r7_2(glval<Int32[]>)     = VariableAddress[a_array]       : 
#    7|     r7_3(Int32[])            = Load[a_array]                  : &:r7_2, ~m?
#    7|     r7_4(<funcaddr>)         = FunctionAddress[GetEnumerator] : 
#    7|     r7_5(IEnumerator)        = Call[GetEnumerator]            : func:r7_4, this:r7_3
#    7|     mu7_6(<unknown>)         = ^CallSideEffect                : ~m?
#    7|     mu7_7(IEnumerator)       = Store[#temp7:9]                : &:r7_1, r7_5
#-----|   Goto -> Block 1

#    7|   Block 1
#    7|     r7_8(glval<IEnumerator>) = VariableAddress[#temp7:9] : 
#    7|     r7_9(IEnumerator)        = Load[#temp7:9]            : &:r7_8, ~m?
#    7|     r7_10(<funcaddr>)        = FunctionAddress[MoveNext] : 
#    7|     r7_11(Boolean)           = Call[MoveNext]            : func:r7_10, this:r7_9
#    7|     mu7_12(<unknown>)        = ^CallSideEffect           : ~m?
#    7|     v7_13(Void)              = ConditionalBranch         : r7_11
#-----|   False -> Block 3
#-----|   True -> Block 2

#    7|   Block 2
#    7|     r7_14(glval<Int32>)       = VariableAddress[items]       : 
#    7|     r7_15(glval<IEnumerator>) = VariableAddress[#temp7:9]    : 
#    7|     r7_16(IEnumerator)        = Load[#temp7:9]               : &:r7_15, ~m?
#    7|     r7_17(<funcaddr>)         = FunctionAddress[get_Current] : 
#    7|     r7_18(Int32)              = Call[get_Current]            : func:r7_17, this:r7_16
#    7|     mu7_19(<unknown>)         = ^CallSideEffect              : ~m?
#    7|     mu7_20(Int32)             = Store[items]                 : &:r7_14, r7_18
#    9|     r9_1(glval<Int32>)        = VariableAddress[x]           : 
#    9|     r9_2(glval<Int32>)        = VariableAddress[items]       : 
#    9|     r9_3(Int32)               = Load[items]                  : &:r9_2, ~m?
#    9|     mu9_4(Int32)              = Store[x]                     : &:r9_1, r9_3
#-----|   Goto (back edge) -> Block 1

#    7|   Block 3
#    7|     r7_21(glval<IEnumerator>) = VariableAddress[#temp7:9] : 
#    7|     r7_22(IEnumerator)        = Load[#temp7:9]            : &:r7_21, ~m?
#    7|     r7_23(<funcaddr>)         = FunctionAddress[Dispose]  : 
#    7|     v7_24(Void)               = Call[Dispose]             : func:r7_23, this:r7_22
#    7|     mu7_25(<unknown>)         = ^CallSideEffect           : ~m?
#    4|     v4_3(Void)                = ReturnVoid                : 
#    4|     v4_4(Void)                = AliasedUse                : ~m?
#    4|     v4_5(Void)                = ExitFunction              : 

func_with_param_call.cs:
#    5| System.Int32 test_call_with_param.f(System.Int32,System.Int32)
#    5|   Block 0
#    5|     v5_1(Void)         = EnterFunction            : 
#    5|     mu5_2(<unknown>)   = AliasedDefinition        : 
#    5|     r5_3(glval<Int32>) = VariableAddress[x]       : 
#    5|     mu5_4(Int32)       = InitializeParameter[x]   : &:r5_3
#    5|     r5_5(glval<Int32>) = VariableAddress[y]       : 
#    5|     mu5_6(Int32)       = InitializeParameter[y]   : &:r5_5
#    7|     r7_1(glval<Int32>) = VariableAddress[#return] : 
#    7|     r7_2(glval<Int32>) = VariableAddress[x]       : 
#    7|     r7_3(Int32)        = Load[x]                  : &:r7_2, ~m?
#    7|     r7_4(glval<Int32>) = VariableAddress[y]       : 
#    7|     r7_5(Int32)        = Load[y]                  : &:r7_4, ~m?
#    7|     r7_6(Int32)        = Add                      : r7_3, r7_5
#    7|     mu7_7(Int32)       = Store[#return]           : &:r7_1, r7_6
#    5|     r5_7(glval<Int32>) = VariableAddress[#return] : 
#    5|     v5_8(Void)         = ReturnValue              : &:r5_7, ~m?
#    5|     v5_9(Void)         = AliasedUse               : ~m?
#    5|     v5_10(Void)        = ExitFunction             : 

#   10| System.Int32 test_call_with_param.g()
#   10|   Block 0
#   10|     v10_1(Void)         = EnterFunction            : 
#   10|     mu10_2(<unknown>)   = AliasedDefinition        : 
#   12|     r12_1(glval<Int32>) = VariableAddress[#return] : 
#   12|     r12_2(<funcaddr>)   = FunctionAddress[f]       : 
#   12|     r12_3(Int32)        = Constant[2]              : 
#   12|     r12_4(Int32)        = Constant[3]              : 
#   12|     r12_5(Int32)        = Call[f]                  : func:r12_2, 0:r12_3, 1:r12_4
#   12|     mu12_6(<unknown>)   = ^CallSideEffect          : ~m?
#   12|     mu12_7(Int32)       = Store[#return]           : &:r12_1, r12_5
#   10|     r10_3(glval<Int32>) = VariableAddress[#return] : 
#   10|     v10_4(Void)         = ReturnValue              : &:r10_3, ~m?
#   10|     v10_5(Void)         = AliasedUse               : ~m?
#   10|     v10_6(Void)         = ExitFunction             : 

indexers.cs:
#    8| System.String Indexers.MyClass.get_Item(System.Int32)
#    8|   Block 0
#    8|     v8_1(Void)             = EnterFunction              : 
#    8|     mu8_2(<unknown>)       = AliasedDefinition          : 
#    8|     r8_3(glval<MyClass>)   = InitializeThis             : 
#    6|     r6_1(glval<Int32>)     = VariableAddress[index]     : 
#    6|     mu6_2(Int32)           = InitializeParameter[index] : &:r6_1
#   10|     r10_1(glval<String>)   = VariableAddress[#return]   : 
#   10|     r10_2(MyClass)         = CopyValue                  : r8_3
#   10|     r10_3(glval<String[]>) = FieldAddress[address]      : r10_2
#   10|     r10_4(String[])        = ElementsAddress            : r10_3
#   10|     r10_5(glval<Int32>)    = VariableAddress[index]     : 
#   10|     r10_6(Int32)           = Load[index]                : &:r10_5, ~m?
#   10|     r10_7(String[])        = PointerAdd[8]              : r10_4, r10_6
#   10|     r10_8(String)          = Load[?]                    : &:r10_7, ~m?
#   10|     mu10_9(String)         = Store[#return]             : &:r10_1, r10_8
#    8|     r8_4(glval<String>)    = VariableAddress[#return]   : 
#    8|     v8_5(Void)             = ReturnValue                : &:r8_4, ~m?
#    8|     v8_6(Void)             = AliasedUse                 : ~m?
#    8|     v8_7(Void)             = ExitFunction               : 

#   12| System.Void Indexers.MyClass.set_Item(System.Int32,System.String)
#   12|   Block 0
#   12|     v12_1(Void)            = EnterFunction              : 
#   12|     mu12_2(<unknown>)      = AliasedDefinition          : 
#   12|     r12_3(glval<MyClass>)  = InitializeThis             : 
#    6|     r6_1(glval<Int32>)     = VariableAddress[index]     : 
#    6|     mu6_2(Int32)           = InitializeParameter[index] : &:r6_1
#   12|     r12_4(glval<String>)   = VariableAddress[value]     : 
#   12|     mu12_5(String)         = InitializeParameter[value] : &:r12_4
#   14|     r14_1(glval<String>)   = VariableAddress[value]     : 
#   14|     r14_2(String)          = Load[value]                : &:r14_1, ~m?
#   14|     r14_3(MyClass)         = CopyValue                  : r12_3
#   14|     r14_4(glval<String[]>) = FieldAddress[address]      : r14_3
#   14|     r14_5(String[])        = ElementsAddress            : r14_4
#   14|     r14_6(glval<Int32>)    = VariableAddress[index]     : 
#   14|     r14_7(Int32)           = Load[index]                : &:r14_6, ~m?
#   14|     r14_8(String[])        = PointerAdd[8]              : r14_5, r14_7
#   14|     mu14_9(String)         = Store[?]                   : &:r14_8, r14_2
#   12|     v12_6(Void)            = ReturnVoid                 : 
#   12|     v12_7(Void)            = AliasedUse                 : ~m?
#   12|     v12_8(Void)            = ExitFunction               : 

#   19| System.Void Indexers.Main()
#   19|   Block 0
#   19|     v19_1(Void)           = EnterFunction             : 
#   19|     mu19_2(<unknown>)     = AliasedDefinition         : 
#   21|     r21_1(glval<MyClass>) = VariableAddress[inst]     : 
#   21|     r21_2(MyClass)        = NewObj                    : 
#   21|     r21_3(<funcaddr>)     = FunctionAddress[MyClass]  : 
#   21|     v21_4(Void)           = Call[MyClass]             : func:r21_3, this:r21_2
#   21|     mu21_5(<unknown>)     = ^CallSideEffect           : ~m?
#   21|     mu21_6(MyClass)       = Store[inst]               : &:r21_1, r21_2
#   22|     r22_1(glval<MyClass>) = VariableAddress[inst]     : 
#   22|     r22_2(MyClass)        = Load[inst]                : &:r22_1, ~m?
#   22|     r22_3(<funcaddr>)     = FunctionAddress[set_Item] : 
#   22|     r22_4(Int32)          = Constant[0]               : 
#   22|     r22_5(String)         = StringConstant["str1"]    : 
#   22|     v22_6(Void)           = Call[set_Item]            : func:r22_3, this:r22_2, 0:r22_4, 1:r22_5
#   22|     mu22_7(<unknown>)     = ^CallSideEffect           : ~m?
#   23|     r23_1(glval<MyClass>) = VariableAddress[inst]     : 
#   23|     r23_2(MyClass)        = Load[inst]                : &:r23_1, ~m?
#   23|     r23_3(<funcaddr>)     = FunctionAddress[set_Item] : 
#   23|     r23_4(Int32)          = Constant[1]               : 
#   23|     r23_5(String)         = StringConstant["str1"]    : 
#   23|     v23_6(Void)           = Call[set_Item]            : func:r23_3, this:r23_2, 0:r23_4, 1:r23_5
#   23|     mu23_7(<unknown>)     = ^CallSideEffect           : ~m?
#   24|     r24_1(glval<MyClass>) = VariableAddress[inst]     : 
#   24|     r24_2(MyClass)        = Load[inst]                : &:r24_1, ~m?
#   24|     r24_3(<funcaddr>)     = FunctionAddress[set_Item] : 
#   24|     r24_4(Int32)          = Constant[1]               : 
#   24|     r24_5(glval<MyClass>) = VariableAddress[inst]     : 
#   24|     r24_6(MyClass)        = Load[inst]                : &:r24_5, ~m?
#   24|     r24_7(<funcaddr>)     = FunctionAddress[get_Item] : 
#   24|     r24_8(Int32)          = Constant[0]               : 
#   24|     r24_9(String)         = Call[get_Item]            : func:r24_7, this:r24_6, 0:r24_8
#   24|     mu24_10(<unknown>)    = ^CallSideEffect           : ~m?
#   24|     v24_11(Void)          = Call[set_Item]            : func:r24_3, this:r24_2, 0:r24_4, 1:r24_9
#   24|     mu24_12(<unknown>)    = ^CallSideEffect           : ~m?
#   19|     v19_3(Void)           = ReturnVoid                : 
#   19|     v19_4(Void)           = AliasedUse                : ~m?
#   19|     v19_5(Void)           = ExitFunction              : 

inheritance_polymorphism.cs:
#    3| System.Int32 A.function()
#    3|   Block 0
#    3|     v3_1(Void)         = EnterFunction            : 
#    3|     mu3_2(<unknown>)   = AliasedDefinition        : 
#    3|     r3_3(glval<A>)     = InitializeThis           : 
#    5|     r5_1(glval<Int32>) = VariableAddress[#return] : 
#    5|     r5_2(Int32)        = Constant[0]              : 
#    5|     mu5_3(Int32)       = Store[#return]           : &:r5_1, r5_2
#    3|     r3_4(glval<Int32>) = VariableAddress[#return] : 
#    3|     v3_5(Void)         = ReturnValue              : &:r3_4, ~m?
#    3|     v3_6(Void)         = AliasedUse               : ~m?
#    3|     v3_7(Void)         = ExitFunction             : 

#   15| System.Int32 C.function()
#   15|   Block 0
#   15|     v15_1(Void)         = EnterFunction            : 
#   15|     mu15_2(<unknown>)   = AliasedDefinition        : 
#   15|     r15_3(glval<C>)     = InitializeThis           : 
#   17|     r17_1(glval<Int32>) = VariableAddress[#return] : 
#   17|     r17_2(Int32)        = Constant[1]              : 
#   17|     mu17_3(Int32)       = Store[#return]           : &:r17_1, r17_2
#   15|     r15_4(glval<Int32>) = VariableAddress[#return] : 
#   15|     v15_5(Void)         = ReturnValue              : &:r15_4, ~m?
#   15|     v15_6(Void)         = AliasedUse               : ~m?
#   15|     v15_7(Void)         = ExitFunction             : 

#   23| System.Void Program.Main()
#   23|   Block 0
#   23|     v23_1(Void)       = EnterFunction             : 
#   23|     mu23_2(<unknown>) = AliasedDefinition         : 
#   25|     r25_1(glval<B>)   = VariableAddress[objB]     : 
#   25|     r25_2(B)          = NewObj                    : 
#   25|     r25_3(<funcaddr>) = FunctionAddress[B]        : 
#   25|     v25_4(Void)       = Call[B]                   : func:r25_3, this:r25_2
#   25|     mu25_5(<unknown>) = ^CallSideEffect           : ~m?
#   25|     mu25_6(B)         = Store[objB]               : &:r25_1, r25_2
#   26|     r26_1(glval<B>)   = VariableAddress[objB]     : 
#   26|     r26_2(B)          = Load[objB]                : &:r26_1, ~m?
#   26|     r26_3(<funcaddr>) = FunctionAddress[function] : 
#   26|     r26_4(Int32)      = Call[function]            : func:r26_3, this:r26_2
#   26|     mu26_5(<unknown>) = ^CallSideEffect           : ~m?
#   29|     r29_1(glval<A>)   = VariableAddress[objA]     : 
#   29|     mu29_2(A)         = Uninitialized[objA]       : &:r29_1
#   30|     r30_1(glval<B>)   = VariableAddress[objB]     : 
#   30|     r30_2(B)          = Load[objB]                : &:r30_1, ~m?
#   30|     r30_3(A)          = Convert                   : r30_2
#   30|     r30_4(glval<A>)   = VariableAddress[objA]     : 
#   30|     mu30_5(A)         = Store[objA]               : &:r30_4, r30_3
#   31|     r31_1(glval<A>)   = VariableAddress[objA]     : 
#   31|     r31_2(A)          = Load[objA]                : &:r31_1, ~m?
#   31|     r31_3(<funcaddr>) = FunctionAddress[function] : 
#   31|     r31_4(Int32)      = Call[function]            : func:r31_3, this:r31_2
#   31|     mu31_5(<unknown>) = ^CallSideEffect           : ~m?
#   33|     r33_1(glval<A>)   = VariableAddress[objC]     : 
#   33|     r33_2(C)          = NewObj                    : 
#   33|     r33_3(<funcaddr>) = FunctionAddress[C]        : 
#   33|     v33_4(Void)       = Call[C]                   : func:r33_3, this:r33_2
#   33|     mu33_5(<unknown>) = ^CallSideEffect           : ~m?
#   33|     r33_6(A)          = Convert                   : r33_2
#   33|     mu33_7(A)         = Store[objC]               : &:r33_1, r33_2
#   34|     r34_1(glval<A>)   = VariableAddress[objC]     : 
#   34|     r34_2(A)          = Load[objC]                : &:r34_1, ~m?
#   34|     r34_3(<funcaddr>) = FunctionAddress[function] : 
#   34|     r34_4(Int32)      = Call[function]            : func:r34_3, this:r34_2
#   34|     mu34_5(<unknown>) = ^CallSideEffect           : ~m?
#   23|     v23_3(Void)       = ReturnVoid                : 
#   23|     v23_4(Void)       = AliasedUse                : ~m?
#   23|     v23_5(Void)       = ExitFunction              : 

inoutref.cs:
#   11| System.Void InOutRef.set(MyClass,MyClass)
#   11|   Block 0
#   11|     v11_1(Void)           = EnterFunction           : 
#   11|     mu11_2(<unknown>)     = AliasedDefinition       : 
#   11|     r11_3(glval<MyClass>) = VariableAddress[o1]     : 
#   11|     mu11_4(MyClass)       = InitializeParameter[o1] : &:r11_3
#   11|     r11_5(glval<MyClass>) = VariableAddress[o2]     : 
#   11|     mu11_6(MyClass)       = InitializeParameter[o2] : &:r11_5
#   13|     r13_1(glval<MyClass>) = VariableAddress[o2]     : 
#   13|     r13_2(MyClass)        = Load[o2]                : &:r13_1, ~m?
#   13|     r13_3(glval<MyClass>) = VariableAddress[o1]     : 
#   13|     r13_4(MyClass)        = Load[o1]                : &:r13_3, ~m?
#   13|     mu13_5(MyClass)       = Store[?]                : &:r13_4, r13_2
#   11|     v11_7(Void)           = ReturnVoid              : 
#   11|     v11_8(Void)           = AliasedUse              : ~m?
#   11|     v11_9(Void)           = ExitFunction            : 

#   16| System.Void InOutRef.F(System.Int32,MyStruct,MyStruct,MyClass,MyClass)
#   16|   Block 0
#   16|     v16_1(Void)            = EnterFunction           : 
#   16|     mu16_2(<unknown>)      = AliasedDefinition       : 
#   16|     r16_3(glval<Int32>)    = VariableAddress[a]      : 
#   16|     mu16_4(Int32)          = InitializeParameter[a]  : &:r16_3
#   16|     r16_5(glval<MyStruct>) = VariableAddress[b]      : 
#   16|     mu16_6(MyStruct)       = InitializeParameter[b]  : &:r16_5
#   16|     r16_7(glval<MyStruct>) = VariableAddress[b1]     : 
#   16|     mu16_8(MyStruct)       = InitializeParameter[b1] : &:r16_7
#   16|     r16_9(glval<MyClass>)  = VariableAddress[c]      : 
#   16|     mu16_10(MyClass)       = InitializeParameter[c]  : &:r16_9
#   16|     r16_11(glval<MyClass>) = VariableAddress[c1]     : 
#   16|     mu16_12(MyClass)       = InitializeParameter[c1] : &:r16_11
#   18|     r18_1(Int32)           = Constant[0]             : 
#   18|     r18_2(glval<MyStruct>) = VariableAddress[b]      : 
#   18|     r18_3(MyStruct)        = Load[b]                 : &:r18_2, ~m?
#   18|     r18_4(glval<Int32>)    = FieldAddress[fld]       : r18_3
#   18|     mu18_5(Int32)          = Store[?]                : &:r18_4, r18_1
#   19|     r19_1(glval<MyStruct>) = VariableAddress[b]      : 
#   19|     r19_2(MyStruct)        = Load[b]                 : &:r19_1, ~m?
#   19|     r19_3(glval<Int32>)    = FieldAddress[fld]       : r19_2
#   19|     r19_4(Int32)           = Load[?]                 : &:r19_3, ~m?
#   19|     r19_5(glval<Int32>)    = VariableAddress[a]      : 
#   19|     r19_6(Int32)           = Load[a]                 : &:r19_5, ~m?
#   19|     mu19_7(Int32)          = Store[?]                : &:r19_6, r19_4
#   21|     r21_1(Int32)           = Constant[10]            : 
#   21|     r21_2(glval<MyClass>)  = VariableAddress[c]      : 
#   21|     r21_3(MyClass)         = Load[c]                 : &:r21_2, ~m?
#   21|     r21_4(MyClass)         = Load[?]                 : &:r21_3, ~m?
#   21|     r21_5(glval<Int32>)    = FieldAddress[fld]       : r21_4
#   21|     mu21_6(Int32)          = Store[?]                : &:r21_5, r21_1
#   22|     r22_1(glval<MyClass>)  = VariableAddress[c]      : 
#   22|     r22_2(MyClass)         = Load[c]                 : &:r22_1, ~m?
#   22|     r22_3(MyClass)         = Load[?]                 : &:r22_2, ~m?
#   22|     r22_4(glval<Int32>)    = FieldAddress[fld]       : r22_3
#   22|     r22_5(Int32)           = Load[?]                 : &:r22_4, ~m?
#   22|     r22_6(glval<Int32>)    = VariableAddress[a]      : 
#   22|     r22_7(Int32)           = Load[a]                 : &:r22_6, ~m?
#   22|     mu22_8(Int32)          = Store[?]                : &:r22_7, r22_5
#   24|     r24_1(glval<MyStruct>) = VariableAddress[b1]     : 
#   24|     r24_2(MyStruct)        = Load[b1]                : &:r24_1, ~m?
#   24|     r24_3(MyStruct)        = Load[?]                 : &:r24_2, ~m?
#   24|     r24_4(glval<MyStruct>) = VariableAddress[b]      : 
#   24|     r24_5(MyStruct)        = Load[b]                 : &:r24_4, ~m?
#   24|     mu24_6(MyStruct)       = Store[?]                : &:r24_5, r24_3
#   26|     r26_1(<funcaddr>)      = FunctionAddress[set]    : 
#   26|     r26_2(glval<MyClass>)  = VariableAddress[c]      : 
#   26|     r26_3(MyClass)         = Load[c]                 : &:r26_2, ~m?
#   26|     r26_4(glval<MyClass>)  = VariableAddress[c1]     : 
#   26|     r26_5(MyClass)         = Load[c1]                : &:r26_4, ~m?
#   26|     r26_6(MyClass)         = Load[?]                 : &:r26_5, ~m?
#   26|     v26_7(Void)            = Call[set]               : func:r26_1, 0:r26_3, 1:r26_6
#   26|     mu26_8(<unknown>)      = ^CallSideEffect         : ~m?
#   16|     v16_13(Void)           = ReturnVoid              : 
#   16|     v16_14(Void)           = AliasedUse              : ~m?
#   16|     v16_15(Void)           = ExitFunction            : 

#   29| System.Void InOutRef.Main()
#   29|   Block 0
#   29|     v29_1(Void)            = EnterFunction             : 
#   29|     mu29_2(<unknown>)      = AliasedDefinition         : 
#   31|     r31_1(glval<Int32>)    = VariableAddress[a]        : 
#   31|     r31_2(Int32)           = Constant[0]               : 
#   31|     mu31_3(Int32)          = Store[a]                  : &:r31_1, r31_2
#   32|     r32_1(glval<MyStruct>) = VariableAddress[b]        : 
#   32|     r32_2(MyStruct)        = NewObj                    : 
#   32|     r32_3(<funcaddr>)      = FunctionAddress[MyStruct] : 
#   32|     v32_4(Void)            = Call[MyStruct]            : func:r32_3, this:r32_2
#   32|     mu32_5(<unknown>)      = ^CallSideEffect           : ~m?
#   32|     r32_6(MyStruct)        = Load[?]                   : &:r32_2, ~m?
#   32|     mu32_7(MyStruct)       = Store[b]                  : &:r32_1, r32_6
#   33|     r33_1(glval<MyClass>)  = VariableAddress[c]        : 
#   33|     r33_2(MyClass)         = NewObj                    : 
#   33|     r33_3(<funcaddr>)      = FunctionAddress[MyClass]  : 
#   33|     v33_4(Void)            = Call[MyClass]             : func:r33_3, this:r33_2
#   33|     mu33_5(<unknown>)      = ^CallSideEffect           : ~m?
#   33|     mu33_6(MyClass)        = Store[c]                  : &:r33_1, r33_2
#   34|     r34_1(<funcaddr>)      = FunctionAddress[F]        : 
#   34|     r34_2(glval<Int32>)    = VariableAddress[a]        : 
#   34|     r34_3(glval<MyStruct>) = VariableAddress[b]        : 
#   34|     r34_4(glval<MyStruct>) = VariableAddress[b]        : 
#   34|     r34_5(glval<MyClass>)  = VariableAddress[c]        : 
#   34|     r34_6(glval<MyClass>)  = VariableAddress[c]        : 
#   34|     v34_7(Void)            = Call[F]                   : func:r34_1, 0:r34_2, 1:r34_3, 2:r34_4, 3:r34_5, 4:r34_6
#   34|     mu34_8(<unknown>)      = ^CallSideEffect           : ~m?
#   36|     r36_1(glval<Int32>)    = VariableAddress[x]        : 
#   36|     r36_2(glval<MyStruct>) = VariableAddress[b]        : 
#   36|     r36_3(glval<Int32>)    = FieldAddress[fld]         : r36_2
#   36|     r36_4(Int32)           = Load[?]                   : &:r36_3, ~m?
#   36|     mu36_5(Int32)          = Store[x]                  : &:r36_1, r36_4
#   29|     v29_3(Void)            = ReturnVoid                : 
#   29|     v29_4(Void)            = AliasedUse                : ~m?
#   29|     v29_5(Void)            = ExitFunction              : 

isexpr.cs:
#    8| System.Void IsExpr.Main()
#    8|   Block 0
#    8|     v8_1(Void)           = EnterFunction        : 
#    8|     mu8_2(<unknown>)     = AliasedDefinition    : 
#   10|     r10_1(glval<Is_A>)   = VariableAddress[obj] : 
#   10|     r10_2(null)          = Constant[null]       : 
#   10|     r10_3(Is_A)          = Convert              : r10_2
#   10|     mu10_4(Is_A)         = Store[obj]           : &:r10_1, r10_2
#   12|     r12_1(glval<Object>) = VariableAddress[o]   : 
#   12|     r12_2(glval<Is_A>)   = VariableAddress[obj] : 
#   12|     r12_3(Is_A)          = Load[obj]            : &:r12_2, ~m?
#   12|     r12_4(Object)        = Convert              : r12_3
#   12|     mu12_5(Object)       = Store[o]             : &:r12_1, r12_3
#   13|     r13_1(glval<Object>) = VariableAddress[o]   : 
#   13|     r13_2(Object)        = Load[o]              : &:r13_1, ~m?
#   13|     r13_3(Is_A)          = CheckedConvertOrNull : r13_2
#   13|     r13_4(Is_A)          = Constant[0]          : 
#   13|     r13_5(glval<Is_A>)   = VariableAddress[tmp] : 
#   13|     mu13_6(Is_A)         = Uninitialized[tmp]   : &:r13_5
#   13|     r13_7(Boolean)       = CompareNE            : r13_3, r13_4
#   13|     v13_8(Void)          = ConditionalBranch    : r13_7
#-----|   False -> Block 2
#-----|   True -> Block 3

#    8|   Block 1
#    8|     v8_3(Void) = ReturnVoid   : 
#    8|     v8_4(Void) = AliasedUse   : ~m?
#    8|     v8_5(Void) = ExitFunction : 

#   13|   Block 2
#   13|     v13_9(Void) = ConditionalBranch : r13_7
#-----|   False -> Block 5
#-----|   True -> Block 4

#   13|   Block 3
#   13|     mu13_10(Is_A) = Store[tmp] : &:r13_5, r13_3
#-----|   Goto -> Block 2

#   15|   Block 4
#   15|     r15_1(glval<Int32>) = VariableAddress[res] : 
#   15|     r15_2(glval<Is_A>)  = VariableAddress[tmp] : 
#   15|     r15_3(Is_A)         = Load[tmp]            : &:r15_2, ~m?
#   15|     r15_4(glval<Int32>) = FieldAddress[x]      : r15_3
#   15|     r15_5(Int32)        = Load[?]              : &:r15_4, ~m?
#   15|     mu15_6(Int32)       = Store[res]           : &:r15_1, r15_5
#-----|   Goto -> Block 5

#   17|   Block 5
#   17|     r17_1(glval<Object>) = VariableAddress[o]   : 
#   17|     r17_2(Object)        = Load[o]              : &:r17_1, ~m?
#   17|     r17_3(Is_A)          = CheckedConvertOrNull : r17_2
#   17|     r17_4(Is_A)          = Constant[0]          : 
#   17|     r17_5(Boolean)       = CompareNE            : r17_3, r17_4
#   17|     v17_6(Void)          = ConditionalBranch    : r17_5
#-----|   False -> Block 1
#-----|   True -> Block 6

#   18|   Block 6
#   18|     v18_1(Void) = NoOp : 
#-----|   Goto -> Block 1

jumps.cs:
#    5| System.Void Jumps.Main()
#    5|   Block 0
#    5|     v5_1(Void)         = EnterFunction      : 
#    5|     mu5_2(<unknown>)   = AliasedDefinition  : 
#    7|     r7_1(glval<Int32>) = VariableAddress[i] : 
#    7|     r7_2(Int32)        = Constant[1]        : 
#    7|     mu7_3(Int32)       = Store[i]           : &:r7_1, r7_2
#-----|   Goto -> Block 2

#    7|   Block 1
#    7|     r7_4(glval<Int32>) = VariableAddress[i] : 
#    7|     r7_5(Int32)        = Load[i]            : &:r7_4, ~m?
#    7|     r7_6(Int32)        = Constant[1]        : 
#    7|     r7_7(Int32)        = Add                : r7_5, r7_6
#    7|     mu7_8(Int32)       = Store[i]           : &:r7_4, r7_7
#-----|   Goto (back edge) -> Block 2

#    7|   Block 2
#    7|     r7_9(glval<Int32>) = VariableAddress[i] : 
#    7|     r7_10(Int32)       = Load[i]            : &:r7_9, ~m?
#    7|     r7_11(Int32)       = Constant[10]       : 
#    7|     r7_12(Boolean)     = CompareLE          : r7_10, r7_11
#    7|     v7_13(Void)        = ConditionalBranch  : r7_12
#-----|   False -> Block 8
#-----|   True -> Block 3

#    9|   Block 3
#    9|     r9_1(glval<Int32>) = VariableAddress[i] : 
#    9|     r9_2(Int32)        = Load[i]            : &:r9_1, ~m?
#    9|     r9_3(Int32)        = Constant[3]        : 
#    9|     r9_4(Boolean)      = CompareEQ          : r9_2, r9_3
#    9|     v9_5(Void)         = ConditionalBranch  : r9_4
#-----|   False -> Block 5
#-----|   True -> Block 4

#   10|   Block 4
#   10|     v10_1(Void) = NoOp : 
#-----|   Goto -> Block 1

#   11|   Block 5
#   11|     r11_1(glval<Int32>) = VariableAddress[i] : 
#   11|     r11_2(Int32)        = Load[i]            : &:r11_1, ~m?
#   11|     r11_3(Int32)        = Constant[5]        : 
#   11|     r11_4(Boolean)      = CompareEQ          : r11_2, r11_3
#   11|     v11_5(Void)         = ConditionalBranch  : r11_4
#-----|   False -> Block 7
#-----|   True -> Block 6

#   12|   Block 6
#   12|     v12_1(Void) = NoOp : 
#-----|   Goto -> Block 8

#   13|   Block 7
#   13|     r13_1(<funcaddr>) = FunctionAddress[WriteLine]         : 
#   13|     r13_2(String)     = StringConstant["BreakAndContinue"] : 
#   13|     v13_3(Void)       = Call[WriteLine]                    : func:r13_1, 0:r13_2
#   13|     mu13_4(<unknown>) = ^CallSideEffect                    : ~m?
#-----|   Goto -> Block 1

#   16|   Block 8
#   16|     r16_1(glval<Int32>) = VariableAddress[i] : 
#   16|     r16_2(Int32)        = Constant[0]        : 
#   16|     mu16_3(Int32)       = Store[i]           : &:r16_1, r16_2
#-----|   Goto -> Block 9

#   16|   Block 9
#   16|     r16_4(glval<Int32>) = VariableAddress[i] : 
#   16|     r16_5(Int32)        = Load[i]            : &:r16_4, ~m?
#   16|     r16_6(Int32)        = Constant[10]       : 
#   16|     r16_7(Boolean)      = CompareLT          : r16_5, r16_6
#   16|     v16_8(Void)         = ConditionalBranch  : r16_7
#-----|   False -> Block 11
#-----|   True -> Block 10

#   18|   Block 10
#   18|     r18_1(glval<Int32>) = VariableAddress[i] : 
#   18|     r18_2(Int32)        = Load[i]            : &:r18_1, ~m?
#   18|     r18_3(Int32)        = Constant[1]        : 
#   18|     r18_4(Int32)        = Add                : r18_2, r18_3
#   18|     mu18_5(Int32)       = Store[i]           : &:r18_1, r18_4
#   19|     v19_1(Void)         = NoOp               : 
#-----|   Goto (back edge) -> Block 9

#   22|   Block 11
#   22|     r22_1(glval<Int32>) = VariableAddress[a] : 
#   22|     r22_2(Int32)        = Constant[0]        : 
#   22|     mu22_3(Int32)       = Store[a]           : &:r22_1, r22_2
#-----|   Goto -> Block 12

#   23|   Block 12
#   23|     r23_1(Boolean) = Constant[true]    : 
#   23|     v23_2(Void)    = ConditionalBranch : r23_1
#-----|   False -> Block 17
#-----|   True -> Block 13

#   25|   Block 13
#   25|     r25_1(glval<Int32>) = VariableAddress[a] : 
#   25|     r25_2(Int32)        = Load[a]            : &:r25_1, ~m?
#   25|     r25_3(Int32)        = Constant[1]        : 
#   25|     r25_4(Int32)        = Add                : r25_2, r25_3
#   25|     mu25_5(Int32)       = Store[a]           : &:r25_1, r25_4
#   26|     r26_1(glval<Int32>) = VariableAddress[a] : 
#   26|     r26_2(Int32)        = Load[a]            : &:r26_1, ~m?
#   26|     r26_3(Int32)        = Constant[5]        : 
#   26|     r26_4(Boolean)      = CompareEQ          : r26_2, r26_3
#   26|     v26_5(Void)         = ConditionalBranch  : r26_4
#-----|   False -> Block 15
#-----|   True -> Block 14

#   27|   Block 14
#   27|     v27_1(Void) = NoOp : 
#-----|   Goto (back edge) -> Block 12

#   28|   Block 15
#   28|     r28_1(glval<Int32>) = VariableAddress[a] : 
#   28|     r28_2(Int32)        = Load[a]            : &:r28_1, ~m?
#   28|     r28_3(Int32)        = Constant[10]       : 
#   28|     r28_4(Boolean)      = CompareEQ          : r28_2, r28_3
#   28|     v28_5(Void)         = ConditionalBranch  : r28_4
#-----|   False (back edge) -> Block 12
#-----|   True -> Block 16

#   29|   Block 16
#   29|     v29_1(Void) = NoOp : 
#-----|   Goto -> Block 17

#   32|   Block 17
#   32|     r32_1(glval<Int32>) = VariableAddress[i] : 
#   32|     r32_2(Int32)        = Constant[1]        : 
#   32|     mu32_3(Int32)       = Store[i]           : &:r32_1, r32_2
#-----|   Goto -> Block 19

#   32|   Block 18
#   32|     r32_4(glval<Int32>) = VariableAddress[i] : 
#   32|     r32_5(Int32)        = Load[i]            : &:r32_4, ~m?
#   32|     r32_6(Int32)        = Constant[1]        : 
#   32|     r32_7(Int32)        = Add                : r32_5, r32_6
#   32|     mu32_8(Int32)       = Store[i]           : &:r32_4, r32_7
#-----|   Goto (back edge) -> Block 19

#   32|   Block 19
#   32|     r32_9(glval<Int32>) = VariableAddress[i] : 
#   32|     r32_10(Int32)       = Load[i]            : &:r32_9, ~m?
#   32|     r32_11(Int32)       = Constant[10]       : 
#   32|     r32_12(Boolean)     = CompareLE          : r32_10, r32_11
#   32|     v32_13(Void)        = ConditionalBranch  : r32_12
#-----|   False -> Block 22
#-----|   True -> Block 20

#   34|   Block 20
#   34|     r34_1(glval<Int32>) = VariableAddress[i] : 
#   34|     r34_2(Int32)        = Load[i]            : &:r34_1, ~m?
#   34|     r34_3(Int32)        = Constant[5]        : 
#   34|     r34_4(Boolean)      = CompareEQ          : r34_2, r34_3
#   34|     v34_5(Void)         = ConditionalBranch  : r34_4
#-----|   False -> Block 18
#-----|   True -> Block 21

#   35|   Block 21
#   35|     v35_1(Void) = NoOp : 
#-----|   Goto -> Block 22

#   37|   Block 22
#   37|     v37_1(Void)       = NoOp                       : 
#   38|     r38_1(<funcaddr>) = FunctionAddress[WriteLine] : 
#   38|     r38_2(String)     = StringConstant["Done"]     : 
#   38|     v38_3(Void)       = Call[WriteLine]            : func:r38_1, 0:r38_2
#   38|     mu38_4(<unknown>) = ^CallSideEffect            : ~m?
#    5|     v5_3(Void)        = ReturnVoid                 : 
#    5|     v5_4(Void)        = AliasedUse                 : ~m?
#    5|     v5_5(Void)        = ExitFunction               : 

lock.cs:
#    5| System.Void LockTest.A()
#    5|   Block 0
#    5|     v5_1(Void)            = EnterFunction              : 
#    5|     mu5_2(<unknown>)      = AliasedDefinition          : 
#    7|     r7_1(glval<Object>)   = VariableAddress[object]    : 
#    7|     r7_2(Object)          = NewObj                     : 
#    7|     r7_3(<funcaddr>)      = FunctionAddress[Object]    : 
#    7|     v7_4(Void)            = Call[Object]               : func:r7_3, this:r7_2
#    7|     mu7_5(<unknown>)      = ^CallSideEffect            : ~m?
#    7|     mu7_6(Object)         = Store[object]              : &:r7_1, r7_2
#    8|     r8_1(glval<Object>)   = VariableAddress[#temp8:9]  : 
#    8|     r8_2(glval<Object>)   = VariableAddress[object]    : 
#    8|     r8_3(Object)          = Load[object]               : &:r8_2, ~m?
#    8|     mu8_4(Object)         = Store[#temp8:9]            : &:r8_1, r8_3
#    8|     r8_5(glval<Boolean>)  = VariableAddress[#temp8:9]  : 
#    8|     r8_6(Boolean)         = Constant[false]            : 
#    8|     mu8_7(Boolean)        = Store[#temp8:9]            : &:r8_5, r8_6
#    8|     r8_8(<funcaddr>)      = FunctionAddress[Enter]     : 
#    8|     r8_9(glval<Object>)   = VariableAddress[#temp8:9]  : 
#    8|     r8_10(Object)         = Load[#temp8:9]             : &:r8_9, ~m?
#    8|     r8_11(glval<Boolean>) = VariableAddress[#temp8:9]  : 
#    8|     v8_12(Void)           = Call[Enter]                : func:r8_8, 0:r8_10, 1:r8_11
#    8|     mu8_13(<unknown>)     = ^CallSideEffect            : ~m?
#   10|     r10_1(<funcaddr>)     = FunctionAddress[WriteLine] : 
#   10|     r10_2(glval<Object>)  = VariableAddress[object]    : 
#   10|     r10_3(Object)         = Load[object]               : &:r10_2, ~m?
#   10|     r10_4(<funcaddr>)     = FunctionAddress[ToString]  : 
#   10|     r10_5(String)         = Call[ToString]             : func:r10_4, this:r10_3
#   10|     mu10_6(<unknown>)     = ^CallSideEffect            : ~m?
#   10|     v10_7(Void)           = Call[WriteLine]            : func:r10_1, 0:r10_5
#   10|     mu10_8(<unknown>)     = ^CallSideEffect            : ~m?
#    8|     r8_14(glval<Boolean>) = VariableAddress[#temp8:9]  : 
#    8|     r8_15(Boolean)        = Load[#temp8:9]             : &:r8_14, ~m?
#    8|     v8_16(Void)           = ConditionalBranch          : r8_15
#-----|   False -> Block 1
#-----|   True -> Block 2

#    5|   Block 1
#    5|     v5_3(Void) = ReturnVoid   : 
#    5|     v5_4(Void) = AliasedUse   : ~m?
#    5|     v5_5(Void) = ExitFunction : 

#    8|   Block 2
#    8|     r8_17(<funcaddr>)    = FunctionAddress[Exit]     : 
#    8|     r8_18(glval<Object>) = VariableAddress[#temp8:9] : 
#    8|     r8_19(Object)        = Load[#temp8:9]            : &:r8_18, ~m?
#    8|     v8_20(Void)          = Call[Exit]                : func:r8_17, 0:r8_19
#    8|     mu8_21(<unknown>)    = ^CallSideEffect           : ~m?
#-----|   Goto -> Block 1

obj_creation.cs:
#    7| System.Void ObjCreation.MyClass..ctor()
#    7|   Block 0
#    7|     v7_1(Void)           = EnterFunction             : 
#    7|     mu7_2(<unknown>)     = AliasedDefinition         : 
#    7|     r7_3(glval<MyClass>) = InitializeThis            : 
#    7|     r7_4(glval<Object>)  = Convert[MyClass : Object] : r7_3
#    7|     r7_5(<funcaddr>)     = FunctionAddress[Object]   : 
#    7|     v7_6(Void)           = Call[Object]              : func:r7_5, this:r7_4
#    7|     mu7_7(<unknown>)     = ^CallSideEffect           : ~m?
#    8|     v8_1(Void)           = NoOp                      : 
#    7|     v7_8(Void)           = ReturnVoid                : 
#    7|     v7_9(Void)           = AliasedUse                : ~m?
#    7|     v7_10(Void)          = ExitFunction              : 

#   11| System.Void ObjCreation.MyClass..ctor(System.Int32)
#   11|   Block 0
#   11|     v11_1(Void)           = EnterFunction             : 
#   11|     mu11_2(<unknown>)     = AliasedDefinition         : 
#   11|     r11_3(glval<MyClass>) = InitializeThis            : 
#   11|     r11_4(glval<Int32>)   = VariableAddress[_x]       : 
#   11|     mu11_5(Int32)         = InitializeParameter[_x]   : &:r11_4
#   11|     r11_6(glval<Object>)  = Convert[MyClass : Object] : r11_3
#   11|     r11_7(<funcaddr>)     = FunctionAddress[Object]   : 
#   11|     v11_8(Void)           = Call[Object]              : func:r11_7, this:r11_6
#   11|     mu11_9(<unknown>)     = ^CallSideEffect           : ~m?
#   13|     r13_1(glval<Int32>)   = VariableAddress[_x]       : 
#   13|     r13_2(Int32)          = Load[_x]                  : &:r13_1, ~m?
#   13|     r13_3(MyClass)        = CopyValue                 : r11_3
#   13|     r13_4(glval<Int32>)   = FieldAddress[x]           : r13_3
#   13|     mu13_5(Int32)         = Store[?]                  : &:r13_4, r13_2
#   11|     v11_10(Void)          = ReturnVoid                : 
#   11|     v11_11(Void)          = AliasedUse                : ~m?
#   11|     v11_12(Void)          = ExitFunction              : 

#   17| System.Void ObjCreation.SomeFun(ObjCreation.MyClass)
#   17|   Block 0
#   17|     v17_1(Void)           = EnterFunction          : 
#   17|     mu17_2(<unknown>)     = AliasedDefinition      : 
#   17|     r17_3(glval<MyClass>) = VariableAddress[x]     : 
#   17|     mu17_4(MyClass)       = InitializeParameter[x] : &:r17_3
#   18|     v18_1(Void)           = NoOp                   : 
#   17|     v17_5(Void)           = ReturnVoid             : 
#   17|     v17_6(Void)           = AliasedUse             : ~m?
#   17|     v17_7(Void)           = ExitFunction           : 

#   21| System.Void ObjCreation.Main()
#   21|   Block 0
#   21|     v21_1(Void)           = EnterFunction                 : 
#   21|     mu21_2(<unknown>)     = AliasedDefinition             : 
#   23|     r23_1(glval<MyClass>) = VariableAddress[obj]          : 
#   23|     r23_2(MyClass)        = NewObj                        : 
#   23|     r23_3(<funcaddr>)     = FunctionAddress[MyClass]      : 
#   23|     r23_4(Int32)          = Constant[100]                 : 
#   23|     v23_5(Void)           = Call[MyClass]                 : func:r23_3, this:r23_2, 0:r23_4
#   23|     mu23_6(<unknown>)     = ^CallSideEffect               : ~m?
#   23|     mu23_7(MyClass)       = Store[obj]                    : &:r23_1, r23_2
#   24|     r24_1(glval<MyClass>) = VariableAddress[obj_initlist] : 
#   24|     r24_2(MyClass)        = NewObj                        : 
#   24|     r24_3(<funcaddr>)     = FunctionAddress[MyClass]      : 
#   24|     v24_4(Void)           = Call[MyClass]                 : func:r24_3, this:r24_2
#   24|     mu24_5(<unknown>)     = ^CallSideEffect               : ~m?
#   24|     r24_6(Int32)          = Constant[101]                 : 
#   24|     r24_7(glval<Int32>)   = FieldAddress[x]               : r24_2
#   24|     mu24_8(Int32)         = Store[?]                      : &:r24_7, r24_6
#   24|     mu24_9(MyClass)       = Store[obj_initlist]           : &:r24_1, r24_2
#   25|     r25_1(glval<Int32>)   = VariableAddress[a]            : 
#   25|     r25_2(glval<MyClass>) = VariableAddress[obj]          : 
#   25|     r25_3(MyClass)        = Load[obj]                     : &:r25_2, ~m?
#   25|     r25_4(glval<Int32>)   = FieldAddress[x]               : r25_3
#   25|     r25_5(Int32)          = Load[?]                       : &:r25_4, ~m?
#   25|     mu25_6(Int32)         = Store[a]                      : &:r25_1, r25_5
#   27|     r27_1(<funcaddr>)     = FunctionAddress[SomeFun]      : 
#   27|     r27_2(MyClass)        = NewObj                        : 
#   27|     r27_3(<funcaddr>)     = FunctionAddress[MyClass]      : 
#   27|     r27_4(Int32)          = Constant[100]                 : 
#   27|     v27_5(Void)           = Call[MyClass]                 : func:r27_3, this:r27_2, 0:r27_4
#   27|     mu27_6(<unknown>)     = ^CallSideEffect               : ~m?
#   27|     v27_7(Void)           = Call[SomeFun]                 : func:r27_1, 0:r27_2
#   27|     mu27_8(<unknown>)     = ^CallSideEffect               : ~m?
#   21|     v21_3(Void)           = ReturnVoid                    : 
#   21|     v21_4(Void)           = AliasedUse                    : ~m?
#   21|     v21_5(Void)           = ExitFunction                  : 

pointers.cs:
#    3| System.Void Pointers.addone(System.Int32[])
#    3|   Block 0
#    3|     v3_1(Void)           = EnterFunction               : 
#    3|     mu3_2(<unknown>)     = AliasedDefinition           : 
#    3|     r3_3(glval<Int32[]>) = VariableAddress[arr]        : 
#    3|     mu3_4(Int32[])       = InitializeParameter[arr]    : &:r3_3
#    5|     r5_1(glval<Int32>)   = VariableAddress[length]     : 
#    5|     r5_2(glval<Int32[]>) = VariableAddress[arr]        : 
#    5|     r5_3(Int32[])        = Load[arr]                   : &:r5_2, ~m?
#    5|     r5_4(<funcaddr>)     = FunctionAddress[get_Length] : 
#    5|     r5_5(Int32)          = Call[get_Length]            : func:r5_4, this:r5_3
#    5|     mu5_6(<unknown>)     = ^CallSideEffect             : ~m?
#    5|     mu5_7(Int32)         = Store[length]               : &:r5_1, r5_5
#    6|     r6_1(glval<Int32*>)  = VariableAddress[b]          : 
#    6|     r6_2(glval<Int32[]>) = VariableAddress[arr]        : 
#    6|     r6_3(Int32[])        = Load[arr]                   : &:r6_2, ~m?
#    6|     r6_4(Int32*)         = CheckedConvertOrThrow       : r6_3
#    6|     mu6_5(Int32*)        = Store[b]                    : &:r6_1, r6_4
#    8|     r8_1(glval<Int32*>)  = VariableAddress[p]          : 
#    8|     r8_2(glval<Int32*>)  = VariableAddress[b]          : 
#    8|     r8_3(Int32*)         = Load[b]                     : &:r8_2, ~m?
#    8|     mu8_4(Int32*)        = Store[p]                    : &:r8_1, r8_3
#    9|     r9_1(glval<Int32>)   = VariableAddress[i]          : 
#    9|     r9_2(Int32)          = Constant[0]                 : 
#    9|     mu9_3(Int32)         = Store[i]                    : &:r9_1, r9_2
#-----|   Goto -> Block 2

#    3|   Block 1
#    3|     v3_5(Void) = ReturnVoid   : 
#    3|     v3_6(Void) = AliasedUse   : ~m?
#    3|     v3_7(Void) = ExitFunction : 

#    9|   Block 2
#    9|     r9_4(glval<Int32>) = VariableAddress[i]      : 
#    9|     r9_5(Int32)        = Load[i]                 : &:r9_4, ~m?
#    9|     r9_6(glval<Int32>) = VariableAddress[length] : 
#    9|     r9_7(Int32)        = Load[length]            : &:r9_6, ~m?
#    9|     r9_8(Boolean)      = CompareLT               : r9_5, r9_7
#    9|     v9_9(Void)         = ConditionalBranch       : r9_8
#-----|   False -> Block 1
#-----|   True -> Block 3

#   10|   Block 3
#   10|     r10_1(Int32)         = Constant[1]        : 
#   10|     r10_2(glval<Int32*>) = VariableAddress[p] : 
#   10|     r10_3(Int32*)        = Load[p]            : &:r10_2, ~m?
#   10|     r10_4(Int32)         = Constant[1]        : 
#   10|     r10_5(Int32*)        = PointerAdd[4]      : r10_3, r10_4
#   10|     mu10_6(Int32*)       = Store[p]           : &:r10_2, r10_5
#   10|     r10_7(Int32)         = Load[?]            : &:r10_3, ~m?
#   10|     r10_8(Int32)         = Add                : r10_7, r10_1
#   10|     mu10_9(Int32)        = Store[?]           : &:r10_3, r10_8
#    9|     r9_10(glval<Int32>)  = VariableAddress[i] : 
#    9|     r9_11(Int32)         = Load[i]            : &:r9_10, ~m?
#    9|     r9_12(Int32)         = Constant[1]        : 
#    9|     r9_13(Int32)         = Add                : r9_11, r9_12
#    9|     mu9_14(Int32)        = Store[i]           : &:r9_10, r9_13
#-----|   Goto (back edge) -> Block 2

#   25| System.Void Pointers.Main()
#   25|   Block 0
#   25|     v25_1(Void)             = EnterFunction             : 
#   25|     mu25_2(<unknown>)       = AliasedDefinition         : 
#   26|     r26_1(glval<MyClass>)   = VariableAddress[o]        : 
#   26|     r26_2(MyClass)          = NewObj                    : 
#   26|     r26_3(<funcaddr>)       = FunctionAddress[MyClass]  : 
#   26|     v26_4(Void)             = Call[MyClass]             : func:r26_3, this:r26_2
#   26|     mu26_5(<unknown>)       = ^CallSideEffect           : ~m?
#   26|     mu26_6(MyClass)         = Store[o]                  : &:r26_1, r26_2
#   27|     r27_1(glval<MyStruct>)  = VariableAddress[s]        : 
#   27|     r27_2(MyStruct)         = NewObj                    : 
#   27|     r27_3(<funcaddr>)       = FunctionAddress[MyStruct] : 
#   27|     v27_4(Void)             = Call[MyStruct]            : func:r27_3, this:r27_2
#   27|     mu27_5(<unknown>)       = ^CallSideEffect           : ~m?
#   27|     r27_6(MyStruct)         = Load[?]                   : &:r27_2, ~m?
#   27|     mu27_7(MyStruct)        = Store[s]                  : &:r27_1, r27_6
#   30|     r30_1(glval<Int32*>)    = VariableAddress[p]        : 
#   30|     r30_2(glval<MyClass>)   = VariableAddress[o]        : 
#   30|     r30_3(MyClass)          = Load[o]                   : &:r30_2, ~m?
#   30|     r30_4(glval<Int32>)     = FieldAddress[fld1]        : r30_3
#   30|     mu30_5(Int32*)          = Store[p]                  : &:r30_1, r30_4
#   30|     r30_6(glval<Int32*>)    = VariableAddress[q]        : 
#   30|     r30_7(glval<MyClass>)   = VariableAddress[o]        : 
#   30|     r30_8(MyClass)          = Load[o]                   : &:r30_7, ~m?
#   30|     r30_9(glval<Int32>)     = FieldAddress[fld2]        : r30_8
#   30|     mu30_10(Int32*)         = Store[q]                  : &:r30_6, r30_9
#   32|     r32_1(Int32)            = Constant[0]               : 
#   32|     r32_2(glval<Int32*>)    = VariableAddress[p]        : 
#   32|     r32_3(Int32*)           = Load[p]                   : &:r32_2, ~m?
#   32|     mu32_4(Int32)           = Store[?]                  : &:r32_3, r32_1
#   33|     r33_1(Int32)            = Constant[0]               : 
#   33|     r33_2(glval<Int32*>)    = VariableAddress[q]        : 
#   33|     r33_3(Int32*)           = Load[q]                   : &:r33_2, ~m?
#   33|     mu33_4(Int32)           = Store[?]                  : &:r33_3, r33_1
#   34|     r34_1(glval<MyStruct*>) = VariableAddress[r]        : 
#   34|     r34_2(glval<MyStruct>)  = VariableAddress[s]        : 
#   34|     mu34_3(MyStruct*)       = Store[r]                  : &:r34_1, r34_2
#   35|     r35_1(Int32)            = Constant[0]               : 
#   35|     r35_2(glval<MyStruct*>) = VariableAddress[r]        : 
#   35|     r35_3(MyStruct*)        = Load[r]                   : &:r35_2, ~m?
#   35|     r35_4(MyStruct)         = Load[?]                   : &:r35_3, ~m?
#   35|     r35_5(glval<Int32>)     = FieldAddress[fld]         : r35_4
#   35|     mu35_6(Int32)           = Store[?]                  : &:r35_5, r35_1
#   39|     r39_1(glval<Int32[]>)   = VariableAddress[arr]      : 
#   39|     mu39_2(Int32[])         = Uninitialized[arr]        : &:r39_1
#   39|     r39_3(Int32)            = Constant[0]               : 
#   39|     r39_4(glval<Int32>)     = PointerAdd[4]             : r39_1, r39_3
#   39|     r39_5(Int32)            = Constant[1]               : 
#   39|     mu39_6(Int32)           = Store[?]                  : &:r39_4, r39_5
#   39|     r39_7(Int32)            = Constant[1]               : 
#   39|     r39_8(glval<Int32>)     = PointerAdd[4]             : r39_1, r39_7
#   39|     r39_9(Int32)            = Constant[2]               : 
#   39|     mu39_10(Int32)          = Store[?]                  : &:r39_8, r39_9
#   39|     r39_11(Int32)           = Constant[2]               : 
#   39|     r39_12(glval<Int32>)    = PointerAdd[4]             : r39_1, r39_11
#   39|     r39_13(Int32)           = Constant[3]               : 
#   39|     mu39_14(Int32)          = Store[?]                  : &:r39_12, r39_13
#   40|     r40_1(<funcaddr>)       = FunctionAddress[addone]   : 
#   40|     r40_2(glval<Int32[]>)   = VariableAddress[arr]      : 
#   40|     r40_3(Int32[])          = Load[arr]                 : &:r40_2, ~m?
#   40|     v40_4(Void)             = Call[addone]              : func:r40_1, 0:r40_3
#   40|     mu40_5(<unknown>)       = ^CallSideEffect           : ~m?
#   25|     v25_3(Void)             = ReturnVoid                : 
#   25|     v25_4(Void)             = AliasedUse                : ~m?
#   25|     v25_5(Void)             = ExitFunction              : 

prop.cs:
#    7| System.Int32 PropClass.get_Prop()
#    7|   Block 0
#    7|     v7_1(Void)             = EnterFunction            : 
#    7|     mu7_2(<unknown>)       = AliasedDefinition        : 
#    7|     r7_3(glval<PropClass>) = InitializeThis           : 
#    9|     r9_1(glval<Int32>)     = VariableAddress[#return] : 
#    9|     r9_2(PropClass)        = CopyValue                : r7_3
#    9|     r9_3(<funcaddr>)       = FunctionAddress[func]    : 
#    9|     r9_4(Int32)            = Call[func]               : func:r9_3, this:r9_2
#    9|     mu9_5(<unknown>)       = ^CallSideEffect          : ~m?
#    9|     mu9_6(Int32)           = Store[#return]           : &:r9_1, r9_4
#    7|     r7_4(glval<Int32>)     = VariableAddress[#return] : 
#    7|     v7_5(Void)             = ReturnValue              : &:r7_4, ~m?
#    7|     v7_6(Void)             = AliasedUse               : ~m?
#    7|     v7_7(Void)             = ExitFunction             : 

#   12| System.Void PropClass.set_Prop(System.Int32)
#   12|   Block 0
#   12|     v12_1(Void)             = EnterFunction              : 
#   12|     mu12_2(<unknown>)       = AliasedDefinition          : 
#   12|     r12_3(glval<PropClass>) = InitializeThis             : 
#   12|     r12_4(glval<Int32>)     = VariableAddress[value]     : 
#   12|     mu12_5(Int32)           = InitializeParameter[value] : &:r12_4
#   14|     r14_1(glval<Int32>)     = VariableAddress[value]     : 
#   14|     r14_2(Int32)            = Load[value]                : &:r14_1, ~m?
#   14|     r14_3(glval<Int32>)     = VariableAddress[prop]      : 
#   14|     mu14_4(Int32)           = Store[prop]                : &:r14_3, r14_2
#   12|     v12_6(Void)             = ReturnVoid                 : 
#   12|     v12_7(Void)             = AliasedUse                 : ~m?
#   12|     v12_8(Void)             = ExitFunction               : 

#   18| System.Int32 PropClass.func()
#   18|   Block 0
#   18|     v18_1(Void)             = EnterFunction            : 
#   18|     mu18_2(<unknown>)       = AliasedDefinition        : 
#   18|     r18_3(glval<PropClass>) = InitializeThis           : 
#   20|     r20_1(glval<Int32>)     = VariableAddress[#return] : 
#   20|     r20_2(Int32)            = Constant[0]              : 
#   20|     mu20_3(Int32)           = Store[#return]           : &:r20_1, r20_2
#   18|     r18_4(glval<Int32>)     = VariableAddress[#return] : 
#   18|     v18_5(Void)             = ReturnValue              : &:r18_4, ~m?
#   18|     v18_6(Void)             = AliasedUse               : ~m?
#   18|     v18_7(Void)             = ExitFunction             : 

#   26| System.Void Prog.Main()
#   26|   Block 0
#   26|     v26_1(Void)             = EnterFunction              : 
#   26|     mu26_2(<unknown>)       = AliasedDefinition          : 
#   28|     r28_1(glval<PropClass>) = VariableAddress[obj]       : 
#   28|     r28_2(PropClass)        = NewObj                     : 
#   28|     r28_3(<funcaddr>)       = FunctionAddress[PropClass] : 
#   28|     v28_4(Void)             = Call[PropClass]            : func:r28_3, this:r28_2
#   28|     mu28_5(<unknown>)       = ^CallSideEffect            : ~m?
#   28|     mu28_6(PropClass)       = Store[obj]                 : &:r28_1, r28_2
#   29|     r29_1(glval<PropClass>) = VariableAddress[obj]       : 
#   29|     r29_2(PropClass)        = Load[obj]                  : &:r29_1, ~m?
#   29|     r29_3(<funcaddr>)       = FunctionAddress[set_Prop]  : 
#   29|     r29_4(Int32)            = Constant[5]                : 
#   29|     v29_5(Void)             = Call[set_Prop]             : func:r29_3, this:r29_2, 0:r29_4
#   29|     mu29_6(<unknown>)       = ^CallSideEffect            : ~m?
#   30|     r30_1(glval<Int32>)     = VariableAddress[x]         : 
#   30|     r30_2(glval<PropClass>) = VariableAddress[obj]       : 
#   30|     r30_3(PropClass)        = Load[obj]                  : &:r30_2, ~m?
#   30|     r30_4(<funcaddr>)       = FunctionAddress[get_Prop]  : 
#   30|     r30_5(Int32)            = Call[get_Prop]             : func:r30_4, this:r30_3
#   30|     mu30_6(<unknown>)       = ^CallSideEffect            : ~m?
#   30|     mu30_7(Int32)           = Store[x]                   : &:r30_1, r30_5
#   26|     v26_3(Void)             = ReturnVoid                 : 
#   26|     v26_4(Void)             = AliasedUse                 : ~m?
#   26|     v26_5(Void)             = ExitFunction               : 

simple_call.cs:
#    5| System.Int32 test_simple_call.f()
#    5|   Block 0
#    5|     v5_1(Void)         = EnterFunction            : 
#    5|     mu5_2(<unknown>)   = AliasedDefinition        : 
#    7|     r7_1(glval<Int32>) = VariableAddress[#return] : 
#    7|     r7_2(Int32)        = Constant[0]              : 
#    7|     mu7_3(Int32)       = Store[#return]           : &:r7_1, r7_2
#    5|     r5_3(glval<Int32>) = VariableAddress[#return] : 
#    5|     v5_4(Void)         = ReturnValue              : &:r5_3, ~m?
#    5|     v5_5(Void)         = AliasedUse               : ~m?
#    5|     v5_6(Void)         = ExitFunction             : 

#   10| System.Int32 test_simple_call.g()
#   10|   Block 0
#   10|     v10_1(Void)                    = EnterFunction            : 
#   10|     mu10_2(<unknown>)              = AliasedDefinition        : 
#   10|     r10_3(glval<test_simple_call>) = InitializeThis           : 
#   12|     r12_1(glval<Int32>)            = VariableAddress[#return] : 
#   12|     r12_2(<funcaddr>)              = FunctionAddress[f]       : 
#   12|     r12_3(Int32)                   = Call[f]                  : func:r12_2
#   12|     mu12_4(<unknown>)              = ^CallSideEffect          : ~m?
#   12|     mu12_5(Int32)                  = Store[#return]           : &:r12_1, r12_3
#   10|     r10_4(glval<Int32>)            = VariableAddress[#return] : 
#   10|     v10_5(Void)                    = ReturnValue              : &:r10_4, ~m?
#   10|     v10_6(Void)                    = AliasedUse               : ~m?
#   10|     v10_7(Void)                    = ExitFunction             : 

simple_function.cs:
#    5| System.Int32 test_simple_function.f()
#    5|   Block 0
#    5|     v5_1(Void)         = EnterFunction            : 
#    5|     mu5_2(<unknown>)   = AliasedDefinition        : 
#    7|     r7_1(glval<Int32>) = VariableAddress[#return] : 
#    7|     r7_2(Int32)        = Constant[0]              : 
#    7|     mu7_3(Int32)       = Store[#return]           : &:r7_1, r7_2
#    5|     r5_3(glval<Int32>) = VariableAddress[#return] : 
#    5|     v5_4(Void)         = ReturnValue              : &:r5_3, ~m?
#    5|     v5_5(Void)         = AliasedUse               : ~m?
#    5|     v5_6(Void)         = ExitFunction             : 

stmts.cs:
#    5| System.Int32 test_stmts.ifStmt(System.Int32)
#    5|   Block 0
#    5|     v5_1(Void)         = EnterFunction          : 
#    5|     mu5_2(<unknown>)   = AliasedDefinition      : 
#    5|     r5_3(glval<Int32>) = VariableAddress[x]     : 
#    5|     mu5_4(Int32)       = InitializeParameter[x] : &:r5_3
#    7|     r7_1(glval<Int32>) = VariableAddress[x]     : 
#    7|     r7_2(Int32)        = Load[x]                : &:r7_1, ~m?
#    7|     r7_3(Int32)        = Constant[5]            : 
#    7|     r7_4(Boolean)      = CompareEQ              : r7_2, r7_3
#    7|     v7_5(Void)         = ConditionalBranch      : r7_4
#-----|   False -> Block 3
#-----|   True -> Block 2

#    5|   Block 1
#    5|     r5_5(glval<Int32>) = VariableAddress[#return] : 
#    5|     v5_6(Void)         = ReturnValue              : &:r5_5, ~m?
#    5|     v5_7(Void)         = AliasedUse               : ~m?
#    5|     v5_8(Void)         = ExitFunction             : 

#    8|   Block 2
#    8|     r8_1(glval<Int32>) = VariableAddress[#return] : 
#    8|     r8_2(Int32)        = Constant[0]              : 
#    8|     mu8_3(Int32)       = Store[#return]           : &:r8_1, r8_2
#-----|   Goto -> Block 1

#   10|   Block 3
#   10|     r10_1(glval<Int32>) = VariableAddress[#return] : 
#   10|     r10_2(Int32)        = Constant[1]              : 
#   10|     mu10_3(Int32)       = Store[#return]           : &:r10_1, r10_2
#-----|   Goto -> Block 1

#   13| System.Void test_stmts.whileStmt(System.Int32)
#   13|   Block 0
#   13|     v13_1(Void)         = EnterFunction          : 
#   13|     mu13_2(<unknown>)   = AliasedDefinition      : 
#   13|     r13_3(glval<Int32>) = VariableAddress[x]     : 
#   13|     mu13_4(Int32)       = InitializeParameter[x] : &:r13_3
#   15|     r15_1(glval<Int32>) = VariableAddress[i]     : 
#   15|     r15_2(Int32)        = Constant[0]            : 
#   15|     mu15_3(Int32)       = Store[i]               : &:r15_1, r15_2
#-----|   Goto -> Block 2

#   13|   Block 1
#   13|     v13_5(Void) = ReturnVoid   : 
#   13|     v13_6(Void) = AliasedUse   : ~m?
#   13|     v13_7(Void) = ExitFunction : 

#   16|   Block 2
#   16|     r16_1(glval<Int32>) = VariableAddress[i] : 
#   16|     r16_2(Int32)        = Load[i]            : &:r16_1, ~m?
#   16|     r16_3(Int32)        = Constant[10]       : 
#   16|     r16_4(Boolean)      = CompareLT          : r16_2, r16_3
#   16|     v16_5(Void)         = ConditionalBranch  : r16_4
#-----|   False -> Block 1
#-----|   True -> Block 3

#   18|   Block 3
#   18|     r18_1(glval<Int32>) = VariableAddress[x] : 
#   18|     r18_2(Int32)        = Load[x]            : &:r18_1, ~m?
#   18|     r18_3(Int32)        = Constant[1]        : 
#   18|     r18_4(Int32)        = Add                : r18_2, r18_3
#   18|     r18_5(glval<Int32>) = VariableAddress[x] : 
#   18|     mu18_6(Int32)       = Store[x]           : &:r18_5, r18_4
#-----|   Goto (back edge) -> Block 2

#   22| System.Int32 test_stmts.switchStmt()
#   22|   Block 0
#   22|     v22_1(Void)          = EnterFunction               : 
#   22|     mu22_2(<unknown>)    = AliasedDefinition           : 
#   24|     r24_1(glval<Object>) = VariableAddress[caseSwitch] : 
#   24|     r24_2(Object)        = NewObj                      : 
#   24|     r24_3(<funcaddr>)    = FunctionAddress[Object]     : 
#   24|     v24_4(Void)          = Call[Object]                : func:r24_3, this:r24_2
#   24|     mu24_5(<unknown>)    = ^CallSideEffect             : ~m?
#   24|     mu24_6(Object)       = Store[caseSwitch]           : &:r24_1, r24_2
#   25|     r25_1(glval<Int32>)  = VariableAddress[select]     : 
#   25|     r25_2(Int32)         = Constant[0]                 : 
#   25|     mu25_3(Int32)        = Store[select]               : &:r25_1, r25_2
#   27|     r27_1(glval<Object>) = VariableAddress[caseSwitch] : 
#   27|     r27_2(Object)        = Load[caseSwitch]            : &:r27_1, ~m?
#   27|     v27_3(Void)          = Switch                      : r27_2
#-----|   Case[-1] -> Block 2
#-----|   Case[0] -> Block 3
#-----|   Case[123] -> Block 4
#-----|   Case[true] -> Block 5
#-----|   Default -> Block 6

#   22|   Block 1
#   22|     r22_3(glval<Int32>) = VariableAddress[#return] : 
#   22|     v22_4(Void)         = ReturnValue              : &:r22_3, ~m?
#   22|     v22_5(Void)         = AliasedUse               : ~m?
#   22|     v22_6(Void)         = ExitFunction             : 

#   29|   Block 2
#   29|     v29_1(Void) = NoOp : 
#   30|     v30_1(Void) = NoOp : 
#-----|   Goto (back edge) -> Block 5

#   31|   Block 3
#   31|     v31_1(Void) = NoOp : 
#   32|     v32_1(Void) = NoOp : 
#-----|   Goto (back edge) -> Block 4

#   33|   Block 4
#   33|     v33_1(Void)         = NoOp                     : 
#   34|     r34_1(Int32)        = Constant[100]            : 
#   34|     r34_2(glval<Int32>) = VariableAddress[select]  : 
#   34|     mu34_3(Int32)       = Store[select]            : &:r34_2, r34_1
#   35|     v35_1(Void)         = NoOp                     : 
#   42|     r42_1(glval<Int32>) = VariableAddress[#return] : 
#   42|     r42_2(Int32)        = Constant[0]              : 
#   42|     mu42_3(Int32)       = Store[#return]           : &:r42_1, r42_2
#-----|   Goto -> Block 1

#   36|   Block 5
#   36|     v36_1(Void)         = NoOp                    : 
#   37|     r37_1(Int32)        = Constant[101]           : 
#   37|     r37_2(glval<Int32>) = VariableAddress[select] : 
#   37|     mu37_3(Int32)       = Store[select]           : &:r37_2, r37_1
#   38|     v38_1(Void)         = NoOp                    : 
#-----|   Goto (back edge) -> Block 6

#   39|   Block 6
#   39|     v39_1(Void)         = NoOp                     : 
#   40|     r40_1(glval<Int32>) = VariableAddress[#return] : 
#   40|     r40_2(glval<Int32>) = VariableAddress[select]  : 
#   40|     r40_3(Int32)        = Load[select]             : &:r40_2, ~m?
#   40|     mu40_4(Int32)       = Store[#return]           : &:r40_1, r40_3
#-----|   Goto -> Block 1

#   45| System.Void test_stmts.tryCatchFinally()
#   45|   Block 0
#   45|     v45_1(Void)         = EnterFunction      : 
#   45|     mu45_2(<unknown>)   = AliasedDefinition  : 
#   47|     r47_1(glval<Int32>) = VariableAddress[x] : 
#   47|     r47_2(Int32)        = Constant[5]        : 
#   47|     mu47_3(Int32)       = Store[x]           : &:r47_1, r47_2
#   50|     r50_1(glval<Int32>) = VariableAddress[x] : 
#   50|     r50_2(Int32)        = Load[x]            : &:r50_1, ~m?
#   50|     r50_3(Int32)        = Constant[0]        : 
#   50|     r50_4(Boolean)      = CompareNE          : r50_2, r50_3
#   50|     v50_5(Void)         = ConditionalBranch  : r50_4
#-----|   False -> Block 4
#-----|   True -> Block 3

#   45|   Block 1
#   45|     v45_3(Void) = AliasedUse   : ~m?
#   45|     v45_4(Void) = ExitFunction : 

#   45|   Block 2
#   45|     v45_5(Void) = Unwind : 
#-----|   Goto -> Block 1

#   51|   Block 3
#   51|     r51_1(glval<Exception>) = VariableAddress[#throw51:17] : 
#   51|     r51_2(Exception)        = NewObj                       : 
#   51|     r51_3(<funcaddr>)       = FunctionAddress[Exception]   : 
#   51|     v51_4(Void)             = Call[Exception]              : func:r51_3, this:r51_2
#   51|     mu51_5(<unknown>)       = ^CallSideEffect              : ~m?
#   51|     mu51_6(Exception)       = Store[#throw51:17]           : &:r51_1, r51_2
#   51|     v51_7(Void)             = ThrowValue                   : &:r51_1, ~m?
#-----|   Exception -> Block 6

#   52|   Block 4
#   52|     r52_1(Int32)        = Constant[0]        : 
#   52|     r52_2(glval<Int32>) = VariableAddress[x] : 
#   52|     mu52_3(Int32)       = Store[x]           : &:r52_2, r52_1
#-----|   Goto -> Block 5

#   64|   Block 5
#   64|     r64_1(Int32)        = Constant[2]        : 
#   64|     r64_2(glval<Int32>) = VariableAddress[x] : 
#   64|     mu64_3(Int32)       = Store[x]           : &:r64_2, r64_1
#   45|     v45_6(Void)         = ReturnVoid         : 
#-----|   Goto -> Block 1

#   54|   Block 6
#   54|     v54_1(Void) = CatchByType[Exception] : 
#-----|   Exception -> Block 8
#-----|   Goto -> Block 7

#   54|   Block 7
#   54|     r54_2(glval<Exception>) = VariableAddress[ex] : 
#   54|     mu54_3(Exception)       = Uninitialized[ex]   : &:r54_2
#   56|     r56_1(Int32)            = Constant[1]         : 
#   56|     r56_2(glval<Int32>)     = VariableAddress[x]  : 
#   56|     mu56_3(Int32)           = Store[x]            : &:r56_2, r56_1
#-----|   Goto -> Block 5

#   58|   Block 8
#   58|     v58_1(Void) = CatchAny : 
#   60|     v60_1(Void) = ReThrow  : 
#-----|   Exception -> Block 2

#   68| System.Void test_stmts.forStmt()
#   68|   Block 0
#   68|     v68_1(Void)         = EnterFunction      : 
#   68|     mu68_2(<unknown>)   = AliasedDefinition  : 
#   70|     r70_1(glval<Int32>) = VariableAddress[x] : 
#   70|     r70_2(Int32)        = Constant[0]        : 
#   70|     mu70_3(Int32)       = Store[x]           : &:r70_1, r70_2
#   71|     r71_1(glval<Int32>) = VariableAddress[i] : 
#   71|     r71_2(Int32)        = Constant[0]        : 
#   71|     mu71_3(Int32)       = Store[i]           : &:r71_1, r71_2
#   71|     r71_4(glval<Int32>) = VariableAddress[j] : 
#   71|     r71_5(Int32)        = Constant[10]       : 
#   71|     mu71_6(Int32)       = Store[j]           : &:r71_4, r71_5
#-----|   Goto -> Block 2

#   68|   Block 1
#   68|     v68_3(Void) = ReturnVoid   : 
#   68|     v68_4(Void) = AliasedUse   : ~m?
#   68|     v68_5(Void) = ExitFunction : 

#   71|   Block 2
#   71|     r71_7(glval<Int32>) = VariableAddress[i] : 
#   71|     r71_8(Int32)        = Load[i]            : &:r71_7, ~m?
#   71|     r71_9(glval<Int32>) = VariableAddress[j] : 
#   71|     r71_10(Int32)       = Load[j]            : &:r71_9, ~m?
#   71|     r71_11(Boolean)     = CompareLT          : r71_8, r71_10
#   71|     v71_12(Void)        = ConditionalBranch  : r71_11
#-----|   False -> Block 4
#-----|   True -> Block 3

#   73|   Block 3
#   73|     r73_1(glval<Int32>)  = VariableAddress[x] : 
#   73|     r73_2(Int32)         = Load[x]            : &:r73_1, ~m?
#   73|     r73_3(Int32)         = Constant[1]        : 
#   73|     r73_4(Int32)         = Sub                : r73_2, r73_3
#   73|     r73_5(glval<Int32>)  = VariableAddress[x] : 
#   73|     mu73_6(Int32)        = Store[x]           : &:r73_5, r73_4
#   71|     r71_13(glval<Int32>) = VariableAddress[i] : 
#   71|     r71_14(Int32)        = Load[i]            : &:r71_13, ~m?
#   71|     r71_15(Int32)        = Constant[1]        : 
#   71|     r71_16(Int32)        = Add                : r71_14, r71_15
#   71|     mu71_17(Int32)       = Store[i]           : &:r71_13, r71_16
#   71|     r71_18(glval<Int32>) = VariableAddress[j] : 
#   71|     r71_19(Int32)        = Load[j]            : &:r71_18, ~m?
#   71|     r71_20(Int32)        = Constant[1]        : 
#   71|     r71_21(Int32)        = Sub                : r71_19, r71_20
#   71|     mu71_22(Int32)       = Store[j]           : &:r71_18, r71_21
#-----|   Goto (back edge) -> Block 2

#   76|   Block 4
#   76|     r76_1(glval<Int32>) = VariableAddress[a] : 
#   76|     mu76_2(Int32)       = Uninitialized[a]   : &:r76_1
#   76|     r76_3(glval<Int32>) = VariableAddress[b] : 
#   76|     r76_4(Int32)        = Constant[10]       : 
#   76|     mu76_5(Int32)       = Store[b]           : &:r76_3, r76_4
#   77|     r77_1(Int32)        = Constant[0]        : 
#   77|     r77_2(glval<Int32>) = VariableAddress[a] : 
#   77|     mu77_3(Int32)       = Store[a]           : &:r77_2, r77_1
#-----|   Goto -> Block 5

#   77|   Block 5
#   77|     r77_4(glval<Int32>) = VariableAddress[a] : 
#   77|     r77_5(Int32)        = Load[a]            : &:r77_4, ~m?
#   77|     r77_6(glval<Int32>) = VariableAddress[b] : 
#   77|     r77_7(Int32)        = Load[b]            : &:r77_6, ~m?
#   77|     r77_8(Boolean)      = CompareLT          : r77_5, r77_7
#   77|     v77_9(Void)         = ConditionalBranch  : r77_8
#-----|   False -> Block 7
#-----|   True -> Block 6

#   79|   Block 6
#   79|     r79_1(glval<Int32>) = VariableAddress[a] : 
#   79|     r79_2(Int32)        = Load[a]            : &:r79_1, ~m?
#   79|     r79_3(Int32)        = Constant[1]        : 
#   79|     r79_4(Int32)        = Add                : r79_2, r79_3
#   79|     mu79_5(Int32)       = Store[a]           : &:r79_1, r79_4
#-----|   Goto (back edge) -> Block 5

#   83|   Block 7
#   83|     v83_1(Void) = NoOp : 
#-----|   Goto (back edge) -> Block 7

#   88| System.Void test_stmts.doWhile()
#   88|   Block 0
#   88|     v88_1(Void)         = EnterFunction      : 
#   88|     mu88_2(<unknown>)   = AliasedDefinition  : 
#   90|     r90_1(glval<Int32>) = VariableAddress[x] : 
#   90|     r90_2(Int32)        = Constant[0]        : 
#   90|     mu90_3(Int32)       = Store[x]           : &:r90_1, r90_2
#-----|   Goto -> Block 2

#   88|   Block 1
#   88|     v88_3(Void) = ReturnVoid   : 
#   88|     v88_4(Void) = AliasedUse   : ~m?
#   88|     v88_5(Void) = ExitFunction : 

#   93|   Block 2
#   93|     r93_1(glval<Int32>) = VariableAddress[x] : 
#   93|     r93_2(Int32)        = Load[x]            : &:r93_1, ~m?
#   93|     r93_3(Int32)        = Constant[1]        : 
#   93|     r93_4(Int32)        = Add                : r93_2, r93_3
#   93|     r93_5(glval<Int32>) = VariableAddress[x] : 
#   93|     mu93_6(Int32)       = Store[x]           : &:r93_5, r93_4
#   95|     r95_1(glval<Int32>) = VariableAddress[x] : 
#   95|     r95_2(Int32)        = Load[x]            : &:r95_1, ~m?
#   95|     r95_3(Int32)        = Constant[10]       : 
#   95|     r95_4(Boolean)      = CompareLT          : r95_2, r95_3
#   95|     v95_5(Void)         = ConditionalBranch  : r95_4
#-----|   False -> Block 1
#-----|   True (back edge) -> Block 2

#   98| System.Void test_stmts.checkedUnchecked()
#   98|   Block 0
#   98|     v98_1(Void)          = EnterFunction        : 
#   98|     mu98_2(<unknown>)    = AliasedDefinition    : 
#  100|     r100_1(glval<Int32>) = VariableAddress[num] : 
#  100|     r100_2(Int32)        = Constant[2147483647] : 
#  100|     r100_3(Int32)        = Load[?]              : &:r100_2, ~m?
#  100|     mu100_4(Int32)       = Store[num]           : &:r100_1, r100_3
#  103|     r103_1(glval<Int32>) = VariableAddress[num] : 
#  103|     r103_2(Int32)        = Load[num]            : &:r103_1, ~m?
#  103|     r103_3(Int32)        = Constant[1]          : 
#  103|     r103_4(Int32)        = Add                  : r103_2, r103_3
#  103|     r103_5(glval<Int32>) = VariableAddress[num] : 
#  103|     mu103_6(Int32)       = Store[num]           : &:r103_5, r103_4
#  107|     r107_1(glval<Int32>) = VariableAddress[num] : 
#  107|     r107_2(Int32)        = Load[num]            : &:r107_1, ~m?
#  107|     r107_3(Int32)        = Constant[1]          : 
#  107|     r107_4(Int32)        = Add                  : r107_2, r107_3
#  107|     r107_5(glval<Int32>) = VariableAddress[num] : 
#  107|     mu107_6(Int32)       = Store[num]           : &:r107_5, r107_4
#   98|     v98_3(Void)          = ReturnVoid           : 
#   98|     v98_4(Void)          = AliasedUse           : ~m?
#   98|     v98_5(Void)          = ExitFunction         : 

using.cs:
#    7| System.Void UsingStmt.MyDisposable..ctor()
#    7|   Block 0
#    7|     v7_1(Void)                = EnterFunction                  : 
#    7|     mu7_2(<unknown>)          = AliasedDefinition              : 
#    7|     r7_3(glval<MyDisposable>) = InitializeThis                 : 
#    7|     r7_4(glval<Object>)       = Convert[MyDisposable : Object] : r7_3
#    7|     r7_5(<funcaddr>)          = FunctionAddress[Object]        : 
#    7|     v7_6(Void)                = Call[Object]                   : func:r7_5, this:r7_4
#    7|     mu7_7(<unknown>)          = ^CallSideEffect                : ~m?
#    7|     v7_8(Void)                = NoOp                           : 
#    7|     v7_9(Void)                = ReturnVoid                     : 
#    7|     v7_10(Void)               = AliasedUse                     : ~m?
#    7|     v7_11(Void)               = ExitFunction                   : 

#    8| System.Void UsingStmt.MyDisposable.DoSomething()
#    8|   Block 0
#    8|     v8_1(Void)                = EnterFunction     : 
#    8|     mu8_2(<unknown>)          = AliasedDefinition : 
#    8|     r8_3(glval<MyDisposable>) = InitializeThis    : 
#    8|     v8_4(Void)                = NoOp              : 
#    8|     v8_5(Void)                = ReturnVoid        : 
#    8|     v8_6(Void)                = AliasedUse        : ~m?
#    8|     v8_7(Void)                = ExitFunction      : 

#    9| System.Void UsingStmt.MyDisposable.Dispose()
#    9|   Block 0
#    9|     v9_1(Void)                = EnterFunction     : 
#    9|     mu9_2(<unknown>)          = AliasedDefinition : 
#    9|     r9_3(glval<MyDisposable>) = InitializeThis    : 
#    9|     v9_4(Void)                = NoOp              : 
#    9|     v9_5(Void)                = ReturnVoid        : 
#    9|     v9_6(Void)                = AliasedUse        : ~m?
#    9|     v9_7(Void)                = ExitFunction      : 

#   12| System.Void UsingStmt.Main()
#   12|   Block 0
#   12|     v12_1(Void)                = EnterFunction                 : 
#   12|     mu12_2(<unknown>)          = AliasedDefinition             : 
#   14|     r14_1(glval<MyDisposable>) = VariableAddress[o1]           : 
#   14|     r14_2(MyDisposable)        = NewObj                        : 
#   14|     r14_3(<funcaddr>)          = FunctionAddress[MyDisposable] : 
#   14|     v14_4(Void)                = Call[MyDisposable]            : func:r14_3, this:r14_2
#   14|     mu14_5(<unknown>)          = ^CallSideEffect               : ~m?
#   14|     mu14_6(MyDisposable)       = Store[o1]                     : &:r14_1, r14_2
#   16|     r16_1(glval<MyDisposable>) = VariableAddress[o1]           : 
#   16|     r16_2(MyDisposable)        = Load[o1]                      : &:r16_1, ~m?
#   16|     r16_3(<funcaddr>)          = FunctionAddress[DoSomething]  : 
#   16|     v16_4(Void)                = Call[DoSomething]             : func:r16_3, this:r16_2
#   16|     mu16_5(<unknown>)          = ^CallSideEffect               : ~m?
#   19|     r19_1(glval<MyDisposable>) = VariableAddress[o2]           : 
#   19|     r19_2(MyDisposable)        = NewObj                        : 
#   19|     r19_3(<funcaddr>)          = FunctionAddress[MyDisposable] : 
#   19|     v19_4(Void)                = Call[MyDisposable]            : func:r19_3, this:r19_2
#   19|     mu19_5(<unknown>)          = ^CallSideEffect               : ~m?
#   19|     mu19_6(MyDisposable)       = Store[o2]                     : &:r19_1, r19_2
#   22|     r22_1(glval<MyDisposable>) = VariableAddress[o2]           : 
#   22|     r22_2(MyDisposable)        = Load[o2]                      : &:r22_1, ~m?
#   22|     r22_3(<funcaddr>)          = FunctionAddress[DoSomething]  : 
#   22|     v22_4(Void)                = Call[DoSomething]             : func:r22_3, this:r22_2
#   22|     mu22_5(<unknown>)          = ^CallSideEffect               : ~m?
#   25|     r25_1(glval<MyDisposable>) = VariableAddress[o3]           : 
#   25|     r25_2(MyDisposable)        = NewObj                        : 
#   25|     r25_3(<funcaddr>)          = FunctionAddress[MyDisposable] : 
#   25|     v25_4(Void)                = Call[MyDisposable]            : func:r25_3, this:r25_2
#   25|     mu25_5(<unknown>)          = ^CallSideEffect               : ~m?
#   25|     mu25_6(MyDisposable)       = Store[o3]                     : &:r25_1, r25_2
#   26|     r26_1(glval<MyDisposable>) = VariableAddress[o3]           : 
#   26|     r26_2(MyDisposable)        = Load[o3]                      : &:r26_1, ~m?
#   26|     r26_3(<funcaddr>)          = FunctionAddress[DoSomething]  : 
#   26|     v26_4(Void)                = Call[DoSomething]             : func:r26_3, this:r26_2
#   26|     mu26_5(<unknown>)          = ^CallSideEffect               : ~m?
#   12|     v12_3(Void)                = ReturnVoid                    : 
#   12|     v12_4(Void)                = AliasedUse                    : ~m?
#   12|     v12_5(Void)                = ExitFunction                  : 

variables.cs:
#    5| System.Void test_variables.f()
#    5|   Block 0
#    5|     v5_1(Void)          = EnterFunction      : 
#    5|     mu5_2(<unknown>)    = AliasedDefinition  : 
#    7|     r7_1(glval<Int32>)  = VariableAddress[x] : 
#    7|     mu7_2(Int32)        = Uninitialized[x]   : &:r7_1
#    7|     r7_3(glval<Int32>)  = VariableAddress[y] : 
#    7|     r7_4(Int32)         = Constant[5]        : 
#    7|     mu7_5(Int32)        = Store[y]           : &:r7_3, r7_4
#    8|     r8_1(Int32)         = Constant[4]        : 
#    8|     r8_2(glval<Int32>)  = VariableAddress[x] : 
#    8|     mu8_3(Int32)        = Store[x]           : &:r8_2, r8_1
#    9|     r9_1(glval<Int32>)  = VariableAddress[y] : 
#    9|     r9_2(Int32)         = Load[y]            : &:r9_1, ~m?
#    9|     r9_3(glval<Int32>)  = VariableAddress[x] : 
#    9|     mu9_4(Int32)        = Store[x]           : &:r9_3, r9_2
#   10|     r10_1(glval<Int32>) = VariableAddress[z] : 
#   10|     r10_2(glval<Int32>) = VariableAddress[y] : 
#   10|     r10_3(Int32)        = Load[y]            : &:r10_2, ~m?
#   10|     mu10_4(Int32)       = Store[z]           : &:r10_1, r10_3
#    5|     v5_3(Void)          = ReturnVoid         : 
#    5|     v5_4(Void)          = AliasedUse         : ~m?
#    5|     v5_5(Void)          = ExitFunction       : 
