// This file contains auto-generated code.

namespace System
{
    namespace Runtime
    {
        namespace Intrinsics
        {
            // Generated from `System.Runtime.Intrinsics.Vector128` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
            public static class Vector128
            {
                public static System.Runtime.Intrinsics.Vector128<U> As<T, U>(this System.Runtime.Intrinsics.Vector128<T> vector) where T : struct where U : struct => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.Byte> AsByte<T>(this System.Runtime.Intrinsics.Vector128<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector128<double> AsDouble<T>(this System.Runtime.Intrinsics.Vector128<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.Int16> AsInt16<T>(this System.Runtime.Intrinsics.Vector128<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector128<int> AsInt32<T>(this System.Runtime.Intrinsics.Vector128<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.Int64> AsInt64<T>(this System.Runtime.Intrinsics.Vector128<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.SByte> AsSByte<T>(this System.Runtime.Intrinsics.Vector128<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector128<float> AsSingle<T>(this System.Runtime.Intrinsics.Vector128<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.UInt16> AsUInt16<T>(this System.Runtime.Intrinsics.Vector128<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.UInt32> AsUInt32<T>(this System.Runtime.Intrinsics.Vector128<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.UInt64> AsUInt64<T>(this System.Runtime.Intrinsics.Vector128<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector128<float> AsVector128(this System.Numerics.Vector2 value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<float> AsVector128(this System.Numerics.Vector3 value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<float> AsVector128(this System.Numerics.Vector4 value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<T> AsVector128<T>(this System.Numerics.Vector<T> value) where T : struct => throw null;
                public static System.Numerics.Vector2 AsVector2(this System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                public static System.Numerics.Vector3 AsVector3(this System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                public static System.Numerics.Vector4 AsVector4(this System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                public static System.Numerics.Vector<T> AsVector<T>(this System.Runtime.Intrinsics.Vector128<T> value) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.Byte> Create(System.Runtime.Intrinsics.Vector64<System.Byte> lower, System.Runtime.Intrinsics.Vector64<System.Byte> upper) => throw null;
                public static System.Runtime.Intrinsics.Vector128<double> Create(System.Runtime.Intrinsics.Vector64<double> lower, System.Runtime.Intrinsics.Vector64<double> upper) => throw null;
                public static System.Runtime.Intrinsics.Vector128<float> Create(System.Runtime.Intrinsics.Vector64<float> lower, System.Runtime.Intrinsics.Vector64<float> upper) => throw null;
                public static System.Runtime.Intrinsics.Vector128<int> Create(System.Runtime.Intrinsics.Vector64<int> lower, System.Runtime.Intrinsics.Vector64<int> upper) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.Int64> Create(System.Runtime.Intrinsics.Vector64<System.Int64> lower, System.Runtime.Intrinsics.Vector64<System.Int64> upper) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.SByte> Create(System.Runtime.Intrinsics.Vector64<System.SByte> lower, System.Runtime.Intrinsics.Vector64<System.SByte> upper) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.Int16> Create(System.Runtime.Intrinsics.Vector64<System.Int16> lower, System.Runtime.Intrinsics.Vector64<System.Int16> upper) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.UInt32> Create(System.Runtime.Intrinsics.Vector64<System.UInt32> lower, System.Runtime.Intrinsics.Vector64<System.UInt32> upper) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.UInt64> Create(System.Runtime.Intrinsics.Vector64<System.UInt64> lower, System.Runtime.Intrinsics.Vector64<System.UInt64> upper) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.UInt16> Create(System.Runtime.Intrinsics.Vector64<System.UInt16> lower, System.Runtime.Intrinsics.Vector64<System.UInt16> upper) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.Byte> Create(System.Byte value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.Byte> Create(System.Byte e0, System.Byte e1, System.Byte e2, System.Byte e3, System.Byte e4, System.Byte e5, System.Byte e6, System.Byte e7, System.Byte e8, System.Byte e9, System.Byte e10, System.Byte e11, System.Byte e12, System.Byte e13, System.Byte e14, System.Byte e15) => throw null;
                public static System.Runtime.Intrinsics.Vector128<double> Create(double value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<double> Create(double e0, double e1) => throw null;
                public static System.Runtime.Intrinsics.Vector128<float> Create(float value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<float> Create(float e0, float e1, float e2, float e3) => throw null;
                public static System.Runtime.Intrinsics.Vector128<int> Create(int value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<int> Create(int e0, int e1, int e2, int e3) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.Int64> Create(System.Int64 value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.Int64> Create(System.Int64 e0, System.Int64 e1) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.SByte> Create(System.SByte value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.SByte> Create(System.SByte e0, System.SByte e1, System.SByte e2, System.SByte e3, System.SByte e4, System.SByte e5, System.SByte e6, System.SByte e7, System.SByte e8, System.SByte e9, System.SByte e10, System.SByte e11, System.SByte e12, System.SByte e13, System.SByte e14, System.SByte e15) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.Int16> Create(System.Int16 value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.Int16> Create(System.Int16 e0, System.Int16 e1, System.Int16 e2, System.Int16 e3, System.Int16 e4, System.Int16 e5, System.Int16 e6, System.Int16 e7) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.UInt32> Create(System.UInt32 value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.UInt32> Create(System.UInt32 e0, System.UInt32 e1, System.UInt32 e2, System.UInt32 e3) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.UInt64> Create(System.UInt64 value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.UInt64> Create(System.UInt64 e0, System.UInt64 e1) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.UInt16> Create(System.UInt16 value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.UInt16> Create(System.UInt16 e0, System.UInt16 e1, System.UInt16 e2, System.UInt16 e3, System.UInt16 e4, System.UInt16 e5, System.UInt16 e6, System.UInt16 e7) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.Byte> CreateScalar(System.Byte value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<double> CreateScalar(double value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<float> CreateScalar(float value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<int> CreateScalar(int value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.Int64> CreateScalar(System.Int64 value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.SByte> CreateScalar(System.SByte value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.Int16> CreateScalar(System.Int16 value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.UInt32> CreateScalar(System.UInt32 value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.UInt64> CreateScalar(System.UInt64 value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.UInt16> CreateScalar(System.UInt16 value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.Byte> CreateScalarUnsafe(System.Byte value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<double> CreateScalarUnsafe(double value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<float> CreateScalarUnsafe(float value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<int> CreateScalarUnsafe(int value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.Int64> CreateScalarUnsafe(System.Int64 value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.SByte> CreateScalarUnsafe(System.SByte value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.Int16> CreateScalarUnsafe(System.Int16 value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.UInt32> CreateScalarUnsafe(System.UInt32 value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.UInt64> CreateScalarUnsafe(System.UInt64 value) => throw null;
                public static System.Runtime.Intrinsics.Vector128<System.UInt16> CreateScalarUnsafe(System.UInt16 value) => throw null;
                public static T GetElement<T>(this System.Runtime.Intrinsics.Vector128<T> vector, int index) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector64<T> GetLower<T>(this System.Runtime.Intrinsics.Vector128<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector64<T> GetUpper<T>(this System.Runtime.Intrinsics.Vector128<T> vector) where T : struct => throw null;
                public static T ToScalar<T>(this System.Runtime.Intrinsics.Vector128<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector256<T> ToVector256<T>(this System.Runtime.Intrinsics.Vector128<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector256<T> ToVector256Unsafe<T>(this System.Runtime.Intrinsics.Vector128<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector128<T> WithElement<T>(this System.Runtime.Intrinsics.Vector128<T> vector, int index, T value) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector128<T> WithLower<T>(this System.Runtime.Intrinsics.Vector128<T> vector, System.Runtime.Intrinsics.Vector64<T> value) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector128<T> WithUpper<T>(this System.Runtime.Intrinsics.Vector128<T> vector, System.Runtime.Intrinsics.Vector64<T> value) where T : struct => throw null;
            }

            // Generated from `System.Runtime.Intrinsics.Vector128<>` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
            public struct Vector128<T> : System.IEquatable<System.Runtime.Intrinsics.Vector128<T>> where T : struct
            {
                public static System.Runtime.Intrinsics.Vector128<T> AllBitsSet { get => throw null; }
                public static int Count { get => throw null; }
                public bool Equals(System.Runtime.Intrinsics.Vector128<T> other) => throw null;
                public override bool Equals(object obj) => throw null;
                public override int GetHashCode() => throw null;
                public override string ToString() => throw null;
                // Stub generator skipped constructor 
                public static System.Runtime.Intrinsics.Vector128<T> Zero { get => throw null; }
            }

            // Generated from `System.Runtime.Intrinsics.Vector256` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
            public static class Vector256
            {
                public static System.Runtime.Intrinsics.Vector256<U> As<T, U>(this System.Runtime.Intrinsics.Vector256<T> vector) where T : struct where U : struct => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.Byte> AsByte<T>(this System.Runtime.Intrinsics.Vector256<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector256<double> AsDouble<T>(this System.Runtime.Intrinsics.Vector256<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.Int16> AsInt16<T>(this System.Runtime.Intrinsics.Vector256<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector256<int> AsInt32<T>(this System.Runtime.Intrinsics.Vector256<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.Int64> AsInt64<T>(this System.Runtime.Intrinsics.Vector256<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.SByte> AsSByte<T>(this System.Runtime.Intrinsics.Vector256<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector256<float> AsSingle<T>(this System.Runtime.Intrinsics.Vector256<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.UInt16> AsUInt16<T>(this System.Runtime.Intrinsics.Vector256<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.UInt32> AsUInt32<T>(this System.Runtime.Intrinsics.Vector256<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.UInt64> AsUInt64<T>(this System.Runtime.Intrinsics.Vector256<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector256<T> AsVector256<T>(this System.Numerics.Vector<T> value) where T : struct => throw null;
                public static System.Numerics.Vector<T> AsVector<T>(this System.Runtime.Intrinsics.Vector256<T> value) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.Byte> Create(System.Runtime.Intrinsics.Vector128<System.Byte> lower, System.Runtime.Intrinsics.Vector128<System.Byte> upper) => throw null;
                public static System.Runtime.Intrinsics.Vector256<double> Create(System.Runtime.Intrinsics.Vector128<double> lower, System.Runtime.Intrinsics.Vector128<double> upper) => throw null;
                public static System.Runtime.Intrinsics.Vector256<float> Create(System.Runtime.Intrinsics.Vector128<float> lower, System.Runtime.Intrinsics.Vector128<float> upper) => throw null;
                public static System.Runtime.Intrinsics.Vector256<int> Create(System.Runtime.Intrinsics.Vector128<int> lower, System.Runtime.Intrinsics.Vector128<int> upper) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.Int64> Create(System.Runtime.Intrinsics.Vector128<System.Int64> lower, System.Runtime.Intrinsics.Vector128<System.Int64> upper) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.SByte> Create(System.Runtime.Intrinsics.Vector128<System.SByte> lower, System.Runtime.Intrinsics.Vector128<System.SByte> upper) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.Int16> Create(System.Runtime.Intrinsics.Vector128<System.Int16> lower, System.Runtime.Intrinsics.Vector128<System.Int16> upper) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.UInt32> Create(System.Runtime.Intrinsics.Vector128<System.UInt32> lower, System.Runtime.Intrinsics.Vector128<System.UInt32> upper) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.UInt64> Create(System.Runtime.Intrinsics.Vector128<System.UInt64> lower, System.Runtime.Intrinsics.Vector128<System.UInt64> upper) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.UInt16> Create(System.Runtime.Intrinsics.Vector128<System.UInt16> lower, System.Runtime.Intrinsics.Vector128<System.UInt16> upper) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.Byte> Create(System.Byte value) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.Byte> Create(System.Byte e0, System.Byte e1, System.Byte e2, System.Byte e3, System.Byte e4, System.Byte e5, System.Byte e6, System.Byte e7, System.Byte e8, System.Byte e9, System.Byte e10, System.Byte e11, System.Byte e12, System.Byte e13, System.Byte e14, System.Byte e15, System.Byte e16, System.Byte e17, System.Byte e18, System.Byte e19, System.Byte e20, System.Byte e21, System.Byte e22, System.Byte e23, System.Byte e24, System.Byte e25, System.Byte e26, System.Byte e27, System.Byte e28, System.Byte e29, System.Byte e30, System.Byte e31) => throw null;
                public static System.Runtime.Intrinsics.Vector256<double> Create(double value) => throw null;
                public static System.Runtime.Intrinsics.Vector256<double> Create(double e0, double e1, double e2, double e3) => throw null;
                public static System.Runtime.Intrinsics.Vector256<float> Create(float value) => throw null;
                public static System.Runtime.Intrinsics.Vector256<float> Create(float e0, float e1, float e2, float e3, float e4, float e5, float e6, float e7) => throw null;
                public static System.Runtime.Intrinsics.Vector256<int> Create(int value) => throw null;
                public static System.Runtime.Intrinsics.Vector256<int> Create(int e0, int e1, int e2, int e3, int e4, int e5, int e6, int e7) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.Int64> Create(System.Int64 value) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.Int64> Create(System.Int64 e0, System.Int64 e1, System.Int64 e2, System.Int64 e3) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.SByte> Create(System.SByte value) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.SByte> Create(System.SByte e0, System.SByte e1, System.SByte e2, System.SByte e3, System.SByte e4, System.SByte e5, System.SByte e6, System.SByte e7, System.SByte e8, System.SByte e9, System.SByte e10, System.SByte e11, System.SByte e12, System.SByte e13, System.SByte e14, System.SByte e15, System.SByte e16, System.SByte e17, System.SByte e18, System.SByte e19, System.SByte e20, System.SByte e21, System.SByte e22, System.SByte e23, System.SByte e24, System.SByte e25, System.SByte e26, System.SByte e27, System.SByte e28, System.SByte e29, System.SByte e30, System.SByte e31) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.Int16> Create(System.Int16 value) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.Int16> Create(System.Int16 e0, System.Int16 e1, System.Int16 e2, System.Int16 e3, System.Int16 e4, System.Int16 e5, System.Int16 e6, System.Int16 e7, System.Int16 e8, System.Int16 e9, System.Int16 e10, System.Int16 e11, System.Int16 e12, System.Int16 e13, System.Int16 e14, System.Int16 e15) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.UInt32> Create(System.UInt32 value) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.UInt32> Create(System.UInt32 e0, System.UInt32 e1, System.UInt32 e2, System.UInt32 e3, System.UInt32 e4, System.UInt32 e5, System.UInt32 e6, System.UInt32 e7) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.UInt64> Create(System.UInt64 value) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.UInt64> Create(System.UInt64 e0, System.UInt64 e1, System.UInt64 e2, System.UInt64 e3) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.UInt16> Create(System.UInt16 value) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.UInt16> Create(System.UInt16 e0, System.UInt16 e1, System.UInt16 e2, System.UInt16 e3, System.UInt16 e4, System.UInt16 e5, System.UInt16 e6, System.UInt16 e7, System.UInt16 e8, System.UInt16 e9, System.UInt16 e10, System.UInt16 e11, System.UInt16 e12, System.UInt16 e13, System.UInt16 e14, System.UInt16 e15) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.Byte> CreateScalar(System.Byte value) => throw null;
                public static System.Runtime.Intrinsics.Vector256<double> CreateScalar(double value) => throw null;
                public static System.Runtime.Intrinsics.Vector256<float> CreateScalar(float value) => throw null;
                public static System.Runtime.Intrinsics.Vector256<int> CreateScalar(int value) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.Int64> CreateScalar(System.Int64 value) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.SByte> CreateScalar(System.SByte value) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.Int16> CreateScalar(System.Int16 value) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.UInt32> CreateScalar(System.UInt32 value) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.UInt64> CreateScalar(System.UInt64 value) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.UInt16> CreateScalar(System.UInt16 value) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.Byte> CreateScalarUnsafe(System.Byte value) => throw null;
                public static System.Runtime.Intrinsics.Vector256<double> CreateScalarUnsafe(double value) => throw null;
                public static System.Runtime.Intrinsics.Vector256<float> CreateScalarUnsafe(float value) => throw null;
                public static System.Runtime.Intrinsics.Vector256<int> CreateScalarUnsafe(int value) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.Int64> CreateScalarUnsafe(System.Int64 value) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.SByte> CreateScalarUnsafe(System.SByte value) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.Int16> CreateScalarUnsafe(System.Int16 value) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.UInt32> CreateScalarUnsafe(System.UInt32 value) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.UInt64> CreateScalarUnsafe(System.UInt64 value) => throw null;
                public static System.Runtime.Intrinsics.Vector256<System.UInt16> CreateScalarUnsafe(System.UInt16 value) => throw null;
                public static T GetElement<T>(this System.Runtime.Intrinsics.Vector256<T> vector, int index) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector128<T> GetLower<T>(this System.Runtime.Intrinsics.Vector256<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector128<T> GetUpper<T>(this System.Runtime.Intrinsics.Vector256<T> vector) where T : struct => throw null;
                public static T ToScalar<T>(this System.Runtime.Intrinsics.Vector256<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector256<T> WithElement<T>(this System.Runtime.Intrinsics.Vector256<T> vector, int index, T value) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector256<T> WithLower<T>(this System.Runtime.Intrinsics.Vector256<T> vector, System.Runtime.Intrinsics.Vector128<T> value) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector256<T> WithUpper<T>(this System.Runtime.Intrinsics.Vector256<T> vector, System.Runtime.Intrinsics.Vector128<T> value) where T : struct => throw null;
            }

            // Generated from `System.Runtime.Intrinsics.Vector256<>` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
            public struct Vector256<T> : System.IEquatable<System.Runtime.Intrinsics.Vector256<T>> where T : struct
            {
                public static System.Runtime.Intrinsics.Vector256<T> AllBitsSet { get => throw null; }
                public static int Count { get => throw null; }
                public bool Equals(System.Runtime.Intrinsics.Vector256<T> other) => throw null;
                public override bool Equals(object obj) => throw null;
                public override int GetHashCode() => throw null;
                public override string ToString() => throw null;
                // Stub generator skipped constructor 
                public static System.Runtime.Intrinsics.Vector256<T> Zero { get => throw null; }
            }

            // Generated from `System.Runtime.Intrinsics.Vector64` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
            public static class Vector64
            {
                public static System.Runtime.Intrinsics.Vector64<U> As<T, U>(this System.Runtime.Intrinsics.Vector64<T> vector) where T : struct where U : struct => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.Byte> AsByte<T>(this System.Runtime.Intrinsics.Vector64<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector64<double> AsDouble<T>(this System.Runtime.Intrinsics.Vector64<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.Int16> AsInt16<T>(this System.Runtime.Intrinsics.Vector64<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector64<int> AsInt32<T>(this System.Runtime.Intrinsics.Vector64<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.Int64> AsInt64<T>(this System.Runtime.Intrinsics.Vector64<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.SByte> AsSByte<T>(this System.Runtime.Intrinsics.Vector64<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector64<float> AsSingle<T>(this System.Runtime.Intrinsics.Vector64<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.UInt16> AsUInt16<T>(this System.Runtime.Intrinsics.Vector64<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.UInt32> AsUInt32<T>(this System.Runtime.Intrinsics.Vector64<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.UInt64> AsUInt64<T>(this System.Runtime.Intrinsics.Vector64<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.Byte> Create(System.Byte value) => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.Byte> Create(System.Byte e0, System.Byte e1, System.Byte e2, System.Byte e3, System.Byte e4, System.Byte e5, System.Byte e6, System.Byte e7) => throw null;
                public static System.Runtime.Intrinsics.Vector64<double> Create(double value) => throw null;
                public static System.Runtime.Intrinsics.Vector64<float> Create(float value) => throw null;
                public static System.Runtime.Intrinsics.Vector64<float> Create(float e0, float e1) => throw null;
                public static System.Runtime.Intrinsics.Vector64<int> Create(int value) => throw null;
                public static System.Runtime.Intrinsics.Vector64<int> Create(int e0, int e1) => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.Int64> Create(System.Int64 value) => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.SByte> Create(System.SByte value) => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.SByte> Create(System.SByte e0, System.SByte e1, System.SByte e2, System.SByte e3, System.SByte e4, System.SByte e5, System.SByte e6, System.SByte e7) => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.Int16> Create(System.Int16 value) => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.Int16> Create(System.Int16 e0, System.Int16 e1, System.Int16 e2, System.Int16 e3) => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.UInt32> Create(System.UInt32 value) => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.UInt32> Create(System.UInt32 e0, System.UInt32 e1) => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.UInt64> Create(System.UInt64 value) => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.UInt16> Create(System.UInt16 value) => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.UInt16> Create(System.UInt16 e0, System.UInt16 e1, System.UInt16 e2, System.UInt16 e3) => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.Byte> CreateScalar(System.Byte value) => throw null;
                public static System.Runtime.Intrinsics.Vector64<double> CreateScalar(double value) => throw null;
                public static System.Runtime.Intrinsics.Vector64<float> CreateScalar(float value) => throw null;
                public static System.Runtime.Intrinsics.Vector64<int> CreateScalar(int value) => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.Int64> CreateScalar(System.Int64 value) => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.SByte> CreateScalar(System.SByte value) => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.Int16> CreateScalar(System.Int16 value) => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.UInt32> CreateScalar(System.UInt32 value) => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.UInt64> CreateScalar(System.UInt64 value) => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.UInt16> CreateScalar(System.UInt16 value) => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.Byte> CreateScalarUnsafe(System.Byte value) => throw null;
                public static System.Runtime.Intrinsics.Vector64<float> CreateScalarUnsafe(float value) => throw null;
                public static System.Runtime.Intrinsics.Vector64<int> CreateScalarUnsafe(int value) => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.SByte> CreateScalarUnsafe(System.SByte value) => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.Int16> CreateScalarUnsafe(System.Int16 value) => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.UInt32> CreateScalarUnsafe(System.UInt32 value) => throw null;
                public static System.Runtime.Intrinsics.Vector64<System.UInt16> CreateScalarUnsafe(System.UInt16 value) => throw null;
                public static T GetElement<T>(this System.Runtime.Intrinsics.Vector64<T> vector, int index) where T : struct => throw null;
                public static T ToScalar<T>(this System.Runtime.Intrinsics.Vector64<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector128<T> ToVector128<T>(this System.Runtime.Intrinsics.Vector64<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector128<T> ToVector128Unsafe<T>(this System.Runtime.Intrinsics.Vector64<T> vector) where T : struct => throw null;
                public static System.Runtime.Intrinsics.Vector64<T> WithElement<T>(this System.Runtime.Intrinsics.Vector64<T> vector, int index, T value) where T : struct => throw null;
            }

            // Generated from `System.Runtime.Intrinsics.Vector64<>` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
            public struct Vector64<T> : System.IEquatable<System.Runtime.Intrinsics.Vector64<T>> where T : struct
            {
                public static System.Runtime.Intrinsics.Vector64<T> AllBitsSet { get => throw null; }
                public static int Count { get => throw null; }
                public bool Equals(System.Runtime.Intrinsics.Vector64<T> other) => throw null;
                public override bool Equals(object obj) => throw null;
                public override int GetHashCode() => throw null;
                public override string ToString() => throw null;
                // Stub generator skipped constructor 
                public static System.Runtime.Intrinsics.Vector64<T> Zero { get => throw null; }
            }

            namespace Arm
            {
                // Generated from `System.Runtime.Intrinsics.Arm.AdvSimd` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                public abstract class AdvSimd : System.Runtime.Intrinsics.Arm.ArmBase
                {
                    // Generated from `System.Runtime.Intrinsics.Arm.AdvSimd+Arm64` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                    public abstract class Arm64 : System.Runtime.Intrinsics.Arm.ArmBase.Arm64
                    {
                        public static System.Runtime.Intrinsics.Vector128<double> Abs(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt64> Abs(System.Runtime.Intrinsics.Vector128<System.Int64> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int64> AbsSaturate(System.Runtime.Intrinsics.Vector128<System.Int64> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> AbsSaturateScalar(System.Runtime.Intrinsics.Vector64<int> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int64> AbsSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int64> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> AbsSaturateScalar(System.Runtime.Intrinsics.Vector64<System.SByte> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> AbsSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int16> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt64> AbsScalar(System.Runtime.Intrinsics.Vector64<System.Int64> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> AbsoluteCompareGreaterThan(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> AbsoluteCompareGreaterThanOrEqual(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<double> AbsoluteCompareGreaterThanOrEqualScalar(System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> AbsoluteCompareGreaterThanOrEqualScalar(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<double> AbsoluteCompareGreaterThanScalar(System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> AbsoluteCompareGreaterThanScalar(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> AbsoluteCompareLessThan(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> AbsoluteCompareLessThanOrEqual(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<double> AbsoluteCompareLessThanOrEqualScalar(System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> AbsoluteCompareLessThanOrEqualScalar(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<double> AbsoluteCompareLessThanScalar(System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> AbsoluteCompareLessThanScalar(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> AbsoluteDifference(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<double> AbsoluteDifferenceScalar(System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> AbsoluteDifferenceScalar(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> Add(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Byte> AddAcross(System.Runtime.Intrinsics.Vector128<System.Byte> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> AddAcross(System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> AddAcross(System.Runtime.Intrinsics.Vector128<System.SByte> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> AddAcross(System.Runtime.Intrinsics.Vector128<System.Int16> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt32> AddAcross(System.Runtime.Intrinsics.Vector128<System.UInt32> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt16> AddAcross(System.Runtime.Intrinsics.Vector128<System.UInt16> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Byte> AddAcross(System.Runtime.Intrinsics.Vector64<System.Byte> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> AddAcross(System.Runtime.Intrinsics.Vector64<System.SByte> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> AddAcross(System.Runtime.Intrinsics.Vector64<System.Int16> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt16> AddAcross(System.Runtime.Intrinsics.Vector64<System.UInt16> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt16> AddAcrossWidening(System.Runtime.Intrinsics.Vector128<System.Byte> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int64> AddAcrossWidening(System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> AddAcrossWidening(System.Runtime.Intrinsics.Vector128<System.SByte> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> AddAcrossWidening(System.Runtime.Intrinsics.Vector128<System.Int16> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt64> AddAcrossWidening(System.Runtime.Intrinsics.Vector128<System.UInt32> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt32> AddAcrossWidening(System.Runtime.Intrinsics.Vector128<System.UInt16> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt16> AddAcrossWidening(System.Runtime.Intrinsics.Vector64<System.Byte> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> AddAcrossWidening(System.Runtime.Intrinsics.Vector64<System.SByte> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> AddAcrossWidening(System.Runtime.Intrinsics.Vector64<System.Int16> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt32> AddAcrossWidening(System.Runtime.Intrinsics.Vector64<System.UInt16> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Byte> AddPairwise(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> AddPairwise(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<float> AddPairwise(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<int> AddPairwise(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int64> AddPairwise(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.SByte> AddPairwise(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int16> AddPairwise(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt32> AddPairwise(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt64> AddPairwise(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt16> AddPairwise(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<double> AddPairwiseScalar(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int64> AddPairwiseScalar(System.Runtime.Intrinsics.Vector128<System.Int64> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt64> AddPairwiseScalar(System.Runtime.Intrinsics.Vector128<System.UInt64> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> AddPairwiseScalar(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Byte> AddSaturate(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<int> AddSaturate(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int64> AddSaturate(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.SByte> AddSaturate(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int16> AddSaturate(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt32> AddSaturate(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt64> AddSaturate(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt16> AddSaturate(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Byte> AddSaturate(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> AddSaturate(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> AddSaturate(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> AddSaturate(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt32> AddSaturate(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt16> AddSaturate(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Byte> AddSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Byte> AddSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> AddSaturateScalar(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> AddSaturateScalar(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int64> AddSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int64> left, System.Runtime.Intrinsics.Vector64<System.UInt64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> AddSaturateScalar(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> AddSaturateScalar(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> AddSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> AddSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt32> AddSaturateScalar(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt32> AddSaturateScalar(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt64> AddSaturateScalar(System.Runtime.Intrinsics.Vector64<System.UInt64> left, System.Runtime.Intrinsics.Vector64<System.Int64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt16> AddSaturateScalar(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt16> AddSaturateScalar(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                        internal Arm64() => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> Ceiling(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> CompareEqual(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int64> CompareEqual(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt64> CompareEqual(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<double> CompareEqualScalar(System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> CompareEqualScalar(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int64> CompareEqualScalar(System.Runtime.Intrinsics.Vector64<System.Int64> left, System.Runtime.Intrinsics.Vector64<System.Int64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt64> CompareEqualScalar(System.Runtime.Intrinsics.Vector64<System.UInt64> left, System.Runtime.Intrinsics.Vector64<System.UInt64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> CompareGreaterThan(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int64> CompareGreaterThan(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt64> CompareGreaterThan(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> CompareGreaterThanOrEqual(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int64> CompareGreaterThanOrEqual(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt64> CompareGreaterThanOrEqual(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<double> CompareGreaterThanOrEqualScalar(System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> CompareGreaterThanOrEqualScalar(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int64> CompareGreaterThanOrEqualScalar(System.Runtime.Intrinsics.Vector64<System.Int64> left, System.Runtime.Intrinsics.Vector64<System.Int64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt64> CompareGreaterThanOrEqualScalar(System.Runtime.Intrinsics.Vector64<System.UInt64> left, System.Runtime.Intrinsics.Vector64<System.UInt64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<double> CompareGreaterThanScalar(System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> CompareGreaterThanScalar(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int64> CompareGreaterThanScalar(System.Runtime.Intrinsics.Vector64<System.Int64> left, System.Runtime.Intrinsics.Vector64<System.Int64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt64> CompareGreaterThanScalar(System.Runtime.Intrinsics.Vector64<System.UInt64> left, System.Runtime.Intrinsics.Vector64<System.UInt64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> CompareLessThan(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int64> CompareLessThan(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt64> CompareLessThan(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> CompareLessThanOrEqual(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int64> CompareLessThanOrEqual(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt64> CompareLessThanOrEqual(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<double> CompareLessThanOrEqualScalar(System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> CompareLessThanOrEqualScalar(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int64> CompareLessThanOrEqualScalar(System.Runtime.Intrinsics.Vector64<System.Int64> left, System.Runtime.Intrinsics.Vector64<System.Int64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt64> CompareLessThanOrEqualScalar(System.Runtime.Intrinsics.Vector64<System.UInt64> left, System.Runtime.Intrinsics.Vector64<System.UInt64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<double> CompareLessThanScalar(System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> CompareLessThanScalar(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int64> CompareLessThanScalar(System.Runtime.Intrinsics.Vector64<System.Int64> left, System.Runtime.Intrinsics.Vector64<System.Int64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt64> CompareLessThanScalar(System.Runtime.Intrinsics.Vector64<System.UInt64> left, System.Runtime.Intrinsics.Vector64<System.UInt64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> CompareTest(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int64> CompareTest(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt64> CompareTest(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<double> CompareTestScalar(System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int64> CompareTestScalar(System.Runtime.Intrinsics.Vector64<System.Int64> left, System.Runtime.Intrinsics.Vector64<System.Int64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt64> CompareTestScalar(System.Runtime.Intrinsics.Vector64<System.UInt64> left, System.Runtime.Intrinsics.Vector64<System.UInt64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> ConvertToDouble(System.Runtime.Intrinsics.Vector128<System.Int64> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> ConvertToDouble(System.Runtime.Intrinsics.Vector128<System.UInt64> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> ConvertToDouble(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<double> ConvertToDoubleScalar(System.Runtime.Intrinsics.Vector64<System.Int64> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<double> ConvertToDoubleScalar(System.Runtime.Intrinsics.Vector64<System.UInt64> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> ConvertToDoubleUpper(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int64> ConvertToInt64RoundAwayFromZero(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int64> ConvertToInt64RoundAwayFromZeroScalar(System.Runtime.Intrinsics.Vector64<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int64> ConvertToInt64RoundToEven(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int64> ConvertToInt64RoundToEvenScalar(System.Runtime.Intrinsics.Vector64<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int64> ConvertToInt64RoundToNegativeInfinity(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int64> ConvertToInt64RoundToNegativeInfinityScalar(System.Runtime.Intrinsics.Vector64<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int64> ConvertToInt64RoundToPositiveInfinity(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int64> ConvertToInt64RoundToPositiveInfinityScalar(System.Runtime.Intrinsics.Vector64<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int64> ConvertToInt64RoundToZero(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int64> ConvertToInt64RoundToZeroScalar(System.Runtime.Intrinsics.Vector64<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> ConvertToSingleLower(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> ConvertToSingleRoundToOddLower(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<float> ConvertToSingleRoundToOddUpper(System.Runtime.Intrinsics.Vector64<float> lower, System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<float> ConvertToSingleUpper(System.Runtime.Intrinsics.Vector64<float> lower, System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt64> ConvertToUInt64RoundAwayFromZero(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt64> ConvertToUInt64RoundAwayFromZeroScalar(System.Runtime.Intrinsics.Vector64<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt64> ConvertToUInt64RoundToEven(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt64> ConvertToUInt64RoundToEvenScalar(System.Runtime.Intrinsics.Vector64<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt64> ConvertToUInt64RoundToNegativeInfinity(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt64> ConvertToUInt64RoundToNegativeInfinityScalar(System.Runtime.Intrinsics.Vector64<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt64> ConvertToUInt64RoundToPositiveInfinity(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt64> ConvertToUInt64RoundToPositiveInfinityScalar(System.Runtime.Intrinsics.Vector64<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt64> ConvertToUInt64RoundToZero(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt64> ConvertToUInt64RoundToZeroScalar(System.Runtime.Intrinsics.Vector64<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> Divide(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<float> Divide(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> Divide(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> DuplicateSelectedScalarToVector128(System.Runtime.Intrinsics.Vector128<double> value, System.Byte index) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int64> DuplicateSelectedScalarToVector128(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte index) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt64> DuplicateSelectedScalarToVector128(System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Byte index) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> DuplicateToVector128(double value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int64> DuplicateToVector128(System.Int64 value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt64> DuplicateToVector128(System.UInt64 value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> ExtractNarrowingSaturateScalar(System.Runtime.Intrinsics.Vector64<int> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> ExtractNarrowingSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int64> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> ExtractNarrowingSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int16> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt16> ExtractNarrowingSaturateScalar(System.Runtime.Intrinsics.Vector64<System.UInt32> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt32> ExtractNarrowingSaturateScalar(System.Runtime.Intrinsics.Vector64<System.UInt64> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Byte> ExtractNarrowingSaturateScalar(System.Runtime.Intrinsics.Vector64<System.UInt16> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt16> ExtractNarrowingSaturateUnsignedScalar(System.Runtime.Intrinsics.Vector64<int> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt32> ExtractNarrowingSaturateUnsignedScalar(System.Runtime.Intrinsics.Vector64<System.Int64> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Byte> ExtractNarrowingSaturateUnsignedScalar(System.Runtime.Intrinsics.Vector64<System.Int16> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> Floor(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> FusedMultiplyAdd(System.Runtime.Intrinsics.Vector128<double> addend, System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> FusedMultiplyAddByScalar(System.Runtime.Intrinsics.Vector128<double> addend, System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<float> FusedMultiplyAddByScalar(System.Runtime.Intrinsics.Vector128<float> addend, System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> FusedMultiplyAddByScalar(System.Runtime.Intrinsics.Vector64<float> addend, System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> FusedMultiplyAddBySelectedScalar(System.Runtime.Intrinsics.Vector128<double> addend, System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<float> FusedMultiplyAddBySelectedScalar(System.Runtime.Intrinsics.Vector128<float> addend, System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<float> FusedMultiplyAddBySelectedScalar(System.Runtime.Intrinsics.Vector128<float> addend, System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector64<float> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> FusedMultiplyAddBySelectedScalar(System.Runtime.Intrinsics.Vector64<float> addend, System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector128<float> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> FusedMultiplyAddBySelectedScalar(System.Runtime.Intrinsics.Vector64<float> addend, System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<double> FusedMultiplyAddScalarBySelectedScalar(System.Runtime.Intrinsics.Vector64<double> addend, System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector128<double> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> FusedMultiplyAddScalarBySelectedScalar(System.Runtime.Intrinsics.Vector64<float> addend, System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector128<float> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> FusedMultiplyAddScalarBySelectedScalar(System.Runtime.Intrinsics.Vector64<float> addend, System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> FusedMultiplySubtract(System.Runtime.Intrinsics.Vector128<double> minuend, System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> FusedMultiplySubtractByScalar(System.Runtime.Intrinsics.Vector128<double> minuend, System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<float> FusedMultiplySubtractByScalar(System.Runtime.Intrinsics.Vector128<float> minuend, System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> FusedMultiplySubtractByScalar(System.Runtime.Intrinsics.Vector64<float> minuend, System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> FusedMultiplySubtractBySelectedScalar(System.Runtime.Intrinsics.Vector128<double> minuend, System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<float> FusedMultiplySubtractBySelectedScalar(System.Runtime.Intrinsics.Vector128<float> minuend, System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<float> FusedMultiplySubtractBySelectedScalar(System.Runtime.Intrinsics.Vector128<float> minuend, System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector64<float> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> FusedMultiplySubtractBySelectedScalar(System.Runtime.Intrinsics.Vector64<float> minuend, System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector128<float> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> FusedMultiplySubtractBySelectedScalar(System.Runtime.Intrinsics.Vector64<float> minuend, System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<double> FusedMultiplySubtractScalarBySelectedScalar(System.Runtime.Intrinsics.Vector64<double> minuend, System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector128<double> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> FusedMultiplySubtractScalarBySelectedScalar(System.Runtime.Intrinsics.Vector64<float> minuend, System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector128<float> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> FusedMultiplySubtractScalarBySelectedScalar(System.Runtime.Intrinsics.Vector64<float> minuend, System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Byte> InsertSelectedScalar(System.Runtime.Intrinsics.Vector128<System.Byte> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector128<System.Byte> value, System.Byte valueIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Byte> InsertSelectedScalar(System.Runtime.Intrinsics.Vector128<System.Byte> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector64<System.Byte> value, System.Byte valueIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> InsertSelectedScalar(System.Runtime.Intrinsics.Vector128<double> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector128<double> value, System.Byte valueIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<float> InsertSelectedScalar(System.Runtime.Intrinsics.Vector128<float> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector128<float> value, System.Byte valueIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<float> InsertSelectedScalar(System.Runtime.Intrinsics.Vector128<float> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector64<float> value, System.Byte valueIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<int> InsertSelectedScalar(System.Runtime.Intrinsics.Vector128<int> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector128<int> value, System.Byte valueIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<int> InsertSelectedScalar(System.Runtime.Intrinsics.Vector128<int> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector64<int> value, System.Byte valueIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int64> InsertSelectedScalar(System.Runtime.Intrinsics.Vector128<System.Int64> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte valueIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.SByte> InsertSelectedScalar(System.Runtime.Intrinsics.Vector128<System.SByte> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector128<System.SByte> value, System.Byte valueIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.SByte> InsertSelectedScalar(System.Runtime.Intrinsics.Vector128<System.SByte> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Byte valueIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int16> InsertSelectedScalar(System.Runtime.Intrinsics.Vector128<System.Int16> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte valueIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int16> InsertSelectedScalar(System.Runtime.Intrinsics.Vector128<System.Int16> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Byte valueIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt32> InsertSelectedScalar(System.Runtime.Intrinsics.Vector128<System.UInt32> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Byte valueIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt32> InsertSelectedScalar(System.Runtime.Intrinsics.Vector128<System.UInt32> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector64<System.UInt32> value, System.Byte valueIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt64> InsertSelectedScalar(System.Runtime.Intrinsics.Vector128<System.UInt64> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Byte valueIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt16> InsertSelectedScalar(System.Runtime.Intrinsics.Vector128<System.UInt16> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Byte valueIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt16> InsertSelectedScalar(System.Runtime.Intrinsics.Vector128<System.UInt16> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector64<System.UInt16> value, System.Byte valueIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Byte> InsertSelectedScalar(System.Runtime.Intrinsics.Vector64<System.Byte> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector128<System.Byte> value, System.Byte valueIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Byte> InsertSelectedScalar(System.Runtime.Intrinsics.Vector64<System.Byte> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector64<System.Byte> value, System.Byte valueIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> InsertSelectedScalar(System.Runtime.Intrinsics.Vector64<float> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector128<float> value, System.Byte valueIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> InsertSelectedScalar(System.Runtime.Intrinsics.Vector64<float> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector64<float> value, System.Byte valueIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> InsertSelectedScalar(System.Runtime.Intrinsics.Vector64<int> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector128<int> value, System.Byte valueIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> InsertSelectedScalar(System.Runtime.Intrinsics.Vector64<int> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector64<int> value, System.Byte valueIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> InsertSelectedScalar(System.Runtime.Intrinsics.Vector64<System.SByte> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector128<System.SByte> value, System.Byte valueIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> InsertSelectedScalar(System.Runtime.Intrinsics.Vector64<System.SByte> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Byte valueIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> InsertSelectedScalar(System.Runtime.Intrinsics.Vector64<System.Int16> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte valueIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> InsertSelectedScalar(System.Runtime.Intrinsics.Vector64<System.Int16> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Byte valueIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt32> InsertSelectedScalar(System.Runtime.Intrinsics.Vector64<System.UInt32> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Byte valueIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt32> InsertSelectedScalar(System.Runtime.Intrinsics.Vector64<System.UInt32> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector64<System.UInt32> value, System.Byte valueIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt16> InsertSelectedScalar(System.Runtime.Intrinsics.Vector64<System.UInt16> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Byte valueIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt16> InsertSelectedScalar(System.Runtime.Intrinsics.Vector64<System.UInt16> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector64<System.UInt16> value, System.Byte valueIndex) => throw null;
                        public static bool IsSupported { get => throw null; }
                        unsafe public static System.Runtime.Intrinsics.Vector128<double> LoadAndReplicateToVector128(double* address) => throw null;
                        unsafe public static System.Runtime.Intrinsics.Vector128<System.Int64> LoadAndReplicateToVector128(System.Int64* address) => throw null;
                        unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt64> LoadAndReplicateToVector128(System.UInt64* address) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> Max(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Byte> MaxAcross(System.Runtime.Intrinsics.Vector128<System.Byte> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> MaxAcross(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> MaxAcross(System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> MaxAcross(System.Runtime.Intrinsics.Vector128<System.SByte> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> MaxAcross(System.Runtime.Intrinsics.Vector128<System.Int16> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt32> MaxAcross(System.Runtime.Intrinsics.Vector128<System.UInt32> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt16> MaxAcross(System.Runtime.Intrinsics.Vector128<System.UInt16> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Byte> MaxAcross(System.Runtime.Intrinsics.Vector64<System.Byte> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> MaxAcross(System.Runtime.Intrinsics.Vector64<System.SByte> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> MaxAcross(System.Runtime.Intrinsics.Vector64<System.Int16> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt16> MaxAcross(System.Runtime.Intrinsics.Vector64<System.UInt16> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> MaxNumber(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> MaxNumberAcross(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> MaxNumberPairwise(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<float> MaxNumberPairwise(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> MaxNumberPairwise(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<double> MaxNumberPairwiseScalar(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> MaxNumberPairwiseScalar(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Byte> MaxPairwise(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> MaxPairwise(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<float> MaxPairwise(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<int> MaxPairwise(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.SByte> MaxPairwise(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int16> MaxPairwise(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt32> MaxPairwise(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt16> MaxPairwise(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<double> MaxPairwiseScalar(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> MaxPairwiseScalar(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<double> MaxScalar(System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> MaxScalar(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> Min(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Byte> MinAcross(System.Runtime.Intrinsics.Vector128<System.Byte> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> MinAcross(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> MinAcross(System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> MinAcross(System.Runtime.Intrinsics.Vector128<System.SByte> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> MinAcross(System.Runtime.Intrinsics.Vector128<System.Int16> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt32> MinAcross(System.Runtime.Intrinsics.Vector128<System.UInt32> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt16> MinAcross(System.Runtime.Intrinsics.Vector128<System.UInt16> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Byte> MinAcross(System.Runtime.Intrinsics.Vector64<System.Byte> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> MinAcross(System.Runtime.Intrinsics.Vector64<System.SByte> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> MinAcross(System.Runtime.Intrinsics.Vector64<System.Int16> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt16> MinAcross(System.Runtime.Intrinsics.Vector64<System.UInt16> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> MinNumber(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> MinNumberAcross(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> MinNumberPairwise(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<float> MinNumberPairwise(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> MinNumberPairwise(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<double> MinNumberPairwiseScalar(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> MinNumberPairwiseScalar(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Byte> MinPairwise(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> MinPairwise(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<float> MinPairwise(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<int> MinPairwise(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.SByte> MinPairwise(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int16> MinPairwise(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt32> MinPairwise(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt16> MinPairwise(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<double> MinPairwiseScalar(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> MinPairwiseScalar(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<double> MinScalar(System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> MinScalar(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> Multiply(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> MultiplyByScalar(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> MultiplyBySelectedScalar(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> MultiplyDoublingSaturateHighScalar(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyDoublingSaturateHighScalar(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> MultiplyDoublingScalarBySelectedScalarSaturateHigh(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> MultiplyDoublingScalarBySelectedScalarSaturateHigh(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyDoublingScalarBySelectedScalarSaturateHigh(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyDoublingScalarBySelectedScalarSaturateHigh(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> MultiplyDoublingWideningAndAddSaturateScalar(System.Runtime.Intrinsics.Vector64<int> addend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int64> MultiplyDoublingWideningAndAddSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int64> addend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> MultiplyDoublingWideningAndSubtractSaturateScalar(System.Runtime.Intrinsics.Vector64<int> minuend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int64> MultiplyDoublingWideningAndSubtractSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int64> minuend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int64> MultiplyDoublingWideningSaturateScalar(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> MultiplyDoublingWideningSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int64> MultiplyDoublingWideningSaturateScalarBySelectedScalar(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int64> MultiplyDoublingWideningSaturateScalarBySelectedScalar(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> MultiplyDoublingWideningSaturateScalarBySelectedScalar(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> MultiplyDoublingWideningSaturateScalarBySelectedScalar(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> MultiplyDoublingWideningScalarBySelectedScalarAndAddSaturate(System.Runtime.Intrinsics.Vector64<int> addend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> MultiplyDoublingWideningScalarBySelectedScalarAndAddSaturate(System.Runtime.Intrinsics.Vector64<int> addend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int64> MultiplyDoublingWideningScalarBySelectedScalarAndAddSaturate(System.Runtime.Intrinsics.Vector64<System.Int64> addend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int64> MultiplyDoublingWideningScalarBySelectedScalarAndAddSaturate(System.Runtime.Intrinsics.Vector64<System.Int64> addend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> MultiplyDoublingWideningScalarBySelectedScalarAndSubtractSaturate(System.Runtime.Intrinsics.Vector64<int> minuend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> MultiplyDoublingWideningScalarBySelectedScalarAndSubtractSaturate(System.Runtime.Intrinsics.Vector64<int> minuend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int64> MultiplyDoublingWideningScalarBySelectedScalarAndSubtractSaturate(System.Runtime.Intrinsics.Vector64<System.Int64> minuend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int64> MultiplyDoublingWideningScalarBySelectedScalarAndSubtractSaturate(System.Runtime.Intrinsics.Vector64<System.Int64> minuend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> MultiplyExtended(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<float> MultiplyExtended(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> MultiplyExtended(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> MultiplyExtendedByScalar(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> MultiplyExtendedBySelectedScalar(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<float> MultiplyExtendedBySelectedScalar(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<float> MultiplyExtendedBySelectedScalar(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector64<float> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> MultiplyExtendedBySelectedScalar(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector128<float> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> MultiplyExtendedBySelectedScalar(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<double> MultiplyExtendedScalar(System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> MultiplyExtendedScalar(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<double> MultiplyExtendedScalarBySelectedScalar(System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector128<double> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> MultiplyExtendedScalarBySelectedScalar(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector128<float> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> MultiplyExtendedScalarBySelectedScalar(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> MultiplyRoundedDoublingSaturateHighScalar(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyRoundedDoublingSaturateHighScalar(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> MultiplyRoundedDoublingScalarBySelectedScalarSaturateHigh(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> MultiplyRoundedDoublingScalarBySelectedScalarSaturateHigh(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyRoundedDoublingScalarBySelectedScalarSaturateHigh(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyRoundedDoublingScalarBySelectedScalarSaturateHigh(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<double> MultiplyScalarBySelectedScalar(System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector128<double> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> Negate(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int64> Negate(System.Runtime.Intrinsics.Vector128<System.Int64> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int64> NegateSaturate(System.Runtime.Intrinsics.Vector128<System.Int64> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> NegateSaturateScalar(System.Runtime.Intrinsics.Vector64<int> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int64> NegateSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int64> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> NegateSaturateScalar(System.Runtime.Intrinsics.Vector64<System.SByte> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> NegateSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int16> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int64> NegateScalar(System.Runtime.Intrinsics.Vector64<System.Int64> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> ReciprocalEstimate(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<double> ReciprocalEstimateScalar(System.Runtime.Intrinsics.Vector64<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> ReciprocalEstimateScalar(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<double> ReciprocalExponentScalar(System.Runtime.Intrinsics.Vector64<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> ReciprocalExponentScalar(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> ReciprocalSquareRootEstimate(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<double> ReciprocalSquareRootEstimateScalar(System.Runtime.Intrinsics.Vector64<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> ReciprocalSquareRootEstimateScalar(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> ReciprocalSquareRootStep(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<double> ReciprocalSquareRootStepScalar(System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> ReciprocalSquareRootStepScalar(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> ReciprocalStep(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<double> ReciprocalStepScalar(System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> ReciprocalStepScalar(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Byte> ReverseElementBits(System.Runtime.Intrinsics.Vector128<System.Byte> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.SByte> ReverseElementBits(System.Runtime.Intrinsics.Vector128<System.SByte> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Byte> ReverseElementBits(System.Runtime.Intrinsics.Vector64<System.Byte> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> ReverseElementBits(System.Runtime.Intrinsics.Vector64<System.SByte> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> RoundAwayFromZero(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> RoundToNearest(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> RoundToNegativeInfinity(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> RoundToPositiveInfinity(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> RoundToZero(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> ShiftArithmeticRoundedSaturateScalar(System.Runtime.Intrinsics.Vector64<int> value, System.Runtime.Intrinsics.Vector64<int> count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftArithmeticRoundedSaturateScalar(System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Runtime.Intrinsics.Vector64<System.SByte> count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftArithmeticRoundedSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Runtime.Intrinsics.Vector64<System.Int16> count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> ShiftArithmeticSaturateScalar(System.Runtime.Intrinsics.Vector64<int> value, System.Runtime.Intrinsics.Vector64<int> count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftArithmeticSaturateScalar(System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Runtime.Intrinsics.Vector64<System.SByte> count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftArithmeticSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Runtime.Intrinsics.Vector64<System.Int16> count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Byte> ShiftLeftLogicalSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Byte> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> ShiftLeftLogicalSaturateScalar(System.Runtime.Intrinsics.Vector64<int> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftLeftLogicalSaturateScalar(System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftLeftLogicalSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt32> ShiftLeftLogicalSaturateScalar(System.Runtime.Intrinsics.Vector64<System.UInt32> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt16> ShiftLeftLogicalSaturateScalar(System.Runtime.Intrinsics.Vector64<System.UInt16> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt32> ShiftLeftLogicalSaturateUnsignedScalar(System.Runtime.Intrinsics.Vector64<int> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Byte> ShiftLeftLogicalSaturateUnsignedScalar(System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt16> ShiftLeftLogicalSaturateUnsignedScalar(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Byte> ShiftLogicalRoundedSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Byte> value, System.Runtime.Intrinsics.Vector64<System.SByte> count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> ShiftLogicalRoundedSaturateScalar(System.Runtime.Intrinsics.Vector64<int> value, System.Runtime.Intrinsics.Vector64<int> count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftLogicalRoundedSaturateScalar(System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Runtime.Intrinsics.Vector64<System.SByte> count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftLogicalRoundedSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Runtime.Intrinsics.Vector64<System.Int16> count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt32> ShiftLogicalRoundedSaturateScalar(System.Runtime.Intrinsics.Vector64<System.UInt32> value, System.Runtime.Intrinsics.Vector64<int> count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt16> ShiftLogicalRoundedSaturateScalar(System.Runtime.Intrinsics.Vector64<System.UInt16> value, System.Runtime.Intrinsics.Vector64<System.Int16> count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Byte> ShiftLogicalSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Byte> value, System.Runtime.Intrinsics.Vector64<System.SByte> count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> ShiftLogicalSaturateScalar(System.Runtime.Intrinsics.Vector64<int> value, System.Runtime.Intrinsics.Vector64<int> count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftLogicalSaturateScalar(System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Runtime.Intrinsics.Vector64<System.SByte> count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftLogicalSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Runtime.Intrinsics.Vector64<System.Int16> count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt32> ShiftLogicalSaturateScalar(System.Runtime.Intrinsics.Vector64<System.UInt32> value, System.Runtime.Intrinsics.Vector64<int> count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt16> ShiftLogicalSaturateScalar(System.Runtime.Intrinsics.Vector64<System.UInt16> value, System.Runtime.Intrinsics.Vector64<System.Int16> count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftRightArithmeticNarrowingSaturateScalar(System.Runtime.Intrinsics.Vector64<int> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> ShiftRightArithmeticNarrowingSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int64> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftRightArithmeticNarrowingSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt16> ShiftRightArithmeticNarrowingSaturateUnsignedScalar(System.Runtime.Intrinsics.Vector64<int> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt32> ShiftRightArithmeticNarrowingSaturateUnsignedScalar(System.Runtime.Intrinsics.Vector64<System.Int64> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Byte> ShiftRightArithmeticNarrowingSaturateUnsignedScalar(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftRightArithmeticRoundedNarrowingSaturateScalar(System.Runtime.Intrinsics.Vector64<int> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> ShiftRightArithmeticRoundedNarrowingSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int64> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftRightArithmeticRoundedNarrowingSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt16> ShiftRightArithmeticRoundedNarrowingSaturateUnsignedScalar(System.Runtime.Intrinsics.Vector64<int> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt32> ShiftRightArithmeticRoundedNarrowingSaturateUnsignedScalar(System.Runtime.Intrinsics.Vector64<System.Int64> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Byte> ShiftRightArithmeticRoundedNarrowingSaturateUnsignedScalar(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftRightLogicalNarrowingSaturateScalar(System.Runtime.Intrinsics.Vector64<int> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> ShiftRightLogicalNarrowingSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int64> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftRightLogicalNarrowingSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt16> ShiftRightLogicalNarrowingSaturateScalar(System.Runtime.Intrinsics.Vector64<System.UInt32> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt32> ShiftRightLogicalNarrowingSaturateScalar(System.Runtime.Intrinsics.Vector64<System.UInt64> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Byte> ShiftRightLogicalNarrowingSaturateScalar(System.Runtime.Intrinsics.Vector64<System.UInt16> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftRightLogicalRoundedNarrowingSaturateScalar(System.Runtime.Intrinsics.Vector64<int> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> ShiftRightLogicalRoundedNarrowingSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int64> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftRightLogicalRoundedNarrowingSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt16> ShiftRightLogicalRoundedNarrowingSaturateScalar(System.Runtime.Intrinsics.Vector64<System.UInt32> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt32> ShiftRightLogicalRoundedNarrowingSaturateScalar(System.Runtime.Intrinsics.Vector64<System.UInt64> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Byte> ShiftRightLogicalRoundedNarrowingSaturateScalar(System.Runtime.Intrinsics.Vector64<System.UInt16> value, System.Byte count) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> Sqrt(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<float> Sqrt(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> Sqrt(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                        unsafe public static void StorePair(System.Byte* address, System.Runtime.Intrinsics.Vector128<System.Byte> value1, System.Runtime.Intrinsics.Vector128<System.Byte> value2) => throw null;
                        unsafe public static void StorePair(System.Byte* address, System.Runtime.Intrinsics.Vector64<System.Byte> value1, System.Runtime.Intrinsics.Vector64<System.Byte> value2) => throw null;
                        unsafe public static void StorePair(double* address, System.Runtime.Intrinsics.Vector128<double> value1, System.Runtime.Intrinsics.Vector128<double> value2) => throw null;
                        unsafe public static void StorePair(double* address, System.Runtime.Intrinsics.Vector64<double> value1, System.Runtime.Intrinsics.Vector64<double> value2) => throw null;
                        unsafe public static void StorePair(float* address, System.Runtime.Intrinsics.Vector128<float> value1, System.Runtime.Intrinsics.Vector128<float> value2) => throw null;
                        unsafe public static void StorePair(float* address, System.Runtime.Intrinsics.Vector64<float> value1, System.Runtime.Intrinsics.Vector64<float> value2) => throw null;
                        unsafe public static void StorePair(int* address, System.Runtime.Intrinsics.Vector128<int> value1, System.Runtime.Intrinsics.Vector128<int> value2) => throw null;
                        unsafe public static void StorePair(int* address, System.Runtime.Intrinsics.Vector64<int> value1, System.Runtime.Intrinsics.Vector64<int> value2) => throw null;
                        unsafe public static void StorePair(System.Int64* address, System.Runtime.Intrinsics.Vector128<System.Int64> value1, System.Runtime.Intrinsics.Vector128<System.Int64> value2) => throw null;
                        unsafe public static void StorePair(System.Int64* address, System.Runtime.Intrinsics.Vector64<System.Int64> value1, System.Runtime.Intrinsics.Vector64<System.Int64> value2) => throw null;
                        unsafe public static void StorePair(System.SByte* address, System.Runtime.Intrinsics.Vector128<System.SByte> value1, System.Runtime.Intrinsics.Vector128<System.SByte> value2) => throw null;
                        unsafe public static void StorePair(System.SByte* address, System.Runtime.Intrinsics.Vector64<System.SByte> value1, System.Runtime.Intrinsics.Vector64<System.SByte> value2) => throw null;
                        unsafe public static void StorePair(System.Int16* address, System.Runtime.Intrinsics.Vector128<System.Int16> value1, System.Runtime.Intrinsics.Vector128<System.Int16> value2) => throw null;
                        unsafe public static void StorePair(System.Int16* address, System.Runtime.Intrinsics.Vector64<System.Int16> value1, System.Runtime.Intrinsics.Vector64<System.Int16> value2) => throw null;
                        unsafe public static void StorePair(System.UInt32* address, System.Runtime.Intrinsics.Vector128<System.UInt32> value1, System.Runtime.Intrinsics.Vector128<System.UInt32> value2) => throw null;
                        unsafe public static void StorePair(System.UInt32* address, System.Runtime.Intrinsics.Vector64<System.UInt32> value1, System.Runtime.Intrinsics.Vector64<System.UInt32> value2) => throw null;
                        unsafe public static void StorePair(System.UInt64* address, System.Runtime.Intrinsics.Vector128<System.UInt64> value1, System.Runtime.Intrinsics.Vector128<System.UInt64> value2) => throw null;
                        unsafe public static void StorePair(System.UInt64* address, System.Runtime.Intrinsics.Vector64<System.UInt64> value1, System.Runtime.Intrinsics.Vector64<System.UInt64> value2) => throw null;
                        unsafe public static void StorePair(System.UInt16* address, System.Runtime.Intrinsics.Vector128<System.UInt16> value1, System.Runtime.Intrinsics.Vector128<System.UInt16> value2) => throw null;
                        unsafe public static void StorePair(System.UInt16* address, System.Runtime.Intrinsics.Vector64<System.UInt16> value1, System.Runtime.Intrinsics.Vector64<System.UInt16> value2) => throw null;
                        unsafe public static void StorePairNonTemporal(System.Byte* address, System.Runtime.Intrinsics.Vector128<System.Byte> value1, System.Runtime.Intrinsics.Vector128<System.Byte> value2) => throw null;
                        unsafe public static void StorePairNonTemporal(System.Byte* address, System.Runtime.Intrinsics.Vector64<System.Byte> value1, System.Runtime.Intrinsics.Vector64<System.Byte> value2) => throw null;
                        unsafe public static void StorePairNonTemporal(double* address, System.Runtime.Intrinsics.Vector128<double> value1, System.Runtime.Intrinsics.Vector128<double> value2) => throw null;
                        unsafe public static void StorePairNonTemporal(double* address, System.Runtime.Intrinsics.Vector64<double> value1, System.Runtime.Intrinsics.Vector64<double> value2) => throw null;
                        unsafe public static void StorePairNonTemporal(float* address, System.Runtime.Intrinsics.Vector128<float> value1, System.Runtime.Intrinsics.Vector128<float> value2) => throw null;
                        unsafe public static void StorePairNonTemporal(float* address, System.Runtime.Intrinsics.Vector64<float> value1, System.Runtime.Intrinsics.Vector64<float> value2) => throw null;
                        unsafe public static void StorePairNonTemporal(int* address, System.Runtime.Intrinsics.Vector128<int> value1, System.Runtime.Intrinsics.Vector128<int> value2) => throw null;
                        unsafe public static void StorePairNonTemporal(int* address, System.Runtime.Intrinsics.Vector64<int> value1, System.Runtime.Intrinsics.Vector64<int> value2) => throw null;
                        unsafe public static void StorePairNonTemporal(System.Int64* address, System.Runtime.Intrinsics.Vector128<System.Int64> value1, System.Runtime.Intrinsics.Vector128<System.Int64> value2) => throw null;
                        unsafe public static void StorePairNonTemporal(System.Int64* address, System.Runtime.Intrinsics.Vector64<System.Int64> value1, System.Runtime.Intrinsics.Vector64<System.Int64> value2) => throw null;
                        unsafe public static void StorePairNonTemporal(System.SByte* address, System.Runtime.Intrinsics.Vector128<System.SByte> value1, System.Runtime.Intrinsics.Vector128<System.SByte> value2) => throw null;
                        unsafe public static void StorePairNonTemporal(System.SByte* address, System.Runtime.Intrinsics.Vector64<System.SByte> value1, System.Runtime.Intrinsics.Vector64<System.SByte> value2) => throw null;
                        unsafe public static void StorePairNonTemporal(System.Int16* address, System.Runtime.Intrinsics.Vector128<System.Int16> value1, System.Runtime.Intrinsics.Vector128<System.Int16> value2) => throw null;
                        unsafe public static void StorePairNonTemporal(System.Int16* address, System.Runtime.Intrinsics.Vector64<System.Int16> value1, System.Runtime.Intrinsics.Vector64<System.Int16> value2) => throw null;
                        unsafe public static void StorePairNonTemporal(System.UInt32* address, System.Runtime.Intrinsics.Vector128<System.UInt32> value1, System.Runtime.Intrinsics.Vector128<System.UInt32> value2) => throw null;
                        unsafe public static void StorePairNonTemporal(System.UInt32* address, System.Runtime.Intrinsics.Vector64<System.UInt32> value1, System.Runtime.Intrinsics.Vector64<System.UInt32> value2) => throw null;
                        unsafe public static void StorePairNonTemporal(System.UInt64* address, System.Runtime.Intrinsics.Vector128<System.UInt64> value1, System.Runtime.Intrinsics.Vector128<System.UInt64> value2) => throw null;
                        unsafe public static void StorePairNonTemporal(System.UInt64* address, System.Runtime.Intrinsics.Vector64<System.UInt64> value1, System.Runtime.Intrinsics.Vector64<System.UInt64> value2) => throw null;
                        unsafe public static void StorePairNonTemporal(System.UInt16* address, System.Runtime.Intrinsics.Vector128<System.UInt16> value1, System.Runtime.Intrinsics.Vector128<System.UInt16> value2) => throw null;
                        unsafe public static void StorePairNonTemporal(System.UInt16* address, System.Runtime.Intrinsics.Vector64<System.UInt16> value1, System.Runtime.Intrinsics.Vector64<System.UInt16> value2) => throw null;
                        unsafe public static void StorePairScalar(float* address, System.Runtime.Intrinsics.Vector64<float> value1, System.Runtime.Intrinsics.Vector64<float> value2) => throw null;
                        unsafe public static void StorePairScalar(int* address, System.Runtime.Intrinsics.Vector64<int> value1, System.Runtime.Intrinsics.Vector64<int> value2) => throw null;
                        unsafe public static void StorePairScalar(System.UInt32* address, System.Runtime.Intrinsics.Vector64<System.UInt32> value1, System.Runtime.Intrinsics.Vector64<System.UInt32> value2) => throw null;
                        unsafe public static void StorePairScalarNonTemporal(float* address, System.Runtime.Intrinsics.Vector64<float> value1, System.Runtime.Intrinsics.Vector64<float> value2) => throw null;
                        unsafe public static void StorePairScalarNonTemporal(int* address, System.Runtime.Intrinsics.Vector64<int> value1, System.Runtime.Intrinsics.Vector64<int> value2) => throw null;
                        unsafe public static void StorePairScalarNonTemporal(System.UInt32* address, System.Runtime.Intrinsics.Vector64<System.UInt32> value1, System.Runtime.Intrinsics.Vector64<System.UInt32> value2) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> Subtract(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Byte> SubtractSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> SubtractSaturateScalar(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> SubtractSaturateScalar(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> SubtractSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt32> SubtractSaturateScalar(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt16> SubtractSaturateScalar(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Byte> TransposeEven(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> TransposeEven(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<float> TransposeEven(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<int> TransposeEven(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int64> TransposeEven(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.SByte> TransposeEven(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int16> TransposeEven(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt32> TransposeEven(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt64> TransposeEven(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt16> TransposeEven(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Byte> TransposeEven(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> TransposeEven(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> TransposeEven(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> TransposeEven(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> TransposeEven(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt32> TransposeEven(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt16> TransposeEven(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Byte> TransposeOdd(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> TransposeOdd(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<float> TransposeOdd(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<int> TransposeOdd(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int64> TransposeOdd(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.SByte> TransposeOdd(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int16> TransposeOdd(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt32> TransposeOdd(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt64> TransposeOdd(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt16> TransposeOdd(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Byte> TransposeOdd(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> TransposeOdd(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> TransposeOdd(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> TransposeOdd(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> TransposeOdd(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt32> TransposeOdd(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt16> TransposeOdd(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Byte> UnzipEven(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> UnzipEven(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<float> UnzipEven(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<int> UnzipEven(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int64> UnzipEven(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.SByte> UnzipEven(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int16> UnzipEven(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt32> UnzipEven(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt64> UnzipEven(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt16> UnzipEven(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Byte> UnzipEven(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> UnzipEven(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> UnzipEven(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> UnzipEven(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> UnzipEven(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt32> UnzipEven(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt16> UnzipEven(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Byte> UnzipOdd(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> UnzipOdd(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<float> UnzipOdd(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<int> UnzipOdd(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int64> UnzipOdd(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.SByte> UnzipOdd(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int16> UnzipOdd(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt32> UnzipOdd(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt64> UnzipOdd(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt16> UnzipOdd(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Byte> UnzipOdd(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> UnzipOdd(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> UnzipOdd(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> UnzipOdd(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> UnzipOdd(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt32> UnzipOdd(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt16> UnzipOdd(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Byte> VectorTableLookup(System.Runtime.Intrinsics.Vector128<System.Byte> table, System.Runtime.Intrinsics.Vector128<System.Byte> byteIndexes) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.SByte> VectorTableLookup(System.Runtime.Intrinsics.Vector128<System.SByte> table, System.Runtime.Intrinsics.Vector128<System.SByte> byteIndexes) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Byte> VectorTableLookupExtension(System.Runtime.Intrinsics.Vector128<System.Byte> defaultValues, System.Runtime.Intrinsics.Vector128<System.Byte> table, System.Runtime.Intrinsics.Vector128<System.Byte> byteIndexes) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.SByte> VectorTableLookupExtension(System.Runtime.Intrinsics.Vector128<System.SByte> defaultValues, System.Runtime.Intrinsics.Vector128<System.SByte> table, System.Runtime.Intrinsics.Vector128<System.SByte> byteIndexes) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Byte> ZipHigh(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> ZipHigh(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<float> ZipHigh(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<int> ZipHigh(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int64> ZipHigh(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.SByte> ZipHigh(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int16> ZipHigh(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt32> ZipHigh(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt64> ZipHigh(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt16> ZipHigh(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Byte> ZipHigh(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> ZipHigh(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> ZipHigh(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> ZipHigh(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> ZipHigh(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt32> ZipHigh(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt16> ZipHigh(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Byte> ZipLow(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<double> ZipLow(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<float> ZipLow(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<int> ZipLow(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int64> ZipLow(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.SByte> ZipLow(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int16> ZipLow(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt32> ZipLow(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt64> ZipLow(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt16> ZipLow(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Byte> ZipLow(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<float> ZipLow(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> ZipLow(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.SByte> ZipLow(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> ZipLow(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt32> ZipLow(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.UInt16> ZipLow(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    }


                    public static System.Runtime.Intrinsics.Vector128<float> Abs(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> Abs(System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> Abs(System.Runtime.Intrinsics.Vector128<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> Abs(System.Runtime.Intrinsics.Vector128<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> Abs(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> Abs(System.Runtime.Intrinsics.Vector64<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> Abs(System.Runtime.Intrinsics.Vector64<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> Abs(System.Runtime.Intrinsics.Vector64<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> AbsSaturate(System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> AbsSaturate(System.Runtime.Intrinsics.Vector128<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> AbsSaturate(System.Runtime.Intrinsics.Vector128<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> AbsSaturate(System.Runtime.Intrinsics.Vector64<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> AbsSaturate(System.Runtime.Intrinsics.Vector64<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> AbsSaturate(System.Runtime.Intrinsics.Vector64<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<double> AbsScalar(System.Runtime.Intrinsics.Vector64<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> AbsScalar(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> AbsoluteCompareGreaterThan(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> AbsoluteCompareGreaterThan(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> AbsoluteCompareGreaterThanOrEqual(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> AbsoluteCompareGreaterThanOrEqual(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> AbsoluteCompareLessThan(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> AbsoluteCompareLessThan(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> AbsoluteCompareLessThanOrEqual(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> AbsoluteCompareLessThanOrEqual(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> AbsoluteDifference(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> AbsoluteDifference(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> AbsoluteDifference(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> AbsoluteDifference(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> AbsoluteDifference(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> AbsoluteDifference(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> AbsoluteDifference(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> AbsoluteDifference(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> AbsoluteDifference(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> AbsoluteDifference(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> AbsoluteDifference(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> AbsoluteDifference(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> AbsoluteDifference(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> AbsoluteDifference(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> AbsoluteDifferenceAdd(System.Runtime.Intrinsics.Vector128<System.Byte> addend, System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> AbsoluteDifferenceAdd(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> AbsoluteDifferenceAdd(System.Runtime.Intrinsics.Vector128<System.SByte> addend, System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> AbsoluteDifferenceAdd(System.Runtime.Intrinsics.Vector128<System.Int16> addend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> AbsoluteDifferenceAdd(System.Runtime.Intrinsics.Vector128<System.UInt32> addend, System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> AbsoluteDifferenceAdd(System.Runtime.Intrinsics.Vector128<System.UInt16> addend, System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> AbsoluteDifferenceAdd(System.Runtime.Intrinsics.Vector64<System.Byte> addend, System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> AbsoluteDifferenceAdd(System.Runtime.Intrinsics.Vector64<int> addend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> AbsoluteDifferenceAdd(System.Runtime.Intrinsics.Vector64<System.SByte> addend, System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> AbsoluteDifferenceAdd(System.Runtime.Intrinsics.Vector64<System.Int16> addend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> AbsoluteDifferenceAdd(System.Runtime.Intrinsics.Vector64<System.UInt32> addend, System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> AbsoluteDifferenceAdd(System.Runtime.Intrinsics.Vector64<System.UInt16> addend, System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> AbsoluteDifferenceWideningLower(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> AbsoluteDifferenceWideningLower(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> AbsoluteDifferenceWideningLower(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> AbsoluteDifferenceWideningLower(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> AbsoluteDifferenceWideningLower(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> AbsoluteDifferenceWideningLower(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> AbsoluteDifferenceWideningLowerAndAdd(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> AbsoluteDifferenceWideningLowerAndAdd(System.Runtime.Intrinsics.Vector128<System.Int64> addend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> AbsoluteDifferenceWideningLowerAndAdd(System.Runtime.Intrinsics.Vector128<System.Int16> addend, System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> AbsoluteDifferenceWideningLowerAndAdd(System.Runtime.Intrinsics.Vector128<System.UInt32> addend, System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> AbsoluteDifferenceWideningLowerAndAdd(System.Runtime.Intrinsics.Vector128<System.UInt64> addend, System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> AbsoluteDifferenceWideningLowerAndAdd(System.Runtime.Intrinsics.Vector128<System.UInt16> addend, System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> AbsoluteDifferenceWideningUpper(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> AbsoluteDifferenceWideningUpper(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> AbsoluteDifferenceWideningUpper(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> AbsoluteDifferenceWideningUpper(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> AbsoluteDifferenceWideningUpper(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> AbsoluteDifferenceWideningUpper(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> AbsoluteDifferenceWideningUpperAndAdd(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> AbsoluteDifferenceWideningUpperAndAdd(System.Runtime.Intrinsics.Vector128<System.Int64> addend, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> AbsoluteDifferenceWideningUpperAndAdd(System.Runtime.Intrinsics.Vector128<System.Int16> addend, System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> AbsoluteDifferenceWideningUpperAndAdd(System.Runtime.Intrinsics.Vector128<System.UInt32> addend, System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> AbsoluteDifferenceWideningUpperAndAdd(System.Runtime.Intrinsics.Vector128<System.UInt64> addend, System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> AbsoluteDifferenceWideningUpperAndAdd(System.Runtime.Intrinsics.Vector128<System.UInt16> addend, System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> Add(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> Add(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> Add(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> Add(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> Add(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> Add(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> Add(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> Add(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> Add(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> Add(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> Add(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> Add(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> Add(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> Add(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> Add(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> Add(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> AddHighNarrowingLower(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> AddHighNarrowingLower(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> AddHighNarrowingLower(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> AddHighNarrowingLower(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> AddHighNarrowingLower(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> AddHighNarrowingLower(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> AddHighNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.Byte> lower, System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> AddHighNarrowingUpper(System.Runtime.Intrinsics.Vector64<int> lower, System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> AddHighNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.SByte> lower, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> AddHighNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.Int16> lower, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> AddHighNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.UInt32> lower, System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> AddHighNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.UInt16> lower, System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> AddPairwise(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> AddPairwise(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> AddPairwise(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> AddPairwise(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> AddPairwise(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> AddPairwise(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> AddPairwise(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> AddPairwiseWidening(System.Runtime.Intrinsics.Vector128<System.Byte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> AddPairwiseWidening(System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> AddPairwiseWidening(System.Runtime.Intrinsics.Vector128<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> AddPairwiseWidening(System.Runtime.Intrinsics.Vector128<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> AddPairwiseWidening(System.Runtime.Intrinsics.Vector128<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> AddPairwiseWidening(System.Runtime.Intrinsics.Vector128<System.UInt16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> AddPairwiseWidening(System.Runtime.Intrinsics.Vector64<System.Byte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> AddPairwiseWidening(System.Runtime.Intrinsics.Vector64<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> AddPairwiseWidening(System.Runtime.Intrinsics.Vector64<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> AddPairwiseWidening(System.Runtime.Intrinsics.Vector64<System.UInt16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> AddPairwiseWideningAndAdd(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector128<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> AddPairwiseWideningAndAdd(System.Runtime.Intrinsics.Vector128<System.Int64> addend, System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> AddPairwiseWideningAndAdd(System.Runtime.Intrinsics.Vector128<System.Int16> addend, System.Runtime.Intrinsics.Vector128<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> AddPairwiseWideningAndAdd(System.Runtime.Intrinsics.Vector128<System.UInt32> addend, System.Runtime.Intrinsics.Vector128<System.UInt16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> AddPairwiseWideningAndAdd(System.Runtime.Intrinsics.Vector128<System.UInt64> addend, System.Runtime.Intrinsics.Vector128<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> AddPairwiseWideningAndAdd(System.Runtime.Intrinsics.Vector128<System.UInt16> addend, System.Runtime.Intrinsics.Vector128<System.Byte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> AddPairwiseWideningAndAdd(System.Runtime.Intrinsics.Vector64<int> addend, System.Runtime.Intrinsics.Vector64<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> AddPairwiseWideningAndAdd(System.Runtime.Intrinsics.Vector64<System.Int16> addend, System.Runtime.Intrinsics.Vector64<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> AddPairwiseWideningAndAdd(System.Runtime.Intrinsics.Vector64<System.UInt32> addend, System.Runtime.Intrinsics.Vector64<System.UInt16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> AddPairwiseWideningAndAdd(System.Runtime.Intrinsics.Vector64<System.UInt16> addend, System.Runtime.Intrinsics.Vector64<System.Byte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> AddPairwiseWideningAndAddScalar(System.Runtime.Intrinsics.Vector64<System.Int64> addend, System.Runtime.Intrinsics.Vector64<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt64> AddPairwiseWideningAndAddScalar(System.Runtime.Intrinsics.Vector64<System.UInt64> addend, System.Runtime.Intrinsics.Vector64<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> AddPairwiseWideningScalar(System.Runtime.Intrinsics.Vector64<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt64> AddPairwiseWideningScalar(System.Runtime.Intrinsics.Vector64<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> AddRoundedHighNarrowingLower(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> AddRoundedHighNarrowingLower(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> AddRoundedHighNarrowingLower(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> AddRoundedHighNarrowingLower(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> AddRoundedHighNarrowingLower(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> AddRoundedHighNarrowingLower(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> AddRoundedHighNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.Byte> lower, System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> AddRoundedHighNarrowingUpper(System.Runtime.Intrinsics.Vector64<int> lower, System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> AddRoundedHighNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.SByte> lower, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> AddRoundedHighNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.Int16> lower, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> AddRoundedHighNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.UInt32> lower, System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> AddRoundedHighNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.UInt16> lower, System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> AddSaturate(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> AddSaturate(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> AddSaturate(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> AddSaturate(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> AddSaturate(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> AddSaturate(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> AddSaturate(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> AddSaturate(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> AddSaturate(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> AddSaturate(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> AddSaturate(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> AddSaturate(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> AddSaturate(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> AddSaturate(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> AddSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int64> left, System.Runtime.Intrinsics.Vector64<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt64> AddSaturateScalar(System.Runtime.Intrinsics.Vector64<System.UInt64> left, System.Runtime.Intrinsics.Vector64<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<double> AddScalar(System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> AddScalar(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> AddScalar(System.Runtime.Intrinsics.Vector64<System.Int64> left, System.Runtime.Intrinsics.Vector64<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt64> AddScalar(System.Runtime.Intrinsics.Vector64<System.UInt64> left, System.Runtime.Intrinsics.Vector64<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> AddWideningLower(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> AddWideningLower(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> AddWideningLower(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> AddWideningLower(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> AddWideningLower(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> AddWideningLower(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> AddWideningLower(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> AddWideningLower(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> AddWideningLower(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> AddWideningLower(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> AddWideningLower(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> AddWideningLower(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> AddWideningUpper(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> AddWideningUpper(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> AddWideningUpper(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> AddWideningUpper(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> AddWideningUpper(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> AddWideningUpper(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> AddWideningUpper(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> AddWideningUpper(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> AddWideningUpper(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> AddWideningUpper(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> AddWideningUpper(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> AddWideningUpper(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    internal AdvSimd() => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> And(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> And(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> And(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> And(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> And(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> And(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> And(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> And(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> And(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> And(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> And(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<double> And(System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> And(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> And(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> And(System.Runtime.Intrinsics.Vector64<System.Int64> left, System.Runtime.Intrinsics.Vector64<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> And(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> And(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> And(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt64> And(System.Runtime.Intrinsics.Vector64<System.UInt64> left, System.Runtime.Intrinsics.Vector64<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> And(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> BitwiseClear(System.Runtime.Intrinsics.Vector128<System.Byte> value, System.Runtime.Intrinsics.Vector128<System.Byte> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> BitwiseClear(System.Runtime.Intrinsics.Vector128<double> value, System.Runtime.Intrinsics.Vector128<double> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> BitwiseClear(System.Runtime.Intrinsics.Vector128<float> value, System.Runtime.Intrinsics.Vector128<float> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> BitwiseClear(System.Runtime.Intrinsics.Vector128<int> value, System.Runtime.Intrinsics.Vector128<int> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> BitwiseClear(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Runtime.Intrinsics.Vector128<System.Int64> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> BitwiseClear(System.Runtime.Intrinsics.Vector128<System.SByte> value, System.Runtime.Intrinsics.Vector128<System.SByte> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> BitwiseClear(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Runtime.Intrinsics.Vector128<System.Int16> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> BitwiseClear(System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Runtime.Intrinsics.Vector128<System.UInt32> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> BitwiseClear(System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Runtime.Intrinsics.Vector128<System.UInt64> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> BitwiseClear(System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Runtime.Intrinsics.Vector128<System.UInt16> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> BitwiseClear(System.Runtime.Intrinsics.Vector64<System.Byte> value, System.Runtime.Intrinsics.Vector64<System.Byte> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<double> BitwiseClear(System.Runtime.Intrinsics.Vector64<double> value, System.Runtime.Intrinsics.Vector64<double> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> BitwiseClear(System.Runtime.Intrinsics.Vector64<float> value, System.Runtime.Intrinsics.Vector64<float> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> BitwiseClear(System.Runtime.Intrinsics.Vector64<int> value, System.Runtime.Intrinsics.Vector64<int> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> BitwiseClear(System.Runtime.Intrinsics.Vector64<System.Int64> value, System.Runtime.Intrinsics.Vector64<System.Int64> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> BitwiseClear(System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Runtime.Intrinsics.Vector64<System.SByte> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> BitwiseClear(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Runtime.Intrinsics.Vector64<System.Int16> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> BitwiseClear(System.Runtime.Intrinsics.Vector64<System.UInt32> value, System.Runtime.Intrinsics.Vector64<System.UInt32> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt64> BitwiseClear(System.Runtime.Intrinsics.Vector64<System.UInt64> value, System.Runtime.Intrinsics.Vector64<System.UInt64> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> BitwiseClear(System.Runtime.Intrinsics.Vector64<System.UInt16> value, System.Runtime.Intrinsics.Vector64<System.UInt16> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> BitwiseSelect(System.Runtime.Intrinsics.Vector128<System.Byte> select, System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> BitwiseSelect(System.Runtime.Intrinsics.Vector128<double> select, System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> BitwiseSelect(System.Runtime.Intrinsics.Vector128<float> select, System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> BitwiseSelect(System.Runtime.Intrinsics.Vector128<int> select, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> BitwiseSelect(System.Runtime.Intrinsics.Vector128<System.Int64> select, System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> BitwiseSelect(System.Runtime.Intrinsics.Vector128<System.SByte> select, System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> BitwiseSelect(System.Runtime.Intrinsics.Vector128<System.Int16> select, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> BitwiseSelect(System.Runtime.Intrinsics.Vector128<System.UInt32> select, System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> BitwiseSelect(System.Runtime.Intrinsics.Vector128<System.UInt64> select, System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> BitwiseSelect(System.Runtime.Intrinsics.Vector128<System.UInt16> select, System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> BitwiseSelect(System.Runtime.Intrinsics.Vector64<System.Byte> select, System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<double> BitwiseSelect(System.Runtime.Intrinsics.Vector64<double> select, System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> BitwiseSelect(System.Runtime.Intrinsics.Vector64<float> select, System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> BitwiseSelect(System.Runtime.Intrinsics.Vector64<int> select, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> BitwiseSelect(System.Runtime.Intrinsics.Vector64<System.Int64> select, System.Runtime.Intrinsics.Vector64<System.Int64> left, System.Runtime.Intrinsics.Vector64<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> BitwiseSelect(System.Runtime.Intrinsics.Vector64<System.SByte> select, System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> BitwiseSelect(System.Runtime.Intrinsics.Vector64<System.Int16> select, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> BitwiseSelect(System.Runtime.Intrinsics.Vector64<System.UInt32> select, System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt64> BitwiseSelect(System.Runtime.Intrinsics.Vector64<System.UInt64> select, System.Runtime.Intrinsics.Vector64<System.UInt64> left, System.Runtime.Intrinsics.Vector64<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> BitwiseSelect(System.Runtime.Intrinsics.Vector64<System.UInt16> select, System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> Ceiling(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> Ceiling(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<double> CeilingScalar(System.Runtime.Intrinsics.Vector64<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> CeilingScalar(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> CompareEqual(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareEqual(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> CompareEqual(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> CompareEqual(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> CompareEqual(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> CompareEqual(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> CompareEqual(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> CompareEqual(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> CompareEqual(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> CompareEqual(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> CompareEqual(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> CompareEqual(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> CompareEqual(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> CompareEqual(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> CompareGreaterThan(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareGreaterThan(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> CompareGreaterThan(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> CompareGreaterThan(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> CompareGreaterThan(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> CompareGreaterThan(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> CompareGreaterThan(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> CompareGreaterThan(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> CompareGreaterThan(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> CompareGreaterThan(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> CompareGreaterThan(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> CompareGreaterThan(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> CompareGreaterThan(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> CompareGreaterThan(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> CompareGreaterThanOrEqual(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareGreaterThanOrEqual(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> CompareGreaterThanOrEqual(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> CompareGreaterThanOrEqual(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> CompareGreaterThanOrEqual(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> CompareGreaterThanOrEqual(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> CompareGreaterThanOrEqual(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> CompareGreaterThanOrEqual(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> CompareGreaterThanOrEqual(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> CompareGreaterThanOrEqual(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> CompareGreaterThanOrEqual(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> CompareGreaterThanOrEqual(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> CompareGreaterThanOrEqual(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> CompareGreaterThanOrEqual(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> CompareLessThan(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareLessThan(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> CompareLessThan(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> CompareLessThan(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> CompareLessThan(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> CompareLessThan(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> CompareLessThan(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> CompareLessThan(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> CompareLessThan(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> CompareLessThan(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> CompareLessThan(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> CompareLessThan(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> CompareLessThan(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> CompareLessThan(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> CompareLessThanOrEqual(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareLessThanOrEqual(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> CompareLessThanOrEqual(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> CompareLessThanOrEqual(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> CompareLessThanOrEqual(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> CompareLessThanOrEqual(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> CompareLessThanOrEqual(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> CompareLessThanOrEqual(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> CompareLessThanOrEqual(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> CompareLessThanOrEqual(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> CompareLessThanOrEqual(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> CompareLessThanOrEqual(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> CompareLessThanOrEqual(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> CompareLessThanOrEqual(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> CompareTest(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareTest(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> CompareTest(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> CompareTest(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> CompareTest(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> CompareTest(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> CompareTest(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> CompareTest(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> CompareTest(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> CompareTest(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> CompareTest(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> CompareTest(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> CompareTest(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> CompareTest(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ConvertToInt32RoundAwayFromZero(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ConvertToInt32RoundAwayFromZero(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ConvertToInt32RoundAwayFromZeroScalar(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ConvertToInt32RoundToEven(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ConvertToInt32RoundToEven(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ConvertToInt32RoundToEvenScalar(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ConvertToInt32RoundToNegativeInfinity(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ConvertToInt32RoundToNegativeInfinity(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ConvertToInt32RoundToNegativeInfinityScalar(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ConvertToInt32RoundToPositiveInfinity(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ConvertToInt32RoundToPositiveInfinity(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ConvertToInt32RoundToPositiveInfinityScalar(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ConvertToInt32RoundToZero(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ConvertToInt32RoundToZero(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ConvertToInt32RoundToZeroScalar(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> ConvertToSingle(System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> ConvertToSingle(System.Runtime.Intrinsics.Vector128<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> ConvertToSingle(System.Runtime.Intrinsics.Vector64<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> ConvertToSingle(System.Runtime.Intrinsics.Vector64<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> ConvertToSingleScalar(System.Runtime.Intrinsics.Vector64<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> ConvertToSingleScalar(System.Runtime.Intrinsics.Vector64<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ConvertToUInt32RoundAwayFromZero(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ConvertToUInt32RoundAwayFromZero(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ConvertToUInt32RoundAwayFromZeroScalar(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ConvertToUInt32RoundToEven(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ConvertToUInt32RoundToEven(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ConvertToUInt32RoundToEvenScalar(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ConvertToUInt32RoundToNegativeInfinity(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ConvertToUInt32RoundToNegativeInfinity(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ConvertToUInt32RoundToNegativeInfinityScalar(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ConvertToUInt32RoundToPositiveInfinity(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ConvertToUInt32RoundToPositiveInfinity(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ConvertToUInt32RoundToPositiveInfinityScalar(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ConvertToUInt32RoundToZero(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ConvertToUInt32RoundToZero(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ConvertToUInt32RoundToZeroScalar(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<double> DivideScalar(System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> DivideScalar(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> DuplicateSelectedScalarToVector128(System.Runtime.Intrinsics.Vector128<System.Byte> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> DuplicateSelectedScalarToVector128(System.Runtime.Intrinsics.Vector128<float> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> DuplicateSelectedScalarToVector128(System.Runtime.Intrinsics.Vector128<int> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> DuplicateSelectedScalarToVector128(System.Runtime.Intrinsics.Vector128<System.SByte> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> DuplicateSelectedScalarToVector128(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> DuplicateSelectedScalarToVector128(System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> DuplicateSelectedScalarToVector128(System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> DuplicateSelectedScalarToVector128(System.Runtime.Intrinsics.Vector64<System.Byte> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> DuplicateSelectedScalarToVector128(System.Runtime.Intrinsics.Vector64<float> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> DuplicateSelectedScalarToVector128(System.Runtime.Intrinsics.Vector64<int> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> DuplicateSelectedScalarToVector128(System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> DuplicateSelectedScalarToVector128(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> DuplicateSelectedScalarToVector128(System.Runtime.Intrinsics.Vector64<System.UInt32> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> DuplicateSelectedScalarToVector128(System.Runtime.Intrinsics.Vector64<System.UInt16> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> DuplicateSelectedScalarToVector64(System.Runtime.Intrinsics.Vector128<System.Byte> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> DuplicateSelectedScalarToVector64(System.Runtime.Intrinsics.Vector128<float> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> DuplicateSelectedScalarToVector64(System.Runtime.Intrinsics.Vector128<int> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> DuplicateSelectedScalarToVector64(System.Runtime.Intrinsics.Vector128<System.SByte> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> DuplicateSelectedScalarToVector64(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> DuplicateSelectedScalarToVector64(System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> DuplicateSelectedScalarToVector64(System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> DuplicateSelectedScalarToVector64(System.Runtime.Intrinsics.Vector64<System.Byte> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> DuplicateSelectedScalarToVector64(System.Runtime.Intrinsics.Vector64<float> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> DuplicateSelectedScalarToVector64(System.Runtime.Intrinsics.Vector64<int> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> DuplicateSelectedScalarToVector64(System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> DuplicateSelectedScalarToVector64(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> DuplicateSelectedScalarToVector64(System.Runtime.Intrinsics.Vector64<System.UInt32> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> DuplicateSelectedScalarToVector64(System.Runtime.Intrinsics.Vector64<System.UInt16> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> DuplicateToVector128(System.Byte value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> DuplicateToVector128(float value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> DuplicateToVector128(int value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> DuplicateToVector128(System.SByte value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> DuplicateToVector128(System.Int16 value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> DuplicateToVector128(System.UInt32 value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> DuplicateToVector128(System.UInt16 value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> DuplicateToVector64(System.Byte value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> DuplicateToVector64(float value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> DuplicateToVector64(int value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> DuplicateToVector64(System.SByte value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> DuplicateToVector64(System.Int16 value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> DuplicateToVector64(System.UInt32 value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> DuplicateToVector64(System.UInt16 value) => throw null;
                    public static System.Byte Extract(System.Runtime.Intrinsics.Vector128<System.Byte> vector, System.Byte index) => throw null;
                    public static double Extract(System.Runtime.Intrinsics.Vector128<double> vector, System.Byte index) => throw null;
                    public static float Extract(System.Runtime.Intrinsics.Vector128<float> vector, System.Byte index) => throw null;
                    public static int Extract(System.Runtime.Intrinsics.Vector128<int> vector, System.Byte index) => throw null;
                    public static System.Int64 Extract(System.Runtime.Intrinsics.Vector128<System.Int64> vector, System.Byte index) => throw null;
                    public static System.SByte Extract(System.Runtime.Intrinsics.Vector128<System.SByte> vector, System.Byte index) => throw null;
                    public static System.Int16 Extract(System.Runtime.Intrinsics.Vector128<System.Int16> vector, System.Byte index) => throw null;
                    public static System.UInt32 Extract(System.Runtime.Intrinsics.Vector128<System.UInt32> vector, System.Byte index) => throw null;
                    public static System.UInt64 Extract(System.Runtime.Intrinsics.Vector128<System.UInt64> vector, System.Byte index) => throw null;
                    public static System.UInt16 Extract(System.Runtime.Intrinsics.Vector128<System.UInt16> vector, System.Byte index) => throw null;
                    public static System.Byte Extract(System.Runtime.Intrinsics.Vector64<System.Byte> vector, System.Byte index) => throw null;
                    public static float Extract(System.Runtime.Intrinsics.Vector64<float> vector, System.Byte index) => throw null;
                    public static int Extract(System.Runtime.Intrinsics.Vector64<int> vector, System.Byte index) => throw null;
                    public static System.SByte Extract(System.Runtime.Intrinsics.Vector64<System.SByte> vector, System.Byte index) => throw null;
                    public static System.Int16 Extract(System.Runtime.Intrinsics.Vector64<System.Int16> vector, System.Byte index) => throw null;
                    public static System.UInt32 Extract(System.Runtime.Intrinsics.Vector64<System.UInt32> vector, System.Byte index) => throw null;
                    public static System.UInt16 Extract(System.Runtime.Intrinsics.Vector64<System.UInt16> vector, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> ExtractNarrowingLower(System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ExtractNarrowingLower(System.Runtime.Intrinsics.Vector128<System.Int64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> ExtractNarrowingLower(System.Runtime.Intrinsics.Vector128<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> ExtractNarrowingLower(System.Runtime.Intrinsics.Vector128<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ExtractNarrowingLower(System.Runtime.Intrinsics.Vector128<System.UInt64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> ExtractNarrowingLower(System.Runtime.Intrinsics.Vector128<System.UInt16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> ExtractNarrowingSaturateLower(System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ExtractNarrowingSaturateLower(System.Runtime.Intrinsics.Vector128<System.Int64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> ExtractNarrowingSaturateLower(System.Runtime.Intrinsics.Vector128<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> ExtractNarrowingSaturateLower(System.Runtime.Intrinsics.Vector128<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ExtractNarrowingSaturateLower(System.Runtime.Intrinsics.Vector128<System.UInt64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> ExtractNarrowingSaturateLower(System.Runtime.Intrinsics.Vector128<System.UInt16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> ExtractNarrowingSaturateUnsignedLower(System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ExtractNarrowingSaturateUnsignedLower(System.Runtime.Intrinsics.Vector128<System.Int64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> ExtractNarrowingSaturateUnsignedLower(System.Runtime.Intrinsics.Vector128<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> ExtractNarrowingSaturateUnsignedUpper(System.Runtime.Intrinsics.Vector64<System.Byte> lower, System.Runtime.Intrinsics.Vector128<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ExtractNarrowingSaturateUnsignedUpper(System.Runtime.Intrinsics.Vector64<System.UInt32> lower, System.Runtime.Intrinsics.Vector128<System.Int64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ExtractNarrowingSaturateUnsignedUpper(System.Runtime.Intrinsics.Vector64<System.UInt16> lower, System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> ExtractNarrowingSaturateUpper(System.Runtime.Intrinsics.Vector64<System.Byte> lower, System.Runtime.Intrinsics.Vector128<System.UInt16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ExtractNarrowingSaturateUpper(System.Runtime.Intrinsics.Vector64<int> lower, System.Runtime.Intrinsics.Vector128<System.Int64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ExtractNarrowingSaturateUpper(System.Runtime.Intrinsics.Vector64<System.SByte> lower, System.Runtime.Intrinsics.Vector128<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ExtractNarrowingSaturateUpper(System.Runtime.Intrinsics.Vector64<System.Int16> lower, System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ExtractNarrowingSaturateUpper(System.Runtime.Intrinsics.Vector64<System.UInt32> lower, System.Runtime.Intrinsics.Vector128<System.UInt64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ExtractNarrowingSaturateUpper(System.Runtime.Intrinsics.Vector64<System.UInt16> lower, System.Runtime.Intrinsics.Vector128<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> ExtractNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.Byte> lower, System.Runtime.Intrinsics.Vector128<System.UInt16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ExtractNarrowingUpper(System.Runtime.Intrinsics.Vector64<int> lower, System.Runtime.Intrinsics.Vector128<System.Int64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ExtractNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.SByte> lower, System.Runtime.Intrinsics.Vector128<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ExtractNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.Int16> lower, System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ExtractNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.UInt32> lower, System.Runtime.Intrinsics.Vector128<System.UInt64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ExtractNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.UInt16> lower, System.Runtime.Intrinsics.Vector128<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> ExtractVector128(System.Runtime.Intrinsics.Vector128<System.Byte> upper, System.Runtime.Intrinsics.Vector128<System.Byte> lower, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> ExtractVector128(System.Runtime.Intrinsics.Vector128<double> upper, System.Runtime.Intrinsics.Vector128<double> lower, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> ExtractVector128(System.Runtime.Intrinsics.Vector128<float> upper, System.Runtime.Intrinsics.Vector128<float> lower, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ExtractVector128(System.Runtime.Intrinsics.Vector128<int> upper, System.Runtime.Intrinsics.Vector128<int> lower, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ExtractVector128(System.Runtime.Intrinsics.Vector128<System.Int64> upper, System.Runtime.Intrinsics.Vector128<System.Int64> lower, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ExtractVector128(System.Runtime.Intrinsics.Vector128<System.SByte> upper, System.Runtime.Intrinsics.Vector128<System.SByte> lower, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ExtractVector128(System.Runtime.Intrinsics.Vector128<System.Int16> upper, System.Runtime.Intrinsics.Vector128<System.Int16> lower, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ExtractVector128(System.Runtime.Intrinsics.Vector128<System.UInt32> upper, System.Runtime.Intrinsics.Vector128<System.UInt32> lower, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ExtractVector128(System.Runtime.Intrinsics.Vector128<System.UInt64> upper, System.Runtime.Intrinsics.Vector128<System.UInt64> lower, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ExtractVector128(System.Runtime.Intrinsics.Vector128<System.UInt16> upper, System.Runtime.Intrinsics.Vector128<System.UInt16> lower, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> ExtractVector64(System.Runtime.Intrinsics.Vector64<System.Byte> upper, System.Runtime.Intrinsics.Vector64<System.Byte> lower, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> ExtractVector64(System.Runtime.Intrinsics.Vector64<float> upper, System.Runtime.Intrinsics.Vector64<float> lower, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ExtractVector64(System.Runtime.Intrinsics.Vector64<int> upper, System.Runtime.Intrinsics.Vector64<int> lower, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> ExtractVector64(System.Runtime.Intrinsics.Vector64<System.SByte> upper, System.Runtime.Intrinsics.Vector64<System.SByte> lower, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> ExtractVector64(System.Runtime.Intrinsics.Vector64<System.Int16> upper, System.Runtime.Intrinsics.Vector64<System.Int16> lower, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ExtractVector64(System.Runtime.Intrinsics.Vector64<System.UInt32> upper, System.Runtime.Intrinsics.Vector64<System.UInt32> lower, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> ExtractVector64(System.Runtime.Intrinsics.Vector64<System.UInt16> upper, System.Runtime.Intrinsics.Vector64<System.UInt16> lower, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> Floor(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> Floor(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<double> FloorScalar(System.Runtime.Intrinsics.Vector64<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> FloorScalar(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> FusedAddHalving(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> FusedAddHalving(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> FusedAddHalving(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> FusedAddHalving(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> FusedAddHalving(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> FusedAddHalving(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> FusedAddHalving(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> FusedAddHalving(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> FusedAddHalving(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> FusedAddHalving(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> FusedAddHalving(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> FusedAddHalving(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> FusedAddRoundedHalving(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> FusedAddRoundedHalving(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> FusedAddRoundedHalving(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> FusedAddRoundedHalving(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> FusedAddRoundedHalving(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> FusedAddRoundedHalving(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> FusedAddRoundedHalving(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> FusedAddRoundedHalving(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> FusedAddRoundedHalving(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> FusedAddRoundedHalving(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> FusedAddRoundedHalving(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> FusedAddRoundedHalving(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> FusedMultiplyAdd(System.Runtime.Intrinsics.Vector128<float> addend, System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> FusedMultiplyAdd(System.Runtime.Intrinsics.Vector64<float> addend, System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<double> FusedMultiplyAddNegatedScalar(System.Runtime.Intrinsics.Vector64<double> addend, System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> FusedMultiplyAddNegatedScalar(System.Runtime.Intrinsics.Vector64<float> addend, System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<double> FusedMultiplyAddScalar(System.Runtime.Intrinsics.Vector64<double> addend, System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> FusedMultiplyAddScalar(System.Runtime.Intrinsics.Vector64<float> addend, System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> FusedMultiplySubtract(System.Runtime.Intrinsics.Vector128<float> minuend, System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> FusedMultiplySubtract(System.Runtime.Intrinsics.Vector64<float> minuend, System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<double> FusedMultiplySubtractNegatedScalar(System.Runtime.Intrinsics.Vector64<double> minuend, System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> FusedMultiplySubtractNegatedScalar(System.Runtime.Intrinsics.Vector64<float> minuend, System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<double> FusedMultiplySubtractScalar(System.Runtime.Intrinsics.Vector64<double> minuend, System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> FusedMultiplySubtractScalar(System.Runtime.Intrinsics.Vector64<float> minuend, System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> FusedSubtractHalving(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> FusedSubtractHalving(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> FusedSubtractHalving(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> FusedSubtractHalving(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> FusedSubtractHalving(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> FusedSubtractHalving(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> FusedSubtractHalving(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> FusedSubtractHalving(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> FusedSubtractHalving(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> FusedSubtractHalving(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> FusedSubtractHalving(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> FusedSubtractHalving(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> Insert(System.Runtime.Intrinsics.Vector128<System.Byte> vector, System.Byte index, System.Byte data) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> Insert(System.Runtime.Intrinsics.Vector128<double> vector, System.Byte index, double data) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> Insert(System.Runtime.Intrinsics.Vector128<float> vector, System.Byte index, float data) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> Insert(System.Runtime.Intrinsics.Vector128<int> vector, System.Byte index, int data) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> Insert(System.Runtime.Intrinsics.Vector128<System.Int64> vector, System.Byte index, System.Int64 data) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> Insert(System.Runtime.Intrinsics.Vector128<System.SByte> vector, System.Byte index, System.SByte data) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> Insert(System.Runtime.Intrinsics.Vector128<System.Int16> vector, System.Byte index, System.Int16 data) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> Insert(System.Runtime.Intrinsics.Vector128<System.UInt32> vector, System.Byte index, System.UInt32 data) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> Insert(System.Runtime.Intrinsics.Vector128<System.UInt64> vector, System.Byte index, System.UInt64 data) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> Insert(System.Runtime.Intrinsics.Vector128<System.UInt16> vector, System.Byte index, System.UInt16 data) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> Insert(System.Runtime.Intrinsics.Vector64<System.Byte> vector, System.Byte index, System.Byte data) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> Insert(System.Runtime.Intrinsics.Vector64<float> vector, System.Byte index, float data) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> Insert(System.Runtime.Intrinsics.Vector64<int> vector, System.Byte index, int data) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> Insert(System.Runtime.Intrinsics.Vector64<System.SByte> vector, System.Byte index, System.SByte data) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> Insert(System.Runtime.Intrinsics.Vector64<System.Int16> vector, System.Byte index, System.Int16 data) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> Insert(System.Runtime.Intrinsics.Vector64<System.UInt32> vector, System.Byte index, System.UInt32 data) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> Insert(System.Runtime.Intrinsics.Vector64<System.UInt16> vector, System.Byte index, System.UInt16 data) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> InsertScalar(System.Runtime.Intrinsics.Vector128<double> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector64<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> InsertScalar(System.Runtime.Intrinsics.Vector128<System.Int64> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector64<System.Int64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> InsertScalar(System.Runtime.Intrinsics.Vector128<System.UInt64> result, System.Byte resultIndex, System.Runtime.Intrinsics.Vector64<System.UInt64> value) => throw null;
                    public static bool IsSupported { get => throw null; }
                    public static System.Runtime.Intrinsics.Vector128<int> LeadingSignCount(System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> LeadingSignCount(System.Runtime.Intrinsics.Vector128<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> LeadingSignCount(System.Runtime.Intrinsics.Vector128<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> LeadingSignCount(System.Runtime.Intrinsics.Vector64<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> LeadingSignCount(System.Runtime.Intrinsics.Vector64<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> LeadingSignCount(System.Runtime.Intrinsics.Vector64<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> LeadingZeroCount(System.Runtime.Intrinsics.Vector128<System.Byte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> LeadingZeroCount(System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> LeadingZeroCount(System.Runtime.Intrinsics.Vector128<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> LeadingZeroCount(System.Runtime.Intrinsics.Vector128<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> LeadingZeroCount(System.Runtime.Intrinsics.Vector128<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> LeadingZeroCount(System.Runtime.Intrinsics.Vector128<System.UInt16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> LeadingZeroCount(System.Runtime.Intrinsics.Vector64<System.Byte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> LeadingZeroCount(System.Runtime.Intrinsics.Vector64<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> LeadingZeroCount(System.Runtime.Intrinsics.Vector64<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> LeadingZeroCount(System.Runtime.Intrinsics.Vector64<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> LeadingZeroCount(System.Runtime.Intrinsics.Vector64<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> LeadingZeroCount(System.Runtime.Intrinsics.Vector64<System.UInt16> value) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Byte> LoadAndInsertScalar(System.Runtime.Intrinsics.Vector128<System.Byte> value, System.Byte index, System.Byte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<double> LoadAndInsertScalar(System.Runtime.Intrinsics.Vector128<double> value, System.Byte index, double* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<float> LoadAndInsertScalar(System.Runtime.Intrinsics.Vector128<float> value, System.Byte index, float* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<int> LoadAndInsertScalar(System.Runtime.Intrinsics.Vector128<int> value, System.Byte index, int* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Int64> LoadAndInsertScalar(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte index, System.Int64* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.SByte> LoadAndInsertScalar(System.Runtime.Intrinsics.Vector128<System.SByte> value, System.Byte index, System.SByte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Int16> LoadAndInsertScalar(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte index, System.Int16* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt32> LoadAndInsertScalar(System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Byte index, System.UInt32* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt64> LoadAndInsertScalar(System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Byte index, System.UInt64* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt16> LoadAndInsertScalar(System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Byte index, System.UInt16* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector64<System.Byte> LoadAndInsertScalar(System.Runtime.Intrinsics.Vector64<System.Byte> value, System.Byte index, System.Byte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector64<float> LoadAndInsertScalar(System.Runtime.Intrinsics.Vector64<float> value, System.Byte index, float* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector64<int> LoadAndInsertScalar(System.Runtime.Intrinsics.Vector64<int> value, System.Byte index, int* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector64<System.SByte> LoadAndInsertScalar(System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Byte index, System.SByte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector64<System.Int16> LoadAndInsertScalar(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Byte index, System.Int16* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector64<System.UInt32> LoadAndInsertScalar(System.Runtime.Intrinsics.Vector64<System.UInt32> value, System.Byte index, System.UInt32* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector64<System.UInt16> LoadAndInsertScalar(System.Runtime.Intrinsics.Vector64<System.UInt16> value, System.Byte index, System.UInt16* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Byte> LoadAndReplicateToVector128(System.Byte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<float> LoadAndReplicateToVector128(float* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<int> LoadAndReplicateToVector128(int* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.SByte> LoadAndReplicateToVector128(System.SByte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Int16> LoadAndReplicateToVector128(System.Int16* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt32> LoadAndReplicateToVector128(System.UInt32* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt16> LoadAndReplicateToVector128(System.UInt16* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector64<System.Byte> LoadAndReplicateToVector64(System.Byte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector64<float> LoadAndReplicateToVector64(float* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector64<int> LoadAndReplicateToVector64(int* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector64<System.SByte> LoadAndReplicateToVector64(System.SByte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector64<System.Int16> LoadAndReplicateToVector64(System.Int16* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector64<System.UInt32> LoadAndReplicateToVector64(System.UInt32* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector64<System.UInt16> LoadAndReplicateToVector64(System.UInt16* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Byte> LoadVector128(System.Byte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<double> LoadVector128(double* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<float> LoadVector128(float* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<int> LoadVector128(int* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Int64> LoadVector128(System.Int64* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.SByte> LoadVector128(System.SByte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Int16> LoadVector128(System.Int16* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt32> LoadVector128(System.UInt32* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt64> LoadVector128(System.UInt64* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt16> LoadVector128(System.UInt16* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector64<System.Byte> LoadVector64(System.Byte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector64<double> LoadVector64(double* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector64<float> LoadVector64(float* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector64<int> LoadVector64(int* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector64<System.Int64> LoadVector64(System.Int64* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector64<System.SByte> LoadVector64(System.SByte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector64<System.Int16> LoadVector64(System.Int16* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector64<System.UInt32> LoadVector64(System.UInt32* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector64<System.UInt64> LoadVector64(System.UInt64* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector64<System.UInt16> LoadVector64(System.UInt16* address) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> Max(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> Max(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> Max(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> Max(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> Max(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> Max(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> Max(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> Max(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> Max(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> Max(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> Max(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> Max(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> Max(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> Max(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> MaxNumber(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> MaxNumber(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<double> MaxNumberScalar(System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> MaxNumberScalar(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> MaxPairwise(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> MaxPairwise(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> MaxPairwise(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> MaxPairwise(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> MaxPairwise(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> MaxPairwise(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> MaxPairwise(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> Min(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> Min(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> Min(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> Min(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> Min(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> Min(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> Min(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> Min(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> Min(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> Min(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> Min(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> Min(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> Min(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> Min(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> MinNumber(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> MinNumber(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<double> MinNumberScalar(System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> MinNumberScalar(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> MinPairwise(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> MinPairwise(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> MinPairwise(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> MinPairwise(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> MinPairwise(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> MinPairwise(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> MinPairwise(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> Multiply(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> Multiply(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> Multiply(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> Multiply(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> Multiply(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> Multiply(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> Multiply(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> Multiply(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> Multiply(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> Multiply(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> Multiply(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> Multiply(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> Multiply(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> Multiply(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> MultiplyAdd(System.Runtime.Intrinsics.Vector128<System.Byte> addend, System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyAdd(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> MultiplyAdd(System.Runtime.Intrinsics.Vector128<System.SByte> addend, System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyAdd(System.Runtime.Intrinsics.Vector128<System.Int16> addend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> MultiplyAdd(System.Runtime.Intrinsics.Vector128<System.UInt32> addend, System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> MultiplyAdd(System.Runtime.Intrinsics.Vector128<System.UInt16> addend, System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> MultiplyAdd(System.Runtime.Intrinsics.Vector64<System.Byte> addend, System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> MultiplyAdd(System.Runtime.Intrinsics.Vector64<int> addend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> MultiplyAdd(System.Runtime.Intrinsics.Vector64<System.SByte> addend, System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyAdd(System.Runtime.Intrinsics.Vector64<System.Int16> addend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> MultiplyAdd(System.Runtime.Intrinsics.Vector64<System.UInt32> addend, System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> MultiplyAdd(System.Runtime.Intrinsics.Vector64<System.UInt16> addend, System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyAddByScalar(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyAddByScalar(System.Runtime.Intrinsics.Vector128<System.Int16> addend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> MultiplyAddByScalar(System.Runtime.Intrinsics.Vector128<System.UInt32> addend, System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> MultiplyAddByScalar(System.Runtime.Intrinsics.Vector128<System.UInt16> addend, System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> MultiplyAddByScalar(System.Runtime.Intrinsics.Vector64<int> addend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyAddByScalar(System.Runtime.Intrinsics.Vector64<System.Int16> addend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> MultiplyAddByScalar(System.Runtime.Intrinsics.Vector64<System.UInt32> addend, System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> MultiplyAddByScalar(System.Runtime.Intrinsics.Vector64<System.UInt16> addend, System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyAddBySelectedScalar(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyAddBySelectedScalar(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyAddBySelectedScalar(System.Runtime.Intrinsics.Vector128<System.Int16> addend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyAddBySelectedScalar(System.Runtime.Intrinsics.Vector128<System.Int16> addend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> MultiplyAddBySelectedScalar(System.Runtime.Intrinsics.Vector128<System.UInt32> addend, System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> MultiplyAddBySelectedScalar(System.Runtime.Intrinsics.Vector128<System.UInt32> addend, System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> MultiplyAddBySelectedScalar(System.Runtime.Intrinsics.Vector128<System.UInt16> addend, System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> MultiplyAddBySelectedScalar(System.Runtime.Intrinsics.Vector128<System.UInt16> addend, System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> MultiplyAddBySelectedScalar(System.Runtime.Intrinsics.Vector64<int> addend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> MultiplyAddBySelectedScalar(System.Runtime.Intrinsics.Vector64<int> addend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyAddBySelectedScalar(System.Runtime.Intrinsics.Vector64<System.Int16> addend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyAddBySelectedScalar(System.Runtime.Intrinsics.Vector64<System.Int16> addend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> MultiplyAddBySelectedScalar(System.Runtime.Intrinsics.Vector64<System.UInt32> addend, System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> MultiplyAddBySelectedScalar(System.Runtime.Intrinsics.Vector64<System.UInt32> addend, System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> MultiplyAddBySelectedScalar(System.Runtime.Intrinsics.Vector64<System.UInt16> addend, System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> MultiplyAddBySelectedScalar(System.Runtime.Intrinsics.Vector64<System.UInt16> addend, System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> MultiplyByScalar(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyByScalar(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyByScalar(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> MultiplyByScalar(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> MultiplyByScalar(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> MultiplyByScalar(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> MultiplyByScalar(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyByScalar(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> MultiplyByScalar(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> MultiplyByScalar(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> MultiplyBySelectedScalar(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> MultiplyBySelectedScalar(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector64<float> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyBySelectedScalar(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyBySelectedScalar(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyBySelectedScalar(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyBySelectedScalar(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> MultiplyBySelectedScalar(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> MultiplyBySelectedScalar(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> MultiplyBySelectedScalar(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> MultiplyBySelectedScalar(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> MultiplyBySelectedScalar(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector128<float> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> MultiplyBySelectedScalar(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> MultiplyBySelectedScalar(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> MultiplyBySelectedScalar(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyBySelectedScalar(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyBySelectedScalar(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> MultiplyBySelectedScalar(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> MultiplyBySelectedScalar(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> MultiplyBySelectedScalar(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> MultiplyBySelectedScalar(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyBySelectedScalarWideningLower(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyBySelectedScalarWideningLower(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyBySelectedScalarWideningLower(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyBySelectedScalarWideningLower(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> MultiplyBySelectedScalarWideningLower(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> MultiplyBySelectedScalarWideningLower(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> MultiplyBySelectedScalarWideningLower(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> MultiplyBySelectedScalarWideningLower(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyBySelectedScalarWideningLowerAndAdd(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyBySelectedScalarWideningLowerAndAdd(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyBySelectedScalarWideningLowerAndAdd(System.Runtime.Intrinsics.Vector128<System.Int64> addend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyBySelectedScalarWideningLowerAndAdd(System.Runtime.Intrinsics.Vector128<System.Int64> addend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> MultiplyBySelectedScalarWideningLowerAndAdd(System.Runtime.Intrinsics.Vector128<System.UInt32> addend, System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> MultiplyBySelectedScalarWideningLowerAndAdd(System.Runtime.Intrinsics.Vector128<System.UInt32> addend, System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> MultiplyBySelectedScalarWideningLowerAndAdd(System.Runtime.Intrinsics.Vector128<System.UInt64> addend, System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> MultiplyBySelectedScalarWideningLowerAndAdd(System.Runtime.Intrinsics.Vector128<System.UInt64> addend, System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyBySelectedScalarWideningLowerAndSubtract(System.Runtime.Intrinsics.Vector128<int> minuend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyBySelectedScalarWideningLowerAndSubtract(System.Runtime.Intrinsics.Vector128<int> minuend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyBySelectedScalarWideningLowerAndSubtract(System.Runtime.Intrinsics.Vector128<System.Int64> minuend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyBySelectedScalarWideningLowerAndSubtract(System.Runtime.Intrinsics.Vector128<System.Int64> minuend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> MultiplyBySelectedScalarWideningLowerAndSubtract(System.Runtime.Intrinsics.Vector128<System.UInt32> minuend, System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> MultiplyBySelectedScalarWideningLowerAndSubtract(System.Runtime.Intrinsics.Vector128<System.UInt32> minuend, System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> MultiplyBySelectedScalarWideningLowerAndSubtract(System.Runtime.Intrinsics.Vector128<System.UInt64> minuend, System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> MultiplyBySelectedScalarWideningLowerAndSubtract(System.Runtime.Intrinsics.Vector128<System.UInt64> minuend, System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyBySelectedScalarWideningUpper(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyBySelectedScalarWideningUpper(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyBySelectedScalarWideningUpper(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyBySelectedScalarWideningUpper(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> MultiplyBySelectedScalarWideningUpper(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> MultiplyBySelectedScalarWideningUpper(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> MultiplyBySelectedScalarWideningUpper(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> MultiplyBySelectedScalarWideningUpper(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyBySelectedScalarWideningUpperAndAdd(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyBySelectedScalarWideningUpperAndAdd(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyBySelectedScalarWideningUpperAndAdd(System.Runtime.Intrinsics.Vector128<System.Int64> addend, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyBySelectedScalarWideningUpperAndAdd(System.Runtime.Intrinsics.Vector128<System.Int64> addend, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> MultiplyBySelectedScalarWideningUpperAndAdd(System.Runtime.Intrinsics.Vector128<System.UInt32> addend, System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> MultiplyBySelectedScalarWideningUpperAndAdd(System.Runtime.Intrinsics.Vector128<System.UInt32> addend, System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> MultiplyBySelectedScalarWideningUpperAndAdd(System.Runtime.Intrinsics.Vector128<System.UInt64> addend, System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> MultiplyBySelectedScalarWideningUpperAndAdd(System.Runtime.Intrinsics.Vector128<System.UInt64> addend, System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyBySelectedScalarWideningUpperAndSubtract(System.Runtime.Intrinsics.Vector128<int> minuend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyBySelectedScalarWideningUpperAndSubtract(System.Runtime.Intrinsics.Vector128<int> minuend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyBySelectedScalarWideningUpperAndSubtract(System.Runtime.Intrinsics.Vector128<System.Int64> minuend, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyBySelectedScalarWideningUpperAndSubtract(System.Runtime.Intrinsics.Vector128<System.Int64> minuend, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> MultiplyBySelectedScalarWideningUpperAndSubtract(System.Runtime.Intrinsics.Vector128<System.UInt32> minuend, System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> MultiplyBySelectedScalarWideningUpperAndSubtract(System.Runtime.Intrinsics.Vector128<System.UInt32> minuend, System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> MultiplyBySelectedScalarWideningUpperAndSubtract(System.Runtime.Intrinsics.Vector128<System.UInt64> minuend, System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> MultiplyBySelectedScalarWideningUpperAndSubtract(System.Runtime.Intrinsics.Vector128<System.UInt64> minuend, System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyDoublingByScalarSaturateHigh(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyDoublingByScalarSaturateHigh(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> MultiplyDoublingByScalarSaturateHigh(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyDoublingByScalarSaturateHigh(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyDoublingBySelectedScalarSaturateHigh(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyDoublingBySelectedScalarSaturateHigh(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyDoublingBySelectedScalarSaturateHigh(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyDoublingBySelectedScalarSaturateHigh(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> MultiplyDoublingBySelectedScalarSaturateHigh(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> MultiplyDoublingBySelectedScalarSaturateHigh(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyDoublingBySelectedScalarSaturateHigh(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyDoublingBySelectedScalarSaturateHigh(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyDoublingSaturateHigh(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyDoublingSaturateHigh(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> MultiplyDoublingSaturateHigh(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyDoublingSaturateHigh(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyDoublingWideningLowerAndAddSaturate(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyDoublingWideningLowerAndAddSaturate(System.Runtime.Intrinsics.Vector128<System.Int64> addend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyDoublingWideningLowerAndSubtractSaturate(System.Runtime.Intrinsics.Vector128<int> minuend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyDoublingWideningLowerAndSubtractSaturate(System.Runtime.Intrinsics.Vector128<System.Int64> minuend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyDoublingWideningLowerByScalarAndAddSaturate(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyDoublingWideningLowerByScalarAndAddSaturate(System.Runtime.Intrinsics.Vector128<System.Int64> addend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyDoublingWideningLowerByScalarAndSubtractSaturate(System.Runtime.Intrinsics.Vector128<int> minuend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyDoublingWideningLowerByScalarAndSubtractSaturate(System.Runtime.Intrinsics.Vector128<System.Int64> minuend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyDoublingWideningLowerBySelectedScalarAndAddSaturate(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyDoublingWideningLowerBySelectedScalarAndAddSaturate(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyDoublingWideningLowerBySelectedScalarAndAddSaturate(System.Runtime.Intrinsics.Vector128<System.Int64> addend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyDoublingWideningLowerBySelectedScalarAndAddSaturate(System.Runtime.Intrinsics.Vector128<System.Int64> addend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyDoublingWideningLowerBySelectedScalarAndSubtractSaturate(System.Runtime.Intrinsics.Vector128<int> minuend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyDoublingWideningLowerBySelectedScalarAndSubtractSaturate(System.Runtime.Intrinsics.Vector128<int> minuend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyDoublingWideningLowerBySelectedScalarAndSubtractSaturate(System.Runtime.Intrinsics.Vector128<System.Int64> minuend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyDoublingWideningLowerBySelectedScalarAndSubtractSaturate(System.Runtime.Intrinsics.Vector128<System.Int64> minuend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyDoublingWideningSaturateLower(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyDoublingWideningSaturateLower(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyDoublingWideningSaturateLowerByScalar(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyDoublingWideningSaturateLowerByScalar(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyDoublingWideningSaturateLowerBySelectedScalar(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyDoublingWideningSaturateLowerBySelectedScalar(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyDoublingWideningSaturateLowerBySelectedScalar(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyDoublingWideningSaturateLowerBySelectedScalar(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyDoublingWideningSaturateUpper(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyDoublingWideningSaturateUpper(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyDoublingWideningSaturateUpperByScalar(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyDoublingWideningSaturateUpperByScalar(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyDoublingWideningSaturateUpperBySelectedScalar(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyDoublingWideningSaturateUpperBySelectedScalar(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyDoublingWideningSaturateUpperBySelectedScalar(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyDoublingWideningSaturateUpperBySelectedScalar(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyDoublingWideningUpperAndAddSaturate(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyDoublingWideningUpperAndAddSaturate(System.Runtime.Intrinsics.Vector128<System.Int64> addend, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyDoublingWideningUpperAndSubtractSaturate(System.Runtime.Intrinsics.Vector128<int> minuend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyDoublingWideningUpperAndSubtractSaturate(System.Runtime.Intrinsics.Vector128<System.Int64> minuend, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyDoublingWideningUpperByScalarAndAddSaturate(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyDoublingWideningUpperByScalarAndAddSaturate(System.Runtime.Intrinsics.Vector128<System.Int64> addend, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyDoublingWideningUpperByScalarAndSubtractSaturate(System.Runtime.Intrinsics.Vector128<int> minuend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyDoublingWideningUpperByScalarAndSubtractSaturate(System.Runtime.Intrinsics.Vector128<System.Int64> minuend, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyDoublingWideningUpperBySelectedScalarAndAddSaturate(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyDoublingWideningUpperBySelectedScalarAndAddSaturate(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyDoublingWideningUpperBySelectedScalarAndAddSaturate(System.Runtime.Intrinsics.Vector128<System.Int64> addend, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyDoublingWideningUpperBySelectedScalarAndAddSaturate(System.Runtime.Intrinsics.Vector128<System.Int64> addend, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyDoublingWideningUpperBySelectedScalarAndSubtractSaturate(System.Runtime.Intrinsics.Vector128<int> minuend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyDoublingWideningUpperBySelectedScalarAndSubtractSaturate(System.Runtime.Intrinsics.Vector128<int> minuend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyDoublingWideningUpperBySelectedScalarAndSubtractSaturate(System.Runtime.Intrinsics.Vector128<System.Int64> minuend, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyDoublingWideningUpperBySelectedScalarAndSubtractSaturate(System.Runtime.Intrinsics.Vector128<System.Int64> minuend, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyRoundedDoublingByScalarSaturateHigh(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyRoundedDoublingByScalarSaturateHigh(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> MultiplyRoundedDoublingByScalarSaturateHigh(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyRoundedDoublingByScalarSaturateHigh(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyRoundedDoublingBySelectedScalarSaturateHigh(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyRoundedDoublingBySelectedScalarSaturateHigh(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyRoundedDoublingBySelectedScalarSaturateHigh(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyRoundedDoublingBySelectedScalarSaturateHigh(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> MultiplyRoundedDoublingBySelectedScalarSaturateHigh(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> MultiplyRoundedDoublingBySelectedScalarSaturateHigh(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyRoundedDoublingBySelectedScalarSaturateHigh(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyRoundedDoublingBySelectedScalarSaturateHigh(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyRoundedDoublingSaturateHigh(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyRoundedDoublingSaturateHigh(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> MultiplyRoundedDoublingSaturateHigh(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyRoundedDoublingSaturateHigh(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<double> MultiplyScalar(System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> MultiplyScalar(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> MultiplyScalarBySelectedScalar(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector128<float> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> MultiplyScalarBySelectedScalar(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> MultiplySubtract(System.Runtime.Intrinsics.Vector128<System.Byte> minuend, System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplySubtract(System.Runtime.Intrinsics.Vector128<int> minuend, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> MultiplySubtract(System.Runtime.Intrinsics.Vector128<System.SByte> minuend, System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplySubtract(System.Runtime.Intrinsics.Vector128<System.Int16> minuend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> MultiplySubtract(System.Runtime.Intrinsics.Vector128<System.UInt32> minuend, System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> MultiplySubtract(System.Runtime.Intrinsics.Vector128<System.UInt16> minuend, System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> MultiplySubtract(System.Runtime.Intrinsics.Vector64<System.Byte> minuend, System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> MultiplySubtract(System.Runtime.Intrinsics.Vector64<int> minuend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> MultiplySubtract(System.Runtime.Intrinsics.Vector64<System.SByte> minuend, System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplySubtract(System.Runtime.Intrinsics.Vector64<System.Int16> minuend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> MultiplySubtract(System.Runtime.Intrinsics.Vector64<System.UInt32> minuend, System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> MultiplySubtract(System.Runtime.Intrinsics.Vector64<System.UInt16> minuend, System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplySubtractByScalar(System.Runtime.Intrinsics.Vector128<int> minuend, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplySubtractByScalar(System.Runtime.Intrinsics.Vector128<System.Int16> minuend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> MultiplySubtractByScalar(System.Runtime.Intrinsics.Vector128<System.UInt32> minuend, System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> MultiplySubtractByScalar(System.Runtime.Intrinsics.Vector128<System.UInt16> minuend, System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> MultiplySubtractByScalar(System.Runtime.Intrinsics.Vector64<int> minuend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplySubtractByScalar(System.Runtime.Intrinsics.Vector64<System.Int16> minuend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> MultiplySubtractByScalar(System.Runtime.Intrinsics.Vector64<System.UInt32> minuend, System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> MultiplySubtractByScalar(System.Runtime.Intrinsics.Vector64<System.UInt16> minuend, System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplySubtractBySelectedScalar(System.Runtime.Intrinsics.Vector128<int> minuend, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplySubtractBySelectedScalar(System.Runtime.Intrinsics.Vector128<int> minuend, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplySubtractBySelectedScalar(System.Runtime.Intrinsics.Vector128<System.Int16> minuend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplySubtractBySelectedScalar(System.Runtime.Intrinsics.Vector128<System.Int16> minuend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> MultiplySubtractBySelectedScalar(System.Runtime.Intrinsics.Vector128<System.UInt32> minuend, System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> MultiplySubtractBySelectedScalar(System.Runtime.Intrinsics.Vector128<System.UInt32> minuend, System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> MultiplySubtractBySelectedScalar(System.Runtime.Intrinsics.Vector128<System.UInt16> minuend, System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> MultiplySubtractBySelectedScalar(System.Runtime.Intrinsics.Vector128<System.UInt16> minuend, System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> MultiplySubtractBySelectedScalar(System.Runtime.Intrinsics.Vector64<int> minuend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> MultiplySubtractBySelectedScalar(System.Runtime.Intrinsics.Vector64<int> minuend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplySubtractBySelectedScalar(System.Runtime.Intrinsics.Vector64<System.Int16> minuend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplySubtractBySelectedScalar(System.Runtime.Intrinsics.Vector64<System.Int16> minuend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> MultiplySubtractBySelectedScalar(System.Runtime.Intrinsics.Vector64<System.UInt32> minuend, System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> MultiplySubtractBySelectedScalar(System.Runtime.Intrinsics.Vector64<System.UInt32> minuend, System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> MultiplySubtractBySelectedScalar(System.Runtime.Intrinsics.Vector64<System.UInt16> minuend, System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> MultiplySubtractBySelectedScalar(System.Runtime.Intrinsics.Vector64<System.UInt16> minuend, System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> MultiplyWideningLower(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyWideningLower(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyWideningLower(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyWideningLower(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> MultiplyWideningLower(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> MultiplyWideningLower(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyWideningLowerAndAdd(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyWideningLowerAndAdd(System.Runtime.Intrinsics.Vector128<System.Int64> addend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyWideningLowerAndAdd(System.Runtime.Intrinsics.Vector128<System.Int16> addend, System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> MultiplyWideningLowerAndAdd(System.Runtime.Intrinsics.Vector128<System.UInt32> addend, System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> MultiplyWideningLowerAndAdd(System.Runtime.Intrinsics.Vector128<System.UInt64> addend, System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> MultiplyWideningLowerAndAdd(System.Runtime.Intrinsics.Vector128<System.UInt16> addend, System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyWideningLowerAndSubtract(System.Runtime.Intrinsics.Vector128<int> minuend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyWideningLowerAndSubtract(System.Runtime.Intrinsics.Vector128<System.Int64> minuend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyWideningLowerAndSubtract(System.Runtime.Intrinsics.Vector128<System.Int16> minuend, System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> MultiplyWideningLowerAndSubtract(System.Runtime.Intrinsics.Vector128<System.UInt32> minuend, System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> MultiplyWideningLowerAndSubtract(System.Runtime.Intrinsics.Vector128<System.UInt64> minuend, System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> MultiplyWideningLowerAndSubtract(System.Runtime.Intrinsics.Vector128<System.UInt16> minuend, System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> MultiplyWideningUpper(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyWideningUpper(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyWideningUpper(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyWideningUpper(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> MultiplyWideningUpper(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> MultiplyWideningUpper(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyWideningUpperAndAdd(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyWideningUpperAndAdd(System.Runtime.Intrinsics.Vector128<System.Int64> addend, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyWideningUpperAndAdd(System.Runtime.Intrinsics.Vector128<System.Int16> addend, System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> MultiplyWideningUpperAndAdd(System.Runtime.Intrinsics.Vector128<System.UInt32> addend, System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> MultiplyWideningUpperAndAdd(System.Runtime.Intrinsics.Vector128<System.UInt64> addend, System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> MultiplyWideningUpperAndAdd(System.Runtime.Intrinsics.Vector128<System.UInt16> addend, System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyWideningUpperAndSubtract(System.Runtime.Intrinsics.Vector128<int> minuend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MultiplyWideningUpperAndSubtract(System.Runtime.Intrinsics.Vector128<System.Int64> minuend, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyWideningUpperAndSubtract(System.Runtime.Intrinsics.Vector128<System.Int16> minuend, System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> MultiplyWideningUpperAndSubtract(System.Runtime.Intrinsics.Vector128<System.UInt32> minuend, System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> MultiplyWideningUpperAndSubtract(System.Runtime.Intrinsics.Vector128<System.UInt64> minuend, System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> MultiplyWideningUpperAndSubtract(System.Runtime.Intrinsics.Vector128<System.UInt16> minuend, System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> Negate(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> Negate(System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> Negate(System.Runtime.Intrinsics.Vector128<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> Negate(System.Runtime.Intrinsics.Vector128<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> Negate(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> Negate(System.Runtime.Intrinsics.Vector64<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> Negate(System.Runtime.Intrinsics.Vector64<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> Negate(System.Runtime.Intrinsics.Vector64<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> NegateSaturate(System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> NegateSaturate(System.Runtime.Intrinsics.Vector128<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> NegateSaturate(System.Runtime.Intrinsics.Vector128<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> NegateSaturate(System.Runtime.Intrinsics.Vector64<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> NegateSaturate(System.Runtime.Intrinsics.Vector64<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> NegateSaturate(System.Runtime.Intrinsics.Vector64<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<double> NegateScalar(System.Runtime.Intrinsics.Vector64<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> NegateScalar(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> Not(System.Runtime.Intrinsics.Vector128<System.Byte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> Not(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> Not(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> Not(System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> Not(System.Runtime.Intrinsics.Vector128<System.Int64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> Not(System.Runtime.Intrinsics.Vector128<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> Not(System.Runtime.Intrinsics.Vector128<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> Not(System.Runtime.Intrinsics.Vector128<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> Not(System.Runtime.Intrinsics.Vector128<System.UInt64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> Not(System.Runtime.Intrinsics.Vector128<System.UInt16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> Not(System.Runtime.Intrinsics.Vector64<System.Byte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<double> Not(System.Runtime.Intrinsics.Vector64<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> Not(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> Not(System.Runtime.Intrinsics.Vector64<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> Not(System.Runtime.Intrinsics.Vector64<System.Int64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> Not(System.Runtime.Intrinsics.Vector64<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> Not(System.Runtime.Intrinsics.Vector64<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> Not(System.Runtime.Intrinsics.Vector64<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt64> Not(System.Runtime.Intrinsics.Vector64<System.UInt64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> Not(System.Runtime.Intrinsics.Vector64<System.UInt16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> Or(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> Or(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> Or(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> Or(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> Or(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> Or(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> Or(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> Or(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> Or(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> Or(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> Or(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<double> Or(System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> Or(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> Or(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> Or(System.Runtime.Intrinsics.Vector64<System.Int64> left, System.Runtime.Intrinsics.Vector64<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> Or(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> Or(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> Or(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt64> Or(System.Runtime.Intrinsics.Vector64<System.UInt64> left, System.Runtime.Intrinsics.Vector64<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> Or(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> OrNot(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> OrNot(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> OrNot(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> OrNot(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> OrNot(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> OrNot(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> OrNot(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> OrNot(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> OrNot(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> OrNot(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> OrNot(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<double> OrNot(System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> OrNot(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> OrNot(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> OrNot(System.Runtime.Intrinsics.Vector64<System.Int64> left, System.Runtime.Intrinsics.Vector64<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> OrNot(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> OrNot(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> OrNot(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt64> OrNot(System.Runtime.Intrinsics.Vector64<System.UInt64> left, System.Runtime.Intrinsics.Vector64<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> OrNot(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> PolynomialMultiply(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> PolynomialMultiply(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> PolynomialMultiply(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> PolynomialMultiply(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> PolynomialMultiplyWideningLower(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> PolynomialMultiplyWideningLower(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> PolynomialMultiplyWideningUpper(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> PolynomialMultiplyWideningUpper(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> PopCount(System.Runtime.Intrinsics.Vector128<System.Byte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> PopCount(System.Runtime.Intrinsics.Vector128<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> PopCount(System.Runtime.Intrinsics.Vector64<System.Byte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> PopCount(System.Runtime.Intrinsics.Vector64<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> ReciprocalEstimate(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ReciprocalEstimate(System.Runtime.Intrinsics.Vector128<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> ReciprocalEstimate(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ReciprocalEstimate(System.Runtime.Intrinsics.Vector64<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> ReciprocalSquareRootEstimate(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ReciprocalSquareRootEstimate(System.Runtime.Intrinsics.Vector128<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> ReciprocalSquareRootEstimate(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ReciprocalSquareRootEstimate(System.Runtime.Intrinsics.Vector64<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> ReciprocalSquareRootStep(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> ReciprocalSquareRootStep(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> ReciprocalStep(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> ReciprocalStep(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ReverseElement16(System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ReverseElement16(System.Runtime.Intrinsics.Vector128<System.Int64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ReverseElement16(System.Runtime.Intrinsics.Vector128<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ReverseElement16(System.Runtime.Intrinsics.Vector128<System.UInt64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ReverseElement16(System.Runtime.Intrinsics.Vector64<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> ReverseElement16(System.Runtime.Intrinsics.Vector64<System.Int64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ReverseElement16(System.Runtime.Intrinsics.Vector64<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt64> ReverseElement16(System.Runtime.Intrinsics.Vector64<System.UInt64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ReverseElement32(System.Runtime.Intrinsics.Vector128<System.Int64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ReverseElement32(System.Runtime.Intrinsics.Vector128<System.UInt64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> ReverseElement32(System.Runtime.Intrinsics.Vector64<System.Int64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt64> ReverseElement32(System.Runtime.Intrinsics.Vector64<System.UInt64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ReverseElement8(System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ReverseElement8(System.Runtime.Intrinsics.Vector128<System.Int64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ReverseElement8(System.Runtime.Intrinsics.Vector128<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ReverseElement8(System.Runtime.Intrinsics.Vector128<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ReverseElement8(System.Runtime.Intrinsics.Vector128<System.UInt64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ReverseElement8(System.Runtime.Intrinsics.Vector128<System.UInt16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ReverseElement8(System.Runtime.Intrinsics.Vector64<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> ReverseElement8(System.Runtime.Intrinsics.Vector64<System.Int64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> ReverseElement8(System.Runtime.Intrinsics.Vector64<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ReverseElement8(System.Runtime.Intrinsics.Vector64<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt64> ReverseElement8(System.Runtime.Intrinsics.Vector64<System.UInt64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> ReverseElement8(System.Runtime.Intrinsics.Vector64<System.UInt16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> RoundAwayFromZero(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> RoundAwayFromZero(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<double> RoundAwayFromZeroScalar(System.Runtime.Intrinsics.Vector64<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> RoundAwayFromZeroScalar(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> RoundToNearest(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> RoundToNearest(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<double> RoundToNearestScalar(System.Runtime.Intrinsics.Vector64<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> RoundToNearestScalar(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> RoundToNegativeInfinity(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> RoundToNegativeInfinity(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<double> RoundToNegativeInfinityScalar(System.Runtime.Intrinsics.Vector64<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> RoundToNegativeInfinityScalar(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> RoundToPositiveInfinity(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> RoundToPositiveInfinity(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<double> RoundToPositiveInfinityScalar(System.Runtime.Intrinsics.Vector64<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> RoundToPositiveInfinityScalar(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> RoundToZero(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> RoundToZero(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<double> RoundToZeroScalar(System.Runtime.Intrinsics.Vector64<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> RoundToZeroScalar(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftArithmetic(System.Runtime.Intrinsics.Vector128<int> value, System.Runtime.Intrinsics.Vector128<int> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ShiftArithmetic(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Runtime.Intrinsics.Vector128<System.Int64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ShiftArithmetic(System.Runtime.Intrinsics.Vector128<System.SByte> value, System.Runtime.Intrinsics.Vector128<System.SByte> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftArithmetic(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Runtime.Intrinsics.Vector128<System.Int16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ShiftArithmetic(System.Runtime.Intrinsics.Vector64<int> value, System.Runtime.Intrinsics.Vector64<int> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftArithmetic(System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Runtime.Intrinsics.Vector64<System.SByte> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftArithmetic(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Runtime.Intrinsics.Vector64<System.Int16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftArithmeticRounded(System.Runtime.Intrinsics.Vector128<int> value, System.Runtime.Intrinsics.Vector128<int> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ShiftArithmeticRounded(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Runtime.Intrinsics.Vector128<System.Int64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ShiftArithmeticRounded(System.Runtime.Intrinsics.Vector128<System.SByte> value, System.Runtime.Intrinsics.Vector128<System.SByte> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftArithmeticRounded(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Runtime.Intrinsics.Vector128<System.Int16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ShiftArithmeticRounded(System.Runtime.Intrinsics.Vector64<int> value, System.Runtime.Intrinsics.Vector64<int> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftArithmeticRounded(System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Runtime.Intrinsics.Vector64<System.SByte> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftArithmeticRounded(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Runtime.Intrinsics.Vector64<System.Int16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftArithmeticRoundedSaturate(System.Runtime.Intrinsics.Vector128<int> value, System.Runtime.Intrinsics.Vector128<int> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ShiftArithmeticRoundedSaturate(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Runtime.Intrinsics.Vector128<System.Int64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ShiftArithmeticRoundedSaturate(System.Runtime.Intrinsics.Vector128<System.SByte> value, System.Runtime.Intrinsics.Vector128<System.SByte> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftArithmeticRoundedSaturate(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Runtime.Intrinsics.Vector128<System.Int16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ShiftArithmeticRoundedSaturate(System.Runtime.Intrinsics.Vector64<int> value, System.Runtime.Intrinsics.Vector64<int> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftArithmeticRoundedSaturate(System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Runtime.Intrinsics.Vector64<System.SByte> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftArithmeticRoundedSaturate(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Runtime.Intrinsics.Vector64<System.Int16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> ShiftArithmeticRoundedSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int64> value, System.Runtime.Intrinsics.Vector64<System.Int64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> ShiftArithmeticRoundedScalar(System.Runtime.Intrinsics.Vector64<System.Int64> value, System.Runtime.Intrinsics.Vector64<System.Int64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftArithmeticSaturate(System.Runtime.Intrinsics.Vector128<int> value, System.Runtime.Intrinsics.Vector128<int> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ShiftArithmeticSaturate(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Runtime.Intrinsics.Vector128<System.Int64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ShiftArithmeticSaturate(System.Runtime.Intrinsics.Vector128<System.SByte> value, System.Runtime.Intrinsics.Vector128<System.SByte> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftArithmeticSaturate(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Runtime.Intrinsics.Vector128<System.Int16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ShiftArithmeticSaturate(System.Runtime.Intrinsics.Vector64<int> value, System.Runtime.Intrinsics.Vector64<int> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftArithmeticSaturate(System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Runtime.Intrinsics.Vector64<System.SByte> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftArithmeticSaturate(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Runtime.Intrinsics.Vector64<System.Int16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> ShiftArithmeticSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int64> value, System.Runtime.Intrinsics.Vector64<System.Int64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> ShiftArithmeticScalar(System.Runtime.Intrinsics.Vector64<System.Int64> value, System.Runtime.Intrinsics.Vector64<System.Int64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> ShiftLeftAndInsert(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftLeftAndInsert(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ShiftLeftAndInsert(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ShiftLeftAndInsert(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftLeftAndInsert(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ShiftLeftAndInsert(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ShiftLeftAndInsert(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ShiftLeftAndInsert(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> ShiftLeftAndInsert(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ShiftLeftAndInsert(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftLeftAndInsert(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftLeftAndInsert(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ShiftLeftAndInsert(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> ShiftLeftAndInsert(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> ShiftLeftAndInsertScalar(System.Runtime.Intrinsics.Vector64<System.Int64> left, System.Runtime.Intrinsics.Vector64<System.Int64> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt64> ShiftLeftAndInsertScalar(System.Runtime.Intrinsics.Vector64<System.UInt64> left, System.Runtime.Intrinsics.Vector64<System.UInt64> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> ShiftLeftLogical(System.Runtime.Intrinsics.Vector128<System.Byte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ShiftLeftLogical(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ShiftLeftLogical(System.Runtime.Intrinsics.Vector128<System.SByte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftLeftLogical(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ShiftLeftLogical(System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ShiftLeftLogical(System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ShiftLeftLogical(System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> ShiftLeftLogical(System.Runtime.Intrinsics.Vector64<System.Byte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ShiftLeftLogical(System.Runtime.Intrinsics.Vector64<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftLeftLogical(System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftLeftLogical(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ShiftLeftLogical(System.Runtime.Intrinsics.Vector64<System.UInt32> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> ShiftLeftLogical(System.Runtime.Intrinsics.Vector64<System.UInt16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> ShiftLeftLogicalSaturate(System.Runtime.Intrinsics.Vector128<System.Byte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftLeftLogicalSaturate(System.Runtime.Intrinsics.Vector128<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ShiftLeftLogicalSaturate(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ShiftLeftLogicalSaturate(System.Runtime.Intrinsics.Vector128<System.SByte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftLeftLogicalSaturate(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ShiftLeftLogicalSaturate(System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ShiftLeftLogicalSaturate(System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ShiftLeftLogicalSaturate(System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> ShiftLeftLogicalSaturate(System.Runtime.Intrinsics.Vector64<System.Byte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ShiftLeftLogicalSaturate(System.Runtime.Intrinsics.Vector64<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftLeftLogicalSaturate(System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftLeftLogicalSaturate(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ShiftLeftLogicalSaturate(System.Runtime.Intrinsics.Vector64<System.UInt32> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> ShiftLeftLogicalSaturate(System.Runtime.Intrinsics.Vector64<System.UInt16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> ShiftLeftLogicalSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt64> ShiftLeftLogicalSaturateScalar(System.Runtime.Intrinsics.Vector64<System.UInt64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ShiftLeftLogicalSaturateUnsigned(System.Runtime.Intrinsics.Vector128<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ShiftLeftLogicalSaturateUnsigned(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> ShiftLeftLogicalSaturateUnsigned(System.Runtime.Intrinsics.Vector128<System.SByte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ShiftLeftLogicalSaturateUnsigned(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ShiftLeftLogicalSaturateUnsigned(System.Runtime.Intrinsics.Vector64<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> ShiftLeftLogicalSaturateUnsigned(System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> ShiftLeftLogicalSaturateUnsigned(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt64> ShiftLeftLogicalSaturateUnsignedScalar(System.Runtime.Intrinsics.Vector64<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> ShiftLeftLogicalScalar(System.Runtime.Intrinsics.Vector64<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt64> ShiftLeftLogicalScalar(System.Runtime.Intrinsics.Vector64<System.UInt64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ShiftLeftLogicalWideningLower(System.Runtime.Intrinsics.Vector64<System.Byte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ShiftLeftLogicalWideningLower(System.Runtime.Intrinsics.Vector64<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftLeftLogicalWideningLower(System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftLeftLogicalWideningLower(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ShiftLeftLogicalWideningLower(System.Runtime.Intrinsics.Vector64<System.UInt32> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ShiftLeftLogicalWideningLower(System.Runtime.Intrinsics.Vector64<System.UInt16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ShiftLeftLogicalWideningUpper(System.Runtime.Intrinsics.Vector128<System.Byte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ShiftLeftLogicalWideningUpper(System.Runtime.Intrinsics.Vector128<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftLeftLogicalWideningUpper(System.Runtime.Intrinsics.Vector128<System.SByte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftLeftLogicalWideningUpper(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ShiftLeftLogicalWideningUpper(System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ShiftLeftLogicalWideningUpper(System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> ShiftLogical(System.Runtime.Intrinsics.Vector128<System.Byte> value, System.Runtime.Intrinsics.Vector128<System.SByte> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftLogical(System.Runtime.Intrinsics.Vector128<int> value, System.Runtime.Intrinsics.Vector128<int> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ShiftLogical(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Runtime.Intrinsics.Vector128<System.Int64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ShiftLogical(System.Runtime.Intrinsics.Vector128<System.SByte> value, System.Runtime.Intrinsics.Vector128<System.SByte> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftLogical(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Runtime.Intrinsics.Vector128<System.Int16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ShiftLogical(System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Runtime.Intrinsics.Vector128<int> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ShiftLogical(System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Runtime.Intrinsics.Vector128<System.Int64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ShiftLogical(System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Runtime.Intrinsics.Vector128<System.Int16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> ShiftLogical(System.Runtime.Intrinsics.Vector64<System.Byte> value, System.Runtime.Intrinsics.Vector64<System.SByte> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ShiftLogical(System.Runtime.Intrinsics.Vector64<int> value, System.Runtime.Intrinsics.Vector64<int> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftLogical(System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Runtime.Intrinsics.Vector64<System.SByte> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftLogical(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Runtime.Intrinsics.Vector64<System.Int16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ShiftLogical(System.Runtime.Intrinsics.Vector64<System.UInt32> value, System.Runtime.Intrinsics.Vector64<int> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> ShiftLogical(System.Runtime.Intrinsics.Vector64<System.UInt16> value, System.Runtime.Intrinsics.Vector64<System.Int16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> ShiftLogicalRounded(System.Runtime.Intrinsics.Vector128<System.Byte> value, System.Runtime.Intrinsics.Vector128<System.SByte> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftLogicalRounded(System.Runtime.Intrinsics.Vector128<int> value, System.Runtime.Intrinsics.Vector128<int> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ShiftLogicalRounded(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Runtime.Intrinsics.Vector128<System.Int64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ShiftLogicalRounded(System.Runtime.Intrinsics.Vector128<System.SByte> value, System.Runtime.Intrinsics.Vector128<System.SByte> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftLogicalRounded(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Runtime.Intrinsics.Vector128<System.Int16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ShiftLogicalRounded(System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Runtime.Intrinsics.Vector128<int> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ShiftLogicalRounded(System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Runtime.Intrinsics.Vector128<System.Int64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ShiftLogicalRounded(System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Runtime.Intrinsics.Vector128<System.Int16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> ShiftLogicalRounded(System.Runtime.Intrinsics.Vector64<System.Byte> value, System.Runtime.Intrinsics.Vector64<System.SByte> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ShiftLogicalRounded(System.Runtime.Intrinsics.Vector64<int> value, System.Runtime.Intrinsics.Vector64<int> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftLogicalRounded(System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Runtime.Intrinsics.Vector64<System.SByte> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftLogicalRounded(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Runtime.Intrinsics.Vector64<System.Int16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ShiftLogicalRounded(System.Runtime.Intrinsics.Vector64<System.UInt32> value, System.Runtime.Intrinsics.Vector64<int> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> ShiftLogicalRounded(System.Runtime.Intrinsics.Vector64<System.UInt16> value, System.Runtime.Intrinsics.Vector64<System.Int16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> ShiftLogicalRoundedSaturate(System.Runtime.Intrinsics.Vector128<System.Byte> value, System.Runtime.Intrinsics.Vector128<System.SByte> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftLogicalRoundedSaturate(System.Runtime.Intrinsics.Vector128<int> value, System.Runtime.Intrinsics.Vector128<int> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ShiftLogicalRoundedSaturate(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Runtime.Intrinsics.Vector128<System.Int64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ShiftLogicalRoundedSaturate(System.Runtime.Intrinsics.Vector128<System.SByte> value, System.Runtime.Intrinsics.Vector128<System.SByte> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftLogicalRoundedSaturate(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Runtime.Intrinsics.Vector128<System.Int16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ShiftLogicalRoundedSaturate(System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Runtime.Intrinsics.Vector128<int> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ShiftLogicalRoundedSaturate(System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Runtime.Intrinsics.Vector128<System.Int64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ShiftLogicalRoundedSaturate(System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Runtime.Intrinsics.Vector128<System.Int16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> ShiftLogicalRoundedSaturate(System.Runtime.Intrinsics.Vector64<System.Byte> value, System.Runtime.Intrinsics.Vector64<System.SByte> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ShiftLogicalRoundedSaturate(System.Runtime.Intrinsics.Vector64<int> value, System.Runtime.Intrinsics.Vector64<int> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftLogicalRoundedSaturate(System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Runtime.Intrinsics.Vector64<System.SByte> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftLogicalRoundedSaturate(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Runtime.Intrinsics.Vector64<System.Int16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ShiftLogicalRoundedSaturate(System.Runtime.Intrinsics.Vector64<System.UInt32> value, System.Runtime.Intrinsics.Vector64<int> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> ShiftLogicalRoundedSaturate(System.Runtime.Intrinsics.Vector64<System.UInt16> value, System.Runtime.Intrinsics.Vector64<System.Int16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> ShiftLogicalRoundedSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int64> value, System.Runtime.Intrinsics.Vector64<System.Int64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt64> ShiftLogicalRoundedSaturateScalar(System.Runtime.Intrinsics.Vector64<System.UInt64> value, System.Runtime.Intrinsics.Vector64<System.Int64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> ShiftLogicalRoundedScalar(System.Runtime.Intrinsics.Vector64<System.Int64> value, System.Runtime.Intrinsics.Vector64<System.Int64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt64> ShiftLogicalRoundedScalar(System.Runtime.Intrinsics.Vector64<System.UInt64> value, System.Runtime.Intrinsics.Vector64<System.Int64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> ShiftLogicalSaturate(System.Runtime.Intrinsics.Vector128<System.Byte> value, System.Runtime.Intrinsics.Vector128<System.SByte> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftLogicalSaturate(System.Runtime.Intrinsics.Vector128<int> value, System.Runtime.Intrinsics.Vector128<int> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ShiftLogicalSaturate(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Runtime.Intrinsics.Vector128<System.Int64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ShiftLogicalSaturate(System.Runtime.Intrinsics.Vector128<System.SByte> value, System.Runtime.Intrinsics.Vector128<System.SByte> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftLogicalSaturate(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Runtime.Intrinsics.Vector128<System.Int16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ShiftLogicalSaturate(System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Runtime.Intrinsics.Vector128<int> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ShiftLogicalSaturate(System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Runtime.Intrinsics.Vector128<System.Int64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ShiftLogicalSaturate(System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Runtime.Intrinsics.Vector128<System.Int16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> ShiftLogicalSaturate(System.Runtime.Intrinsics.Vector64<System.Byte> value, System.Runtime.Intrinsics.Vector64<System.SByte> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ShiftLogicalSaturate(System.Runtime.Intrinsics.Vector64<int> value, System.Runtime.Intrinsics.Vector64<int> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftLogicalSaturate(System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Runtime.Intrinsics.Vector64<System.SByte> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftLogicalSaturate(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Runtime.Intrinsics.Vector64<System.Int16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ShiftLogicalSaturate(System.Runtime.Intrinsics.Vector64<System.UInt32> value, System.Runtime.Intrinsics.Vector64<int> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> ShiftLogicalSaturate(System.Runtime.Intrinsics.Vector64<System.UInt16> value, System.Runtime.Intrinsics.Vector64<System.Int16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> ShiftLogicalSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int64> value, System.Runtime.Intrinsics.Vector64<System.Int64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt64> ShiftLogicalSaturateScalar(System.Runtime.Intrinsics.Vector64<System.UInt64> value, System.Runtime.Intrinsics.Vector64<System.Int64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> ShiftLogicalScalar(System.Runtime.Intrinsics.Vector64<System.Int64> value, System.Runtime.Intrinsics.Vector64<System.Int64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt64> ShiftLogicalScalar(System.Runtime.Intrinsics.Vector64<System.UInt64> value, System.Runtime.Intrinsics.Vector64<System.Int64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> ShiftRightAndInsert(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftRightAndInsert(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ShiftRightAndInsert(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ShiftRightAndInsert(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftRightAndInsert(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ShiftRightAndInsert(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ShiftRightAndInsert(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ShiftRightAndInsert(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> ShiftRightAndInsert(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ShiftRightAndInsert(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftRightAndInsert(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftRightAndInsert(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ShiftRightAndInsert(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> ShiftRightAndInsert(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> ShiftRightAndInsertScalar(System.Runtime.Intrinsics.Vector64<System.Int64> left, System.Runtime.Intrinsics.Vector64<System.Int64> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt64> ShiftRightAndInsertScalar(System.Runtime.Intrinsics.Vector64<System.UInt64> left, System.Runtime.Intrinsics.Vector64<System.UInt64> right, System.Byte shift) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftRightArithmetic(System.Runtime.Intrinsics.Vector128<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ShiftRightArithmetic(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ShiftRightArithmetic(System.Runtime.Intrinsics.Vector128<System.SByte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftRightArithmetic(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ShiftRightArithmetic(System.Runtime.Intrinsics.Vector64<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftRightArithmetic(System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftRightArithmetic(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftRightArithmeticAdd(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector128<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ShiftRightArithmeticAdd(System.Runtime.Intrinsics.Vector128<System.Int64> addend, System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ShiftRightArithmeticAdd(System.Runtime.Intrinsics.Vector128<System.SByte> addend, System.Runtime.Intrinsics.Vector128<System.SByte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftRightArithmeticAdd(System.Runtime.Intrinsics.Vector128<System.Int16> addend, System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ShiftRightArithmeticAdd(System.Runtime.Intrinsics.Vector64<int> addend, System.Runtime.Intrinsics.Vector64<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftRightArithmeticAdd(System.Runtime.Intrinsics.Vector64<System.SByte> addend, System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftRightArithmeticAdd(System.Runtime.Intrinsics.Vector64<System.Int16> addend, System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> ShiftRightArithmeticAddScalar(System.Runtime.Intrinsics.Vector64<System.Int64> addend, System.Runtime.Intrinsics.Vector64<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftRightArithmeticNarrowingSaturateLower(System.Runtime.Intrinsics.Vector128<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ShiftRightArithmeticNarrowingSaturateLower(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftRightArithmeticNarrowingSaturateLower(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> ShiftRightArithmeticNarrowingSaturateUnsignedLower(System.Runtime.Intrinsics.Vector128<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ShiftRightArithmeticNarrowingSaturateUnsignedLower(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> ShiftRightArithmeticNarrowingSaturateUnsignedLower(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> ShiftRightArithmeticNarrowingSaturateUnsignedUpper(System.Runtime.Intrinsics.Vector64<System.Byte> lower, System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ShiftRightArithmeticNarrowingSaturateUnsignedUpper(System.Runtime.Intrinsics.Vector64<System.UInt32> lower, System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ShiftRightArithmeticNarrowingSaturateUnsignedUpper(System.Runtime.Intrinsics.Vector64<System.UInt16> lower, System.Runtime.Intrinsics.Vector128<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftRightArithmeticNarrowingSaturateUpper(System.Runtime.Intrinsics.Vector64<int> lower, System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ShiftRightArithmeticNarrowingSaturateUpper(System.Runtime.Intrinsics.Vector64<System.SByte> lower, System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftRightArithmeticNarrowingSaturateUpper(System.Runtime.Intrinsics.Vector64<System.Int16> lower, System.Runtime.Intrinsics.Vector128<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftRightArithmeticRounded(System.Runtime.Intrinsics.Vector128<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ShiftRightArithmeticRounded(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ShiftRightArithmeticRounded(System.Runtime.Intrinsics.Vector128<System.SByte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftRightArithmeticRounded(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ShiftRightArithmeticRounded(System.Runtime.Intrinsics.Vector64<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftRightArithmeticRounded(System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftRightArithmeticRounded(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftRightArithmeticRoundedAdd(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector128<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ShiftRightArithmeticRoundedAdd(System.Runtime.Intrinsics.Vector128<System.Int64> addend, System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ShiftRightArithmeticRoundedAdd(System.Runtime.Intrinsics.Vector128<System.SByte> addend, System.Runtime.Intrinsics.Vector128<System.SByte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftRightArithmeticRoundedAdd(System.Runtime.Intrinsics.Vector128<System.Int16> addend, System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ShiftRightArithmeticRoundedAdd(System.Runtime.Intrinsics.Vector64<int> addend, System.Runtime.Intrinsics.Vector64<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftRightArithmeticRoundedAdd(System.Runtime.Intrinsics.Vector64<System.SByte> addend, System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftRightArithmeticRoundedAdd(System.Runtime.Intrinsics.Vector64<System.Int16> addend, System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> ShiftRightArithmeticRoundedAddScalar(System.Runtime.Intrinsics.Vector64<System.Int64> addend, System.Runtime.Intrinsics.Vector64<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftRightArithmeticRoundedNarrowingSaturateLower(System.Runtime.Intrinsics.Vector128<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ShiftRightArithmeticRoundedNarrowingSaturateLower(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftRightArithmeticRoundedNarrowingSaturateLower(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> ShiftRightArithmeticRoundedNarrowingSaturateUnsignedLower(System.Runtime.Intrinsics.Vector128<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ShiftRightArithmeticRoundedNarrowingSaturateUnsignedLower(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> ShiftRightArithmeticRoundedNarrowingSaturateUnsignedLower(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> ShiftRightArithmeticRoundedNarrowingSaturateUnsignedUpper(System.Runtime.Intrinsics.Vector64<System.Byte> lower, System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ShiftRightArithmeticRoundedNarrowingSaturateUnsignedUpper(System.Runtime.Intrinsics.Vector64<System.UInt32> lower, System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ShiftRightArithmeticRoundedNarrowingSaturateUnsignedUpper(System.Runtime.Intrinsics.Vector64<System.UInt16> lower, System.Runtime.Intrinsics.Vector128<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftRightArithmeticRoundedNarrowingSaturateUpper(System.Runtime.Intrinsics.Vector64<int> lower, System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ShiftRightArithmeticRoundedNarrowingSaturateUpper(System.Runtime.Intrinsics.Vector64<System.SByte> lower, System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftRightArithmeticRoundedNarrowingSaturateUpper(System.Runtime.Intrinsics.Vector64<System.Int16> lower, System.Runtime.Intrinsics.Vector128<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> ShiftRightArithmeticRoundedScalar(System.Runtime.Intrinsics.Vector64<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> ShiftRightArithmeticScalar(System.Runtime.Intrinsics.Vector64<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> ShiftRightLogical(System.Runtime.Intrinsics.Vector128<System.Byte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftRightLogical(System.Runtime.Intrinsics.Vector128<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ShiftRightLogical(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ShiftRightLogical(System.Runtime.Intrinsics.Vector128<System.SByte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftRightLogical(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ShiftRightLogical(System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ShiftRightLogical(System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ShiftRightLogical(System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> ShiftRightLogical(System.Runtime.Intrinsics.Vector64<System.Byte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ShiftRightLogical(System.Runtime.Intrinsics.Vector64<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftRightLogical(System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftRightLogical(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ShiftRightLogical(System.Runtime.Intrinsics.Vector64<System.UInt32> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> ShiftRightLogical(System.Runtime.Intrinsics.Vector64<System.UInt16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> ShiftRightLogicalAdd(System.Runtime.Intrinsics.Vector128<System.Byte> addend, System.Runtime.Intrinsics.Vector128<System.Byte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftRightLogicalAdd(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector128<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ShiftRightLogicalAdd(System.Runtime.Intrinsics.Vector128<System.Int64> addend, System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ShiftRightLogicalAdd(System.Runtime.Intrinsics.Vector128<System.SByte> addend, System.Runtime.Intrinsics.Vector128<System.SByte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftRightLogicalAdd(System.Runtime.Intrinsics.Vector128<System.Int16> addend, System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ShiftRightLogicalAdd(System.Runtime.Intrinsics.Vector128<System.UInt32> addend, System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ShiftRightLogicalAdd(System.Runtime.Intrinsics.Vector128<System.UInt64> addend, System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ShiftRightLogicalAdd(System.Runtime.Intrinsics.Vector128<System.UInt16> addend, System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> ShiftRightLogicalAdd(System.Runtime.Intrinsics.Vector64<System.Byte> addend, System.Runtime.Intrinsics.Vector64<System.Byte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ShiftRightLogicalAdd(System.Runtime.Intrinsics.Vector64<int> addend, System.Runtime.Intrinsics.Vector64<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftRightLogicalAdd(System.Runtime.Intrinsics.Vector64<System.SByte> addend, System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftRightLogicalAdd(System.Runtime.Intrinsics.Vector64<System.Int16> addend, System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ShiftRightLogicalAdd(System.Runtime.Intrinsics.Vector64<System.UInt32> addend, System.Runtime.Intrinsics.Vector64<System.UInt32> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> ShiftRightLogicalAdd(System.Runtime.Intrinsics.Vector64<System.UInt16> addend, System.Runtime.Intrinsics.Vector64<System.UInt16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> ShiftRightLogicalAddScalar(System.Runtime.Intrinsics.Vector64<System.Int64> addend, System.Runtime.Intrinsics.Vector64<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt64> ShiftRightLogicalAddScalar(System.Runtime.Intrinsics.Vector64<System.UInt64> addend, System.Runtime.Intrinsics.Vector64<System.UInt64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftRightLogicalNarrowingLower(System.Runtime.Intrinsics.Vector128<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ShiftRightLogicalNarrowingLower(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftRightLogicalNarrowingLower(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> ShiftRightLogicalNarrowingLower(System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ShiftRightLogicalNarrowingLower(System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> ShiftRightLogicalNarrowingLower(System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftRightLogicalNarrowingSaturateLower(System.Runtime.Intrinsics.Vector128<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ShiftRightLogicalNarrowingSaturateLower(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftRightLogicalNarrowingSaturateLower(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> ShiftRightLogicalNarrowingSaturateLower(System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ShiftRightLogicalNarrowingSaturateLower(System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> ShiftRightLogicalNarrowingSaturateLower(System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> ShiftRightLogicalNarrowingSaturateUpper(System.Runtime.Intrinsics.Vector64<System.Byte> lower, System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftRightLogicalNarrowingSaturateUpper(System.Runtime.Intrinsics.Vector64<int> lower, System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ShiftRightLogicalNarrowingSaturateUpper(System.Runtime.Intrinsics.Vector64<System.SByte> lower, System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftRightLogicalNarrowingSaturateUpper(System.Runtime.Intrinsics.Vector64<System.Int16> lower, System.Runtime.Intrinsics.Vector128<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ShiftRightLogicalNarrowingSaturateUpper(System.Runtime.Intrinsics.Vector64<System.UInt32> lower, System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ShiftRightLogicalNarrowingSaturateUpper(System.Runtime.Intrinsics.Vector64<System.UInt16> lower, System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> ShiftRightLogicalNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.Byte> lower, System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftRightLogicalNarrowingUpper(System.Runtime.Intrinsics.Vector64<int> lower, System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ShiftRightLogicalNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.SByte> lower, System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftRightLogicalNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.Int16> lower, System.Runtime.Intrinsics.Vector128<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ShiftRightLogicalNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.UInt32> lower, System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ShiftRightLogicalNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.UInt16> lower, System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> ShiftRightLogicalRounded(System.Runtime.Intrinsics.Vector128<System.Byte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftRightLogicalRounded(System.Runtime.Intrinsics.Vector128<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ShiftRightLogicalRounded(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ShiftRightLogicalRounded(System.Runtime.Intrinsics.Vector128<System.SByte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftRightLogicalRounded(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ShiftRightLogicalRounded(System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ShiftRightLogicalRounded(System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ShiftRightLogicalRounded(System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> ShiftRightLogicalRounded(System.Runtime.Intrinsics.Vector64<System.Byte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ShiftRightLogicalRounded(System.Runtime.Intrinsics.Vector64<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftRightLogicalRounded(System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftRightLogicalRounded(System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ShiftRightLogicalRounded(System.Runtime.Intrinsics.Vector64<System.UInt32> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> ShiftRightLogicalRounded(System.Runtime.Intrinsics.Vector64<System.UInt16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> ShiftRightLogicalRoundedAdd(System.Runtime.Intrinsics.Vector128<System.Byte> addend, System.Runtime.Intrinsics.Vector128<System.Byte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftRightLogicalRoundedAdd(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector128<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ShiftRightLogicalRoundedAdd(System.Runtime.Intrinsics.Vector128<System.Int64> addend, System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ShiftRightLogicalRoundedAdd(System.Runtime.Intrinsics.Vector128<System.SByte> addend, System.Runtime.Intrinsics.Vector128<System.SByte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftRightLogicalRoundedAdd(System.Runtime.Intrinsics.Vector128<System.Int16> addend, System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ShiftRightLogicalRoundedAdd(System.Runtime.Intrinsics.Vector128<System.UInt32> addend, System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ShiftRightLogicalRoundedAdd(System.Runtime.Intrinsics.Vector128<System.UInt64> addend, System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ShiftRightLogicalRoundedAdd(System.Runtime.Intrinsics.Vector128<System.UInt16> addend, System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> ShiftRightLogicalRoundedAdd(System.Runtime.Intrinsics.Vector64<System.Byte> addend, System.Runtime.Intrinsics.Vector64<System.Byte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ShiftRightLogicalRoundedAdd(System.Runtime.Intrinsics.Vector64<int> addend, System.Runtime.Intrinsics.Vector64<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftRightLogicalRoundedAdd(System.Runtime.Intrinsics.Vector64<System.SByte> addend, System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftRightLogicalRoundedAdd(System.Runtime.Intrinsics.Vector64<System.Int16> addend, System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ShiftRightLogicalRoundedAdd(System.Runtime.Intrinsics.Vector64<System.UInt32> addend, System.Runtime.Intrinsics.Vector64<System.UInt32> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> ShiftRightLogicalRoundedAdd(System.Runtime.Intrinsics.Vector64<System.UInt16> addend, System.Runtime.Intrinsics.Vector64<System.UInt16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> ShiftRightLogicalRoundedAddScalar(System.Runtime.Intrinsics.Vector64<System.Int64> addend, System.Runtime.Intrinsics.Vector64<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt64> ShiftRightLogicalRoundedAddScalar(System.Runtime.Intrinsics.Vector64<System.UInt64> addend, System.Runtime.Intrinsics.Vector64<System.UInt64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftRightLogicalRoundedNarrowingLower(System.Runtime.Intrinsics.Vector128<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ShiftRightLogicalRoundedNarrowingLower(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftRightLogicalRoundedNarrowingLower(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> ShiftRightLogicalRoundedNarrowingLower(System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ShiftRightLogicalRoundedNarrowingLower(System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> ShiftRightLogicalRoundedNarrowingLower(System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> ShiftRightLogicalRoundedNarrowingSaturateLower(System.Runtime.Intrinsics.Vector128<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> ShiftRightLogicalRoundedNarrowingSaturateLower(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> ShiftRightLogicalRoundedNarrowingSaturateLower(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> ShiftRightLogicalRoundedNarrowingSaturateLower(System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> ShiftRightLogicalRoundedNarrowingSaturateLower(System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> ShiftRightLogicalRoundedNarrowingSaturateLower(System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> ShiftRightLogicalRoundedNarrowingSaturateUpper(System.Runtime.Intrinsics.Vector64<System.Byte> lower, System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftRightLogicalRoundedNarrowingSaturateUpper(System.Runtime.Intrinsics.Vector64<int> lower, System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ShiftRightLogicalRoundedNarrowingSaturateUpper(System.Runtime.Intrinsics.Vector64<System.SByte> lower, System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftRightLogicalRoundedNarrowingSaturateUpper(System.Runtime.Intrinsics.Vector64<System.Int16> lower, System.Runtime.Intrinsics.Vector128<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ShiftRightLogicalRoundedNarrowingSaturateUpper(System.Runtime.Intrinsics.Vector64<System.UInt32> lower, System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ShiftRightLogicalRoundedNarrowingSaturateUpper(System.Runtime.Intrinsics.Vector64<System.UInt16> lower, System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> ShiftRightLogicalRoundedNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.Byte> lower, System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftRightLogicalRoundedNarrowingUpper(System.Runtime.Intrinsics.Vector64<int> lower, System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ShiftRightLogicalRoundedNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.SByte> lower, System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftRightLogicalRoundedNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.Int16> lower, System.Runtime.Intrinsics.Vector128<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ShiftRightLogicalRoundedNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.UInt32> lower, System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ShiftRightLogicalRoundedNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.UInt16> lower, System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> ShiftRightLogicalRoundedScalar(System.Runtime.Intrinsics.Vector64<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt64> ShiftRightLogicalRoundedScalar(System.Runtime.Intrinsics.Vector64<System.UInt64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> ShiftRightLogicalScalar(System.Runtime.Intrinsics.Vector64<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt64> ShiftRightLogicalScalar(System.Runtime.Intrinsics.Vector64<System.UInt64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> SignExtendWideningLower(System.Runtime.Intrinsics.Vector64<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> SignExtendWideningLower(System.Runtime.Intrinsics.Vector64<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> SignExtendWideningLower(System.Runtime.Intrinsics.Vector64<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> SignExtendWideningUpper(System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> SignExtendWideningUpper(System.Runtime.Intrinsics.Vector128<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> SignExtendWideningUpper(System.Runtime.Intrinsics.Vector128<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<double> SqrtScalar(System.Runtime.Intrinsics.Vector64<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> SqrtScalar(System.Runtime.Intrinsics.Vector64<float> value) => throw null;
                    unsafe public static void Store(System.Byte* address, System.Runtime.Intrinsics.Vector128<System.Byte> source) => throw null;
                    unsafe public static void Store(System.Byte* address, System.Runtime.Intrinsics.Vector64<System.Byte> source) => throw null;
                    unsafe public static void Store(double* address, System.Runtime.Intrinsics.Vector128<double> source) => throw null;
                    unsafe public static void Store(double* address, System.Runtime.Intrinsics.Vector64<double> source) => throw null;
                    unsafe public static void Store(float* address, System.Runtime.Intrinsics.Vector128<float> source) => throw null;
                    unsafe public static void Store(float* address, System.Runtime.Intrinsics.Vector64<float> source) => throw null;
                    unsafe public static void Store(int* address, System.Runtime.Intrinsics.Vector128<int> source) => throw null;
                    unsafe public static void Store(int* address, System.Runtime.Intrinsics.Vector64<int> source) => throw null;
                    unsafe public static void Store(System.Int64* address, System.Runtime.Intrinsics.Vector128<System.Int64> source) => throw null;
                    unsafe public static void Store(System.Int64* address, System.Runtime.Intrinsics.Vector64<System.Int64> source) => throw null;
                    unsafe public static void Store(System.SByte* address, System.Runtime.Intrinsics.Vector128<System.SByte> source) => throw null;
                    unsafe public static void Store(System.SByte* address, System.Runtime.Intrinsics.Vector64<System.SByte> source) => throw null;
                    unsafe public static void Store(System.Int16* address, System.Runtime.Intrinsics.Vector128<System.Int16> source) => throw null;
                    unsafe public static void Store(System.Int16* address, System.Runtime.Intrinsics.Vector64<System.Int16> source) => throw null;
                    unsafe public static void Store(System.UInt32* address, System.Runtime.Intrinsics.Vector128<System.UInt32> source) => throw null;
                    unsafe public static void Store(System.UInt32* address, System.Runtime.Intrinsics.Vector64<System.UInt32> source) => throw null;
                    unsafe public static void Store(System.UInt64* address, System.Runtime.Intrinsics.Vector128<System.UInt64> source) => throw null;
                    unsafe public static void Store(System.UInt64* address, System.Runtime.Intrinsics.Vector64<System.UInt64> source) => throw null;
                    unsafe public static void Store(System.UInt16* address, System.Runtime.Intrinsics.Vector128<System.UInt16> source) => throw null;
                    unsafe public static void Store(System.UInt16* address, System.Runtime.Intrinsics.Vector64<System.UInt16> source) => throw null;
                    unsafe public static void StoreSelectedScalar(System.Byte* address, System.Runtime.Intrinsics.Vector128<System.Byte> value, System.Byte index) => throw null;
                    unsafe public static void StoreSelectedScalar(System.Byte* address, System.Runtime.Intrinsics.Vector64<System.Byte> value, System.Byte index) => throw null;
                    unsafe public static void StoreSelectedScalar(double* address, System.Runtime.Intrinsics.Vector128<double> value, System.Byte index) => throw null;
                    unsafe public static void StoreSelectedScalar(float* address, System.Runtime.Intrinsics.Vector128<float> value, System.Byte index) => throw null;
                    unsafe public static void StoreSelectedScalar(float* address, System.Runtime.Intrinsics.Vector64<float> value, System.Byte index) => throw null;
                    unsafe public static void StoreSelectedScalar(int* address, System.Runtime.Intrinsics.Vector128<int> value, System.Byte index) => throw null;
                    unsafe public static void StoreSelectedScalar(int* address, System.Runtime.Intrinsics.Vector64<int> value, System.Byte index) => throw null;
                    unsafe public static void StoreSelectedScalar(System.Int64* address, System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte index) => throw null;
                    unsafe public static void StoreSelectedScalar(System.SByte* address, System.Runtime.Intrinsics.Vector128<System.SByte> value, System.Byte index) => throw null;
                    unsafe public static void StoreSelectedScalar(System.SByte* address, System.Runtime.Intrinsics.Vector64<System.SByte> value, System.Byte index) => throw null;
                    unsafe public static void StoreSelectedScalar(System.Int16* address, System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte index) => throw null;
                    unsafe public static void StoreSelectedScalar(System.Int16* address, System.Runtime.Intrinsics.Vector64<System.Int16> value, System.Byte index) => throw null;
                    unsafe public static void StoreSelectedScalar(System.UInt32* address, System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Byte index) => throw null;
                    unsafe public static void StoreSelectedScalar(System.UInt32* address, System.Runtime.Intrinsics.Vector64<System.UInt32> value, System.Byte index) => throw null;
                    unsafe public static void StoreSelectedScalar(System.UInt64* address, System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Byte index) => throw null;
                    unsafe public static void StoreSelectedScalar(System.UInt16* address, System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Byte index) => throw null;
                    unsafe public static void StoreSelectedScalar(System.UInt16* address, System.Runtime.Intrinsics.Vector64<System.UInt16> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> Subtract(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> Subtract(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> Subtract(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> Subtract(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> Subtract(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> Subtract(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> Subtract(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> Subtract(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> Subtract(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> Subtract(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> Subtract(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> Subtract(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> Subtract(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> Subtract(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> Subtract(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> Subtract(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> SubtractHighNarrowingLower(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> SubtractHighNarrowingLower(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> SubtractHighNarrowingLower(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> SubtractHighNarrowingLower(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> SubtractHighNarrowingLower(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> SubtractHighNarrowingLower(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> SubtractHighNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.Byte> lower, System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> SubtractHighNarrowingUpper(System.Runtime.Intrinsics.Vector64<int> lower, System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> SubtractHighNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.SByte> lower, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> SubtractHighNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.Int16> lower, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> SubtractHighNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.UInt32> lower, System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> SubtractHighNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.UInt16> lower, System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> SubtractRoundedHighNarrowingLower(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> SubtractRoundedHighNarrowingLower(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> SubtractRoundedHighNarrowingLower(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> SubtractRoundedHighNarrowingLower(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> SubtractRoundedHighNarrowingLower(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> SubtractRoundedHighNarrowingLower(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> SubtractRoundedHighNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.Byte> lower, System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> SubtractRoundedHighNarrowingUpper(System.Runtime.Intrinsics.Vector64<int> lower, System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> SubtractRoundedHighNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.SByte> lower, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> SubtractRoundedHighNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.Int16> lower, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> SubtractRoundedHighNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.UInt32> lower, System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> SubtractRoundedHighNarrowingUpper(System.Runtime.Intrinsics.Vector64<System.UInt16> lower, System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> SubtractSaturate(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> SubtractSaturate(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> SubtractSaturate(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> SubtractSaturate(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> SubtractSaturate(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> SubtractSaturate(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> SubtractSaturate(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> SubtractSaturate(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> SubtractSaturate(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> SubtractSaturate(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> SubtractSaturate(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> SubtractSaturate(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> SubtractSaturate(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> SubtractSaturate(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> SubtractSaturateScalar(System.Runtime.Intrinsics.Vector64<System.Int64> left, System.Runtime.Intrinsics.Vector64<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt64> SubtractSaturateScalar(System.Runtime.Intrinsics.Vector64<System.UInt64> left, System.Runtime.Intrinsics.Vector64<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<double> SubtractScalar(System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> SubtractScalar(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> SubtractScalar(System.Runtime.Intrinsics.Vector64<System.Int64> left, System.Runtime.Intrinsics.Vector64<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt64> SubtractScalar(System.Runtime.Intrinsics.Vector64<System.UInt64> left, System.Runtime.Intrinsics.Vector64<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> SubtractWideningLower(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> SubtractWideningLower(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> SubtractWideningLower(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> SubtractWideningLower(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> SubtractWideningLower(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> SubtractWideningLower(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> SubtractWideningLower(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> SubtractWideningLower(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> SubtractWideningLower(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> SubtractWideningLower(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> SubtractWideningLower(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> SubtractWideningLower(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> SubtractWideningUpper(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> SubtractWideningUpper(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> SubtractWideningUpper(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> SubtractWideningUpper(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> SubtractWideningUpper(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> SubtractWideningUpper(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> SubtractWideningUpper(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> SubtractWideningUpper(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> SubtractWideningUpper(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> SubtractWideningUpper(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> SubtractWideningUpper(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> SubtractWideningUpper(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> VectorTableLookup(System.Runtime.Intrinsics.Vector128<System.Byte> table, System.Runtime.Intrinsics.Vector64<System.Byte> byteIndexes) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> VectorTableLookup(System.Runtime.Intrinsics.Vector128<System.SByte> table, System.Runtime.Intrinsics.Vector64<System.SByte> byteIndexes) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> VectorTableLookupExtension(System.Runtime.Intrinsics.Vector64<System.Byte> defaultValues, System.Runtime.Intrinsics.Vector128<System.Byte> table, System.Runtime.Intrinsics.Vector64<System.Byte> byteIndexes) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> VectorTableLookupExtension(System.Runtime.Intrinsics.Vector64<System.SByte> defaultValues, System.Runtime.Intrinsics.Vector128<System.SByte> table, System.Runtime.Intrinsics.Vector64<System.SByte> byteIndexes) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> Xor(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> Xor(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> Xor(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> Xor(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> Xor(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> Xor(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> Xor(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> Xor(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> Xor(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> Xor(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Byte> Xor(System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<double> Xor(System.Runtime.Intrinsics.Vector64<double> left, System.Runtime.Intrinsics.Vector64<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<float> Xor(System.Runtime.Intrinsics.Vector64<float> left, System.Runtime.Intrinsics.Vector64<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> Xor(System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int64> Xor(System.Runtime.Intrinsics.Vector64<System.Int64> left, System.Runtime.Intrinsics.Vector64<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.SByte> Xor(System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> Xor(System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> Xor(System.Runtime.Intrinsics.Vector64<System.UInt32> left, System.Runtime.Intrinsics.Vector64<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt64> Xor(System.Runtime.Intrinsics.Vector64<System.UInt64> left, System.Runtime.Intrinsics.Vector64<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt16> Xor(System.Runtime.Intrinsics.Vector64<System.UInt16> left, System.Runtime.Intrinsics.Vector64<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ZeroExtendWideningLower(System.Runtime.Intrinsics.Vector64<System.Byte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ZeroExtendWideningLower(System.Runtime.Intrinsics.Vector64<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ZeroExtendWideningLower(System.Runtime.Intrinsics.Vector64<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ZeroExtendWideningLower(System.Runtime.Intrinsics.Vector64<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ZeroExtendWideningLower(System.Runtime.Intrinsics.Vector64<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ZeroExtendWideningLower(System.Runtime.Intrinsics.Vector64<System.UInt16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ZeroExtendWideningUpper(System.Runtime.Intrinsics.Vector128<System.Byte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ZeroExtendWideningUpper(System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ZeroExtendWideningUpper(System.Runtime.Intrinsics.Vector128<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ZeroExtendWideningUpper(System.Runtime.Intrinsics.Vector128<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ZeroExtendWideningUpper(System.Runtime.Intrinsics.Vector128<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ZeroExtendWideningUpper(System.Runtime.Intrinsics.Vector128<System.UInt16> value) => throw null;
                }

                // Generated from `System.Runtime.Intrinsics.Arm.Aes` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                public abstract class Aes : System.Runtime.Intrinsics.Arm.ArmBase
                {
                    // Generated from `System.Runtime.Intrinsics.Arm.Aes+Arm64` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                    public abstract class Arm64 : System.Runtime.Intrinsics.Arm.ArmBase.Arm64
                    {
                        public static bool IsSupported { get => throw null; }
                    }


                    public static System.Runtime.Intrinsics.Vector128<System.Byte> Decrypt(System.Runtime.Intrinsics.Vector128<System.Byte> value, System.Runtime.Intrinsics.Vector128<System.Byte> roundKey) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> Encrypt(System.Runtime.Intrinsics.Vector128<System.Byte> value, System.Runtime.Intrinsics.Vector128<System.Byte> roundKey) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> InverseMixColumns(System.Runtime.Intrinsics.Vector128<System.Byte> value) => throw null;
                    public static bool IsSupported { get => throw null; }
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> MixColumns(System.Runtime.Intrinsics.Vector128<System.Byte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> PolynomialMultiplyWideningLower(System.Runtime.Intrinsics.Vector64<System.Int64> left, System.Runtime.Intrinsics.Vector64<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> PolynomialMultiplyWideningLower(System.Runtime.Intrinsics.Vector64<System.UInt64> left, System.Runtime.Intrinsics.Vector64<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> PolynomialMultiplyWideningUpper(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> PolynomialMultiplyWideningUpper(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                }

                // Generated from `System.Runtime.Intrinsics.Arm.ArmBase` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                public abstract class ArmBase
                {
                    // Generated from `System.Runtime.Intrinsics.Arm.ArmBase+Arm64` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                    public abstract class Arm64
                    {
                        internal Arm64() => throw null;
                        public static bool IsSupported { get => throw null; }
                        public static int LeadingSignCount(int value) => throw null;
                        public static int LeadingSignCount(System.Int64 value) => throw null;
                        public static int LeadingZeroCount(System.Int64 value) => throw null;
                        public static int LeadingZeroCount(System.UInt64 value) => throw null;
                        public static System.Int64 MultiplyHigh(System.Int64 left, System.Int64 right) => throw null;
                        public static System.UInt64 MultiplyHigh(System.UInt64 left, System.UInt64 right) => throw null;
                        public static System.Int64 ReverseElementBits(System.Int64 value) => throw null;
                        public static System.UInt64 ReverseElementBits(System.UInt64 value) => throw null;
                    }


                    internal ArmBase() => throw null;
                    public static bool IsSupported { get => throw null; }
                    public static int LeadingZeroCount(int value) => throw null;
                    public static int LeadingZeroCount(System.UInt32 value) => throw null;
                    public static int ReverseElementBits(int value) => throw null;
                    public static System.UInt32 ReverseElementBits(System.UInt32 value) => throw null;
                }

                // Generated from `System.Runtime.Intrinsics.Arm.Crc32` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                public abstract class Crc32 : System.Runtime.Intrinsics.Arm.ArmBase
                {
                    // Generated from `System.Runtime.Intrinsics.Arm.Crc32+Arm64` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                    public abstract class Arm64 : System.Runtime.Intrinsics.Arm.ArmBase.Arm64
                    {
                        public static System.UInt32 ComputeCrc32(System.UInt32 crc, System.UInt64 data) => throw null;
                        public static System.UInt32 ComputeCrc32C(System.UInt32 crc, System.UInt64 data) => throw null;
                        public static bool IsSupported { get => throw null; }
                    }


                    public static System.UInt32 ComputeCrc32(System.UInt32 crc, System.Byte data) => throw null;
                    public static System.UInt32 ComputeCrc32(System.UInt32 crc, System.UInt32 data) => throw null;
                    public static System.UInt32 ComputeCrc32(System.UInt32 crc, System.UInt16 data) => throw null;
                    public static System.UInt32 ComputeCrc32C(System.UInt32 crc, System.Byte data) => throw null;
                    public static System.UInt32 ComputeCrc32C(System.UInt32 crc, System.UInt32 data) => throw null;
                    public static System.UInt32 ComputeCrc32C(System.UInt32 crc, System.UInt16 data) => throw null;
                    public static bool IsSupported { get => throw null; }
                }

                // Generated from `System.Runtime.Intrinsics.Arm.Dp` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                public abstract class Dp : System.Runtime.Intrinsics.Arm.AdvSimd
                {
                    // Generated from `System.Runtime.Intrinsics.Arm.Dp+Arm64` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                    public abstract class Arm64 : System.Runtime.Intrinsics.Arm.AdvSimd.Arm64
                    {
                        public static bool IsSupported { get => throw null; }
                    }


                    public static System.Runtime.Intrinsics.Vector128<int> DotProduct(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> DotProduct(System.Runtime.Intrinsics.Vector128<System.UInt32> addend, System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> DotProduct(System.Runtime.Intrinsics.Vector64<int> addend, System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> DotProduct(System.Runtime.Intrinsics.Vector64<System.UInt32> addend, System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> DotProductBySelectedQuadruplet(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right, System.Byte rightScaledIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> DotProductBySelectedQuadruplet(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right, System.Byte rightScaledIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> DotProductBySelectedQuadruplet(System.Runtime.Intrinsics.Vector128<System.UInt32> addend, System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right, System.Byte rightScaledIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> DotProductBySelectedQuadruplet(System.Runtime.Intrinsics.Vector128<System.UInt32> addend, System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right, System.Byte rightScaledIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> DotProductBySelectedQuadruplet(System.Runtime.Intrinsics.Vector64<int> addend, System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right, System.Byte rightScaledIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> DotProductBySelectedQuadruplet(System.Runtime.Intrinsics.Vector64<int> addend, System.Runtime.Intrinsics.Vector64<System.SByte> left, System.Runtime.Intrinsics.Vector64<System.SByte> right, System.Byte rightScaledIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> DotProductBySelectedQuadruplet(System.Runtime.Intrinsics.Vector64<System.UInt32> addend, System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right, System.Byte rightScaledIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> DotProductBySelectedQuadruplet(System.Runtime.Intrinsics.Vector64<System.UInt32> addend, System.Runtime.Intrinsics.Vector64<System.Byte> left, System.Runtime.Intrinsics.Vector64<System.Byte> right, System.Byte rightScaledIndex) => throw null;
                    public static bool IsSupported { get => throw null; }
                }

                // Generated from `System.Runtime.Intrinsics.Arm.Rdm` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                public abstract class Rdm : System.Runtime.Intrinsics.Arm.AdvSimd
                {
                    // Generated from `System.Runtime.Intrinsics.Arm.Rdm+Arm64` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                    public abstract class Arm64 : System.Runtime.Intrinsics.Arm.AdvSimd.Arm64
                    {
                        public static bool IsSupported { get => throw null; }
                        public static System.Runtime.Intrinsics.Vector64<int> MultiplyRoundedDoublingAndAddSaturateHighScalar(System.Runtime.Intrinsics.Vector64<int> addend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyRoundedDoublingAndAddSaturateHighScalar(System.Runtime.Intrinsics.Vector64<System.Int16> addend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> MultiplyRoundedDoublingAndSubtractSaturateHighScalar(System.Runtime.Intrinsics.Vector64<int> addend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyRoundedDoublingAndSubtractSaturateHighScalar(System.Runtime.Intrinsics.Vector64<System.Int16> addend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> MultiplyRoundedDoublingScalarBySelectedScalarAndAddSaturateHigh(System.Runtime.Intrinsics.Vector64<int> addend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> MultiplyRoundedDoublingScalarBySelectedScalarAndAddSaturateHigh(System.Runtime.Intrinsics.Vector64<int> addend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyRoundedDoublingScalarBySelectedScalarAndAddSaturateHigh(System.Runtime.Intrinsics.Vector64<System.Int16> addend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyRoundedDoublingScalarBySelectedScalarAndAddSaturateHigh(System.Runtime.Intrinsics.Vector64<System.Int16> addend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> MultiplyRoundedDoublingScalarBySelectedScalarAndSubtractSaturateHigh(System.Runtime.Intrinsics.Vector64<int> minuend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<int> MultiplyRoundedDoublingScalarBySelectedScalarAndSubtractSaturateHigh(System.Runtime.Intrinsics.Vector64<int> minuend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyRoundedDoublingScalarBySelectedScalarAndSubtractSaturateHigh(System.Runtime.Intrinsics.Vector64<System.Int16> minuend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                        public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyRoundedDoublingScalarBySelectedScalarAndSubtractSaturateHigh(System.Runtime.Intrinsics.Vector64<System.Int16> minuend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                    }


                    public static bool IsSupported { get => throw null; }
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyRoundedDoublingAndAddSaturateHigh(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyRoundedDoublingAndAddSaturateHigh(System.Runtime.Intrinsics.Vector128<System.Int16> addend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> MultiplyRoundedDoublingAndAddSaturateHigh(System.Runtime.Intrinsics.Vector64<int> addend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyRoundedDoublingAndAddSaturateHigh(System.Runtime.Intrinsics.Vector64<System.Int16> addend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyRoundedDoublingAndSubtractSaturateHigh(System.Runtime.Intrinsics.Vector128<int> minuend, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyRoundedDoublingAndSubtractSaturateHigh(System.Runtime.Intrinsics.Vector128<System.Int16> minuend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> MultiplyRoundedDoublingAndSubtractSaturateHigh(System.Runtime.Intrinsics.Vector64<int> minuend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyRoundedDoublingAndSubtractSaturateHigh(System.Runtime.Intrinsics.Vector64<System.Int16> minuend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyRoundedDoublingBySelectedScalarAndAddSaturateHigh(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyRoundedDoublingBySelectedScalarAndAddSaturateHigh(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyRoundedDoublingBySelectedScalarAndAddSaturateHigh(System.Runtime.Intrinsics.Vector128<System.Int16> addend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyRoundedDoublingBySelectedScalarAndAddSaturateHigh(System.Runtime.Intrinsics.Vector128<System.Int16> addend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> MultiplyRoundedDoublingBySelectedScalarAndAddSaturateHigh(System.Runtime.Intrinsics.Vector64<int> addend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> MultiplyRoundedDoublingBySelectedScalarAndAddSaturateHigh(System.Runtime.Intrinsics.Vector64<int> addend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyRoundedDoublingBySelectedScalarAndAddSaturateHigh(System.Runtime.Intrinsics.Vector64<System.Int16> addend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyRoundedDoublingBySelectedScalarAndAddSaturateHigh(System.Runtime.Intrinsics.Vector64<System.Int16> addend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyRoundedDoublingBySelectedScalarAndSubtractSaturateHigh(System.Runtime.Intrinsics.Vector128<int> minuend, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyRoundedDoublingBySelectedScalarAndSubtractSaturateHigh(System.Runtime.Intrinsics.Vector128<int> minuend, System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyRoundedDoublingBySelectedScalarAndSubtractSaturateHigh(System.Runtime.Intrinsics.Vector128<System.Int16> minuend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyRoundedDoublingBySelectedScalarAndSubtractSaturateHigh(System.Runtime.Intrinsics.Vector128<System.Int16> minuend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> MultiplyRoundedDoublingBySelectedScalarAndSubtractSaturateHigh(System.Runtime.Intrinsics.Vector64<int> minuend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<int> MultiplyRoundedDoublingBySelectedScalarAndSubtractSaturateHigh(System.Runtime.Intrinsics.Vector64<int> minuend, System.Runtime.Intrinsics.Vector64<int> left, System.Runtime.Intrinsics.Vector64<int> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyRoundedDoublingBySelectedScalarAndSubtractSaturateHigh(System.Runtime.Intrinsics.Vector64<System.Int16> minuend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte rightIndex) => throw null;
                    public static System.Runtime.Intrinsics.Vector64<System.Int16> MultiplyRoundedDoublingBySelectedScalarAndSubtractSaturateHigh(System.Runtime.Intrinsics.Vector64<System.Int16> minuend, System.Runtime.Intrinsics.Vector64<System.Int16> left, System.Runtime.Intrinsics.Vector64<System.Int16> right, System.Byte rightIndex) => throw null;
                }

                // Generated from `System.Runtime.Intrinsics.Arm.Sha1` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                public abstract class Sha1 : System.Runtime.Intrinsics.Arm.ArmBase
                {
                    // Generated from `System.Runtime.Intrinsics.Arm.Sha1+Arm64` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                    public abstract class Arm64 : System.Runtime.Intrinsics.Arm.ArmBase.Arm64
                    {
                        public static bool IsSupported { get => throw null; }
                    }


                    public static System.Runtime.Intrinsics.Vector64<System.UInt32> FixedRotate(System.Runtime.Intrinsics.Vector64<System.UInt32> hash_e) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> HashUpdateChoose(System.Runtime.Intrinsics.Vector128<System.UInt32> hash_abcd, System.Runtime.Intrinsics.Vector64<System.UInt32> hash_e, System.Runtime.Intrinsics.Vector128<System.UInt32> wk) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> HashUpdateMajority(System.Runtime.Intrinsics.Vector128<System.UInt32> hash_abcd, System.Runtime.Intrinsics.Vector64<System.UInt32> hash_e, System.Runtime.Intrinsics.Vector128<System.UInt32> wk) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> HashUpdateParity(System.Runtime.Intrinsics.Vector128<System.UInt32> hash_abcd, System.Runtime.Intrinsics.Vector64<System.UInt32> hash_e, System.Runtime.Intrinsics.Vector128<System.UInt32> wk) => throw null;
                    public static bool IsSupported { get => throw null; }
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ScheduleUpdate0(System.Runtime.Intrinsics.Vector128<System.UInt32> w0_3, System.Runtime.Intrinsics.Vector128<System.UInt32> w4_7, System.Runtime.Intrinsics.Vector128<System.UInt32> w8_11) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ScheduleUpdate1(System.Runtime.Intrinsics.Vector128<System.UInt32> tw0_3, System.Runtime.Intrinsics.Vector128<System.UInt32> w12_15) => throw null;
                }

                // Generated from `System.Runtime.Intrinsics.Arm.Sha256` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                public abstract class Sha256 : System.Runtime.Intrinsics.Arm.ArmBase
                {
                    // Generated from `System.Runtime.Intrinsics.Arm.Sha256+Arm64` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                    public abstract class Arm64 : System.Runtime.Intrinsics.Arm.ArmBase.Arm64
                    {
                        public static bool IsSupported { get => throw null; }
                    }


                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> HashUpdate1(System.Runtime.Intrinsics.Vector128<System.UInt32> hash_abcd, System.Runtime.Intrinsics.Vector128<System.UInt32> hash_efgh, System.Runtime.Intrinsics.Vector128<System.UInt32> wk) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> HashUpdate2(System.Runtime.Intrinsics.Vector128<System.UInt32> hash_efgh, System.Runtime.Intrinsics.Vector128<System.UInt32> hash_abcd, System.Runtime.Intrinsics.Vector128<System.UInt32> wk) => throw null;
                    public static bool IsSupported { get => throw null; }
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ScheduleUpdate0(System.Runtime.Intrinsics.Vector128<System.UInt32> w0_3, System.Runtime.Intrinsics.Vector128<System.UInt32> w4_7) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ScheduleUpdate1(System.Runtime.Intrinsics.Vector128<System.UInt32> w0_3, System.Runtime.Intrinsics.Vector128<System.UInt32> w8_11, System.Runtime.Intrinsics.Vector128<System.UInt32> w12_15) => throw null;
                }

            }
            namespace X86
            {
                // Generated from `System.Runtime.Intrinsics.X86.Aes` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                public abstract class Aes : System.Runtime.Intrinsics.X86.Sse2
                {
                    // Generated from `System.Runtime.Intrinsics.X86.Aes+X64` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                    public abstract class X64 : System.Runtime.Intrinsics.X86.Sse2.X64
                    {
                        public static bool IsSupported { get => throw null; }
                    }


                    public static System.Runtime.Intrinsics.Vector128<System.Byte> Decrypt(System.Runtime.Intrinsics.Vector128<System.Byte> value, System.Runtime.Intrinsics.Vector128<System.Byte> roundKey) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> DecryptLast(System.Runtime.Intrinsics.Vector128<System.Byte> value, System.Runtime.Intrinsics.Vector128<System.Byte> roundKey) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> Encrypt(System.Runtime.Intrinsics.Vector128<System.Byte> value, System.Runtime.Intrinsics.Vector128<System.Byte> roundKey) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> EncryptLast(System.Runtime.Intrinsics.Vector128<System.Byte> value, System.Runtime.Intrinsics.Vector128<System.Byte> roundKey) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> InverseMixColumns(System.Runtime.Intrinsics.Vector128<System.Byte> value) => throw null;
                    public static bool IsSupported { get => throw null; }
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> KeygenAssist(System.Runtime.Intrinsics.Vector128<System.Byte> value, System.Byte control) => throw null;
                }

                // Generated from `System.Runtime.Intrinsics.X86.Avx` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                public abstract class Avx : System.Runtime.Intrinsics.X86.Sse42
                {
                    // Generated from `System.Runtime.Intrinsics.X86.Avx+X64` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                    public abstract class X64 : System.Runtime.Intrinsics.X86.Sse42.X64
                    {
                        public static bool IsSupported { get => throw null; }
                        internal X64() => throw null;
                    }


                    public static System.Runtime.Intrinsics.Vector256<double> Add(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> Add(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> AddSubtract(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> AddSubtract(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> And(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> And(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> AndNot(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> AndNot(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right) => throw null;
                    internal Avx() => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> Blend(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> Blend(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> BlendVariable(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right, System.Runtime.Intrinsics.Vector256<double> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> BlendVariable(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right, System.Runtime.Intrinsics.Vector256<float> mask) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<float> BroadcastScalarToVector128(float* source) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<double> BroadcastScalarToVector256(double* source) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<float> BroadcastScalarToVector256(float* source) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<double> BroadcastVector128ToVector256(double* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<float> BroadcastVector128ToVector256(float* address) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> Ceiling(System.Runtime.Intrinsics.Vector256<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> Ceiling(System.Runtime.Intrinsics.Vector256<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> Compare(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right, System.Runtime.Intrinsics.X86.FloatComparisonMode mode) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> Compare(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right, System.Runtime.Intrinsics.X86.FloatComparisonMode mode) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> Compare(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right, System.Runtime.Intrinsics.X86.FloatComparisonMode mode) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> Compare(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right, System.Runtime.Intrinsics.X86.FloatComparisonMode mode) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> CompareEqual(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> CompareEqual(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> CompareGreaterThan(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> CompareGreaterThan(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> CompareGreaterThanOrEqual(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> CompareGreaterThanOrEqual(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> CompareLessThan(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> CompareLessThan(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> CompareLessThanOrEqual(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> CompareLessThanOrEqual(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> CompareNotEqual(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> CompareNotEqual(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> CompareNotGreaterThan(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> CompareNotGreaterThan(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> CompareNotGreaterThanOrEqual(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> CompareNotGreaterThanOrEqual(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> CompareNotLessThan(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> CompareNotLessThan(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> CompareNotLessThanOrEqual(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> CompareNotLessThanOrEqual(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> CompareOrdered(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> CompareOrdered(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> CompareScalar(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right, System.Runtime.Intrinsics.X86.FloatComparisonMode mode) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareScalar(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right, System.Runtime.Intrinsics.X86.FloatComparisonMode mode) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> CompareUnordered(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> CompareUnordered(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ConvertToVector128Int32(System.Runtime.Intrinsics.Vector256<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ConvertToVector128Int32WithTruncation(System.Runtime.Intrinsics.Vector256<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> ConvertToVector128Single(System.Runtime.Intrinsics.Vector256<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> ConvertToVector256Double(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> ConvertToVector256Double(System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> ConvertToVector256Int32(System.Runtime.Intrinsics.Vector256<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> ConvertToVector256Int32WithTruncation(System.Runtime.Intrinsics.Vector256<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> ConvertToVector256Single(System.Runtime.Intrinsics.Vector256<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> Divide(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> Divide(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> DotProduct(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> DuplicateEvenIndexed(System.Runtime.Intrinsics.Vector256<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> DuplicateEvenIndexed(System.Runtime.Intrinsics.Vector256<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> DuplicateOddIndexed(System.Runtime.Intrinsics.Vector256<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> ExtractVector128(System.Runtime.Intrinsics.Vector256<System.Byte> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> ExtractVector128(System.Runtime.Intrinsics.Vector256<double> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> ExtractVector128(System.Runtime.Intrinsics.Vector256<float> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ExtractVector128(System.Runtime.Intrinsics.Vector256<int> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ExtractVector128(System.Runtime.Intrinsics.Vector256<System.Int64> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ExtractVector128(System.Runtime.Intrinsics.Vector256<System.SByte> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ExtractVector128(System.Runtime.Intrinsics.Vector256<System.Int16> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ExtractVector128(System.Runtime.Intrinsics.Vector256<System.UInt32> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ExtractVector128(System.Runtime.Intrinsics.Vector256<System.UInt64> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ExtractVector128(System.Runtime.Intrinsics.Vector256<System.UInt16> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> Floor(System.Runtime.Intrinsics.Vector256<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> Floor(System.Runtime.Intrinsics.Vector256<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> HorizontalAdd(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> HorizontalAdd(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> HorizontalSubtract(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> HorizontalSubtract(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Byte> InsertVector128(System.Runtime.Intrinsics.Vector256<System.Byte> value, System.Runtime.Intrinsics.Vector128<System.Byte> data, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> InsertVector128(System.Runtime.Intrinsics.Vector256<double> value, System.Runtime.Intrinsics.Vector128<double> data, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> InsertVector128(System.Runtime.Intrinsics.Vector256<float> value, System.Runtime.Intrinsics.Vector128<float> data, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> InsertVector128(System.Runtime.Intrinsics.Vector256<int> value, System.Runtime.Intrinsics.Vector128<int> data, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> InsertVector128(System.Runtime.Intrinsics.Vector256<System.Int64> value, System.Runtime.Intrinsics.Vector128<System.Int64> data, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.SByte> InsertVector128(System.Runtime.Intrinsics.Vector256<System.SByte> value, System.Runtime.Intrinsics.Vector128<System.SByte> data, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> InsertVector128(System.Runtime.Intrinsics.Vector256<System.Int16> value, System.Runtime.Intrinsics.Vector128<System.Int16> data, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> InsertVector128(System.Runtime.Intrinsics.Vector256<System.UInt32> value, System.Runtime.Intrinsics.Vector128<System.UInt32> data, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt64> InsertVector128(System.Runtime.Intrinsics.Vector256<System.UInt64> value, System.Runtime.Intrinsics.Vector128<System.UInt64> data, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> InsertVector128(System.Runtime.Intrinsics.Vector256<System.UInt16> value, System.Runtime.Intrinsics.Vector128<System.UInt16> data, System.Byte index) => throw null;
                    public static bool IsSupported { get => throw null; }
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Byte> LoadAlignedVector256(System.Byte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<double> LoadAlignedVector256(double* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<float> LoadAlignedVector256(float* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<int> LoadAlignedVector256(int* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Int64> LoadAlignedVector256(System.Int64* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.SByte> LoadAlignedVector256(System.SByte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Int16> LoadAlignedVector256(System.Int16* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.UInt32> LoadAlignedVector256(System.UInt32* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.UInt64> LoadAlignedVector256(System.UInt64* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.UInt16> LoadAlignedVector256(System.UInt16* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Byte> LoadDquVector256(System.Byte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<int> LoadDquVector256(int* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Int64> LoadDquVector256(System.Int64* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.SByte> LoadDquVector256(System.SByte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Int16> LoadDquVector256(System.Int16* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.UInt32> LoadDquVector256(System.UInt32* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.UInt64> LoadDquVector256(System.UInt64* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.UInt16> LoadDquVector256(System.UInt16* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Byte> LoadVector256(System.Byte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<double> LoadVector256(double* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<float> LoadVector256(float* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<int> LoadVector256(int* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Int64> LoadVector256(System.Int64* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.SByte> LoadVector256(System.SByte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Int16> LoadVector256(System.Int16* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.UInt32> LoadVector256(System.UInt32* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.UInt64> LoadVector256(System.UInt64* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.UInt16> LoadVector256(System.UInt16* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<double> MaskLoad(double* address, System.Runtime.Intrinsics.Vector128<double> mask) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<double> MaskLoad(double* address, System.Runtime.Intrinsics.Vector256<double> mask) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<float> MaskLoad(float* address, System.Runtime.Intrinsics.Vector128<float> mask) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<float> MaskLoad(float* address, System.Runtime.Intrinsics.Vector256<float> mask) => throw null;
                    unsafe public static void MaskStore(double* address, System.Runtime.Intrinsics.Vector128<double> mask, System.Runtime.Intrinsics.Vector128<double> source) => throw null;
                    unsafe public static void MaskStore(double* address, System.Runtime.Intrinsics.Vector256<double> mask, System.Runtime.Intrinsics.Vector256<double> source) => throw null;
                    unsafe public static void MaskStore(float* address, System.Runtime.Intrinsics.Vector128<float> mask, System.Runtime.Intrinsics.Vector128<float> source) => throw null;
                    unsafe public static void MaskStore(float* address, System.Runtime.Intrinsics.Vector256<float> mask, System.Runtime.Intrinsics.Vector256<float> source) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> Max(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> Max(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> Min(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> Min(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right) => throw null;
                    public static int MoveMask(System.Runtime.Intrinsics.Vector256<double> value) => throw null;
                    public static int MoveMask(System.Runtime.Intrinsics.Vector256<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> Multiply(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> Multiply(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> Or(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> Or(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> Permute(System.Runtime.Intrinsics.Vector128<double> value, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> Permute(System.Runtime.Intrinsics.Vector128<float> value, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> Permute(System.Runtime.Intrinsics.Vector256<double> value, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> Permute(System.Runtime.Intrinsics.Vector256<float> value, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Byte> Permute2x128(System.Runtime.Intrinsics.Vector256<System.Byte> left, System.Runtime.Intrinsics.Vector256<System.Byte> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> Permute2x128(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> Permute2x128(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> Permute2x128(System.Runtime.Intrinsics.Vector256<int> left, System.Runtime.Intrinsics.Vector256<int> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> Permute2x128(System.Runtime.Intrinsics.Vector256<System.Int64> left, System.Runtime.Intrinsics.Vector256<System.Int64> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.SByte> Permute2x128(System.Runtime.Intrinsics.Vector256<System.SByte> left, System.Runtime.Intrinsics.Vector256<System.SByte> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> Permute2x128(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> Permute2x128(System.Runtime.Intrinsics.Vector256<System.UInt32> left, System.Runtime.Intrinsics.Vector256<System.UInt32> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt64> Permute2x128(System.Runtime.Intrinsics.Vector256<System.UInt64> left, System.Runtime.Intrinsics.Vector256<System.UInt64> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> Permute2x128(System.Runtime.Intrinsics.Vector256<System.UInt16> left, System.Runtime.Intrinsics.Vector256<System.UInt16> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> PermuteVar(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<System.Int64> control) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> PermuteVar(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<int> control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> PermuteVar(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<System.Int64> control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> PermuteVar(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<int> control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> Reciprocal(System.Runtime.Intrinsics.Vector256<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> ReciprocalSqrt(System.Runtime.Intrinsics.Vector256<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> RoundCurrentDirection(System.Runtime.Intrinsics.Vector256<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> RoundCurrentDirection(System.Runtime.Intrinsics.Vector256<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> RoundToNearestInteger(System.Runtime.Intrinsics.Vector256<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> RoundToNearestInteger(System.Runtime.Intrinsics.Vector256<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> RoundToNegativeInfinity(System.Runtime.Intrinsics.Vector256<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> RoundToNegativeInfinity(System.Runtime.Intrinsics.Vector256<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> RoundToPositiveInfinity(System.Runtime.Intrinsics.Vector256<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> RoundToPositiveInfinity(System.Runtime.Intrinsics.Vector256<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> RoundToZero(System.Runtime.Intrinsics.Vector256<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> RoundToZero(System.Runtime.Intrinsics.Vector256<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> Shuffle(System.Runtime.Intrinsics.Vector256<double> value, System.Runtime.Intrinsics.Vector256<double> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> Shuffle(System.Runtime.Intrinsics.Vector256<float> value, System.Runtime.Intrinsics.Vector256<float> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> Sqrt(System.Runtime.Intrinsics.Vector256<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> Sqrt(System.Runtime.Intrinsics.Vector256<float> value) => throw null;
                    unsafe public static void Store(System.Byte* address, System.Runtime.Intrinsics.Vector256<System.Byte> source) => throw null;
                    unsafe public static void Store(double* address, System.Runtime.Intrinsics.Vector256<double> source) => throw null;
                    unsafe public static void Store(float* address, System.Runtime.Intrinsics.Vector256<float> source) => throw null;
                    unsafe public static void Store(int* address, System.Runtime.Intrinsics.Vector256<int> source) => throw null;
                    unsafe public static void Store(System.Int64* address, System.Runtime.Intrinsics.Vector256<System.Int64> source) => throw null;
                    unsafe public static void Store(System.SByte* address, System.Runtime.Intrinsics.Vector256<System.SByte> source) => throw null;
                    unsafe public static void Store(System.Int16* address, System.Runtime.Intrinsics.Vector256<System.Int16> source) => throw null;
                    unsafe public static void Store(System.UInt32* address, System.Runtime.Intrinsics.Vector256<System.UInt32> source) => throw null;
                    unsafe public static void Store(System.UInt64* address, System.Runtime.Intrinsics.Vector256<System.UInt64> source) => throw null;
                    unsafe public static void Store(System.UInt16* address, System.Runtime.Intrinsics.Vector256<System.UInt16> source) => throw null;
                    unsafe public static void StoreAligned(System.Byte* address, System.Runtime.Intrinsics.Vector256<System.Byte> source) => throw null;
                    unsafe public static void StoreAligned(double* address, System.Runtime.Intrinsics.Vector256<double> source) => throw null;
                    unsafe public static void StoreAligned(float* address, System.Runtime.Intrinsics.Vector256<float> source) => throw null;
                    unsafe public static void StoreAligned(int* address, System.Runtime.Intrinsics.Vector256<int> source) => throw null;
                    unsafe public static void StoreAligned(System.Int64* address, System.Runtime.Intrinsics.Vector256<System.Int64> source) => throw null;
                    unsafe public static void StoreAligned(System.SByte* address, System.Runtime.Intrinsics.Vector256<System.SByte> source) => throw null;
                    unsafe public static void StoreAligned(System.Int16* address, System.Runtime.Intrinsics.Vector256<System.Int16> source) => throw null;
                    unsafe public static void StoreAligned(System.UInt32* address, System.Runtime.Intrinsics.Vector256<System.UInt32> source) => throw null;
                    unsafe public static void StoreAligned(System.UInt64* address, System.Runtime.Intrinsics.Vector256<System.UInt64> source) => throw null;
                    unsafe public static void StoreAligned(System.UInt16* address, System.Runtime.Intrinsics.Vector256<System.UInt16> source) => throw null;
                    unsafe public static void StoreAlignedNonTemporal(System.Byte* address, System.Runtime.Intrinsics.Vector256<System.Byte> source) => throw null;
                    unsafe public static void StoreAlignedNonTemporal(double* address, System.Runtime.Intrinsics.Vector256<double> source) => throw null;
                    unsafe public static void StoreAlignedNonTemporal(float* address, System.Runtime.Intrinsics.Vector256<float> source) => throw null;
                    unsafe public static void StoreAlignedNonTemporal(int* address, System.Runtime.Intrinsics.Vector256<int> source) => throw null;
                    unsafe public static void StoreAlignedNonTemporal(System.Int64* address, System.Runtime.Intrinsics.Vector256<System.Int64> source) => throw null;
                    unsafe public static void StoreAlignedNonTemporal(System.SByte* address, System.Runtime.Intrinsics.Vector256<System.SByte> source) => throw null;
                    unsafe public static void StoreAlignedNonTemporal(System.Int16* address, System.Runtime.Intrinsics.Vector256<System.Int16> source) => throw null;
                    unsafe public static void StoreAlignedNonTemporal(System.UInt32* address, System.Runtime.Intrinsics.Vector256<System.UInt32> source) => throw null;
                    unsafe public static void StoreAlignedNonTemporal(System.UInt64* address, System.Runtime.Intrinsics.Vector256<System.UInt64> source) => throw null;
                    unsafe public static void StoreAlignedNonTemporal(System.UInt16* address, System.Runtime.Intrinsics.Vector256<System.UInt16> source) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> Subtract(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> Subtract(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right) => throw null;
                    public static bool TestC(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static bool TestC(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static bool TestC(System.Runtime.Intrinsics.Vector256<System.Byte> left, System.Runtime.Intrinsics.Vector256<System.Byte> right) => throw null;
                    public static bool TestC(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right) => throw null;
                    public static bool TestC(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right) => throw null;
                    public static bool TestC(System.Runtime.Intrinsics.Vector256<int> left, System.Runtime.Intrinsics.Vector256<int> right) => throw null;
                    public static bool TestC(System.Runtime.Intrinsics.Vector256<System.Int64> left, System.Runtime.Intrinsics.Vector256<System.Int64> right) => throw null;
                    public static bool TestC(System.Runtime.Intrinsics.Vector256<System.SByte> left, System.Runtime.Intrinsics.Vector256<System.SByte> right) => throw null;
                    public static bool TestC(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right) => throw null;
                    public static bool TestC(System.Runtime.Intrinsics.Vector256<System.UInt32> left, System.Runtime.Intrinsics.Vector256<System.UInt32> right) => throw null;
                    public static bool TestC(System.Runtime.Intrinsics.Vector256<System.UInt64> left, System.Runtime.Intrinsics.Vector256<System.UInt64> right) => throw null;
                    public static bool TestC(System.Runtime.Intrinsics.Vector256<System.UInt16> left, System.Runtime.Intrinsics.Vector256<System.UInt16> right) => throw null;
                    public static bool TestNotZAndNotC(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static bool TestNotZAndNotC(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static bool TestNotZAndNotC(System.Runtime.Intrinsics.Vector256<System.Byte> left, System.Runtime.Intrinsics.Vector256<System.Byte> right) => throw null;
                    public static bool TestNotZAndNotC(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right) => throw null;
                    public static bool TestNotZAndNotC(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right) => throw null;
                    public static bool TestNotZAndNotC(System.Runtime.Intrinsics.Vector256<int> left, System.Runtime.Intrinsics.Vector256<int> right) => throw null;
                    public static bool TestNotZAndNotC(System.Runtime.Intrinsics.Vector256<System.Int64> left, System.Runtime.Intrinsics.Vector256<System.Int64> right) => throw null;
                    public static bool TestNotZAndNotC(System.Runtime.Intrinsics.Vector256<System.SByte> left, System.Runtime.Intrinsics.Vector256<System.SByte> right) => throw null;
                    public static bool TestNotZAndNotC(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right) => throw null;
                    public static bool TestNotZAndNotC(System.Runtime.Intrinsics.Vector256<System.UInt32> left, System.Runtime.Intrinsics.Vector256<System.UInt32> right) => throw null;
                    public static bool TestNotZAndNotC(System.Runtime.Intrinsics.Vector256<System.UInt64> left, System.Runtime.Intrinsics.Vector256<System.UInt64> right) => throw null;
                    public static bool TestNotZAndNotC(System.Runtime.Intrinsics.Vector256<System.UInt16> left, System.Runtime.Intrinsics.Vector256<System.UInt16> right) => throw null;
                    public static bool TestZ(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static bool TestZ(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static bool TestZ(System.Runtime.Intrinsics.Vector256<System.Byte> left, System.Runtime.Intrinsics.Vector256<System.Byte> right) => throw null;
                    public static bool TestZ(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right) => throw null;
                    public static bool TestZ(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right) => throw null;
                    public static bool TestZ(System.Runtime.Intrinsics.Vector256<int> left, System.Runtime.Intrinsics.Vector256<int> right) => throw null;
                    public static bool TestZ(System.Runtime.Intrinsics.Vector256<System.Int64> left, System.Runtime.Intrinsics.Vector256<System.Int64> right) => throw null;
                    public static bool TestZ(System.Runtime.Intrinsics.Vector256<System.SByte> left, System.Runtime.Intrinsics.Vector256<System.SByte> right) => throw null;
                    public static bool TestZ(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right) => throw null;
                    public static bool TestZ(System.Runtime.Intrinsics.Vector256<System.UInt32> left, System.Runtime.Intrinsics.Vector256<System.UInt32> right) => throw null;
                    public static bool TestZ(System.Runtime.Intrinsics.Vector256<System.UInt64> left, System.Runtime.Intrinsics.Vector256<System.UInt64> right) => throw null;
                    public static bool TestZ(System.Runtime.Intrinsics.Vector256<System.UInt16> left, System.Runtime.Intrinsics.Vector256<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> UnpackHigh(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> UnpackHigh(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> UnpackLow(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> UnpackLow(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> Xor(System.Runtime.Intrinsics.Vector256<double> left, System.Runtime.Intrinsics.Vector256<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> Xor(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<float> right) => throw null;
                }

                // Generated from `System.Runtime.Intrinsics.X86.Avx2` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                public abstract class Avx2 : System.Runtime.Intrinsics.X86.Avx
                {
                    // Generated from `System.Runtime.Intrinsics.X86.Avx2+X64` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                    public abstract class X64 : System.Runtime.Intrinsics.X86.Avx.X64
                    {
                        public static bool IsSupported { get => throw null; }
                        internal X64() => throw null;
                    }


                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> Abs(System.Runtime.Intrinsics.Vector256<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Byte> Abs(System.Runtime.Intrinsics.Vector256<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> Abs(System.Runtime.Intrinsics.Vector256<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Byte> Add(System.Runtime.Intrinsics.Vector256<System.Byte> left, System.Runtime.Intrinsics.Vector256<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> Add(System.Runtime.Intrinsics.Vector256<int> left, System.Runtime.Intrinsics.Vector256<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> Add(System.Runtime.Intrinsics.Vector256<System.Int64> left, System.Runtime.Intrinsics.Vector256<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.SByte> Add(System.Runtime.Intrinsics.Vector256<System.SByte> left, System.Runtime.Intrinsics.Vector256<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> Add(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> Add(System.Runtime.Intrinsics.Vector256<System.UInt32> left, System.Runtime.Intrinsics.Vector256<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt64> Add(System.Runtime.Intrinsics.Vector256<System.UInt64> left, System.Runtime.Intrinsics.Vector256<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> Add(System.Runtime.Intrinsics.Vector256<System.UInt16> left, System.Runtime.Intrinsics.Vector256<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Byte> AddSaturate(System.Runtime.Intrinsics.Vector256<System.Byte> left, System.Runtime.Intrinsics.Vector256<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.SByte> AddSaturate(System.Runtime.Intrinsics.Vector256<System.SByte> left, System.Runtime.Intrinsics.Vector256<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> AddSaturate(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> AddSaturate(System.Runtime.Intrinsics.Vector256<System.UInt16> left, System.Runtime.Intrinsics.Vector256<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Byte> AlignRight(System.Runtime.Intrinsics.Vector256<System.Byte> left, System.Runtime.Intrinsics.Vector256<System.Byte> right, System.Byte mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> AlignRight(System.Runtime.Intrinsics.Vector256<int> left, System.Runtime.Intrinsics.Vector256<int> right, System.Byte mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> AlignRight(System.Runtime.Intrinsics.Vector256<System.Int64> left, System.Runtime.Intrinsics.Vector256<System.Int64> right, System.Byte mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.SByte> AlignRight(System.Runtime.Intrinsics.Vector256<System.SByte> left, System.Runtime.Intrinsics.Vector256<System.SByte> right, System.Byte mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> AlignRight(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right, System.Byte mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> AlignRight(System.Runtime.Intrinsics.Vector256<System.UInt32> left, System.Runtime.Intrinsics.Vector256<System.UInt32> right, System.Byte mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt64> AlignRight(System.Runtime.Intrinsics.Vector256<System.UInt64> left, System.Runtime.Intrinsics.Vector256<System.UInt64> right, System.Byte mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> AlignRight(System.Runtime.Intrinsics.Vector256<System.UInt16> left, System.Runtime.Intrinsics.Vector256<System.UInt16> right, System.Byte mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Byte> And(System.Runtime.Intrinsics.Vector256<System.Byte> left, System.Runtime.Intrinsics.Vector256<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> And(System.Runtime.Intrinsics.Vector256<int> left, System.Runtime.Intrinsics.Vector256<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> And(System.Runtime.Intrinsics.Vector256<System.Int64> left, System.Runtime.Intrinsics.Vector256<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.SByte> And(System.Runtime.Intrinsics.Vector256<System.SByte> left, System.Runtime.Intrinsics.Vector256<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> And(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> And(System.Runtime.Intrinsics.Vector256<System.UInt32> left, System.Runtime.Intrinsics.Vector256<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt64> And(System.Runtime.Intrinsics.Vector256<System.UInt64> left, System.Runtime.Intrinsics.Vector256<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> And(System.Runtime.Intrinsics.Vector256<System.UInt16> left, System.Runtime.Intrinsics.Vector256<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Byte> AndNot(System.Runtime.Intrinsics.Vector256<System.Byte> left, System.Runtime.Intrinsics.Vector256<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> AndNot(System.Runtime.Intrinsics.Vector256<int> left, System.Runtime.Intrinsics.Vector256<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> AndNot(System.Runtime.Intrinsics.Vector256<System.Int64> left, System.Runtime.Intrinsics.Vector256<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.SByte> AndNot(System.Runtime.Intrinsics.Vector256<System.SByte> left, System.Runtime.Intrinsics.Vector256<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> AndNot(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> AndNot(System.Runtime.Intrinsics.Vector256<System.UInt32> left, System.Runtime.Intrinsics.Vector256<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt64> AndNot(System.Runtime.Intrinsics.Vector256<System.UInt64> left, System.Runtime.Intrinsics.Vector256<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> AndNot(System.Runtime.Intrinsics.Vector256<System.UInt16> left, System.Runtime.Intrinsics.Vector256<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Byte> Average(System.Runtime.Intrinsics.Vector256<System.Byte> left, System.Runtime.Intrinsics.Vector256<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> Average(System.Runtime.Intrinsics.Vector256<System.UInt16> left, System.Runtime.Intrinsics.Vector256<System.UInt16> right) => throw null;
                    internal Avx2() => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> Blend(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> Blend(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> Blend(System.Runtime.Intrinsics.Vector256<int> left, System.Runtime.Intrinsics.Vector256<int> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> Blend(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> Blend(System.Runtime.Intrinsics.Vector256<System.UInt32> left, System.Runtime.Intrinsics.Vector256<System.UInt32> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> Blend(System.Runtime.Intrinsics.Vector256<System.UInt16> left, System.Runtime.Intrinsics.Vector256<System.UInt16> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Byte> BlendVariable(System.Runtime.Intrinsics.Vector256<System.Byte> left, System.Runtime.Intrinsics.Vector256<System.Byte> right, System.Runtime.Intrinsics.Vector256<System.Byte> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> BlendVariable(System.Runtime.Intrinsics.Vector256<int> left, System.Runtime.Intrinsics.Vector256<int> right, System.Runtime.Intrinsics.Vector256<int> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> BlendVariable(System.Runtime.Intrinsics.Vector256<System.Int64> left, System.Runtime.Intrinsics.Vector256<System.Int64> right, System.Runtime.Intrinsics.Vector256<System.Int64> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.SByte> BlendVariable(System.Runtime.Intrinsics.Vector256<System.SByte> left, System.Runtime.Intrinsics.Vector256<System.SByte> right, System.Runtime.Intrinsics.Vector256<System.SByte> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> BlendVariable(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right, System.Runtime.Intrinsics.Vector256<System.Int16> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> BlendVariable(System.Runtime.Intrinsics.Vector256<System.UInt32> left, System.Runtime.Intrinsics.Vector256<System.UInt32> right, System.Runtime.Intrinsics.Vector256<System.UInt32> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt64> BlendVariable(System.Runtime.Intrinsics.Vector256<System.UInt64> left, System.Runtime.Intrinsics.Vector256<System.UInt64> right, System.Runtime.Intrinsics.Vector256<System.UInt64> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> BlendVariable(System.Runtime.Intrinsics.Vector256<System.UInt16> left, System.Runtime.Intrinsics.Vector256<System.UInt16> right, System.Runtime.Intrinsics.Vector256<System.UInt16> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> BroadcastScalarToVector128(System.Runtime.Intrinsics.Vector128<System.Byte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> BroadcastScalarToVector128(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> BroadcastScalarToVector128(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> BroadcastScalarToVector128(System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> BroadcastScalarToVector128(System.Runtime.Intrinsics.Vector128<System.Int64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> BroadcastScalarToVector128(System.Runtime.Intrinsics.Vector128<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> BroadcastScalarToVector128(System.Runtime.Intrinsics.Vector128<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> BroadcastScalarToVector128(System.Runtime.Intrinsics.Vector128<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> BroadcastScalarToVector128(System.Runtime.Intrinsics.Vector128<System.UInt64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> BroadcastScalarToVector128(System.Runtime.Intrinsics.Vector128<System.UInt16> value) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Byte> BroadcastScalarToVector128(System.Byte* source) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<int> BroadcastScalarToVector128(int* source) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Int64> BroadcastScalarToVector128(System.Int64* source) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.SByte> BroadcastScalarToVector128(System.SByte* source) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Int16> BroadcastScalarToVector128(System.Int16* source) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt32> BroadcastScalarToVector128(System.UInt32* source) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt64> BroadcastScalarToVector128(System.UInt64* source) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt16> BroadcastScalarToVector128(System.UInt16* source) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Byte> BroadcastScalarToVector256(System.Runtime.Intrinsics.Vector128<System.Byte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> BroadcastScalarToVector256(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> BroadcastScalarToVector256(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> BroadcastScalarToVector256(System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> BroadcastScalarToVector256(System.Runtime.Intrinsics.Vector128<System.Int64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.SByte> BroadcastScalarToVector256(System.Runtime.Intrinsics.Vector128<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> BroadcastScalarToVector256(System.Runtime.Intrinsics.Vector128<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> BroadcastScalarToVector256(System.Runtime.Intrinsics.Vector128<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt64> BroadcastScalarToVector256(System.Runtime.Intrinsics.Vector128<System.UInt64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> BroadcastScalarToVector256(System.Runtime.Intrinsics.Vector128<System.UInt16> value) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Byte> BroadcastScalarToVector256(System.Byte* source) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<int> BroadcastScalarToVector256(int* source) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Int64> BroadcastScalarToVector256(System.Int64* source) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.SByte> BroadcastScalarToVector256(System.SByte* source) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Int16> BroadcastScalarToVector256(System.Int16* source) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.UInt32> BroadcastScalarToVector256(System.UInt32* source) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.UInt64> BroadcastScalarToVector256(System.UInt64* source) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.UInt16> BroadcastScalarToVector256(System.UInt16* source) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Byte> BroadcastVector128ToVector256(System.Byte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<int> BroadcastVector128ToVector256(int* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Int64> BroadcastVector128ToVector256(System.Int64* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.SByte> BroadcastVector128ToVector256(System.SByte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Int16> BroadcastVector128ToVector256(System.Int16* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.UInt32> BroadcastVector128ToVector256(System.UInt32* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.UInt64> BroadcastVector128ToVector256(System.UInt64* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.UInt16> BroadcastVector128ToVector256(System.UInt16* address) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Byte> CompareEqual(System.Runtime.Intrinsics.Vector256<System.Byte> left, System.Runtime.Intrinsics.Vector256<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> CompareEqual(System.Runtime.Intrinsics.Vector256<int> left, System.Runtime.Intrinsics.Vector256<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> CompareEqual(System.Runtime.Intrinsics.Vector256<System.Int64> left, System.Runtime.Intrinsics.Vector256<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.SByte> CompareEqual(System.Runtime.Intrinsics.Vector256<System.SByte> left, System.Runtime.Intrinsics.Vector256<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> CompareEqual(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> CompareEqual(System.Runtime.Intrinsics.Vector256<System.UInt32> left, System.Runtime.Intrinsics.Vector256<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt64> CompareEqual(System.Runtime.Intrinsics.Vector256<System.UInt64> left, System.Runtime.Intrinsics.Vector256<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> CompareEqual(System.Runtime.Intrinsics.Vector256<System.UInt16> left, System.Runtime.Intrinsics.Vector256<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> CompareGreaterThan(System.Runtime.Intrinsics.Vector256<int> left, System.Runtime.Intrinsics.Vector256<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> CompareGreaterThan(System.Runtime.Intrinsics.Vector256<System.Int64> left, System.Runtime.Intrinsics.Vector256<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.SByte> CompareGreaterThan(System.Runtime.Intrinsics.Vector256<System.SByte> left, System.Runtime.Intrinsics.Vector256<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> CompareGreaterThan(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right) => throw null;
                    public static int ConvertToInt32(System.Runtime.Intrinsics.Vector256<int> value) => throw null;
                    public static System.UInt32 ConvertToUInt32(System.Runtime.Intrinsics.Vector256<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> ConvertToVector256Int16(System.Runtime.Intrinsics.Vector128<System.Byte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> ConvertToVector256Int16(System.Runtime.Intrinsics.Vector128<System.SByte> value) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Int16> ConvertToVector256Int16(System.Byte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Int16> ConvertToVector256Int16(System.SByte* address) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> ConvertToVector256Int32(System.Runtime.Intrinsics.Vector128<System.Byte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> ConvertToVector256Int32(System.Runtime.Intrinsics.Vector128<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> ConvertToVector256Int32(System.Runtime.Intrinsics.Vector128<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> ConvertToVector256Int32(System.Runtime.Intrinsics.Vector128<System.UInt16> value) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<int> ConvertToVector256Int32(System.Byte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<int> ConvertToVector256Int32(System.SByte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<int> ConvertToVector256Int32(System.Int16* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<int> ConvertToVector256Int32(System.UInt16* address) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> ConvertToVector256Int64(System.Runtime.Intrinsics.Vector128<System.Byte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> ConvertToVector256Int64(System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> ConvertToVector256Int64(System.Runtime.Intrinsics.Vector128<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> ConvertToVector256Int64(System.Runtime.Intrinsics.Vector128<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> ConvertToVector256Int64(System.Runtime.Intrinsics.Vector128<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> ConvertToVector256Int64(System.Runtime.Intrinsics.Vector128<System.UInt16> value) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Int64> ConvertToVector256Int64(System.Byte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Int64> ConvertToVector256Int64(int* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Int64> ConvertToVector256Int64(System.SByte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Int64> ConvertToVector256Int64(System.Int16* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Int64> ConvertToVector256Int64(System.UInt32* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Int64> ConvertToVector256Int64(System.UInt16* address) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> ExtractVector128(System.Runtime.Intrinsics.Vector256<System.Byte> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ExtractVector128(System.Runtime.Intrinsics.Vector256<int> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ExtractVector128(System.Runtime.Intrinsics.Vector256<System.Int64> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ExtractVector128(System.Runtime.Intrinsics.Vector256<System.SByte> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ExtractVector128(System.Runtime.Intrinsics.Vector256<System.Int16> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ExtractVector128(System.Runtime.Intrinsics.Vector256<System.UInt32> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ExtractVector128(System.Runtime.Intrinsics.Vector256<System.UInt64> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ExtractVector128(System.Runtime.Intrinsics.Vector256<System.UInt16> value, System.Byte index) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<double> GatherMaskVector128(System.Runtime.Intrinsics.Vector128<double> source, double* baseAddress, System.Runtime.Intrinsics.Vector128<int> index, System.Runtime.Intrinsics.Vector128<double> mask, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<double> GatherMaskVector128(System.Runtime.Intrinsics.Vector128<double> source, double* baseAddress, System.Runtime.Intrinsics.Vector128<System.Int64> index, System.Runtime.Intrinsics.Vector128<double> mask, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<float> GatherMaskVector128(System.Runtime.Intrinsics.Vector128<float> source, float* baseAddress, System.Runtime.Intrinsics.Vector128<int> index, System.Runtime.Intrinsics.Vector128<float> mask, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<float> GatherMaskVector128(System.Runtime.Intrinsics.Vector128<float> source, float* baseAddress, System.Runtime.Intrinsics.Vector128<System.Int64> index, System.Runtime.Intrinsics.Vector128<float> mask, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<float> GatherMaskVector128(System.Runtime.Intrinsics.Vector128<float> source, float* baseAddress, System.Runtime.Intrinsics.Vector256<System.Int64> index, System.Runtime.Intrinsics.Vector128<float> mask, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<int> GatherMaskVector128(System.Runtime.Intrinsics.Vector128<int> source, int* baseAddress, System.Runtime.Intrinsics.Vector128<int> index, System.Runtime.Intrinsics.Vector128<int> mask, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<int> GatherMaskVector128(System.Runtime.Intrinsics.Vector128<int> source, int* baseAddress, System.Runtime.Intrinsics.Vector128<System.Int64> index, System.Runtime.Intrinsics.Vector128<int> mask, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<int> GatherMaskVector128(System.Runtime.Intrinsics.Vector128<int> source, int* baseAddress, System.Runtime.Intrinsics.Vector256<System.Int64> index, System.Runtime.Intrinsics.Vector128<int> mask, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Int64> GatherMaskVector128(System.Runtime.Intrinsics.Vector128<System.Int64> source, System.Int64* baseAddress, System.Runtime.Intrinsics.Vector128<int> index, System.Runtime.Intrinsics.Vector128<System.Int64> mask, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Int64> GatherMaskVector128(System.Runtime.Intrinsics.Vector128<System.Int64> source, System.Int64* baseAddress, System.Runtime.Intrinsics.Vector128<System.Int64> index, System.Runtime.Intrinsics.Vector128<System.Int64> mask, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt32> GatherMaskVector128(System.Runtime.Intrinsics.Vector128<System.UInt32> source, System.UInt32* baseAddress, System.Runtime.Intrinsics.Vector128<int> index, System.Runtime.Intrinsics.Vector128<System.UInt32> mask, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt32> GatherMaskVector128(System.Runtime.Intrinsics.Vector128<System.UInt32> source, System.UInt32* baseAddress, System.Runtime.Intrinsics.Vector128<System.Int64> index, System.Runtime.Intrinsics.Vector128<System.UInt32> mask, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt32> GatherMaskVector128(System.Runtime.Intrinsics.Vector128<System.UInt32> source, System.UInt32* baseAddress, System.Runtime.Intrinsics.Vector256<System.Int64> index, System.Runtime.Intrinsics.Vector128<System.UInt32> mask, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt64> GatherMaskVector128(System.Runtime.Intrinsics.Vector128<System.UInt64> source, System.UInt64* baseAddress, System.Runtime.Intrinsics.Vector128<int> index, System.Runtime.Intrinsics.Vector128<System.UInt64> mask, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt64> GatherMaskVector128(System.Runtime.Intrinsics.Vector128<System.UInt64> source, System.UInt64* baseAddress, System.Runtime.Intrinsics.Vector128<System.Int64> index, System.Runtime.Intrinsics.Vector128<System.UInt64> mask, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<double> GatherMaskVector256(System.Runtime.Intrinsics.Vector256<double> source, double* baseAddress, System.Runtime.Intrinsics.Vector128<int> index, System.Runtime.Intrinsics.Vector256<double> mask, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<double> GatherMaskVector256(System.Runtime.Intrinsics.Vector256<double> source, double* baseAddress, System.Runtime.Intrinsics.Vector256<System.Int64> index, System.Runtime.Intrinsics.Vector256<double> mask, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<float> GatherMaskVector256(System.Runtime.Intrinsics.Vector256<float> source, float* baseAddress, System.Runtime.Intrinsics.Vector256<int> index, System.Runtime.Intrinsics.Vector256<float> mask, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<int> GatherMaskVector256(System.Runtime.Intrinsics.Vector256<int> source, int* baseAddress, System.Runtime.Intrinsics.Vector256<int> index, System.Runtime.Intrinsics.Vector256<int> mask, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Int64> GatherMaskVector256(System.Runtime.Intrinsics.Vector256<System.Int64> source, System.Int64* baseAddress, System.Runtime.Intrinsics.Vector128<int> index, System.Runtime.Intrinsics.Vector256<System.Int64> mask, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Int64> GatherMaskVector256(System.Runtime.Intrinsics.Vector256<System.Int64> source, System.Int64* baseAddress, System.Runtime.Intrinsics.Vector256<System.Int64> index, System.Runtime.Intrinsics.Vector256<System.Int64> mask, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.UInt32> GatherMaskVector256(System.Runtime.Intrinsics.Vector256<System.UInt32> source, System.UInt32* baseAddress, System.Runtime.Intrinsics.Vector256<int> index, System.Runtime.Intrinsics.Vector256<System.UInt32> mask, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.UInt64> GatherMaskVector256(System.Runtime.Intrinsics.Vector256<System.UInt64> source, System.UInt64* baseAddress, System.Runtime.Intrinsics.Vector128<int> index, System.Runtime.Intrinsics.Vector256<System.UInt64> mask, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.UInt64> GatherMaskVector256(System.Runtime.Intrinsics.Vector256<System.UInt64> source, System.UInt64* baseAddress, System.Runtime.Intrinsics.Vector256<System.Int64> index, System.Runtime.Intrinsics.Vector256<System.UInt64> mask, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<double> GatherVector128(double* baseAddress, System.Runtime.Intrinsics.Vector128<int> index, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<double> GatherVector128(double* baseAddress, System.Runtime.Intrinsics.Vector128<System.Int64> index, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<float> GatherVector128(float* baseAddress, System.Runtime.Intrinsics.Vector128<int> index, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<float> GatherVector128(float* baseAddress, System.Runtime.Intrinsics.Vector128<System.Int64> index, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<float> GatherVector128(float* baseAddress, System.Runtime.Intrinsics.Vector256<System.Int64> index, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<int> GatherVector128(int* baseAddress, System.Runtime.Intrinsics.Vector128<int> index, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<int> GatherVector128(int* baseAddress, System.Runtime.Intrinsics.Vector128<System.Int64> index, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<int> GatherVector128(int* baseAddress, System.Runtime.Intrinsics.Vector256<System.Int64> index, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Int64> GatherVector128(System.Int64* baseAddress, System.Runtime.Intrinsics.Vector128<int> index, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Int64> GatherVector128(System.Int64* baseAddress, System.Runtime.Intrinsics.Vector128<System.Int64> index, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt32> GatherVector128(System.UInt32* baseAddress, System.Runtime.Intrinsics.Vector128<int> index, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt32> GatherVector128(System.UInt32* baseAddress, System.Runtime.Intrinsics.Vector128<System.Int64> index, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt32> GatherVector128(System.UInt32* baseAddress, System.Runtime.Intrinsics.Vector256<System.Int64> index, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt64> GatherVector128(System.UInt64* baseAddress, System.Runtime.Intrinsics.Vector128<int> index, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt64> GatherVector128(System.UInt64* baseAddress, System.Runtime.Intrinsics.Vector128<System.Int64> index, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<double> GatherVector256(double* baseAddress, System.Runtime.Intrinsics.Vector128<int> index, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<double> GatherVector256(double* baseAddress, System.Runtime.Intrinsics.Vector256<System.Int64> index, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<float> GatherVector256(float* baseAddress, System.Runtime.Intrinsics.Vector256<int> index, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<int> GatherVector256(int* baseAddress, System.Runtime.Intrinsics.Vector256<int> index, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Int64> GatherVector256(System.Int64* baseAddress, System.Runtime.Intrinsics.Vector128<int> index, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Int64> GatherVector256(System.Int64* baseAddress, System.Runtime.Intrinsics.Vector256<System.Int64> index, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.UInt32> GatherVector256(System.UInt32* baseAddress, System.Runtime.Intrinsics.Vector256<int> index, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.UInt64> GatherVector256(System.UInt64* baseAddress, System.Runtime.Intrinsics.Vector128<int> index, System.Byte scale) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.UInt64> GatherVector256(System.UInt64* baseAddress, System.Runtime.Intrinsics.Vector256<System.Int64> index, System.Byte scale) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> HorizontalAdd(System.Runtime.Intrinsics.Vector256<int> left, System.Runtime.Intrinsics.Vector256<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> HorizontalAdd(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> HorizontalAddSaturate(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> HorizontalSubtract(System.Runtime.Intrinsics.Vector256<int> left, System.Runtime.Intrinsics.Vector256<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> HorizontalSubtract(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> HorizontalSubtractSaturate(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Byte> InsertVector128(System.Runtime.Intrinsics.Vector256<System.Byte> value, System.Runtime.Intrinsics.Vector128<System.Byte> data, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> InsertVector128(System.Runtime.Intrinsics.Vector256<int> value, System.Runtime.Intrinsics.Vector128<int> data, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> InsertVector128(System.Runtime.Intrinsics.Vector256<System.Int64> value, System.Runtime.Intrinsics.Vector128<System.Int64> data, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.SByte> InsertVector128(System.Runtime.Intrinsics.Vector256<System.SByte> value, System.Runtime.Intrinsics.Vector128<System.SByte> data, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> InsertVector128(System.Runtime.Intrinsics.Vector256<System.Int16> value, System.Runtime.Intrinsics.Vector128<System.Int16> data, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> InsertVector128(System.Runtime.Intrinsics.Vector256<System.UInt32> value, System.Runtime.Intrinsics.Vector128<System.UInt32> data, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt64> InsertVector128(System.Runtime.Intrinsics.Vector256<System.UInt64> value, System.Runtime.Intrinsics.Vector128<System.UInt64> data, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> InsertVector128(System.Runtime.Intrinsics.Vector256<System.UInt16> value, System.Runtime.Intrinsics.Vector128<System.UInt16> data, System.Byte index) => throw null;
                    public static bool IsSupported { get => throw null; }
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Byte> LoadAlignedVector256NonTemporal(System.Byte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<int> LoadAlignedVector256NonTemporal(int* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Int64> LoadAlignedVector256NonTemporal(System.Int64* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.SByte> LoadAlignedVector256NonTemporal(System.SByte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Int16> LoadAlignedVector256NonTemporal(System.Int16* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.UInt32> LoadAlignedVector256NonTemporal(System.UInt32* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.UInt64> LoadAlignedVector256NonTemporal(System.UInt64* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.UInt16> LoadAlignedVector256NonTemporal(System.UInt16* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<int> MaskLoad(int* address, System.Runtime.Intrinsics.Vector128<int> mask) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<int> MaskLoad(int* address, System.Runtime.Intrinsics.Vector256<int> mask) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Int64> MaskLoad(System.Int64* address, System.Runtime.Intrinsics.Vector128<System.Int64> mask) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.Int64> MaskLoad(System.Int64* address, System.Runtime.Intrinsics.Vector256<System.Int64> mask) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt32> MaskLoad(System.UInt32* address, System.Runtime.Intrinsics.Vector128<System.UInt32> mask) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.UInt32> MaskLoad(System.UInt32* address, System.Runtime.Intrinsics.Vector256<System.UInt32> mask) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt64> MaskLoad(System.UInt64* address, System.Runtime.Intrinsics.Vector128<System.UInt64> mask) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector256<System.UInt64> MaskLoad(System.UInt64* address, System.Runtime.Intrinsics.Vector256<System.UInt64> mask) => throw null;
                    unsafe public static void MaskStore(int* address, System.Runtime.Intrinsics.Vector128<int> mask, System.Runtime.Intrinsics.Vector128<int> source) => throw null;
                    unsafe public static void MaskStore(int* address, System.Runtime.Intrinsics.Vector256<int> mask, System.Runtime.Intrinsics.Vector256<int> source) => throw null;
                    unsafe public static void MaskStore(System.Int64* address, System.Runtime.Intrinsics.Vector128<System.Int64> mask, System.Runtime.Intrinsics.Vector128<System.Int64> source) => throw null;
                    unsafe public static void MaskStore(System.Int64* address, System.Runtime.Intrinsics.Vector256<System.Int64> mask, System.Runtime.Intrinsics.Vector256<System.Int64> source) => throw null;
                    unsafe public static void MaskStore(System.UInt32* address, System.Runtime.Intrinsics.Vector128<System.UInt32> mask, System.Runtime.Intrinsics.Vector128<System.UInt32> source) => throw null;
                    unsafe public static void MaskStore(System.UInt32* address, System.Runtime.Intrinsics.Vector256<System.UInt32> mask, System.Runtime.Intrinsics.Vector256<System.UInt32> source) => throw null;
                    unsafe public static void MaskStore(System.UInt64* address, System.Runtime.Intrinsics.Vector128<System.UInt64> mask, System.Runtime.Intrinsics.Vector128<System.UInt64> source) => throw null;
                    unsafe public static void MaskStore(System.UInt64* address, System.Runtime.Intrinsics.Vector256<System.UInt64> mask, System.Runtime.Intrinsics.Vector256<System.UInt64> source) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Byte> Max(System.Runtime.Intrinsics.Vector256<System.Byte> left, System.Runtime.Intrinsics.Vector256<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> Max(System.Runtime.Intrinsics.Vector256<int> left, System.Runtime.Intrinsics.Vector256<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.SByte> Max(System.Runtime.Intrinsics.Vector256<System.SByte> left, System.Runtime.Intrinsics.Vector256<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> Max(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> Max(System.Runtime.Intrinsics.Vector256<System.UInt32> left, System.Runtime.Intrinsics.Vector256<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> Max(System.Runtime.Intrinsics.Vector256<System.UInt16> left, System.Runtime.Intrinsics.Vector256<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Byte> Min(System.Runtime.Intrinsics.Vector256<System.Byte> left, System.Runtime.Intrinsics.Vector256<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> Min(System.Runtime.Intrinsics.Vector256<int> left, System.Runtime.Intrinsics.Vector256<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.SByte> Min(System.Runtime.Intrinsics.Vector256<System.SByte> left, System.Runtime.Intrinsics.Vector256<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> Min(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> Min(System.Runtime.Intrinsics.Vector256<System.UInt32> left, System.Runtime.Intrinsics.Vector256<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> Min(System.Runtime.Intrinsics.Vector256<System.UInt16> left, System.Runtime.Intrinsics.Vector256<System.UInt16> right) => throw null;
                    public static int MoveMask(System.Runtime.Intrinsics.Vector256<System.Byte> value) => throw null;
                    public static int MoveMask(System.Runtime.Intrinsics.Vector256<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> MultipleSumAbsoluteDifferences(System.Runtime.Intrinsics.Vector256<System.Byte> left, System.Runtime.Intrinsics.Vector256<System.Byte> right, System.Byte mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> Multiply(System.Runtime.Intrinsics.Vector256<int> left, System.Runtime.Intrinsics.Vector256<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt64> Multiply(System.Runtime.Intrinsics.Vector256<System.UInt32> left, System.Runtime.Intrinsics.Vector256<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> MultiplyAddAdjacent(System.Runtime.Intrinsics.Vector256<System.Byte> left, System.Runtime.Intrinsics.Vector256<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> MultiplyAddAdjacent(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> MultiplyHigh(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> MultiplyHigh(System.Runtime.Intrinsics.Vector256<System.UInt16> left, System.Runtime.Intrinsics.Vector256<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> MultiplyHighRoundScale(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> MultiplyLow(System.Runtime.Intrinsics.Vector256<int> left, System.Runtime.Intrinsics.Vector256<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> MultiplyLow(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> MultiplyLow(System.Runtime.Intrinsics.Vector256<System.UInt32> left, System.Runtime.Intrinsics.Vector256<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> MultiplyLow(System.Runtime.Intrinsics.Vector256<System.UInt16> left, System.Runtime.Intrinsics.Vector256<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Byte> Or(System.Runtime.Intrinsics.Vector256<System.Byte> left, System.Runtime.Intrinsics.Vector256<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> Or(System.Runtime.Intrinsics.Vector256<int> left, System.Runtime.Intrinsics.Vector256<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> Or(System.Runtime.Intrinsics.Vector256<System.Int64> left, System.Runtime.Intrinsics.Vector256<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.SByte> Or(System.Runtime.Intrinsics.Vector256<System.SByte> left, System.Runtime.Intrinsics.Vector256<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> Or(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> Or(System.Runtime.Intrinsics.Vector256<System.UInt32> left, System.Runtime.Intrinsics.Vector256<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt64> Or(System.Runtime.Intrinsics.Vector256<System.UInt64> left, System.Runtime.Intrinsics.Vector256<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> Or(System.Runtime.Intrinsics.Vector256<System.UInt16> left, System.Runtime.Intrinsics.Vector256<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> PackSignedSaturate(System.Runtime.Intrinsics.Vector256<int> left, System.Runtime.Intrinsics.Vector256<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.SByte> PackSignedSaturate(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> PackUnsignedSaturate(System.Runtime.Intrinsics.Vector256<int> left, System.Runtime.Intrinsics.Vector256<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Byte> PackUnsignedSaturate(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Byte> Permute2x128(System.Runtime.Intrinsics.Vector256<System.Byte> left, System.Runtime.Intrinsics.Vector256<System.Byte> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> Permute2x128(System.Runtime.Intrinsics.Vector256<int> left, System.Runtime.Intrinsics.Vector256<int> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> Permute2x128(System.Runtime.Intrinsics.Vector256<System.Int64> left, System.Runtime.Intrinsics.Vector256<System.Int64> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.SByte> Permute2x128(System.Runtime.Intrinsics.Vector256<System.SByte> left, System.Runtime.Intrinsics.Vector256<System.SByte> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> Permute2x128(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> Permute2x128(System.Runtime.Intrinsics.Vector256<System.UInt32> left, System.Runtime.Intrinsics.Vector256<System.UInt32> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt64> Permute2x128(System.Runtime.Intrinsics.Vector256<System.UInt64> left, System.Runtime.Intrinsics.Vector256<System.UInt64> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> Permute2x128(System.Runtime.Intrinsics.Vector256<System.UInt16> left, System.Runtime.Intrinsics.Vector256<System.UInt16> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> Permute4x64(System.Runtime.Intrinsics.Vector256<double> value, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> Permute4x64(System.Runtime.Intrinsics.Vector256<System.Int64> value, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt64> Permute4x64(System.Runtime.Intrinsics.Vector256<System.UInt64> value, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> PermuteVar8x32(System.Runtime.Intrinsics.Vector256<float> left, System.Runtime.Intrinsics.Vector256<int> control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> PermuteVar8x32(System.Runtime.Intrinsics.Vector256<int> left, System.Runtime.Intrinsics.Vector256<int> control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> PermuteVar8x32(System.Runtime.Intrinsics.Vector256<System.UInt32> left, System.Runtime.Intrinsics.Vector256<System.UInt32> control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> ShiftLeftLogical(System.Runtime.Intrinsics.Vector256<int> value, System.Runtime.Intrinsics.Vector128<int> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> ShiftLeftLogical(System.Runtime.Intrinsics.Vector256<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> ShiftLeftLogical(System.Runtime.Intrinsics.Vector256<System.Int64> value, System.Runtime.Intrinsics.Vector128<System.Int64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> ShiftLeftLogical(System.Runtime.Intrinsics.Vector256<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> ShiftLeftLogical(System.Runtime.Intrinsics.Vector256<System.Int16> value, System.Runtime.Intrinsics.Vector128<System.Int16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> ShiftLeftLogical(System.Runtime.Intrinsics.Vector256<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> ShiftLeftLogical(System.Runtime.Intrinsics.Vector256<System.UInt32> value, System.Runtime.Intrinsics.Vector128<System.UInt32> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> ShiftLeftLogical(System.Runtime.Intrinsics.Vector256<System.UInt32> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt64> ShiftLeftLogical(System.Runtime.Intrinsics.Vector256<System.UInt64> value, System.Runtime.Intrinsics.Vector128<System.UInt64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt64> ShiftLeftLogical(System.Runtime.Intrinsics.Vector256<System.UInt64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> ShiftLeftLogical(System.Runtime.Intrinsics.Vector256<System.UInt16> value, System.Runtime.Intrinsics.Vector128<System.UInt16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> ShiftLeftLogical(System.Runtime.Intrinsics.Vector256<System.UInt16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Byte> ShiftLeftLogical128BitLane(System.Runtime.Intrinsics.Vector256<System.Byte> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> ShiftLeftLogical128BitLane(System.Runtime.Intrinsics.Vector256<int> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> ShiftLeftLogical128BitLane(System.Runtime.Intrinsics.Vector256<System.Int64> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.SByte> ShiftLeftLogical128BitLane(System.Runtime.Intrinsics.Vector256<System.SByte> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> ShiftLeftLogical128BitLane(System.Runtime.Intrinsics.Vector256<System.Int16> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> ShiftLeftLogical128BitLane(System.Runtime.Intrinsics.Vector256<System.UInt32> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt64> ShiftLeftLogical128BitLane(System.Runtime.Intrinsics.Vector256<System.UInt64> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> ShiftLeftLogical128BitLane(System.Runtime.Intrinsics.Vector256<System.UInt16> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftLeftLogicalVariable(System.Runtime.Intrinsics.Vector128<int> value, System.Runtime.Intrinsics.Vector128<System.UInt32> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ShiftLeftLogicalVariable(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Runtime.Intrinsics.Vector128<System.UInt64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ShiftLeftLogicalVariable(System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Runtime.Intrinsics.Vector128<System.UInt32> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ShiftLeftLogicalVariable(System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Runtime.Intrinsics.Vector128<System.UInt64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> ShiftLeftLogicalVariable(System.Runtime.Intrinsics.Vector256<int> value, System.Runtime.Intrinsics.Vector256<System.UInt32> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> ShiftLeftLogicalVariable(System.Runtime.Intrinsics.Vector256<System.Int64> value, System.Runtime.Intrinsics.Vector256<System.UInt64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> ShiftLeftLogicalVariable(System.Runtime.Intrinsics.Vector256<System.UInt32> value, System.Runtime.Intrinsics.Vector256<System.UInt32> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt64> ShiftLeftLogicalVariable(System.Runtime.Intrinsics.Vector256<System.UInt64> value, System.Runtime.Intrinsics.Vector256<System.UInt64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> ShiftRightArithmetic(System.Runtime.Intrinsics.Vector256<int> value, System.Runtime.Intrinsics.Vector128<int> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> ShiftRightArithmetic(System.Runtime.Intrinsics.Vector256<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> ShiftRightArithmetic(System.Runtime.Intrinsics.Vector256<System.Int16> value, System.Runtime.Intrinsics.Vector128<System.Int16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> ShiftRightArithmetic(System.Runtime.Intrinsics.Vector256<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftRightArithmeticVariable(System.Runtime.Intrinsics.Vector128<int> value, System.Runtime.Intrinsics.Vector128<System.UInt32> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> ShiftRightArithmeticVariable(System.Runtime.Intrinsics.Vector256<int> value, System.Runtime.Intrinsics.Vector256<System.UInt32> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> ShiftRightLogical(System.Runtime.Intrinsics.Vector256<int> value, System.Runtime.Intrinsics.Vector128<int> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> ShiftRightLogical(System.Runtime.Intrinsics.Vector256<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> ShiftRightLogical(System.Runtime.Intrinsics.Vector256<System.Int64> value, System.Runtime.Intrinsics.Vector128<System.Int64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> ShiftRightLogical(System.Runtime.Intrinsics.Vector256<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> ShiftRightLogical(System.Runtime.Intrinsics.Vector256<System.Int16> value, System.Runtime.Intrinsics.Vector128<System.Int16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> ShiftRightLogical(System.Runtime.Intrinsics.Vector256<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> ShiftRightLogical(System.Runtime.Intrinsics.Vector256<System.UInt32> value, System.Runtime.Intrinsics.Vector128<System.UInt32> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> ShiftRightLogical(System.Runtime.Intrinsics.Vector256<System.UInt32> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt64> ShiftRightLogical(System.Runtime.Intrinsics.Vector256<System.UInt64> value, System.Runtime.Intrinsics.Vector128<System.UInt64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt64> ShiftRightLogical(System.Runtime.Intrinsics.Vector256<System.UInt64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> ShiftRightLogical(System.Runtime.Intrinsics.Vector256<System.UInt16> value, System.Runtime.Intrinsics.Vector128<System.UInt16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> ShiftRightLogical(System.Runtime.Intrinsics.Vector256<System.UInt16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Byte> ShiftRightLogical128BitLane(System.Runtime.Intrinsics.Vector256<System.Byte> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> ShiftRightLogical128BitLane(System.Runtime.Intrinsics.Vector256<int> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> ShiftRightLogical128BitLane(System.Runtime.Intrinsics.Vector256<System.Int64> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.SByte> ShiftRightLogical128BitLane(System.Runtime.Intrinsics.Vector256<System.SByte> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> ShiftRightLogical128BitLane(System.Runtime.Intrinsics.Vector256<System.Int16> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> ShiftRightLogical128BitLane(System.Runtime.Intrinsics.Vector256<System.UInt32> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt64> ShiftRightLogical128BitLane(System.Runtime.Intrinsics.Vector256<System.UInt64> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> ShiftRightLogical128BitLane(System.Runtime.Intrinsics.Vector256<System.UInt16> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftRightLogicalVariable(System.Runtime.Intrinsics.Vector128<int> value, System.Runtime.Intrinsics.Vector128<System.UInt32> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ShiftRightLogicalVariable(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Runtime.Intrinsics.Vector128<System.UInt64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ShiftRightLogicalVariable(System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Runtime.Intrinsics.Vector128<System.UInt32> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ShiftRightLogicalVariable(System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Runtime.Intrinsics.Vector128<System.UInt64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> ShiftRightLogicalVariable(System.Runtime.Intrinsics.Vector256<int> value, System.Runtime.Intrinsics.Vector256<System.UInt32> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> ShiftRightLogicalVariable(System.Runtime.Intrinsics.Vector256<System.Int64> value, System.Runtime.Intrinsics.Vector256<System.UInt64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> ShiftRightLogicalVariable(System.Runtime.Intrinsics.Vector256<System.UInt32> value, System.Runtime.Intrinsics.Vector256<System.UInt32> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt64> ShiftRightLogicalVariable(System.Runtime.Intrinsics.Vector256<System.UInt64> value, System.Runtime.Intrinsics.Vector256<System.UInt64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Byte> Shuffle(System.Runtime.Intrinsics.Vector256<System.Byte> value, System.Runtime.Intrinsics.Vector256<System.Byte> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> Shuffle(System.Runtime.Intrinsics.Vector256<int> value, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.SByte> Shuffle(System.Runtime.Intrinsics.Vector256<System.SByte> value, System.Runtime.Intrinsics.Vector256<System.SByte> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> Shuffle(System.Runtime.Intrinsics.Vector256<System.UInt32> value, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> ShuffleHigh(System.Runtime.Intrinsics.Vector256<System.Int16> value, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> ShuffleHigh(System.Runtime.Intrinsics.Vector256<System.UInt16> value, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> ShuffleLow(System.Runtime.Intrinsics.Vector256<System.Int16> value, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> ShuffleLow(System.Runtime.Intrinsics.Vector256<System.UInt16> value, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> Sign(System.Runtime.Intrinsics.Vector256<int> left, System.Runtime.Intrinsics.Vector256<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.SByte> Sign(System.Runtime.Intrinsics.Vector256<System.SByte> left, System.Runtime.Intrinsics.Vector256<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> Sign(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Byte> Subtract(System.Runtime.Intrinsics.Vector256<System.Byte> left, System.Runtime.Intrinsics.Vector256<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> Subtract(System.Runtime.Intrinsics.Vector256<int> left, System.Runtime.Intrinsics.Vector256<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> Subtract(System.Runtime.Intrinsics.Vector256<System.Int64> left, System.Runtime.Intrinsics.Vector256<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.SByte> Subtract(System.Runtime.Intrinsics.Vector256<System.SByte> left, System.Runtime.Intrinsics.Vector256<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> Subtract(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> Subtract(System.Runtime.Intrinsics.Vector256<System.UInt32> left, System.Runtime.Intrinsics.Vector256<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt64> Subtract(System.Runtime.Intrinsics.Vector256<System.UInt64> left, System.Runtime.Intrinsics.Vector256<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> Subtract(System.Runtime.Intrinsics.Vector256<System.UInt16> left, System.Runtime.Intrinsics.Vector256<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Byte> SubtractSaturate(System.Runtime.Intrinsics.Vector256<System.Byte> left, System.Runtime.Intrinsics.Vector256<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.SByte> SubtractSaturate(System.Runtime.Intrinsics.Vector256<System.SByte> left, System.Runtime.Intrinsics.Vector256<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> SubtractSaturate(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> SubtractSaturate(System.Runtime.Intrinsics.Vector256<System.UInt16> left, System.Runtime.Intrinsics.Vector256<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> SumAbsoluteDifferences(System.Runtime.Intrinsics.Vector256<System.Byte> left, System.Runtime.Intrinsics.Vector256<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Byte> UnpackHigh(System.Runtime.Intrinsics.Vector256<System.Byte> left, System.Runtime.Intrinsics.Vector256<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> UnpackHigh(System.Runtime.Intrinsics.Vector256<int> left, System.Runtime.Intrinsics.Vector256<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> UnpackHigh(System.Runtime.Intrinsics.Vector256<System.Int64> left, System.Runtime.Intrinsics.Vector256<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.SByte> UnpackHigh(System.Runtime.Intrinsics.Vector256<System.SByte> left, System.Runtime.Intrinsics.Vector256<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> UnpackHigh(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> UnpackHigh(System.Runtime.Intrinsics.Vector256<System.UInt32> left, System.Runtime.Intrinsics.Vector256<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt64> UnpackHigh(System.Runtime.Intrinsics.Vector256<System.UInt64> left, System.Runtime.Intrinsics.Vector256<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> UnpackHigh(System.Runtime.Intrinsics.Vector256<System.UInt16> left, System.Runtime.Intrinsics.Vector256<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Byte> UnpackLow(System.Runtime.Intrinsics.Vector256<System.Byte> left, System.Runtime.Intrinsics.Vector256<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> UnpackLow(System.Runtime.Intrinsics.Vector256<int> left, System.Runtime.Intrinsics.Vector256<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> UnpackLow(System.Runtime.Intrinsics.Vector256<System.Int64> left, System.Runtime.Intrinsics.Vector256<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.SByte> UnpackLow(System.Runtime.Intrinsics.Vector256<System.SByte> left, System.Runtime.Intrinsics.Vector256<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> UnpackLow(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> UnpackLow(System.Runtime.Intrinsics.Vector256<System.UInt32> left, System.Runtime.Intrinsics.Vector256<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt64> UnpackLow(System.Runtime.Intrinsics.Vector256<System.UInt64> left, System.Runtime.Intrinsics.Vector256<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> UnpackLow(System.Runtime.Intrinsics.Vector256<System.UInt16> left, System.Runtime.Intrinsics.Vector256<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Byte> Xor(System.Runtime.Intrinsics.Vector256<System.Byte> left, System.Runtime.Intrinsics.Vector256<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> Xor(System.Runtime.Intrinsics.Vector256<int> left, System.Runtime.Intrinsics.Vector256<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int64> Xor(System.Runtime.Intrinsics.Vector256<System.Int64> left, System.Runtime.Intrinsics.Vector256<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.SByte> Xor(System.Runtime.Intrinsics.Vector256<System.SByte> left, System.Runtime.Intrinsics.Vector256<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.Int16> Xor(System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt32> Xor(System.Runtime.Intrinsics.Vector256<System.UInt32> left, System.Runtime.Intrinsics.Vector256<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt64> Xor(System.Runtime.Intrinsics.Vector256<System.UInt64> left, System.Runtime.Intrinsics.Vector256<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<System.UInt16> Xor(System.Runtime.Intrinsics.Vector256<System.UInt16> left, System.Runtime.Intrinsics.Vector256<System.UInt16> right) => throw null;
                }

                // Generated from `System.Runtime.Intrinsics.X86.AvxVnni` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                public abstract class AvxVnni : System.Runtime.Intrinsics.X86.Avx2
                {
                    // Generated from `System.Runtime.Intrinsics.X86.AvxVnni+X64` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                    public abstract class X64 : System.Runtime.Intrinsics.X86.Avx2.X64
                    {
                        public static bool IsSupported { get => throw null; }
                    }


                    public static bool IsSupported { get => throw null; }
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyWideningAndAdd(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyWideningAndAdd(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> MultiplyWideningAndAdd(System.Runtime.Intrinsics.Vector256<int> addend, System.Runtime.Intrinsics.Vector256<System.Byte> left, System.Runtime.Intrinsics.Vector256<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> MultiplyWideningAndAdd(System.Runtime.Intrinsics.Vector256<int> addend, System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyWideningAndAddSaturate(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyWideningAndAddSaturate(System.Runtime.Intrinsics.Vector128<int> addend, System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> MultiplyWideningAndAddSaturate(System.Runtime.Intrinsics.Vector256<int> addend, System.Runtime.Intrinsics.Vector256<System.Byte> left, System.Runtime.Intrinsics.Vector256<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<int> MultiplyWideningAndAddSaturate(System.Runtime.Intrinsics.Vector256<int> addend, System.Runtime.Intrinsics.Vector256<System.Int16> left, System.Runtime.Intrinsics.Vector256<System.Int16> right) => throw null;
                }

                // Generated from `System.Runtime.Intrinsics.X86.Bmi1` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                public abstract class Bmi1 : System.Runtime.Intrinsics.X86.X86Base
                {
                    // Generated from `System.Runtime.Intrinsics.X86.Bmi1+X64` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                    public abstract class X64 : System.Runtime.Intrinsics.X86.X86Base.X64
                    {
                        public static System.UInt64 AndNot(System.UInt64 left, System.UInt64 right) => throw null;
                        public static System.UInt64 BitFieldExtract(System.UInt64 value, System.Byte start, System.Byte length) => throw null;
                        public static System.UInt64 BitFieldExtract(System.UInt64 value, System.UInt16 control) => throw null;
                        public static System.UInt64 ExtractLowestSetBit(System.UInt64 value) => throw null;
                        public static System.UInt64 GetMaskUpToLowestSetBit(System.UInt64 value) => throw null;
                        public static bool IsSupported { get => throw null; }
                        public static System.UInt64 ResetLowestSetBit(System.UInt64 value) => throw null;
                        public static System.UInt64 TrailingZeroCount(System.UInt64 value) => throw null;
                    }


                    public static System.UInt32 AndNot(System.UInt32 left, System.UInt32 right) => throw null;
                    public static System.UInt32 BitFieldExtract(System.UInt32 value, System.Byte start, System.Byte length) => throw null;
                    public static System.UInt32 BitFieldExtract(System.UInt32 value, System.UInt16 control) => throw null;
                    public static System.UInt32 ExtractLowestSetBit(System.UInt32 value) => throw null;
                    public static System.UInt32 GetMaskUpToLowestSetBit(System.UInt32 value) => throw null;
                    public static bool IsSupported { get => throw null; }
                    public static System.UInt32 ResetLowestSetBit(System.UInt32 value) => throw null;
                    public static System.UInt32 TrailingZeroCount(System.UInt32 value) => throw null;
                }

                // Generated from `System.Runtime.Intrinsics.X86.Bmi2` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                public abstract class Bmi2 : System.Runtime.Intrinsics.X86.X86Base
                {
                    // Generated from `System.Runtime.Intrinsics.X86.Bmi2+X64` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                    public abstract class X64 : System.Runtime.Intrinsics.X86.X86Base.X64
                    {
                        public static bool IsSupported { get => throw null; }
                        public static System.UInt64 MultiplyNoFlags(System.UInt64 left, System.UInt64 right) => throw null;
                        unsafe public static System.UInt64 MultiplyNoFlags(System.UInt64 left, System.UInt64 right, System.UInt64* low) => throw null;
                        public static System.UInt64 ParallelBitDeposit(System.UInt64 value, System.UInt64 mask) => throw null;
                        public static System.UInt64 ParallelBitExtract(System.UInt64 value, System.UInt64 mask) => throw null;
                        public static System.UInt64 ZeroHighBits(System.UInt64 value, System.UInt64 index) => throw null;
                    }


                    public static bool IsSupported { get => throw null; }
                    public static System.UInt32 MultiplyNoFlags(System.UInt32 left, System.UInt32 right) => throw null;
                    unsafe public static System.UInt32 MultiplyNoFlags(System.UInt32 left, System.UInt32 right, System.UInt32* low) => throw null;
                    public static System.UInt32 ParallelBitDeposit(System.UInt32 value, System.UInt32 mask) => throw null;
                    public static System.UInt32 ParallelBitExtract(System.UInt32 value, System.UInt32 mask) => throw null;
                    public static System.UInt32 ZeroHighBits(System.UInt32 value, System.UInt32 index) => throw null;
                }

                // Generated from `System.Runtime.Intrinsics.X86.FloatComparisonMode` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                public enum FloatComparisonMode : byte
                {
                    OrderedEqualNonSignaling = 0,
                    OrderedEqualSignaling = 16,
                    OrderedFalseNonSignaling = 11,
                    OrderedFalseSignaling = 27,
                    OrderedGreaterThanNonSignaling = 30,
                    OrderedGreaterThanOrEqualNonSignaling = 29,
                    OrderedGreaterThanOrEqualSignaling = 13,
                    OrderedGreaterThanSignaling = 14,
                    OrderedLessThanNonSignaling = 17,
                    OrderedLessThanOrEqualNonSignaling = 18,
                    OrderedLessThanOrEqualSignaling = 2,
                    OrderedLessThanSignaling = 1,
                    OrderedNonSignaling = 7,
                    OrderedNotEqualNonSignaling = 12,
                    OrderedNotEqualSignaling = 28,
                    OrderedSignaling = 23,
                    UnorderedEqualNonSignaling = 8,
                    UnorderedEqualSignaling = 24,
                    UnorderedNonSignaling = 3,
                    UnorderedNotEqualNonSignaling = 4,
                    UnorderedNotEqualSignaling = 20,
                    UnorderedNotGreaterThanNonSignaling = 26,
                    UnorderedNotGreaterThanOrEqualNonSignaling = 25,
                    UnorderedNotGreaterThanOrEqualSignaling = 9,
                    UnorderedNotGreaterThanSignaling = 10,
                    UnorderedNotLessThanNonSignaling = 21,
                    UnorderedNotLessThanOrEqualNonSignaling = 22,
                    UnorderedNotLessThanOrEqualSignaling = 6,
                    UnorderedNotLessThanSignaling = 5,
                    UnorderedSignaling = 19,
                    UnorderedTrueNonSignaling = 15,
                    UnorderedTrueSignaling = 31,
                }

                // Generated from `System.Runtime.Intrinsics.X86.Fma` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                public abstract class Fma : System.Runtime.Intrinsics.X86.Avx
                {
                    // Generated from `System.Runtime.Intrinsics.X86.Fma+X64` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                    public abstract class X64 : System.Runtime.Intrinsics.X86.Avx.X64
                    {
                        public static bool IsSupported { get => throw null; }
                    }


                    public static bool IsSupported { get => throw null; }
                    public static System.Runtime.Intrinsics.Vector128<double> MultiplyAdd(System.Runtime.Intrinsics.Vector128<double> a, System.Runtime.Intrinsics.Vector128<double> b, System.Runtime.Intrinsics.Vector128<double> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> MultiplyAdd(System.Runtime.Intrinsics.Vector128<float> a, System.Runtime.Intrinsics.Vector128<float> b, System.Runtime.Intrinsics.Vector128<float> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> MultiplyAdd(System.Runtime.Intrinsics.Vector256<double> a, System.Runtime.Intrinsics.Vector256<double> b, System.Runtime.Intrinsics.Vector256<double> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> MultiplyAdd(System.Runtime.Intrinsics.Vector256<float> a, System.Runtime.Intrinsics.Vector256<float> b, System.Runtime.Intrinsics.Vector256<float> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> MultiplyAddNegated(System.Runtime.Intrinsics.Vector128<double> a, System.Runtime.Intrinsics.Vector128<double> b, System.Runtime.Intrinsics.Vector128<double> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> MultiplyAddNegated(System.Runtime.Intrinsics.Vector128<float> a, System.Runtime.Intrinsics.Vector128<float> b, System.Runtime.Intrinsics.Vector128<float> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> MultiplyAddNegated(System.Runtime.Intrinsics.Vector256<double> a, System.Runtime.Intrinsics.Vector256<double> b, System.Runtime.Intrinsics.Vector256<double> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> MultiplyAddNegated(System.Runtime.Intrinsics.Vector256<float> a, System.Runtime.Intrinsics.Vector256<float> b, System.Runtime.Intrinsics.Vector256<float> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> MultiplyAddNegatedScalar(System.Runtime.Intrinsics.Vector128<double> a, System.Runtime.Intrinsics.Vector128<double> b, System.Runtime.Intrinsics.Vector128<double> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> MultiplyAddNegatedScalar(System.Runtime.Intrinsics.Vector128<float> a, System.Runtime.Intrinsics.Vector128<float> b, System.Runtime.Intrinsics.Vector128<float> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> MultiplyAddScalar(System.Runtime.Intrinsics.Vector128<double> a, System.Runtime.Intrinsics.Vector128<double> b, System.Runtime.Intrinsics.Vector128<double> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> MultiplyAddScalar(System.Runtime.Intrinsics.Vector128<float> a, System.Runtime.Intrinsics.Vector128<float> b, System.Runtime.Intrinsics.Vector128<float> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> MultiplyAddSubtract(System.Runtime.Intrinsics.Vector128<double> a, System.Runtime.Intrinsics.Vector128<double> b, System.Runtime.Intrinsics.Vector128<double> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> MultiplyAddSubtract(System.Runtime.Intrinsics.Vector128<float> a, System.Runtime.Intrinsics.Vector128<float> b, System.Runtime.Intrinsics.Vector128<float> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> MultiplyAddSubtract(System.Runtime.Intrinsics.Vector256<double> a, System.Runtime.Intrinsics.Vector256<double> b, System.Runtime.Intrinsics.Vector256<double> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> MultiplyAddSubtract(System.Runtime.Intrinsics.Vector256<float> a, System.Runtime.Intrinsics.Vector256<float> b, System.Runtime.Intrinsics.Vector256<float> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> MultiplySubtract(System.Runtime.Intrinsics.Vector128<double> a, System.Runtime.Intrinsics.Vector128<double> b, System.Runtime.Intrinsics.Vector128<double> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> MultiplySubtract(System.Runtime.Intrinsics.Vector128<float> a, System.Runtime.Intrinsics.Vector128<float> b, System.Runtime.Intrinsics.Vector128<float> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> MultiplySubtract(System.Runtime.Intrinsics.Vector256<double> a, System.Runtime.Intrinsics.Vector256<double> b, System.Runtime.Intrinsics.Vector256<double> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> MultiplySubtract(System.Runtime.Intrinsics.Vector256<float> a, System.Runtime.Intrinsics.Vector256<float> b, System.Runtime.Intrinsics.Vector256<float> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> MultiplySubtractAdd(System.Runtime.Intrinsics.Vector128<double> a, System.Runtime.Intrinsics.Vector128<double> b, System.Runtime.Intrinsics.Vector128<double> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> MultiplySubtractAdd(System.Runtime.Intrinsics.Vector128<float> a, System.Runtime.Intrinsics.Vector128<float> b, System.Runtime.Intrinsics.Vector128<float> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> MultiplySubtractAdd(System.Runtime.Intrinsics.Vector256<double> a, System.Runtime.Intrinsics.Vector256<double> b, System.Runtime.Intrinsics.Vector256<double> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> MultiplySubtractAdd(System.Runtime.Intrinsics.Vector256<float> a, System.Runtime.Intrinsics.Vector256<float> b, System.Runtime.Intrinsics.Vector256<float> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> MultiplySubtractNegated(System.Runtime.Intrinsics.Vector128<double> a, System.Runtime.Intrinsics.Vector128<double> b, System.Runtime.Intrinsics.Vector128<double> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> MultiplySubtractNegated(System.Runtime.Intrinsics.Vector128<float> a, System.Runtime.Intrinsics.Vector128<float> b, System.Runtime.Intrinsics.Vector128<float> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<double> MultiplySubtractNegated(System.Runtime.Intrinsics.Vector256<double> a, System.Runtime.Intrinsics.Vector256<double> b, System.Runtime.Intrinsics.Vector256<double> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector256<float> MultiplySubtractNegated(System.Runtime.Intrinsics.Vector256<float> a, System.Runtime.Intrinsics.Vector256<float> b, System.Runtime.Intrinsics.Vector256<float> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> MultiplySubtractNegatedScalar(System.Runtime.Intrinsics.Vector128<double> a, System.Runtime.Intrinsics.Vector128<double> b, System.Runtime.Intrinsics.Vector128<double> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> MultiplySubtractNegatedScalar(System.Runtime.Intrinsics.Vector128<float> a, System.Runtime.Intrinsics.Vector128<float> b, System.Runtime.Intrinsics.Vector128<float> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> MultiplySubtractScalar(System.Runtime.Intrinsics.Vector128<double> a, System.Runtime.Intrinsics.Vector128<double> b, System.Runtime.Intrinsics.Vector128<double> c) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> MultiplySubtractScalar(System.Runtime.Intrinsics.Vector128<float> a, System.Runtime.Intrinsics.Vector128<float> b, System.Runtime.Intrinsics.Vector128<float> c) => throw null;
                }

                // Generated from `System.Runtime.Intrinsics.X86.Lzcnt` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                public abstract class Lzcnt : System.Runtime.Intrinsics.X86.X86Base
                {
                    // Generated from `System.Runtime.Intrinsics.X86.Lzcnt+X64` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                    public abstract class X64 : System.Runtime.Intrinsics.X86.X86Base.X64
                    {
                        public static bool IsSupported { get => throw null; }
                        public static System.UInt64 LeadingZeroCount(System.UInt64 value) => throw null;
                    }


                    public static bool IsSupported { get => throw null; }
                    public static System.UInt32 LeadingZeroCount(System.UInt32 value) => throw null;
                }

                // Generated from `System.Runtime.Intrinsics.X86.Pclmulqdq` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                public abstract class Pclmulqdq : System.Runtime.Intrinsics.X86.Sse2
                {
                    // Generated from `System.Runtime.Intrinsics.X86.Pclmulqdq+X64` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                    public abstract class X64 : System.Runtime.Intrinsics.X86.Sse2.X64
                    {
                        public static bool IsSupported { get => throw null; }
                    }


                    public static System.Runtime.Intrinsics.Vector128<System.Int64> CarrylessMultiply(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> CarrylessMultiply(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right, System.Byte control) => throw null;
                    public static bool IsSupported { get => throw null; }
                }

                // Generated from `System.Runtime.Intrinsics.X86.Popcnt` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                public abstract class Popcnt : System.Runtime.Intrinsics.X86.Sse42
                {
                    // Generated from `System.Runtime.Intrinsics.X86.Popcnt+X64` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                    public abstract class X64 : System.Runtime.Intrinsics.X86.Sse42.X64
                    {
                        public static bool IsSupported { get => throw null; }
                        public static System.UInt64 PopCount(System.UInt64 value) => throw null;
                    }


                    public static bool IsSupported { get => throw null; }
                    public static System.UInt32 PopCount(System.UInt32 value) => throw null;
                }

                // Generated from `System.Runtime.Intrinsics.X86.Sse` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                public abstract class Sse : System.Runtime.Intrinsics.X86.X86Base
                {
                    // Generated from `System.Runtime.Intrinsics.X86.Sse+X64` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                    public abstract class X64 : System.Runtime.Intrinsics.X86.X86Base.X64
                    {
                        public static System.Runtime.Intrinsics.Vector128<float> ConvertScalarToVector128Single(System.Runtime.Intrinsics.Vector128<float> upper, System.Int64 value) => throw null;
                        public static System.Int64 ConvertToInt64(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                        public static System.Int64 ConvertToInt64WithTruncation(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                        public static bool IsSupported { get => throw null; }
                        internal X64() => throw null;
                    }


                    public static System.Runtime.Intrinsics.Vector128<float> Add(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> AddScalar(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> And(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> AndNot(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareEqual(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareGreaterThan(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareGreaterThanOrEqual(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareLessThan(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareLessThanOrEqual(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareNotEqual(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareNotGreaterThan(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareNotGreaterThanOrEqual(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareNotLessThan(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareNotLessThanOrEqual(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareOrdered(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareScalarEqual(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareScalarGreaterThan(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareScalarGreaterThanOrEqual(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareScalarLessThan(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareScalarLessThanOrEqual(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareScalarNotEqual(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareScalarNotGreaterThan(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareScalarNotGreaterThanOrEqual(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareScalarNotLessThan(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareScalarNotLessThanOrEqual(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareScalarOrdered(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static bool CompareScalarOrderedEqual(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static bool CompareScalarOrderedGreaterThan(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static bool CompareScalarOrderedGreaterThanOrEqual(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static bool CompareScalarOrderedLessThan(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static bool CompareScalarOrderedLessThanOrEqual(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static bool CompareScalarOrderedNotEqual(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareScalarUnordered(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static bool CompareScalarUnorderedEqual(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static bool CompareScalarUnorderedGreaterThan(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static bool CompareScalarUnorderedGreaterThanOrEqual(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static bool CompareScalarUnorderedLessThan(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static bool CompareScalarUnorderedLessThanOrEqual(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static bool CompareScalarUnorderedNotEqual(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CompareUnordered(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> ConvertScalarToVector128Single(System.Runtime.Intrinsics.Vector128<float> upper, int value) => throw null;
                    public static int ConvertToInt32(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static int ConvertToInt32WithTruncation(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> Divide(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> DivideScalar(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static bool IsSupported { get => throw null; }
                    unsafe public static System.Runtime.Intrinsics.Vector128<float> LoadAlignedVector128(float* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<float> LoadHigh(System.Runtime.Intrinsics.Vector128<float> lower, float* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<float> LoadLow(System.Runtime.Intrinsics.Vector128<float> upper, float* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<float> LoadScalarVector128(float* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<float> LoadVector128(float* address) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> Max(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> MaxScalar(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> Min(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> MinScalar(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> MoveHighToLow(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> MoveLowToHigh(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static int MoveMask(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> MoveScalar(System.Runtime.Intrinsics.Vector128<float> upper, System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> Multiply(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> MultiplyScalar(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> Or(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    unsafe public static void Prefetch0(void* address) => throw null;
                    unsafe public static void Prefetch1(void* address) => throw null;
                    unsafe public static void Prefetch2(void* address) => throw null;
                    unsafe public static void PrefetchNonTemporal(void* address) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> Reciprocal(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> ReciprocalScalar(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> ReciprocalScalar(System.Runtime.Intrinsics.Vector128<float> upper, System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> ReciprocalSqrt(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> ReciprocalSqrtScalar(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> ReciprocalSqrtScalar(System.Runtime.Intrinsics.Vector128<float> upper, System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> Shuffle(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> Sqrt(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> SqrtScalar(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> SqrtScalar(System.Runtime.Intrinsics.Vector128<float> upper, System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    internal Sse() => throw null;
                    unsafe public static void Store(float* address, System.Runtime.Intrinsics.Vector128<float> source) => throw null;
                    unsafe public static void StoreAligned(float* address, System.Runtime.Intrinsics.Vector128<float> source) => throw null;
                    unsafe public static void StoreAlignedNonTemporal(float* address, System.Runtime.Intrinsics.Vector128<float> source) => throw null;
                    public static void StoreFence() => throw null;
                    unsafe public static void StoreHigh(float* address, System.Runtime.Intrinsics.Vector128<float> source) => throw null;
                    unsafe public static void StoreLow(float* address, System.Runtime.Intrinsics.Vector128<float> source) => throw null;
                    unsafe public static void StoreScalar(float* address, System.Runtime.Intrinsics.Vector128<float> source) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> Subtract(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> SubtractScalar(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> UnpackHigh(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> UnpackLow(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> Xor(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                }

                // Generated from `System.Runtime.Intrinsics.X86.Sse2` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                public abstract class Sse2 : System.Runtime.Intrinsics.X86.Sse
                {
                    // Generated from `System.Runtime.Intrinsics.X86.Sse2+X64` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                    public abstract class X64 : System.Runtime.Intrinsics.X86.Sse.X64
                    {
                        public static System.Runtime.Intrinsics.Vector128<double> ConvertScalarToVector128Double(System.Runtime.Intrinsics.Vector128<double> upper, System.Int64 value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int64> ConvertScalarToVector128Int64(System.Int64 value) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt64> ConvertScalarToVector128UInt64(System.UInt64 value) => throw null;
                        public static System.Int64 ConvertToInt64(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.Int64 ConvertToInt64(System.Runtime.Intrinsics.Vector128<System.Int64> value) => throw null;
                        public static System.Int64 ConvertToInt64WithTruncation(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                        public static System.UInt64 ConvertToUInt64(System.Runtime.Intrinsics.Vector128<System.UInt64> value) => throw null;
                        public static bool IsSupported { get => throw null; }
                        unsafe public static void StoreNonTemporal(System.Int64* address, System.Int64 value) => throw null;
                        unsafe public static void StoreNonTemporal(System.UInt64* address, System.UInt64 value) => throw null;
                        internal X64() => throw null;
                    }


                    public static System.Runtime.Intrinsics.Vector128<System.Byte> Add(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> Add(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> Add(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> Add(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> Add(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> Add(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> Add(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> Add(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> Add(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> AddSaturate(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> AddSaturate(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> AddSaturate(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> AddSaturate(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> AddScalar(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> And(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> And(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> And(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> And(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> And(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> And(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> And(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> And(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> And(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> AndNot(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> AndNot(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> AndNot(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> AndNot(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> AndNot(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> AndNot(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> AndNot(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> AndNot(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> AndNot(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> Average(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> Average(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> CompareEqual(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> CompareEqual(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> CompareEqual(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> CompareEqual(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> CompareEqual(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> CompareEqual(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> CompareEqual(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> CompareGreaterThan(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> CompareGreaterThan(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> CompareGreaterThan(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> CompareGreaterThan(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> CompareGreaterThanOrEqual(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> CompareLessThan(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> CompareLessThan(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> CompareLessThan(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> CompareLessThan(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> CompareLessThanOrEqual(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> CompareNotEqual(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> CompareNotGreaterThan(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> CompareNotGreaterThanOrEqual(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> CompareNotLessThan(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> CompareNotLessThanOrEqual(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> CompareOrdered(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> CompareScalarEqual(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> CompareScalarGreaterThan(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> CompareScalarGreaterThanOrEqual(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> CompareScalarLessThan(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> CompareScalarLessThanOrEqual(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> CompareScalarNotEqual(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> CompareScalarNotGreaterThan(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> CompareScalarNotGreaterThanOrEqual(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> CompareScalarNotLessThan(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> CompareScalarNotLessThanOrEqual(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> CompareScalarOrdered(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static bool CompareScalarOrderedEqual(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static bool CompareScalarOrderedGreaterThan(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static bool CompareScalarOrderedGreaterThanOrEqual(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static bool CompareScalarOrderedLessThan(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static bool CompareScalarOrderedLessThanOrEqual(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static bool CompareScalarOrderedNotEqual(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> CompareScalarUnordered(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static bool CompareScalarUnorderedEqual(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static bool CompareScalarUnorderedGreaterThan(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static bool CompareScalarUnorderedGreaterThanOrEqual(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static bool CompareScalarUnorderedLessThan(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static bool CompareScalarUnorderedLessThanOrEqual(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static bool CompareScalarUnorderedNotEqual(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> CompareUnordered(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> ConvertScalarToVector128Double(System.Runtime.Intrinsics.Vector128<double> upper, System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> ConvertScalarToVector128Double(System.Runtime.Intrinsics.Vector128<double> upper, int value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ConvertScalarToVector128Int32(int value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> ConvertScalarToVector128Single(System.Runtime.Intrinsics.Vector128<float> upper, System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ConvertScalarToVector128UInt32(System.UInt32 value) => throw null;
                    public static int ConvertToInt32(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static int ConvertToInt32(System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                    public static int ConvertToInt32WithTruncation(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.UInt32 ConvertToUInt32(System.Runtime.Intrinsics.Vector128<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> ConvertToVector128Double(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> ConvertToVector128Double(System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ConvertToVector128Int32(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ConvertToVector128Int32(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ConvertToVector128Int32WithTruncation(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ConvertToVector128Int32WithTruncation(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> ConvertToVector128Single(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> ConvertToVector128Single(System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> Divide(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> DivideScalar(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.UInt16 Extract(System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> Insert(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Int16 data, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> Insert(System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.UInt16 data, System.Byte index) => throw null;
                    public static bool IsSupported { get => throw null; }
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Byte> LoadAlignedVector128(System.Byte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<double> LoadAlignedVector128(double* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<int> LoadAlignedVector128(int* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Int64> LoadAlignedVector128(System.Int64* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.SByte> LoadAlignedVector128(System.SByte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Int16> LoadAlignedVector128(System.Int16* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt32> LoadAlignedVector128(System.UInt32* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt64> LoadAlignedVector128(System.UInt64* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt16> LoadAlignedVector128(System.UInt16* address) => throw null;
                    public static void LoadFence() => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<double> LoadHigh(System.Runtime.Intrinsics.Vector128<double> lower, double* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<double> LoadLow(System.Runtime.Intrinsics.Vector128<double> upper, double* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<double> LoadScalarVector128(double* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<int> LoadScalarVector128(int* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Int64> LoadScalarVector128(System.Int64* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt32> LoadScalarVector128(System.UInt32* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt64> LoadScalarVector128(System.UInt64* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Byte> LoadVector128(System.Byte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<double> LoadVector128(double* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<int> LoadVector128(int* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Int64> LoadVector128(System.Int64* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.SByte> LoadVector128(System.SByte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Int16> LoadVector128(System.Int16* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt32> LoadVector128(System.UInt32* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt64> LoadVector128(System.UInt64* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt16> LoadVector128(System.UInt16* address) => throw null;
                    unsafe public static void MaskMove(System.Runtime.Intrinsics.Vector128<System.Byte> source, System.Runtime.Intrinsics.Vector128<System.Byte> mask, System.Byte* address) => throw null;
                    unsafe public static void MaskMove(System.Runtime.Intrinsics.Vector128<System.SByte> source, System.Runtime.Intrinsics.Vector128<System.SByte> mask, System.SByte* address) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> Max(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> Max(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> Max(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> MaxScalar(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static void MemoryFence() => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> Min(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> Min(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> Min(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> MinScalar(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static int MoveMask(System.Runtime.Intrinsics.Vector128<System.Byte> value) => throw null;
                    public static int MoveMask(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static int MoveMask(System.Runtime.Intrinsics.Vector128<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> MoveScalar(System.Runtime.Intrinsics.Vector128<double> upper, System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> MoveScalar(System.Runtime.Intrinsics.Vector128<System.Int64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> MoveScalar(System.Runtime.Intrinsics.Vector128<System.UInt64> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> Multiply(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> Multiply(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyAddAdjacent(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyHigh(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> MultiplyHigh(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyLow(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> MultiplyLow(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> MultiplyScalar(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> Or(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> Or(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> Or(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> Or(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> Or(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> Or(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> Or(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> Or(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> Or(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> PackSignedSaturate(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> PackSignedSaturate(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> PackUnsignedSaturate(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftLeftLogical(System.Runtime.Intrinsics.Vector128<int> value, System.Runtime.Intrinsics.Vector128<int> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftLeftLogical(System.Runtime.Intrinsics.Vector128<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ShiftLeftLogical(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Runtime.Intrinsics.Vector128<System.Int64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ShiftLeftLogical(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftLeftLogical(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Runtime.Intrinsics.Vector128<System.Int16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftLeftLogical(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ShiftLeftLogical(System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Runtime.Intrinsics.Vector128<System.UInt32> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ShiftLeftLogical(System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ShiftLeftLogical(System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Runtime.Intrinsics.Vector128<System.UInt64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ShiftLeftLogical(System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ShiftLeftLogical(System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Runtime.Intrinsics.Vector128<System.UInt16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ShiftLeftLogical(System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> ShiftLeftLogical128BitLane(System.Runtime.Intrinsics.Vector128<System.Byte> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftLeftLogical128BitLane(System.Runtime.Intrinsics.Vector128<int> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ShiftLeftLogical128BitLane(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ShiftLeftLogical128BitLane(System.Runtime.Intrinsics.Vector128<System.SByte> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftLeftLogical128BitLane(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ShiftLeftLogical128BitLane(System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ShiftLeftLogical128BitLane(System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ShiftLeftLogical128BitLane(System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftRightArithmetic(System.Runtime.Intrinsics.Vector128<int> value, System.Runtime.Intrinsics.Vector128<int> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftRightArithmetic(System.Runtime.Intrinsics.Vector128<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftRightArithmetic(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Runtime.Intrinsics.Vector128<System.Int16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftRightArithmetic(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftRightLogical(System.Runtime.Intrinsics.Vector128<int> value, System.Runtime.Intrinsics.Vector128<int> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftRightLogical(System.Runtime.Intrinsics.Vector128<int> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ShiftRightLogical(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Runtime.Intrinsics.Vector128<System.Int64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ShiftRightLogical(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftRightLogical(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Runtime.Intrinsics.Vector128<System.Int16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftRightLogical(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ShiftRightLogical(System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Runtime.Intrinsics.Vector128<System.UInt32> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ShiftRightLogical(System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ShiftRightLogical(System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Runtime.Intrinsics.Vector128<System.UInt64> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ShiftRightLogical(System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ShiftRightLogical(System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Runtime.Intrinsics.Vector128<System.UInt16> count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ShiftRightLogical(System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Byte count) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> ShiftRightLogical128BitLane(System.Runtime.Intrinsics.Vector128<System.Byte> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ShiftRightLogical128BitLane(System.Runtime.Intrinsics.Vector128<int> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ShiftRightLogical128BitLane(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> ShiftRightLogical128BitLane(System.Runtime.Intrinsics.Vector128<System.SByte> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShiftRightLogical128BitLane(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> ShiftRightLogical128BitLane(System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> ShiftRightLogical128BitLane(System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ShiftRightLogical128BitLane(System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Byte numBytes) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> Shuffle(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> Shuffle(System.Runtime.Intrinsics.Vector128<int> value, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> Shuffle(System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShuffleHigh(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ShuffleHigh(System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ShuffleLow(System.Runtime.Intrinsics.Vector128<System.Int16> value, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> ShuffleLow(System.Runtime.Intrinsics.Vector128<System.UInt16> value, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> Sqrt(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> SqrtScalar(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> SqrtScalar(System.Runtime.Intrinsics.Vector128<double> upper, System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    internal Sse2() => throw null;
                    unsafe public static void Store(System.Byte* address, System.Runtime.Intrinsics.Vector128<System.Byte> source) => throw null;
                    unsafe public static void Store(double* address, System.Runtime.Intrinsics.Vector128<double> source) => throw null;
                    unsafe public static void Store(int* address, System.Runtime.Intrinsics.Vector128<int> source) => throw null;
                    unsafe public static void Store(System.Int64* address, System.Runtime.Intrinsics.Vector128<System.Int64> source) => throw null;
                    unsafe public static void Store(System.SByte* address, System.Runtime.Intrinsics.Vector128<System.SByte> source) => throw null;
                    unsafe public static void Store(System.Int16* address, System.Runtime.Intrinsics.Vector128<System.Int16> source) => throw null;
                    unsafe public static void Store(System.UInt32* address, System.Runtime.Intrinsics.Vector128<System.UInt32> source) => throw null;
                    unsafe public static void Store(System.UInt64* address, System.Runtime.Intrinsics.Vector128<System.UInt64> source) => throw null;
                    unsafe public static void Store(System.UInt16* address, System.Runtime.Intrinsics.Vector128<System.UInt16> source) => throw null;
                    unsafe public static void StoreAligned(System.Byte* address, System.Runtime.Intrinsics.Vector128<System.Byte> source) => throw null;
                    unsafe public static void StoreAligned(double* address, System.Runtime.Intrinsics.Vector128<double> source) => throw null;
                    unsafe public static void StoreAligned(int* address, System.Runtime.Intrinsics.Vector128<int> source) => throw null;
                    unsafe public static void StoreAligned(System.Int64* address, System.Runtime.Intrinsics.Vector128<System.Int64> source) => throw null;
                    unsafe public static void StoreAligned(System.SByte* address, System.Runtime.Intrinsics.Vector128<System.SByte> source) => throw null;
                    unsafe public static void StoreAligned(System.Int16* address, System.Runtime.Intrinsics.Vector128<System.Int16> source) => throw null;
                    unsafe public static void StoreAligned(System.UInt32* address, System.Runtime.Intrinsics.Vector128<System.UInt32> source) => throw null;
                    unsafe public static void StoreAligned(System.UInt64* address, System.Runtime.Intrinsics.Vector128<System.UInt64> source) => throw null;
                    unsafe public static void StoreAligned(System.UInt16* address, System.Runtime.Intrinsics.Vector128<System.UInt16> source) => throw null;
                    unsafe public static void StoreAlignedNonTemporal(System.Byte* address, System.Runtime.Intrinsics.Vector128<System.Byte> source) => throw null;
                    unsafe public static void StoreAlignedNonTemporal(double* address, System.Runtime.Intrinsics.Vector128<double> source) => throw null;
                    unsafe public static void StoreAlignedNonTemporal(int* address, System.Runtime.Intrinsics.Vector128<int> source) => throw null;
                    unsafe public static void StoreAlignedNonTemporal(System.Int64* address, System.Runtime.Intrinsics.Vector128<System.Int64> source) => throw null;
                    unsafe public static void StoreAlignedNonTemporal(System.SByte* address, System.Runtime.Intrinsics.Vector128<System.SByte> source) => throw null;
                    unsafe public static void StoreAlignedNonTemporal(System.Int16* address, System.Runtime.Intrinsics.Vector128<System.Int16> source) => throw null;
                    unsafe public static void StoreAlignedNonTemporal(System.UInt32* address, System.Runtime.Intrinsics.Vector128<System.UInt32> source) => throw null;
                    unsafe public static void StoreAlignedNonTemporal(System.UInt64* address, System.Runtime.Intrinsics.Vector128<System.UInt64> source) => throw null;
                    unsafe public static void StoreAlignedNonTemporal(System.UInt16* address, System.Runtime.Intrinsics.Vector128<System.UInt16> source) => throw null;
                    unsafe public static void StoreHigh(double* address, System.Runtime.Intrinsics.Vector128<double> source) => throw null;
                    unsafe public static void StoreLow(double* address, System.Runtime.Intrinsics.Vector128<double> source) => throw null;
                    unsafe public static void StoreNonTemporal(int* address, int value) => throw null;
                    unsafe public static void StoreNonTemporal(System.UInt32* address, System.UInt32 value) => throw null;
                    unsafe public static void StoreScalar(double* address, System.Runtime.Intrinsics.Vector128<double> source) => throw null;
                    unsafe public static void StoreScalar(int* address, System.Runtime.Intrinsics.Vector128<int> source) => throw null;
                    unsafe public static void StoreScalar(System.Int64* address, System.Runtime.Intrinsics.Vector128<System.Int64> source) => throw null;
                    unsafe public static void StoreScalar(System.UInt32* address, System.Runtime.Intrinsics.Vector128<System.UInt32> source) => throw null;
                    unsafe public static void StoreScalar(System.UInt64* address, System.Runtime.Intrinsics.Vector128<System.UInt64> source) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> Subtract(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> Subtract(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> Subtract(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> Subtract(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> Subtract(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> Subtract(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> Subtract(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> Subtract(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> Subtract(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> SubtractSaturate(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> SubtractSaturate(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> SubtractSaturate(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> SubtractSaturate(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> SubtractScalar(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> SumAbsoluteDifferences(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> UnpackHigh(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> UnpackHigh(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> UnpackHigh(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> UnpackHigh(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> UnpackHigh(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> UnpackHigh(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> UnpackHigh(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> UnpackHigh(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> UnpackHigh(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> UnpackLow(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> UnpackLow(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> UnpackLow(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> UnpackLow(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> UnpackLow(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> UnpackLow(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> UnpackLow(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> UnpackLow(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> UnpackLow(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> Xor(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> Xor(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> Xor(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> Xor(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> Xor(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> Xor(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> Xor(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> Xor(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> Xor(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                }

                // Generated from `System.Runtime.Intrinsics.X86.Sse3` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                public abstract class Sse3 : System.Runtime.Intrinsics.X86.Sse2
                {
                    // Generated from `System.Runtime.Intrinsics.X86.Sse3+X64` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                    public abstract class X64 : System.Runtime.Intrinsics.X86.Sse2.X64
                    {
                        public static bool IsSupported { get => throw null; }
                        internal X64() => throw null;
                    }


                    public static System.Runtime.Intrinsics.Vector128<double> AddSubtract(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> AddSubtract(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> HorizontalAdd(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> HorizontalAdd(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> HorizontalSubtract(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> HorizontalSubtract(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right) => throw null;
                    public static bool IsSupported { get => throw null; }
                    unsafe public static System.Runtime.Intrinsics.Vector128<double> LoadAndDuplicateToVector128(double* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Byte> LoadDquVector128(System.Byte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<int> LoadDquVector128(int* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Int64> LoadDquVector128(System.Int64* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.SByte> LoadDquVector128(System.SByte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Int16> LoadDquVector128(System.Int16* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt32> LoadDquVector128(System.UInt32* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt64> LoadDquVector128(System.UInt64* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt16> LoadDquVector128(System.UInt16* address) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> MoveAndDuplicate(System.Runtime.Intrinsics.Vector128<double> source) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> MoveHighAndDuplicate(System.Runtime.Intrinsics.Vector128<float> source) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> MoveLowAndDuplicate(System.Runtime.Intrinsics.Vector128<float> source) => throw null;
                    internal Sse3() => throw null;
                }

                // Generated from `System.Runtime.Intrinsics.X86.Sse41` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                public abstract class Sse41 : System.Runtime.Intrinsics.X86.Ssse3
                {
                    // Generated from `System.Runtime.Intrinsics.X86.Sse41+X64` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                    public abstract class X64 : System.Runtime.Intrinsics.X86.Ssse3.X64
                    {
                        public static System.Int64 Extract(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Byte index) => throw null;
                        public static System.UInt64 Extract(System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.Byte index) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.Int64> Insert(System.Runtime.Intrinsics.Vector128<System.Int64> value, System.Int64 data, System.Byte index) => throw null;
                        public static System.Runtime.Intrinsics.Vector128<System.UInt64> Insert(System.Runtime.Intrinsics.Vector128<System.UInt64> value, System.UInt64 data, System.Byte index) => throw null;
                        public static bool IsSupported { get => throw null; }
                        internal X64() => throw null;
                    }


                    public static System.Runtime.Intrinsics.Vector128<double> Blend(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> Blend(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> Blend(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> Blend(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> BlendVariable(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right, System.Runtime.Intrinsics.Vector128<System.Byte> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> BlendVariable(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right, System.Runtime.Intrinsics.Vector128<double> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> BlendVariable(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right, System.Runtime.Intrinsics.Vector128<float> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> BlendVariable(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Runtime.Intrinsics.Vector128<int> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> BlendVariable(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right, System.Runtime.Intrinsics.Vector128<System.Int64> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> BlendVariable(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right, System.Runtime.Intrinsics.Vector128<System.SByte> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> BlendVariable(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Runtime.Intrinsics.Vector128<System.Int16> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> BlendVariable(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right, System.Runtime.Intrinsics.Vector128<System.UInt32> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> BlendVariable(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right, System.Runtime.Intrinsics.Vector128<System.UInt64> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> BlendVariable(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right, System.Runtime.Intrinsics.Vector128<System.UInt16> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> Ceiling(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> Ceiling(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> CeilingScalar(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> CeilingScalar(System.Runtime.Intrinsics.Vector128<double> upper, System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CeilingScalar(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> CeilingScalar(System.Runtime.Intrinsics.Vector128<float> upper, System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> CompareEqual(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> CompareEqual(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ConvertToVector128Int16(System.Runtime.Intrinsics.Vector128<System.Byte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> ConvertToVector128Int16(System.Runtime.Intrinsics.Vector128<System.SByte> value) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Int16> ConvertToVector128Int16(System.Byte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Int16> ConvertToVector128Int16(System.SByte* address) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ConvertToVector128Int32(System.Runtime.Intrinsics.Vector128<System.Byte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ConvertToVector128Int32(System.Runtime.Intrinsics.Vector128<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ConvertToVector128Int32(System.Runtime.Intrinsics.Vector128<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> ConvertToVector128Int32(System.Runtime.Intrinsics.Vector128<System.UInt16> value) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<int> ConvertToVector128Int32(System.Byte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<int> ConvertToVector128Int32(System.SByte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<int> ConvertToVector128Int32(System.Int16* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<int> ConvertToVector128Int32(System.UInt16* address) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ConvertToVector128Int64(System.Runtime.Intrinsics.Vector128<System.Byte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ConvertToVector128Int64(System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ConvertToVector128Int64(System.Runtime.Intrinsics.Vector128<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ConvertToVector128Int64(System.Runtime.Intrinsics.Vector128<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ConvertToVector128Int64(System.Runtime.Intrinsics.Vector128<System.UInt32> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> ConvertToVector128Int64(System.Runtime.Intrinsics.Vector128<System.UInt16> value) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Int64> ConvertToVector128Int64(System.Byte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Int64> ConvertToVector128Int64(int* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Int64> ConvertToVector128Int64(System.SByte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Int64> ConvertToVector128Int64(System.Int16* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Int64> ConvertToVector128Int64(System.UInt32* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Int64> ConvertToVector128Int64(System.UInt16* address) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> DotProduct(System.Runtime.Intrinsics.Vector128<double> left, System.Runtime.Intrinsics.Vector128<double> right, System.Byte control) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> DotProduct(System.Runtime.Intrinsics.Vector128<float> left, System.Runtime.Intrinsics.Vector128<float> right, System.Byte control) => throw null;
                    public static System.Byte Extract(System.Runtime.Intrinsics.Vector128<System.Byte> value, System.Byte index) => throw null;
                    public static float Extract(System.Runtime.Intrinsics.Vector128<float> value, System.Byte index) => throw null;
                    public static int Extract(System.Runtime.Intrinsics.Vector128<int> value, System.Byte index) => throw null;
                    public static System.UInt32 Extract(System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> Floor(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> Floor(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> FloorScalar(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> FloorScalar(System.Runtime.Intrinsics.Vector128<double> upper, System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> FloorScalar(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> FloorScalar(System.Runtime.Intrinsics.Vector128<float> upper, System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> Insert(System.Runtime.Intrinsics.Vector128<System.Byte> value, System.Byte data, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> Insert(System.Runtime.Intrinsics.Vector128<float> value, System.Runtime.Intrinsics.Vector128<float> data, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> Insert(System.Runtime.Intrinsics.Vector128<int> value, int data, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> Insert(System.Runtime.Intrinsics.Vector128<System.SByte> value, System.SByte data, System.Byte index) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> Insert(System.Runtime.Intrinsics.Vector128<System.UInt32> value, System.UInt32 data, System.Byte index) => throw null;
                    public static bool IsSupported { get => throw null; }
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Byte> LoadAlignedVector128NonTemporal(System.Byte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<int> LoadAlignedVector128NonTemporal(int* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Int64> LoadAlignedVector128NonTemporal(System.Int64* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.SByte> LoadAlignedVector128NonTemporal(System.SByte* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.Int16> LoadAlignedVector128NonTemporal(System.Int16* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt32> LoadAlignedVector128NonTemporal(System.UInt32* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt64> LoadAlignedVector128NonTemporal(System.UInt64* address) => throw null;
                    unsafe public static System.Runtime.Intrinsics.Vector128<System.UInt16> LoadAlignedVector128NonTemporal(System.UInt16* address) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> Max(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> Max(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> Max(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> Max(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> Min(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> Min(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> Min(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> Min(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> MinHorizontal(System.Runtime.Intrinsics.Vector128<System.UInt16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> MultipleSumAbsoluteDifferences(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right, System.Byte mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> Multiply(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> MultiplyLow(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> MultiplyLow(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> PackUnsignedSaturate(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> RoundCurrentDirection(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> RoundCurrentDirection(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> RoundCurrentDirectionScalar(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> RoundCurrentDirectionScalar(System.Runtime.Intrinsics.Vector128<double> upper, System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> RoundCurrentDirectionScalar(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> RoundCurrentDirectionScalar(System.Runtime.Intrinsics.Vector128<float> upper, System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> RoundToNearestInteger(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> RoundToNearestInteger(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> RoundToNearestIntegerScalar(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> RoundToNearestIntegerScalar(System.Runtime.Intrinsics.Vector128<double> upper, System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> RoundToNearestIntegerScalar(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> RoundToNearestIntegerScalar(System.Runtime.Intrinsics.Vector128<float> upper, System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> RoundToNegativeInfinity(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> RoundToNegativeInfinity(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> RoundToNegativeInfinityScalar(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> RoundToNegativeInfinityScalar(System.Runtime.Intrinsics.Vector128<double> upper, System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> RoundToNegativeInfinityScalar(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> RoundToNegativeInfinityScalar(System.Runtime.Intrinsics.Vector128<float> upper, System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> RoundToPositiveInfinity(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> RoundToPositiveInfinity(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> RoundToPositiveInfinityScalar(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> RoundToPositiveInfinityScalar(System.Runtime.Intrinsics.Vector128<double> upper, System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> RoundToPositiveInfinityScalar(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> RoundToPositiveInfinityScalar(System.Runtime.Intrinsics.Vector128<float> upper, System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> RoundToZero(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> RoundToZero(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> RoundToZeroScalar(System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<double> RoundToZeroScalar(System.Runtime.Intrinsics.Vector128<double> upper, System.Runtime.Intrinsics.Vector128<double> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> RoundToZeroScalar(System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<float> RoundToZeroScalar(System.Runtime.Intrinsics.Vector128<float> upper, System.Runtime.Intrinsics.Vector128<float> value) => throw null;
                    internal Sse41() => throw null;
                    public static bool TestC(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static bool TestC(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static bool TestC(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static bool TestC(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static bool TestC(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static bool TestC(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static bool TestC(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                    public static bool TestC(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static bool TestNotZAndNotC(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static bool TestNotZAndNotC(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static bool TestNotZAndNotC(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static bool TestNotZAndNotC(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static bool TestNotZAndNotC(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static bool TestNotZAndNotC(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static bool TestNotZAndNotC(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                    public static bool TestNotZAndNotC(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                    public static bool TestZ(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right) => throw null;
                    public static bool TestZ(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static bool TestZ(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static bool TestZ(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static bool TestZ(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static bool TestZ(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right) => throw null;
                    public static bool TestZ(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right) => throw null;
                    public static bool TestZ(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right) => throw null;
                }

                // Generated from `System.Runtime.Intrinsics.X86.Sse42` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                public abstract class Sse42 : System.Runtime.Intrinsics.X86.Sse41
                {
                    // Generated from `System.Runtime.Intrinsics.X86.Sse42+X64` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                    public abstract class X64 : System.Runtime.Intrinsics.X86.Sse41.X64
                    {
                        public static System.UInt64 Crc32(System.UInt64 crc, System.UInt64 data) => throw null;
                        public static bool IsSupported { get => throw null; }
                        internal X64() => throw null;
                    }


                    public static System.Runtime.Intrinsics.Vector128<System.Int64> CompareGreaterThan(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right) => throw null;
                    public static System.UInt32 Crc32(System.UInt32 crc, System.Byte data) => throw null;
                    public static System.UInt32 Crc32(System.UInt32 crc, System.UInt32 data) => throw null;
                    public static System.UInt32 Crc32(System.UInt32 crc, System.UInt16 data) => throw null;
                    public static bool IsSupported { get => throw null; }
                    internal Sse42() => throw null;
                }

                // Generated from `System.Runtime.Intrinsics.X86.Ssse3` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                public abstract class Ssse3 : System.Runtime.Intrinsics.X86.Sse3
                {
                    // Generated from `System.Runtime.Intrinsics.X86.Ssse3+X64` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                    public abstract class X64 : System.Runtime.Intrinsics.X86.Sse3.X64
                    {
                        public static bool IsSupported { get => throw null; }
                        internal X64() => throw null;
                    }


                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> Abs(System.Runtime.Intrinsics.Vector128<int> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> Abs(System.Runtime.Intrinsics.Vector128<System.SByte> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> Abs(System.Runtime.Intrinsics.Vector128<System.Int16> value) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> AlignRight(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.Byte> right, System.Byte mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> AlignRight(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right, System.Byte mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int64> AlignRight(System.Runtime.Intrinsics.Vector128<System.Int64> left, System.Runtime.Intrinsics.Vector128<System.Int64> right, System.Byte mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> AlignRight(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right, System.Byte mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> AlignRight(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right, System.Byte mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt32> AlignRight(System.Runtime.Intrinsics.Vector128<System.UInt32> left, System.Runtime.Intrinsics.Vector128<System.UInt32> right, System.Byte mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt64> AlignRight(System.Runtime.Intrinsics.Vector128<System.UInt64> left, System.Runtime.Intrinsics.Vector128<System.UInt64> right, System.Byte mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.UInt16> AlignRight(System.Runtime.Intrinsics.Vector128<System.UInt16> left, System.Runtime.Intrinsics.Vector128<System.UInt16> right, System.Byte mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> HorizontalAdd(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> HorizontalAdd(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> HorizontalAddSaturate(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> HorizontalSubtract(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> HorizontalSubtract(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> HorizontalSubtractSaturate(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static bool IsSupported { get => throw null; }
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyAddAdjacent(System.Runtime.Intrinsics.Vector128<System.Byte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> MultiplyHighRoundScale(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Byte> Shuffle(System.Runtime.Intrinsics.Vector128<System.Byte> value, System.Runtime.Intrinsics.Vector128<System.Byte> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> Shuffle(System.Runtime.Intrinsics.Vector128<System.SByte> value, System.Runtime.Intrinsics.Vector128<System.SByte> mask) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<int> Sign(System.Runtime.Intrinsics.Vector128<int> left, System.Runtime.Intrinsics.Vector128<int> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.SByte> Sign(System.Runtime.Intrinsics.Vector128<System.SByte> left, System.Runtime.Intrinsics.Vector128<System.SByte> right) => throw null;
                    public static System.Runtime.Intrinsics.Vector128<System.Int16> Sign(System.Runtime.Intrinsics.Vector128<System.Int16> left, System.Runtime.Intrinsics.Vector128<System.Int16> right) => throw null;
                    internal Ssse3() => throw null;
                }

                // Generated from `System.Runtime.Intrinsics.X86.X86Base` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                public abstract class X86Base
                {
                    // Generated from `System.Runtime.Intrinsics.X86.X86Base+X64` in `System.Runtime.Intrinsics, Version=6.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51`
                    public abstract class X64
                    {
                        public static bool IsSupported { get => throw null; }
                        internal X64() => throw null;
                    }


                    public static (int, int, int, int) CpuId(int functionId, int subFunctionId) => throw null;
                    public static bool IsSupported { get => throw null; }
                    internal X86Base() => throw null;
                }

            }
        }
    }
}
