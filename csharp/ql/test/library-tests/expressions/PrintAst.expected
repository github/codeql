FoldedLiterals.cs:
#    1| [Class] FoldedLiterals
#    3|   5: [Method] Test
#    3|     -1: [TypeMention] Void
#    4|     4: [BlockStmt] {...}
#    6|       0: [LocalVariableDeclStmt] ... ...;
#    6|         0: [LocalVariableDeclAndInitExpr] Boolean b1 = ...
#    6|           -1: [TypeMention] bool
#    6|           0: [LocalVariableAccess] access to local variable b1
#    6|           1: [BoolLiteral] false
#    7|       1: [LocalVariableDeclStmt] ... ...;
#    7|         0: [LocalVariableDeclAndInitExpr] Boolean b2 = ...
#    7|           -1: [TypeMention] bool
#    7|           0: [LocalVariableAccess] access to local variable b2
#    7|           1: [LogicalNotExpr] !...
#    7|             0: [BoolLiteral] false
#   10|       2: [LocalVariableDeclStmt] ... ...;
#   10|         0: [LocalVariableDeclAndInitExpr] Char c0 = ...
#   10|           -1: [TypeMention] char
#   10|           0: [LocalVariableAccess] access to local variable c0
#   10|           1: [CharLiteral]  
#   11|       3: [LocalVariableDeclStmt] ... ...;
#   11|         0: [LocalVariableDeclAndInitExpr] Int32 c1 = ...
#   11|           -1: [TypeMention] int
#   11|           0: [LocalVariableAccess] access to local variable c1
#   11|           1: [UnaryPlusExpr] +...
#   11|             0: [CastExpr] (...) ...
#   11|               1: [CharLiteral]  
#   12|       4: [LocalVariableDeclStmt] ... ...;
#   12|         0: [LocalVariableDeclAndInitExpr] Int32 c2 = ...
#   12|           -1: [TypeMention] int
#   12|           0: [LocalVariableAccess] access to local variable c2
#   12|           1: [UnaryMinusExpr] -...
#   13|             0: [CastExpr] (...) ...
#   13|               1: [CharLiteral]  
#   14|       5: [LocalVariableDeclStmt] ... ...;
#   14|         0: [LocalVariableDeclAndInitExpr] Int32 c3 = ...
#   14|           -1: [TypeMention] int
#   14|           0: [LocalVariableAccess] access to local variable c3
#   14|           1: [ComplementExpr] ~...
#   14|             0: [CastExpr] (...) ...
#   14|               1: [CharLiteral]  
#   15|       6: [LocalVariableDeclStmt] ... ...;
#   15|         0: [LocalVariableDeclAndInitExpr] Char c4 = ...
#   15|           -1: [TypeMention] char
#   15|           0: [LocalVariableAccess] access to local variable c4
#   15|           1: [CharLiteral] \
#   18|       7: [LocalVariableDeclStmt] ... ...;
#   18|         0: [LocalVariableDeclAndInitExpr] SByte sb0 = ...
#   18|           -1: [TypeMention] sbyte
#   18|           0: [LocalVariableAccess] access to local variable sb0
#   18|           1: [CastExpr] (...) ...
#   18|             0: [TypeAccess] access to type SByte
#   18|               0: [TypeMention] sbyte
#   18|             1: [IntLiteral] 1
#   19|       8: [LocalVariableDeclStmt] ... ...;
#   19|         0: [LocalVariableDeclAndInitExpr] Int32 sb1 = ...
#   19|           -1: [TypeMention] int
#   19|           0: [LocalVariableAccess] access to local variable sb1
#   19|           1: [UnaryPlusExpr] +...
#   19|             0: [CastExpr] (...) ...
#   19|               1: [CastExpr] (...) ...
#   19|                 0: [TypeAccess] access to type SByte
#   19|                   0: [TypeMention] sbyte
#   19|                 1: [IntLiteral] 1
#   20|       9: [LocalVariableDeclStmt] ... ...;
#   20|         0: [LocalVariableDeclAndInitExpr] Int32 sb2 = ...
#   20|           -1: [TypeMention] int
#   20|           0: [LocalVariableAccess] access to local variable sb2
#   20|           1: [UnaryMinusExpr] -...
#   20|             0: [CastExpr] (...) ...
#   20|               1: [CastExpr] (...) ...
#   20|                 0: [TypeAccess] access to type SByte
#   20|                   0: [TypeMention] sbyte
#   20|                 1: [IntLiteral] 1
#   21|       10: [LocalVariableDeclStmt] ... ...;
#   21|         0: [LocalVariableDeclAndInitExpr] Int32 sb3 = ...
#   21|           -1: [TypeMention] int
#   21|           0: [LocalVariableAccess] access to local variable sb3
#   21|           1: [ComplementExpr] ~...
#   21|             0: [CastExpr] (...) ...
#   21|               1: [CastExpr] (...) ...
#   21|                 0: [TypeAccess] access to type SByte
#   21|                   0: [TypeMention] sbyte
#   21|                 1: [IntLiteral] 1
#   24|       11: [LocalVariableDeclStmt] ... ...;
#   24|         0: [LocalVariableDeclAndInitExpr] Byte ub0 = ...
#   24|           -1: [TypeMention] byte
#   24|           0: [LocalVariableAccess] access to local variable ub0
#   24|           1: [CastExpr] (...) ...
#   24|             0: [TypeAccess] access to type Byte
#   24|               0: [TypeMention] byte
#   24|             1: [IntLiteral] 2
#   25|       12: [LocalVariableDeclStmt] ... ...;
#   25|         0: [LocalVariableDeclAndInitExpr] Int32 ub1 = ...
#   25|           -1: [TypeMention] int
#   25|           0: [LocalVariableAccess] access to local variable ub1
#   25|           1: [UnaryPlusExpr] +...
#   25|             0: [CastExpr] (...) ...
#   25|               1: [CastExpr] (...) ...
#   25|                 0: [TypeAccess] access to type Byte
#   25|                   0: [TypeMention] byte
#   25|                 1: [IntLiteral] 2
#   26|       13: [LocalVariableDeclStmt] ... ...;
#   26|         0: [LocalVariableDeclAndInitExpr] Int32 ub2 = ...
#   26|           -1: [TypeMention] int
#   26|           0: [LocalVariableAccess] access to local variable ub2
#   26|           1: [UnaryMinusExpr] -...
#   26|             0: [CastExpr] (...) ...
#   26|               1: [CastExpr] (...) ...
#   26|                 0: [TypeAccess] access to type Byte
#   26|                   0: [TypeMention] byte
#   26|                 1: [IntLiteral] 2
#   27|       14: [LocalVariableDeclStmt] ... ...;
#   27|         0: [LocalVariableDeclAndInitExpr] Int32 ub3 = ...
#   27|           -1: [TypeMention] int
#   27|           0: [LocalVariableAccess] access to local variable ub3
#   27|           1: [ComplementExpr] ~...
#   27|             0: [CastExpr] (...) ...
#   27|               1: [CastExpr] (...) ...
#   27|                 0: [TypeAccess] access to type Byte
#   27|                   0: [TypeMention] byte
#   27|                 1: [IntLiteral] 2
#   30|       15: [LocalVariableDeclStmt] ... ...;
#   30|         0: [LocalVariableDeclAndInitExpr] Int16 ss0 = ...
#   30|           -1: [TypeMention] short
#   30|           0: [LocalVariableAccess] access to local variable ss0
#   30|           1: [CastExpr] (...) ...
#   30|             0: [TypeAccess] access to type Int16
#   30|               0: [TypeMention] short
#   30|             1: [IntLiteral] 3
#   31|       16: [LocalVariableDeclStmt] ... ...;
#   31|         0: [LocalVariableDeclAndInitExpr] Int32 ss1 = ...
#   31|           -1: [TypeMention] int
#   31|           0: [LocalVariableAccess] access to local variable ss1
#   31|           1: [UnaryPlusExpr] +...
#   31|             0: [CastExpr] (...) ...
#   31|               1: [CastExpr] (...) ...
#   31|                 0: [TypeAccess] access to type Int16
#   31|                   0: [TypeMention] short
#   31|                 1: [IntLiteral] 3
#   32|       17: [LocalVariableDeclStmt] ... ...;
#   32|         0: [LocalVariableDeclAndInitExpr] Int32 ss2 = ...
#   32|           -1: [TypeMention] int
#   32|           0: [LocalVariableAccess] access to local variable ss2
#   32|           1: [UnaryMinusExpr] -...
#   32|             0: [CastExpr] (...) ...
#   32|               1: [CastExpr] (...) ...
#   32|                 0: [TypeAccess] access to type Int16
#   32|                   0: [TypeMention] short
#   32|                 1: [IntLiteral] 3
#   33|       18: [LocalVariableDeclStmt] ... ...;
#   33|         0: [LocalVariableDeclAndInitExpr] Int32 ss3 = ...
#   33|           -1: [TypeMention] int
#   33|           0: [LocalVariableAccess] access to local variable ss3
#   33|           1: [ComplementExpr] ~...
#   33|             0: [CastExpr] (...) ...
#   33|               1: [CastExpr] (...) ...
#   33|                 0: [TypeAccess] access to type Int16
#   33|                   0: [TypeMention] short
#   33|                 1: [IntLiteral] 3
#   36|       19: [LocalVariableDeclStmt] ... ...;
#   36|         0: [LocalVariableDeclAndInitExpr] UInt16 us0 = ...
#   36|           -1: [TypeMention] ushort
#   36|           0: [LocalVariableAccess] access to local variable us0
#   36|           1: [CastExpr] (...) ...
#   36|             0: [TypeAccess] access to type UInt16
#   36|               0: [TypeMention] ushort
#   36|             1: [IntLiteral] 4
#   37|       20: [LocalVariableDeclStmt] ... ...;
#   37|         0: [LocalVariableDeclAndInitExpr] Int32 us1 = ...
#   37|           -1: [TypeMention] int
#   37|           0: [LocalVariableAccess] access to local variable us1
#   37|           1: [UnaryPlusExpr] +...
#   37|             0: [CastExpr] (...) ...
#   37|               1: [CastExpr] (...) ...
#   37|                 0: [TypeAccess] access to type UInt16
#   37|                   0: [TypeMention] ushort
#   37|                 1: [IntLiteral] 4
#   38|       21: [LocalVariableDeclStmt] ... ...;
#   38|         0: [LocalVariableDeclAndInitExpr] Int32 us2 = ...
#   38|           -1: [TypeMention] int
#   38|           0: [LocalVariableAccess] access to local variable us2
#   38|           1: [UnaryMinusExpr] -...
#   38|             0: [CastExpr] (...) ...
#   38|               1: [CastExpr] (...) ...
#   38|                 0: [TypeAccess] access to type UInt16
#   38|                   0: [TypeMention] ushort
#   38|                 1: [IntLiteral] 4
#   39|       22: [LocalVariableDeclStmt] ... ...;
#   39|         0: [LocalVariableDeclAndInitExpr] Int32 us3 = ...
#   39|           -1: [TypeMention] int
#   39|           0: [LocalVariableAccess] access to local variable us3
#   39|           1: [ComplementExpr] ~...
#   39|             0: [CastExpr] (...) ...
#   39|               1: [CastExpr] (...) ...
#   39|                 0: [TypeAccess] access to type UInt16
#   39|                   0: [TypeMention] ushort
#   39|                 1: [IntLiteral] 4
#   42|       23: [LocalVariableDeclStmt] ... ...;
#   42|         0: [LocalVariableDeclAndInitExpr] Int32 i0 = ...
#   42|           -1: [TypeMention] int
#   42|           0: [LocalVariableAccess] access to local variable i0
#   42|           1: [IntLiteral] 5
#   43|       24: [LocalVariableDeclStmt] ... ...;
#   43|         0: [LocalVariableDeclAndInitExpr] Int32 i1 = ...
#   43|           -1: [TypeMention] int
#   43|           0: [LocalVariableAccess] access to local variable i1
#   43|           1: [UnaryPlusExpr] +...
#   43|             0: [IntLiteral] 5
#   44|       25: [LocalVariableDeclStmt] ... ...;
#   44|         0: [LocalVariableDeclAndInitExpr] Int32 i2 = ...
#   44|           -1: [TypeMention] int
#   44|           0: [LocalVariableAccess] access to local variable i2
#   44|           1: [UnaryMinusExpr] -...
#   44|             0: [IntLiteral] 5
#   45|       26: [LocalVariableDeclStmt] ... ...;
#   45|         0: [LocalVariableDeclAndInitExpr] Int32 i3 = ...
#   45|           -1: [TypeMention] int
#   45|           0: [LocalVariableAccess] access to local variable i3
#   45|           1: [ComplementExpr] ~...
#   45|             0: [IntLiteral] 5
#   48|       27: [LocalVariableDeclStmt] ... ...;
#   48|         0: [LocalVariableDeclAndInitExpr] UInt32 ui0 = ...
#   48|           -1: [TypeMention] uint
#   48|           0: [LocalVariableAccess] access to local variable ui0
#   48|           1: [CastExpr] (...) ...
#   48|             1: [IntLiteral] 6
#   49|       28: [LocalVariableDeclStmt] ... ...;
#   49|         0: [LocalVariableDeclAndInitExpr] Int32 ui1 = ...
#   49|           -1: [TypeMention] int
#   49|           0: [LocalVariableAccess] access to local variable ui1
#   49|           1: [UnaryPlusExpr] +...
#   49|             0: [IntLiteral] 6
#   50|       29: [LocalVariableDeclStmt] ... ...;
#   50|         0: [LocalVariableDeclAndInitExpr] Int32 ui2 = ...
#   50|           -1: [TypeMention] int
#   50|           0: [LocalVariableAccess] access to local variable ui2
#   50|           1: [UnaryMinusExpr] -...
#   50|             0: [IntLiteral] 6
#   51|       30: [LocalVariableDeclStmt] ... ...;
#   51|         0: [LocalVariableDeclAndInitExpr] Int32 ui3 = ...
#   51|           -1: [TypeMention] int
#   51|           0: [LocalVariableAccess] access to local variable ui3
#   51|           1: [ComplementExpr] ~...
#   51|             0: [IntLiteral] 6
#   54|       31: [LocalVariableDeclStmt] ... ...;
#   54|         0: [LocalVariableDeclAndInitExpr] Int64 l0 = ...
#   54|           -1: [TypeMention] long
#   54|           0: [LocalVariableAccess] access to local variable l0
#   54|           1: [LongLiteral] 7
#   55|       32: [LocalVariableDeclStmt] ... ...;
#   55|         0: [LocalVariableDeclAndInitExpr] Int64 l1 = ...
#   55|           -1: [TypeMention] long
#   55|           0: [LocalVariableAccess] access to local variable l1
#   55|           1: [UnaryPlusExpr] +...
#   55|             0: [LongLiteral] 7
#   55|       33: [EmptyStmt] ;
#   56|       34: [LocalVariableDeclStmt] ... ...;
#   56|         0: [LocalVariableDeclAndInitExpr] Int64 l2 = ...
#   56|           -1: [TypeMention] long
#   56|           0: [LocalVariableAccess] access to local variable l2
#   56|           1: [UnaryMinusExpr] -...
#   56|             0: [LongLiteral] 7
#   57|       35: [LocalVariableDeclStmt] ... ...;
#   57|         0: [LocalVariableDeclAndInitExpr] Int64 l3 = ...
#   57|           -1: [TypeMention] long
#   57|           0: [LocalVariableAccess] access to local variable l3
#   57|           1: [ComplementExpr] ~...
#   57|             0: [LongLiteral] 7
#   60|       36: [LocalVariableDeclStmt] ... ...;
#   60|         0: [LocalVariableDeclAndInitExpr] UInt64 ul0 = ...
#   60|           -1: [TypeMention] ulong
#   60|           0: [LocalVariableAccess] access to local variable ul0
#   60|           1: [ULongLiteral] 8
#   61|       37: [LocalVariableDeclStmt] ... ...;
#   61|         0: [LocalVariableDeclAndInitExpr] UInt64 ul1 = ...
#   61|           -1: [TypeMention] ulong
#   61|           0: [LocalVariableAccess] access to local variable ul1
#   61|           1: [UnaryPlusExpr] +...
#   61|             0: [ULongLiteral] 8
#   62|       38: [LocalVariableDeclStmt] ... ...;
#   62|         0: [LocalVariableDeclAndInitExpr] UInt64 ul3 = ...
#   62|           -1: [TypeMention] ulong
#   62|           0: [LocalVariableAccess] access to local variable ul3
#   62|           1: [ComplementExpr] ~...
#   62|             0: [ULongLiteral] 8
#   65|       39: [LocalVariableDeclStmt] ... ...;
#   65|         0: [LocalVariableDeclAndInitExpr] Single f0 = ...
#   65|           -1: [TypeMention] float
#   65|           0: [LocalVariableAccess] access to local variable f0
#   65|           1: [FloatLiteral] 9
#   66|       40: [LocalVariableDeclStmt] ... ...;
#   66|         0: [LocalVariableDeclAndInitExpr] Single f1 = ...
#   66|           -1: [TypeMention] float
#   66|           0: [LocalVariableAccess] access to local variable f1
#   66|           1: [UnaryPlusExpr] +...
#   66|             0: [FloatLiteral] 9
#   67|       41: [LocalVariableDeclStmt] ... ...;
#   67|         0: [LocalVariableDeclAndInitExpr] Single f2 = ...
#   67|           -1: [TypeMention] float
#   67|           0: [LocalVariableAccess] access to local variable f2
#   67|           1: [UnaryMinusExpr] -...
#   67|             0: [FloatLiteral] 9
#   70|       42: [LocalVariableDeclStmt] ... ...;
#   70|         0: [LocalVariableDeclAndInitExpr] Double d0 = ...
#   70|           -1: [TypeMention] double
#   70|           0: [LocalVariableAccess] access to local variable d0
#   70|           1: [DoubleLiteral] 10
#   71|       43: [LocalVariableDeclStmt] ... ...;
#   71|         0: [LocalVariableDeclAndInitExpr] Double d1 = ...
#   71|           -1: [TypeMention] double
#   71|           0: [LocalVariableAccess] access to local variable d1
#   71|           1: [UnaryPlusExpr] +...
#   71|             0: [DoubleLiteral] 10
#   72|       44: [LocalVariableDeclStmt] ... ...;
#   72|         0: [LocalVariableDeclAndInitExpr] Double d2 = ...
#   72|           -1: [TypeMention] double
#   72|           0: [LocalVariableAccess] access to local variable d2
#   72|           1: [UnaryMinusExpr] -...
#   72|             0: [DoubleLiteral] 10
#   75|       45: [LocalVariableDeclStmt] ... ...;
#   75|         0: [LocalVariableDeclAndInitExpr] Decimal m0 = ...
#   75|           -1: [TypeMention] decimal
#   75|           0: [LocalVariableAccess] access to local variable m0
#   75|           1: [DecimalLiteral] 11
#   76|       46: [LocalVariableDeclStmt] ... ...;
#   76|         0: [LocalVariableDeclAndInitExpr] Decimal m1 = ...
#   76|           -1: [TypeMention] decimal
#   76|           0: [LocalVariableAccess] access to local variable m1
#   76|           1: [UnaryPlusExpr] +...
#   76|             0: [DecimalLiteral] 11
#   77|       47: [LocalVariableDeclStmt] ... ...;
#   77|         0: [LocalVariableDeclAndInitExpr] Decimal m2 = ...
#   77|           -1: [TypeMention] decimal
#   77|           0: [LocalVariableAccess] access to local variable m2
#   77|           1: [UnaryMinusExpr] -...
#   77|             0: [DecimalLiteral] 11
MethodAccess.cs:
#    3| [Class] MethodAccess
#    5|   5: [Method] M
#    5|     -1: [TypeMention] Void
#    6|     4: [BlockStmt] {...}
#    7|       0: [LocalFunctionStmt] M1(...)
#    7|         0: [LocalFunction] M1
#    7|           4: [BlockStmt] {...}
#    7|       1: [EmptyStmt] ;
#    8|       2: [LocalVariableDeclStmt] ... ...;
#    8|         0: [LocalVariableDeclAndInitExpr] Action a = ...
#    8|           -1: [TypeMention] Action
#    8|           0: [LocalVariableAccess] access to local variable a
#    8|           1: [ImplicitDelegateCreation] delegate creation of type Action
#    8|             0: [LocalFunctionAccess] access to local function M1
#    9|       3: [ExprStmt] ...;
#    9|         0: [AssignExpr] ... = ...
#    9|           0: [LocalVariableAccess] access to local variable a
#    9|           1: [ImplicitDelegateCreation] delegate creation of type Action
#    9|             0: [MethodAccess] access to method M2
#   10|       4: [ExprStmt] ...;
#   10|         0: [AssignExpr] ... = ...
#   10|           0: [LocalVariableAccess] access to local variable a
#   10|           1: [ImplicitDelegateCreation] delegate creation of type Action
#   10|             0: [MethodAccess] access to method M2
#   10|               -1: [ThisAccess] this access
#   11|       5: [ExprStmt] ...;
#   11|         0: [AssignExpr] ... = ...
#   11|           0: [LocalVariableAccess] access to local variable a
#   11|           1: [ImplicitDelegateCreation] delegate creation of type Action
#   11|             0: [MethodAccess] access to method M3
#   12|       6: [ExprStmt] ...;
#   12|         0: [AssignExpr] ... = ...
#   12|           0: [LocalVariableAccess] access to local variable a
#   12|           1: [ImplicitDelegateCreation] delegate creation of type Action
#   12|             0: [MethodAccess] access to method M3
#   12|               -1: [TypeAccess] access to type MethodAccess
#   12|                 0: [TypeMention] MethodAccess
#   15|   6: [Method] M2
#   15|     -1: [TypeMention] Void
#   15|     4: [BlockStmt] {...}
#   17|   7: [Method] M3
#   17|     -1: [TypeMention] Void
#   17|     4: [BlockStmt] {...}
Qualifiers.cs:
#    3| [Class] Qualifiers
#    5|   5: [Property] S
#    5|     -1: [TypeMention] short
#    5|     3: [Getter] get_S
#    5|       4: [MethodCall] call to method Static<Int16>
#    5|         0: [NullLiteral] null
#    7|   6: [Property] I
#    7|     -1: [TypeMention] int
#    7|     3: [Getter] get_I
#    7|       4: [MethodCall] call to method Instance<Int32>
#    9|   7: [Property] B
#    9|     -1: [TypeMention] bool
#    9|     3: [Getter] get_B
#    9|       4: [MethodCall] call to method Instance<Boolean>
#    9|         -1: [ThisAccess] this access
#   11|   8: [Method] Static<>
#   11|     -1: [TypeMention] T
#-----|     1: (Type parameters)
#   11|       0: [TypeParameter] T
#-----|     2: (Parameters)
#   11|       0: [Parameter] o
#   11|         -1: [TypeMention] object
#   11|     4: [DefaultValueExpr] default(...)
#   11|       0: [TypeAccess] access to type T
#   11|         0: [TypeMention] T
#   13|   10: [Method] Instance<>
#   13|     -1: [TypeMention] T
#-----|     1: (Type parameters)
#   13|       0: [TypeParameter] T
#   13|     4: [DefaultValueExpr] default(...)
#   13|       0: [TypeAccess] access to type T
#   13|         0: [TypeMention] T
ReducedExpression.cs:
#    2| [Class] ReducedClass
#    5|   5: [Field] ReducedExpression
#    5|     -1: [TypeMention] int
#    5|     1: [AssignExpr] ... = ...
#    5|       0: [MemberConstantAccess] access to constant ReducedExpression
#    5|       1: [ConditionalExpr] ... ? ... : ...
#    5|         0: [BoolLiteral] true
#    5|         1: [IntLiteral] 10
#    5|         2: [IntLiteral] 12
expressions.cs:
#    5| [NamespaceDeclaration] namespace ... { ... }
#    7|   1: [Class] Class
#   10|     4: [Method] MainLiterals
#   10|       -1: [TypeMention] Void
#   11|       4: [BlockStmt] {...}
#   12|         0: [LocalVariableDeclStmt] ... ...;
#   12|           0: [LocalVariableDeclExpr] Boolean b
#   12|             0: [TypeMention] bool
#   13|         1: [ExprStmt] ...;
#   13|           0: [AssignExpr] ... = ...
#   13|             0: [LocalVariableAccess] access to local variable b
#   13|             1: [BoolLiteral] true
#   14|         2: [ExprStmt] ...;
#   14|           0: [AssignExpr] ... = ...
#   14|             0: [LocalVariableAccess] access to local variable b
#   14|             1: [BoolLiteral] false
#   15|         3: [ExprStmt] ...;
#   15|           0: [AssignExpr] ... = ...
#   15|             0: [LocalVariableAccess] access to local variable b
#   15|             1: [LogicalNotExpr] !...
#   15|               0: [LocalVariableAccess] access to local variable b
#   16|         4: [LocalVariableDeclStmt] ... ...;
#   16|           0: [LocalVariableDeclAndInitExpr] Char c = ...
#   16|             -1: [TypeMention] char
#   16|             0: [LocalVariableAccess] access to local variable c
#   16|             1: [CharLiteral] @
#   17|         5: [LocalVariableDeclStmt] ... ...;
#   17|           0: [LocalVariableDeclExpr] Int32 i
#   17|             0: [TypeMention] int
#   18|         6: [ExprStmt] ...;
#   18|           0: [AssignExpr] ... = ...
#   18|             0: [LocalVariableAccess] access to local variable i
#   18|             1: [IntLiteral] 1
#   19|         7: [ExprStmt] ...;
#   19|           0: [AssignExpr] ... = ...
#   19|             0: [LocalVariableAccess] access to local variable i
#   19|             1: [UnaryMinusExpr] -...
#   19|               0: [LocalVariableAccess] access to local variable i
#   20|         8: [LocalVariableDeclStmt] ... ...;
#   20|           0: [LocalVariableDeclExpr] Int64 l
#   20|             0: [TypeMention] long
#   21|         9: [ExprStmt] ...;
#   21|           0: [AssignExpr] ... = ...
#   21|             0: [LocalVariableAccess] access to local variable l
#   21|             1: [LongLiteral] 8989898
#   22|         10: [LocalVariableDeclStmt] ... ...;
#   22|           0: [LocalVariableDeclExpr] UInt32 ui
#   22|             0: [TypeMention] uint
#   23|         11: [ExprStmt] ...;
#   23|           0: [AssignExpr] ... = ...
#   23|             0: [LocalVariableAccess] access to local variable ui
#   23|             1: [UIntLiteral] 3
#   24|         12: [LocalVariableDeclStmt] ... ...;
#   24|           0: [LocalVariableDeclExpr] UInt64 ul
#   24|             0: [TypeMention] ulong
#   25|         13: [ExprStmt] ...;
#   25|           0: [AssignExpr] ... = ...
#   25|             0: [LocalVariableAccess] access to local variable ul
#   25|             1: [ULongLiteral] 89898787897
#   26|         14: [LocalVariableDeclStmt] ... ...;
#   26|           0: [LocalVariableDeclAndInitExpr] Single f = ...
#   26|             -1: [TypeMention] float
#   26|             0: [LocalVariableAccess] access to local variable f
#   26|             1: [FloatLiteral] 4.5
#   27|         15: [LocalVariableDeclStmt] ... ...;
#   27|           0: [LocalVariableDeclExpr] Double d
#   27|             0: [TypeMention] double
#   28|         16: [ExprStmt] ...;
#   28|           0: [AssignExpr] ... = ...
#   28|             0: [LocalVariableAccess] access to local variable d
#   28|             1: [DoubleLiteral] 4.565
#   29|         17: [LocalVariableDeclStmt] ... ...;
#   29|           0: [LocalVariableDeclExpr] Decimal m
#   29|             0: [TypeMention] decimal
#   30|         18: [ExprStmt] ...;
#   30|           0: [AssignExpr] ... = ...
#   30|             0: [LocalVariableAccess] access to local variable m
#   30|             1: [DecimalLiteral] 123.456
#   31|         19: [LocalVariableDeclStmt] ... ...;
#   31|           0: [LocalVariableDeclExpr] String s
#   31|             0: [TypeMention] string
#   32|         20: [ExprStmt] ...;
#   32|           0: [AssignExpr] ... = ...
#   32|             0: [LocalVariableAccess] access to local variable s
#   32|             1: [StringLiteralUtf16] "test"
#   33|         21: [LocalVariableDeclStmt] ... ...;
#   33|           0: [LocalVariableDeclExpr] Object o
#   33|             0: [TypeMention] object
#   34|         22: [ExprStmt] ...;
#   34|           0: [AssignExpr] ... = ...
#   34|             0: [LocalVariableAccess] access to local variable o
#   34|             1: [NullLiteral] null
#   37|     5: [Method] LogicalOperators
#   37|       -1: [TypeMention] bool
#-----|       2: (Parameters)
#   37|         0: [Parameter] a
#   37|           -1: [TypeMention] bool
#   37|         1: [Parameter] b
#   37|           -1: [TypeMention] bool
#   38|       4: [BlockStmt] {...}
#   39|         0: [LocalVariableDeclStmt] ... ...;
#   39|           0: [LocalVariableDeclAndInitExpr] Int32 x = ...
#   39|             -1: [TypeMention] int
#   39|             0: [LocalVariableAccess] access to local variable x
#   39|             1: [ConditionalExpr] ... ? ... : ...
#   39|               0: [ParameterAccess] access to parameter a
#   39|               1: [IntLiteral] 0
#   39|               2: [IntLiteral] 42
#   40|         1: [LocalVariableDeclStmt] ... ...;
#   40|           0: [LocalVariableDeclAndInitExpr] Boolean c = ...
#   40|             -1: [TypeMention] bool
#   40|             0: [LocalVariableAccess] access to local variable c
#   40|             1: [LogicalOrExpr] ... || ...
#   40|               0: [ParameterAccess] access to parameter b
#   40|               1: [GTExpr] ... > ...
#   40|                 0: [LocalVariableAccess] access to local variable x
#   40|                 1: [IntLiteral] 3
#   41|         2: [ReturnStmt] return ...;
#   41|           0: [LogicalAndExpr] ... && ...
#   41|             0: [LogicalAndExpr] ... && ...
#   41|               0: [ParameterAccess] access to parameter a
#   41|               1: [ParameterAccess] access to parameter b
#   41|             1: [LogicalNotExpr] !...
#   41|               0: [LocalVariableAccess] access to local variable c
#   44|     6: [Field] constant
#   44|       -1: [TypeMention] string
#   44|       1: [AssignExpr] ... = ...
#   44|         0: [MemberConstantAccess] access to constant constant
#   44|         1: [StringLiteralUtf16] "constant"
#   45|     7: [Field] f
#   45|       -1: [TypeMention] int
#   45|       1: [AssignExpr] ... = ...
#   45|         0: [FieldAccess] access to field f
#   45|         1: [IntLiteral] 0
#   46|     8: [Field] name
#   46|       -1: [TypeMention] string
#   48|     9: [StaticConstructor] Class
#   49|       4: [BlockStmt] {...}
#   51|         0: [ExprStmt] ...;
#   51|           0: [AssignExpr] ... = ...
#   51|             0: [FieldAccess] access to field name
#   51|               -1: [TypeAccess] access to type Class
#   51|                 0: [TypeMention] Class
#   51|             1: [StringLiteralUtf16] ""
#   52|         1: [ExprStmt] ...;
#   52|           0: [MethodCall] call to method Foo
#   52|             -1: [TypeAccess] access to type Class
#   52|               0: [TypeMention] Class
#   53|         2: [ExprStmt] ...;
#   53|           0: [MethodCall] call to method Foo
#   56|     10: [InstanceConstructor] Class
#   56|       3: [ConstructorInitializer] call to constructor Class
#   56|         0: [IntLiteral] 0
#   56|       4: [BlockStmt] {...}
#   58|     11: [InstanceConstructor] Class
#-----|       2: (Parameters)
#   58|         0: [Parameter] i
#   58|           -1: [TypeMention] int
#   58|       4: [BlockStmt] {...}
#   60|     12: [Method] Foo
#   60|       -1: [TypeMention] Void
#   60|       4: [BlockStmt] {...}
#   62|     13: [Method] Bar
#   62|       -1: [TypeMention] int
#-----|       2: (Parameters)
#   62|         0: [Parameter] x
#   62|           -1: [TypeMention] int
#   62|         1: [Parameter] s
#   62|           -1: [TypeMention] string
#   63|       4: [BlockStmt] {...}
#   64|         0: [ReturnStmt] return ...;
#   64|           0: [AddExpr] ... + ...
#   64|             0: [PropertyCall] access to property Length
#   64|               -1: [ParameterAccess] access to parameter s
#   64|             1: [ParameterAccess] access to parameter x
#   67|     14: [Property] Name
#   67|       -1: [TypeMention] string
#   69|       3: [Getter] get_Name
#   69|         4: [BlockStmt] {...}
#   69|           0: [ReturnStmt] return ...;
#   69|             0: [FieldAccess] access to field name
#   70|       4: [Setter] set_Name
#-----|         2: (Parameters)
#   70|           0: [Parameter] value
#   70|         4: [BlockStmt] {...}
#   70|           0: [ExprStmt] ...;
#   70|             0: [AssignExpr] ... = ...
#   70|               0: [FieldAccess] access to field name
#   70|               1: [ParameterAccess] access to parameter value
#   73|     15: [Indexer] Item
#   73|       -1: [TypeMention] bool
#-----|       1: (Parameters)
#   73|         0: [Parameter] i
#   73|           -1: [TypeMention] int
#   73|         1: [Parameter] s
#   73|           -1: [TypeMention] string
#   75|       3: [Getter] get_Item
#-----|         2: (Parameters)
#   73|           0: [Parameter] i
#   73|           1: [Parameter] s
#   75|         4: [BlockStmt] {...}
#   75|           0: [ReturnStmt] return ...;
#   75|             0: [LogicalAndExpr] ... && ...
#   75|               0: [GTExpr] ... > ...
#   75|                 0: [ParameterAccess] access to parameter i
#   75|                 1: [IntLiteral] 2
#   75|               1: [MethodCall] call to method Equals
#   75|                 -1: [ParameterAccess] access to parameter s
#   75|                 0: [StringLiteralUtf16] ""
#   76|       4: [Setter] set_Item
#-----|         2: (Parameters)
#   73|           0: [Parameter] i
#   73|           1: [Parameter] s
#   76|           2: [Parameter] value
#   76|         4: [BlockStmt] {...}
#   76|           0: [IfStmt] if (...) ...
#   76|             0: [ParameterAccess] access to parameter value
#   76|             1: [ExprStmt] ...;
#   76|               0: [PostIncrExpr] ...++
#   76|                 0: [FieldAccess] access to field f
#   79|     16: [Method] MainAccesses
#   79|       -1: [TypeMention] Void
#-----|       2: (Parameters)
#   79|         0: [Parameter] other
#   79|           -1: [TypeMention] Class
#   79|         1: [Parameter] args
#   79|           -1: [TypeMention] Object[]
#   79|             1: [TypeMention] object
#   80|       4: [BlockStmt] {...}
#   81|         0: [ExprStmt] ...;
#   81|           0: [AssignExpr] ... = ...
#   81|             0: [PropertyCall] access to property Name
#   81|             1: [StringLiteralUtf16] "aName"
#   82|         1: [LocalVariableDeclStmt] ... ...;
#   82|           0: [LocalVariableDeclAndInitExpr] String n = ...
#   82|             -1: [TypeMention] string
#   82|             0: [LocalVariableAccess] access to local variable n
#   82|             1: [PropertyCall] access to property Name
#   82|               -1: [ThisAccess] this access
#   83|         2: [LocalVariableDeclStmt] ... ...;
#   83|           0: [LocalVariableDeclAndInitExpr] Int32 i = ...
#   83|             -1: [TypeMention] int
#   83|             0: [LocalVariableAccess] access to local variable i
#   83|             1: [MethodCall] call to method Bar
#   83|               -1: [ObjectCreation] object creation of type Class
#   83|                 0: [TypeMention] Class
#   83|               0: [AddExpr] ... + ...
#   83|                 0: [IntLiteral] 4
#   83|                 1: [IntLiteral] 2
#   83|               1: [PropertyCall] access to property Name
#   84|         3: [ExprStmt] ...;
#   84|           0: [AssignExpr] ... = ...
#   84|             0: [PropertyCall] access to property Name
#   84|               -1: [ParameterAccess] access to parameter other
#   84|             1: [MemberConstantAccess] access to constant constant
#   85|         4: [ExprStmt] ...;
#   85|           0: [AssignExpr] ... = ...
#   85|             0: [IndexerCall] access to indexer
#   85|               -1: [ParameterAccess] access to parameter other
#   85|               0: [LocalVariableAccess] access to local variable i
#   85|               1: [MemberConstantAccess] access to constant constant
#   85|                 -1: [TypeAccess] access to type Nested
#   85|                   0: [TypeMention] Nested
#   85|             1: [IndexerCall] access to indexer
#   85|               -1: [ThisAccess] this access
#   85|               0: [IntLiteral] 0
#   85|               1: [StringLiteralUtf16] ""
#   86|         5: [LocalVariableDeclStmt] ... ...;
#   86|           0: [LocalVariableDeclAndInitExpr] Int32[] array = ...
#   86|             -1: [TypeMention] Int32[]
#   86|               1: [TypeMention] int
#   86|             0: [LocalVariableAccess] access to local variable array
#   86|             1: [ArrayCreation] array creation of type Int32[]
#   86|               -1: [ArrayInitializer] { ..., ... }
#   86|                 0: [CastExpr] (...) ...
#   86|                   0: [TypeAccess] access to type Int32
#   86|                     0: [TypeMention] int
#   86|                   1: [ULongLiteral] 4
#   86|                 1: [CastExpr] (...) ...
#   86|                   0: [TypeAccess] access to type Int32
#   86|                     0: [TypeMention] int
#   86|                   1: [LongLiteral] 3
#   87|         6: [ExprStmt] ...;
#   87|           0: [AssignExpr] ... = ...
#   87|             0: [ArrayAccess] access to array element
#   87|               -1: [LocalVariableAccess] access to local variable array
#   87|               0: [IntLiteral] 1
#   87|             1: [IntLiteral] 5
#   91|     17: [Method] MainIsAsCast
#   91|       -1: [TypeMention] Void
#-----|       2: (Parameters)
#   91|         0: [Parameter] s
#   91|           -1: [TypeMention] string
#   91|         1: [Parameter] o
#   91|           -1: [TypeMention] object
#   91|         2: [Parameter] p
#   91|           -1: [TypeMention] object
#   92|       4: [BlockStmt] {...}
#   93|         0: [IfStmt] if (...) ...
#   93|           0: [IsExpr] ... is ...
#   93|             0: [ParameterAccess] access to parameter o
#   93|             1: [TypeAccessPatternExpr] access to type Class
#   93|               0: [TypeMention] Class
#   94|           1: [BlockStmt] {...}
#   95|             0: [LocalVariableDeclStmt] ... ...;
#   95|               0: [LocalVariableDeclAndInitExpr] Class c = ...
#   95|                 -1: [TypeMention] Class
#   95|                 0: [LocalVariableAccess] access to local variable c
#   95|                 1: [AsExpr] ... as ...
#   95|                   0: [ParameterAccess] access to parameter o
#   95|                   1: [TypeAccess] access to type Class
#   95|                     0: [TypeMention] Class
#   96|             1: [LocalVariableDeclStmt] ... ...;
#   96|               0: [LocalVariableDeclAndInitExpr] Class d = ...
#   96|                 -1: [TypeMention] Class
#   96|                 0: [LocalVariableAccess] access to local variable d
#   96|                 1: [CastExpr] (...) ...
#   96|                   0: [TypeAccess] access to type Class
#   96|                     0: [TypeMention] Class
#   96|                   1: [ParameterAccess] access to parameter p
#   98|         1: [LocalVariableDeclStmt] ... ...;
#   98|           0: [LocalVariableDeclAndInitExpr] Class x = ...
#   98|             -1: [TypeMention] Class
#   98|             0: [LocalVariableAccess] access to local variable x
#   98|             1: [CastExpr] (...) ...
#   98|               0: [TypeAccess] access to type Class
#   98|                 0: [TypeMention] Class
#   98|               1: [AsExpr] ... as ...
#   98|                 0: [CastExpr] (...) ...
#   98|                   0: [TypeAccess] access to type Class
#   98|                     0: [TypeMention] Class
#   98|                   1: [ParameterAccess] access to parameter o
#   98|                 1: [TypeAccess] access to type Object
#   98|                   0: [TypeMention] object
#   99|         2: [LocalVariableDeclStmt] ... ...;
#   99|           0: [LocalVariableDeclAndInitExpr] Int32 i = ...
#   99|             -1: [TypeMention] int
#   99|             0: [LocalVariableAccess] access to local variable i
#   99|             1: [DefaultValueExpr] default(...)
#   99|               0: [TypeAccess] access to type Int32
#   99|                 0: [TypeMention] int
#  100|         3: [ExprStmt] ...;
#  100|           0: [AssignExpr] ... = ...
#  100|             0: [ParameterAccess] access to parameter s
#  100|             1: [AddExpr] ... + ...
#  100|               0: [AddExpr] ... + ...
#  100|                 0: [ParameterAccess] access to parameter s
#  100|                 1: [StringLiteralUtf16] " "
#  100|               1: [CastExpr] (...) ...
#  100|                 1: [LocalVariableAccess] access to local variable i
#  103|     18: [Class] Y<,>
#-----|       1: (Type parameters)
#  103|         0: [TypeParameter] T
#  103|         1: [TypeParameter] U
#  107|     19: [Class] X<>
#-----|       1: (Type parameters)
#  107|         0: [TypeParameter] T
#  110|       5: [Method] PrintTypes
#  110|         -1: [TypeMention] Void
#  111|         4: [BlockStmt] {...}
#  112|           0: [LocalVariableDeclStmt] ... ...;
#  112|             0: [LocalVariableDeclAndInitExpr] Type[] t = ...
#  112|               -1: [TypeMention] Type[]
#  112|                 1: [TypeMention] Type
#  112|               0: [LocalVariableAccess] access to local variable t
#  112|               1: [ArrayCreation] array creation of type Type[]
#  112|                 -1: [ArrayInitializer] { ..., ... }
#  113|                   0: [TypeofExpr] typeof(...)
#  113|                     0: [TypeAccess] access to type Void
#  113|                       0: [TypeMention] Void
#  114|                   1: [TypeofExpr] typeof(...)
#  114|                     0: [TypeAccess] access to type Int32
#  114|                       0: [TypeMention] int
#  115|                   2: [TypeofExpr] typeof(...)
#  115|                     0: [TypeAccess] access to type Int32
#  115|                       0: [TypeMention] int
#  116|                   3: [TypeofExpr] typeof(...)
#  116|                     0: [TypeAccess] access to type String
#  116|                       0: [TypeMention] string
#  117|                   4: [TypeofExpr] typeof(...)
#  117|                     0: [TypeAccess] access to type Double[]
#  117|                       0: [TypeMention] Double[]
#  117|                         1: [TypeMention] double
#  118|                   5: [TypeofExpr] typeof(...)
#  118|                     0: [TypeAccess] access to type Void
#  118|                       0: [TypeMention] Void
#  119|                   6: [TypeofExpr] typeof(...)
#  119|                     0: [TypeAccess] access to type T
#  119|                       0: [TypeMention] T
#  120|                   7: [TypeofExpr] typeof(...)
#  120|                     0: [TypeAccess] access to type X<>
#  120|                       0: [TypeMention] X<T>
#  120|                         1: [TypeMention] T
#  121|                   8: [TypeofExpr] typeof(...)
#  121|                     0: [TypeAccess] access to type X<X<>>
#  121|                       0: [TypeMention] X<X<T>>
#  121|                         1: [TypeMention] X<T>
#  121|                           1: [TypeMention] T
#  122|                   9: [TypeofExpr] typeof(...)
#  122|                     0: [TypeAccess] access to type Y<,>
#  122|                       0: [TypeMention] Y<T, U>
#  122|                         1: [TypeMention] <unknown type>
#  122|                         2: [TypeMention] <unknown type>
#  124|           1: [LocalVariableDeclStmt] ... ...;
#  124|             0: [LocalVariableDeclAndInitExpr] T e = ...
#  124|               -1: [TypeMention] T
#  124|               0: [LocalVariableAccess] access to local variable e
#  124|               1: [DefaultValueExpr] default(...)
#  124|                 0: [TypeAccess] access to type T
#  124|                   0: [TypeMention] T
#  129|     21: [Class] Nested
#-----|       3: (Base types)
#  129|         0: [TypeMention] Class
#  131|       4: [StaticConstructor] Nested
#  131|         4: [BlockStmt] {...}
#  132|       5: [InstanceConstructor] Nested
#-----|         2: (Parameters)
#  132|           0: [Parameter] b
#  132|             -1: [TypeMention] bool
#  132|         4: [BlockStmt] {...}
#  133|       6: [InstanceConstructor] Nested
#-----|         2: (Parameters)
#  133|           0: [Parameter] i
#  133|             -1: [TypeMention] int
#  133|         3: [ConstructorInitializer] call to constructor Class
#  133|           0: [AddExpr] ... + ...
#  133|             0: [ParameterAccess] access to parameter i
#  133|             1: [IntLiteral] 1
#  133|         4: [BlockStmt] {...}
#  135|       7: [Method] OtherAccesses
#  135|         -1: [TypeMention] Void
#  136|         4: [BlockStmt] {...}
#  137|           0: [ExprStmt] ...;
#  137|             0: [AssignExpr] ... = ...
#  137|               0: [FieldAccess] access to field f
#  137|                 -1: [ThisAccess] this access
#  137|               1: [IntLiteral] 0
#  138|           1: [ExprStmt] ...;
#  138|             0: [MethodCall] call to method MainAccesses
#  138|               -1: [BaseAccess] base access
#  138|               0: [ThisAccess] this access
#  138|               1: [CastExpr] (...) ...
#  138|                 1: [IntLiteral] 1
#  138|               2: [CastExpr] (...) ...
#  138|                 1: [IntLiteral] 2
#  138|               3: [CastExpr] (...) ...
#  138|                 1: [IntLiteral] 3
#  138|               4: [CastExpr] (...) ...
#  138|                 1: [IntLiteral] 4
#  138|               5: [StringLiteralUtf16] ""
#  143|     22: [Method] MainLocalVarDecl
#  143|       -1: [TypeMention] Void
#  144|       4: [BlockStmt] {...}
#  145|         0: [LocalVariableDeclStmt] ... ...;
#  145|           0: [LocalVariableDeclExpr] Int32 a
#  145|             0: [TypeMention] int
#  146|         1: [LocalVariableDeclStmt] ... ...;
#  146|           0: [LocalVariableDeclAndInitExpr] Int32 b = ...
#  146|             -1: [TypeMention] int
#  146|             0: [LocalVariableAccess] access to local variable b
#  146|             1: [IntLiteral] 2
#  146|           1: [LocalVariableDeclAndInitExpr] Int32 c = ...
#  146|             -1: [TypeMention] int
#  146|             0: [LocalVariableAccess] access to local variable c
#  146|             1: [IntLiteral] 3
#  147|         2: [ExprStmt] ...;
#  147|           0: [AssignExpr] ... = ...
#  147|             0: [LocalVariableAccess] access to local variable a
#  147|             1: [IntLiteral] 1
#  148|         3: [ExprStmt] ...;
#  148|           0: [MethodCall] call to method WriteLine
#  148|             -1: [TypeAccess] access to type Console
#  148|               0: [TypeMention] Console
#  148|             0: [AddExpr] ... + ...
#  148|               0: [AddExpr] ... + ...
#  148|                 0: [LocalVariableAccess] access to local variable a
#  148|                 1: [LocalVariableAccess] access to local variable b
#  148|               1: [LocalVariableAccess] access to local variable c
#  149|         4: [LocalVariableDeclStmt] ... ...;
#  149|           0: [LocalVariableDeclAndInitExpr] Int32 x = ...
#  149|             -1: [TypeMention] int
#  149|             0: [LocalVariableAccess] access to local variable x
#  149|             1: [IntLiteral] 45
#  150|         5: [LocalVariableDeclStmt] ... ...;
#  150|           0: [LocalVariableDeclAndInitExpr] String y = ...
#  150|             -1: [TypeMention] string
#  150|             0: [LocalVariableAccess] access to local variable y
#  150|             1: [StringLiteralUtf16] "test"
#  153|     23: [Method] MainLocalConstDecl
#  153|       -1: [TypeMention] Void
#  154|       4: [BlockStmt] {...}
#  155|         0: [LocalConstantDeclStmt] const ... ...;
#  155|           0: [LocalVariableDeclAndInitExpr] Single pi = ...
#  155|             -1: [TypeMention] float
#  155|             0: [LocalVariableAccess] access to local variable pi
#  155|             1: [FloatLiteral] 3.1415927
#  156|         1: [LocalConstantDeclStmt] const ... ...;
#  156|           0: [LocalVariableDeclAndInitExpr] Int32 r = ...
#  156|             -1: [TypeMention] int
#  156|             0: [LocalVariableAccess] access to local variable r
#  156|             1: [AddExpr] ... + ...
#  156|               0: [IntLiteral] 10
#  156|               1: [IntLiteral] 15
#  157|         2: [ExprStmt] ...;
#  157|           0: [MethodCall] call to method WriteLine
#  157|             -1: [TypeAccess] access to type Console
#  157|               0: [TypeMention] Console
#  157|             0: [MulExpr] ... * ...
#  157|               0: [MulExpr] ... * ...
#  157|                 0: [LocalVariableAccess] access to local variable pi
#  157|                 1: [CastExpr] (...) ...
#  157|                   1: [LocalVariableAccess] access to local variable r
#  157|               1: [CastExpr] (...) ...
#  157|                 1: [LocalVariableAccess] access to local variable r
#  160|     24: [Method] MainChecked
#  160|       -1: [TypeMention] Void
#  161|       4: [BlockStmt] {...}
#  162|         0: [LocalVariableDeclStmt] ... ...;
#  162|           0: [LocalVariableDeclAndInitExpr] String s = ...
#  162|             -1: [TypeMention] string
#  162|             0: [LocalVariableAccess] access to local variable s
#  162|             1: [CheckedExpr] checked (...)
#  162|               0: [PropertyCall] access to property Name
#  163|         1: [LocalVariableDeclStmt] ... ...;
#  163|           0: [LocalVariableDeclAndInitExpr] Int32 t = ...
#  163|             -1: [TypeMention] int
#  163|             0: [LocalVariableAccess] access to local variable t
#  163|             1: [UncheckedExpr] unchecked (...)
#  163|               0: [AddExpr] ... + ...
#  163|                 0: [FieldAccess] access to field f
#  163|                 1: [IntLiteral] 20
#  166|     25: [Method] MainElementAccess
#  166|       -1: [TypeMention] Void
#-----|       2: (Parameters)
#  166|         0: [Parameter] i
#  166|           -1: [TypeMention] int
#  167|       4: [BlockStmt] {...}
#  168|         0: [LocalVariableDeclStmt] ... ...;
#  168|           0: [LocalVariableDeclAndInitExpr] Object[] os = ...
#  168|             -1: [TypeMention] Object[]
#  168|               1: [TypeMention] object
#  168|             0: [LocalVariableAccess] access to local variable os
#  168|             1: [ArrayCreation] array creation of type Object[]
#  168|               -2: [TypeMention] Object[]
#  168|                 1: [TypeMention] object
#  168|               -1: [ArrayInitializer] { ..., ... }
#  168|                 0: [CastExpr] (...) ...
#  168|                   1: [ParameterAccess] access to parameter i
#  171|     26: [Method] MainDelegateAndMethodAccesses
#  171|       -1: [TypeMention] Void
#  172|       4: [BlockStmt] {...}
#  173|         0: [LocalVariableDeclStmt] ... ...;
#  173|           0: [LocalVariableDeclAndInitExpr] D cd1 = ...
#  173|             -1: [TypeMention] D
#  173|             0: [LocalVariableAccess] access to local variable cd1
#  173|             1: [ExplicitDelegateCreation] delegate creation of type D
#  173|               -1: [TypeMention] D
#  173|               0: [MethodAccess] access to method M1
#  173|                 -1: [TypeAccess] access to type C
#  173|                   0: [TypeMention] C
#  174|         1: [LocalVariableDeclStmt] ... ...;
#  174|           0: [LocalVariableDeclAndInitExpr] D cd2 = ...
#  174|             -1: [TypeMention] D
#  174|             0: [LocalVariableAccess] access to local variable cd2
#  174|             1: [ImplicitDelegateCreation] delegate creation of type D
#  174|               0: [MethodAccess] access to method M2
#  174|                 -1: [TypeAccess] access to type C
#  174|                   0: [TypeMention] C
#  175|         2: [LocalVariableDeclStmt] ... ...;
#  175|           0: [LocalVariableDeclAndInitExpr] D cd3 = ...
#  175|             -1: [TypeMention] D
#  175|             0: [LocalVariableAccess] access to local variable cd3
#  175|             1: [OperatorCall] call to operator +
#  175|               0: [LocalVariableAccess] access to local variable cd1
#  175|               1: [LocalVariableAccess] access to local variable cd2
#  176|         3: [LocalVariableDeclStmt] ... ...;
#  176|           0: [LocalVariableDeclAndInitExpr] D cd4 = ...
#  176|             -1: [TypeMention] D
#  176|             0: [LocalVariableAccess] access to local variable cd4
#  176|             1: [OperatorCall] call to operator +
#  176|               0: [LocalVariableAccess] access to local variable cd3
#  176|               1: [LocalVariableAccess] access to local variable cd1
#  177|         4: [LocalVariableDeclStmt] ... ...;
#  177|           0: [LocalVariableDeclAndInitExpr] D cd5 = ...
#  177|             -1: [TypeMention] D
#  177|             0: [LocalVariableAccess] access to local variable cd5
#  177|             1: [OperatorCall] call to operator -
#  177|               0: [LocalVariableAccess] access to local variable cd4
#  177|               1: [LocalVariableAccess] access to local variable cd3
#  178|         5: [ExprStmt] ...;
#  178|           0: [AssignAddExpr] ... += ...
#  178|             0: [LocalVariableAccess] access to local variable cd4
#  178|             1: [LocalVariableAccess] access to local variable cd5
#  179|         6: [ExprStmt] ...;
#  179|           0: [AssignSubExpr] ... -= ...
#  179|             0: [LocalVariableAccess] access to local variable cd4
#  179|             1: [LocalVariableAccess] access to local variable cd1
#  181|         7: [LocalVariableDeclStmt] ... ...;
#  181|           0: [LocalVariableDeclAndInitExpr] C c = ...
#  181|             -1: [TypeMention] C
#  181|             0: [LocalVariableAccess] access to local variable c
#  181|             1: [ObjectCreation] object creation of type C
#  181|               0: [TypeMention] C
#  182|         8: [LocalVariableDeclStmt] ... ...;
#  182|           0: [LocalVariableDeclAndInitExpr] D cd6 = ...
#  182|             -1: [TypeMention] D
#  182|             0: [LocalVariableAccess] access to local variable cd6
#  182|             1: [ExplicitDelegateCreation] delegate creation of type D
#  182|               -1: [TypeMention] D
#  182|               0: [MethodAccess] access to method M3
#  182|                 -1: [LocalVariableAccess] access to local variable c
#  183|         9: [LocalVariableDeclStmt] ... ...;
#  183|           0: [LocalVariableDeclAndInitExpr] D cd7 = ...
#  183|             -1: [TypeMention] D
#  183|             0: [LocalVariableAccess] access to local variable cd7
#  183|             1: [ExplicitDelegateCreation] delegate creation of type D
#  183|               -1: [TypeMention] D
#  183|               0: [LocalVariableAccess] access to local variable cd6
#  185|         10: [ExprStmt] ...;
#  185|           0: [DelegateCall] delegate call
#  185|             -1: [LocalVariableAccess] access to local variable cd1
#  185|             0: [UnaryMinusExpr] -...
#  185|               0: [IntLiteral] 40
#  186|         11: [LocalVariableDeclStmt] ... ...;
#  186|           0: [LocalVariableDeclAndInitExpr] Int32 x = ...
#  186|             -1: [TypeMention] int
#  186|             0: [LocalVariableAccess] access to local variable x
#  186|             1: [IntLiteral] 0
#  187|         12: [ExprStmt] ...;
#  187|           0: [DelegateCall] delegate call
#  187|             -1: [LocalVariableAccess] access to local variable cd7
#  187|             0: [AddExpr] ... + ...
#  187|               0: [IntLiteral] 34
#  187|               1: [LocalVariableAccess] access to local variable x
#  189|         13: [LocalVariableDeclStmt] ... ...;
#  189|           0: [LocalVariableDeclAndInitExpr] Predicate<Int32> pi = ...
#  189|             -1: [TypeMention] Predicate<int>
#  189|               1: [TypeMention] int
#  189|             0: [LocalVariableAccess] access to local variable pi
#  189|             1: [ExplicitDelegateCreation] delegate creation of type Predicate<Int32>
#  189|               -1: [TypeMention] Predicate<int>
#  189|                 1: [TypeMention] int
#  189|               0: [MethodAccess] access to method F
#  189|                 -1: [TypeAccess] access to type X
#  189|                   0: [TypeMention] X
#  190|         14: [LocalVariableDeclStmt] ... ...;
#  190|           0: [LocalVariableDeclAndInitExpr] Predicate<String> ps = ...
#  190|             -1: [TypeMention] Predicate<string>
#  190|               1: [TypeMention] string
#  190|             0: [LocalVariableAccess] access to local variable ps
#  190|             1: [ImplicitDelegateCreation] delegate creation of type Predicate<String>
#  190|               0: [MethodAccess] access to method G
#  190|                 -1: [TypeAccess] access to type X
#  190|                   0: [TypeMention] X
#  192|         15: [LocalVariableDeclStmt] ... ...;
#  192|           0: [LocalVariableDeclAndInitExpr] Boolean b = ...
#  192|             -1: [TypeMention] bool
#  192|             0: [LocalVariableAccess] access to local variable b
#  192|             1: [BitwiseAndExpr] ... & ...
#  192|               0: [DelegateCall] delegate call
#  192|                 -1: [LocalVariableAccess] access to local variable pi
#  192|                 0: [IntLiteral] 3
#  192|               1: [DelegateCall] delegate call
#  192|                 -1: [LocalVariableAccess] access to local variable ps
#  192|                 0: [StringLiteralUtf16] ""
#  194|         16: [LocalVariableDeclStmt] ... ...;
#  194|           0: [LocalVariableDeclExpr] ContextCallback d
#  194|             0: [TypeMention] ContextCallback
#  196|         17: [LocalFunctionStmt] LocalFunction(...)
#  196|           0: [LocalFunction] LocalFunction
#-----|             2: (Parameters)
#  196|               0: [Parameter] i
#  196|                 -1: [TypeMention] int
#  196|             4: [BlockStmt] {...}
#  196|         18: [EmptyStmt] ;
#  197|         19: [ExprStmt] ...;
#  197|           0: [AssignExpr] ... = ...
#  197|             0: [LocalVariableAccess] access to local variable cd1
#  197|             1: [ExplicitDelegateCreation] delegate creation of type D
#  197|               -1: [TypeMention] D
#  197|               0: [LocalFunctionAccess] access to local function LocalFunction
#  198|         20: [ExprStmt] ...;
#  198|           0: [AssignExpr] ... = ...
#  198|             0: [LocalVariableAccess] access to local variable cd1
#  198|             1: [ImplicitDelegateCreation] delegate creation of type D
#  198|               0: [LocalFunctionAccess] access to local function LocalFunction
#  202|   2: [DelegateType] Predicate<>
#-----|     1: (Type parameters)
#  202|       0: [TypeParameter] T
#-----|     2: (Parameters)
#  202|       0: [Parameter] value
#  202|         -1: [TypeMention] T
#  204|   3: [DelegateType] D
#-----|     2: (Parameters)
#  204|       0: [Parameter] x
#  204|         -1: [TypeMention] int
#  206|   4: [Class] C
#  209|     5: [Method] M1
#  209|       -1: [TypeMention] Void
#-----|       2: (Parameters)
#  209|         0: [Parameter] i
#  209|           -1: [TypeMention] int
#  209|       4: [BlockStmt] {...}
#  210|     6: [Method] M2
#  210|       -1: [TypeMention] Void
#-----|       2: (Parameters)
#  210|         0: [Parameter] i
#  210|           -1: [TypeMention] int
#  210|       4: [BlockStmt] {...}
#  211|     7: [Method] M3
#  211|       -1: [TypeMention] Void
#-----|       2: (Parameters)
#  211|         0: [Parameter] i
#  211|           -1: [TypeMention] int
#  211|       4: [BlockStmt] {...}
#  215|   5: [Class] X
#  218|     5: [Method] F
#  218|       -1: [TypeMention] bool
#-----|       2: (Parameters)
#  218|         0: [Parameter] i
#  218|           -1: [TypeMention] int
#  218|       4: [BlockStmt] {...}
#  218|         0: [ReturnStmt] return ...;
#  218|           0: [LTExpr] ... < ...
#  218|             0: [ParameterAccess] access to parameter i
#  218|             1: [IntLiteral] 2
#  220|     6: [Method] G
#  220|       -1: [TypeMention] bool
#-----|       2: (Parameters)
#  220|         0: [Parameter] s
#  220|           -1: [TypeMention] string
#  220|       4: [BlockStmt] {...}
#  220|         0: [ReturnStmt] return ...;
#  220|           0: [BoolLiteral] false
#  224|   6: [DelegateType] EventHandler
#-----|     2: (Parameters)
#  224|       0: [Parameter] sender
#  224|         -1: [TypeMention] object
#  224|       1: [Parameter] e
#  224|         -1: [TypeMention] object
#  226|   7: [Class] Button
#  229|     5: [Event] Click
#  229|       -1: [TypeMention] EventHandler
#  229|       3: [AddEventAccessor] add_Click
#-----|         2: (Parameters)
#  229|           0: [Parameter] value
#  229|       4: [RemoveEventAccessor] remove_Click
#-----|         2: (Parameters)
#  229|           0: [Parameter] value
#  231|     6: [Method] OnClick
#  231|       -1: [TypeMention] Void
#-----|       2: (Parameters)
#  231|         0: [Parameter] e
#  231|           -1: [TypeMention] object
#  232|       4: [BlockStmt] {...}
#  233|         0: [IfStmt] if (...) ...
#  233|           0: [OperatorCall] call to operator !=
#  233|             0: [EventAccess,EventCall] access to event Click
#  233|             1: [NullLiteral] null
#  234|           1: [ExprStmt] ...;
#  234|             0: [DelegateCall] delegate call
#  234|               -1: [EventAccess,EventCall] access to event Click
#  234|               0: [ThisAccess] this access
#  234|               1: [ParameterAccess] access to parameter e
#  237|     7: [Method] Reset
#  237|       -1: [TypeMention] Void
#  238|       4: [BlockStmt] {...}
#  239|         0: [ExprStmt] ...;
#  239|           0: [AssignExpr] ... = ...
#  239|             0: [EventAccess,EventCall] access to event Click
#  239|             1: [NullLiteral] null
#  243|   8: [Class] LoginDialog
#  246|     4: [Field] OkButton
#  246|       -1: [TypeMention] Button
#  247|     5: [Field] CancelButton
#  247|       -1: [TypeMention] Button
#  249|     6: [InstanceConstructor] LoginDialog
#  250|       4: [BlockStmt] {...}
#  251|         0: [ExprStmt] ...;
#  251|           0: [AssignExpr] ... = ...
#  251|             0: [FieldAccess] access to field OkButton
#  251|             1: [ObjectCreation] object creation of type Button
#  251|               0: [TypeMention] Button
#  252|         1: [ExprStmt] ...;
#  252|           0: [AddEventExpr] ... += ...
#  252|             0: [EventAccess,EventCall] access to event Click
#  252|               -1: [FieldAccess] access to field OkButton
#  252|             1: [ExplicitDelegateCreation] delegate creation of type EventHandler
#  252|               -1: [TypeMention] EventHandler
#  252|               0: [MethodAccess] access to method OkButtonClick
#  253|         2: [ExprStmt] ...;
#  253|           0: [AssignExpr] ... = ...
#  253|             0: [FieldAccess] access to field CancelButton
#  253|             1: [ObjectCreation] object creation of type Button
#  253|               0: [TypeMention] Button
#  254|         3: [ExprStmt] ...;
#  254|           0: [RemoveEventExpr] ... -= ...
#  254|             0: [EventAccess,EventCall] access to event Click
#  254|               -1: [FieldAccess] access to field CancelButton
#  254|             1: [ExplicitDelegateCreation] delegate creation of type EventHandler
#  254|               -1: [TypeMention] EventHandler
#  254|               0: [MethodAccess] access to method CancelButtonClick
#  257|     7: [Method] OkButtonClick
#  257|       -1: [TypeMention] Void
#-----|       2: (Parameters)
#  257|         0: [Parameter] sender
#  257|           -1: [TypeMention] object
#  257|         1: [Parameter] e
#  257|           -1: [TypeMention] object
#  258|       4: [BlockStmt] {...}
#  261|     8: [Method] CancelButtonClick
#  261|       -1: [TypeMention] Void
#-----|       2: (Parameters)
#  261|         0: [Parameter] sender
#  261|           -1: [TypeMention] object
#  261|         1: [Parameter] e
#  261|           -1: [TypeMention] object
#  262|       4: [BlockStmt] {...}
#  267|   9: [Class] IntVector
#  270|     4: [InstanceConstructor] IntVector
#-----|       2: (Parameters)
#  270|         0: [Parameter] length
#  270|           -1: [TypeMention] int
#  270|       4: [BlockStmt] {...}
#  272|     5: [Property] Length
#  272|       -1: [TypeMention] int
#  272|       3: [Getter] get_Length
#  272|         4: [BlockStmt] {...}
#  272|           0: [ReturnStmt] return ...;
#  272|             0: [IntLiteral] 4
#  274|     6: [Indexer] Item
#  274|       -1: [TypeMention] int
#-----|       1: (Parameters)
#  274|         0: [Parameter] index
#  274|           -1: [TypeMention] int
#  274|       3: [Getter] get_Item
#-----|         2: (Parameters)
#  274|           0: [Parameter] index
#  274|         4: [BlockStmt] {...}
#  274|           0: [ReturnStmt] return ...;
#  274|             0: [IntLiteral] 0
#  274|       4: [Setter] set_Item
#-----|         2: (Parameters)
#  274|           0: [Parameter] index
#  274|           1: [Parameter] value
#  274|         4: [BlockStmt] {...}
#  276|     7: [IncrementOperator] ++
#  276|       -1: [TypeMention] IntVector
#-----|       2: (Parameters)
#  276|         0: [Parameter] iv
#  276|           -1: [TypeMention] IntVector
#  277|       4: [BlockStmt] {...}
#  278|         0: [LocalVariableDeclStmt] ... ...;
#  278|           0: [LocalVariableDeclAndInitExpr] IntVector temp = ...
#  278|             -1: [TypeMention] IntVector
#  278|             0: [LocalVariableAccess] access to local variable temp
#  278|             1: [ObjectCreation] object creation of type IntVector
#  278|               -1: [TypeMention] IntVector
#  278|               0: [PropertyCall] access to property Length
#  278|                 -1: [ParameterAccess] access to parameter iv
#  279|         1: [ForStmt] for (...;...;...) ...
#  279|           -1: [LocalVariableDeclAndInitExpr] Int32 i = ...
#  279|             -1: [TypeMention] int
#  279|             0: [LocalVariableAccess] access to local variable i
#  279|             1: [IntLiteral] 0
#  279|           0: [LTExpr] ... < ...
#  279|             0: [LocalVariableAccess] access to local variable i
#  279|             1: [PropertyCall] access to property Length
#  279|               -1: [ParameterAccess] access to parameter iv
#  279|           1: [PostIncrExpr] ...++
#  279|             0: [LocalVariableAccess] access to local variable i
#  280|           2: [ExprStmt] ...;
#  280|             0: [AssignExpr] ... = ...
#  280|               0: [IndexerCall] access to indexer
#  280|                 -1: [LocalVariableAccess] access to local variable temp
#  280|                 0: [LocalVariableAccess] access to local variable i
#  280|               1: [AddExpr] ... + ...
#  280|                 0: [IndexerCall] access to indexer
#  280|                   -1: [ParameterAccess] access to parameter iv
#  280|                   0: [LocalVariableAccess] access to local variable i
#  280|                 1: [IntLiteral] 1
#  281|         2: [ReturnStmt] return ...;
#  281|           0: [LocalVariableAccess] access to local variable temp
#  284|     8: [AddOperator] +
#  284|       -1: [TypeMention] IntVector
#-----|       2: (Parameters)
#  284|         0: [Parameter] iv1
#  284|           -1: [TypeMention] IntVector
#  284|         1: [Parameter] iv2
#  284|           -1: [TypeMention] IntVector
#  285|       4: [BlockStmt] {...}
#  286|         0: [ReturnStmt] return ...;
#  286|           0: [ParameterAccess] access to parameter iv1
#  291|   10: [Class] TestUnaryOperator
#  294|     5: [Method] MainUnaryOperator
#  294|       -1: [TypeMention] Void
#  295|       4: [BlockStmt] {...}
#  296|         0: [LocalVariableDeclStmt] ... ...;
#  296|           0: [LocalVariableDeclAndInitExpr] IntVector iv1 = ...
#  296|             -1: [TypeMention] IntVector
#  296|             0: [LocalVariableAccess] access to local variable iv1
#  296|             1: [ObjectCreation] object creation of type IntVector
#  296|               -1: [TypeMention] IntVector
#  296|               0: [IntLiteral] 4
#  297|         1: [LocalVariableDeclStmt] ... ...;
#  297|           0: [LocalVariableDeclExpr] IntVector iv2
#  297|             0: [TypeMention] IntVector
#  298|         2: [ExprStmt] ...;
#  298|           0: [AssignExpr] ... = ...
#  298|             0: [LocalVariableAccess] access to local variable iv2
#  298|             1: [OperatorCall] call to operator ++
#  298|               0: [LocalVariableAccess] access to local variable iv1
#  299|         3: [ExprStmt] ...;
#  299|           0: [AssignExpr] ... = ...
#  299|             0: [LocalVariableAccess] access to local variable iv2
#  299|             1: [OperatorCall] call to operator ++
#  299|               0: [LocalVariableAccess] access to local variable iv1
#  300|         4: [LocalVariableDeclStmt] ... ...;
#  300|           0: [LocalVariableDeclAndInitExpr] IntVector iv3 = ...
#  300|             -1: [TypeMention] IntVector
#  300|             0: [LocalVariableAccess] access to local variable iv3
#  300|             1: [OperatorCall] call to operator +
#  300|               0: [LocalVariableAccess] access to local variable iv1
#  300|               1: [LocalVariableAccess] access to local variable iv2
#  305|   11: [Struct] Digit
#  308|     5: [Field] value
#  308|       -1: [TypeMention] byte
#  310|     6: [InstanceConstructor] Digit
#-----|       2: (Parameters)
#  310|         0: [Parameter] value
#  310|           -1: [TypeMention] byte
#  311|       4: [BlockStmt] {...}
#  312|         0: [IfStmt] if (...) ...
#  312|           0: [LogicalOrExpr] ... || ...
#  312|             0: [LTExpr] ... < ...
#  312|               0: [CastExpr] (...) ...
#  312|                 1: [ParameterAccess] access to parameter value
#  312|               1: [IntLiteral] 0
#  312|             1: [GTExpr] ... > ...
#  312|               0: [CastExpr] (...) ...
#  312|                 1: [ParameterAccess] access to parameter value
#  312|               1: [IntLiteral] 9
#  313|           1: [ThrowStmt] throw ...;
#  313|             0: [ObjectCreation] object creation of type ArgumentException
#  313|               0: [TypeMention] ArgumentException
#  314|         1: [ExprStmt] ...;
#  314|           0: [AssignExpr] ... = ...
#  314|             0: [FieldAccess] access to field value
#  314|               -1: [ThisAccess] this access
#  314|             1: [ParameterAccess] access to parameter value
#  317|     7: [ImplicitConversionOperator] implicit conversion
#  317|       -1: [TypeMention] byte
#-----|       2: (Parameters)
#  317|         0: [Parameter] d
#  317|           -1: [TypeMention] Digit
#  318|       4: [BlockStmt] {...}
#  319|         0: [ReturnStmt] return ...;
#  319|           0: [FieldAccess] access to field value
#  319|             -1: [ParameterAccess] access to parameter d
#  322|     8: [ExplicitConversionOperator] explicit conversion
#  322|       -1: [TypeMention] Digit
#-----|       2: (Parameters)
#  322|         0: [Parameter] b
#  322|           -1: [TypeMention] byte
#  323|       4: [BlockStmt] {...}
#  324|         0: [ReturnStmt] return ...;
#  324|           0: [ObjectCreation] object creation of type Digit
#  324|             -1: [TypeMention] Digit
#  324|             0: [ParameterAccess] access to parameter b
#  329|   12: [Class] TestConversionOperator
#  332|     5: [Method] MainConversionOperator
#  332|       -1: [TypeMention] Void
#  333|       4: [BlockStmt] {...}
#  334|         0: [LocalVariableDeclStmt] ... ...;
#  334|           0: [LocalVariableDeclAndInitExpr] Digit d = ...
#  334|             -1: [TypeMention] Digit
#  334|             0: [LocalVariableAccess] access to local variable d
#  334|             1: [OperatorCall] call to operator explicit conversion
#  334|               -1: [TypeMention] Digit
#  334|               0: [CastExpr] (...) ...
#  334|                 1: [IntLiteral] 8
#  335|         1: [LocalVariableDeclStmt] ... ...;
#  335|           0: [LocalVariableDeclAndInitExpr] Byte b = ...
#  335|             -1: [TypeMention] byte
#  335|             0: [LocalVariableAccess] access to local variable b
#  335|             1: [OperatorCall] call to operator implicit conversion
#  335|               0: [LocalVariableAccess] access to local variable d
#  340|   13: [Class] Point
#  343|     5: [Field] x
#  343|       -1: [TypeMention] int
#  343|     6: [Field] y
#  343|       -1: [TypeMention] int
#  345|     7: [Property] X
#  345|       -1: [TypeMention] int
#  345|       3: [Getter] get_X
#  345|         4: [BlockStmt] {...}
#  345|           0: [ReturnStmt] return ...;
#  345|             0: [FieldAccess] access to field x
#  345|       4: [Setter] set_X
#-----|         2: (Parameters)
#  345|           0: [Parameter] value
#  345|         4: [BlockStmt] {...}
#  345|           0: [ExprStmt] ...;
#  345|             0: [AssignExpr] ... = ...
#  345|               0: [FieldAccess] access to field x
#  345|               1: [ParameterAccess] access to parameter value
#  346|     8: [Property] Y
#  346|       -1: [TypeMention] int
#  346|       3: [Getter] get_Y
#  346|         4: [BlockStmt] {...}
#  346|           0: [ReturnStmt] return ...;
#  346|             0: [FieldAccess] access to field y
#  346|       4: [Setter] set_Y
#-----|         2: (Parameters)
#  346|           0: [Parameter] value
#  346|         4: [BlockStmt] {...}
#  346|           0: [ExprStmt] ...;
#  346|             0: [AssignExpr] ... = ...
#  346|               0: [FieldAccess] access to field y
#  346|               1: [ParameterAccess] access to parameter value
#  350|   14: [Class] Rectangle
#  353|     5: [Field] p1
#  353|       -1: [TypeMention] Point
#  353|     6: [Field] p2
#  353|       -1: [TypeMention] Point
#  355|     7: [Property] P1
#  355|       -1: [TypeMention] Point
#  355|       3: [Getter] get_P1
#  355|         4: [BlockStmt] {...}
#  355|           0: [ReturnStmt] return ...;
#  355|             0: [FieldAccess] access to field p1
#  355|       4: [Setter] set_P1
#-----|         2: (Parameters)
#  355|           0: [Parameter] value
#  355|         4: [BlockStmt] {...}
#  355|           0: [ExprStmt] ...;
#  355|             0: [AssignExpr] ... = ...
#  355|               0: [FieldAccess] access to field p1
#  355|               1: [ParameterAccess] access to parameter value
#  356|     8: [Property] P2
#  356|       -1: [TypeMention] Point
#  356|       3: [Getter] get_P2
#  356|         4: [BlockStmt] {...}
#  356|           0: [ReturnStmt] return ...;
#  356|             0: [FieldAccess] access to field p2
#  356|       4: [Setter] set_P2
#-----|         2: (Parameters)
#  356|           0: [Parameter] value
#  356|         4: [BlockStmt] {...}
#  356|           0: [ExprStmt] ...;
#  356|             0: [AssignExpr] ... = ...
#  356|               0: [FieldAccess] access to field p2
#  356|               1: [ParameterAccess] access to parameter value
#  360|   15: [Class] Rectangle2
#  363|     5: [Field] p1
#  363|       -1: [TypeMention] Point
#  363|       1: [AssignExpr] ... = ...
#  363|         0: [FieldAccess] access to field p1
#  363|         1: [ObjectCreation] object creation of type Point
#  363|           0: [TypeMention] Point
#  364|     6: [Field] p2
#  364|       -1: [TypeMention] Point
#  364|       1: [AssignExpr] ... = ...
#  364|         0: [FieldAccess] access to field p2
#  364|         1: [ObjectCreation] object creation of type Point
#  364|           0: [TypeMention] Point
#  366|     7: [Property] P1
#  366|       -1: [TypeMention] Point
#  366|       3: [Getter] get_P1
#  366|         4: [BlockStmt] {...}
#  366|           0: [ReturnStmt] return ...;
#  366|             0: [FieldAccess] access to field p1
#  367|     8: [Property] P2
#  367|       -1: [TypeMention] Point
#  367|       3: [Getter] get_P2
#  367|         4: [BlockStmt] {...}
#  367|           0: [ReturnStmt] return ...;
#  367|             0: [FieldAccess] access to field p2
#  371|   16: [Class] Contact
#  374|     5: [Field] name
#  374|       -1: [TypeMention] string
#  375|     6: [Field] phoneNumbers
#  375|       -1: [TypeMention] List<string>
#  375|         1: [TypeMention] string
#  375|       1: [AssignExpr] ... = ...
#  375|         0: [FieldAccess] access to field phoneNumbers
#  375|         1: [ObjectCreation] object creation of type List<String>
#  375|           0: [TypeMention] List<string>
#  375|             1: [TypeMention] string
#  377|     7: [Property] Name
#  377|       -1: [TypeMention] string
#  377|       3: [Getter] get_Name
#  377|         4: [BlockStmt] {...}
#  377|           0: [ReturnStmt] return ...;
#  377|             0: [FieldAccess] access to field name
#  377|       4: [Setter] set_Name
#-----|         2: (Parameters)
#  377|           0: [Parameter] value
#  377|         4: [BlockStmt] {...}
#  377|           0: [ExprStmt] ...;
#  377|             0: [AssignExpr] ... = ...
#  377|               0: [FieldAccess] access to field name
#  377|               1: [ParameterAccess] access to parameter value
#  378|     8: [Property] PhoneNumbers
#  378|       -1: [TypeMention] List<string>
#  378|         1: [TypeMention] string
#  378|       3: [Getter] get_PhoneNumbers
#  378|         4: [BlockStmt] {...}
#  378|           0: [ReturnStmt] return ...;
#  378|             0: [FieldAccess] access to field phoneNumbers
#  382|   17: [Class] TestCreations
#  385|     5: [Method] MainCreations
#  385|       -1: [TypeMention] Void
#  386|       4: [BlockStmt] {...}
#  387|         0: [LocalVariableDeclStmt] ... ...;
#  387|           0: [LocalVariableDeclAndInitExpr] Point a = ...
#  387|             -1: [TypeMention] Point
#  387|             0: [LocalVariableAccess] access to local variable a
#  387|             1: [ObjectCreation] object creation of type Point
#  387|               -2: [TypeMention] Point
#  387|               -1: [ObjectInitializer] { ..., ... }
#  387|                 0: [MemberInitializer] ... = ...
#  387|                   0: [PropertyCall] access to property X
#  387|                   1: [IntLiteral] 0
#  387|                 1: [MemberInitializer] ... = ...
#  387|                   0: [PropertyCall] access to property Y
#  387|                   1: [IntLiteral] 1
#  388|         1: [LocalVariableDeclStmt] ... ...;
#  388|           0: [LocalVariableDeclAndInitExpr] Rectangle r = ...
#  388|             -1: [TypeMention] Rectangle
#  388|             0: [LocalVariableAccess] access to local variable r
#  388|             1: [ObjectCreation] object creation of type Rectangle
#  388|               -2: [TypeMention] Rectangle
#  389|               -1: [ObjectInitializer] { ..., ... }
#  390|                 0: [MemberInitializer] ... = ...
#  390|                   0: [PropertyCall] access to property P1
#  390|                   1: [ObjectCreation] object creation of type Point
#  390|                     -2: [TypeMention] Point
#  390|                     -1: [ObjectInitializer] { ..., ... }
#  390|                       0: [MemberInitializer] ... = ...
#  390|                         0: [PropertyCall] access to property X
#  390|                         1: [IntLiteral] 0
#  390|                       1: [MemberInitializer] ... = ...
#  390|                         0: [PropertyCall] access to property Y
#  390|                         1: [IntLiteral] 1
#  391|                 1: [MemberInitializer] ... = ...
#  391|                   0: [PropertyCall] access to property P2
#  391|                   1: [ObjectCreation] object creation of type Point
#  391|                     -2: [TypeMention] Point
#  391|                     -1: [ObjectInitializer] { ..., ... }
#  391|                       0: [MemberInitializer] ... = ...
#  391|                         0: [PropertyCall] access to property X
#  391|                         1: [IntLiteral] 2
#  391|                       1: [MemberInitializer] ... = ...
#  391|                         0: [PropertyCall] access to property Y
#  391|                         1: [IntLiteral] 3
#  393|         2: [LocalVariableDeclStmt] ... ...;
#  393|           0: [LocalVariableDeclAndInitExpr] Rectangle2 r2 = ...
#  393|             -1: [TypeMention] Rectangle2
#  393|             0: [LocalVariableAccess] access to local variable r2
#  393|             1: [ObjectCreation] object creation of type Rectangle2
#  393|               -2: [TypeMention] Rectangle2
#  394|               -1: [ObjectInitializer] { ..., ... }
#  395|                 0: [MemberInitializer] ... = ...
#  395|                   0: [PropertyCall] access to property P1
#  395|                   1: [ObjectInitializer] { ..., ... }
#  395|                     0: [MemberInitializer] ... = ...
#  395|                       0: [PropertyCall] access to property X
#  395|                       1: [IntLiteral] 0
#  395|                     1: [MemberInitializer] ... = ...
#  395|                       0: [PropertyCall] access to property Y
#  395|                       1: [IntLiteral] 1
#  396|                 1: [MemberInitializer] ... = ...
#  396|                   0: [PropertyCall] access to property P2
#  396|                   1: [ObjectInitializer] { ..., ... }
#  396|                     0: [MemberInitializer] ... = ...
#  396|                       0: [PropertyCall] access to property X
#  396|                       1: [IntLiteral] 2
#  396|                     1: [MemberInitializer] ... = ...
#  396|                       0: [PropertyCall] access to property Y
#  396|                       1: [IntLiteral] 3
#  398|         3: [LocalVariableDeclStmt] ... ...;
#  398|           0: [LocalVariableDeclAndInitExpr] List<Int32> digits = ...
#  398|             -1: [TypeMention] List<int>
#  398|               1: [TypeMention] int
#  398|             0: [LocalVariableAccess] access to local variable digits
#  398|             1: [ObjectCreation] object creation of type List<Int32>
#  398|               -2: [TypeMention] List<int>
#  398|                 1: [TypeMention] int
#  398|               -1: [CollectionInitializer] { ..., ... }
#  398|                 0: [ElementInitializer] call to method Add
#  398|                   0: [IntLiteral] 0
#  398|                 1: [ElementInitializer] call to method Add
#  398|                   0: [IntLiteral] 1
#  398|                 2: [ElementInitializer] call to method Add
#  398|                   0: [IntLiteral] 2
#  398|                 3: [ElementInitializer] call to method Add
#  398|                   0: [IntLiteral] 3
#  398|                 4: [ElementInitializer] call to method Add
#  398|                   0: [IntLiteral] 4
#  398|                 5: [ElementInitializer] call to method Add
#  398|                   0: [IntLiteral] 5
#  398|                 6: [ElementInitializer] call to method Add
#  398|                   0: [IntLiteral] 6
#  398|                 7: [ElementInitializer] call to method Add
#  398|                   0: [IntLiteral] 7
#  398|                 8: [ElementInitializer] call to method Add
#  398|                   0: [IntLiteral] 8
#  398|                 9: [ElementInitializer] call to method Add
#  398|                   0: [IntLiteral] 9
#  399|         4: [LocalVariableDeclStmt] ... ...;
#  399|           0: [LocalVariableDeclAndInitExpr] List<Contact> contacts = ...
#  399|             -1: [TypeMention] List<Contact>
#  399|             0: [LocalVariableAccess] access to local variable contacts
#  399|             1: [ObjectCreation] object creation of type List<Contact>
#  399|               -2: [TypeMention] List<Contact>
#  399|                 1: [TypeMention] Contact
#  399|               -1: [CollectionInitializer] { ..., ... }
#  400|                 0: [ElementInitializer] call to method Add
#  400|                   0: [ObjectCreation] object creation of type Contact
#  400|                     -2: [TypeMention] Contact
#  400|                     -1: [ObjectInitializer] { ..., ... }
#  401|                       0: [MemberInitializer] ... = ...
#  401|                         0: [PropertyCall] access to property Name
#  401|                         1: [StringLiteralUtf16] "Chris Smith"
#  402|                       1: [MemberInitializer] ... = ...
#  402|                         0: [PropertyCall] access to property PhoneNumbers
#  402|                         1: [CollectionInitializer] { ..., ... }
#  402|                           0: [ElementInitializer] call to method Add
#  402|                             0: [StringLiteralUtf16] "206-555-0101"
#  402|                           1: [ElementInitializer] call to method Add
#  402|                             0: [StringLiteralUtf16] "425-882-8080"
#  404|                 1: [ElementInitializer] call to method Add
#  404|                   0: [ObjectCreation] object creation of type Contact
#  404|                     -2: [TypeMention] Contact
#  404|                     -1: [ObjectInitializer] { ..., ... }
#  405|                       0: [MemberInitializer] ... = ...
#  405|                         0: [PropertyCall] access to property Name
#  405|                         1: [StringLiteralUtf16] "Bob Harris"
#  406|                       1: [MemberInitializer] ... = ...
#  406|                         0: [PropertyCall] access to property PhoneNumbers
#  406|                         1: [CollectionInitializer] { ..., ... }
#  406|                           0: [ElementInitializer] call to method Add
#  406|                             0: [StringLiteralUtf16] "650-555-0199"
#  409|         5: [LocalVariableDeclStmt] ... ...;
#  409|           0: [LocalVariableDeclAndInitExpr] Int32[,] is1 = ...
#  409|             -1: [TypeMention] Int32[,]
#  409|             0: [LocalVariableAccess] access to local variable is1
#  409|             1: [ArrayCreation] array creation of type Int32[,]
#  409|               -2: [TypeMention] Int32[,]
#  409|                 1: [TypeMention] int
#  409|               -1: [ArrayInitializer] { ..., ... }
#  409|                 0: [ArrayInitializer] { ..., ... }
#  409|                   0: [IntLiteral] 0
#  409|                   1: [IntLiteral] 1
#  409|                 1: [ArrayInitializer] { ..., ... }
#  409|                   0: [IntLiteral] 2
#  409|                   1: [IntLiteral] 3
#  409|                 2: [ArrayInitializer] { ..., ... }
#  409|                   0: [IntLiteral] 4
#  409|                   1: [IntLiteral] 5
#  410|         6: [LocalVariableDeclStmt] ... ...;
#  410|           0: [LocalVariableDeclAndInitExpr] Int32[,] is2 = ...
#  410|             -1: [TypeMention] Int32[,]
#  410|             0: [LocalVariableAccess] access to local variable is2
#  410|             1: [ArrayCreation] array creation of type Int32[,]
#  410|               -2: [TypeMention] Int32[,]
#  410|                 1: [TypeMention] int
#  410|               -1: [ArrayInitializer] { ..., ... }
#  410|                 0: [ArrayInitializer] { ..., ... }
#  410|                   0: [IntLiteral] 0
#  410|                   1: [IntLiteral] 1
#  410|                 1: [ArrayInitializer] { ..., ... }
#  410|                   0: [IntLiteral] 2
#  410|                   1: [IntLiteral] 3
#  410|                 2: [ArrayInitializer] { ..., ... }
#  410|                   0: [IntLiteral] 4
#  410|                   1: [IntLiteral] 5
#  410|               0: [IntLiteral] 3
#  410|               1: [IntLiteral] 2
#  411|         7: [LocalVariableDeclStmt] ... ...;
#  411|           0: [LocalVariableDeclAndInitExpr] Int32[][] is3 = ...
#  411|             -1: [TypeMention] Int32[][]
#  411|               1: [TypeMention] int
#  411|             0: [LocalVariableAccess] access to local variable is3
#  411|             1: [ArrayCreation] array creation of type Int32[][]
#  411|               -1: [TypeMention] Int32[][]
#  411|                 1: [TypeMention] int
#  411|               0: [IntLiteral] 100
#  412|         8: [LocalVariableDeclStmt] ... ...;
#  412|           0: [LocalVariableDeclAndInitExpr] Int32[,] is4 = ...
#  412|             -1: [TypeMention] Int32[,]
#  412|               1: [TypeMention] int
#  412|             0: [LocalVariableAccess] access to local variable is4
#  412|             1: [ArrayCreation] array creation of type Int32[,]
#  412|               -1: [TypeMention] Int32[,]
#  412|                 1: [TypeMention] int
#  412|               0: [IntLiteral] 100
#  412|               1: [IntLiteral] 5
#  413|         9: [LocalVariableDeclStmt] ... ...;
#  413|           0: [LocalVariableDeclAndInitExpr] Int32[] is5 = ...
#  413|             -1: [TypeMention] Int32[]
#  413|             0: [LocalVariableAccess] access to local variable is5
#  413|             1: [ArrayCreation] array creation of type Int32[]
#  413|               -1: [ArrayInitializer] { ..., ... }
#  413|                 0: [IntLiteral] 1
#  413|                 1: [IntLiteral] 10
#  413|                 2: [IntLiteral] 100
#  413|                 3: [IntLiteral] 1000
#  414|         10: [LocalVariableDeclStmt] ... ...;
#  414|           0: [LocalVariableDeclAndInitExpr] Double[] is6 = ...
#  414|             -1: [TypeMention] Double[]
#  414|             0: [LocalVariableAccess] access to local variable is6
#  414|             1: [ArrayCreation] array creation of type Double[]
#  414|               -1: [ArrayInitializer] { ..., ... }
#  414|                 0: [CastExpr] (...) ...
#  414|                   1: [IntLiteral] 1
#  414|                 1: [DoubleLiteral] 1.5
#  414|                 2: [CastExpr] (...) ...
#  414|                   1: [IntLiteral] 2
#  414|                 3: [DoubleLiteral] 2.5
#  415|         11: [LocalVariableDeclStmt] ... ...;
#  415|           0: [LocalVariableDeclAndInitExpr] String[,] is7 = ...
#  415|             -1: [TypeMention] String[,]
#  415|             0: [LocalVariableAccess] access to local variable is7
#  415|             1: [ArrayCreation] array creation of type String[,]
#  415|               -1: [ArrayInitializer] { ..., ... }
#  415|                 0: [ArrayInitializer] { ..., ... }
#  415|                   0: [StringLiteralUtf16] "hello"
#  415|                   1: [NullLiteral] null
#  415|                 1: [ArrayInitializer] { ..., ... }
#  415|                   0: [StringLiteralUtf16] "world"
#  415|                   1: [StringLiteralUtf16] "!"
#  416|         12: [LocalVariableDeclStmt] ... ...;
#  416|           0: [LocalVariableDeclAndInitExpr] <>__AnonType0<String,String[]>[] contacts2 = ...
#  416|             -1: [TypeMention] <>__AnonType0<String,String[]>[]
#  416|             0: [LocalVariableAccess] access to local variable contacts2
#  416|             1: [ArrayCreation] array creation of type <>__AnonType0<String,String[]>[]
#  416|               -1: [ArrayInitializer] { ..., ... }
#  417|                 0: [AnonymousObjectCreation] object creation of type <>__AnonType0<String,String[]>
#  417|                   -1: [ObjectInitializer] { ..., ... }
#  418|                     0: [MemberInitializer] ... = ...
#  418|                       0: [PropertyCall] access to property Name
#  418|                       1: [StringLiteralUtf16] "Chris Smith"
#  419|                     1: [MemberInitializer] ... = ...
#  419|                       0: [PropertyCall] access to property PhoneNumbers
#  419|                       1: [ArrayCreation] array creation of type String[]
#  419|                         -1: [ArrayInitializer] { ..., ... }
#  419|                           0: [StringLiteralUtf16] "206-555-0101"
#  419|                           1: [StringLiteralUtf16] "425-882-8080"
#  421|                 1: [AnonymousObjectCreation] object creation of type <>__AnonType0<String,String[]>
#  421|                   -1: [ObjectInitializer] { ..., ... }
#  422|                     0: [MemberInitializer] ... = ...
#  422|                       0: [PropertyCall] access to property Name
#  422|                       1: [StringLiteralUtf16] "Bob Harris"
#  423|                     1: [MemberInitializer] ... = ...
#  423|                       0: [PropertyCall] access to property PhoneNumbers
#  423|                       1: [ArrayCreation] array creation of type String[]
#  423|                         -1: [ArrayInitializer] { ..., ... }
#  423|                           0: [StringLiteralUtf16] "650-555-0199"
#  426|         13: [LocalVariableDeclStmt] ... ...;
#  426|           0: [LocalVariableDeclAndInitExpr] Int32 i = ...
#  426|             -1: [TypeMention] int
#  426|             0: [LocalVariableAccess] access to local variable i
#  426|             1: [IntLiteral] 1
#  427|         14: [LocalVariableDeclStmt] ... ...;
#  427|           0: [LocalVariableDeclAndInitExpr] List<Int32> list1 = ...
#  427|             -1: [TypeMention] List<int>
#  427|             0: [LocalVariableAccess] access to local variable list1
#  427|             1: [ObjectCreation] object creation of type List<Int32>
#  427|               -2: [TypeMention] List<int>
#  427|                 1: [TypeMention] int
#  427|               -1: [CollectionInitializer] { ..., ... }
#  427|                 0: [ElementInitializer] call to method Add
#  427|                   0: [AssignExpr] ... = ...
#  427|                     0: [LocalVariableAccess] access to local variable i
#  427|                     1: [IntLiteral] 2
#  428|         15: [LocalVariableDeclStmt] ... ...;
#  428|           0: [LocalVariableDeclAndInitExpr] List<Object> list2 = ...
#  428|             -1: [TypeMention] List<object>
#  428|             0: [LocalVariableAccess] access to local variable list2
#  428|             1: [ObjectCreation] object creation of type List<Object>
#  428|               -2: [TypeMention] List<object>
#  428|                 1: [TypeMention] object
#  428|               -1: [CollectionInitializer] { ..., ... }
#  428|                 0: [ElementInitializer] call to method Add
#  428|                   0: [AnonymousObjectCreation] object creation of type <>__AnonType1<Int32>
#  428|                     -1: [ObjectInitializer] { ..., ... }
#  428|                       0: [MemberInitializer] ... = ...
#  428|                         0: [PropertyCall] access to property i
#  428|                         1: [IntLiteral] 2
#  429|         16: [LocalVariableDeclStmt] ... ...;
#  429|           0: [LocalVariableDeclAndInitExpr] List<Boolean> list3 = ...
#  429|             -1: [TypeMention] List<bool>
#  429|             0: [LocalVariableAccess] access to local variable list3
#  429|             1: [ObjectCreation] object creation of type List<Boolean>
#  429|               -2: [TypeMention] List<bool>
#  429|                 1: [TypeMention] bool
#  429|               -1: [CollectionInitializer] { ..., ... }
#  429|                 0: [ElementInitializer] call to method Add
#  429|                   0: [EQExpr] ... == ...
#  429|                     0: [LocalVariableAccess] access to local variable i
#  429|                     1: [IntLiteral] 2
#  432|     6: [DelegateType] S
#-----|       2: (Parameters)
#  432|         0: [Parameter] x
#  432|           -1: [TypeMention] int
#  432|         1: [Parameter] y
#  432|           -1: [TypeMention] int
#  433|     7: [DelegateType] Unit
#  435|     8: [Method] MultiDimensionalArrayCreations
#  435|       -1: [TypeMention] Void
#  436|       4: [BlockStmt] {...}
#  437|         0: [LocalVariableDeclStmt] ... ...;
#  437|           0: [LocalVariableDeclAndInitExpr] Object o = ...
#  437|             -1: [TypeMention] object
#  437|             0: [LocalVariableAccess] access to local variable o
#  437|             1: [ArrayCreation] array creation of type Int32[,]
#  437|               -2: [TypeMention] Int32[,]
#  437|                 1: [TypeMention] int
#  437|               -1: [ArrayInitializer] { ..., ... }
#  437|                 0: [ArrayInitializer] { ..., ... }
#  437|                   0: [IntLiteral] 1
#  437|                   1: [IntLiteral] 2
#  437|                 1: [ArrayInitializer] { ..., ... }
#  437|                   0: [IntLiteral] 3
#  437|                   1: [IntLiteral] 4
#  437|                 2: [ArrayInitializer] { ..., ... }
#  437|                   0: [IntLiteral] 5
#  437|                   1: [IntLiteral] 6
#  438|         1: [ExprStmt] ...;
#  438|           0: [AssignExpr] ... = ...
#  438|             0: [LocalVariableAccess] access to local variable o
#  438|             1: [ArrayCreation] array creation of type Int32[,,]
#  438|               -2: [TypeMention] Int32[,,]
#  438|                 1: [TypeMention] int
#  438|               -1: [ArrayInitializer] { ..., ... }
#  438|                 0: [ArrayInitializer] { ..., ... }
#  438|                   0: [ArrayInitializer] { ..., ... }
#  438|                     0: [IntLiteral] 1
#  438|                     1: [IntLiteral] 2
#  438|                     2: [IntLiteral] 3
#  438|                   1: [ArrayInitializer] { ..., ... }
#  438|                     0: [IntLiteral] 4
#  438|                     1: [IntLiteral] 5
#  438|                     2: [IntLiteral] 6
#  438|                 1: [ArrayInitializer] { ..., ... }
#  438|                   0: [ArrayInitializer] { ..., ... }
#  438|                     0: [IntLiteral] 7
#  438|                     1: [IntLiteral] 8
#  438|                     2: [IntLiteral] 9
#  438|                   1: [ArrayInitializer] { ..., ... }
#  438|                     0: [IntLiteral] 10
#  438|                     1: [IntLiteral] 11
#  438|                     2: [IntLiteral] 12
#  439|         2: [ExprStmt] ...;
#  439|           0: [AssignExpr] ... = ...
#  439|             0: [LocalVariableAccess] access to local variable o
#  439|             1: [ArrayCreation] array creation of type Int32[,][,]
#  439|               -2: [TypeMention] Int32[,][,]
#  439|                 1: [TypeMention] int
#  440|               -1: [ArrayInitializer] { ..., ... }
#  441|                 0: [ArrayInitializer] { ..., ... }
#  441|                   0: [ArrayCreation] array creation of type Int32[,]
#  441|                     -2: [TypeMention] Int32[,]
#  441|                       1: [TypeMention] int
#  441|                     -1: [ArrayInitializer] { ..., ... }
#  441|                       0: [ArrayInitializer] { ..., ... }
#  441|                         0: [IntLiteral] 1
#  441|                         1: [IntLiteral] 3
#  441|                       1: [ArrayInitializer] { ..., ... }
#  441|                         0: [IntLiteral] 5
#  441|                         1: [IntLiteral] 7
#  441|                   1: [ArrayCreation] array creation of type Int32[,]
#  441|                     -2: [TypeMention] Int32[,]
#  441|                       1: [TypeMention] int
#  441|                     -1: [ArrayInitializer] { ..., ... }
#  441|                       0: [ArrayInitializer] { ..., ... }
#  441|                         0: [IntLiteral] 0
#  441|                         1: [IntLiteral] 2
#  441|                       1: [ArrayInitializer] { ..., ... }
#  441|                         0: [IntLiteral] 4
#  441|                         1: [IntLiteral] 6
#  441|                       2: [ArrayInitializer] { ..., ... }
#  441|                         0: [IntLiteral] 8
#  441|                         1: [IntLiteral] 10
#  441|                   2: [ArrayCreation] array creation of type Int32[,]
#  441|                     -2: [TypeMention] Int32[,]
#  441|                       1: [TypeMention] int
#  441|                     -1: [ArrayInitializer] { ..., ... }
#  441|                       0: [ArrayInitializer] { ..., ... }
#  441|                         0: [IntLiteral] 11
#  441|                         1: [IntLiteral] 22
#  441|                       1: [ArrayInitializer] { ..., ... }
#  441|                         0: [IntLiteral] 99
#  441|                         1: [IntLiteral] 88
#  441|                       2: [ArrayInitializer] { ..., ... }
#  441|                         0: [IntLiteral] 0
#  441|                         1: [IntLiteral] 9
#  442|                 1: [ArrayInitializer] { ..., ... }
#  442|                   0: [ArrayCreation] array creation of type Int32[,]
#  442|                     -2: [TypeMention] Int32[,]
#  442|                       1: [TypeMention] int
#  442|                     -1: [ArrayInitializer] { ..., ... }
#  442|                       0: [ArrayInitializer] { ..., ... }
#  442|                         0: [IntLiteral] 1
#  442|                         1: [IntLiteral] 3
#  442|                       1: [ArrayInitializer] { ..., ... }
#  442|                         0: [IntLiteral] 5
#  442|                         1: [IntLiteral] 7
#  442|                   1: [ArrayCreation] array creation of type Int32[,]
#  442|                     -2: [TypeMention] Int32[,]
#  442|                       1: [TypeMention] int
#  442|                     -1: [ArrayInitializer] { ..., ... }
#  442|                       0: [ArrayInitializer] { ..., ... }
#  442|                         0: [IntLiteral] 0
#  442|                         1: [IntLiteral] 2
#  442|                       1: [ArrayInitializer] { ..., ... }
#  442|                         0: [IntLiteral] 4
#  442|                         1: [IntLiteral] 6
#  442|                       2: [ArrayInitializer] { ..., ... }
#  442|                         0: [IntLiteral] 8
#  442|                         1: [IntLiteral] 10
#  442|                   2: [ArrayCreation] array creation of type Int32[,]
#  442|                     -2: [TypeMention] Int32[,]
#  442|                       1: [TypeMention] int
#  442|                     -1: [ArrayInitializer] { ..., ... }
#  442|                       0: [ArrayInitializer] { ..., ... }
#  442|                         0: [IntLiteral] 11
#  442|                         1: [IntLiteral] 22
#  442|                       1: [ArrayInitializer] { ..., ... }
#  442|                         0: [IntLiteral] 99
#  442|                         1: [IntLiteral] 88
#  442|                       2: [ArrayInitializer] { ..., ... }
#  442|                         0: [IntLiteral] 0
#  442|                         1: [IntLiteral] 9
#  444|         3: [ExprStmt] ...;
#  444|           0: [AssignExpr] ... = ...
#  444|             0: [LocalVariableAccess] access to local variable o
#  444|             1: [ArrayCreation] array creation of type Int32[,][]
#  444|               -2: [TypeMention] Int32[][,]
#  444|                 1: [TypeMention] int
#  444|               -1: [ArrayInitializer] { ..., ... }
#  444|                 0: [ArrayCreation] array creation of type Int32[,]
#  444|                   -2: [TypeMention] Int32[,]
#  444|                     1: [TypeMention] int
#  444|                   -1: [ArrayInitializer] { ..., ... }
#  444|                     0: [ArrayInitializer] { ..., ... }
#  444|                       0: [IntLiteral] 1
#  444|                       1: [IntLiteral] 2
#  444|                 1: [ArrayCreation] array creation of type Int32[,]
#  444|                   -2: [TypeMention] Int32[,]
#  444|                     1: [TypeMention] int
#  444|                   -1: [ArrayInitializer] { ..., ... }
#  444|                     0: [ArrayInitializer] { ..., ... }
#  444|                       0: [IntLiteral] 1
#  444|                       1: [IntLiteral] 2
#  444|                       2: [IntLiteral] 3
#  444|                     1: [ArrayInitializer] { ..., ... }
#  444|                       0: [IntLiteral] 1
#  444|                       1: [IntLiteral] 2
#  444|                       2: [IntLiteral] 3
#  444|                     2: [ArrayInitializer] { ..., ... }
#  444|                       0: [IntLiteral] 1
#  444|                       1: [IntLiteral] 2
#  444|                       2: [IntLiteral] 3
#  444|                     3: [ArrayInitializer] { ..., ... }
#  444|                       0: [IntLiteral] 1
#  444|                       1: [IntLiteral] 2
#  444|                       2: [IntLiteral] 3
#  447|     9: [Method] MainAnonymousFunctions
#  447|       -1: [TypeMention] Void
#  448|       4: [BlockStmt] {...}
#  449|         0: [LocalVariableDeclStmt] ... ...;
#  449|           0: [LocalVariableDeclAndInitExpr] Func<Int16,Byte> f1 = ...
#  449|             -1: [TypeMention] Func<short, byte>
#  449|               1: [TypeMention] short
#  449|               2: [TypeMention] byte
#  449|             0: [LocalVariableAccess] access to local variable f1
#  449|             1: [LambdaExpr] (...) => ...
#-----|               2: (Parameters)
#  449|                 0: [Parameter] x
#  449|               4: [CastExpr] (...) ...
#  449|                 0: [TypeAccess] access to type Byte
#  449|                   0: [TypeMention] byte
#  449|                 1: [AddExpr] ... + ...
#  449|                   0: [CastExpr] (...) ...
#  449|                     1: [ParameterAccess] access to parameter x
#  449|                   1: [IntLiteral] 1
#  450|         1: [LocalVariableDeclStmt] ... ...;
#  450|           0: [LocalVariableDeclAndInitExpr] Func<Int32,Double> f2 = ...
#  450|             -1: [TypeMention] Func<int, double>
#  450|               1: [TypeMention] int
#  450|               2: [TypeMention] double
#  450|             0: [LocalVariableAccess] access to local variable f2
#  450|             1: [LambdaExpr] (...) => ...
#-----|               2: (Parameters)
#  450|                 0: [Parameter] x
#  450|               4: [BlockStmt] {...}
#  450|                 0: [ReturnStmt] return ...;
#  450|                   0: [CastExpr] (...) ...
#  450|                     1: [AddExpr] ... + ...
#  450|                       0: [ParameterAccess] access to parameter x
#  450|                       1: [IntLiteral] 1
#  451|         2: [LocalVariableDeclStmt] ... ...;
#  451|           0: [LocalVariableDeclAndInitExpr] Func<Int32,Int32> f3 = ...
#  451|             -1: [TypeMention] Func<int, int>
#  451|               1: [TypeMention] int
#  451|               2: [TypeMention] int
#  451|             0: [LocalVariableAccess] access to local variable f3
#  451|             1: [LambdaExpr] (...) => ...
#-----|               2: (Parameters)
#  451|                 0: [Parameter] x
#  451|                   -1: [TypeMention] int
#  451|               4: [AddExpr] ... + ...
#  451|                 0: [ParameterAccess] access to parameter x
#  451|                 1: [IntLiteral] 1
#  452|         3: [LocalVariableDeclStmt] ... ...;
#  452|           0: [LocalVariableDeclAndInitExpr] Func<Int32,String> f4 = ...
#  452|             -1: [TypeMention] Func<int, string>
#  452|               1: [TypeMention] int
#  452|               2: [TypeMention] string
#  452|             0: [LocalVariableAccess] access to local variable f4
#  452|             1: [LambdaExpr] (...) => ...
#-----|               2: (Parameters)
#  452|                 0: [Parameter] x
#  452|                   -1: [TypeMention] int
#  452|               4: [BlockStmt] {...}
#  452|                 0: [ReturnStmt] return ...;
#  452|                   0: [AddExpr] ... + ...
#  452|                     0: [CastExpr] (...) ...
#  452|                       1: [ParameterAccess] access to parameter x
#  452|                     1: [StringLiteralUtf16] ""
#  453|         4: [LocalVariableDeclStmt] ... ...;
#  453|           0: [LocalVariableDeclAndInitExpr] S f5 = ...
#  453|             -1: [TypeMention] S
#  453|             0: [LocalVariableAccess] access to local variable f5
#  453|             1: [LambdaExpr] (...) => ...
#-----|               2: (Parameters)
#  453|                 0: [Parameter] x
#  453|                 1: [Parameter] y
#  453|               4: [MulExpr] ... * ...
#  453|                 0: [ParameterAccess] access to parameter x
#  453|                 1: [ParameterAccess] access to parameter y
#  454|         5: [LocalVariableDeclStmt] ... ...;
#  454|           0: [LocalVariableDeclAndInitExpr] Unit f6 = ...
#  454|             -1: [TypeMention] Unit
#  454|             0: [LocalVariableAccess] access to local variable f6
#  454|             1: [LambdaExpr] (...) => ...
#  454|               4: [MethodCall] call to method WriteLine
#  454|                 -1: [TypeAccess] access to type Console
#  454|                   0: [TypeMention] Console
#  455|         6: [LocalVariableDeclStmt] ... ...;
#  455|           0: [LocalVariableDeclAndInitExpr] Func<Int32,Int32> f7 = ...
#  455|             -1: [TypeMention] Func<int, int>
#  455|               1: [TypeMention] int
#  455|               2: [TypeMention] int
#  455|             0: [LocalVariableAccess] access to local variable f7
#  455|             1: [AnonymousMethodExpr] delegate(...) { ... }
#-----|               2: (Parameters)
#  455|                 0: [Parameter] x
#  455|                   -1: [TypeMention] int
#  455|               4: [BlockStmt] {...}
#  455|                 0: [ReturnStmt] return ...;
#  455|                   0: [AddExpr] ... + ...
#  455|                     0: [ParameterAccess] access to parameter x
#  455|                     1: [IntLiteral] 1
#  456|         7: [LocalVariableDeclStmt] ... ...;
#  456|           0: [LocalVariableDeclAndInitExpr] Int32 j = ...
#  456|             -1: [TypeMention] int
#  456|             0: [LocalVariableAccess] access to local variable j
#  456|             1: [IntLiteral] 0
#  457|         8: [LocalVariableDeclStmt] ... ...;
#  457|           0: [LocalVariableDeclAndInitExpr] Func<Int32> f8 = ...
#  457|             -1: [TypeMention] Func<int>
#  457|               1: [TypeMention] int
#  457|             0: [LocalVariableAccess] access to local variable f8
#  457|             1: [AnonymousMethodExpr] delegate(...) { ... }
#  457|               4: [BlockStmt] {...}
#  457|                 0: [ReturnStmt] return ...;
#  457|                   0: [AddExpr] ... + ...
#  457|                     0: [LocalVariableAccess] access to local variable j
#  457|                     1: [IntLiteral] 1
#  462|   18: [Class] OperatorCalls
#  464|     5: [Method] delegateCombine
#  464|       -1: [TypeMention] Void
#-----|       2: (Parameters)
#  464|         0: [Parameter] fun
#  464|           -1: [TypeMention] MyDelegate
#  465|       4: [BlockStmt] {...}
#  466|         0: [LocalVariableDeclStmt] ... ...;
#  466|           0: [LocalVariableDeclAndInitExpr] MyDelegate PropertyChanged = ...
#  466|             -1: [TypeMention] MyDelegate
#  466|             0: [LocalVariableAccess] access to local variable PropertyChanged
#  466|             1: [NullLiteral] null
#  467|         1: [ExprStmt] ...;
#  467|           0: [AssignAddExpr] ... += ...
#  467|             0: [LocalVariableAccess] access to local variable PropertyChanged
#  467|             1: [ParameterAccess] access to parameter fun
#  470|     6: [Method] addition
#  470|       -1: [TypeMention] Num
#-----|       2: (Parameters)
#  470|         0: [Parameter] a
#  470|           -1: [TypeMention] Num
#  470|         1: [Parameter] b
#  470|           -1: [TypeMention] Num
#  470|         2: [Parameter] c
#  470|           -1: [TypeMention] Num
#  471|       4: [BlockStmt] {...}
#  472|         0: [LocalVariableDeclStmt] ... ...;
#  472|           0: [LocalVariableDeclAndInitExpr] Num result = ...
#  472|             -1: [TypeMention] Num
#  472|             0: [LocalVariableAccess] access to local variable result
#  472|             1: [OperatorCall] call to operator +
#  472|               0: [ParameterAccess] access to parameter a
#  472|               1: [ParameterAccess] access to parameter b
#  473|         1: [ExprStmt] ...;
#  473|           0: [AssignAddExpr] ... += ...
#  473|             0: [LocalVariableAccess] access to local variable result
#  473|             1: [ParameterAccess] access to parameter c
#  474|         2: [ReturnStmt] return ...;
#  474|           0: [LocalVariableAccess] access to local variable result
#  476|     7: [Class] Num
#  478|       4: [Field] value
#  478|         -1: [TypeMention] int
#  480|       5: [InstanceConstructor] Num
#-----|         2: (Parameters)
#  480|           0: [Parameter] value
#  480|             -1: [TypeMention] int
#  481|         4: [BlockStmt] {...}
#  482|           0: [ExprStmt] ...;
#  482|             0: [AssignExpr] ... = ...
#  482|               0: [FieldAccess] access to field value
#  482|                 -1: [ThisAccess] this access
#  482|               1: [ParameterAccess] access to parameter value
#  485|       6: [AddOperator] +
#  485|         -1: [TypeMention] Num
#-----|         2: (Parameters)
#  485|           0: [Parameter] c1
#  485|             -1: [TypeMention] Num
#  485|           1: [Parameter] c2
#  485|             -1: [TypeMention] Num
#  486|         4: [BlockStmt] {...}
#  487|           0: [ReturnStmt] return ...;
#  487|             0: [ObjectCreation] object creation of type Num
#  487|               -1: [TypeMention] Num
#  487|               0: [AddExpr] ... + ...
#  487|                 0: [FieldAccess] access to field value
#  487|                   -1: [ParameterAccess] access to parameter c1
#  487|                 1: [FieldAccess] access to field value
#  487|                   -1: [ParameterAccess] access to parameter c2
#  491|     8: [DelegateType] MyDelegate
#-----|       2: (Parameters)
#  491|         0: [Parameter] e
#  491|           -1: [TypeMention] string
#  494|   19: [Class] ExpressionDepth
#  496|     5: [Field] d
#  496|       -1: [TypeMention] int
#  496|       1: [AssignExpr] ... = ...
#  496|         0: [MemberConstantAccess] access to constant d
#  496|         1: [AddExpr] ... + ...
#  496|           0: [AddExpr] ... + ...
#  496|             0: [AddExpr] ... + ...
#  496|               0: [AddExpr] ... + ...
#  496|                 0: [AddExpr] ... + ...
#  496|                   0: [AddExpr] ... + ...
#  496|                     0: [AddExpr] ... + ...
#  496|                       0: [AddExpr] ... + ...
#  496|                         0: [AddExpr] ... + ...
#  496|                           0: [AddExpr] ... + ...
#  496|                             0: [AddExpr] ... + ...
#  496|                               0: [AddExpr] ... + ...
#  496|                                 0: [AddExpr] ... + ...
#  496|                                   0: [AddExpr] ... + ...
#  496|                                     0: [AddExpr] ... + ...
#  496|                                       0: [AddExpr] ... + ...
#  496|                                         0: [AddExpr] ... + ...
#  496|                                           0: [AddExpr] ... + ...
#  496|                                             0: [AddExpr] ... + ...
#  496|                                               0: [AddExpr] ... + ...
#  496|                                                 0: [AddExpr] ... + ...
#  496|                                                   0: [AddExpr] ... + ...
#  496|                                                     0: [AddExpr] ... + ...
#  496|                                                       0: [AddExpr] ... + ...
#  496|                                                         0: [AddExpr] ... + ...
#  496|                                                           0: [AddExpr] ... + ...
#  496|                                                             0: [AddExpr] ... + ...
#  496|                                                               0: [AddExpr] ... + ...
#  496|                                                                 0: [AddExpr] ... + ...
#  496|                                                                   0: [AddExpr] ... + ...
#  496|                                                                     0: [AddExpr] ... + ...
#  496|                                                                       0: [AddExpr] ... + ...
#  496|                                                                         0: [AddExpr] ... + ...
#  496|                                                                           0: [AddExpr] ... + ...
#  496|                                                                             0: [AddExpr] ... + ...
#  496|                                                                               0: [AddExpr] ... + ...
#  496|                                                                                 0: [AddExpr] ... + ...
#  496|                                                                                   0: [AddExpr] ... + ...
#  496|                                                                                     0: [AddExpr] ... + ...
#  496|                                                                                       0: [AddExpr] ... + ...
#  496|                                                                                         0: [AddExpr] ... + ...
#  496|                                                                                           0: [AddExpr] ... + ...
#  496|                                                                                             0: [AddExpr] ... + ...
#  496|                                                                                               0: [AddExpr] ... + ...
#  496|                                                                                                 0: [AddExpr] ... + ...
#  496|                                                                                                   0: [AddExpr] ... + ...
#  496|                                                                                                     0: [AddExpr] ... + ...
#  496|                                                                                                       0: [AddExpr] ... + ...
#  496|                                                                                                         0: [AddExpr] ... + ...
#  496|                                                                                                           0: [AddExpr] ... + ...
#  496|                                                                                                             0: [AddExpr] ... + ...
#  496|                                                                                                               0: [AddExpr] ... + ...
#  496|                                                                                                                 0: [AddExpr] ... + ...
#  496|                                                                                                                   0: [AddExpr] ... + ...
#  496|                                                                                                                     0: [AddExpr] ... + ...
#  496|                                                                                                                       0: [AddExpr] ... + ...
#  496|                                                                                                                         0: [AddExpr] ... + ...
#  496|                                                                                                                           0: [AddExpr] ... + ...
#  496|                                                                                                                             0: [AddExpr] ... + ...
#  496|                                                                                                                               0: [AddExpr] ... + ...
#  496|                                                                                                                                 0: [AddExpr] ... + ...
#  496|                                                                                                                                   0: [AddExpr] ... + ...
#  496|                                                                                                                                     0: [AddExpr] ... + ...
#  496|                                                                                                                                       0: [AddExpr] ... + ...
#  496|                                                                                                                                         0: [AddExpr] ... + ...
#  496|                                                                                                                                           0: [AddExpr] ... + ...
#  496|                                                                                                                                             0: [AddExpr] ... + ...
#  496|                                                                                                                                               0: [AddExpr] ... + ...
#  496|                                                                                                                                                 0: [AddExpr] ... + ...
#  496|                                                                                                                                                   0: [AddExpr] ... + ...
#  496|                                                                                                                                                     0: [AddExpr] ... + ...
#  496|                                                                                                                                                       0: [AddExpr] ... + ...
#  496|                                                                                                                                                         0: [AddExpr] ... + ...
#  496|                                                                                                                                                           0: [AddExpr] ... + ...
#  496|                                                                                                                                                             0: [AddExpr] ... + ...
#  496|                                                                                                                                                               0: [AddExpr] ... + ...
#  496|                                                                                                                                                                 0: [AddExpr] ... + ...
#  496|                                                                                                                                                                   0: [AddExpr] ... + ...
#  496|                                                                                                                                                                     0: [AddExpr] ... + ...
#  496|                                                                                                                                                                       0: [IntLiteral] 1
#  496|                                                                                                                                                                       1: [IntLiteral] 1
#  496|                                                                                                                                                                     1: [IntLiteral] 1
#  496|                                                                                                                                                                   1: [IntLiteral] 1
#  496|                                                                                                                                                                 1: [IntLiteral] 1
#  496|                                                                                                                                                               1: [IntLiteral] 1
#  496|                                                                                                                                                             1: [IntLiteral] 1
#  496|                                                                                                                                                           1: [IntLiteral] 1
#  496|                                                                                                                                                         1: [IntLiteral] 1
#  496|                                                                                                                                                       1: [IntLiteral] 1
#  496|                                                                                                                                                     1: [IntLiteral] 1
#  496|                                                                                                                                                   1: [IntLiteral] 1
#  496|                                                                                                                                                 1: [IntLiteral] 1
#  496|                                                                                                                                               1: [IntLiteral] 1
#  496|                                                                                                                                             1: [IntLiteral] 1
#  496|                                                                                                                                           1: [IntLiteral] 1
#  496|                                                                                                                                         1: [IntLiteral] 1
#  496|                                                                                                                                       1: [IntLiteral] 1
#  496|                                                                                                                                     1: [IntLiteral] 1
#  496|                                                                                                                                   1: [IntLiteral] 1
#  496|                                                                                                                                 1: [IntLiteral] 1
#  496|                                                                                                                               1: [IntLiteral] 1
#  496|                                                                                                                             1: [IntLiteral] 1
#  496|                                                                                                                           1: [IntLiteral] 1
#  496|                                                                                                                         1: [IntLiteral] 1
#  496|                                                                                                                       1: [IntLiteral] 1
#  496|                                                                                                                     1: [IntLiteral] 1
#  496|                                                                                                                   1: [IntLiteral] 1
#  496|                                                                                                                 1: [IntLiteral] 1
#  496|                                                                                                               1: [IntLiteral] 1
#  496|                                                                                                             1: [IntLiteral] 1
#  496|                                                                                                           1: [IntLiteral] 1
#  496|                                                                                                         1: [IntLiteral] 1
#  496|                                                                                                       1: [IntLiteral] 1
#  496|                                                                                                     1: [IntLiteral] 1
#  496|                                                                                                   1: [IntLiteral] 1
#  496|                                                                                                 1: [IntLiteral] 1
#  496|                                                                                               1: [IntLiteral] 1
#  496|                                                                                             1: [IntLiteral] 1
#  496|                                                                                           1: [IntLiteral] 1
#  497|                                                                                         1: [IntLiteral] 1
#  497|                                                                                       1: [IntLiteral] 1
#  497|                                                                                     1: [IntLiteral] 1
#  497|                                                                                   1: [IntLiteral] 1
#  497|                                                                                 1: [IntLiteral] 1
#  497|                                                                               1: [IntLiteral] 1
#  497|                                                                             1: [IntLiteral] 1
#  497|                                                                           1: [IntLiteral] 1
#  497|                                                                         1: [IntLiteral] 1
#  497|                                                                       1: [IntLiteral] 1
#  497|                                                                     1: [IntLiteral] 1
#  497|                                                                   1: [IntLiteral] 1
#  497|                                                                 1: [IntLiteral] 1
#  497|                                                               1: [IntLiteral] 1
#  497|                                                             1: [IntLiteral] 1
#  497|                                                           1: [IntLiteral] 1
#  497|                                                         1: [IntLiteral] 1
#  497|                                                       1: [IntLiteral] 1
#  497|                                                     1: [IntLiteral] 1
#  497|                                                   1: [IntLiteral] 1
#  497|                                                 1: [IntLiteral] 1
#  497|                                               1: [IntLiteral] 1
#  497|                                             1: [IntLiteral] 1
#  497|                                           1: [IntLiteral] 1
#  497|                                         1: [IntLiteral] 1
#  497|                                       1: [IntLiteral] 1
#  497|                                     1: [IntLiteral] 1
#  497|                                   1: [IntLiteral] 1
#  497|                                 1: [IntLiteral] 1
#  497|                               1: [IntLiteral] 1
#  497|                             1: [IntLiteral] 1
#  497|                           1: [IntLiteral] 1
#  497|                         1: [IntLiteral] 1
#  497|                       1: [IntLiteral] 1
#  497|                     1: [IntLiteral] 1
#  497|                   1: [IntLiteral] 1
#  497|                 1: [IntLiteral] 1
#  497|               1: [IntLiteral] 1
#  497|             1: [IntLiteral] 1
#  497|           1: [IntLiteral] 1
#  500|   20: [Class] TupleExprs
#  502|     5: [Method] Test
#  502|       -1: [TypeMention] Void
#  503|       4: [BlockStmt] {...}
#  504|         0: [LocalVariableDeclStmt] ... ...;
#  504|           0: [LocalVariableDeclAndInitExpr] (Int32,String) a = ...
#  504|             -1: [TypeMention] (int, string)
#  504|             0: [LocalVariableAccess] access to local variable a
#  504|             1: [DefaultValueExpr] default(...)
#  504|               0: [TypeAccess] access to type (Int32,String)
#  504|                 0: [TypeMention] (int, string)
#  504|                   1: [TypeMention] int
#  504|                   2: [TypeMention] string
#  505|         1: [LocalVariableDeclStmt] ... ...;
#  505|           0: [LocalVariableDeclAndInitExpr] (Boolean,Int32[],Object) b = ...
#  505|             -1: [TypeMention] (bool, Int32[], object)
#  505|             0: [LocalVariableAccess] access to local variable b
#  505|             1: [DefaultValueExpr] default(...)
#  505|               0: [TypeAccess] access to type (Boolean,Int32[],Object)
#  505|                 0: [TypeMention] (bool, Int32[], object)
#  505|                   1: [TypeMention] bool
#  505|                   2: [TypeMention] Int32[]
#  505|                     1: [TypeMention] int
#  505|                   3: [TypeMention] object
#  506|         2: [LocalVariableDeclStmt] ... ...;
#  506|           0: [LocalVariableDeclAndInitExpr] Type x = ...
#  506|             -1: [TypeMention] Type
#  506|             0: [LocalVariableAccess] access to local variable x
#  506|             1: [TypeofExpr] typeof(...)
#  506|               0: [TypeAccess] access to type (Int32,String)
#  506|                 0: [TypeMention] (int, string)
#  506|                   1: [TypeMention] int
#  506|                   2: [TypeMention] string
#  507|         3: [LocalVariableDeclStmt] ... ...;
#  507|           0: [LocalVariableDeclAndInitExpr] Type y = ...
#  507|             -1: [TypeMention] Type
#  507|             0: [LocalVariableAccess] access to local variable y
#  507|             1: [TypeofExpr] typeof(...)
#  507|               0: [TypeAccess] access to type (Boolean,Int32[],dynamic)
#  507|                 0: [TypeMention] (bool, Int32[], dynamic)
#  507|                   1: [TypeMention] bool
#  507|                   2: [TypeMention] Int32[]
#  507|                     1: [TypeMention] int
#  507|                   3: [TypeMention] dynamic
