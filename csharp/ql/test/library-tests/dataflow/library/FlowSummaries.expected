| MS.Internal.Xml.Linq.ComponentModel.XDeferredAxis<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Array.Add(object) | argument 0 -> element of argument -1 | true |
| System.Array.AsReadOnly<T>(T[]) | element of argument 0 -> element of return (normal) | true |
| System.Array.Clone() | element of argument 0 -> element of return (normal) | true |
| System.Array.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Array.CopyTo(Array, long) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Array.Find<T>(T[], Predicate<T>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Array.Find<T>(T[], Predicate<T>) | element of argument 0 -> return (normal) | true |
| System.Array.FindAll<T>(T[], Predicate<T>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Array.FindAll<T>(T[], Predicate<T>) | element of argument 0 -> return (normal) | true |
| System.Array.FindLast<T>(T[], Predicate<T>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Array.FindLast<T>(T[], Predicate<T>) | element of argument 0 -> return (normal) | true |
| System.Array.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Array.Insert(int, object) | argument 1 -> element of argument -1 | true |
| System.Array.Reverse(Array) | element of argument 0 -> element of return (normal) | true |
| System.Array.Reverse(Array, int, int) | element of argument 0 -> element of return (normal) | true |
| System.Array.Reverse<T>(T[]) | element of argument 0 -> element of return (normal) | true |
| System.Array.Reverse<T>(T[], int, int) | element of argument 0 -> element of return (normal) | true |
| System.Array.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.Array.set_Item(int, object) | argument 1 -> element of argument -1 | true |
| System.Boolean.Parse(string) | argument 0 -> return (normal) | false |
| System.Boolean.TryParse(string, out bool) | argument 0 -> return (normal) | false |
| System.Boolean.TryParse(string, out bool) | argument 0 -> return (out parameter 1) | false |
| System.Collections.ArrayList.Add(object) | argument 0 -> element of argument -1 | true |
| System.Collections.ArrayList.AddRange(ICollection) | element of argument 0 -> element of argument -1 | true |
| System.Collections.ArrayList.Clone() | element of argument 0 -> element of return (normal) | true |
| System.Collections.ArrayList.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.ArrayList.FixedSize(ArrayList) | element of argument 0 -> element of return (normal) | true |
| System.Collections.ArrayList.FixedSize(IList) | element of argument 0 -> element of return (normal) | true |
| System.Collections.ArrayList.FixedSizeArrayList.Add(object) | argument 0 -> element of argument -1 | true |
| System.Collections.ArrayList.FixedSizeArrayList.AddRange(ICollection) | element of argument 0 -> element of argument -1 | true |
| System.Collections.ArrayList.FixedSizeArrayList.Clone() | element of argument 0 -> element of return (normal) | true |
| System.Collections.ArrayList.FixedSizeArrayList.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.ArrayList.FixedSizeArrayList.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.ArrayList.FixedSizeArrayList.GetEnumerator(int, int) | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.ArrayList.FixedSizeArrayList.GetRange(int, int) | element of argument 0 -> element of return (normal) | true |
| System.Collections.ArrayList.FixedSizeArrayList.Insert(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.ArrayList.FixedSizeArrayList.InsertRange(int, ICollection) | element of argument 1 -> element of argument -1 | true |
| System.Collections.ArrayList.FixedSizeArrayList.Reverse(int, int) | element of argument 0 -> element of return (normal) | true |
| System.Collections.ArrayList.FixedSizeArrayList.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.Collections.ArrayList.FixedSizeArrayList.set_Item(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.ArrayList.FixedSizeList.Add(object) | argument 0 -> element of argument -1 | true |
| System.Collections.ArrayList.FixedSizeList.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.ArrayList.FixedSizeList.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.ArrayList.FixedSizeList.Insert(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.ArrayList.FixedSizeList.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.Collections.ArrayList.FixedSizeList.set_Item(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.ArrayList.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.ArrayList.GetEnumerator(int, int) | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.ArrayList.GetRange(int, int) | element of argument 0 -> element of return (normal) | true |
| System.Collections.ArrayList.IListWrapper.Add(object) | argument 0 -> element of argument -1 | true |
| System.Collections.ArrayList.IListWrapper.AddRange(ICollection) | element of argument 0 -> element of argument -1 | true |
| System.Collections.ArrayList.IListWrapper.Clone() | element of argument 0 -> element of return (normal) | true |
| System.Collections.ArrayList.IListWrapper.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.ArrayList.IListWrapper.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.ArrayList.IListWrapper.GetEnumerator(int, int) | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.ArrayList.IListWrapper.GetRange(int, int) | element of argument 0 -> element of return (normal) | true |
| System.Collections.ArrayList.IListWrapper.Insert(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.ArrayList.IListWrapper.InsertRange(int, ICollection) | element of argument 1 -> element of argument -1 | true |
| System.Collections.ArrayList.IListWrapper.Reverse(int, int) | element of argument 0 -> element of return (normal) | true |
| System.Collections.ArrayList.IListWrapper.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.Collections.ArrayList.IListWrapper.set_Item(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.ArrayList.Insert(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.ArrayList.InsertRange(int, ICollection) | element of argument 1 -> element of argument -1 | true |
| System.Collections.ArrayList.Range.Add(object) | argument 0 -> element of argument -1 | true |
| System.Collections.ArrayList.Range.AddRange(ICollection) | element of argument 0 -> element of argument -1 | true |
| System.Collections.ArrayList.Range.Clone() | element of argument 0 -> element of return (normal) | true |
| System.Collections.ArrayList.Range.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.ArrayList.Range.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.ArrayList.Range.GetEnumerator(int, int) | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.ArrayList.Range.GetRange(int, int) | element of argument 0 -> element of return (normal) | true |
| System.Collections.ArrayList.Range.Insert(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.ArrayList.Range.InsertRange(int, ICollection) | element of argument 1 -> element of argument -1 | true |
| System.Collections.ArrayList.Range.Reverse(int, int) | element of argument 0 -> element of return (normal) | true |
| System.Collections.ArrayList.Range.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.Collections.ArrayList.Range.set_Item(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.ArrayList.ReadOnlyArrayList.Add(object) | argument 0 -> element of argument -1 | true |
| System.Collections.ArrayList.ReadOnlyArrayList.AddRange(ICollection) | element of argument 0 -> element of argument -1 | true |
| System.Collections.ArrayList.ReadOnlyArrayList.Clone() | element of argument 0 -> element of return (normal) | true |
| System.Collections.ArrayList.ReadOnlyArrayList.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.ArrayList.ReadOnlyArrayList.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.ArrayList.ReadOnlyArrayList.GetEnumerator(int, int) | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.ArrayList.ReadOnlyArrayList.GetRange(int, int) | element of argument 0 -> element of return (normal) | true |
| System.Collections.ArrayList.ReadOnlyArrayList.Insert(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.ArrayList.ReadOnlyArrayList.InsertRange(int, ICollection) | element of argument 1 -> element of argument -1 | true |
| System.Collections.ArrayList.ReadOnlyArrayList.Reverse(int, int) | element of argument 0 -> element of return (normal) | true |
| System.Collections.ArrayList.ReadOnlyArrayList.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.Collections.ArrayList.ReadOnlyArrayList.set_Item(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.ArrayList.ReadOnlyList.Add(object) | argument 0 -> element of argument -1 | true |
| System.Collections.ArrayList.ReadOnlyList.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.ArrayList.ReadOnlyList.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.ArrayList.ReadOnlyList.Insert(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.ArrayList.ReadOnlyList.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.Collections.ArrayList.ReadOnlyList.set_Item(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.ArrayList.Repeat(object, int) | argument 0 -> element of return (normal) | true |
| System.Collections.ArrayList.Reverse() | element of argument 0 -> element of return (normal) | true |
| System.Collections.ArrayList.Reverse(int, int) | element of argument 0 -> element of return (normal) | true |
| System.Collections.ArrayList.SyncArrayList.Add(object) | argument 0 -> element of argument -1 | true |
| System.Collections.ArrayList.SyncArrayList.AddRange(ICollection) | element of argument 0 -> element of argument -1 | true |
| System.Collections.ArrayList.SyncArrayList.Clone() | element of argument 0 -> element of return (normal) | true |
| System.Collections.ArrayList.SyncArrayList.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.ArrayList.SyncArrayList.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.ArrayList.SyncArrayList.GetEnumerator(int, int) | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.ArrayList.SyncArrayList.GetRange(int, int) | element of argument 0 -> element of return (normal) | true |
| System.Collections.ArrayList.SyncArrayList.Insert(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.ArrayList.SyncArrayList.InsertRange(int, ICollection) | element of argument 1 -> element of argument -1 | true |
| System.Collections.ArrayList.SyncArrayList.Reverse(int, int) | element of argument 0 -> element of return (normal) | true |
| System.Collections.ArrayList.SyncArrayList.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.Collections.ArrayList.SyncArrayList.set_Item(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.ArrayList.SyncIList.Add(object) | argument 0 -> element of argument -1 | true |
| System.Collections.ArrayList.SyncIList.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.ArrayList.SyncIList.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.ArrayList.SyncIList.Insert(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.ArrayList.SyncIList.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.Collections.ArrayList.SyncIList.set_Item(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.ArrayList.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.Collections.ArrayList.set_Item(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.BitArray.Clone() | element of argument 0 -> element of return (normal) | true |
| System.Collections.BitArray.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.BitArray.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.CollectionBase.Add(object) | argument 0 -> element of argument -1 | true |
| System.Collections.CollectionBase.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.CollectionBase.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.CollectionBase.Insert(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.CollectionBase.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.Collections.CollectionBase.set_Item(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.Concurrent.BlockingCollection<>.<GetConsumingEnumerable>d__68.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Concurrent.BlockingCollection<>.Add(T) | argument 0 -> element of argument -1 | true |
| System.Collections.Concurrent.BlockingCollection<>.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Concurrent.BlockingCollection<>.CopyTo(T[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Concurrent.BlockingCollection<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Concurrent.ConcurrentBag<>.Add(T) | argument 0 -> element of argument -1 | true |
| System.Collections.Concurrent.ConcurrentBag<>.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Concurrent.ConcurrentBag<>.CopyTo(T[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Concurrent.ConcurrentBag<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Concurrent.ConcurrentDictionary<,>.Add(KeyValuePair<TKey, TValue>) | argument 0 -> element of argument -1 | true |
| System.Collections.Concurrent.ConcurrentDictionary<,>.Add(KeyValuePair<TKey, TValue>) | property Key of argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Concurrent.ConcurrentDictionary<,>.Add(KeyValuePair<TKey, TValue>) | property Value of argument 0 -> property Value of element of argument -1 | true |
| System.Collections.Concurrent.ConcurrentDictionary<,>.Add(TKey, TValue) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Concurrent.ConcurrentDictionary<,>.Add(TKey, TValue) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Concurrent.ConcurrentDictionary<,>.Add(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Concurrent.ConcurrentDictionary<,>.Add(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Concurrent.ConcurrentDictionary<,>.ConcurrentDictionary(IEnumerable<KeyValuePair<TKey,TValue>>) | property Key of element of argument 0 -> property Key of element of return (normal) | true |
| System.Collections.Concurrent.ConcurrentDictionary<,>.ConcurrentDictionary(IEnumerable<KeyValuePair<TKey,TValue>>) | property Value of element of argument 0 -> property Value of element of return (normal) | true |
| System.Collections.Concurrent.ConcurrentDictionary<,>.ConcurrentDictionary(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>) | property Key of element of argument 0 -> property Key of element of return (normal) | true |
| System.Collections.Concurrent.ConcurrentDictionary<,>.ConcurrentDictionary(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>) | property Value of element of argument 0 -> property Value of element of return (normal) | true |
| System.Collections.Concurrent.ConcurrentDictionary<,>.ConcurrentDictionary(int, IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>) | property Key of element of argument 1 -> property Key of element of return (normal) | true |
| System.Collections.Concurrent.ConcurrentDictionary<,>.ConcurrentDictionary(int, IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>) | property Value of element of argument 1 -> property Value of element of return (normal) | true |
| System.Collections.Concurrent.ConcurrentDictionary<,>.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Concurrent.ConcurrentDictionary<,>.CopyTo(KeyValuePair<TKey,TValue>[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Concurrent.ConcurrentDictionary<,>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Concurrent.ConcurrentDictionary<,>.get_Item(TKey) | property Value of element of argument -1 -> return (normal) | true |
| System.Collections.Concurrent.ConcurrentDictionary<,>.get_Item(object) | property Value of element of argument -1 -> return (normal) | true |
| System.Collections.Concurrent.ConcurrentDictionary<,>.get_Keys() | property Key of element of argument -1 -> element of return (normal) | true |
| System.Collections.Concurrent.ConcurrentDictionary<,>.get_Values() | property Value of element of argument -1 -> element of return (normal) | true |
| System.Collections.Concurrent.ConcurrentDictionary<,>.set_Item(TKey, TValue) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Concurrent.ConcurrentDictionary<,>.set_Item(TKey, TValue) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Concurrent.ConcurrentDictionary<,>.set_Item(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Concurrent.ConcurrentDictionary<,>.set_Item(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Concurrent.ConcurrentQueue<>.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Concurrent.ConcurrentQueue<>.CopyTo(T[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Concurrent.ConcurrentQueue<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Concurrent.ConcurrentStack<>.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Concurrent.ConcurrentStack<>.CopyTo(T[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Concurrent.ConcurrentStack<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Concurrent.ConcurrentStack<>.GetEnumerator(Node) | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Concurrent.IProducerConsumerCollection<>.CopyTo(T[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Concurrent.OrderablePartitioner<>.EnumerableDropIndices.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Concurrent.Partitioner.<CreateRanges>d__7.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Concurrent.Partitioner.<CreateRanges>d__10.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Concurrent.Partitioner.DynamicPartitionerForArray<>.InternalPartitionEnumerable.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Concurrent.Partitioner.DynamicPartitionerForIEnumerable<>.InternalPartitionEnumerable.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Concurrent.Partitioner.DynamicPartitionerForIList<>.InternalPartitionEnumerable.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.DictionaryBase.Add(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.DictionaryBase.Add(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.DictionaryBase.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.DictionaryBase.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.DictionaryBase.get_Item(object) | property Value of element of argument -1 -> return (normal) | true |
| System.Collections.DictionaryBase.get_Keys() | property Key of element of argument -1 -> element of return (normal) | true |
| System.Collections.DictionaryBase.get_Values() | property Value of element of argument -1 -> element of return (normal) | true |
| System.Collections.DictionaryBase.set_Item(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.DictionaryBase.set_Item(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.EmptyReadOnlyDictionaryInternal.Add(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.EmptyReadOnlyDictionaryInternal.Add(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.EmptyReadOnlyDictionaryInternal.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.EmptyReadOnlyDictionaryInternal.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.EmptyReadOnlyDictionaryInternal.get_Item(object) | property Value of element of argument -1 -> return (normal) | true |
| System.Collections.EmptyReadOnlyDictionaryInternal.get_Keys() | property Key of element of argument -1 -> element of return (normal) | true |
| System.Collections.EmptyReadOnlyDictionaryInternal.get_Values() | property Value of element of argument -1 -> element of return (normal) | true |
| System.Collections.EmptyReadOnlyDictionaryInternal.set_Item(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.EmptyReadOnlyDictionaryInternal.set_Item(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Generic.Dictionary<,>.Add(KeyValuePair<TKey, TValue>) | argument 0 -> element of argument -1 | true |
| System.Collections.Generic.Dictionary<,>.Add(KeyValuePair<TKey, TValue>) | property Key of argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Generic.Dictionary<,>.Add(KeyValuePair<TKey, TValue>) | property Value of argument 0 -> property Value of element of argument -1 | true |
| System.Collections.Generic.Dictionary<,>.Add(TKey, TValue) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Generic.Dictionary<,>.Add(TKey, TValue) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Generic.Dictionary<,>.Add(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Generic.Dictionary<,>.Add(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Generic.Dictionary<,>.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Generic.Dictionary<,>.CopyTo(KeyValuePair<TKey,TValue>[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Generic.Dictionary<,>.Dictionary(IDictionary<TKey, TValue>) | property Key of element of argument 0 -> property Key of element of return (normal) | true |
| System.Collections.Generic.Dictionary<,>.Dictionary(IDictionary<TKey, TValue>) | property Value of element of argument 0 -> property Value of element of return (normal) | true |
| System.Collections.Generic.Dictionary<,>.Dictionary(IDictionary<TKey, TValue>, IEqualityComparer<TKey>) | property Key of element of argument 0 -> property Key of element of return (normal) | true |
| System.Collections.Generic.Dictionary<,>.Dictionary(IDictionary<TKey, TValue>, IEqualityComparer<TKey>) | property Value of element of argument 0 -> property Value of element of return (normal) | true |
| System.Collections.Generic.Dictionary<,>.Dictionary(IEnumerable<KeyValuePair<TKey,TValue>>) | property Key of element of argument 0 -> property Key of element of return (normal) | true |
| System.Collections.Generic.Dictionary<,>.Dictionary(IEnumerable<KeyValuePair<TKey,TValue>>) | property Value of element of argument 0 -> property Value of element of return (normal) | true |
| System.Collections.Generic.Dictionary<,>.Dictionary(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>) | property Key of element of argument 0 -> property Key of element of return (normal) | true |
| System.Collections.Generic.Dictionary<,>.Dictionary(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>) | property Value of element of argument 0 -> property Value of element of return (normal) | true |
| System.Collections.Generic.Dictionary<,>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Generic.Dictionary<,>.KeyCollection.Add(TKey) | argument 0 -> element of argument -1 | true |
| System.Collections.Generic.Dictionary<,>.KeyCollection.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Generic.Dictionary<,>.KeyCollection.CopyTo(TKey[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Generic.Dictionary<,>.KeyCollection.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Generic.Dictionary<,>.ValueCollection.Add(TValue) | argument 0 -> element of argument -1 | true |
| System.Collections.Generic.Dictionary<,>.ValueCollection.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Generic.Dictionary<,>.ValueCollection.CopyTo(TValue[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Generic.Dictionary<,>.ValueCollection.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Generic.Dictionary<,>.get_Item(TKey) | property Value of element of argument -1 -> return (normal) | true |
| System.Collections.Generic.Dictionary<,>.get_Item(object) | property Value of element of argument -1 -> return (normal) | true |
| System.Collections.Generic.Dictionary<,>.get_Keys() | property Key of element of argument -1 -> element of return (normal) | true |
| System.Collections.Generic.Dictionary<,>.get_Values() | property Value of element of argument -1 -> element of return (normal) | true |
| System.Collections.Generic.Dictionary<,>.set_Item(TKey, TValue) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Generic.Dictionary<,>.set_Item(TKey, TValue) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Generic.Dictionary<,>.set_Item(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Generic.Dictionary<,>.set_Item(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Generic.HashSet<>.Add(T) | argument 0 -> element of argument -1 | true |
| System.Collections.Generic.HashSet<>.CopyTo(T[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Generic.HashSet<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Generic.ICollection<>.Add(T) | argument 0 -> element of argument -1 | true |
| System.Collections.Generic.ICollection<>.CopyTo(T[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Generic.IDictionary<,>.Add(TKey, TValue) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Generic.IDictionary<,>.Add(TKey, TValue) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Generic.IDictionary<,>.get_Item(TKey) | property Value of element of argument -1 -> return (normal) | true |
| System.Collections.Generic.IDictionary<,>.get_Keys() | property Key of element of argument -1 -> element of return (normal) | true |
| System.Collections.Generic.IDictionary<,>.get_Values() | property Value of element of argument -1 -> element of return (normal) | true |
| System.Collections.Generic.IDictionary<,>.set_Item(TKey, TValue) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Generic.IDictionary<,>.set_Item(TKey, TValue) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Generic.IList<>.Insert(int, T) | argument 1 -> element of argument -1 | true |
| System.Collections.Generic.IList<>.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.Collections.Generic.IList<>.set_Item(int, T) | argument 1 -> element of argument -1 | true |
| System.Collections.Generic.ISet<>.Add(T) | argument 0 -> element of argument -1 | true |
| System.Collections.Generic.KeyValuePair<,>.KeyValuePair() | argument 0 -> property Key of return (normal) | true |
| System.Collections.Generic.KeyValuePair<,>.KeyValuePair() | argument 1 -> property Value of return (normal) | true |
| System.Collections.Generic.KeyValuePair<,>.KeyValuePair(TKey, TValue) | argument 0 -> property Key of return (normal) | true |
| System.Collections.Generic.KeyValuePair<,>.KeyValuePair(TKey, TValue) | argument 1 -> property Value of return (normal) | true |
| System.Collections.Generic.LinkedList<>.Add(T) | argument 0 -> element of argument -1 | true |
| System.Collections.Generic.LinkedList<>.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Generic.LinkedList<>.CopyTo(T[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Generic.LinkedList<>.Find(T) | element of argument -1 -> return (normal) | true |
| System.Collections.Generic.LinkedList<>.FindLast(T) | element of argument -1 -> return (normal) | true |
| System.Collections.Generic.LinkedList<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Generic.List<>.Add(T) | argument 0 -> element of argument -1 | true |
| System.Collections.Generic.List<>.Add(object) | argument 0 -> element of argument -1 | true |
| System.Collections.Generic.List<>.AddRange(IEnumerable<T>) | element of argument 0 -> element of argument -1 | true |
| System.Collections.Generic.List<>.AsReadOnly() | element of argument 0 -> element of return (normal) | true |
| System.Collections.Generic.List<>.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Generic.List<>.CopyTo(T[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Generic.List<>.Find(Predicate<T>) | element of argument -1 -> parameter 0 of argument 0 | true |
| System.Collections.Generic.List<>.Find(Predicate<T>) | element of argument -1 -> return (normal) | true |
| System.Collections.Generic.List<>.FindAll(Predicate<T>) | element of argument -1 -> parameter 0 of argument 0 | true |
| System.Collections.Generic.List<>.FindAll(Predicate<T>) | element of argument -1 -> return (normal) | true |
| System.Collections.Generic.List<>.FindLast(Predicate<T>) | element of argument -1 -> parameter 0 of argument 0 | true |
| System.Collections.Generic.List<>.FindLast(Predicate<T>) | element of argument -1 -> return (normal) | true |
| System.Collections.Generic.List<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Generic.List<>.GetRange(int, int) | element of argument 0 -> element of return (normal) | true |
| System.Collections.Generic.List<>.Insert(int, T) | argument 1 -> element of argument -1 | true |
| System.Collections.Generic.List<>.Insert(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.Generic.List<>.InsertRange(int, IEnumerable<T>) | element of argument 1 -> element of argument -1 | true |
| System.Collections.Generic.List<>.Reverse() | element of argument 0 -> element of return (normal) | true |
| System.Collections.Generic.List<>.Reverse(int, int) | element of argument 0 -> element of return (normal) | true |
| System.Collections.Generic.List<>.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.Collections.Generic.List<>.set_Item(int, T) | argument 1 -> element of argument -1 | true |
| System.Collections.Generic.List<>.set_Item(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.Generic.Queue<>.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Generic.Queue<>.CopyTo(T[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Generic.Queue<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Generic.Queue<>.Peek() | element of argument -1 -> return (normal) | true |
| System.Collections.Generic.SortedDictionary<,>.Add(KeyValuePair<TKey, TValue>) | argument 0 -> element of argument -1 | true |
| System.Collections.Generic.SortedDictionary<,>.Add(KeyValuePair<TKey, TValue>) | property Key of argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Generic.SortedDictionary<,>.Add(KeyValuePair<TKey, TValue>) | property Value of argument 0 -> property Value of element of argument -1 | true |
| System.Collections.Generic.SortedDictionary<,>.Add(TKey, TValue) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Generic.SortedDictionary<,>.Add(TKey, TValue) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Generic.SortedDictionary<,>.Add(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Generic.SortedDictionary<,>.Add(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Generic.SortedDictionary<,>.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Generic.SortedDictionary<,>.CopyTo(KeyValuePair<TKey,TValue>[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Generic.SortedDictionary<,>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Generic.SortedDictionary<,>.KeyCollection.Add(TKey) | argument 0 -> element of argument -1 | true |
| System.Collections.Generic.SortedDictionary<,>.KeyCollection.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Generic.SortedDictionary<,>.KeyCollection.CopyTo(TKey[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Generic.SortedDictionary<,>.KeyCollection.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Generic.SortedDictionary<,>.SortedDictionary(IDictionary<TKey, TValue>) | property Key of element of argument 0 -> property Key of element of return (normal) | true |
| System.Collections.Generic.SortedDictionary<,>.SortedDictionary(IDictionary<TKey, TValue>) | property Value of element of argument 0 -> property Value of element of return (normal) | true |
| System.Collections.Generic.SortedDictionary<,>.SortedDictionary(IDictionary<TKey, TValue>, IComparer<TKey>) | property Key of element of argument 0 -> property Key of element of return (normal) | true |
| System.Collections.Generic.SortedDictionary<,>.SortedDictionary(IDictionary<TKey, TValue>, IComparer<TKey>) | property Value of element of argument 0 -> property Value of element of return (normal) | true |
| System.Collections.Generic.SortedDictionary<,>.ValueCollection.Add(TValue) | argument 0 -> element of argument -1 | true |
| System.Collections.Generic.SortedDictionary<,>.ValueCollection.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Generic.SortedDictionary<,>.ValueCollection.CopyTo(TValue[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Generic.SortedDictionary<,>.ValueCollection.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Generic.SortedDictionary<,>.get_Item(TKey) | property Value of element of argument -1 -> return (normal) | true |
| System.Collections.Generic.SortedDictionary<,>.get_Item(object) | property Value of element of argument -1 -> return (normal) | true |
| System.Collections.Generic.SortedDictionary<,>.get_Keys() | property Key of element of argument -1 -> element of return (normal) | true |
| System.Collections.Generic.SortedDictionary<,>.get_Values() | property Value of element of argument -1 -> element of return (normal) | true |
| System.Collections.Generic.SortedDictionary<,>.set_Item(TKey, TValue) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Generic.SortedDictionary<,>.set_Item(TKey, TValue) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Generic.SortedDictionary<,>.set_Item(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Generic.SortedDictionary<,>.set_Item(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Generic.SortedList<,>.Add(KeyValuePair<TKey, TValue>) | argument 0 -> element of argument -1 | true |
| System.Collections.Generic.SortedList<,>.Add(KeyValuePair<TKey, TValue>) | property Key of argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Generic.SortedList<,>.Add(KeyValuePair<TKey, TValue>) | property Value of argument 0 -> property Value of element of argument -1 | true |
| System.Collections.Generic.SortedList<,>.Add(TKey, TValue) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Generic.SortedList<,>.Add(TKey, TValue) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Generic.SortedList<,>.Add(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Generic.SortedList<,>.Add(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Generic.SortedList<,>.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Generic.SortedList<,>.CopyTo(KeyValuePair<TKey,TValue>[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Generic.SortedList<,>.GetByIndex(int) | property Value of element of argument -1 -> return (normal) | true |
| System.Collections.Generic.SortedList<,>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Generic.SortedList<,>.KeyList.Add(TKey) | argument 0 -> element of argument -1 | true |
| System.Collections.Generic.SortedList<,>.KeyList.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Generic.SortedList<,>.KeyList.CopyTo(TKey[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Generic.SortedList<,>.KeyList.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Generic.SortedList<,>.KeyList.Insert(int, TKey) | argument 1 -> element of argument -1 | true |
| System.Collections.Generic.SortedList<,>.KeyList.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.Collections.Generic.SortedList<,>.KeyList.set_Item(int, TKey) | argument 1 -> element of argument -1 | true |
| System.Collections.Generic.SortedList<,>.SortedList(IDictionary<TKey, TValue>) | property Key of element of argument 0 -> property Key of element of return (normal) | true |
| System.Collections.Generic.SortedList<,>.SortedList(IDictionary<TKey, TValue>) | property Value of element of argument 0 -> property Value of element of return (normal) | true |
| System.Collections.Generic.SortedList<,>.SortedList(IDictionary<TKey, TValue>, IComparer<TKey>) | property Key of element of argument 0 -> property Key of element of return (normal) | true |
| System.Collections.Generic.SortedList<,>.SortedList(IDictionary<TKey, TValue>, IComparer<TKey>) | property Value of element of argument 0 -> property Value of element of return (normal) | true |
| System.Collections.Generic.SortedList<,>.ValueList.Add(TValue) | argument 0 -> element of argument -1 | true |
| System.Collections.Generic.SortedList<,>.ValueList.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Generic.SortedList<,>.ValueList.CopyTo(TValue[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Generic.SortedList<,>.ValueList.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Generic.SortedList<,>.ValueList.Insert(int, TValue) | argument 1 -> element of argument -1 | true |
| System.Collections.Generic.SortedList<,>.ValueList.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.Collections.Generic.SortedList<,>.ValueList.set_Item(int, TValue) | argument 1 -> element of argument -1 | true |
| System.Collections.Generic.SortedList<,>.get_Item(TKey) | property Value of element of argument -1 -> return (normal) | true |
| System.Collections.Generic.SortedList<,>.get_Item(object) | property Value of element of argument -1 -> return (normal) | true |
| System.Collections.Generic.SortedList<,>.get_Keys() | property Key of element of argument -1 -> element of return (normal) | true |
| System.Collections.Generic.SortedList<,>.get_Values() | property Value of element of argument -1 -> element of return (normal) | true |
| System.Collections.Generic.SortedList<,>.set_Item(TKey, TValue) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Generic.SortedList<,>.set_Item(TKey, TValue) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Generic.SortedList<,>.set_Item(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Generic.SortedList<,>.set_Item(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Generic.SortedSet<>.<Reverse>d__84.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Generic.SortedSet<>.Add(T) | argument 0 -> element of argument -1 | true |
| System.Collections.Generic.SortedSet<>.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Generic.SortedSet<>.CopyTo(T[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Generic.SortedSet<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Generic.SortedSet<>.Reverse() | element of argument 0 -> element of return (normal) | true |
| System.Collections.Generic.Stack<>.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Generic.Stack<>.CopyTo(T[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Generic.Stack<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Generic.Stack<>.Peek() | element of argument -1 -> return (normal) | true |
| System.Collections.Generic.Stack<>.Pop() | element of argument -1 -> return (normal) | true |
| System.Collections.Hashtable.Add(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Hashtable.Add(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Hashtable.Clone() | element of argument 0 -> element of return (normal) | true |
| System.Collections.Hashtable.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Hashtable.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Hashtable.Hashtable(IDictionary) | property Key of element of argument 0 -> property Key of element of return (normal) | true |
| System.Collections.Hashtable.Hashtable(IDictionary) | property Value of element of argument 0 -> property Value of element of return (normal) | true |
| System.Collections.Hashtable.Hashtable(IDictionary, IEqualityComparer) | property Key of element of argument 0 -> property Key of element of return (normal) | true |
| System.Collections.Hashtable.Hashtable(IDictionary, IEqualityComparer) | property Value of element of argument 0 -> property Value of element of return (normal) | true |
| System.Collections.Hashtable.Hashtable(IDictionary, IHashCodeProvider, IComparer) | property Key of element of argument 0 -> property Key of element of return (normal) | true |
| System.Collections.Hashtable.Hashtable(IDictionary, IHashCodeProvider, IComparer) | property Value of element of argument 0 -> property Value of element of return (normal) | true |
| System.Collections.Hashtable.Hashtable(IDictionary, float) | property Key of element of argument 0 -> property Key of element of return (normal) | true |
| System.Collections.Hashtable.Hashtable(IDictionary, float) | property Value of element of argument 0 -> property Value of element of return (normal) | true |
| System.Collections.Hashtable.Hashtable(IDictionary, float, IEqualityComparer) | property Key of element of argument 0 -> property Key of element of return (normal) | true |
| System.Collections.Hashtable.Hashtable(IDictionary, float, IEqualityComparer) | property Value of element of argument 0 -> property Value of element of return (normal) | true |
| System.Collections.Hashtable.Hashtable(IDictionary, float, IHashCodeProvider, IComparer) | property Key of element of argument 0 -> property Key of element of return (normal) | true |
| System.Collections.Hashtable.Hashtable(IDictionary, float, IHashCodeProvider, IComparer) | property Value of element of argument 0 -> property Value of element of return (normal) | true |
| System.Collections.Hashtable.KeyCollection.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Hashtable.KeyCollection.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Hashtable.SyncHashtable.Add(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Hashtable.SyncHashtable.Add(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Hashtable.SyncHashtable.Clone() | element of argument 0 -> element of return (normal) | true |
| System.Collections.Hashtable.SyncHashtable.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Hashtable.SyncHashtable.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Hashtable.SyncHashtable.SyncHashtable(Hashtable) | property Key of element of argument 0 -> property Key of element of return (normal) | true |
| System.Collections.Hashtable.SyncHashtable.SyncHashtable(Hashtable) | property Value of element of argument 0 -> property Value of element of return (normal) | true |
| System.Collections.Hashtable.SyncHashtable.get_Item(object) | property Value of element of argument -1 -> return (normal) | true |
| System.Collections.Hashtable.SyncHashtable.get_Keys() | property Key of element of argument -1 -> element of return (normal) | true |
| System.Collections.Hashtable.SyncHashtable.get_Values() | property Value of element of argument -1 -> element of return (normal) | true |
| System.Collections.Hashtable.SyncHashtable.set_Item(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Hashtable.SyncHashtable.set_Item(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Hashtable.ValueCollection.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Hashtable.ValueCollection.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Hashtable.get_Item(object) | property Value of element of argument -1 -> return (normal) | true |
| System.Collections.Hashtable.get_Keys() | property Key of element of argument -1 -> element of return (normal) | true |
| System.Collections.Hashtable.get_Values() | property Value of element of argument -1 -> element of return (normal) | true |
| System.Collections.Hashtable.set_Item(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Hashtable.set_Item(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.ICollection.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.IDictionary.Add(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.IDictionary.Add(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.IDictionary.get_Item(object) | property Value of element of argument -1 -> return (normal) | true |
| System.Collections.IDictionary.get_Keys() | property Key of element of argument -1 -> element of return (normal) | true |
| System.Collections.IDictionary.get_Values() | property Value of element of argument -1 -> element of return (normal) | true |
| System.Collections.IDictionary.set_Item(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.IDictionary.set_Item(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.IEnumerable.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.IList.Add(object) | argument 0 -> element of argument -1 | true |
| System.Collections.IList.Insert(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.IList.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.Collections.IList.set_Item(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.ListDictionaryInternal.Add(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.ListDictionaryInternal.Add(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.ListDictionaryInternal.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.ListDictionaryInternal.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.ListDictionaryInternal.NodeKeyValueCollection.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.ListDictionaryInternal.NodeKeyValueCollection.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.ListDictionaryInternal.get_Item(object) | property Value of element of argument -1 -> return (normal) | true |
| System.Collections.ListDictionaryInternal.get_Keys() | property Key of element of argument -1 -> element of return (normal) | true |
| System.Collections.ListDictionaryInternal.get_Values() | property Value of element of argument -1 -> element of return (normal) | true |
| System.Collections.ListDictionaryInternal.set_Item(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.ListDictionaryInternal.set_Item(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.ObjectModel.Collection<>.Add(T) | argument 0 -> element of argument -1 | true |
| System.Collections.ObjectModel.Collection<>.Add(object) | argument 0 -> element of argument -1 | true |
| System.Collections.ObjectModel.Collection<>.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.ObjectModel.Collection<>.CopyTo(T[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.ObjectModel.Collection<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.ObjectModel.Collection<>.Insert(int, T) | argument 1 -> element of argument -1 | true |
| System.Collections.ObjectModel.Collection<>.Insert(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.ObjectModel.Collection<>.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.Collections.ObjectModel.Collection<>.set_Item(int, T) | argument 1 -> element of argument -1 | true |
| System.Collections.ObjectModel.Collection<>.set_Item(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.ObjectModel.KeyedCollection<,>.get_Item(TKey) | element of argument -1 -> return (normal) | true |
| System.Collections.ObjectModel.ReadOnlyCollection<>.Add(T) | argument 0 -> element of argument -1 | true |
| System.Collections.ObjectModel.ReadOnlyCollection<>.Add(object) | argument 0 -> element of argument -1 | true |
| System.Collections.ObjectModel.ReadOnlyCollection<>.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.ObjectModel.ReadOnlyCollection<>.CopyTo(T[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.ObjectModel.ReadOnlyCollection<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.ObjectModel.ReadOnlyCollection<>.Insert(int, T) | argument 1 -> element of argument -1 | true |
| System.Collections.ObjectModel.ReadOnlyCollection<>.Insert(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.ObjectModel.ReadOnlyCollection<>.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.Collections.ObjectModel.ReadOnlyCollection<>.set_Item(int, T) | argument 1 -> element of argument -1 | true |
| System.Collections.ObjectModel.ReadOnlyCollection<>.set_Item(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.Add(KeyValuePair<TKey, TValue>) | argument 0 -> element of argument -1 | true |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.Add(KeyValuePair<TKey, TValue>) | property Key of argument 0 -> property Key of element of argument -1 | true |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.Add(KeyValuePair<TKey, TValue>) | property Value of argument 0 -> property Value of element of argument -1 | true |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.Add(TKey, TValue) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.Add(TKey, TValue) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.Add(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.Add(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.CopyTo(KeyValuePair<TKey,TValue>[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.KeyCollection.Add(TKey) | argument 0 -> element of argument -1 | true |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.KeyCollection.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.KeyCollection.CopyTo(TKey[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.KeyCollection.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.ReadOnlyDictionary(IDictionary<TKey, TValue>) | property Key of element of argument 0 -> property Key of element of return (normal) | true |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.ReadOnlyDictionary(IDictionary<TKey, TValue>) | property Value of element of argument 0 -> property Value of element of return (normal) | true |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.ValueCollection.Add(TValue) | argument 0 -> element of argument -1 | true |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.ValueCollection.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.ValueCollection.CopyTo(TValue[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.ValueCollection.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.get_Item(TKey) | property Value of element of argument -1 -> return (normal) | true |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.get_Item(object) | property Value of element of argument -1 -> return (normal) | true |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.get_Keys() | property Key of element of argument -1 -> element of return (normal) | true |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.get_Values() | property Value of element of argument -1 -> element of return (normal) | true |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.set_Item(TKey, TValue) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.set_Item(TKey, TValue) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.set_Item(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.set_Item(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Queue.Clone() | element of argument 0 -> element of return (normal) | true |
| System.Collections.Queue.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Queue.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Queue.Peek() | element of argument -1 -> return (normal) | true |
| System.Collections.Queue.SynchronizedQueue.Clone() | element of argument 0 -> element of return (normal) | true |
| System.Collections.Queue.SynchronizedQueue.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Queue.SynchronizedQueue.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Queue.SynchronizedQueue.Peek() | element of argument -1 -> return (normal) | true |
| System.Collections.ReadOnlyCollectionBase.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.ReadOnlyCollectionBase.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.SortedList.Add(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.SortedList.Add(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.SortedList.Clone() | element of argument 0 -> element of return (normal) | true |
| System.Collections.SortedList.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.SortedList.GetByIndex(int) | property Value of element of argument -1 -> return (normal) | true |
| System.Collections.SortedList.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.SortedList.GetValueList() | property Value of element of argument -1 -> element of return (normal) | true |
| System.Collections.SortedList.KeyList.Add(object) | argument 0 -> element of argument -1 | true |
| System.Collections.SortedList.KeyList.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.SortedList.KeyList.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.SortedList.KeyList.Insert(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.SortedList.KeyList.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.Collections.SortedList.KeyList.set_Item(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.SortedList.SortedList(IDictionary) | property Key of element of argument 0 -> property Key of element of return (normal) | true |
| System.Collections.SortedList.SortedList(IDictionary) | property Value of element of argument 0 -> property Value of element of return (normal) | true |
| System.Collections.SortedList.SortedList(IDictionary, IComparer) | property Key of element of argument 0 -> property Key of element of return (normal) | true |
| System.Collections.SortedList.SortedList(IDictionary, IComparer) | property Value of element of argument 0 -> property Value of element of return (normal) | true |
| System.Collections.SortedList.SyncSortedList.Add(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.SortedList.SyncSortedList.Add(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.SortedList.SyncSortedList.Clone() | element of argument 0 -> element of return (normal) | true |
| System.Collections.SortedList.SyncSortedList.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.SortedList.SyncSortedList.GetByIndex(int) | property Value of element of argument -1 -> return (normal) | true |
| System.Collections.SortedList.SyncSortedList.GetValueList() | property Value of element of argument -1 -> element of return (normal) | true |
| System.Collections.SortedList.SyncSortedList.SyncSortedList(SortedList) | property Key of element of argument 0 -> property Key of element of return (normal) | true |
| System.Collections.SortedList.SyncSortedList.SyncSortedList(SortedList) | property Value of element of argument 0 -> property Value of element of return (normal) | true |
| System.Collections.SortedList.SyncSortedList.get_Item(object) | property Value of element of argument -1 -> return (normal) | true |
| System.Collections.SortedList.SyncSortedList.set_Item(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.SortedList.SyncSortedList.set_Item(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.SortedList.ValueList.Add(object) | argument 0 -> element of argument -1 | true |
| System.Collections.SortedList.ValueList.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.SortedList.ValueList.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.SortedList.ValueList.Insert(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.SortedList.ValueList.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.Collections.SortedList.ValueList.set_Item(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.SortedList.get_Item(object) | property Value of element of argument -1 -> return (normal) | true |
| System.Collections.SortedList.get_Keys() | property Key of element of argument -1 -> element of return (normal) | true |
| System.Collections.SortedList.get_Values() | property Value of element of argument -1 -> element of return (normal) | true |
| System.Collections.SortedList.set_Item(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.SortedList.set_Item(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Specialized.HybridDictionary.Add(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Specialized.HybridDictionary.Add(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Specialized.HybridDictionary.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Specialized.HybridDictionary.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Specialized.HybridDictionary.get_Item(object) | property Value of element of argument -1 -> return (normal) | true |
| System.Collections.Specialized.HybridDictionary.get_Keys() | property Key of element of argument -1 -> element of return (normal) | true |
| System.Collections.Specialized.HybridDictionary.get_Values() | property Value of element of argument -1 -> element of return (normal) | true |
| System.Collections.Specialized.HybridDictionary.set_Item(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Specialized.HybridDictionary.set_Item(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Specialized.IOrderedDictionary.get_Item(int) | property Value of element of argument -1 -> return (normal) | true |
| System.Collections.Specialized.IOrderedDictionary.set_Item(int, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Specialized.IOrderedDictionary.set_Item(int, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Specialized.ListDictionary.Add(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Specialized.ListDictionary.Add(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Specialized.ListDictionary.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Specialized.ListDictionary.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Specialized.ListDictionary.NodeKeyValueCollection.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Specialized.ListDictionary.NodeKeyValueCollection.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Specialized.ListDictionary.get_Item(object) | property Value of element of argument -1 -> return (normal) | true |
| System.Collections.Specialized.ListDictionary.get_Keys() | property Key of element of argument -1 -> element of return (normal) | true |
| System.Collections.Specialized.ListDictionary.get_Values() | property Value of element of argument -1 -> element of return (normal) | true |
| System.Collections.Specialized.ListDictionary.set_Item(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Specialized.ListDictionary.set_Item(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Specialized.NameObjectCollectionBase.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Specialized.NameValueCollection.Add(NameValueCollection) | argument 0 -> element of argument -1 | true |
| System.Collections.Specialized.NameValueCollection.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Specialized.OrderedDictionary.Add(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Specialized.OrderedDictionary.Add(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Specialized.OrderedDictionary.AsReadOnly() | element of argument 0 -> element of return (normal) | true |
| System.Collections.Specialized.OrderedDictionary.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Specialized.OrderedDictionary.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Specialized.OrderedDictionary.OrderedDictionary(OrderedDictionary) | property Key of element of argument 0 -> property Key of element of return (normal) | true |
| System.Collections.Specialized.OrderedDictionary.OrderedDictionary(OrderedDictionary) | property Value of element of argument 0 -> property Value of element of return (normal) | true |
| System.Collections.Specialized.OrderedDictionary.OrderedDictionaryKeyValueCollection.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Specialized.OrderedDictionary.OrderedDictionaryKeyValueCollection.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Specialized.OrderedDictionary.get_Item(int) | property Value of element of argument -1 -> return (normal) | true |
| System.Collections.Specialized.OrderedDictionary.get_Item(object) | property Value of element of argument -1 -> return (normal) | true |
| System.Collections.Specialized.OrderedDictionary.get_Keys() | property Key of element of argument -1 -> element of return (normal) | true |
| System.Collections.Specialized.OrderedDictionary.get_Values() | property Value of element of argument -1 -> element of return (normal) | true |
| System.Collections.Specialized.OrderedDictionary.set_Item(int, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Specialized.OrderedDictionary.set_Item(int, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Specialized.OrderedDictionary.set_Item(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Collections.Specialized.OrderedDictionary.set_Item(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Collections.Specialized.ReadOnlyList.Add(object) | argument 0 -> element of argument -1 | true |
| System.Collections.Specialized.ReadOnlyList.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Specialized.ReadOnlyList.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Specialized.ReadOnlyList.Insert(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.Specialized.ReadOnlyList.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.Collections.Specialized.ReadOnlyList.set_Item(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.Specialized.StringCollection.Add(object) | argument 0 -> element of argument -1 | true |
| System.Collections.Specialized.StringCollection.Add(string) | argument 0 -> element of argument -1 | true |
| System.Collections.Specialized.StringCollection.AddRange(String[]) | element of argument 0 -> element of argument -1 | true |
| System.Collections.Specialized.StringCollection.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Specialized.StringCollection.CopyTo(String[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Specialized.StringCollection.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Specialized.StringCollection.Insert(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.Specialized.StringCollection.Insert(int, string) | argument 1 -> element of argument -1 | true |
| System.Collections.Specialized.StringCollection.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.Collections.Specialized.StringCollection.set_Item(int, object) | argument 1 -> element of argument -1 | true |
| System.Collections.Specialized.StringCollection.set_Item(int, string) | argument 1 -> element of argument -1 | true |
| System.Collections.Specialized.StringDictionary.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Stack.Clone() | element of argument 0 -> element of return (normal) | true |
| System.Collections.Stack.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Stack.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Stack.Peek() | element of argument -1 -> return (normal) | true |
| System.Collections.Stack.Pop() | element of argument -1 -> return (normal) | true |
| System.Collections.Stack.SyncStack.Clone() | element of argument 0 -> element of return (normal) | true |
| System.Collections.Stack.SyncStack.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Collections.Stack.SyncStack.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Collections.Stack.SyncStack.Peek() | element of argument -1 -> return (normal) | true |
| System.Collections.Stack.SyncStack.Pop() | element of argument -1 -> return (normal) | true |
| System.ComponentModel.AttributeCollection.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.ComponentModel.AttributeCollection.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.ComponentModel.BindingList<>.Find(PropertyDescriptor, object) | element of argument -1 -> return (normal) | true |
| System.ComponentModel.Design.DesignerCollection.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.ComponentModel.Design.DesignerCollection.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Add(object) | argument 0 -> element of argument -1 | true |
| System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Insert(int, object) | argument 1 -> element of argument -1 | true |
| System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.get_Item(string) | element of argument -1 -> return (normal) | true |
| System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.set_Item(int, object) | argument 1 -> element of argument -1 | true |
| System.ComponentModel.Design.DesignerVerbCollection.Add(DesignerVerb) | argument 0 -> element of argument -1 | true |
| System.ComponentModel.Design.DesignerVerbCollection.AddRange(DesignerVerbCollection) | element of argument 0 -> element of argument -1 | true |
| System.ComponentModel.Design.DesignerVerbCollection.AddRange(DesignerVerb[]) | element of argument 0 -> element of argument -1 | true |
| System.ComponentModel.Design.DesignerVerbCollection.CopyTo(DesignerVerb[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.ComponentModel.Design.DesignerVerbCollection.Insert(int, DesignerVerb) | argument 1 -> element of argument -1 | true |
| System.ComponentModel.Design.DesignerVerbCollection.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.ComponentModel.Design.DesignerVerbCollection.set_Item(int, DesignerVerb) | argument 1 -> element of argument -1 | true |
| System.ComponentModel.EventDescriptorCollection.Add(EventDescriptor) | argument 0 -> element of argument -1 | true |
| System.ComponentModel.EventDescriptorCollection.Add(object) | argument 0 -> element of argument -1 | true |
| System.ComponentModel.EventDescriptorCollection.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.ComponentModel.EventDescriptorCollection.Find(string, bool) | element of argument -1 -> return (normal) | true |
| System.ComponentModel.EventDescriptorCollection.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.ComponentModel.EventDescriptorCollection.Insert(int, EventDescriptor) | argument 1 -> element of argument -1 | true |
| System.ComponentModel.EventDescriptorCollection.Insert(int, object) | argument 1 -> element of argument -1 | true |
| System.ComponentModel.EventDescriptorCollection.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.ComponentModel.EventDescriptorCollection.get_Item(string) | element of argument -1 -> return (normal) | true |
| System.ComponentModel.EventDescriptorCollection.set_Item(int, object) | argument 1 -> element of argument -1 | true |
| System.ComponentModel.IBindingList.Find(PropertyDescriptor, object) | element of argument -1 -> return (normal) | true |
| System.ComponentModel.ListSortDescriptionCollection.Add(object) | argument 0 -> element of argument -1 | true |
| System.ComponentModel.ListSortDescriptionCollection.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.ComponentModel.ListSortDescriptionCollection.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.ComponentModel.ListSortDescriptionCollection.Insert(int, object) | argument 1 -> element of argument -1 | true |
| System.ComponentModel.ListSortDescriptionCollection.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.ComponentModel.ListSortDescriptionCollection.set_Item(int, ListSortDescription) | argument 1 -> element of argument -1 | true |
| System.ComponentModel.ListSortDescriptionCollection.set_Item(int, object) | argument 1 -> element of argument -1 | true |
| System.ComponentModel.PropertyDescriptorCollection.Add(PropertyDescriptor) | argument 0 -> element of argument -1 | true |
| System.ComponentModel.PropertyDescriptorCollection.Add(PropertyDescriptor) | property Key of argument 0 -> property Key of element of argument -1 | true |
| System.ComponentModel.PropertyDescriptorCollection.Add(PropertyDescriptor) | property Value of argument 0 -> property Value of element of argument -1 | true |
| System.ComponentModel.PropertyDescriptorCollection.Add(object) | argument 0 -> element of argument -1 | true |
| System.ComponentModel.PropertyDescriptorCollection.Add(object) | property Key of argument 0 -> property Key of element of argument -1 | true |
| System.ComponentModel.PropertyDescriptorCollection.Add(object) | property Value of argument 0 -> property Value of element of argument -1 | true |
| System.ComponentModel.PropertyDescriptorCollection.Add(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.ComponentModel.PropertyDescriptorCollection.Add(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.ComponentModel.PropertyDescriptorCollection.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.ComponentModel.PropertyDescriptorCollection.Find(string, bool) | element of argument -1 -> return (normal) | true |
| System.ComponentModel.PropertyDescriptorCollection.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.ComponentModel.PropertyDescriptorCollection.Insert(int, PropertyDescriptor) | argument 1 -> element of argument -1 | true |
| System.ComponentModel.PropertyDescriptorCollection.Insert(int, object) | argument 1 -> element of argument -1 | true |
| System.ComponentModel.PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[]) | property Key of element of argument 0 -> property Key of element of return (normal) | true |
| System.ComponentModel.PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[]) | property Value of element of argument 0 -> property Value of element of return (normal) | true |
| System.ComponentModel.PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[], bool) | property Key of element of argument 0 -> property Key of element of return (normal) | true |
| System.ComponentModel.PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[], bool) | property Value of element of argument 0 -> property Value of element of return (normal) | true |
| System.ComponentModel.PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[], int, String[], IComparer) | property Key of element of argument 0 -> property Key of element of return (normal) | true |
| System.ComponentModel.PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[], int, String[], IComparer) | property Key of element of argument 2 -> property Key of element of return (normal) | true |
| System.ComponentModel.PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[], int, String[], IComparer) | property Value of element of argument 0 -> property Value of element of return (normal) | true |
| System.ComponentModel.PropertyDescriptorCollection.PropertyDescriptorCollection(PropertyDescriptor[], int, String[], IComparer) | property Value of element of argument 2 -> property Value of element of return (normal) | true |
| System.ComponentModel.PropertyDescriptorCollection.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.ComponentModel.PropertyDescriptorCollection.get_Item(int) | property Value of element of argument -1 -> return (normal) | true |
| System.ComponentModel.PropertyDescriptorCollection.get_Item(object) | element of argument -1 -> return (normal) | true |
| System.ComponentModel.PropertyDescriptorCollection.get_Item(object) | property Value of element of argument -1 -> return (normal) | true |
| System.ComponentModel.PropertyDescriptorCollection.get_Item(string) | element of argument -1 -> return (normal) | true |
| System.ComponentModel.PropertyDescriptorCollection.get_Item(string) | property Value of element of argument -1 -> return (normal) | true |
| System.ComponentModel.PropertyDescriptorCollection.get_Keys() | property Key of element of argument -1 -> element of return (normal) | true |
| System.ComponentModel.PropertyDescriptorCollection.get_Values() | property Value of element of argument -1 -> element of return (normal) | true |
| System.ComponentModel.PropertyDescriptorCollection.set_Item(int, object) | argument 0 -> property Key of element of argument -1 | true |
| System.ComponentModel.PropertyDescriptorCollection.set_Item(int, object) | argument 1 -> element of argument -1 | true |
| System.ComponentModel.PropertyDescriptorCollection.set_Item(int, object) | argument 1 -> property Value of element of argument -1 | true |
| System.ComponentModel.PropertyDescriptorCollection.set_Item(object, object) | argument 0 -> property Key of element of argument -1 | true |
| System.ComponentModel.PropertyDescriptorCollection.set_Item(object, object) | argument 1 -> element of argument -1 | true |
| System.ComponentModel.PropertyDescriptorCollection.set_Item(object, object) | argument 1 -> property Value of element of argument -1 | true |
| System.ComponentModel.TypeConverter.StandardValuesCollection.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.ComponentModel.TypeConverter.StandardValuesCollection.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.ConsolePal.UnixConsoleStream.Read(Byte[], int, int) | argument -1 -> return (out parameter 0) | false |
| System.ConsolePal.UnixConsoleStream.Write(Byte[], int, int) | argument 0 -> argument -1 | false |
| System.Convert.ChangeType(object, Type) | argument 0 -> return (normal) | false |
| System.Convert.ChangeType(object, Type, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ChangeType(object, TypeCode) | argument 0 -> return (normal) | false |
| System.Convert.ChangeType(object, TypeCode, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ConvertToBase64Array(char*, byte*, int, int, bool) | argument 0 -> return (normal) | false |
| System.Convert.CopyToTempBufferWithoutWhiteSpace(ReadOnlySpan<Char>, Span<Char>, out int, out int) | argument 0 -> return (normal) | false |
| System.Convert.Decode(ref char, ref sbyte) | argument 0 -> return (normal) | false |
| System.Convert.DefaultToType(IConvertible, Type, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.FromBase64CharArray(Char[], int, int) | argument 0 -> return (normal) | false |
| System.Convert.FromBase64CharPtr(char*, int) | argument 0 -> return (normal) | false |
| System.Convert.FromBase64String(string) | argument 0 -> return (normal) | false |
| System.Convert.FromBase64_ComputeResultLength(char*, int) | argument 0 -> return (normal) | false |
| System.Convert.FromHexString(ReadOnlySpan<Char>) | argument 0 -> return (normal) | false |
| System.Convert.FromHexString(string) | argument 0 -> return (normal) | false |
| System.Convert.GetTypeCode(object) | argument 0 -> return (normal) | false |
| System.Convert.IsDBNull(object) | argument 0 -> return (normal) | false |
| System.Convert.IsSpace(char) | argument 0 -> return (normal) | false |
| System.Convert.ThrowByteOverflowException() | argument 0 -> return (normal) | false |
| System.Convert.ThrowCharOverflowException() | argument 0 -> return (normal) | false |
| System.Convert.ThrowInt16OverflowException() | argument 0 -> return (normal) | false |
| System.Convert.ThrowInt32OverflowException() | argument 0 -> return (normal) | false |
| System.Convert.ThrowInt64OverflowException() | argument 0 -> return (normal) | false |
| System.Convert.ThrowSByteOverflowException() | argument 0 -> return (normal) | false |
| System.Convert.ThrowUInt16OverflowException() | argument 0 -> return (normal) | false |
| System.Convert.ThrowUInt32OverflowException() | argument 0 -> return (normal) | false |
| System.Convert.ThrowUInt64OverflowException() | argument 0 -> return (normal) | false |
| System.Convert.ToBase64CharArray(Byte[], int, int, Char[], int) | argument 0 -> return (normal) | false |
| System.Convert.ToBase64CharArray(Byte[], int, int, Char[], int, Base64FormattingOptions) | argument 0 -> return (normal) | false |
| System.Convert.ToBase64String(Byte[]) | argument 0 -> return (normal) | false |
| System.Convert.ToBase64String(Byte[], Base64FormattingOptions) | argument 0 -> return (normal) | false |
| System.Convert.ToBase64String(Byte[], int, int) | argument 0 -> return (normal) | false |
| System.Convert.ToBase64String(Byte[], int, int, Base64FormattingOptions) | argument 0 -> return (normal) | false |
| System.Convert.ToBase64String(ReadOnlySpan<Byte>, Base64FormattingOptions) | argument 0 -> return (normal) | false |
| System.Convert.ToBase64_CalculateAndValidateOutputLength(int, bool) | argument 0 -> return (normal) | false |
| System.Convert.ToBoolean(DateTime) | argument 0 -> return (normal) | false |
| System.Convert.ToBoolean(bool) | argument 0 -> return (normal) | false |
| System.Convert.ToBoolean(byte) | argument 0 -> return (normal) | false |
| System.Convert.ToBoolean(char) | argument 0 -> return (normal) | false |
| System.Convert.ToBoolean(decimal) | argument 0 -> return (normal) | false |
| System.Convert.ToBoolean(double) | argument 0 -> return (normal) | false |
| System.Convert.ToBoolean(float) | argument 0 -> return (normal) | false |
| System.Convert.ToBoolean(int) | argument 0 -> return (normal) | false |
| System.Convert.ToBoolean(long) | argument 0 -> return (normal) | false |
| System.Convert.ToBoolean(object) | argument 0 -> return (normal) | false |
| System.Convert.ToBoolean(object, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToBoolean(sbyte) | argument 0 -> return (normal) | false |
| System.Convert.ToBoolean(short) | argument 0 -> return (normal) | false |
| System.Convert.ToBoolean(string) | argument 0 -> return (normal) | false |
| System.Convert.ToBoolean(string, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToBoolean(uint) | argument 0 -> return (normal) | false |
| System.Convert.ToBoolean(ulong) | argument 0 -> return (normal) | false |
| System.Convert.ToBoolean(ushort) | argument 0 -> return (normal) | false |
| System.Convert.ToByte(DateTime) | argument 0 -> return (normal) | false |
| System.Convert.ToByte(bool) | argument 0 -> return (normal) | false |
| System.Convert.ToByte(byte) | argument 0 -> return (normal) | false |
| System.Convert.ToByte(char) | argument 0 -> return (normal) | false |
| System.Convert.ToByte(decimal) | argument 0 -> return (normal) | false |
| System.Convert.ToByte(double) | argument 0 -> return (normal) | false |
| System.Convert.ToByte(float) | argument 0 -> return (normal) | false |
| System.Convert.ToByte(int) | argument 0 -> return (normal) | false |
| System.Convert.ToByte(long) | argument 0 -> return (normal) | false |
| System.Convert.ToByte(object) | argument 0 -> return (normal) | false |
| System.Convert.ToByte(object, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToByte(sbyte) | argument 0 -> return (normal) | false |
| System.Convert.ToByte(short) | argument 0 -> return (normal) | false |
| System.Convert.ToByte(string) | argument 0 -> return (normal) | false |
| System.Convert.ToByte(string, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToByte(string, int) | argument 0 -> return (normal) | false |
| System.Convert.ToByte(uint) | argument 0 -> return (normal) | false |
| System.Convert.ToByte(ulong) | argument 0 -> return (normal) | false |
| System.Convert.ToByte(ushort) | argument 0 -> return (normal) | false |
| System.Convert.ToChar(DateTime) | argument 0 -> return (normal) | false |
| System.Convert.ToChar(bool) | argument 0 -> return (normal) | false |
| System.Convert.ToChar(byte) | argument 0 -> return (normal) | false |
| System.Convert.ToChar(char) | argument 0 -> return (normal) | false |
| System.Convert.ToChar(decimal) | argument 0 -> return (normal) | false |
| System.Convert.ToChar(double) | argument 0 -> return (normal) | false |
| System.Convert.ToChar(float) | argument 0 -> return (normal) | false |
| System.Convert.ToChar(int) | argument 0 -> return (normal) | false |
| System.Convert.ToChar(long) | argument 0 -> return (normal) | false |
| System.Convert.ToChar(object) | argument 0 -> return (normal) | false |
| System.Convert.ToChar(object, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToChar(sbyte) | argument 0 -> return (normal) | false |
| System.Convert.ToChar(short) | argument 0 -> return (normal) | false |
| System.Convert.ToChar(string) | argument 0 -> return (normal) | false |
| System.Convert.ToChar(string, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToChar(uint) | argument 0 -> return (normal) | false |
| System.Convert.ToChar(ulong) | argument 0 -> return (normal) | false |
| System.Convert.ToChar(ushort) | argument 0 -> return (normal) | false |
| System.Convert.ToDateTime(DateTime) | argument 0 -> return (normal) | false |
| System.Convert.ToDateTime(bool) | argument 0 -> return (normal) | false |
| System.Convert.ToDateTime(byte) | argument 0 -> return (normal) | false |
| System.Convert.ToDateTime(char) | argument 0 -> return (normal) | false |
| System.Convert.ToDateTime(decimal) | argument 0 -> return (normal) | false |
| System.Convert.ToDateTime(double) | argument 0 -> return (normal) | false |
| System.Convert.ToDateTime(float) | argument 0 -> return (normal) | false |
| System.Convert.ToDateTime(int) | argument 0 -> return (normal) | false |
| System.Convert.ToDateTime(long) | argument 0 -> return (normal) | false |
| System.Convert.ToDateTime(object) | argument 0 -> return (normal) | false |
| System.Convert.ToDateTime(object, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToDateTime(sbyte) | argument 0 -> return (normal) | false |
| System.Convert.ToDateTime(short) | argument 0 -> return (normal) | false |
| System.Convert.ToDateTime(string) | argument 0 -> return (normal) | false |
| System.Convert.ToDateTime(string, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToDateTime(uint) | argument 0 -> return (normal) | false |
| System.Convert.ToDateTime(ulong) | argument 0 -> return (normal) | false |
| System.Convert.ToDateTime(ushort) | argument 0 -> return (normal) | false |
| System.Convert.ToDecimal(DateTime) | argument 0 -> return (normal) | false |
| System.Convert.ToDecimal(bool) | argument 0 -> return (normal) | false |
| System.Convert.ToDecimal(byte) | argument 0 -> return (normal) | false |
| System.Convert.ToDecimal(char) | argument 0 -> return (normal) | false |
| System.Convert.ToDecimal(decimal) | argument 0 -> return (normal) | false |
| System.Convert.ToDecimal(double) | argument 0 -> return (normal) | false |
| System.Convert.ToDecimal(float) | argument 0 -> return (normal) | false |
| System.Convert.ToDecimal(int) | argument 0 -> return (normal) | false |
| System.Convert.ToDecimal(long) | argument 0 -> return (normal) | false |
| System.Convert.ToDecimal(object) | argument 0 -> return (normal) | false |
| System.Convert.ToDecimal(object, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToDecimal(sbyte) | argument 0 -> return (normal) | false |
| System.Convert.ToDecimal(short) | argument 0 -> return (normal) | false |
| System.Convert.ToDecimal(string) | argument 0 -> return (normal) | false |
| System.Convert.ToDecimal(string, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToDecimal(uint) | argument 0 -> return (normal) | false |
| System.Convert.ToDecimal(ulong) | argument 0 -> return (normal) | false |
| System.Convert.ToDecimal(ushort) | argument 0 -> return (normal) | false |
| System.Convert.ToDouble(DateTime) | argument 0 -> return (normal) | false |
| System.Convert.ToDouble(bool) | argument 0 -> return (normal) | false |
| System.Convert.ToDouble(byte) | argument 0 -> return (normal) | false |
| System.Convert.ToDouble(char) | argument 0 -> return (normal) | false |
| System.Convert.ToDouble(decimal) | argument 0 -> return (normal) | false |
| System.Convert.ToDouble(double) | argument 0 -> return (normal) | false |
| System.Convert.ToDouble(float) | argument 0 -> return (normal) | false |
| System.Convert.ToDouble(int) | argument 0 -> return (normal) | false |
| System.Convert.ToDouble(long) | argument 0 -> return (normal) | false |
| System.Convert.ToDouble(object) | argument 0 -> return (normal) | false |
| System.Convert.ToDouble(object, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToDouble(sbyte) | argument 0 -> return (normal) | false |
| System.Convert.ToDouble(short) | argument 0 -> return (normal) | false |
| System.Convert.ToDouble(string) | argument 0 -> return (normal) | false |
| System.Convert.ToDouble(string, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToDouble(uint) | argument 0 -> return (normal) | false |
| System.Convert.ToDouble(ulong) | argument 0 -> return (normal) | false |
| System.Convert.ToDouble(ushort) | argument 0 -> return (normal) | false |
| System.Convert.ToHexString(Byte[]) | argument 0 -> return (normal) | false |
| System.Convert.ToHexString(Byte[], int, int) | argument 0 -> return (normal) | false |
| System.Convert.ToHexString(ReadOnlySpan<Byte>) | argument 0 -> return (normal) | false |
| System.Convert.ToInt16(DateTime) | argument 0 -> return (normal) | false |
| System.Convert.ToInt16(bool) | argument 0 -> return (normal) | false |
| System.Convert.ToInt16(byte) | argument 0 -> return (normal) | false |
| System.Convert.ToInt16(char) | argument 0 -> return (normal) | false |
| System.Convert.ToInt16(decimal) | argument 0 -> return (normal) | false |
| System.Convert.ToInt16(double) | argument 0 -> return (normal) | false |
| System.Convert.ToInt16(float) | argument 0 -> return (normal) | false |
| System.Convert.ToInt16(int) | argument 0 -> return (normal) | false |
| System.Convert.ToInt16(long) | argument 0 -> return (normal) | false |
| System.Convert.ToInt16(object) | argument 0 -> return (normal) | false |
| System.Convert.ToInt16(object, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToInt16(sbyte) | argument 0 -> return (normal) | false |
| System.Convert.ToInt16(short) | argument 0 -> return (normal) | false |
| System.Convert.ToInt16(string) | argument 0 -> return (normal) | false |
| System.Convert.ToInt16(string, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToInt16(string, int) | argument 0 -> return (normal) | false |
| System.Convert.ToInt16(uint) | argument 0 -> return (normal) | false |
| System.Convert.ToInt16(ulong) | argument 0 -> return (normal) | false |
| System.Convert.ToInt16(ushort) | argument 0 -> return (normal) | false |
| System.Convert.ToInt32(DateTime) | argument 0 -> return (normal) | false |
| System.Convert.ToInt32(bool) | argument 0 -> return (normal) | false |
| System.Convert.ToInt32(byte) | argument 0 -> return (normal) | false |
| System.Convert.ToInt32(char) | argument 0 -> return (normal) | false |
| System.Convert.ToInt32(decimal) | argument 0 -> return (normal) | false |
| System.Convert.ToInt32(double) | argument 0 -> return (normal) | false |
| System.Convert.ToInt32(float) | argument 0 -> return (normal) | false |
| System.Convert.ToInt32(int) | argument 0 -> return (normal) | false |
| System.Convert.ToInt32(long) | argument 0 -> return (normal) | false |
| System.Convert.ToInt32(object) | argument 0 -> return (normal) | false |
| System.Convert.ToInt32(object, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToInt32(sbyte) | argument 0 -> return (normal) | false |
| System.Convert.ToInt32(short) | argument 0 -> return (normal) | false |
| System.Convert.ToInt32(string) | argument 0 -> return (normal) | false |
| System.Convert.ToInt32(string, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToInt32(string, int) | argument 0 -> return (normal) | false |
| System.Convert.ToInt32(uint) | argument 0 -> return (normal) | false |
| System.Convert.ToInt32(ulong) | argument 0 -> return (normal) | false |
| System.Convert.ToInt32(ushort) | argument 0 -> return (normal) | false |
| System.Convert.ToInt64(DateTime) | argument 0 -> return (normal) | false |
| System.Convert.ToInt64(bool) | argument 0 -> return (normal) | false |
| System.Convert.ToInt64(byte) | argument 0 -> return (normal) | false |
| System.Convert.ToInt64(char) | argument 0 -> return (normal) | false |
| System.Convert.ToInt64(decimal) | argument 0 -> return (normal) | false |
| System.Convert.ToInt64(double) | argument 0 -> return (normal) | false |
| System.Convert.ToInt64(float) | argument 0 -> return (normal) | false |
| System.Convert.ToInt64(int) | argument 0 -> return (normal) | false |
| System.Convert.ToInt64(long) | argument 0 -> return (normal) | false |
| System.Convert.ToInt64(object) | argument 0 -> return (normal) | false |
| System.Convert.ToInt64(object, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToInt64(sbyte) | argument 0 -> return (normal) | false |
| System.Convert.ToInt64(short) | argument 0 -> return (normal) | false |
| System.Convert.ToInt64(string) | argument 0 -> return (normal) | false |
| System.Convert.ToInt64(string, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToInt64(string, int) | argument 0 -> return (normal) | false |
| System.Convert.ToInt64(uint) | argument 0 -> return (normal) | false |
| System.Convert.ToInt64(ulong) | argument 0 -> return (normal) | false |
| System.Convert.ToInt64(ushort) | argument 0 -> return (normal) | false |
| System.Convert.ToSByte(DateTime) | argument 0 -> return (normal) | false |
| System.Convert.ToSByte(bool) | argument 0 -> return (normal) | false |
| System.Convert.ToSByte(byte) | argument 0 -> return (normal) | false |
| System.Convert.ToSByte(char) | argument 0 -> return (normal) | false |
| System.Convert.ToSByte(decimal) | argument 0 -> return (normal) | false |
| System.Convert.ToSByte(double) | argument 0 -> return (normal) | false |
| System.Convert.ToSByte(float) | argument 0 -> return (normal) | false |
| System.Convert.ToSByte(int) | argument 0 -> return (normal) | false |
| System.Convert.ToSByte(long) | argument 0 -> return (normal) | false |
| System.Convert.ToSByte(object) | argument 0 -> return (normal) | false |
| System.Convert.ToSByte(object, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToSByte(sbyte) | argument 0 -> return (normal) | false |
| System.Convert.ToSByte(short) | argument 0 -> return (normal) | false |
| System.Convert.ToSByte(string) | argument 0 -> return (normal) | false |
| System.Convert.ToSByte(string, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToSByte(string, int) | argument 0 -> return (normal) | false |
| System.Convert.ToSByte(uint) | argument 0 -> return (normal) | false |
| System.Convert.ToSByte(ulong) | argument 0 -> return (normal) | false |
| System.Convert.ToSByte(ushort) | argument 0 -> return (normal) | false |
| System.Convert.ToSingle(DateTime) | argument 0 -> return (normal) | false |
| System.Convert.ToSingle(bool) | argument 0 -> return (normal) | false |
| System.Convert.ToSingle(byte) | argument 0 -> return (normal) | false |
| System.Convert.ToSingle(char) | argument 0 -> return (normal) | false |
| System.Convert.ToSingle(decimal) | argument 0 -> return (normal) | false |
| System.Convert.ToSingle(double) | argument 0 -> return (normal) | false |
| System.Convert.ToSingle(float) | argument 0 -> return (normal) | false |
| System.Convert.ToSingle(int) | argument 0 -> return (normal) | false |
| System.Convert.ToSingle(long) | argument 0 -> return (normal) | false |
| System.Convert.ToSingle(object) | argument 0 -> return (normal) | false |
| System.Convert.ToSingle(object, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToSingle(sbyte) | argument 0 -> return (normal) | false |
| System.Convert.ToSingle(short) | argument 0 -> return (normal) | false |
| System.Convert.ToSingle(string) | argument 0 -> return (normal) | false |
| System.Convert.ToSingle(string, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToSingle(uint) | argument 0 -> return (normal) | false |
| System.Convert.ToSingle(ulong) | argument 0 -> return (normal) | false |
| System.Convert.ToSingle(ushort) | argument 0 -> return (normal) | false |
| System.Convert.ToString(DateTime) | argument 0 -> return (normal) | false |
| System.Convert.ToString(DateTime, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToString(bool) | argument 0 -> return (normal) | false |
| System.Convert.ToString(bool, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToString(byte) | argument 0 -> return (normal) | false |
| System.Convert.ToString(byte, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToString(byte, int) | argument 0 -> return (normal) | false |
| System.Convert.ToString(char) | argument 0 -> return (normal) | false |
| System.Convert.ToString(char, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToString(decimal) | argument 0 -> return (normal) | false |
| System.Convert.ToString(decimal, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToString(double) | argument 0 -> return (normal) | false |
| System.Convert.ToString(double, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToString(float) | argument 0 -> return (normal) | false |
| System.Convert.ToString(float, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToString(int) | argument 0 -> return (normal) | false |
| System.Convert.ToString(int, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToString(int, int) | argument 0 -> return (normal) | false |
| System.Convert.ToString(long) | argument 0 -> return (normal) | false |
| System.Convert.ToString(long, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToString(long, int) | argument 0 -> return (normal) | false |
| System.Convert.ToString(object) | argument 0 -> return (normal) | false |
| System.Convert.ToString(object, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToString(sbyte) | argument 0 -> return (normal) | false |
| System.Convert.ToString(sbyte, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToString(short) | argument 0 -> return (normal) | false |
| System.Convert.ToString(short, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToString(short, int) | argument 0 -> return (normal) | false |
| System.Convert.ToString(string) | argument 0 -> return (normal) | false |
| System.Convert.ToString(string, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToString(uint) | argument 0 -> return (normal) | false |
| System.Convert.ToString(uint, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToString(ulong) | argument 0 -> return (normal) | false |
| System.Convert.ToString(ulong, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToString(ushort) | argument 0 -> return (normal) | false |
| System.Convert.ToString(ushort, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt16(DateTime) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt16(bool) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt16(byte) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt16(char) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt16(decimal) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt16(double) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt16(float) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt16(int) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt16(long) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt16(object) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt16(object, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt16(sbyte) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt16(short) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt16(string) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt16(string, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt16(string, int) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt16(uint) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt16(ulong) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt16(ushort) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt32(DateTime) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt32(bool) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt32(byte) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt32(char) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt32(decimal) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt32(double) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt32(float) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt32(int) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt32(long) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt32(object) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt32(object, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt32(sbyte) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt32(short) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt32(string) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt32(string, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt32(string, int) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt32(uint) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt32(ulong) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt32(ushort) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt64(DateTime) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt64(bool) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt64(byte) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt64(char) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt64(decimal) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt64(double) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt64(float) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt64(int) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt64(long) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt64(object) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt64(object, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt64(sbyte) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt64(short) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt64(string) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt64(string, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt64(string, int) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt64(uint) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt64(ulong) | argument 0 -> return (normal) | false |
| System.Convert.ToUInt64(ushort) | argument 0 -> return (normal) | false |
| System.Convert.TryDecodeFromUtf16(ReadOnlySpan<Char>, Span<Byte>, out int, out int) | argument 0 -> return (normal) | false |
| System.Convert.TryFromBase64Chars(ReadOnlySpan<Char>, Span<Byte>, out int) | argument 0 -> return (normal) | false |
| System.Convert.TryFromBase64String(string, Span<Byte>, out int) | argument 0 -> return (normal) | false |
| System.Convert.TryToBase64Chars(ReadOnlySpan<Byte>, Span<Char>, out int, Base64FormattingOptions) | argument 0 -> return (normal) | false |
| System.Convert.WriteThreeLowOrderBytes(ref byte, int) | argument 0 -> return (normal) | false |
| System.Diagnostics.Tracing.CounterPayload.<get_ForEnumeration>d__51.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Diagnostics.Tracing.CounterPayload.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Diagnostics.Tracing.EventPayload.Add(KeyValuePair<String, Object>) | argument 0 -> element of argument -1 | true |
| System.Diagnostics.Tracing.EventPayload.Add(KeyValuePair<String, Object>) | property Key of argument 0 -> property Key of element of argument -1 | true |
| System.Diagnostics.Tracing.EventPayload.Add(KeyValuePair<String, Object>) | property Value of argument 0 -> property Value of element of argument -1 | true |
| System.Diagnostics.Tracing.EventPayload.Add(string, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Diagnostics.Tracing.EventPayload.Add(string, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Diagnostics.Tracing.EventPayload.CopyTo(KeyValuePair<String,Object>[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Diagnostics.Tracing.EventPayload.EventPayload(List<String>, List<Object>) | property Key of element of argument 0 -> property Key of element of return (normal) | true |
| System.Diagnostics.Tracing.EventPayload.EventPayload(List<String>, List<Object>) | property Key of element of argument 1 -> property Key of element of return (normal) | true |
| System.Diagnostics.Tracing.EventPayload.EventPayload(List<String>, List<Object>) | property Value of element of argument 0 -> property Value of element of return (normal) | true |
| System.Diagnostics.Tracing.EventPayload.EventPayload(List<String>, List<Object>) | property Value of element of argument 1 -> property Value of element of return (normal) | true |
| System.Diagnostics.Tracing.EventPayload.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Diagnostics.Tracing.EventPayload.get_Item(string) | property Value of element of argument -1 -> return (normal) | true |
| System.Diagnostics.Tracing.EventPayload.get_Keys() | property Key of element of argument -1 -> element of return (normal) | true |
| System.Diagnostics.Tracing.EventPayload.get_Values() | property Value of element of argument -1 -> element of return (normal) | true |
| System.Diagnostics.Tracing.EventPayload.set_Item(string, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Diagnostics.Tracing.EventPayload.set_Item(string, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Diagnostics.Tracing.IncrementingCounterPayload.<get_ForEnumeration>d__39.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Diagnostics.Tracing.IncrementingCounterPayload.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Dynamic.ExpandoObject.Add(KeyValuePair<String, Object>) | argument 0 -> element of argument -1 | true |
| System.Dynamic.ExpandoObject.Add(KeyValuePair<String, Object>) | property Key of argument 0 -> property Key of element of argument -1 | true |
| System.Dynamic.ExpandoObject.Add(KeyValuePair<String, Object>) | property Value of argument 0 -> property Value of element of argument -1 | true |
| System.Dynamic.ExpandoObject.Add(string, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Dynamic.ExpandoObject.Add(string, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Dynamic.ExpandoObject.CopyTo(KeyValuePair<String,Object>[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Dynamic.ExpandoObject.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Dynamic.ExpandoObject.KeyCollection.Add(string) | argument 0 -> element of argument -1 | true |
| System.Dynamic.ExpandoObject.KeyCollection.CopyTo(String[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Dynamic.ExpandoObject.KeyCollection.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Dynamic.ExpandoObject.MetaExpando.<GetDynamicMemberNames>d__6.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Dynamic.ExpandoObject.ValueCollection.Add(object) | argument 0 -> element of argument -1 | true |
| System.Dynamic.ExpandoObject.ValueCollection.CopyTo(Object[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Dynamic.ExpandoObject.ValueCollection.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Dynamic.ExpandoObject.get_Item(string) | property Value of element of argument -1 -> return (normal) | true |
| System.Dynamic.ExpandoObject.get_Keys() | property Key of element of argument -1 -> element of return (normal) | true |
| System.Dynamic.ExpandoObject.get_Values() | property Value of element of argument -1 -> element of return (normal) | true |
| System.Dynamic.ExpandoObject.set_Item(string, object) | argument 0 -> property Key of element of argument -1 | true |
| System.Dynamic.ExpandoObject.set_Item(string, object) | argument 1 -> property Value of element of argument -1 | true |
| System.Dynamic.Utils.ListProvider<>.Add(T) | argument 0 -> element of argument -1 | true |
| System.Dynamic.Utils.ListProvider<>.CopyTo(T[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Dynamic.Utils.ListProvider<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Dynamic.Utils.ListProvider<>.Insert(int, T) | argument 1 -> element of argument -1 | true |
| System.Dynamic.Utils.ListProvider<>.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.Dynamic.Utils.ListProvider<>.set_Item(int, T) | argument 1 -> element of argument -1 | true |
| System.IO.BufferedStream.BeginRead(Byte[], int, int, AsyncCallback, object) | argument -1 -> return (out parameter 0) | false |
| System.IO.BufferedStream.BeginWrite(Byte[], int, int, AsyncCallback, object) | argument 0 -> argument -1 | false |
| System.IO.BufferedStream.CopyTo(Stream, int) | argument -1 -> return (out parameter 0) | false |
| System.IO.BufferedStream.CopyToAsync(Stream, int, CancellationToken) | argument -1 -> return (out parameter 0) | false |
| System.IO.BufferedStream.Read(Byte[], int, int) | argument -1 -> return (out parameter 0) | false |
| System.IO.BufferedStream.ReadAsync(Byte[], int, int, CancellationToken) | argument -1 -> return (out parameter 0) | false |
| System.IO.BufferedStream.Write(Byte[], int, int) | argument 0 -> argument -1 | false |
| System.IO.BufferedStream.WriteAsync(Byte[], int, int, CancellationToken) | argument 0 -> argument -1 | false |
| System.IO.Compression.CheckSumAndSizeWriteStream.Read(Byte[], int, int) | argument -1 -> return (out parameter 0) | false |
| System.IO.Compression.CheckSumAndSizeWriteStream.Write(Byte[], int, int) | argument 0 -> argument -1 | false |
| System.IO.Compression.DeflateManagedStream.BeginRead(Byte[], int, int, AsyncCallback, object) | argument -1 -> return (out parameter 0) | false |
| System.IO.Compression.DeflateManagedStream.Read(Byte[], int, int) | argument -1 -> return (out parameter 0) | false |
| System.IO.Compression.DeflateManagedStream.ReadAsync(Byte[], int, int, CancellationToken) | argument -1 -> return (out parameter 0) | false |
| System.IO.Compression.DeflateManagedStream.Write(Byte[], int, int) | argument 0 -> argument -1 | false |
| System.IO.Compression.DeflateStream.BeginRead(Byte[], int, int, AsyncCallback, object) | argument -1 -> return (out parameter 0) | false |
| System.IO.Compression.DeflateStream.BeginWrite(Byte[], int, int, AsyncCallback, object) | argument 0 -> argument -1 | false |
| System.IO.Compression.DeflateStream.CopyTo(Stream, int) | argument -1 -> return (out parameter 0) | false |
| System.IO.Compression.DeflateStream.CopyToAsync(Stream, int, CancellationToken) | argument -1 -> return (out parameter 0) | false |
| System.IO.Compression.DeflateStream.CopyToStream.Read(Byte[], int, int) | argument -1 -> return (out parameter 0) | false |
| System.IO.Compression.DeflateStream.CopyToStream.Write(Byte[], int, int) | argument 0 -> argument -1 | false |
| System.IO.Compression.DeflateStream.CopyToStream.WriteAsync(Byte[], int, int, CancellationToken) | argument 0 -> argument -1 | false |
| System.IO.Compression.DeflateStream.DeflateStream(Stream, CompressionLevel) | argument 0 -> return (normal) | false |
| System.IO.Compression.DeflateStream.DeflateStream(Stream, CompressionLevel, bool) | argument 0 -> return (normal) | false |
| System.IO.Compression.DeflateStream.DeflateStream(Stream, CompressionLevel, bool, int) | argument 0 -> return (normal) | false |
| System.IO.Compression.DeflateStream.DeflateStream(Stream, CompressionMode) | argument 0 -> return (normal) | false |
| System.IO.Compression.DeflateStream.DeflateStream(Stream, CompressionMode, bool) | argument 0 -> return (normal) | false |
| System.IO.Compression.DeflateStream.DeflateStream(Stream, CompressionMode, bool, int, long) | argument 0 -> return (normal) | false |
| System.IO.Compression.DeflateStream.DeflateStream(Stream, CompressionMode, long) | argument 0 -> return (normal) | false |
| System.IO.Compression.DeflateStream.Read(Byte[], int, int) | argument -1 -> return (out parameter 0) | false |
| System.IO.Compression.DeflateStream.ReadAsync(Byte[], int, int, CancellationToken) | argument -1 -> return (out parameter 0) | false |
| System.IO.Compression.DeflateStream.Write(Byte[], int, int) | argument 0 -> argument -1 | false |
| System.IO.Compression.DeflateStream.WriteAsync(Byte[], int, int, CancellationToken) | argument 0 -> argument -1 | false |
| System.IO.Compression.GZipStream.BeginRead(Byte[], int, int, AsyncCallback, object) | argument -1 -> return (out parameter 0) | false |
| System.IO.Compression.GZipStream.BeginWrite(Byte[], int, int, AsyncCallback, object) | argument 0 -> argument -1 | false |
| System.IO.Compression.GZipStream.CopyTo(Stream, int) | argument -1 -> return (out parameter 0) | false |
| System.IO.Compression.GZipStream.CopyToAsync(Stream, int, CancellationToken) | argument -1 -> return (out parameter 0) | false |
| System.IO.Compression.GZipStream.Read(Byte[], int, int) | argument -1 -> return (out parameter 0) | false |
| System.IO.Compression.GZipStream.ReadAsync(Byte[], int, int, CancellationToken) | argument -1 -> return (out parameter 0) | false |
| System.IO.Compression.GZipStream.Write(Byte[], int, int) | argument 0 -> argument -1 | false |
| System.IO.Compression.GZipStream.WriteAsync(Byte[], int, int, CancellationToken) | argument 0 -> argument -1 | false |
| System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.BeginWrite(Byte[], int, int, AsyncCallback, object) | argument 0 -> argument -1 | false |
| System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.Read(Byte[], int, int) | argument -1 -> return (out parameter 0) | false |
| System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.Write(Byte[], int, int) | argument 0 -> argument -1 | false |
| System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.WriteAsync(Byte[], int, int, CancellationToken) | argument 0 -> argument -1 | false |
| System.IO.Compression.SubReadStream.Read(Byte[], int, int) | argument -1 -> return (out parameter 0) | false |
| System.IO.Compression.SubReadStream.Write(Byte[], int, int) | argument 0 -> argument -1 | false |
| System.IO.Compression.WrappedStream.Read(Byte[], int, int) | argument -1 -> return (out parameter 0) | false |
| System.IO.Compression.WrappedStream.Write(Byte[], int, int) | argument 0 -> argument -1 | false |
| System.IO.Compression.ZipArchiveEntry.DirectToArchiveWriterStream.Read(Byte[], int, int) | argument -1 -> return (out parameter 0) | false |
| System.IO.Compression.ZipArchiveEntry.DirectToArchiveWriterStream.Write(Byte[], int, int) | argument 0 -> argument -1 | false |
| System.IO.FileStream.BeginRead(Byte[], int, int, AsyncCallback, object) | argument -1 -> return (out parameter 0) | false |
| System.IO.FileStream.BeginWrite(Byte[], int, int, AsyncCallback, object) | argument 0 -> argument -1 | false |
| System.IO.FileStream.CopyToAsync(Stream, int, CancellationToken) | argument -1 -> return (out parameter 0) | false |
| System.IO.FileStream.Read(Byte[], int, int) | argument -1 -> return (out parameter 0) | false |
| System.IO.FileStream.ReadAsync(Byte[], int, int, CancellationToken) | argument -1 -> return (out parameter 0) | false |
| System.IO.FileStream.Write(Byte[], int, int) | argument 0 -> argument -1 | false |
| System.IO.FileStream.WriteAsync(Byte[], int, int, CancellationToken) | argument 0 -> argument -1 | false |
| System.IO.MemoryStream.CopyTo(Stream, int) | argument -1 -> return (out parameter 0) | false |
| System.IO.MemoryStream.CopyToAsync(Stream, int, CancellationToken) | argument -1 -> return (out parameter 0) | false |
| System.IO.MemoryStream.MemoryStream(Byte[]) | argument 0 -> return (normal) | false |
| System.IO.MemoryStream.MemoryStream(Byte[], bool) | argument 0 -> return (normal) | false |
| System.IO.MemoryStream.MemoryStream(Byte[], int, int) | argument 0 -> return (normal) | false |
| System.IO.MemoryStream.MemoryStream(Byte[], int, int, bool) | argument 0 -> return (normal) | false |
| System.IO.MemoryStream.MemoryStream(Byte[], int, int, bool, bool) | argument 0 -> return (normal) | false |
| System.IO.MemoryStream.Read(Byte[], int, int) | argument -1 -> return (out parameter 0) | false |
| System.IO.MemoryStream.ReadAsync(Byte[], int, int, CancellationToken) | argument -1 -> return (out parameter 0) | false |
| System.IO.MemoryStream.ToArray() | argument -1 -> return (normal) | false |
| System.IO.MemoryStream.Write(Byte[], int, int) | argument 0 -> argument -1 | false |
| System.IO.MemoryStream.WriteAsync(Byte[], int, int, CancellationToken) | argument 0 -> argument -1 | false |
| System.IO.Path.Combine(params String[]) | element of argument 0 -> return (normal) | false |
| System.IO.Path.Combine(string, string) | argument 0 -> return (normal) | false |
| System.IO.Path.Combine(string, string) | argument 1 -> return (normal) | false |
| System.IO.Path.Combine(string, string, string) | argument 0 -> return (normal) | false |
| System.IO.Path.Combine(string, string, string) | argument 1 -> return (normal) | false |
| System.IO.Path.Combine(string, string, string) | argument 2 -> return (normal) | false |
| System.IO.Path.Combine(string, string, string, string) | argument 0 -> return (normal) | false |
| System.IO.Path.Combine(string, string, string, string) | argument 1 -> return (normal) | false |
| System.IO.Path.Combine(string, string, string, string) | argument 2 -> return (normal) | false |
| System.IO.Path.Combine(string, string, string, string) | argument 3 -> return (normal) | false |
| System.IO.Path.GetDirectoryName(ReadOnlySpan<Char>) | argument 0 -> return (normal) | false |
| System.IO.Path.GetDirectoryName(string) | argument 0 -> return (normal) | false |
| System.IO.Path.GetDirectoryNameOffset(ReadOnlySpan<Char>) | argument 0 -> return (normal) | false |
| System.IO.Path.GetExtension(ReadOnlySpan<Char>) | argument 0 -> return (normal) | false |
| System.IO.Path.GetExtension(string) | argument 0 -> return (normal) | false |
| System.IO.Path.GetFileName(ReadOnlySpan<Char>) | argument 0 -> return (normal) | false |
| System.IO.Path.GetFileName(string) | argument 0 -> return (normal) | false |
| System.IO.Path.GetFileNameWithoutExtension(ReadOnlySpan<Char>) | argument 0 -> return (normal) | false |
| System.IO.Path.GetFileNameWithoutExtension(string) | argument 0 -> return (normal) | false |
| System.IO.Path.GetFullPath(string) | argument 0 -> return (normal) | false |
| System.IO.Path.GetFullPath(string, string) | argument 0 -> return (normal) | false |
| System.IO.Path.GetPathRoot(ReadOnlySpan<Char>) | argument 0 -> return (normal) | false |
| System.IO.Path.GetPathRoot(string) | argument 0 -> return (normal) | false |
| System.IO.Path.GetRelativePath(string, string) | argument 1 -> return (normal) | false |
| System.IO.Path.GetRelativePath(string, string, StringComparison) | argument 1 -> return (normal) | false |
| System.IO.Pipes.PipeStream.BeginRead(Byte[], int, int, AsyncCallback, object) | argument -1 -> return (out parameter 0) | false |
| System.IO.Pipes.PipeStream.BeginWrite(Byte[], int, int, AsyncCallback, object) | argument 0 -> argument -1 | false |
| System.IO.Pipes.PipeStream.Read(Byte[], int, int) | argument -1 -> return (out parameter 0) | false |
| System.IO.Pipes.PipeStream.ReadAsync(Byte[], int, int, CancellationToken) | argument -1 -> return (out parameter 0) | false |
| System.IO.Pipes.PipeStream.Write(Byte[], int, int) | argument 0 -> argument -1 | false |
| System.IO.Pipes.PipeStream.WriteAsync(Byte[], int, int, CancellationToken) | argument 0 -> argument -1 | false |
| System.IO.Stream.BeginEndReadAsync(Byte[], int, int) | argument -1 -> return (out parameter 0) | false |
| System.IO.Stream.BeginEndWriteAsync(Byte[], int, int) | argument 0 -> argument -1 | false |
| System.IO.Stream.BeginRead(Byte[], int, int, AsyncCallback, object) | argument -1 -> return (out parameter 0) | false |
| System.IO.Stream.BeginReadInternal(Byte[], int, int, AsyncCallback, object, bool, bool) | argument -1 -> return (out parameter 0) | false |
| System.IO.Stream.BeginWrite(Byte[], int, int, AsyncCallback, object) | argument 0 -> argument -1 | false |
| System.IO.Stream.BeginWriteInternal(Byte[], int, int, AsyncCallback, object, bool, bool) | argument 0 -> argument -1 | false |
| System.IO.Stream.BlockingBeginRead(Byte[], int, int, AsyncCallback, object) | argument -1 -> return (out parameter 0) | false |
| System.IO.Stream.BlockingBeginWrite(Byte[], int, int, AsyncCallback, object) | argument 0 -> argument -1 | false |
| System.IO.Stream.CopyTo(Stream) | argument -1 -> return (out parameter 0) | false |
| System.IO.Stream.CopyTo(Stream, int) | argument -1 -> return (out parameter 0) | false |
| System.IO.Stream.CopyToAsync(Stream) | argument -1 -> return (out parameter 0) | false |
| System.IO.Stream.CopyToAsync(Stream, CancellationToken) | argument -1 -> return (out parameter 0) | false |
| System.IO.Stream.CopyToAsync(Stream, int) | argument -1 -> return (out parameter 0) | false |
| System.IO.Stream.CopyToAsync(Stream, int, CancellationToken) | argument -1 -> return (out parameter 0) | false |
| System.IO.Stream.CopyToAsyncInternal(Stream, int, CancellationToken) | argument -1 -> return (out parameter 0) | false |
| System.IO.Stream.NullStream.BeginRead(Byte[], int, int, AsyncCallback, object) | argument -1 -> return (out parameter 0) | false |
| System.IO.Stream.NullStream.BeginWrite(Byte[], int, int, AsyncCallback, object) | argument 0 -> argument -1 | false |
| System.IO.Stream.NullStream.CopyTo(Stream, int) | argument -1 -> return (out parameter 0) | false |
| System.IO.Stream.NullStream.CopyToAsync(Stream, int, CancellationToken) | argument -1 -> return (out parameter 0) | false |
| System.IO.Stream.NullStream.Read(Byte[], int, int) | argument -1 -> return (out parameter 0) | false |
| System.IO.Stream.NullStream.ReadAsync(Byte[], int, int, CancellationToken) | argument -1 -> return (out parameter 0) | false |
| System.IO.Stream.NullStream.Write(Byte[], int, int) | argument 0 -> argument -1 | false |
| System.IO.Stream.NullStream.WriteAsync(Byte[], int, int, CancellationToken) | argument 0 -> argument -1 | false |
| System.IO.Stream.Read(Byte[], int, int) | argument -1 -> return (out parameter 0) | false |
| System.IO.Stream.ReadAsync(Byte[], int, int) | argument -1 -> return (out parameter 0) | false |
| System.IO.Stream.ReadAsync(Byte[], int, int, CancellationToken) | argument -1 -> return (out parameter 0) | false |
| System.IO.Stream.SyncStream.BeginRead(Byte[], int, int, AsyncCallback, object) | argument -1 -> return (out parameter 0) | false |
| System.IO.Stream.SyncStream.BeginWrite(Byte[], int, int, AsyncCallback, object) | argument 0 -> argument -1 | false |
| System.IO.Stream.SyncStream.Read(Byte[], int, int) | argument -1 -> return (out parameter 0) | false |
| System.IO.Stream.SyncStream.Write(Byte[], int, int) | argument 0 -> argument -1 | false |
| System.IO.Stream.Write(Byte[], int, int) | argument 0 -> argument -1 | false |
| System.IO.Stream.WriteAsync(Byte[], int, int) | argument 0 -> argument -1 | false |
| System.IO.Stream.WriteAsync(Byte[], int, int, CancellationToken) | argument 0 -> argument -1 | false |
| System.IO.StringReader.Read() | argument -1 -> return (normal) | false |
| System.IO.StringReader.Read(Char[], int, int) | argument -1 -> return (normal) | false |
| System.IO.StringReader.Read(Span<Char>) | argument -1 -> return (normal) | false |
| System.IO.StringReader.ReadAsync(Char[], int, int) | argument -1 -> return (normal) | false |
| System.IO.StringReader.ReadAsync(Memory<Char>, CancellationToken) | argument -1 -> return (normal) | false |
| System.IO.StringReader.ReadBlock(Span<Char>) | argument -1 -> return (normal) | false |
| System.IO.StringReader.ReadBlockAsync(Char[], int, int) | argument -1 -> return (normal) | false |
| System.IO.StringReader.ReadBlockAsync(Memory<Char>, CancellationToken) | argument -1 -> return (normal) | false |
| System.IO.StringReader.ReadLine() | argument -1 -> return (normal) | false |
| System.IO.StringReader.ReadLineAsync() | argument -1 -> return (normal) | false |
| System.IO.StringReader.ReadToEnd() | argument -1 -> return (normal) | false |
| System.IO.StringReader.ReadToEndAsync() | argument -1 -> return (normal) | false |
| System.IO.StringReader.StringReader(string) | argument 0 -> return (normal) | false |
| System.IO.TextReader.Read() | argument -1 -> return (normal) | false |
| System.IO.TextReader.Read(Char[], int, int) | argument -1 -> return (normal) | false |
| System.IO.TextReader.Read(Span<Char>) | argument -1 -> return (normal) | false |
| System.IO.TextReader.ReadAsync(Char[], int, int) | argument -1 -> return (normal) | false |
| System.IO.TextReader.ReadAsync(Memory<Char>, CancellationToken) | argument -1 -> return (normal) | false |
| System.IO.TextReader.ReadAsyncInternal(Memory<Char>, CancellationToken) | argument -1 -> return (normal) | false |
| System.IO.TextReader.ReadBlock(Char[], int, int) | argument -1 -> return (normal) | false |
| System.IO.TextReader.ReadBlock(Span<Char>) | argument -1 -> return (normal) | false |
| System.IO.TextReader.ReadBlockAsync(Char[], int, int) | argument -1 -> return (normal) | false |
| System.IO.TextReader.ReadBlockAsync(Memory<Char>, CancellationToken) | argument -1 -> return (normal) | false |
| System.IO.TextReader.ReadBlockAsyncInternal(Memory<Char>, CancellationToken) | argument -1 -> return (normal) | false |
| System.IO.TextReader.ReadLine() | argument -1 -> return (normal) | false |
| System.IO.TextReader.ReadLineAsync() | argument -1 -> return (normal) | false |
| System.IO.TextReader.ReadToEnd() | argument -1 -> return (normal) | false |
| System.IO.TextReader.ReadToEndAsync() | argument -1 -> return (normal) | false |
| System.IO.UnmanagedMemoryStream.Read(Byte[], int, int) | argument -1 -> return (out parameter 0) | false |
| System.IO.UnmanagedMemoryStream.ReadAsync(Byte[], int, int, CancellationToken) | argument -1 -> return (out parameter 0) | false |
| System.IO.UnmanagedMemoryStream.Write(Byte[], int, int) | argument 0 -> argument -1 | false |
| System.IO.UnmanagedMemoryStream.WriteAsync(Byte[], int, int, CancellationToken) | argument 0 -> argument -1 | false |
| System.IO.UnmanagedMemoryStreamWrapper.CopyToAsync(Stream, int, CancellationToken) | argument -1 -> return (out parameter 0) | false |
| System.IO.UnmanagedMemoryStreamWrapper.Read(Byte[], int, int) | argument -1 -> return (out parameter 0) | false |
| System.IO.UnmanagedMemoryStreamWrapper.ReadAsync(Byte[], int, int, CancellationToken) | argument -1 -> return (out parameter 0) | false |
| System.IO.UnmanagedMemoryStreamWrapper.ToArray() | argument -1 -> return (normal) | false |
| System.IO.UnmanagedMemoryStreamWrapper.Write(Byte[], int, int) | argument 0 -> argument -1 | false |
| System.IO.UnmanagedMemoryStreamWrapper.WriteAsync(Byte[], int, int, CancellationToken) | argument 0 -> argument -1 | false |
| System.Int32.Parse(string) | argument 0 -> return (normal) | false |
| System.Int32.Parse(string, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Int32.Parse(string, NumberStyles) | argument 0 -> return (normal) | false |
| System.Int32.Parse(string, NumberStyles, IFormatProvider) | argument 0 -> return (normal) | false |
| System.Int32.TryParse(string, NumberStyles, IFormatProvider, out int) | argument 0 -> return (normal) | false |
| System.Int32.TryParse(string, NumberStyles, IFormatProvider, out int) | argument 0 -> return (out parameter 3) | false |
| System.Int32.TryParse(string, out int) | argument 0 -> return (normal) | false |
| System.Int32.TryParse(string, out int) | argument 0 -> return (out parameter 1) | false |
| System.Lazy<>.Lazy(Func<T>) | return (normal) of argument 0 -> property Value of return (normal) | true |
| System.Lazy<>.Lazy(Func<T>, LazyThreadSafetyMode) | return (normal) of argument 0 -> property Value of return (normal) | true |
| System.Lazy<>.Lazy(Func<T>, LazyThreadSafetyMode, bool) | return (normal) of argument 0 -> property Value of return (normal) | true |
| System.Lazy<>.Lazy(Func<T>, bool) | return (normal) of argument 0 -> property Value of return (normal) | true |
| System.Lazy<>.get_Value() | argument -1 -> return (normal) | false |
| System.Linq.EmptyPartition<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Enumerable.<CastIterator>d__64<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Enumerable.<ExceptIterator>d__81<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Enumerable.<GroupJoinIterator>d__98<,,,>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Enumerable.<IntersectIterator>d__101<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Enumerable.<JoinIterator>d__105<,,,>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Enumerable.<OfTypeIterator>d__62<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Enumerable.<SelectIterator>d__174<,>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Enumerable.<SelectManyIterator>d__177<,>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Enumerable.<SelectManyIterator>d__179<,,>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Enumerable.<SelectManyIterator>d__181<,,>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Enumerable.<SkipLastIterator>d__194<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Enumerable.<SkipWhileIterator>d__190<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Enumerable.<SkipWhileIterator>d__192<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Enumerable.<TakeLastIterator>d__221<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Enumerable.<TakeWhileIterator>d__217<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Enumerable.<TakeWhileIterator>d__219<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Enumerable.<WhereIterator>d__240<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Enumerable.<ZipIterator>d__243<,>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Enumerable.<ZipIterator>d__244<,,>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>) | argument 1 -> parameter 0 of argument 2 | true |
| System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>) | element of argument 0 -> parameter 1 of argument 2 | true |
| System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>) | return (normal) of argument 2 -> parameter 0 of argument 3 | true |
| System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>) | return (normal) of argument 3 -> return (normal) | true |
| System.Linq.Enumerable.Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>) | argument 1 -> parameter 0 of argument 2 | true |
| System.Linq.Enumerable.Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>) | element of argument 0 -> parameter 1 of argument 2 | true |
| System.Linq.Enumerable.Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>) | return (normal) of argument 2 -> return (normal) | true |
| System.Linq.Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>) | element of argument 0 -> parameter 1 of argument 1 | true |
| System.Linq.Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>) | return (normal) of argument 1 -> return (normal) | true |
| System.Linq.Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Cast<TResult>(IEnumerable) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>) | element of argument 1 -> element of return (normal) | true |
| System.Linq.Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>) | element of argument 0 -> return (normal) | true |
| System.Linq.Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource) | argument 1 -> return (normal) | true |
| System.Linq.Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource) | element of argument 0 -> return (normal) | true |
| System.Linq.Enumerable.Distinct<TSource>(IEnumerable<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.ElementAt<TSource>(IEnumerable<TSource>, int) | element of argument 0 -> return (normal) | true |
| System.Linq.Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, int) | element of argument 0 -> return (normal) | true |
| System.Linq.Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>) | element of argument 0 -> return (normal) | true |
| System.Linq.Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>) | element of argument 0 -> return (normal) | true |
| System.Linq.Enumerable.First<TSource>(IEnumerable<TSource>) | element of argument 0 -> return (normal) | true |
| System.Linq.Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | element of argument 0 -> return (normal) | true |
| System.Linq.Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>) | element of argument 0 -> return (normal) | true |
| System.Linq.Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | element of argument 0 -> return (normal) | true |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>) | return (normal) of argument 1 -> parameter 0 of argument 2 | true |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>) | return (normal) of argument 2 -> element of parameter 1 of argument 3 | true |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>) | return (normal) of argument 3 -> element of return (normal) | true |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>) | return (normal) of argument 1 -> parameter 0 of argument 2 | true |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>) | return (normal) of argument 2 -> element of parameter 1 of argument 3 | true |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>) | return (normal) of argument 3 -> element of return (normal) | true |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | return (normal) of argument 2 -> element of return (normal) | true |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | return (normal) of argument 1 -> parameter 0 of argument 2 | true |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>) | argument 0 -> parameter 1 of argument 2 | true |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>) | return (normal) of argument 1 -> parameter 0 of argument 2 | true |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>) | return (normal) of argument 2 -> element of return (normal) | true |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>) | return (normal) of argument 1 -> parameter 0 of argument 2 | true |
| System.Linq.Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>) | element of argument 0 -> parameter 0 of argument 4 | true |
| System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>) | element of argument 1 -> parameter 0 of argument 3 | true |
| System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>) | element of argument 1 -> parameter 1 of argument 4 | true |
| System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>) | return (normal) of argument 4 -> element of return (normal) | true |
| System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 4 | true |
| System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>) | element of argument 1 -> parameter 0 of argument 3 | true |
| System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>) | element of argument 1 -> parameter 1 of argument 4 | true |
| System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>) | return (normal) of argument 4 -> element of return (normal) | true |
| System.Linq.Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>) | element of argument 1 -> element of return (normal) | true |
| System.Linq.Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>) | element of argument 1 -> element of return (normal) | true |
| System.Linq.Enumerable.Iterator<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>) | element of argument 0 -> parameter 0 of argument 4 | true |
| System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>) | element of argument 1 -> parameter 0 of argument 3 | true |
| System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>) | element of argument 1 -> parameter 1 of argument 4 | true |
| System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>) | return (normal) of argument 4 -> element of return (normal) | true |
| System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 4 | true |
| System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>) | element of argument 1 -> parameter 0 of argument 3 | true |
| System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>) | element of argument 1 -> parameter 1 of argument 4 | true |
| System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>) | return (normal) of argument 4 -> element of return (normal) | true |
| System.Linq.Enumerable.Last<TSource>(IEnumerable<TSource>) | element of argument 0 -> return (normal) | true |
| System.Linq.Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | element of argument 0 -> return (normal) | true |
| System.Linq.Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>) | element of argument 0 -> return (normal) | true |
| System.Linq.Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | element of argument 0 -> return (normal) | true |
| System.Linq.Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.OfType<TResult>(IEnumerable) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Reverse<TSource>(IEnumerable<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>) | return (normal) of argument 1 -> element of return (normal) | true |
| System.Linq.Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>) | return (normal) of argument 1 -> element of return (normal) | true |
| System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | element of return (normal) of argument 1 -> parameter 1 of argument 2 | true |
| System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | return (normal) of argument 2 -> element of return (normal) | true |
| System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | element of return (normal) of argument 1 -> parameter 1 of argument 2 | true |
| System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | return (normal) of argument 2 -> element of return (normal) | true |
| System.Linq.Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>) | return (normal) of argument 1 -> element of return (normal) | true |
| System.Linq.Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>) | return (normal) of argument 1 -> element of return (normal) | true |
| System.Linq.Enumerable.Single<TSource>(IEnumerable<TSource>) | element of argument 0 -> return (normal) | true |
| System.Linq.Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | element of argument 0 -> return (normal) | true |
| System.Linq.Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>) | element of argument 0 -> return (normal) | true |
| System.Linq.Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | element of argument 0 -> return (normal) | true |
| System.Linq.Enumerable.Skip<TSource>(IEnumerable<TSource>, int) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Take<TSource>(IEnumerable<TSource>, int) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.ThenBy<TSource, TKey>(IOrderedEnumerable<TSource>, Func<TSource, TKey>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.ThenBy<TSource, TKey>(IOrderedEnumerable<TSource>, Func<TSource, TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.ThenBy<TSource, TKey>(IOrderedEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.ThenBy<TSource, TKey>(IOrderedEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.ThenByDescending<TSource, TKey>(IOrderedEnumerable<TSource>, Func<TSource, TKey>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.ThenByDescending<TSource, TKey>(IOrderedEnumerable<TSource>, Func<TSource, TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.ThenByDescending<TSource, TKey>(IOrderedEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.ThenByDescending<TSource, TKey>(IOrderedEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.ToArray<TSource>(IEnumerable<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | return (normal) of argument 2 -> element of return (normal) | true |
| System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | return (normal) of argument 2 -> element of return (normal) | true |
| System.Linq.Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.ToList<TSource>(IEnumerable<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | return (normal) of argument 2 -> element of return (normal) | true |
| System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | return (normal) of argument 2 -> element of return (normal) | true |
| System.Linq.Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>) | element of argument 1 -> element of return (normal) | true |
| System.Linq.Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>) | element of argument 1 -> element of return (normal) | true |
| System.Linq.Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>) | element of argument 1 -> parameter 1 of argument 2 | true |
| System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>) | return (normal) of argument 2 -> element of return (normal) | true |
| System.Linq.EnumerableQuery<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Expressions.BlockExpressionList.Add(Expression) | argument 0 -> element of argument -1 | true |
| System.Linq.Expressions.BlockExpressionList.CopyTo(Expression[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Linq.Expressions.BlockExpressionList.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Expressions.BlockExpressionList.Insert(int, Expression) | argument 1 -> element of argument -1 | true |
| System.Linq.Expressions.BlockExpressionList.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.Linq.Expressions.BlockExpressionList.set_Item(int, Expression) | argument 1 -> element of argument -1 | true |
| System.Linq.Expressions.Compiler.CompilerScope.<GetVariablesIncludingMerged>d__32.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Expressions.Compiler.ParameterList.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Expressions.Interpreter.InterpretedFrame.<GetStackTraceDebugInfo>d__29.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.GroupedEnumerable<,,>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.GroupedEnumerable<,>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.GroupedResultEnumerable<,,,>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.GroupedResultEnumerable<,,>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Grouping<,>.Add(TElement) | argument 0 -> element of argument -1 | true |
| System.Linq.Grouping<,>.CopyTo(TElement[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Linq.Grouping<,>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Grouping<,>.Insert(int, TElement) | argument 1 -> element of argument -1 | true |
| System.Linq.Grouping<,>.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.Linq.Grouping<,>.set_Item(int, TElement) | argument 1 -> element of argument -1 | true |
| System.Linq.Lookup<,>.<ApplyResultSelector>d__19<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Lookup<,>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.OrderedEnumerable<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.OrderedEnumerable<>.GetEnumerator(int, int) | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.OrderedPartition<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Parallel.CancellableEnumerable.<Wrap>d__0<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Parallel.EnumerableWrapperWeakToStrong.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Parallel.ExceptionAggregator.<WrapEnumerable>d__0<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Parallel.ExceptionAggregator.<WrapQueryEnumerator>d__1<,>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Parallel.GroupByGrouping<,>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Parallel.ListChunk<>.Add(TInputOutput) | argument 0 -> element of argument -1 | true |
| System.Linq.Parallel.ListChunk<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Parallel.Lookup<,>.Add(IGrouping<TKey, TElement>) | argument 0 -> element of argument -1 | true |
| System.Linq.Parallel.Lookup<,>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Parallel.MergeExecutor<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Parallel.OrderedGroupByGrouping<,,>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Parallel.ParallelEnumerableWrapper.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Parallel.PartitionerQueryOperator<>.<AsSequentialQuery>d__5.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Parallel.QueryResults<>.Add(T) | argument 0 -> element of argument -1 | true |
| System.Linq.Parallel.QueryResults<>.CopyTo(T[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Linq.Parallel.QueryResults<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Parallel.QueryResults<>.Insert(int, T) | argument 1 -> element of argument -1 | true |
| System.Linq.Parallel.QueryResults<>.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.Linq.Parallel.QueryResults<>.set_Item(int, T) | argument 1 -> element of argument -1 | true |
| System.Linq.Parallel.RangeEnumerable.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Parallel.ZipQueryOperator<,,>.<AsSequentialQuery>d__9.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.ParallelEnumerable.Aggregate<TSource, TAccumulate, TResult>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>) | argument 1 -> parameter 0 of argument 2 | true |
| System.Linq.ParallelEnumerable.Aggregate<TSource, TAccumulate, TResult>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>) | element of argument 0 -> parameter 1 of argument 2 | true |
| System.Linq.ParallelEnumerable.Aggregate<TSource, TAccumulate, TResult>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>) | return (normal) of argument 2 -> parameter 0 of argument 3 | true |
| System.Linq.ParallelEnumerable.Aggregate<TSource, TAccumulate, TResult>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>) | return (normal) of argument 3 -> return (normal) | true |
| System.Linq.ParallelEnumerable.Aggregate<TSource, TAccumulate>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>) | argument 1 -> parameter 0 of argument 2 | true |
| System.Linq.ParallelEnumerable.Aggregate<TSource, TAccumulate>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>) | element of argument 0 -> parameter 1 of argument 2 | true |
| System.Linq.ParallelEnumerable.Aggregate<TSource, TAccumulate>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>) | return (normal) of argument 2 -> return (normal) | true |
| System.Linq.ParallelEnumerable.Aggregate<TSource, TAccumulate>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, QueryAggregationOptions) | argument 1 -> parameter 0 of argument 2 | true |
| System.Linq.ParallelEnumerable.Aggregate<TSource, TAccumulate>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, QueryAggregationOptions) | element of argument 0 -> parameter 1 of argument 2 | true |
| System.Linq.ParallelEnumerable.Aggregate<TSource, TAccumulate>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, QueryAggregationOptions) | return (normal) of argument 3 -> return (normal) | true |
| System.Linq.ParallelEnumerable.Aggregate<TSource>(ParallelQuery<TSource>, Func<TSource, TSource, TSource>) | element of argument 0 -> parameter 1 of argument 1 | true |
| System.Linq.ParallelEnumerable.Aggregate<TSource>(ParallelQuery<TSource>, Func<TSource, TSource, TSource>) | return (normal) of argument 1 -> return (normal) | true |
| System.Linq.ParallelEnumerable.Aggregate<TSource>(ParallelQuery<TSource>, Func<TSource, TSource, TSource>, QueryAggregationOptions) | return (normal) of argument 2 -> return (normal) | true |
| System.Linq.ParallelEnumerable.All<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Any<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.AsEnumerable<TSource>(ParallelQuery<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource, Decimal>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource, Double>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource, Int32>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource, Int64>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Decimal>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Double>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Int32>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Int64>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Single>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource, Single>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Cast<TResult>(ParallelQuery) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Concat<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Concat<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>) | element of argument 1 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Concat<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Concat<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>) | element of argument 1 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Count<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.DefaultIfEmpty<TSource>(ParallelQuery<TSource>) | element of argument 0 -> return (normal) | true |
| System.Linq.ParallelEnumerable.DefaultIfEmpty<TSource>(ParallelQuery<TSource>, TSource) | argument 1 -> return (normal) | true |
| System.Linq.ParallelEnumerable.DefaultIfEmpty<TSource>(ParallelQuery<TSource>, TSource) | element of argument 0 -> return (normal) | true |
| System.Linq.ParallelEnumerable.Distinct<TSource>(ParallelQuery<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Distinct<TSource>(ParallelQuery<TSource>, IEqualityComparer<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.ElementAt<TSource>(ParallelQuery<TSource>, int) | element of argument 0 -> return (normal) | true |
| System.Linq.ParallelEnumerable.ElementAtOrDefault<TSource>(ParallelQuery<TSource>, int) | element of argument 0 -> return (normal) | true |
| System.Linq.ParallelEnumerable.Except<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>) | element of argument 0 -> return (normal) | true |
| System.Linq.ParallelEnumerable.Except<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>) | element of argument 0 -> return (normal) | true |
| System.Linq.ParallelEnumerable.Except<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>) | element of argument 0 -> return (normal) | true |
| System.Linq.ParallelEnumerable.Except<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>) | element of argument 0 -> return (normal) | true |
| System.Linq.ParallelEnumerable.First<TSource>(ParallelQuery<TSource>) | element of argument 0 -> return (normal) | true |
| System.Linq.ParallelEnumerable.First<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.First<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | element of argument 0 -> return (normal) | true |
| System.Linq.ParallelEnumerable.FirstOrDefault<TSource>(ParallelQuery<TSource>) | element of argument 0 -> return (normal) | true |
| System.Linq.ParallelEnumerable.FirstOrDefault<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.FirstOrDefault<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | element of argument 0 -> return (normal) | true |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>) | return (normal) of argument 1 -> parameter 0 of argument 2 | true |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>) | return (normal) of argument 2 -> element of parameter 1 of argument 3 | true |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>) | return (normal) of argument 3 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>) | return (normal) of argument 1 -> parameter 0 of argument 2 | true |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>) | return (normal) of argument 2 -> element of parameter 1 of argument 3 | true |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>) | return (normal) of argument 3 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | return (normal) of argument 2 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | return (normal) of argument 1 -> parameter 0 of argument 2 | true |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>) | argument 0 -> parameter 1 of argument 2 | true |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>) | return (normal) of argument 1 -> parameter 0 of argument 2 | true |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>) | return (normal) of argument 2 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>) | return (normal) of argument 1 -> parameter 0 of argument 2 | true |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>) | element of argument 0 -> parameter 0 of argument 4 | true |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>) | element of argument 1 -> parameter 0 of argument 3 | true |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>) | element of argument 1 -> parameter 1 of argument 4 | true |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>) | return (normal) of argument 4 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 4 | true |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>) | element of argument 1 -> parameter 0 of argument 3 | true |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>) | element of argument 1 -> parameter 1 of argument 4 | true |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>) | return (normal) of argument 4 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>) | element of argument 0 -> parameter 0 of argument 4 | true |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>) | element of argument 1 -> parameter 0 of argument 3 | true |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>) | element of argument 1 -> parameter 1 of argument 4 | true |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>) | return (normal) of argument 4 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 4 | true |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>) | element of argument 1 -> parameter 0 of argument 3 | true |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>) | element of argument 1 -> parameter 1 of argument 4 | true |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>) | return (normal) of argument 4 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>) | element of argument 1 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>) | element of argument 1 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>) | element of argument 1 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>) | element of argument 1 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>) | element of argument 0 -> parameter 0 of argument 4 | true |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>) | element of argument 1 -> parameter 0 of argument 3 | true |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>) | element of argument 1 -> parameter 1 of argument 4 | true |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>) | return (normal) of argument 4 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 4 | true |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>) | element of argument 1 -> parameter 0 of argument 3 | true |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>) | element of argument 1 -> parameter 1 of argument 4 | true |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>) | return (normal) of argument 4 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>) | element of argument 0 -> parameter 0 of argument 4 | true |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>) | element of argument 1 -> parameter 0 of argument 3 | true |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>) | element of argument 1 -> parameter 1 of argument 4 | true |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>) | return (normal) of argument 4 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 4 | true |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>) | element of argument 1 -> parameter 0 of argument 3 | true |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>) | element of argument 1 -> parameter 1 of argument 4 | true |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>) | return (normal) of argument 4 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Last<TSource>(ParallelQuery<TSource>) | element of argument 0 -> return (normal) | true |
| System.Linq.ParallelEnumerable.Last<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Last<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | element of argument 0 -> return (normal) | true |
| System.Linq.ParallelEnumerable.LastOrDefault<TSource>(ParallelQuery<TSource>) | element of argument 0 -> return (normal) | true |
| System.Linq.ParallelEnumerable.LastOrDefault<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.LastOrDefault<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | element of argument 0 -> return (normal) | true |
| System.Linq.ParallelEnumerable.LongCount<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Max<TSource, TResult>(ParallelQuery<TSource>, Func<TSource, TResult>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource, Decimal>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource, Double>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource, Int32>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource, Int64>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Decimal>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Double>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Int32>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Int64>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Single>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource, Single>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Min<TSource, TResult>(ParallelQuery<TSource>, Func<TSource, TResult>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource, Decimal>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource, Double>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource, Int32>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource, Int64>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Decimal>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Double>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Int32>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Int64>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Single>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource, Single>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.OfType<TResult>(ParallelQuery) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.OrderBy<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.OrderBy<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.OrderBy<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>, IComparer<TKey>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.OrderBy<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>, IComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.OrderByDescending<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.OrderByDescending<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.OrderByDescending<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>, IComparer<TKey>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.OrderByDescending<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>, IComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Reverse<TSource>(ParallelQuery<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Select<TSource, TResult>(ParallelQuery<TSource>, Func<TSource, Int32, TResult>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Select<TSource, TResult>(ParallelQuery<TSource>, Func<TSource, Int32, TResult>) | return (normal) of argument 1 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Select<TSource, TResult>(ParallelQuery<TSource>, Func<TSource, TResult>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Select<TSource, TResult>(ParallelQuery<TSource>, Func<TSource, TResult>) | return (normal) of argument 1 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.SelectMany<TSource, TCollection, TResult>(ParallelQuery<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.SelectMany<TSource, TCollection, TResult>(ParallelQuery<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.ParallelEnumerable.SelectMany<TSource, TCollection, TResult>(ParallelQuery<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | element of return (normal) of argument 1 -> parameter 1 of argument 2 | true |
| System.Linq.ParallelEnumerable.SelectMany<TSource, TCollection, TResult>(ParallelQuery<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | return (normal) of argument 2 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.SelectMany<TSource, TCollection, TResult>(ParallelQuery<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.SelectMany<TSource, TCollection, TResult>(ParallelQuery<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.ParallelEnumerable.SelectMany<TSource, TCollection, TResult>(ParallelQuery<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | element of return (normal) of argument 1 -> parameter 1 of argument 2 | true |
| System.Linq.ParallelEnumerable.SelectMany<TSource, TCollection, TResult>(ParallelQuery<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | return (normal) of argument 2 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.SelectMany<TSource, TResult>(ParallelQuery<TSource>, Func<TSource, IEnumerable<TResult>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.SelectMany<TSource, TResult>(ParallelQuery<TSource>, Func<TSource, IEnumerable<TResult>>) | return (normal) of argument 1 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.SelectMany<TSource, TResult>(ParallelQuery<TSource>, Func<TSource, Int32, IEnumerable<TResult>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.SelectMany<TSource, TResult>(ParallelQuery<TSource>, Func<TSource, Int32, IEnumerable<TResult>>) | return (normal) of argument 1 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Single<TSource>(ParallelQuery<TSource>) | element of argument 0 -> return (normal) | true |
| System.Linq.ParallelEnumerable.Single<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Single<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | element of argument 0 -> return (normal) | true |
| System.Linq.ParallelEnumerable.SingleOrDefault<TSource>(ParallelQuery<TSource>) | element of argument 0 -> return (normal) | true |
| System.Linq.ParallelEnumerable.SingleOrDefault<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.SingleOrDefault<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | element of argument 0 -> return (normal) | true |
| System.Linq.ParallelEnumerable.Skip<TSource>(ParallelQuery<TSource>, int) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.SkipWhile<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.SkipWhile<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.SkipWhile<TSource>(ParallelQuery<TSource>, Func<TSource, Int32, Boolean>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.SkipWhile<TSource>(ParallelQuery<TSource>, Func<TSource, Int32, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource, Decimal>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource, Double>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource, Int32>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource, Int64>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Decimal>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Double>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Int32>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Int64>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Single>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource, Single>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Take<TSource>(ParallelQuery<TSource>, int) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.TakeWhile<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.TakeWhile<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.TakeWhile<TSource>(ParallelQuery<TSource>, Func<TSource, Int32, Boolean>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.TakeWhile<TSource>(ParallelQuery<TSource>, Func<TSource, Int32, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.ThenBy<TSource, TKey>(OrderedParallelQuery<TSource>, Func<TSource, TKey>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.ThenBy<TSource, TKey>(OrderedParallelQuery<TSource>, Func<TSource, TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.ThenBy<TSource, TKey>(OrderedParallelQuery<TSource>, Func<TSource, TKey>, IComparer<TKey>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.ThenBy<TSource, TKey>(OrderedParallelQuery<TSource>, Func<TSource, TKey>, IComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.ThenByDescending<TSource, TKey>(OrderedParallelQuery<TSource>, Func<TSource, TKey>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.ThenByDescending<TSource, TKey>(OrderedParallelQuery<TSource>, Func<TSource, TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.ThenByDescending<TSource, TKey>(OrderedParallelQuery<TSource>, Func<TSource, TKey>, IComparer<TKey>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.ThenByDescending<TSource, TKey>(OrderedParallelQuery<TSource>, Func<TSource, TKey>, IComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.ToArray<TSource>(ParallelQuery<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.ToDictionary<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.ToDictionary<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.ParallelEnumerable.ToDictionary<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | return (normal) of argument 2 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.ToDictionary<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.ToDictionary<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.ParallelEnumerable.ToDictionary<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | return (normal) of argument 2 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.ToDictionary<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.ToDictionary<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.ToDictionary<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.ToDictionary<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.ToList<TSource>(ParallelQuery<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.ToLookup<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.ToLookup<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.ParallelEnumerable.ToLookup<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | return (normal) of argument 2 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.ToLookup<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.ToLookup<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.ParallelEnumerable.ToLookup<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | return (normal) of argument 2 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.ToLookup<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.ToLookup<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.ToLookup<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.ToLookup<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>) | element of argument 1 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>) | element of argument 1 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>) | element of argument 1 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>) | element of argument 1 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Where<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Where<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Where<TSource>(ParallelQuery<TSource>, Func<TSource, Int32, Boolean>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Where<TSource>(ParallelQuery<TSource>, Func<TSource, Int32, Boolean>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.ParallelEnumerable.Zip<TFirst, TSecond, TResult>(ParallelQuery<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.ParallelEnumerable.Zip<TFirst, TSecond, TResult>(ParallelQuery<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>) | element of argument 1 -> parameter 1 of argument 2 | true |
| System.Linq.ParallelEnumerable.Zip<TFirst, TSecond, TResult>(ParallelQuery<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>) | return (normal) of argument 2 -> element of return (normal) | true |
| System.Linq.ParallelEnumerable.Zip<TFirst, TSecond, TResult>(ParallelQuery<TFirst>, ParallelQuery<TSecond>, Func<TFirst, TSecond, TResult>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.ParallelEnumerable.Zip<TFirst, TSecond, TResult>(ParallelQuery<TFirst>, ParallelQuery<TSecond>, Func<TFirst, TSecond, TResult>) | element of argument 1 -> parameter 1 of argument 2 | true |
| System.Linq.ParallelEnumerable.Zip<TFirst, TSecond, TResult>(ParallelQuery<TFirst>, ParallelQuery<TSecond>, Func<TFirst, TSecond, TResult>) | return (normal) of argument 2 -> element of return (normal) | true |
| System.Linq.ParallelQuery.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Linq.Queryable.Aggregate<TSource, TAccumulate, TResult>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>, Expression<Func<TAccumulate,TResult>>) | argument 1 -> parameter 0 of argument 2 | true |
| System.Linq.Queryable.Aggregate<TSource, TAccumulate, TResult>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>, Expression<Func<TAccumulate,TResult>>) | element of argument 0 -> parameter 1 of argument 2 | true |
| System.Linq.Queryable.Aggregate<TSource, TAccumulate, TResult>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>, Expression<Func<TAccumulate,TResult>>) | return (normal) of argument 2 -> parameter 0 of argument 3 | true |
| System.Linq.Queryable.Aggregate<TSource, TAccumulate, TResult>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>, Expression<Func<TAccumulate,TResult>>) | return (normal) of argument 3 -> return (normal) | true |
| System.Linq.Queryable.Aggregate<TSource, TAccumulate>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>) | argument 1 -> parameter 0 of argument 2 | true |
| System.Linq.Queryable.Aggregate<TSource, TAccumulate>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>) | element of argument 0 -> parameter 1 of argument 2 | true |
| System.Linq.Queryable.Aggregate<TSource, TAccumulate>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>) | return (normal) of argument 2 -> return (normal) | true |
| System.Linq.Queryable.Aggregate<TSource>(IQueryable<TSource>, Expression<Func<TSource,TSource,TSource>>) | element of argument 0 -> parameter 1 of argument 1 | true |
| System.Linq.Queryable.Aggregate<TSource>(IQueryable<TSource>, Expression<Func<TSource,TSource,TSource>>) | return (normal) of argument 1 -> return (normal) | true |
| System.Linq.Queryable.All<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Any<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.AsQueryable(IEnumerable) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Queryable.AsQueryable<TElement>(IEnumerable<TElement>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Decimal>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Double>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int64>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Decimal>>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Double>>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int32>>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int64>>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Single>>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Single>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Cast<TResult>(IQueryable) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Queryable.Concat<TSource>(IQueryable<TSource>, IEnumerable<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Queryable.Concat<TSource>(IQueryable<TSource>, IEnumerable<TSource>) | element of argument 1 -> element of return (normal) | true |
| System.Linq.Queryable.Count<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.DefaultIfEmpty<TSource>(IQueryable<TSource>) | element of argument 0 -> return (normal) | true |
| System.Linq.Queryable.DefaultIfEmpty<TSource>(IQueryable<TSource>, TSource) | argument 1 -> return (normal) | true |
| System.Linq.Queryable.DefaultIfEmpty<TSource>(IQueryable<TSource>, TSource) | element of argument 0 -> return (normal) | true |
| System.Linq.Queryable.Distinct<TSource>(IQueryable<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Queryable.Distinct<TSource>(IQueryable<TSource>, IEqualityComparer<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Queryable.ElementAt<TSource>(IQueryable<TSource>, int) | element of argument 0 -> return (normal) | true |
| System.Linq.Queryable.ElementAtOrDefault<TSource>(IQueryable<TSource>, int) | element of argument 0 -> return (normal) | true |
| System.Linq.Queryable.Except<TSource>(IQueryable<TSource>, IEnumerable<TSource>) | element of argument 0 -> return (normal) | true |
| System.Linq.Queryable.Except<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>) | element of argument 0 -> return (normal) | true |
| System.Linq.Queryable.First<TSource>(IQueryable<TSource>) | element of argument 0 -> return (normal) | true |
| System.Linq.Queryable.First<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.First<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | element of argument 0 -> return (normal) | true |
| System.Linq.Queryable.FirstOrDefault<TSource>(IQueryable<TSource>) | element of argument 0 -> return (normal) | true |
| System.Linq.Queryable.FirstOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.FirstOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | element of argument 0 -> return (normal) | true |
| System.Linq.Queryable.GroupBy<TSource, TKey, TElement, TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.GroupBy<TSource, TKey, TElement, TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.Queryable.GroupBy<TSource, TKey, TElement, TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>) | return (normal) of argument 1 -> parameter 0 of argument 2 | true |
| System.Linq.Queryable.GroupBy<TSource, TKey, TElement, TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>) | return (normal) of argument 2 -> element of parameter 1 of argument 3 | true |
| System.Linq.Queryable.GroupBy<TSource, TKey, TElement, TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>) | return (normal) of argument 3 -> element of return (normal) | true |
| System.Linq.Queryable.GroupBy<TSource, TKey, TElement, TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.GroupBy<TSource, TKey, TElement, TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.Queryable.GroupBy<TSource, TKey, TElement, TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>, IEqualityComparer<TKey>) | return (normal) of argument 1 -> parameter 0 of argument 2 | true |
| System.Linq.Queryable.GroupBy<TSource, TKey, TElement, TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>, IEqualityComparer<TKey>) | return (normal) of argument 2 -> element of parameter 1 of argument 3 | true |
| System.Linq.Queryable.GroupBy<TSource, TKey, TElement, TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>, IEqualityComparer<TKey>) | return (normal) of argument 3 -> element of return (normal) | true |
| System.Linq.Queryable.GroupBy<TSource, TKey, TElement>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.GroupBy<TSource, TKey, TElement>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>) | return (normal) of argument 2 -> element of return (normal) | true |
| System.Linq.Queryable.GroupBy<TSource, TKey, TElement>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.GroupBy<TSource, TKey, TElement>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.Queryable.GroupBy<TSource, TKey, TElement>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, IEqualityComparer<TKey>) | return (normal) of argument 1 -> parameter 0 of argument 2 | true |
| System.Linq.Queryable.GroupBy<TSource, TKey, TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TKey,IEnumerable<TSource>,TResult>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.GroupBy<TSource, TKey, TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TKey,IEnumerable<TSource>,TResult>>) | return (normal) of argument 2 -> element of return (normal) | true |
| System.Linq.Queryable.GroupBy<TSource, TKey, TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TKey,IEnumerable<TSource>,TResult>>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.GroupBy<TSource, TKey, TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TKey,IEnumerable<TSource>,TResult>>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.Queryable.GroupBy<TSource, TKey, TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TKey,IEnumerable<TSource>,TResult>>, IEqualityComparer<TKey>) | return (normal) of argument 1 -> parameter 0 of argument 2 | true |
| System.Linq.Queryable.GroupBy<TSource, TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.GroupBy<TSource, TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.GroupJoin<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.Queryable.GroupJoin<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>) | element of argument 0 -> parameter 0 of argument 4 | true |
| System.Linq.Queryable.GroupJoin<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>) | element of argument 1 -> parameter 0 of argument 3 | true |
| System.Linq.Queryable.GroupJoin<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>) | element of argument 1 -> parameter 1 of argument 4 | true |
| System.Linq.Queryable.GroupJoin<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>) | return (normal) of argument 4 -> element of return (normal) | true |
| System.Linq.Queryable.GroupJoin<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.Queryable.GroupJoin<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 4 | true |
| System.Linq.Queryable.GroupJoin<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>, IEqualityComparer<TKey>) | element of argument 1 -> parameter 0 of argument 3 | true |
| System.Linq.Queryable.GroupJoin<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>, IEqualityComparer<TKey>) | element of argument 1 -> parameter 1 of argument 4 | true |
| System.Linq.Queryable.GroupJoin<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>, IEqualityComparer<TKey>) | return (normal) of argument 4 -> element of return (normal) | true |
| System.Linq.Queryable.Intersect<TSource>(IQueryable<TSource>, IEnumerable<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Queryable.Intersect<TSource>(IQueryable<TSource>, IEnumerable<TSource>) | element of argument 1 -> element of return (normal) | true |
| System.Linq.Queryable.Intersect<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Queryable.Intersect<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>) | element of argument 1 -> element of return (normal) | true |
| System.Linq.Queryable.Join<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.Queryable.Join<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>) | element of argument 0 -> parameter 0 of argument 4 | true |
| System.Linq.Queryable.Join<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>) | element of argument 1 -> parameter 0 of argument 3 | true |
| System.Linq.Queryable.Join<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>) | element of argument 1 -> parameter 1 of argument 4 | true |
| System.Linq.Queryable.Join<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>) | return (normal) of argument 4 -> element of return (normal) | true |
| System.Linq.Queryable.Join<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.Queryable.Join<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>, IEqualityComparer<TKey>) | element of argument 0 -> parameter 0 of argument 4 | true |
| System.Linq.Queryable.Join<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>, IEqualityComparer<TKey>) | element of argument 1 -> parameter 0 of argument 3 | true |
| System.Linq.Queryable.Join<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>, IEqualityComparer<TKey>) | element of argument 1 -> parameter 1 of argument 4 | true |
| System.Linq.Queryable.Join<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>, IEqualityComparer<TKey>) | return (normal) of argument 4 -> element of return (normal) | true |
| System.Linq.Queryable.Last<TSource>(IQueryable<TSource>) | element of argument 0 -> return (normal) | true |
| System.Linq.Queryable.Last<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Last<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | element of argument 0 -> return (normal) | true |
| System.Linq.Queryable.LastOrDefault<TSource>(IQueryable<TSource>) | element of argument 0 -> return (normal) | true |
| System.Linq.Queryable.LastOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.LastOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | element of argument 0 -> return (normal) | true |
| System.Linq.Queryable.LongCount<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Max<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Min<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.OfType<TResult>(IQueryable) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Queryable.OrderBy<TSource, TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Queryable.OrderBy<TSource, TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.OrderBy<TSource, TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Queryable.OrderBy<TSource, TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.OrderByDescending<TSource, TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Queryable.OrderByDescending<TSource, TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.OrderByDescending<TSource, TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Queryable.OrderByDescending<TSource, TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Reverse<TSource>(IQueryable<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Queryable.Select<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,TResult>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Select<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,TResult>>) | return (normal) of argument 1 -> element of return (normal) | true |
| System.Linq.Queryable.Select<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Select<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>) | return (normal) of argument 1 -> element of return (normal) | true |
| System.Linq.Queryable.SelectMany<TSource, TCollection, TResult>(IQueryable<TSource>, Expression<Func<TSource,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.SelectMany<TSource, TCollection, TResult>(IQueryable<TSource>, Expression<Func<TSource,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.Queryable.SelectMany<TSource, TCollection, TResult>(IQueryable<TSource>, Expression<Func<TSource,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>) | element of return (normal) of argument 1 -> parameter 1 of argument 2 | true |
| System.Linq.Queryable.SelectMany<TSource, TCollection, TResult>(IQueryable<TSource>, Expression<Func<TSource,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>) | return (normal) of argument 2 -> element of return (normal) | true |
| System.Linq.Queryable.SelectMany<TSource, TCollection, TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.SelectMany<TSource, TCollection, TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.Queryable.SelectMany<TSource, TCollection, TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>) | element of return (normal) of argument 1 -> parameter 1 of argument 2 | true |
| System.Linq.Queryable.SelectMany<TSource, TCollection, TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>) | return (normal) of argument 2 -> element of return (normal) | true |
| System.Linq.Queryable.SelectMany<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource,IEnumerable<TResult>>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.SelectMany<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource,IEnumerable<TResult>>>) | return (normal) of argument 1 -> element of return (normal) | true |
| System.Linq.Queryable.SelectMany<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,IEnumerable<TResult>>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.SelectMany<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,IEnumerable<TResult>>>) | return (normal) of argument 1 -> element of return (normal) | true |
| System.Linq.Queryable.Single<TSource>(IQueryable<TSource>) | element of argument 0 -> return (normal) | true |
| System.Linq.Queryable.Single<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Single<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | element of argument 0 -> return (normal) | true |
| System.Linq.Queryable.SingleOrDefault<TSource>(IQueryable<TSource>) | element of argument 0 -> return (normal) | true |
| System.Linq.Queryable.SingleOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.SingleOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | element of argument 0 -> return (normal) | true |
| System.Linq.Queryable.Skip<TSource>(IQueryable<TSource>, int) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Queryable.SkipWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Queryable.SkipWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.SkipWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Queryable.SkipWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Decimal>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Double>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int64>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Decimal>>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Double>>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int32>>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int64>>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Single>>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Single>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Take<TSource>(IQueryable<TSource>, int) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Queryable.TakeWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Queryable.TakeWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.TakeWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Queryable.TakeWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.ThenBy<TSource, TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Queryable.ThenBy<TSource, TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.ThenBy<TSource, TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Queryable.ThenBy<TSource, TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.ThenByDescending<TSource, TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Queryable.ThenByDescending<TSource, TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.ThenByDescending<TSource, TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Queryable.ThenByDescending<TSource, TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Union<TSource>(IQueryable<TSource>, IEnumerable<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Queryable.Union<TSource>(IQueryable<TSource>, IEnumerable<TSource>) | element of argument 1 -> element of return (normal) | true |
| System.Linq.Queryable.Union<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Queryable.Union<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>) | element of argument 1 -> element of return (normal) | true |
| System.Linq.Queryable.Where<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Queryable.Where<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Where<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>) | element of argument 0 -> element of return (normal) | true |
| System.Linq.Queryable.Where<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>) | element of argument 0 -> parameter 0 of argument 1 | true |
| System.Linq.Queryable.Zip<TFirst, TSecond, TResult>(IQueryable<TFirst>, IEnumerable<TSecond>, Expression<Func<TFirst,TSecond,TResult>>) | element of argument 0 -> parameter 0 of argument 2 | true |
| System.Linq.Queryable.Zip<TFirst, TSecond, TResult>(IQueryable<TFirst>, IEnumerable<TSecond>, Expression<Func<TFirst,TSecond,TResult>>) | element of argument 1 -> parameter 1 of argument 2 | true |
| System.Linq.Queryable.Zip<TFirst, TSecond, TResult>(IQueryable<TFirst>, IEnumerable<TSecond>, Expression<Func<TFirst,TSecond,TResult>>) | return (normal) of argument 2 -> element of return (normal) | true |
| System.Net.Cookie.get_Value() | argument -1 -> return (normal) | false |
| System.Net.CookieCollection.Add(Cookie) | argument 0 -> element of argument -1 | true |
| System.Net.CookieCollection.Add(CookieCollection) | argument 0 -> element of argument -1 | true |
| System.Net.CookieCollection.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Net.CookieCollection.CopyTo(Cookie[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Net.CookieCollection.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Net.CredentialCache.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Net.HttpListenerPrefixCollection.Add(string) | argument 0 -> element of argument -1 | true |
| System.Net.HttpListenerPrefixCollection.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Net.HttpListenerPrefixCollection.CopyTo(String[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Net.HttpListenerPrefixCollection.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Net.HttpRequestStream.BeginRead(Byte[], int, int, AsyncCallback, object) | argument -1 -> return (out parameter 0) | false |
| System.Net.HttpRequestStream.BeginWrite(Byte[], int, int, AsyncCallback, object) | argument 0 -> argument -1 | false |
| System.Net.HttpRequestStream.Read(Byte[], int, int) | argument -1 -> return (out parameter 0) | false |
| System.Net.HttpRequestStream.Write(Byte[], int, int) | argument 0 -> argument -1 | false |
| System.Net.HttpResponseStream.BeginRead(Byte[], int, int, AsyncCallback, object) | argument -1 -> return (out parameter 0) | false |
| System.Net.HttpResponseStream.BeginWrite(Byte[], int, int, AsyncCallback, object) | argument 0 -> argument -1 | false |
| System.Net.HttpResponseStream.Read(Byte[], int, int) | argument -1 -> return (out parameter 0) | false |
| System.Net.HttpResponseStream.Write(Byte[], int, int) | argument 0 -> argument -1 | false |
| System.Net.NetworkInformation.IPAddressCollection.Add(IPAddress) | argument 0 -> element of argument -1 | true |
| System.Net.NetworkInformation.IPAddressCollection.CopyTo(IPAddress[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Net.NetworkInformation.IPAddressCollection.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Net.Security.CipherSuitesPolicy.<get_AllowedCipherSuites>d__6.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Net.Security.NegotiateStream.BeginRead(Byte[], int, int, AsyncCallback, object) | argument -1 -> return (out parameter 0) | false |
| System.Net.Security.NegotiateStream.BeginWrite(Byte[], int, int, AsyncCallback, object) | argument 0 -> argument -1 | false |
| System.Net.Security.NegotiateStream.Read(Byte[], int, int) | argument -1 -> return (out parameter 0) | false |
| System.Net.Security.NegotiateStream.ReadAsync(Byte[], int, int, CancellationToken) | argument -1 -> return (out parameter 0) | false |
| System.Net.Security.NegotiateStream.Write(Byte[], int, int) | argument 0 -> argument -1 | false |
| System.Net.Security.NegotiateStream.WriteAsync(Byte[], int, int, CancellationToken) | argument 0 -> argument -1 | false |
| System.Net.Security.SslStream.BeginRead(Byte[], int, int, AsyncCallback, object) | argument -1 -> return (out parameter 0) | false |
| System.Net.Security.SslStream.BeginWrite(Byte[], int, int, AsyncCallback, object) | argument 0 -> argument -1 | false |
| System.Net.Security.SslStream.Read(Byte[], int, int) | argument -1 -> return (out parameter 0) | false |
| System.Net.Security.SslStream.ReadAsync(Byte[], int, int, CancellationToken) | argument -1 -> return (out parameter 0) | false |
| System.Net.Security.SslStream.Write(Byte[], int, int) | argument 0 -> argument -1 | false |
| System.Net.Security.SslStream.WriteAsync(Byte[], int, int, CancellationToken) | argument 0 -> argument -1 | false |
| System.Net.WebUtility.HtmlEncode(ReadOnlySpan<Char>, ref ValueStringBuilder) | argument 0 -> return (normal) | false |
| System.Net.WebUtility.HtmlEncode(string) | argument 0 -> return (normal) | false |
| System.Net.WebUtility.HtmlEncode(string, TextWriter) | argument 0 -> return (normal) | false |
| System.Net.WebUtility.UrlEncode(string) | argument 0 -> return (normal) | false |
| System.Nullable<>.GetValueOrDefault() | property Value of argument -1 -> return (normal) | true |
| System.Nullable<>.GetValueOrDefault(T) | argument 0 -> return (normal) | true |
| System.Nullable<>.GetValueOrDefault(T) | property Value of argument -1 -> return (normal) | true |
| System.Nullable<>.Nullable(T) | argument 0 -> property Value of return (normal) | true |
| System.Nullable<>.get_HasValue() | property Value of argument -1 -> return (normal) | false |
| System.Nullable<>.get_Value() | argument -1 -> return (normal) | false |
| System.Reflection.TypeInfo.<GetDeclaredMethods>d__10.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Reflection.TypeInfo.<get_DeclaredNestedTypes>d__22.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Resources.ResourceFallbackManager.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Resources.ResourceReader.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Resources.ResourceSet.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Resources.RuntimeResourceSet.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Runtime.CompilerServices.ConditionalWeakTable<,>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Runtime.CompilerServices.ConfiguredTaskAwaitable<>.ConfiguredTaskAwaiter.GetResult() | property Result of field m_task of argument -1 -> return (normal) | true |
| System.Runtime.CompilerServices.ConfiguredTaskAwaitable<>.GetAwaiter() | field m_configuredTaskAwaiter of argument -1 -> return (normal) | true |
| System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<>.Add(T) | argument 0 -> element of argument -1 | true |
| System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<>.Add(object) | argument 0 -> element of argument -1 | true |
| System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<>.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<>.CopyTo(T[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<>.Insert(int, T) | argument 1 -> element of argument -1 | true |
| System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<>.Insert(int, object) | argument 1 -> element of argument -1 | true |
| System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<>.Reverse() | element of argument 0 -> element of return (normal) | true |
| System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<>.Reverse(int, int) | element of argument 0 -> element of return (normal) | true |
| System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<>.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<>.set_Item(int, T) | argument 1 -> element of argument -1 | true |
| System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<>.set_Item(int, object) | argument 1 -> element of argument -1 | true |
| System.Runtime.CompilerServices.TaskAwaiter<>.GetResult() | property Result of field m_task of argument -1 -> return (normal) | true |
| System.Runtime.InteropServices.MemoryMarshal.<ToEnumerable>d__15<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Runtime.Loader.AssemblyLoadContext.<get_All>d__83.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Runtime.Loader.AssemblyLoadContext.<get_Assemblies>d__53.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Runtime.Loader.LibraryNameVariation.<DetermineLibraryNameVariations>d__5.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Security.Cryptography.CryptoStream.BeginRead(Byte[], int, int, AsyncCallback, object) | argument -1 -> return (out parameter 0) | false |
| System.Security.Cryptography.CryptoStream.BeginWrite(Byte[], int, int, AsyncCallback, object) | argument 0 -> argument -1 | false |
| System.Security.Cryptography.CryptoStream.Read(Byte[], int, int) | argument -1 -> return (out parameter 0) | false |
| System.Security.Cryptography.CryptoStream.ReadAsync(Byte[], int, int, CancellationToken) | argument -1 -> return (out parameter 0) | false |
| System.Security.Cryptography.CryptoStream.Write(Byte[], int, int) | argument 0 -> argument -1 | false |
| System.Security.Cryptography.CryptoStream.WriteAsync(Byte[], int, int, CancellationToken) | argument 0 -> argument -1 | false |
| System.Security.PermissionSet.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Security.PermissionSet.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.String.Clone() | argument -1 -> return (normal) | true |
| System.String.Concat(IEnumerable<String>) | element of argument 0 -> return (normal) | false |
| System.String.Concat(ReadOnlySpan<Char>, ReadOnlySpan<Char>) | argument 0 -> return (normal) | false |
| System.String.Concat(ReadOnlySpan<Char>, ReadOnlySpan<Char>) | argument 1 -> return (normal) | false |
| System.String.Concat(ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>) | argument 0 -> return (normal) | false |
| System.String.Concat(ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>) | argument 1 -> return (normal) | false |
| System.String.Concat(ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>) | argument 2 -> return (normal) | false |
| System.String.Concat(ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>) | argument 0 -> return (normal) | false |
| System.String.Concat(ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>) | argument 1 -> return (normal) | false |
| System.String.Concat(ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>) | argument 2 -> return (normal) | false |
| System.String.Concat(ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>) | argument 3 -> return (normal) | false |
| System.String.Concat(object) | argument 0 -> return (normal) | false |
| System.String.Concat(object, object) | argument 0 -> return (normal) | false |
| System.String.Concat(object, object) | argument 1 -> return (normal) | false |
| System.String.Concat(object, object, object) | argument 0 -> return (normal) | false |
| System.String.Concat(object, object, object) | argument 1 -> return (normal) | false |
| System.String.Concat(object, object, object) | argument 2 -> return (normal) | false |
| System.String.Concat(params Object[]) | element of argument 0 -> return (normal) | false |
| System.String.Concat(params String[]) | element of argument 0 -> return (normal) | false |
| System.String.Concat(string, string) | argument 0 -> return (normal) | false |
| System.String.Concat(string, string) | argument 1 -> return (normal) | false |
| System.String.Concat(string, string, string) | argument 0 -> return (normal) | false |
| System.String.Concat(string, string, string) | argument 1 -> return (normal) | false |
| System.String.Concat(string, string, string) | argument 2 -> return (normal) | false |
| System.String.Concat(string, string, string, string) | argument 0 -> return (normal) | false |
| System.String.Concat(string, string, string, string) | argument 1 -> return (normal) | false |
| System.String.Concat(string, string, string, string) | argument 2 -> return (normal) | false |
| System.String.Concat(string, string, string, string) | argument 3 -> return (normal) | false |
| System.String.Concat<T>(IEnumerable<T>) | element of argument 0 -> return (normal) | false |
| System.String.Copy(string) | argument 0 -> return (normal) | true |
| System.String.Format(IFormatProvider, string, object) | argument 1 -> return (normal) | false |
| System.String.Format(IFormatProvider, string, object) | argument 2 -> return (normal) | false |
| System.String.Format(IFormatProvider, string, object, object) | argument 1 -> return (normal) | false |
| System.String.Format(IFormatProvider, string, object, object) | argument 2 -> return (normal) | false |
| System.String.Format(IFormatProvider, string, object, object) | argument 3 -> return (normal) | false |
| System.String.Format(IFormatProvider, string, object, object, object) | argument 1 -> return (normal) | false |
| System.String.Format(IFormatProvider, string, object, object, object) | argument 2 -> return (normal) | false |
| System.String.Format(IFormatProvider, string, object, object, object) | argument 3 -> return (normal) | false |
| System.String.Format(IFormatProvider, string, object, object, object) | argument 4 -> return (normal) | false |
| System.String.Format(IFormatProvider, string, params Object[]) | argument 1 -> return (normal) | false |
| System.String.Format(IFormatProvider, string, params Object[]) | element of argument 2 -> return (normal) | false |
| System.String.Format(string, object) | argument 0 -> return (normal) | false |
| System.String.Format(string, object) | argument 1 -> return (normal) | false |
| System.String.Format(string, object, object) | argument 0 -> return (normal) | false |
| System.String.Format(string, object, object) | argument 1 -> return (normal) | false |
| System.String.Format(string, object, object) | argument 2 -> return (normal) | false |
| System.String.Format(string, object, object, object) | argument 0 -> return (normal) | false |
| System.String.Format(string, object, object, object) | argument 1 -> return (normal) | false |
| System.String.Format(string, object, object, object) | argument 2 -> return (normal) | false |
| System.String.Format(string, object, object, object) | argument 3 -> return (normal) | false |
| System.String.Format(string, params Object[]) | argument 0 -> return (normal) | false |
| System.String.Format(string, params Object[]) | element of argument 1 -> return (normal) | false |
| System.String.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.String.Insert(int, string) | argument 1 -> return (normal) | false |
| System.String.Insert(int, string) | argument -1 -> return (normal) | false |
| System.String.Join(char, String[], int, int) | argument 0 -> return (normal) | false |
| System.String.Join(char, String[], int, int) | element of argument 1 -> return (normal) | false |
| System.String.Join(char, params Object[]) | argument 0 -> return (normal) | false |
| System.String.Join(char, params Object[]) | element of argument 1 -> return (normal) | false |
| System.String.Join(char, params String[]) | argument 0 -> return (normal) | false |
| System.String.Join(char, params String[]) | element of argument 1 -> return (normal) | false |
| System.String.Join(string, IEnumerable<String>) | argument 0 -> return (normal) | false |
| System.String.Join(string, IEnumerable<String>) | element of argument 1 -> return (normal) | false |
| System.String.Join(string, String[], int, int) | argument 0 -> return (normal) | false |
| System.String.Join(string, String[], int, int) | element of argument 1 -> return (normal) | false |
| System.String.Join(string, params Object[]) | argument 0 -> return (normal) | false |
| System.String.Join(string, params Object[]) | element of argument 1 -> return (normal) | false |
| System.String.Join(string, params String[]) | argument 0 -> return (normal) | false |
| System.String.Join(string, params String[]) | element of argument 1 -> return (normal) | false |
| System.String.Join<T>(char, IEnumerable<T>) | argument 0 -> return (normal) | false |
| System.String.Join<T>(char, IEnumerable<T>) | element of argument 1 -> return (normal) | false |
| System.String.Join<T>(string, IEnumerable<T>) | argument 0 -> return (normal) | false |
| System.String.Join<T>(string, IEnumerable<T>) | element of argument 1 -> return (normal) | false |
| System.String.Normalize() | argument -1 -> return (normal) | false |
| System.String.Normalize(NormalizationForm) | argument -1 -> return (normal) | false |
| System.String.PadLeft(int) | argument -1 -> return (normal) | false |
| System.String.PadLeft(int, char) | argument -1 -> return (normal) | false |
| System.String.PadRight(int) | argument -1 -> return (normal) | false |
| System.String.PadRight(int, char) | argument -1 -> return (normal) | false |
| System.String.Remove(int) | argument -1 -> return (normal) | false |
| System.String.Remove(int, int) | argument -1 -> return (normal) | false |
| System.String.Replace(char, char) | argument 1 -> return (normal) | false |
| System.String.Replace(char, char) | argument -1 -> return (normal) | false |
| System.String.Replace(string, string) | argument 1 -> return (normal) | false |
| System.String.Replace(string, string) | argument -1 -> return (normal) | false |
| System.String.Split(Char[], StringSplitOptions) | argument -1 -> element of return (normal) | false |
| System.String.Split(Char[], int) | argument -1 -> element of return (normal) | false |
| System.String.Split(Char[], int, StringSplitOptions) | argument -1 -> element of return (normal) | false |
| System.String.Split(String[], StringSplitOptions) | argument -1 -> element of return (normal) | false |
| System.String.Split(String[], int, StringSplitOptions) | argument -1 -> element of return (normal) | false |
| System.String.Split(char, StringSplitOptions) | argument -1 -> element of return (normal) | false |
| System.String.Split(char, int, StringSplitOptions) | argument -1 -> element of return (normal) | false |
| System.String.Split(params Char[]) | argument -1 -> element of return (normal) | false |
| System.String.Split(string, StringSplitOptions) | argument -1 -> element of return (normal) | false |
| System.String.Split(string, int, StringSplitOptions) | argument -1 -> element of return (normal) | false |
| System.String.String(Char[]) | element of argument 0 -> return (normal) | false |
| System.String.String(Char[], int, int) | element of argument 0 -> return (normal) | false |
| System.String.Substring(int) | argument -1 -> return (normal) | false |
| System.String.Substring(int, int) | argument -1 -> return (normal) | false |
| System.String.ToLower() | argument -1 -> return (normal) | false |
| System.String.ToLower(CultureInfo) | argument -1 -> return (normal) | false |
| System.String.ToLowerInvariant() | argument -1 -> return (normal) | false |
| System.String.ToString() | argument -1 -> return (normal) | true |
| System.String.ToString(IFormatProvider) | argument -1 -> return (normal) | true |
| System.String.ToUpper() | argument -1 -> return (normal) | false |
| System.String.ToUpper(CultureInfo) | argument -1 -> return (normal) | false |
| System.String.ToUpperInvariant() | argument -1 -> return (normal) | false |
| System.String.Trim() | argument -1 -> return (normal) | false |
| System.String.Trim(char) | argument -1 -> return (normal) | false |
| System.String.Trim(params Char[]) | argument -1 -> return (normal) | false |
| System.String.TrimEnd() | argument -1 -> return (normal) | false |
| System.String.TrimEnd(char) | argument -1 -> return (normal) | false |
| System.String.TrimEnd(params Char[]) | argument -1 -> return (normal) | false |
| System.String.TrimStart() | argument -1 -> return (normal) | false |
| System.String.TrimStart(char) | argument -1 -> return (normal) | false |
| System.String.TrimStart(params Char[]) | argument -1 -> return (normal) | false |
| System.Text.Encoding.GetBytes(Char[]) | element of argument 0 -> return (normal) | false |
| System.Text.Encoding.GetBytes(Char[], int, int) | element of argument 0 -> return (normal) | false |
| System.Text.Encoding.GetBytes(Char[], int, int, Byte[], int) | element of argument 0 -> return (normal) | false |
| System.Text.Encoding.GetBytes(ReadOnlySpan<Char>, Span<Byte>) | argument 0 -> return (normal) | false |
| System.Text.Encoding.GetBytes(char*, int, byte*, int) | argument 0 -> return (normal) | false |
| System.Text.Encoding.GetBytes(char*, int, byte*, int, EncoderNLS) | argument 0 -> return (normal) | false |
| System.Text.Encoding.GetBytes(string) | argument 0 -> return (normal) | false |
| System.Text.Encoding.GetBytes(string, int, int) | argument 0 -> return (normal) | false |
| System.Text.Encoding.GetBytes(string, int, int, Byte[], int) | argument 0 -> return (normal) | false |
| System.Text.Encoding.GetChars(Byte[]) | element of argument 0 -> return (normal) | false |
| System.Text.Encoding.GetChars(Byte[], int, int) | element of argument 0 -> return (normal) | false |
| System.Text.Encoding.GetChars(Byte[], int, int, Char[], int) | element of argument 0 -> return (normal) | false |
| System.Text.Encoding.GetChars(ReadOnlySpan<Byte>, Span<Char>) | element of argument 0 -> return (normal) | false |
| System.Text.Encoding.GetChars(byte*, int, char*, int) | element of argument 0 -> return (normal) | false |
| System.Text.Encoding.GetChars(byte*, int, char*, int, DecoderNLS) | element of argument 0 -> return (normal) | false |
| System.Text.Encoding.GetString(Byte[]) | element of argument 0 -> return (normal) | false |
| System.Text.Encoding.GetString(Byte[], int, int) | element of argument 0 -> return (normal) | false |
| System.Text.Encoding.GetString(ReadOnlySpan<Byte>) | element of argument 0 -> return (normal) | false |
| System.Text.Encoding.GetString(byte*, int) | element of argument 0 -> return (normal) | false |
| System.Text.RegularExpressions.CaptureCollection.Add(Capture) | argument 0 -> element of argument -1 | true |
| System.Text.RegularExpressions.CaptureCollection.Add(object) | argument 0 -> element of argument -1 | true |
| System.Text.RegularExpressions.CaptureCollection.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Text.RegularExpressions.CaptureCollection.CopyTo(Capture[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Text.RegularExpressions.CaptureCollection.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Text.RegularExpressions.CaptureCollection.Insert(int, Capture) | argument 1 -> element of argument -1 | true |
| System.Text.RegularExpressions.CaptureCollection.Insert(int, object) | argument 1 -> element of argument -1 | true |
| System.Text.RegularExpressions.CaptureCollection.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.Text.RegularExpressions.CaptureCollection.set_Item(int, Capture) | argument 1 -> element of argument -1 | true |
| System.Text.RegularExpressions.CaptureCollection.set_Item(int, object) | argument 1 -> element of argument -1 | true |
| System.Text.RegularExpressions.GroupCollection.<get_Keys>d__49.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Text.RegularExpressions.GroupCollection.<get_Values>d__51.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Text.RegularExpressions.GroupCollection.Add(Group) | argument 0 -> element of argument -1 | true |
| System.Text.RegularExpressions.GroupCollection.Add(object) | argument 0 -> element of argument -1 | true |
| System.Text.RegularExpressions.GroupCollection.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Text.RegularExpressions.GroupCollection.CopyTo(Group[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Text.RegularExpressions.GroupCollection.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Text.RegularExpressions.GroupCollection.Insert(int, Group) | argument 1 -> element of argument -1 | true |
| System.Text.RegularExpressions.GroupCollection.Insert(int, object) | argument 1 -> element of argument -1 | true |
| System.Text.RegularExpressions.GroupCollection.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.Text.RegularExpressions.GroupCollection.get_Item(string) | element of argument -1 -> return (normal) | true |
| System.Text.RegularExpressions.GroupCollection.set_Item(int, Group) | argument 1 -> element of argument -1 | true |
| System.Text.RegularExpressions.GroupCollection.set_Item(int, object) | argument 1 -> element of argument -1 | true |
| System.Text.RegularExpressions.MatchCollection.Add(Match) | argument 0 -> element of argument -1 | true |
| System.Text.RegularExpressions.MatchCollection.Add(object) | argument 0 -> element of argument -1 | true |
| System.Text.RegularExpressions.MatchCollection.CopyTo(Array, int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Text.RegularExpressions.MatchCollection.CopyTo(Match[], int) | element of argument -1 -> element of return (out parameter 0) | true |
| System.Text.RegularExpressions.MatchCollection.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Text.RegularExpressions.MatchCollection.Insert(int, Match) | argument 1 -> element of argument -1 | true |
| System.Text.RegularExpressions.MatchCollection.Insert(int, object) | argument 1 -> element of argument -1 | true |
| System.Text.RegularExpressions.MatchCollection.get_Item(int) | element of argument -1 -> return (normal) | true |
| System.Text.RegularExpressions.MatchCollection.set_Item(int, Match) | argument 1 -> element of argument -1 | true |
| System.Text.RegularExpressions.MatchCollection.set_Item(int, object) | argument 1 -> element of argument -1 | true |
| System.Text.StringBuilder.Append(Char[]) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.Append(Char[]) | element of argument 0 -> element of argument -1 | true |
| System.Text.StringBuilder.Append(Char[], int, int) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.Append(Char[], int, int) | element of argument 0 -> element of argument -1 | true |
| System.Text.StringBuilder.Append(ReadOnlyMemory<Char>) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.Append(ReadOnlySpan<Char>) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.Append(StringBuilder) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.Append(StringBuilder, int, int) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.Append(bool) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.Append(byte) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.Append(char) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.Append(char*, int) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.Append(char, int) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.Append(decimal) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.Append(double) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.Append(float) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.Append(int) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.Append(long) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.Append(object) | argument 0 -> element of argument -1 | true |
| System.Text.StringBuilder.Append(object) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.Append(sbyte) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.Append(short) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.Append(string) | argument 0 -> element of argument -1 | true |
| System.Text.StringBuilder.Append(string) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.Append(string, int, int) | argument 0 -> element of argument -1 | true |
| System.Text.StringBuilder.Append(string, int, int) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.Append(uint) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.Append(ulong) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.Append(ushort) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.AppendFormat(IFormatProvider, string, object) | argument 1 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendFormat(IFormatProvider, string, object) | argument 2 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendFormat(IFormatProvider, string, object) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.AppendFormat(IFormatProvider, string, object, object) | argument 1 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendFormat(IFormatProvider, string, object, object) | argument 2 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendFormat(IFormatProvider, string, object, object) | argument 3 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendFormat(IFormatProvider, string, object, object) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.AppendFormat(IFormatProvider, string, object, object, object) | argument 1 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendFormat(IFormatProvider, string, object, object, object) | argument 2 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendFormat(IFormatProvider, string, object, object, object) | argument 3 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendFormat(IFormatProvider, string, object, object, object) | argument 4 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendFormat(IFormatProvider, string, object, object, object) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.AppendFormat(IFormatProvider, string, params Object[]) | argument 1 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendFormat(IFormatProvider, string, params Object[]) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.AppendFormat(IFormatProvider, string, params Object[]) | element of argument 2 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendFormat(string, object) | argument 0 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendFormat(string, object) | argument 1 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendFormat(string, object) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.AppendFormat(string, object, object) | argument 0 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendFormat(string, object, object) | argument 1 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendFormat(string, object, object) | argument 2 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendFormat(string, object, object) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.AppendFormat(string, object, object, object) | argument 0 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendFormat(string, object, object, object) | argument 1 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendFormat(string, object, object, object) | argument 2 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendFormat(string, object, object, object) | argument 3 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendFormat(string, object, object, object) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.AppendFormat(string, params Object[]) | argument 0 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendFormat(string, params Object[]) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.AppendFormat(string, params Object[]) | element of argument 1 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendJoin(char, params Object[]) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.AppendJoin(char, params Object[]) | element of argument 1 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendJoin(char, params String[]) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.AppendJoin(char, params String[]) | element of argument 1 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendJoin(string, params Object[]) | argument 0 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendJoin(string, params Object[]) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.AppendJoin(string, params Object[]) | element of argument 1 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendJoin(string, params String[]) | argument 0 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendJoin(string, params String[]) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.AppendJoin(string, params String[]) | element of argument 1 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendJoin<T>(char, IEnumerable<T>) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.AppendJoin<T>(char, IEnumerable<T>) | element of argument 1 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendJoin<T>(string, IEnumerable<T>) | argument 0 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendJoin<T>(string, IEnumerable<T>) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.AppendJoin<T>(string, IEnumerable<T>) | element of argument 1 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendLine() | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.AppendLine(string) | argument 0 -> element of argument -1 | true |
| System.Text.StringBuilder.AppendLine(string) | argument -1 -> return (normal) | true |
| System.Text.StringBuilder.StringBuilder(string) | argument 0 -> element of return (normal) | true |
| System.Text.StringBuilder.StringBuilder(string, int) | argument 0 -> element of return (normal) | true |
| System.Text.StringBuilder.StringBuilder(string, int, int, int) | argument 0 -> element of return (normal) | true |
| System.Text.StringBuilder.ToString() | element of argument -1 -> return (normal) | false |
| System.Text.StringBuilder.ToString(int, int) | element of argument -1 -> return (normal) | false |
| System.Text.TranscodingStream.BeginRead(Byte[], int, int, AsyncCallback, object) | argument -1 -> return (out parameter 0) | false |
| System.Text.TranscodingStream.BeginWrite(Byte[], int, int, AsyncCallback, object) | argument 0 -> argument -1 | false |
| System.Text.TranscodingStream.Read(Byte[], int, int) | argument -1 -> return (out parameter 0) | false |
| System.Text.TranscodingStream.ReadAsync(Byte[], int, int, CancellationToken) | argument -1 -> return (out parameter 0) | false |
| System.Text.TranscodingStream.Write(Byte[], int, int) | argument 0 -> argument -1 | false |
| System.Text.TranscodingStream.WriteAsync(Byte[], int, int, CancellationToken) | argument 0 -> argument -1 | false |
| System.Threading.Tasks.SingleProducerSingleConsumerQueue<>.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Threading.Tasks.Task.ContinueWith(Action<Task, Object>, object) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task.ContinueWith(Action<Task, Object>, object, CancellationToken) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task.ContinueWith(Action<Task, Object>, object, CancellationToken, TaskContinuationOptions, TaskScheduler) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task.ContinueWith(Action<Task, Object>, object, TaskContinuationOptions) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task.ContinueWith(Action<Task, Object>, object, TaskScheduler) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task.ContinueWith(Action<Task, Object>, object, TaskScheduler, CancellationToken, TaskContinuationOptions) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, Object, TResult>, object) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, Object, TResult>, object) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, Object, TResult>, object, CancellationToken) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, Object, TResult>, object, CancellationToken) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, Object, TResult>, object, CancellationToken, TaskContinuationOptions, TaskScheduler) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, Object, TResult>, object, CancellationToken, TaskContinuationOptions, TaskScheduler) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, Object, TResult>, object, TaskContinuationOptions) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, Object, TResult>, object, TaskContinuationOptions) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, Object, TResult>, object, TaskScheduler) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, Object, TResult>, object, TaskScheduler) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, Object, TResult>, object, TaskScheduler, CancellationToken, TaskContinuationOptions) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, Object, TResult>, object, TaskScheduler, CancellationToken, TaskContinuationOptions) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, TResult>) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, TResult>, CancellationToken) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, TResult>, CancellationToken, TaskContinuationOptions, TaskScheduler) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, TResult>, TaskContinuationOptions) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, TResult>, TaskScheduler) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, TResult>, TaskScheduler, CancellationToken, TaskContinuationOptions) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task.FromResult<TResult>(TResult) | argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task.Run<TResult>(Func<TResult>) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task.Run<TResult>(Func<TResult>, CancellationToken) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task.Run<TResult>(Func<Task<TResult>>) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task.Run<TResult>(Func<Task<TResult>>, CancellationToken) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task.Task(Action<Object>, object) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task.Task(Action<Object>, object, CancellationToken) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task.Task(Action<Object>, object, CancellationToken, TaskCreationOptions) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task.Task(Action<Object>, object, TaskCreationOptions) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task.WhenAll<TResult>(IEnumerable<Task<TResult>>) | property Result of element of argument 0 -> element of property Result of return (normal) | true |
| System.Threading.Tasks.Task.WhenAll<TResult>(params Task<TResult>[]) | property Result of element of argument 0 -> element of property Result of return (normal) | true |
| System.Threading.Tasks.Task.WhenAny<TResult>(IEnumerable<Task<TResult>>) | property Result of element of argument 0 -> element of property Result of return (normal) | true |
| System.Threading.Tasks.Task.WhenAny<TResult>(Task<TResult>, Task<TResult>) | property Result of element of argument 0 -> element of property Result of return (normal) | true |
| System.Threading.Tasks.Task.WhenAny<TResult>(Task<TResult>, Task<TResult>) | property Result of element of argument 1 -> element of property Result of return (normal) | true |
| System.Threading.Tasks.Task.WhenAny<TResult>(params Task<TResult>[]) | property Result of element of argument 0 -> element of property Result of return (normal) | true |
| System.Threading.Tasks.Task<>.ConfigureAwait(bool) | argument -1 -> field m_task of field m_configuredTaskAwaiter of return (normal) | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>, Object>, object) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>, Object>, object) | argument -1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>, Object>, object, CancellationToken) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>, Object>, object, CancellationToken) | argument -1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>, Object>, object, CancellationToken, TaskContinuationOptions, TaskScheduler) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>, Object>, object, CancellationToken, TaskContinuationOptions, TaskScheduler) | argument -1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>, Object>, object, TaskContinuationOptions) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>, Object>, object, TaskContinuationOptions) | argument -1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>, Object>, object, TaskScheduler) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>, Object>, object, TaskScheduler) | argument -1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>, Object>, object, TaskScheduler, CancellationToken, TaskContinuationOptions) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>, Object>, object, TaskScheduler, CancellationToken, TaskContinuationOptions) | argument -1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>>) | argument -1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>>, CancellationToken) | argument -1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>>, CancellationToken, TaskContinuationOptions, TaskScheduler) | argument -1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>>, TaskContinuationOptions) | argument -1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>>, TaskScheduler) | argument -1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>>, TaskScheduler, CancellationToken, TaskContinuationOptions) | argument -1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object) | argument -1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object, CancellationToken) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object, CancellationToken) | argument -1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object, CancellationToken) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object, CancellationToken, TaskContinuationOptions, TaskScheduler) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object, CancellationToken, TaskContinuationOptions, TaskScheduler) | argument -1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object, CancellationToken, TaskContinuationOptions, TaskScheduler) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object, TaskContinuationOptions) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object, TaskContinuationOptions) | argument -1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object, TaskContinuationOptions) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object, TaskScheduler) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object, TaskScheduler) | argument -1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object, TaskScheduler) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object, TaskScheduler, CancellationToken, TaskContinuationOptions) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object, TaskScheduler, CancellationToken, TaskContinuationOptions) | argument -1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object, TaskScheduler, CancellationToken, TaskContinuationOptions) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, TNewResult>) | argument -1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, TNewResult>) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, TNewResult>, CancellationToken) | argument -1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, TNewResult>, CancellationToken) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, TNewResult>, CancellationToken, TaskContinuationOptions, TaskScheduler) | argument -1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, TNewResult>, CancellationToken, TaskContinuationOptions, TaskScheduler) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, TNewResult>, TaskContinuationOptions) | argument -1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, TNewResult>, TaskContinuationOptions) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, TNewResult>, TaskScheduler) | argument -1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, TNewResult>, TaskScheduler) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, TNewResult>, TaskScheduler, CancellationToken, TaskContinuationOptions) | argument -1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, TNewResult>, TaskScheduler, CancellationToken, TaskContinuationOptions) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task<>.GetAwaiter() | argument -1 -> field m_task of return (normal) | true |
| System.Threading.Tasks.Task<>.Task(Func<Object, TResult>, object) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.Task(Func<Object, TResult>, object) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task<>.Task(Func<Object, TResult>, object, CancellationToken) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.Task(Func<Object, TResult>, object, CancellationToken) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task<>.Task(Func<Object, TResult>, object, CancellationToken, TaskCreationOptions) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.Task(Func<Object, TResult>, object, CancellationToken, TaskCreationOptions) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task<>.Task(Func<Object, TResult>, object, TaskCreationOptions) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.Task(Func<Object, TResult>, object, TaskCreationOptions) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task<>.Task(Func<TResult>) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task<>.Task(Func<TResult>, CancellationToken) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task<>.Task(Func<TResult>, CancellationToken, TaskCreationOptions) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task<>.Task(Func<TResult>, Task, CancellationToken, TaskCreationOptions, InternalTaskOptions, TaskScheduler) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task<>.Task(Func<TResult>, TaskCreationOptions) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.Task<>.get_Result() | argument -1 -> return (normal) | false |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task, TResult>) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task, TResult>) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task, TResult>, CancellationToken) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task, TResult>, CancellationToken) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task, TResult>, CancellationToken, TaskContinuationOptions, TaskScheduler) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task, TResult>, CancellationToken, TaskContinuationOptions, TaskScheduler) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task, TResult>, TaskContinuationOptions) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task, TResult>, TaskContinuationOptions) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult>(Task<TAntecedentResult>[], Action<Task>) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult>(Task<TAntecedentResult>[], Action<Task>, CancellationToken) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult>(Task<TAntecedentResult>[], Action<Task>, CancellationToken, TaskContinuationOptions, TaskScheduler) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult>(Task<TAntecedentResult>[], Action<Task>, TaskContinuationOptions) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TResult>(Task[], Func<Task[], TResult>) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TResult>(Task[], Func<Task[], TResult>, CancellationToken) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TResult>(Task[], Func<Task[], TResult>, CancellationToken, TaskContinuationOptions, TaskScheduler) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TResult>(Task[], Func<Task[], TResult>, TaskContinuationOptions) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>, CancellationToken) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>, CancellationToken) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>, CancellationToken, TaskContinuationOptions, TaskScheduler) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>, CancellationToken, TaskContinuationOptions, TaskScheduler) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>, TaskContinuationOptions) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>, TaskContinuationOptions) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult>(Task<TAntecedentResult>[], Action<Task<TAntecedentResult>>) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult>(Task<TAntecedentResult>[], Action<Task<TAntecedentResult>>, CancellationToken) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult>(Task<TAntecedentResult>[], Action<Task<TAntecedentResult>>, CancellationToken, TaskContinuationOptions, TaskScheduler) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult>(Task<TAntecedentResult>[], Action<Task<TAntecedentResult>>, TaskContinuationOptions) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TResult>(Task[], Func<Task, TResult>) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TResult>(Task[], Func<Task, TResult>, CancellationToken) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TResult>(Task[], Func<Task, TResult>, CancellationToken, TaskContinuationOptions, TaskScheduler) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TResult>(Task[], Func<Task, TResult>, TaskContinuationOptions) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory.StartNew(Action<Object>, object) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.TaskFactory.StartNew(Action<Object>, object, CancellationToken) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.TaskFactory.StartNew(Action<Object>, object, CancellationToken, TaskCreationOptions, TaskScheduler) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.TaskFactory.StartNew(Action<Object>, object, TaskCreationOptions) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.TaskFactory.StartNew<TResult>(Func<Object, TResult>, object) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.TaskFactory.StartNew<TResult>(Func<Object, TResult>, object) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory.StartNew<TResult>(Func<Object, TResult>, object, CancellationToken) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.TaskFactory.StartNew<TResult>(Func<Object, TResult>, object, CancellationToken) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory.StartNew<TResult>(Func<Object, TResult>, object, CancellationToken, TaskCreationOptions, TaskScheduler) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.TaskFactory.StartNew<TResult>(Func<Object, TResult>, object, CancellationToken, TaskCreationOptions, TaskScheduler) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory.StartNew<TResult>(Func<Object, TResult>, object, TaskCreationOptions) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.TaskFactory.StartNew<TResult>(Func<Object, TResult>, object, TaskCreationOptions) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory.StartNew<TResult>(Func<TResult>) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory.StartNew<TResult>(Func<TResult>, CancellationToken) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory.StartNew<TResult>(Func<TResult>, CancellationToken, TaskCreationOptions, TaskScheduler) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory.StartNew<TResult>(Func<TResult>, TaskCreationOptions) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAll(Task[], Func<Task[], TResult>) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAll(Task[], Func<Task[], TResult>, CancellationToken) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAll(Task[], Func<Task[], TResult>, CancellationToken, TaskContinuationOptions, TaskScheduler) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAll(Task[], Func<Task[], TResult>, TaskContinuationOptions) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAll<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task, TResult>) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAll<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task, TResult>) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAll<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task, TResult>, CancellationToken) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAll<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task, TResult>, CancellationToken) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAll<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task, TResult>, CancellationToken, TaskContinuationOptions, TaskScheduler) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAll<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task, TResult>, CancellationToken, TaskContinuationOptions, TaskScheduler) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAll<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task, TResult>, TaskContinuationOptions) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAll<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task, TResult>, TaskContinuationOptions) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAny(Task[], Func<Task, TResult>) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAny(Task[], Func<Task, TResult>, CancellationToken) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAny(Task[], Func<Task, TResult>, CancellationToken, TaskContinuationOptions, TaskScheduler) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAny(Task[], Func<Task, TResult>, TaskContinuationOptions) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAny<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAny<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAny<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>, CancellationToken) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAny<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>, CancellationToken) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAny<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>, CancellationToken, TaskContinuationOptions, TaskScheduler) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAny<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>, CancellationToken, TaskContinuationOptions, TaskScheduler) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAny<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>, TaskContinuationOptions) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAny<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>, TaskContinuationOptions) | return (normal) of argument 1 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory<>.StartNew(Func<Object, TResult>, object) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.TaskFactory<>.StartNew(Func<Object, TResult>, object) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory<>.StartNew(Func<Object, TResult>, object, CancellationToken) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.TaskFactory<>.StartNew(Func<Object, TResult>, object, CancellationToken) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory<>.StartNew(Func<Object, TResult>, object, CancellationToken, TaskCreationOptions, TaskScheduler) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.TaskFactory<>.StartNew(Func<Object, TResult>, object, CancellationToken, TaskCreationOptions, TaskScheduler) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory<>.StartNew(Func<Object, TResult>, object, TaskCreationOptions) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.TaskFactory<>.StartNew(Func<Object, TResult>, object, TaskCreationOptions) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory<>.StartNew(Func<TResult>) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory<>.StartNew(Func<TResult>, CancellationToken) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory<>.StartNew(Func<TResult>, CancellationToken, TaskCreationOptions, TaskScheduler) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.TaskFactory<>.StartNew(Func<TResult>, TaskCreationOptions) | return (normal) of argument 0 -> property Result of return (normal) | true |
| System.Threading.Tasks.ThreadPoolTaskScheduler.<FilterTasksFromWorkItems>d__6.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Threading.ThreadPool.<GetLocallyQueuedWorkItems>d__52.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Threading.ThreadPool.<GetQueuedWorkItems>d__51.GetEnumerator() | element of argument -1 -> property Current of return (normal) | true |
| System.Tuple.Create<T1, T2, T3, T4, T5, T6, T7, T8>(T1, T2, T3, T4, T5, T6, T7, T8) | argument 0 -> property Item1 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3, T4, T5, T6, T7, T8>(T1, T2, T3, T4, T5, T6, T7, T8) | argument 1 -> property Item2 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3, T4, T5, T6, T7, T8>(T1, T2, T3, T4, T5, T6, T7, T8) | argument 2 -> property Item3 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3, T4, T5, T6, T7, T8>(T1, T2, T3, T4, T5, T6, T7, T8) | argument 3 -> property Item4 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3, T4, T5, T6, T7, T8>(T1, T2, T3, T4, T5, T6, T7, T8) | argument 4 -> property Item5 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3, T4, T5, T6, T7, T8>(T1, T2, T3, T4, T5, T6, T7, T8) | argument 5 -> property Item6 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3, T4, T5, T6, T7, T8>(T1, T2, T3, T4, T5, T6, T7, T8) | argument 6 -> property Item7 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3, T4, T5, T6, T7>(T1, T2, T3, T4, T5, T6, T7) | argument 0 -> property Item1 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3, T4, T5, T6, T7>(T1, T2, T3, T4, T5, T6, T7) | argument 1 -> property Item2 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3, T4, T5, T6, T7>(T1, T2, T3, T4, T5, T6, T7) | argument 2 -> property Item3 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3, T4, T5, T6, T7>(T1, T2, T3, T4, T5, T6, T7) | argument 3 -> property Item4 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3, T4, T5, T6, T7>(T1, T2, T3, T4, T5, T6, T7) | argument 4 -> property Item5 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3, T4, T5, T6, T7>(T1, T2, T3, T4, T5, T6, T7) | argument 5 -> property Item6 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3, T4, T5, T6, T7>(T1, T2, T3, T4, T5, T6, T7) | argument 6 -> property Item7 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3, T4, T5, T6>(T1, T2, T3, T4, T5, T6) | argument 0 -> property Item1 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3, T4, T5, T6>(T1, T2, T3, T4, T5, T6) | argument 1 -> property Item2 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3, T4, T5, T6>(T1, T2, T3, T4, T5, T6) | argument 2 -> property Item3 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3, T4, T5, T6>(T1, T2, T3, T4, T5, T6) | argument 3 -> property Item4 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3, T4, T5, T6>(T1, T2, T3, T4, T5, T6) | argument 4 -> property Item5 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3, T4, T5, T6>(T1, T2, T3, T4, T5, T6) | argument 5 -> property Item6 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3, T4, T5>(T1, T2, T3, T4, T5) | argument 0 -> property Item1 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3, T4, T5>(T1, T2, T3, T4, T5) | argument 1 -> property Item2 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3, T4, T5>(T1, T2, T3, T4, T5) | argument 2 -> property Item3 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3, T4, T5>(T1, T2, T3, T4, T5) | argument 3 -> property Item4 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3, T4, T5>(T1, T2, T3, T4, T5) | argument 4 -> property Item5 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3, T4>(T1, T2, T3, T4) | argument 0 -> property Item1 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3, T4>(T1, T2, T3, T4) | argument 1 -> property Item2 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3, T4>(T1, T2, T3, T4) | argument 2 -> property Item3 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3, T4>(T1, T2, T3, T4) | argument 3 -> property Item4 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3>(T1, T2, T3) | argument 0 -> property Item1 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3>(T1, T2, T3) | argument 1 -> property Item2 of return (normal) | true |
| System.Tuple.Create<T1, T2, T3>(T1, T2, T3) | argument 2 -> property Item3 of return (normal) | true |
| System.Tuple.Create<T1, T2>(T1, T2) | argument 0 -> property Item1 of return (normal) | true |
| System.Tuple.Create<T1, T2>(T1, T2) | argument 1 -> property Item2 of return (normal) | true |
| System.Tuple.Create<T1>(T1) | argument 0 -> property Item1 of return (normal) | true |
| System.Tuple<,,,,,,,>.Tuple(T1, T2, T3, T4, T5, T6, T7, TRest) | argument 0 -> property Item1 of return (normal) | true |
| System.Tuple<,,,,,,,>.Tuple(T1, T2, T3, T4, T5, T6, T7, TRest) | argument 1 -> property Item2 of return (normal) | true |
| System.Tuple<,,,,,,,>.Tuple(T1, T2, T3, T4, T5, T6, T7, TRest) | argument 2 -> property Item3 of return (normal) | true |
| System.Tuple<,,,,,,,>.Tuple(T1, T2, T3, T4, T5, T6, T7, TRest) | argument 3 -> property Item4 of return (normal) | true |
| System.Tuple<,,,,,,,>.Tuple(T1, T2, T3, T4, T5, T6, T7, TRest) | argument 4 -> property Item5 of return (normal) | true |
| System.Tuple<,,,,,,,>.Tuple(T1, T2, T3, T4, T5, T6, T7, TRest) | argument 5 -> property Item6 of return (normal) | true |
| System.Tuple<,,,,,,,>.Tuple(T1, T2, T3, T4, T5, T6, T7, TRest) | argument 6 -> property Item7 of return (normal) | true |
| System.Tuple<,,,,,,,>.get_Item(int) | property Item1 of argument -1 -> return (normal) | true |
| System.Tuple<,,,,,,,>.get_Item(int) | property Item2 of argument -1 -> return (normal) | true |
| System.Tuple<,,,,,,,>.get_Item(int) | property Item3 of argument -1 -> return (normal) | true |
| System.Tuple<,,,,,,,>.get_Item(int) | property Item4 of argument -1 -> return (normal) | true |
| System.Tuple<,,,,,,,>.get_Item(int) | property Item5 of argument -1 -> return (normal) | true |
| System.Tuple<,,,,,,,>.get_Item(int) | property Item6 of argument -1 -> return (normal) | true |
| System.Tuple<,,,,,,,>.get_Item(int) | property Item7 of argument -1 -> return (normal) | true |
| System.Tuple<,,,,,,>.Tuple(T1, T2, T3, T4, T5, T6, T7) | argument 0 -> property Item1 of return (normal) | true |
| System.Tuple<,,,,,,>.Tuple(T1, T2, T3, T4, T5, T6, T7) | argument 1 -> property Item2 of return (normal) | true |
| System.Tuple<,,,,,,>.Tuple(T1, T2, T3, T4, T5, T6, T7) | argument 2 -> property Item3 of return (normal) | true |
| System.Tuple<,,,,,,>.Tuple(T1, T2, T3, T4, T5, T6, T7) | argument 3 -> property Item4 of return (normal) | true |
| System.Tuple<,,,,,,>.Tuple(T1, T2, T3, T4, T5, T6, T7) | argument 4 -> property Item5 of return (normal) | true |
| System.Tuple<,,,,,,>.Tuple(T1, T2, T3, T4, T5, T6, T7) | argument 5 -> property Item6 of return (normal) | true |
| System.Tuple<,,,,,,>.Tuple(T1, T2, T3, T4, T5, T6, T7) | argument 6 -> property Item7 of return (normal) | true |
| System.Tuple<,,,,,,>.get_Item(int) | property Item1 of argument -1 -> return (normal) | true |
| System.Tuple<,,,,,,>.get_Item(int) | property Item2 of argument -1 -> return (normal) | true |
| System.Tuple<,,,,,,>.get_Item(int) | property Item3 of argument -1 -> return (normal) | true |
| System.Tuple<,,,,,,>.get_Item(int) | property Item4 of argument -1 -> return (normal) | true |
| System.Tuple<,,,,,,>.get_Item(int) | property Item5 of argument -1 -> return (normal) | true |
| System.Tuple<,,,,,,>.get_Item(int) | property Item6 of argument -1 -> return (normal) | true |
| System.Tuple<,,,,,,>.get_Item(int) | property Item7 of argument -1 -> return (normal) | true |
| System.Tuple<,,,,,>.Tuple(T1, T2, T3, T4, T5, T6) | argument 0 -> property Item1 of return (normal) | true |
| System.Tuple<,,,,,>.Tuple(T1, T2, T3, T4, T5, T6) | argument 1 -> property Item2 of return (normal) | true |
| System.Tuple<,,,,,>.Tuple(T1, T2, T3, T4, T5, T6) | argument 2 -> property Item3 of return (normal) | true |
| System.Tuple<,,,,,>.Tuple(T1, T2, T3, T4, T5, T6) | argument 3 -> property Item4 of return (normal) | true |
| System.Tuple<,,,,,>.Tuple(T1, T2, T3, T4, T5, T6) | argument 4 -> property Item5 of return (normal) | true |
| System.Tuple<,,,,,>.Tuple(T1, T2, T3, T4, T5, T6) | argument 5 -> property Item6 of return (normal) | true |
| System.Tuple<,,,,,>.get_Item(int) | property Item1 of argument -1 -> return (normal) | true |
| System.Tuple<,,,,,>.get_Item(int) | property Item2 of argument -1 -> return (normal) | true |
| System.Tuple<,,,,,>.get_Item(int) | property Item3 of argument -1 -> return (normal) | true |
| System.Tuple<,,,,,>.get_Item(int) | property Item4 of argument -1 -> return (normal) | true |
| System.Tuple<,,,,,>.get_Item(int) | property Item5 of argument -1 -> return (normal) | true |
| System.Tuple<,,,,,>.get_Item(int) | property Item6 of argument -1 -> return (normal) | true |
| System.Tuple<,,,,>.Tuple(T1, T2, T3, T4, T5) | argument 0 -> property Item1 of return (normal) | true |
| System.Tuple<,,,,>.Tuple(T1, T2, T3, T4, T5) | argument 1 -> property Item2 of return (normal) | true |
| System.Tuple<,,,,>.Tuple(T1, T2, T3, T4, T5) | argument 2 -> property Item3 of return (normal) | true |
| System.Tuple<,,,,>.Tuple(T1, T2, T3, T4, T5) | argument 3 -> property Item4 of return (normal) | true |
| System.Tuple<,,,,>.Tuple(T1, T2, T3, T4, T5) | argument 4 -> property Item5 of return (normal) | true |
| System.Tuple<,,,,>.get_Item(int) | property Item1 of argument -1 -> return (normal) | true |
| System.Tuple<,,,,>.get_Item(int) | property Item2 of argument -1 -> return (normal) | true |
| System.Tuple<,,,,>.get_Item(int) | property Item3 of argument -1 -> return (normal) | true |
| System.Tuple<,,,,>.get_Item(int) | property Item4 of argument -1 -> return (normal) | true |
| System.Tuple<,,,,>.get_Item(int) | property Item5 of argument -1 -> return (normal) | true |
| System.Tuple<,,,>.Tuple(T1, T2, T3, T4) | argument 0 -> property Item1 of return (normal) | true |
| System.Tuple<,,,>.Tuple(T1, T2, T3, T4) | argument 1 -> property Item2 of return (normal) | true |
| System.Tuple<,,,>.Tuple(T1, T2, T3, T4) | argument 2 -> property Item3 of return (normal) | true |
| System.Tuple<,,,>.Tuple(T1, T2, T3, T4) | argument 3 -> property Item4 of return (normal) | true |
| System.Tuple<,,,>.get_Item(int) | property Item1 of argument -1 -> return (normal) | true |
| System.Tuple<,,,>.get_Item(int) | property Item2 of argument -1 -> return (normal) | true |
| System.Tuple<,,,>.get_Item(int) | property Item3 of argument -1 -> return (normal) | true |
| System.Tuple<,,,>.get_Item(int) | property Item4 of argument -1 -> return (normal) | true |
| System.Tuple<,,>.Tuple(T1, T2, T3) | argument 0 -> property Item1 of return (normal) | true |
| System.Tuple<,,>.Tuple(T1, T2, T3) | argument 1 -> property Item2 of return (normal) | true |
| System.Tuple<,,>.Tuple(T1, T2, T3) | argument 2 -> property Item3 of return (normal) | true |
| System.Tuple<,,>.get_Item(int) | property Item1 of argument -1 -> return (normal) | true |
| System.Tuple<,,>.get_Item(int) | property Item2 of argument -1 -> return (normal) | true |
| System.Tuple<,,>.get_Item(int) | property Item3 of argument -1 -> return (normal) | true |
| System.Tuple<,>.Tuple(T1, T2) | argument 0 -> property Item1 of return (normal) | true |
| System.Tuple<,>.Tuple(T1, T2) | argument 1 -> property Item2 of return (normal) | true |
| System.Tuple<,>.get_Item(int) | property Item1 of argument -1 -> return (normal) | true |
| System.Tuple<,>.get_Item(int) | property Item2 of argument -1 -> return (normal) | true |
| System.Tuple<>.Tuple(T1) | argument 0 -> property Item1 of return (normal) | true |
| System.Tuple<>.get_Item(int) | property Item1 of argument -1 -> return (normal) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19,T20,T21>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17, out T18, out T19, out T20, out T21) | property Item1 of argument 0 -> return (out parameter 1) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19,T20,T21>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17, out T18, out T19, out T20, out T21) | property Item2 of argument 0 -> return (out parameter 2) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19,T20,T21>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17, out T18, out T19, out T20, out T21) | property Item3 of argument 0 -> return (out parameter 3) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19,T20,T21>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17, out T18, out T19, out T20, out T21) | property Item4 of argument 0 -> return (out parameter 4) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19,T20,T21>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17, out T18, out T19, out T20, out T21) | property Item5 of argument 0 -> return (out parameter 5) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19,T20,T21>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17, out T18, out T19, out T20, out T21) | property Item6 of argument 0 -> return (out parameter 6) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19,T20,T21>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17, out T18, out T19, out T20, out T21) | property Item7 of argument 0 -> return (out parameter 7) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19,T20>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17, out T18, out T19, out T20) | property Item1 of argument 0 -> return (out parameter 1) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19,T20>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17, out T18, out T19, out T20) | property Item2 of argument 0 -> return (out parameter 2) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19,T20>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17, out T18, out T19, out T20) | property Item3 of argument 0 -> return (out parameter 3) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19,T20>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17, out T18, out T19, out T20) | property Item4 of argument 0 -> return (out parameter 4) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19,T20>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17, out T18, out T19, out T20) | property Item5 of argument 0 -> return (out parameter 5) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19,T20>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17, out T18, out T19, out T20) | property Item6 of argument 0 -> return (out parameter 6) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19,T20>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17, out T18, out T19, out T20) | property Item7 of argument 0 -> return (out parameter 7) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17, out T18, out T19) | property Item1 of argument 0 -> return (out parameter 1) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17, out T18, out T19) | property Item2 of argument 0 -> return (out parameter 2) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17, out T18, out T19) | property Item3 of argument 0 -> return (out parameter 3) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17, out T18, out T19) | property Item4 of argument 0 -> return (out parameter 4) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17, out T18, out T19) | property Item5 of argument 0 -> return (out parameter 5) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17, out T18, out T19) | property Item6 of argument 0 -> return (out parameter 6) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18,T19>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17, out T18, out T19) | property Item7 of argument 0 -> return (out parameter 7) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17, out T18) | property Item1 of argument 0 -> return (out parameter 1) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17, out T18) | property Item2 of argument 0 -> return (out parameter 2) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17, out T18) | property Item3 of argument 0 -> return (out parameter 3) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17, out T18) | property Item4 of argument 0 -> return (out parameter 4) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17, out T18) | property Item5 of argument 0 -> return (out parameter 5) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17, out T18) | property Item6 of argument 0 -> return (out parameter 6) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17,T18>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17, out T18) | property Item7 of argument 0 -> return (out parameter 7) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17) | property Item1 of argument 0 -> return (out parameter 1) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17) | property Item2 of argument 0 -> return (out parameter 2) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17) | property Item3 of argument 0 -> return (out parameter 3) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17) | property Item4 of argument 0 -> return (out parameter 4) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17) | property Item5 of argument 0 -> return (out parameter 5) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17) | property Item6 of argument 0 -> return (out parameter 6) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16,T17>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16, out T17) | property Item7 of argument 0 -> return (out parameter 7) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16) | property Item1 of argument 0 -> return (out parameter 1) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16) | property Item2 of argument 0 -> return (out parameter 2) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16) | property Item3 of argument 0 -> return (out parameter 3) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16) | property Item4 of argument 0 -> return (out parameter 4) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16) | property Item5 of argument 0 -> return (out parameter 5) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16) | property Item6 of argument 0 -> return (out parameter 6) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15,T16>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15, out T16) | property Item7 of argument 0 -> return (out parameter 7) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15) | property Item1 of argument 0 -> return (out parameter 1) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15) | property Item2 of argument 0 -> return (out parameter 2) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15) | property Item3 of argument 0 -> return (out parameter 3) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15) | property Item4 of argument 0 -> return (out parameter 4) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15) | property Item5 of argument 0 -> return (out parameter 5) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15) | property Item6 of argument 0 -> return (out parameter 6) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14,Tuple<T15>>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14, out T15) | property Item7 of argument 0 -> return (out parameter 7) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14) | property Item1 of argument 0 -> return (out parameter 1) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14) | property Item2 of argument 0 -> return (out parameter 2) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14) | property Item3 of argument 0 -> return (out parameter 3) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14) | property Item4 of argument 0 -> return (out parameter 4) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14) | property Item5 of argument 0 -> return (out parameter 5) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14) | property Item6 of argument 0 -> return (out parameter 6) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13,T14>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13, out T14) | property Item7 of argument 0 -> return (out parameter 7) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13) | property Item1 of argument 0 -> return (out parameter 1) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13) | property Item2 of argument 0 -> return (out parameter 2) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13) | property Item3 of argument 0 -> return (out parameter 3) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13) | property Item4 of argument 0 -> return (out parameter 4) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13) | property Item5 of argument 0 -> return (out parameter 5) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13) | property Item6 of argument 0 -> return (out parameter 6) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12,T13>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12, out T13) | property Item7 of argument 0 -> return (out parameter 7) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12) | property Item1 of argument 0 -> return (out parameter 1) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12) | property Item2 of argument 0 -> return (out parameter 2) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12) | property Item3 of argument 0 -> return (out parameter 3) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12) | property Item4 of argument 0 -> return (out parameter 4) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12) | property Item5 of argument 0 -> return (out parameter 5) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12) | property Item6 of argument 0 -> return (out parameter 6) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11,T12>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11, out T12) | property Item7 of argument 0 -> return (out parameter 7) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11) | property Item1 of argument 0 -> return (out parameter 1) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11) | property Item2 of argument 0 -> return (out parameter 2) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11) | property Item3 of argument 0 -> return (out parameter 3) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11) | property Item4 of argument 0 -> return (out parameter 4) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11) | property Item5 of argument 0 -> return (out parameter 5) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11) | property Item6 of argument 0 -> return (out parameter 6) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10,T11>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10, out T11) | property Item7 of argument 0 -> return (out parameter 7) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10) | property Item1 of argument 0 -> return (out parameter 1) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10) | property Item2 of argument 0 -> return (out parameter 2) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10) | property Item3 of argument 0 -> return (out parameter 3) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10) | property Item4 of argument 0 -> return (out parameter 4) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10) | property Item5 of argument 0 -> return (out parameter 5) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10) | property Item6 of argument 0 -> return (out parameter 6) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9,T10>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9, out T10) | property Item7 of argument 0 -> return (out parameter 7) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9) | property Item1 of argument 0 -> return (out parameter 1) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9) | property Item2 of argument 0 -> return (out parameter 2) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9) | property Item3 of argument 0 -> return (out parameter 3) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9) | property Item4 of argument 0 -> return (out parameter 4) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9) | property Item5 of argument 0 -> return (out parameter 5) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9) | property Item6 of argument 0 -> return (out parameter 6) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8, T9>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8,T9>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8, out T9) | property Item7 of argument 0 -> return (out parameter 7) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8) | property Item1 of argument 0 -> return (out parameter 1) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8) | property Item2 of argument 0 -> return (out parameter 2) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8) | property Item3 of argument 0 -> return (out parameter 3) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8) | property Item4 of argument 0 -> return (out parameter 4) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8) | property Item5 of argument 0 -> return (out parameter 5) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8) | property Item6 of argument 0 -> return (out parameter 6) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7, T8>(Tuple<T1, T2, T3, T4, T5, T6, T7, Tuple<T8>>, out T1, out T2, out T3, out T4, out T5, out T6, out T7, out T8) | property Item7 of argument 0 -> return (out parameter 7) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7>(Tuple<T1, T2, T3, T4, T5, T6, T7>, out T1, out T2, out T3, out T4, out T5, out T6, out T7) | property Item1 of argument 0 -> return (out parameter 1) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7>(Tuple<T1, T2, T3, T4, T5, T6, T7>, out T1, out T2, out T3, out T4, out T5, out T6, out T7) | property Item2 of argument 0 -> return (out parameter 2) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7>(Tuple<T1, T2, T3, T4, T5, T6, T7>, out T1, out T2, out T3, out T4, out T5, out T6, out T7) | property Item3 of argument 0 -> return (out parameter 3) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7>(Tuple<T1, T2, T3, T4, T5, T6, T7>, out T1, out T2, out T3, out T4, out T5, out T6, out T7) | property Item4 of argument 0 -> return (out parameter 4) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7>(Tuple<T1, T2, T3, T4, T5, T6, T7>, out T1, out T2, out T3, out T4, out T5, out T6, out T7) | property Item5 of argument 0 -> return (out parameter 5) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7>(Tuple<T1, T2, T3, T4, T5, T6, T7>, out T1, out T2, out T3, out T4, out T5, out T6, out T7) | property Item6 of argument 0 -> return (out parameter 6) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6, T7>(Tuple<T1, T2, T3, T4, T5, T6, T7>, out T1, out T2, out T3, out T4, out T5, out T6, out T7) | property Item7 of argument 0 -> return (out parameter 7) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6>(Tuple<T1, T2, T3, T4, T5, T6>, out T1, out T2, out T3, out T4, out T5, out T6) | property Item1 of argument 0 -> return (out parameter 1) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6>(Tuple<T1, T2, T3, T4, T5, T6>, out T1, out T2, out T3, out T4, out T5, out T6) | property Item2 of argument 0 -> return (out parameter 2) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6>(Tuple<T1, T2, T3, T4, T5, T6>, out T1, out T2, out T3, out T4, out T5, out T6) | property Item3 of argument 0 -> return (out parameter 3) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6>(Tuple<T1, T2, T3, T4, T5, T6>, out T1, out T2, out T3, out T4, out T5, out T6) | property Item4 of argument 0 -> return (out parameter 4) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6>(Tuple<T1, T2, T3, T4, T5, T6>, out T1, out T2, out T3, out T4, out T5, out T6) | property Item5 of argument 0 -> return (out parameter 5) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5, T6>(Tuple<T1, T2, T3, T4, T5, T6>, out T1, out T2, out T3, out T4, out T5, out T6) | property Item6 of argument 0 -> return (out parameter 6) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5>(Tuple<T1, T2, T3, T4, T5>, out T1, out T2, out T3, out T4, out T5) | property Item1 of argument 0 -> return (out parameter 1) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5>(Tuple<T1, T2, T3, T4, T5>, out T1, out T2, out T3, out T4, out T5) | property Item2 of argument 0 -> return (out parameter 2) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5>(Tuple<T1, T2, T3, T4, T5>, out T1, out T2, out T3, out T4, out T5) | property Item3 of argument 0 -> return (out parameter 3) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5>(Tuple<T1, T2, T3, T4, T5>, out T1, out T2, out T3, out T4, out T5) | property Item4 of argument 0 -> return (out parameter 4) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4, T5>(Tuple<T1, T2, T3, T4, T5>, out T1, out T2, out T3, out T4, out T5) | property Item5 of argument 0 -> return (out parameter 5) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4>(Tuple<T1, T2, T3, T4>, out T1, out T2, out T3, out T4) | property Item1 of argument 0 -> return (out parameter 1) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4>(Tuple<T1, T2, T3, T4>, out T1, out T2, out T3, out T4) | property Item2 of argument 0 -> return (out parameter 2) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4>(Tuple<T1, T2, T3, T4>, out T1, out T2, out T3, out T4) | property Item3 of argument 0 -> return (out parameter 3) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3, T4>(Tuple<T1, T2, T3, T4>, out T1, out T2, out T3, out T4) | property Item4 of argument 0 -> return (out parameter 4) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3>(Tuple<T1, T2, T3>, out T1, out T2, out T3) | property Item1 of argument 0 -> return (out parameter 1) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3>(Tuple<T1, T2, T3>, out T1, out T2, out T3) | property Item2 of argument 0 -> return (out parameter 2) | true |
| System.TupleExtensions.Deconstruct<T1, T2, T3>(Tuple<T1, T2, T3>, out T1, out T2, out T3) | property Item3 of argument 0 -> return (out parameter 3) | true |
| System.TupleExtensions.Deconstruct<T1, T2>(Tuple<T1, T2>, out T1, out T2) | property Item1 of argument 0 -> return (out parameter 1) | true |
| System.TupleExtensions.Deconstruct<T1, T2>(Tuple<T1, T2>, out T1, out T2) | property Item2 of argument 0 -> return (out parameter 2) | true |
| System.TupleExtensions.Deconstruct<T1>(Tuple<T1>, out T1) | property Item1 of argument 0 -> return (out parameter 1) | true |
| System.Uri.ToString() | argument -1 -> return (normal) | false |
| System.Uri.Uri(string) | argument 0 -> return (normal) | false |
| System.Uri.Uri(string, UriKind) | argument 0 -> return (normal) | false |
| System.Uri.Uri(string, bool) | argument 0 -> return (normal) | false |
| System.Uri.get_OriginalString() | argument -1 -> return (normal) | false |
| System.Uri.get_PathAndQuery() | argument -1 -> return (normal) | false |
| System.Uri.get_Query() | argument -1 -> return (normal) | false |
| System.ValueTuple.Create<T1, T2, T3, T4, T5, T6, T7, T8>(T1, T2, T3, T4, T5, T6, T7, T8) | argument 0 -> field Item1 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3, T4, T5, T6, T7, T8>(T1, T2, T3, T4, T5, T6, T7, T8) | argument 1 -> field Item2 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3, T4, T5, T6, T7, T8>(T1, T2, T3, T4, T5, T6, T7, T8) | argument 2 -> field Item3 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3, T4, T5, T6, T7, T8>(T1, T2, T3, T4, T5, T6, T7, T8) | argument 3 -> field Item4 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3, T4, T5, T6, T7, T8>(T1, T2, T3, T4, T5, T6, T7, T8) | argument 4 -> field Item5 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3, T4, T5, T6, T7, T8>(T1, T2, T3, T4, T5, T6, T7, T8) | argument 5 -> field Item6 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3, T4, T5, T6, T7, T8>(T1, T2, T3, T4, T5, T6, T7, T8) | argument 6 -> field Item7 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3, T4, T5, T6, T7>(T1, T2, T3, T4, T5, T6, T7) | argument 0 -> field Item1 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3, T4, T5, T6, T7>(T1, T2, T3, T4, T5, T6, T7) | argument 1 -> field Item2 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3, T4, T5, T6, T7>(T1, T2, T3, T4, T5, T6, T7) | argument 2 -> field Item3 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3, T4, T5, T6, T7>(T1, T2, T3, T4, T5, T6, T7) | argument 3 -> field Item4 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3, T4, T5, T6, T7>(T1, T2, T3, T4, T5, T6, T7) | argument 4 -> field Item5 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3, T4, T5, T6, T7>(T1, T2, T3, T4, T5, T6, T7) | argument 5 -> field Item6 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3, T4, T5, T6, T7>(T1, T2, T3, T4, T5, T6, T7) | argument 6 -> field Item7 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3, T4, T5, T6>(T1, T2, T3, T4, T5, T6) | argument 0 -> field Item1 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3, T4, T5, T6>(T1, T2, T3, T4, T5, T6) | argument 1 -> field Item2 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3, T4, T5, T6>(T1, T2, T3, T4, T5, T6) | argument 2 -> field Item3 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3, T4, T5, T6>(T1, T2, T3, T4, T5, T6) | argument 3 -> field Item4 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3, T4, T5, T6>(T1, T2, T3, T4, T5, T6) | argument 4 -> field Item5 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3, T4, T5, T6>(T1, T2, T3, T4, T5, T6) | argument 5 -> field Item6 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3, T4, T5>(T1, T2, T3, T4, T5) | argument 0 -> field Item1 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3, T4, T5>(T1, T2, T3, T4, T5) | argument 1 -> field Item2 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3, T4, T5>(T1, T2, T3, T4, T5) | argument 2 -> field Item3 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3, T4, T5>(T1, T2, T3, T4, T5) | argument 3 -> field Item4 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3, T4, T5>(T1, T2, T3, T4, T5) | argument 4 -> field Item5 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3, T4>(T1, T2, T3, T4) | argument 0 -> field Item1 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3, T4>(T1, T2, T3, T4) | argument 1 -> field Item2 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3, T4>(T1, T2, T3, T4) | argument 2 -> field Item3 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3, T4>(T1, T2, T3, T4) | argument 3 -> field Item4 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3>(T1, T2, T3) | argument 0 -> field Item1 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3>(T1, T2, T3) | argument 1 -> field Item2 of return (normal) | true |
| System.ValueTuple.Create<T1, T2, T3>(T1, T2, T3) | argument 2 -> field Item3 of return (normal) | true |
| System.ValueTuple.Create<T1, T2>(T1, T2) | argument 0 -> field Item1 of return (normal) | true |
| System.ValueTuple.Create<T1, T2>(T1, T2) | argument 1 -> field Item2 of return (normal) | true |
| System.ValueTuple.Create<T1>(T1) | argument 0 -> field Item1 of return (normal) | true |
| System.ValueTuple<,,,,,,,>.ValueTuple(T1, T2, T3, T4, T5, T6, T7, TRest) | argument 0 -> field Item1 of return (normal) | true |
| System.ValueTuple<,,,,,,,>.ValueTuple(T1, T2, T3, T4, T5, T6, T7, TRest) | argument 1 -> field Item2 of return (normal) | true |
| System.ValueTuple<,,,,,,,>.ValueTuple(T1, T2, T3, T4, T5, T6, T7, TRest) | argument 2 -> field Item3 of return (normal) | true |
| System.ValueTuple<,,,,,,,>.ValueTuple(T1, T2, T3, T4, T5, T6, T7, TRest) | argument 3 -> field Item4 of return (normal) | true |
| System.ValueTuple<,,,,,,,>.ValueTuple(T1, T2, T3, T4, T5, T6, T7, TRest) | argument 4 -> field Item5 of return (normal) | true |
| System.ValueTuple<,,,,,,,>.ValueTuple(T1, T2, T3, T4, T5, T6, T7, TRest) | argument 5 -> field Item6 of return (normal) | true |
| System.ValueTuple<,,,,,,,>.ValueTuple(T1, T2, T3, T4, T5, T6, T7, TRest) | argument 6 -> field Item7 of return (normal) | true |
| System.ValueTuple<,,,,,,,>.get_Item(int) | field Item1 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,,,,,,>.get_Item(int) | field Item2 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,,,,,,>.get_Item(int) | field Item3 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,,,,,,>.get_Item(int) | field Item4 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,,,,,,>.get_Item(int) | field Item5 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,,,,,,>.get_Item(int) | field Item6 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,,,,,,>.get_Item(int) | field Item7 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,,,,,>.ValueTuple(T1, T2, T3, T4, T5, T6, T7) | argument 0 -> field Item1 of return (normal) | true |
| System.ValueTuple<,,,,,,>.ValueTuple(T1, T2, T3, T4, T5, T6, T7) | argument 1 -> field Item2 of return (normal) | true |
| System.ValueTuple<,,,,,,>.ValueTuple(T1, T2, T3, T4, T5, T6, T7) | argument 2 -> field Item3 of return (normal) | true |
| System.ValueTuple<,,,,,,>.ValueTuple(T1, T2, T3, T4, T5, T6, T7) | argument 3 -> field Item4 of return (normal) | true |
| System.ValueTuple<,,,,,,>.ValueTuple(T1, T2, T3, T4, T5, T6, T7) | argument 4 -> field Item5 of return (normal) | true |
| System.ValueTuple<,,,,,,>.ValueTuple(T1, T2, T3, T4, T5, T6, T7) | argument 5 -> field Item6 of return (normal) | true |
| System.ValueTuple<,,,,,,>.ValueTuple(T1, T2, T3, T4, T5, T6, T7) | argument 6 -> field Item7 of return (normal) | true |
| System.ValueTuple<,,,,,,>.get_Item(int) | field Item1 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,,,,,>.get_Item(int) | field Item2 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,,,,,>.get_Item(int) | field Item3 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,,,,,>.get_Item(int) | field Item4 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,,,,,>.get_Item(int) | field Item5 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,,,,,>.get_Item(int) | field Item6 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,,,,,>.get_Item(int) | field Item7 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,,,,>.ValueTuple(T1, T2, T3, T4, T5, T6) | argument 0 -> field Item1 of return (normal) | true |
| System.ValueTuple<,,,,,>.ValueTuple(T1, T2, T3, T4, T5, T6) | argument 1 -> field Item2 of return (normal) | true |
| System.ValueTuple<,,,,,>.ValueTuple(T1, T2, T3, T4, T5, T6) | argument 2 -> field Item3 of return (normal) | true |
| System.ValueTuple<,,,,,>.ValueTuple(T1, T2, T3, T4, T5, T6) | argument 3 -> field Item4 of return (normal) | true |
| System.ValueTuple<,,,,,>.ValueTuple(T1, T2, T3, T4, T5, T6) | argument 4 -> field Item5 of return (normal) | true |
| System.ValueTuple<,,,,,>.ValueTuple(T1, T2, T3, T4, T5, T6) | argument 5 -> field Item6 of return (normal) | true |
| System.ValueTuple<,,,,,>.get_Item(int) | field Item1 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,,,,>.get_Item(int) | field Item2 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,,,,>.get_Item(int) | field Item3 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,,,,>.get_Item(int) | field Item4 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,,,,>.get_Item(int) | field Item5 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,,,,>.get_Item(int) | field Item6 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,,,>.ValueTuple(T1, T2, T3, T4, T5) | argument 0 -> field Item1 of return (normal) | true |
| System.ValueTuple<,,,,>.ValueTuple(T1, T2, T3, T4, T5) | argument 1 -> field Item2 of return (normal) | true |
| System.ValueTuple<,,,,>.ValueTuple(T1, T2, T3, T4, T5) | argument 2 -> field Item3 of return (normal) | true |
| System.ValueTuple<,,,,>.ValueTuple(T1, T2, T3, T4, T5) | argument 3 -> field Item4 of return (normal) | true |
| System.ValueTuple<,,,,>.ValueTuple(T1, T2, T3, T4, T5) | argument 4 -> field Item5 of return (normal) | true |
| System.ValueTuple<,,,,>.get_Item(int) | field Item1 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,,,>.get_Item(int) | field Item2 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,,,>.get_Item(int) | field Item3 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,,,>.get_Item(int) | field Item4 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,,,>.get_Item(int) | field Item5 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,,>.ValueTuple(T1, T2, T3, T4) | argument 0 -> field Item1 of return (normal) | true |
| System.ValueTuple<,,,>.ValueTuple(T1, T2, T3, T4) | argument 1 -> field Item2 of return (normal) | true |
| System.ValueTuple<,,,>.ValueTuple(T1, T2, T3, T4) | argument 2 -> field Item3 of return (normal) | true |
| System.ValueTuple<,,,>.ValueTuple(T1, T2, T3, T4) | argument 3 -> field Item4 of return (normal) | true |
| System.ValueTuple<,,,>.get_Item(int) | field Item1 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,,>.get_Item(int) | field Item2 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,,>.get_Item(int) | field Item3 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,,>.get_Item(int) | field Item4 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,>.ValueTuple(T1, T2, T3) | argument 0 -> field Item1 of return (normal) | true |
| System.ValueTuple<,,>.ValueTuple(T1, T2, T3) | argument 1 -> field Item2 of return (normal) | true |
| System.ValueTuple<,,>.ValueTuple(T1, T2, T3) | argument 2 -> field Item3 of return (normal) | true |
| System.ValueTuple<,,>.get_Item(int) | field Item1 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,>.get_Item(int) | field Item2 of argument -1 -> return (normal) | true |
| System.ValueTuple<,,>.get_Item(int) | field Item3 of argument -1 -> return (normal) | true |
| System.ValueTuple<,>.ValueTuple(T1, T2) | argument 0 -> field Item1 of return (normal) | true |
| System.ValueTuple<,>.ValueTuple(T1, T2) | argument 1 -> field Item2 of return (normal) | true |
| System.ValueTuple<,>.get_Item(int) | field Item1 of argument -1 -> return (normal) | true |
| System.ValueTuple<,>.get_Item(int) | field Item2 of argument -1 -> return (normal) | true |
| System.ValueTuple<>.ValueTuple(T1) | argument 0 -> field Item1 of return (normal) | true |
| System.ValueTuple<>.get_Item(int) | field Item1 of argument -1 -> return (normal) | true |
| System.Web.HttpCookie.get_Value() | argument -1 -> return (normal) | false |
| System.Web.HttpCookie.get_Values() | argument -1 -> return (normal) | false |
| System.Web.HttpServerUtility.UrlEncode(string) | argument 0 -> return (normal) | false |
| System.Web.HttpUtility.HtmlAttributeEncode(string) | argument 0 -> return (normal) | false |
| System.Web.HttpUtility.HtmlEncode(object) | argument 0 -> return (normal) | false |
| System.Web.HttpUtility.HtmlEncode(string) | argument 0 -> return (normal) | false |
| System.Web.HttpUtility.UrlEncode(string) | argument 0 -> return (normal) | false |
| System.Web.UI.WebControls.TextBox.get_Text() | argument -1 -> return (normal) | false |
