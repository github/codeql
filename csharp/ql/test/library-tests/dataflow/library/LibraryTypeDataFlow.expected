| LibraryTypeDataFlow.DataContract.get_AString() | qualifier -> return | false |
| System.Array.Add(object) | argument 0 -> qualifier | false |
| System.Array.AsReadOnly<T>(T[]) | qualifier -> return | false |
| System.Array.Clone() | qualifier -> return | false |
| System.Array.Find<T>(T[], Predicate<T>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Array.Find<T>(T[], Predicate<T>) | argument 0 -> return | false |
| System.Array.FindAll<T>(T[], Predicate<T>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Array.FindAll<T>(T[], Predicate<T>) | argument 0 -> return | false |
| System.Array.FindLast<T>(T[], Predicate<T>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Array.FindLast<T>(T[], Predicate<T>) | argument 0 -> return | false |
| System.Array.GetEnumerator() | qualifier -> return | false |
| System.Array.Insert(int, object) | argument 1 -> qualifier | false |
| System.Array.Reverse(Array) | qualifier -> return | false |
| System.Array.Reverse(Array, int, int) | qualifier -> return | false |
| System.Array.Reverse<T>(T[]) | qualifier -> return | false |
| System.Array.Reverse<T>(T[], int, int) | qualifier -> return | false |
| System.Boolean.Parse(string) | argument 0 -> return | false |
| System.Boolean.TryParse(string, out bool) | argument 0 -> argument 1 | false |
| System.Boolean.TryParse(string, out bool) | argument 0 -> return | false |
| System.Collections.ArrayList.Add(object) | argument 0 -> qualifier | false |
| System.Collections.ArrayList.AddRange(ICollection) | argument 0 -> qualifier | false |
| System.Collections.ArrayList.Clone() | qualifier -> return | false |
| System.Collections.ArrayList.FixedSize(ArrayList) | argument 0 -> return | false |
| System.Collections.ArrayList.FixedSize(IList) | argument 0 -> return | false |
| System.Collections.ArrayList.GetEnumerator() | qualifier -> return | false |
| System.Collections.ArrayList.GetEnumerator(int, int) | qualifier -> return | false |
| System.Collections.ArrayList.GetRange(int, int) | qualifier -> return | false |
| System.Collections.ArrayList.Insert(int, object) | argument 1 -> qualifier | false |
| System.Collections.ArrayList.InsertRange(int, ICollection) | argument 1 -> qualifier | false |
| System.Collections.ArrayList.Reverse() | qualifier -> return | false |
| System.Collections.ArrayList.Reverse(int, int) | qualifier -> return | false |
| System.Collections.BitArray.Clone() | qualifier -> return | false |
| System.Collections.BitArray.GetEnumerator() | qualifier -> return | false |
| System.Collections.CollectionBase.Add(object) | argument 0 -> qualifier | false |
| System.Collections.CollectionBase.GetEnumerator() | qualifier -> return | false |
| System.Collections.CollectionBase.Insert(int, object) | argument 1 -> qualifier | false |
| System.Collections.Concurrent.BlockingCollection<>.Add(T) | argument 0 -> qualifier | false |
| System.Collections.Concurrent.BlockingCollection<>.Add(T, CancellationToken) | argument 1 -> qualifier | false |
| System.Collections.Concurrent.BlockingCollection<>.GetEnumerator() | qualifier -> return | false |
| System.Collections.Concurrent.ConcurrentBag<>.Add(T) | argument 0 -> qualifier | false |
| System.Collections.Concurrent.ConcurrentBag<>.GetEnumerator() | qualifier -> return | false |
| System.Collections.Concurrent.ConcurrentDictionary<,>.Add(KeyValuePair<TKey, TValue>) | argument 0 -> qualifier | false |
| System.Collections.Concurrent.ConcurrentDictionary<,>.Add(TKey, TValue) | argument 1 -> qualifier | false |
| System.Collections.Concurrent.ConcurrentDictionary<,>.Add(object, object) | argument 1 -> qualifier | false |
| System.Collections.Concurrent.ConcurrentDictionary<,>.GetEnumerator() | qualifier -> return | false |
| System.Collections.Concurrent.ConcurrentDictionary<,>.get_Values() | qualifier -> return | false |
| System.Collections.Concurrent.ConcurrentQueue<>.GetEnumerator() | qualifier -> return | false |
| System.Collections.Concurrent.ConcurrentStack<>.GetEnumerator() | qualifier -> return | false |
| System.Collections.DictionaryBase.Add(object, object) | argument 1 -> qualifier | false |
| System.Collections.DictionaryBase.GetEnumerator() | qualifier -> return | false |
| System.Collections.Generic.Dictionary<,>.Add(KeyValuePair<TKey, TValue>) | argument 0 -> qualifier | false |
| System.Collections.Generic.Dictionary<,>.Add(TKey, TValue) | argument 1 -> qualifier | false |
| System.Collections.Generic.Dictionary<,>.Add(object, object) | argument 1 -> qualifier | false |
| System.Collections.Generic.Dictionary<,>.GetEnumerator() | qualifier -> return | false |
| System.Collections.Generic.Dictionary<,>.KeyCollection.Add(TKey) | argument 0 -> qualifier | false |
| System.Collections.Generic.Dictionary<,>.KeyCollection.GetEnumerator() | qualifier -> return | false |
| System.Collections.Generic.Dictionary<,>.ValueCollection.Add(TValue) | argument 0 -> qualifier | false |
| System.Collections.Generic.Dictionary<,>.ValueCollection.GetEnumerator() | qualifier -> return | false |
| System.Collections.Generic.Dictionary<,>.get_Values() | qualifier -> return | false |
| System.Collections.Generic.HashSet<>.Add(T) | argument 0 -> qualifier | false |
| System.Collections.Generic.HashSet<>.GetEnumerator() | qualifier -> return | false |
| System.Collections.Generic.ICollection<>.Add(T) | argument 0 -> qualifier | false |
| System.Collections.Generic.IDictionary<,>.Add(TKey, TValue) | argument 1 -> qualifier | false |
| System.Collections.Generic.IDictionary<,>.get_Values() | qualifier -> return | false |
| System.Collections.Generic.IEnumerable<>.GetEnumerator() | qualifier -> return | false |
| System.Collections.Generic.IEnumerator<>.get_Current() | qualifier -> return | true |
| System.Collections.Generic.IList<>.Insert(int, T) | argument 1 -> qualifier | false |
| System.Collections.Generic.IReadOnlyDictionary<,>.get_Values() | qualifier -> return | false |
| System.Collections.Generic.ISet<>.Add(T) | argument 0 -> qualifier | false |
| System.Collections.Generic.KeyValuePair<,>.KeyValuePair(TKey, TValue) | argument 1 -> return | true |
| System.Collections.Generic.KeyValuePair<,>.get_Value() | qualifier -> return | true |
| System.Collections.Generic.LinkedList<>.Add(T) | argument 0 -> qualifier | false |
| System.Collections.Generic.LinkedList<>.Find(T) | qualifier -> return | false |
| System.Collections.Generic.LinkedList<>.FindLast(T) | qualifier -> return | false |
| System.Collections.Generic.LinkedList<>.GetEnumerator() | qualifier -> return | false |
| System.Collections.Generic.List<>.Add(T) | argument 0 -> qualifier | false |
| System.Collections.Generic.List<>.Add(object) | argument 0 -> qualifier | false |
| System.Collections.Generic.List<>.AddRange(IEnumerable<T>) | argument 0 -> qualifier | false |
| System.Collections.Generic.List<>.AsReadOnly() | qualifier -> return | false |
| System.Collections.Generic.List<>.Find(Predicate<T>) | qualifier -> parameter 0 of argument 0 | false |
| System.Collections.Generic.List<>.Find(Predicate<T>) | qualifier -> return | false |
| System.Collections.Generic.List<>.FindAll(Predicate<T>) | qualifier -> parameter 0 of argument 0 | false |
| System.Collections.Generic.List<>.FindAll(Predicate<T>) | qualifier -> return | false |
| System.Collections.Generic.List<>.FindLast(Predicate<T>) | qualifier -> parameter 0 of argument 0 | false |
| System.Collections.Generic.List<>.FindLast(Predicate<T>) | qualifier -> return | false |
| System.Collections.Generic.List<>.GetEnumerator() | qualifier -> return | false |
| System.Collections.Generic.List<>.GetRange(int, int) | qualifier -> return | false |
| System.Collections.Generic.List<>.Insert(int, T) | argument 1 -> qualifier | false |
| System.Collections.Generic.List<>.Insert(int, object) | argument 1 -> qualifier | false |
| System.Collections.Generic.List<>.InsertRange(int, IEnumerable<T>) | argument 1 -> qualifier | false |
| System.Collections.Generic.List<>.Reverse() | qualifier -> return | false |
| System.Collections.Generic.List<>.Reverse(int, int) | qualifier -> return | false |
| System.Collections.Generic.Queue<>.GetEnumerator() | qualifier -> return | false |
| System.Collections.Generic.Queue<>.Peek() | qualifier -> return | false |
| System.Collections.Generic.SortedDictionary<,>.Add(KeyValuePair<TKey, TValue>) | argument 0 -> qualifier | false |
| System.Collections.Generic.SortedDictionary<,>.Add(TKey, TValue) | argument 1 -> qualifier | false |
| System.Collections.Generic.SortedDictionary<,>.Add(object, object) | argument 1 -> qualifier | false |
| System.Collections.Generic.SortedDictionary<,>.GetEnumerator() | qualifier -> return | false |
| System.Collections.Generic.SortedDictionary<,>.KeyCollection.Add(TKey) | argument 0 -> qualifier | false |
| System.Collections.Generic.SortedDictionary<,>.KeyCollection.GetEnumerator() | qualifier -> return | false |
| System.Collections.Generic.SortedDictionary<,>.ValueCollection.Add(TValue) | argument 0 -> qualifier | false |
| System.Collections.Generic.SortedDictionary<,>.ValueCollection.GetEnumerator() | qualifier -> return | false |
| System.Collections.Generic.SortedDictionary<,>.get_Values() | qualifier -> return | false |
| System.Collections.Generic.SortedList<,>.Add(KeyValuePair<TKey, TValue>) | argument 0 -> qualifier | false |
| System.Collections.Generic.SortedList<,>.Add(TKey, TValue) | argument 1 -> qualifier | false |
| System.Collections.Generic.SortedList<,>.Add(object, object) | argument 1 -> qualifier | false |
| System.Collections.Generic.SortedList<,>.GetEnumerator() | qualifier -> return | false |
| System.Collections.Generic.SortedList<,>.KeyList.Add(TKey) | argument 0 -> qualifier | false |
| System.Collections.Generic.SortedList<,>.KeyList.GetEnumerator() | qualifier -> return | false |
| System.Collections.Generic.SortedList<,>.KeyList.Insert(int, TKey) | argument 1 -> qualifier | false |
| System.Collections.Generic.SortedList<,>.ValueList.Add(TValue) | argument 0 -> qualifier | false |
| System.Collections.Generic.SortedList<,>.ValueList.GetEnumerator() | qualifier -> return | false |
| System.Collections.Generic.SortedList<,>.ValueList.Insert(int, TValue) | argument 1 -> qualifier | false |
| System.Collections.Generic.SortedList<,>.get_Values() | qualifier -> return | false |
| System.Collections.Generic.SortedSet<>.Add(T) | argument 0 -> qualifier | false |
| System.Collections.Generic.SortedSet<>.GetEnumerator() | qualifier -> return | false |
| System.Collections.Generic.SortedSet<>.Reverse() | qualifier -> return | false |
| System.Collections.Generic.Stack<>.GetEnumerator() | qualifier -> return | false |
| System.Collections.Generic.Stack<>.Peek() | qualifier -> return | false |
| System.Collections.Generic.Stack<>.Pop() | qualifier -> return | false |
| System.Collections.Hashtable.Add(object, object) | argument 1 -> qualifier | false |
| System.Collections.Hashtable.Clone() | qualifier -> return | false |
| System.Collections.Hashtable.GetEnumerator() | qualifier -> return | false |
| System.Collections.Hashtable.get_Values() | qualifier -> return | false |
| System.Collections.IDictionary.Add(object, object) | argument 1 -> qualifier | false |
| System.Collections.IDictionary.GetEnumerator() | qualifier -> return | false |
| System.Collections.IDictionary.get_Values() | qualifier -> return | false |
| System.Collections.IEnumerable.GetEnumerator() | qualifier -> return | false |
| System.Collections.IEnumerator.get_Current() | qualifier -> return | true |
| System.Collections.IList.Add(object) | argument 0 -> qualifier | false |
| System.Collections.IList.Insert(int, object) | argument 1 -> qualifier | false |
| System.Collections.ListDictionaryInternal.Add(object, object) | argument 1 -> qualifier | false |
| System.Collections.ListDictionaryInternal.GetEnumerator() | qualifier -> return | false |
| System.Collections.ListDictionaryInternal.get_Values() | qualifier -> return | false |
| System.Collections.ObjectModel.Collection<>.Add(T) | argument 0 -> qualifier | false |
| System.Collections.ObjectModel.Collection<>.Add(object) | argument 0 -> qualifier | false |
| System.Collections.ObjectModel.Collection<>.GetEnumerator() | qualifier -> return | false |
| System.Collections.ObjectModel.Collection<>.Insert(int, T) | argument 1 -> qualifier | false |
| System.Collections.ObjectModel.Collection<>.Insert(int, object) | argument 1 -> qualifier | false |
| System.Collections.ObjectModel.ReadOnlyCollection<>.Add(T) | argument 0 -> qualifier | false |
| System.Collections.ObjectModel.ReadOnlyCollection<>.Add(object) | argument 0 -> qualifier | false |
| System.Collections.ObjectModel.ReadOnlyCollection<>.GetEnumerator() | qualifier -> return | false |
| System.Collections.ObjectModel.ReadOnlyCollection<>.Insert(int, T) | argument 1 -> qualifier | false |
| System.Collections.ObjectModel.ReadOnlyCollection<>.Insert(int, object) | argument 1 -> qualifier | false |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.Add(KeyValuePair<TKey, TValue>) | argument 0 -> qualifier | false |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.Add(TKey, TValue) | argument 1 -> qualifier | false |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.Add(object, object) | argument 1 -> qualifier | false |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.GetEnumerator() | qualifier -> return | false |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.KeyCollection.Add(TKey) | argument 0 -> qualifier | false |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.KeyCollection.GetEnumerator() | qualifier -> return | false |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.ValueCollection.Add(TValue) | argument 0 -> qualifier | false |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.ValueCollection.GetEnumerator() | qualifier -> return | false |
| System.Collections.ObjectModel.ReadOnlyDictionary<,>.get_Values() | qualifier -> return | false |
| System.Collections.Queue.Clone() | qualifier -> return | false |
| System.Collections.Queue.GetEnumerator() | qualifier -> return | false |
| System.Collections.Queue.Peek() | qualifier -> return | false |
| System.Collections.ReadOnlyCollectionBase.GetEnumerator() | qualifier -> return | false |
| System.Collections.SortedList.Add(object, object) | argument 1 -> qualifier | false |
| System.Collections.SortedList.Clone() | qualifier -> return | false |
| System.Collections.SortedList.GetByIndex(int) | qualifier -> return | false |
| System.Collections.SortedList.GetEnumerator() | qualifier -> return | false |
| System.Collections.SortedList.GetValueList() | qualifier -> return | false |
| System.Collections.SortedList.get_Values() | qualifier -> return | false |
| System.Collections.Specialized.HybridDictionary.Add(object, object) | argument 1 -> qualifier | false |
| System.Collections.Specialized.HybridDictionary.GetEnumerator() | qualifier -> return | false |
| System.Collections.Specialized.HybridDictionary.get_Values() | qualifier -> return | false |
| System.Collections.Specialized.IOrderedDictionary.GetEnumerator() | qualifier -> return | false |
| System.Collections.Specialized.ListDictionary.Add(object, object) | argument 1 -> qualifier | false |
| System.Collections.Specialized.ListDictionary.GetEnumerator() | qualifier -> return | false |
| System.Collections.Specialized.ListDictionary.get_Values() | qualifier -> return | false |
| System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator() | qualifier -> return | false |
| System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.GetEnumerator() | qualifier -> return | false |
| System.Collections.Specialized.NameValueCollection.Add(NameValueCollection) | argument 0 -> qualifier | false |
| System.Collections.Specialized.NameValueCollection.Add(string, string) | argument 1 -> qualifier | false |
| System.Collections.Specialized.OrderedDictionary.Add(object, object) | argument 1 -> qualifier | false |
| System.Collections.Specialized.OrderedDictionary.AsReadOnly() | qualifier -> return | false |
| System.Collections.Specialized.OrderedDictionary.GetEnumerator() | qualifier -> return | false |
| System.Collections.Specialized.OrderedDictionary.get_Values() | qualifier -> return | false |
| System.Collections.Specialized.StringCollection.Add(object) | argument 0 -> qualifier | false |
| System.Collections.Specialized.StringCollection.Add(string) | argument 0 -> qualifier | false |
| System.Collections.Specialized.StringCollection.AddRange(String[]) | argument 0 -> qualifier | false |
| System.Collections.Specialized.StringCollection.GetEnumerator() | qualifier -> return | false |
| System.Collections.Specialized.StringCollection.Insert(int, object) | argument 1 -> qualifier | false |
| System.Collections.Specialized.StringCollection.Insert(int, string) | argument 1 -> qualifier | false |
| System.Collections.Specialized.StringDictionary.Add(string, string) | argument 1 -> qualifier | false |
| System.Collections.Specialized.StringDictionary.GetEnumerator() | qualifier -> return | false |
| System.Collections.Specialized.StringDictionary.get_Values() | qualifier -> return | false |
| System.Collections.Stack.Clone() | qualifier -> return | false |
| System.Collections.Stack.GetEnumerator() | qualifier -> return | false |
| System.Collections.Stack.Peek() | qualifier -> return | false |
| System.Collections.Stack.Pop() | qualifier -> return | false |
| System.ComponentModel.AttributeCollection.GetEnumerator() | qualifier -> return | false |
| System.ComponentModel.BindingList<>.Find(PropertyDescriptor, object) | qualifier -> return | false |
| System.ComponentModel.Design.DesignerCollection.GetEnumerator() | qualifier -> return | false |
| System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Add(object) | argument 0 -> qualifier | false |
| System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.GetEnumerator() | qualifier -> return | false |
| System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Insert(int, object) | argument 1 -> qualifier | false |
| System.ComponentModel.Design.DesignerVerbCollection.Add(DesignerVerb) | argument 0 -> qualifier | false |
| System.ComponentModel.Design.DesignerVerbCollection.AddRange(DesignerVerbCollection) | argument 0 -> qualifier | false |
| System.ComponentModel.Design.DesignerVerbCollection.AddRange(DesignerVerb[]) | argument 0 -> qualifier | false |
| System.ComponentModel.Design.DesignerVerbCollection.Insert(int, DesignerVerb) | argument 1 -> qualifier | false |
| System.ComponentModel.EventDescriptorCollection.Add(EventDescriptor) | argument 0 -> qualifier | false |
| System.ComponentModel.EventDescriptorCollection.Add(object) | argument 0 -> qualifier | false |
| System.ComponentModel.EventDescriptorCollection.Find(string, bool) | qualifier -> return | false |
| System.ComponentModel.EventDescriptorCollection.GetEnumerator() | qualifier -> return | false |
| System.ComponentModel.EventDescriptorCollection.Insert(int, EventDescriptor) | argument 1 -> qualifier | false |
| System.ComponentModel.EventDescriptorCollection.Insert(int, object) | argument 1 -> qualifier | false |
| System.ComponentModel.IBindingList.Find(PropertyDescriptor, object) | qualifier -> return | false |
| System.ComponentModel.ListSortDescriptionCollection.Add(object) | argument 0 -> qualifier | false |
| System.ComponentModel.ListSortDescriptionCollection.GetEnumerator() | qualifier -> return | false |
| System.ComponentModel.ListSortDescriptionCollection.Insert(int, object) | argument 1 -> qualifier | false |
| System.ComponentModel.PropertyDescriptorCollection.Add(PropertyDescriptor) | argument 0 -> qualifier | false |
| System.ComponentModel.PropertyDescriptorCollection.Add(object) | argument 0 -> qualifier | false |
| System.ComponentModel.PropertyDescriptorCollection.Add(object, object) | argument 1 -> qualifier | false |
| System.ComponentModel.PropertyDescriptorCollection.Find(string, bool) | qualifier -> return | false |
| System.ComponentModel.PropertyDescriptorCollection.GetEnumerator() | qualifier -> return | false |
| System.ComponentModel.PropertyDescriptorCollection.Insert(int, PropertyDescriptor) | argument 1 -> qualifier | false |
| System.ComponentModel.PropertyDescriptorCollection.Insert(int, object) | argument 1 -> qualifier | false |
| System.ComponentModel.TypeConverter.StandardValuesCollection.GetEnumerator() | qualifier -> return | false |
| System.Convert.ChangeType(object, Type) | argument 0 -> return | false |
| System.Convert.ChangeType(object, Type, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ChangeType(object, TypeCode) | argument 0 -> return | false |
| System.Convert.ChangeType(object, TypeCode, IFormatProvider) | argument 0 -> return | false |
| System.Convert.FromBase64CharArray(Char[], int, int) | argument 0 -> return | false |
| System.Convert.FromBase64String(string) | argument 0 -> return | false |
| System.Convert.GetTypeCode(object) | argument 0 -> return | false |
| System.Convert.IsDBNull(object) | argument 0 -> return | false |
| System.Convert.ToBase64CharArray(Byte[], int, int, Char[], int) | argument 0 -> return | false |
| System.Convert.ToBase64CharArray(Byte[], int, int, Char[], int, Base64FormattingOptions) | argument 0 -> return | false |
| System.Convert.ToBase64String(Byte[]) | argument 0 -> return | false |
| System.Convert.ToBase64String(Byte[], Base64FormattingOptions) | argument 0 -> return | false |
| System.Convert.ToBase64String(Byte[], int, int) | argument 0 -> return | false |
| System.Convert.ToBase64String(Byte[], int, int, Base64FormattingOptions) | argument 0 -> return | false |
| System.Convert.ToBase64String(ReadOnlySpan<Byte>, Base64FormattingOptions) | argument 0 -> return | false |
| System.Convert.ToBoolean(DateTime) | argument 0 -> return | false |
| System.Convert.ToBoolean(bool) | argument 0 -> return | false |
| System.Convert.ToBoolean(byte) | argument 0 -> return | false |
| System.Convert.ToBoolean(char) | argument 0 -> return | false |
| System.Convert.ToBoolean(decimal) | argument 0 -> return | false |
| System.Convert.ToBoolean(double) | argument 0 -> return | false |
| System.Convert.ToBoolean(float) | argument 0 -> return | false |
| System.Convert.ToBoolean(int) | argument 0 -> return | false |
| System.Convert.ToBoolean(long) | argument 0 -> return | false |
| System.Convert.ToBoolean(object) | argument 0 -> return | false |
| System.Convert.ToBoolean(object, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToBoolean(sbyte) | argument 0 -> return | false |
| System.Convert.ToBoolean(short) | argument 0 -> return | false |
| System.Convert.ToBoolean(string) | argument 0 -> return | false |
| System.Convert.ToBoolean(string, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToBoolean(uint) | argument 0 -> return | false |
| System.Convert.ToBoolean(ulong) | argument 0 -> return | false |
| System.Convert.ToBoolean(ushort) | argument 0 -> return | false |
| System.Convert.ToByte(DateTime) | argument 0 -> return | false |
| System.Convert.ToByte(bool) | argument 0 -> return | false |
| System.Convert.ToByte(byte) | argument 0 -> return | false |
| System.Convert.ToByte(char) | argument 0 -> return | false |
| System.Convert.ToByte(decimal) | argument 0 -> return | false |
| System.Convert.ToByte(double) | argument 0 -> return | false |
| System.Convert.ToByte(float) | argument 0 -> return | false |
| System.Convert.ToByte(int) | argument 0 -> return | false |
| System.Convert.ToByte(long) | argument 0 -> return | false |
| System.Convert.ToByte(object) | argument 0 -> return | false |
| System.Convert.ToByte(object, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToByte(sbyte) | argument 0 -> return | false |
| System.Convert.ToByte(short) | argument 0 -> return | false |
| System.Convert.ToByte(string) | argument 0 -> return | false |
| System.Convert.ToByte(string, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToByte(string, int) | argument 0 -> return | false |
| System.Convert.ToByte(uint) | argument 0 -> return | false |
| System.Convert.ToByte(ulong) | argument 0 -> return | false |
| System.Convert.ToByte(ushort) | argument 0 -> return | false |
| System.Convert.ToChar(DateTime) | argument 0 -> return | false |
| System.Convert.ToChar(bool) | argument 0 -> return | false |
| System.Convert.ToChar(byte) | argument 0 -> return | false |
| System.Convert.ToChar(char) | argument 0 -> return | false |
| System.Convert.ToChar(decimal) | argument 0 -> return | false |
| System.Convert.ToChar(double) | argument 0 -> return | false |
| System.Convert.ToChar(float) | argument 0 -> return | false |
| System.Convert.ToChar(int) | argument 0 -> return | false |
| System.Convert.ToChar(long) | argument 0 -> return | false |
| System.Convert.ToChar(object) | argument 0 -> return | false |
| System.Convert.ToChar(object, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToChar(sbyte) | argument 0 -> return | false |
| System.Convert.ToChar(short) | argument 0 -> return | false |
| System.Convert.ToChar(string) | argument 0 -> return | false |
| System.Convert.ToChar(string, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToChar(uint) | argument 0 -> return | false |
| System.Convert.ToChar(ulong) | argument 0 -> return | false |
| System.Convert.ToChar(ushort) | argument 0 -> return | false |
| System.Convert.ToDateTime(DateTime) | argument 0 -> return | false |
| System.Convert.ToDateTime(bool) | argument 0 -> return | false |
| System.Convert.ToDateTime(byte) | argument 0 -> return | false |
| System.Convert.ToDateTime(char) | argument 0 -> return | false |
| System.Convert.ToDateTime(decimal) | argument 0 -> return | false |
| System.Convert.ToDateTime(double) | argument 0 -> return | false |
| System.Convert.ToDateTime(float) | argument 0 -> return | false |
| System.Convert.ToDateTime(int) | argument 0 -> return | false |
| System.Convert.ToDateTime(long) | argument 0 -> return | false |
| System.Convert.ToDateTime(object) | argument 0 -> return | false |
| System.Convert.ToDateTime(object, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToDateTime(sbyte) | argument 0 -> return | false |
| System.Convert.ToDateTime(short) | argument 0 -> return | false |
| System.Convert.ToDateTime(string) | argument 0 -> return | false |
| System.Convert.ToDateTime(string, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToDateTime(uint) | argument 0 -> return | false |
| System.Convert.ToDateTime(ulong) | argument 0 -> return | false |
| System.Convert.ToDateTime(ushort) | argument 0 -> return | false |
| System.Convert.ToDecimal(DateTime) | argument 0 -> return | false |
| System.Convert.ToDecimal(bool) | argument 0 -> return | false |
| System.Convert.ToDecimal(byte) | argument 0 -> return | false |
| System.Convert.ToDecimal(char) | argument 0 -> return | false |
| System.Convert.ToDecimal(decimal) | argument 0 -> return | false |
| System.Convert.ToDecimal(double) | argument 0 -> return | false |
| System.Convert.ToDecimal(float) | argument 0 -> return | false |
| System.Convert.ToDecimal(int) | argument 0 -> return | false |
| System.Convert.ToDecimal(long) | argument 0 -> return | false |
| System.Convert.ToDecimal(object) | argument 0 -> return | false |
| System.Convert.ToDecimal(object, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToDecimal(sbyte) | argument 0 -> return | false |
| System.Convert.ToDecimal(short) | argument 0 -> return | false |
| System.Convert.ToDecimal(string) | argument 0 -> return | false |
| System.Convert.ToDecimal(string, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToDecimal(uint) | argument 0 -> return | false |
| System.Convert.ToDecimal(ulong) | argument 0 -> return | false |
| System.Convert.ToDecimal(ushort) | argument 0 -> return | false |
| System.Convert.ToDouble(DateTime) | argument 0 -> return | false |
| System.Convert.ToDouble(bool) | argument 0 -> return | false |
| System.Convert.ToDouble(byte) | argument 0 -> return | false |
| System.Convert.ToDouble(char) | argument 0 -> return | false |
| System.Convert.ToDouble(decimal) | argument 0 -> return | false |
| System.Convert.ToDouble(double) | argument 0 -> return | false |
| System.Convert.ToDouble(float) | argument 0 -> return | false |
| System.Convert.ToDouble(int) | argument 0 -> return | false |
| System.Convert.ToDouble(long) | argument 0 -> return | false |
| System.Convert.ToDouble(object) | argument 0 -> return | false |
| System.Convert.ToDouble(object, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToDouble(sbyte) | argument 0 -> return | false |
| System.Convert.ToDouble(short) | argument 0 -> return | false |
| System.Convert.ToDouble(string) | argument 0 -> return | false |
| System.Convert.ToDouble(string, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToDouble(uint) | argument 0 -> return | false |
| System.Convert.ToDouble(ulong) | argument 0 -> return | false |
| System.Convert.ToDouble(ushort) | argument 0 -> return | false |
| System.Convert.ToInt16(DateTime) | argument 0 -> return | false |
| System.Convert.ToInt16(bool) | argument 0 -> return | false |
| System.Convert.ToInt16(byte) | argument 0 -> return | false |
| System.Convert.ToInt16(char) | argument 0 -> return | false |
| System.Convert.ToInt16(decimal) | argument 0 -> return | false |
| System.Convert.ToInt16(double) | argument 0 -> return | false |
| System.Convert.ToInt16(float) | argument 0 -> return | false |
| System.Convert.ToInt16(int) | argument 0 -> return | false |
| System.Convert.ToInt16(long) | argument 0 -> return | false |
| System.Convert.ToInt16(object) | argument 0 -> return | false |
| System.Convert.ToInt16(object, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToInt16(sbyte) | argument 0 -> return | false |
| System.Convert.ToInt16(short) | argument 0 -> return | false |
| System.Convert.ToInt16(string) | argument 0 -> return | false |
| System.Convert.ToInt16(string, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToInt16(string, int) | argument 0 -> return | false |
| System.Convert.ToInt16(uint) | argument 0 -> return | false |
| System.Convert.ToInt16(ulong) | argument 0 -> return | false |
| System.Convert.ToInt16(ushort) | argument 0 -> return | false |
| System.Convert.ToInt32(DateTime) | argument 0 -> return | false |
| System.Convert.ToInt32(bool) | argument 0 -> return | false |
| System.Convert.ToInt32(byte) | argument 0 -> return | false |
| System.Convert.ToInt32(char) | argument 0 -> return | false |
| System.Convert.ToInt32(decimal) | argument 0 -> return | false |
| System.Convert.ToInt32(double) | argument 0 -> return | false |
| System.Convert.ToInt32(float) | argument 0 -> return | false |
| System.Convert.ToInt32(int) | argument 0 -> return | false |
| System.Convert.ToInt32(long) | argument 0 -> return | false |
| System.Convert.ToInt32(object) | argument 0 -> return | false |
| System.Convert.ToInt32(object, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToInt32(sbyte) | argument 0 -> return | false |
| System.Convert.ToInt32(short) | argument 0 -> return | false |
| System.Convert.ToInt32(string) | argument 0 -> return | false |
| System.Convert.ToInt32(string, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToInt32(string, int) | argument 0 -> return | false |
| System.Convert.ToInt32(uint) | argument 0 -> return | false |
| System.Convert.ToInt32(ulong) | argument 0 -> return | false |
| System.Convert.ToInt32(ushort) | argument 0 -> return | false |
| System.Convert.ToInt64(DateTime) | argument 0 -> return | false |
| System.Convert.ToInt64(bool) | argument 0 -> return | false |
| System.Convert.ToInt64(byte) | argument 0 -> return | false |
| System.Convert.ToInt64(char) | argument 0 -> return | false |
| System.Convert.ToInt64(decimal) | argument 0 -> return | false |
| System.Convert.ToInt64(double) | argument 0 -> return | false |
| System.Convert.ToInt64(float) | argument 0 -> return | false |
| System.Convert.ToInt64(int) | argument 0 -> return | false |
| System.Convert.ToInt64(long) | argument 0 -> return | false |
| System.Convert.ToInt64(object) | argument 0 -> return | false |
| System.Convert.ToInt64(object, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToInt64(sbyte) | argument 0 -> return | false |
| System.Convert.ToInt64(short) | argument 0 -> return | false |
| System.Convert.ToInt64(string) | argument 0 -> return | false |
| System.Convert.ToInt64(string, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToInt64(string, int) | argument 0 -> return | false |
| System.Convert.ToInt64(uint) | argument 0 -> return | false |
| System.Convert.ToInt64(ulong) | argument 0 -> return | false |
| System.Convert.ToInt64(ushort) | argument 0 -> return | false |
| System.Convert.ToSByte(DateTime) | argument 0 -> return | false |
| System.Convert.ToSByte(bool) | argument 0 -> return | false |
| System.Convert.ToSByte(byte) | argument 0 -> return | false |
| System.Convert.ToSByte(char) | argument 0 -> return | false |
| System.Convert.ToSByte(decimal) | argument 0 -> return | false |
| System.Convert.ToSByte(double) | argument 0 -> return | false |
| System.Convert.ToSByte(float) | argument 0 -> return | false |
| System.Convert.ToSByte(int) | argument 0 -> return | false |
| System.Convert.ToSByte(long) | argument 0 -> return | false |
| System.Convert.ToSByte(object) | argument 0 -> return | false |
| System.Convert.ToSByte(object, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToSByte(sbyte) | argument 0 -> return | false |
| System.Convert.ToSByte(short) | argument 0 -> return | false |
| System.Convert.ToSByte(string) | argument 0 -> return | false |
| System.Convert.ToSByte(string, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToSByte(string, int) | argument 0 -> return | false |
| System.Convert.ToSByte(uint) | argument 0 -> return | false |
| System.Convert.ToSByte(ulong) | argument 0 -> return | false |
| System.Convert.ToSByte(ushort) | argument 0 -> return | false |
| System.Convert.ToSingle(DateTime) | argument 0 -> return | false |
| System.Convert.ToSingle(bool) | argument 0 -> return | false |
| System.Convert.ToSingle(byte) | argument 0 -> return | false |
| System.Convert.ToSingle(char) | argument 0 -> return | false |
| System.Convert.ToSingle(decimal) | argument 0 -> return | false |
| System.Convert.ToSingle(double) | argument 0 -> return | false |
| System.Convert.ToSingle(float) | argument 0 -> return | false |
| System.Convert.ToSingle(int) | argument 0 -> return | false |
| System.Convert.ToSingle(long) | argument 0 -> return | false |
| System.Convert.ToSingle(object) | argument 0 -> return | false |
| System.Convert.ToSingle(object, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToSingle(sbyte) | argument 0 -> return | false |
| System.Convert.ToSingle(short) | argument 0 -> return | false |
| System.Convert.ToSingle(string) | argument 0 -> return | false |
| System.Convert.ToSingle(string, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToSingle(uint) | argument 0 -> return | false |
| System.Convert.ToSingle(ulong) | argument 0 -> return | false |
| System.Convert.ToSingle(ushort) | argument 0 -> return | false |
| System.Convert.ToString(DateTime) | argument 0 -> return | false |
| System.Convert.ToString(DateTime, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToString(bool) | argument 0 -> return | false |
| System.Convert.ToString(bool, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToString(byte) | argument 0 -> return | false |
| System.Convert.ToString(byte, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToString(byte, int) | argument 0 -> return | false |
| System.Convert.ToString(char) | argument 0 -> return | false |
| System.Convert.ToString(char, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToString(decimal) | argument 0 -> return | false |
| System.Convert.ToString(decimal, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToString(double) | argument 0 -> return | false |
| System.Convert.ToString(double, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToString(float) | argument 0 -> return | false |
| System.Convert.ToString(float, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToString(int) | argument 0 -> return | false |
| System.Convert.ToString(int, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToString(int, int) | argument 0 -> return | false |
| System.Convert.ToString(long) | argument 0 -> return | false |
| System.Convert.ToString(long, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToString(long, int) | argument 0 -> return | false |
| System.Convert.ToString(object) | argument 0 -> return | false |
| System.Convert.ToString(object, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToString(sbyte) | argument 0 -> return | false |
| System.Convert.ToString(sbyte, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToString(short) | argument 0 -> return | false |
| System.Convert.ToString(short, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToString(short, int) | argument 0 -> return | false |
| System.Convert.ToString(string) | argument 0 -> return | false |
| System.Convert.ToString(string, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToString(uint) | argument 0 -> return | false |
| System.Convert.ToString(uint, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToString(ulong) | argument 0 -> return | false |
| System.Convert.ToString(ulong, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToString(ushort) | argument 0 -> return | false |
| System.Convert.ToString(ushort, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToUInt16(DateTime) | argument 0 -> return | false |
| System.Convert.ToUInt16(bool) | argument 0 -> return | false |
| System.Convert.ToUInt16(byte) | argument 0 -> return | false |
| System.Convert.ToUInt16(char) | argument 0 -> return | false |
| System.Convert.ToUInt16(decimal) | argument 0 -> return | false |
| System.Convert.ToUInt16(double) | argument 0 -> return | false |
| System.Convert.ToUInt16(float) | argument 0 -> return | false |
| System.Convert.ToUInt16(int) | argument 0 -> return | false |
| System.Convert.ToUInt16(long) | argument 0 -> return | false |
| System.Convert.ToUInt16(object) | argument 0 -> return | false |
| System.Convert.ToUInt16(object, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToUInt16(sbyte) | argument 0 -> return | false |
| System.Convert.ToUInt16(short) | argument 0 -> return | false |
| System.Convert.ToUInt16(string) | argument 0 -> return | false |
| System.Convert.ToUInt16(string, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToUInt16(string, int) | argument 0 -> return | false |
| System.Convert.ToUInt16(uint) | argument 0 -> return | false |
| System.Convert.ToUInt16(ulong) | argument 0 -> return | false |
| System.Convert.ToUInt16(ushort) | argument 0 -> return | false |
| System.Convert.ToUInt32(DateTime) | argument 0 -> return | false |
| System.Convert.ToUInt32(bool) | argument 0 -> return | false |
| System.Convert.ToUInt32(byte) | argument 0 -> return | false |
| System.Convert.ToUInt32(char) | argument 0 -> return | false |
| System.Convert.ToUInt32(decimal) | argument 0 -> return | false |
| System.Convert.ToUInt32(double) | argument 0 -> return | false |
| System.Convert.ToUInt32(float) | argument 0 -> return | false |
| System.Convert.ToUInt32(int) | argument 0 -> return | false |
| System.Convert.ToUInt32(long) | argument 0 -> return | false |
| System.Convert.ToUInt32(object) | argument 0 -> return | false |
| System.Convert.ToUInt32(object, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToUInt32(sbyte) | argument 0 -> return | false |
| System.Convert.ToUInt32(short) | argument 0 -> return | false |
| System.Convert.ToUInt32(string) | argument 0 -> return | false |
| System.Convert.ToUInt32(string, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToUInt32(string, int) | argument 0 -> return | false |
| System.Convert.ToUInt32(uint) | argument 0 -> return | false |
| System.Convert.ToUInt32(ulong) | argument 0 -> return | false |
| System.Convert.ToUInt32(ushort) | argument 0 -> return | false |
| System.Convert.ToUInt64(DateTime) | argument 0 -> return | false |
| System.Convert.ToUInt64(bool) | argument 0 -> return | false |
| System.Convert.ToUInt64(byte) | argument 0 -> return | false |
| System.Convert.ToUInt64(char) | argument 0 -> return | false |
| System.Convert.ToUInt64(decimal) | argument 0 -> return | false |
| System.Convert.ToUInt64(double) | argument 0 -> return | false |
| System.Convert.ToUInt64(float) | argument 0 -> return | false |
| System.Convert.ToUInt64(int) | argument 0 -> return | false |
| System.Convert.ToUInt64(long) | argument 0 -> return | false |
| System.Convert.ToUInt64(object) | argument 0 -> return | false |
| System.Convert.ToUInt64(object, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToUInt64(sbyte) | argument 0 -> return | false |
| System.Convert.ToUInt64(short) | argument 0 -> return | false |
| System.Convert.ToUInt64(string) | argument 0 -> return | false |
| System.Convert.ToUInt64(string, IFormatProvider) | argument 0 -> return | false |
| System.Convert.ToUInt64(string, int) | argument 0 -> return | false |
| System.Convert.ToUInt64(uint) | argument 0 -> return | false |
| System.Convert.ToUInt64(ulong) | argument 0 -> return | false |
| System.Convert.ToUInt64(ushort) | argument 0 -> return | false |
| System.Convert.TryFromBase64Chars(ReadOnlySpan<Char>, Span<Byte>, out int) | argument 0 -> return | false |
| System.Convert.TryFromBase64String(string, Span<Byte>, out int) | argument 0 -> return | false |
| System.Convert.TryToBase64Chars(ReadOnlySpan<Byte>, Span<Char>, out int, Base64FormattingOptions) | argument 0 -> return | false |
| System.Dynamic.ExpandoObject.Add(KeyValuePair<String, Object>) | argument 0 -> qualifier | false |
| System.Dynamic.ExpandoObject.Add(string, object) | argument 1 -> qualifier | false |
| System.Dynamic.ExpandoObject.GetEnumerator() | qualifier -> return | false |
| System.ICloneable.Clone() | qualifier -> return | false |
| System.IO.BufferedStream.BeginRead(Byte[], int, int, AsyncCallback, object) | qualifier -> argument 0 | false |
| System.IO.BufferedStream.BeginWrite(Byte[], int, int, AsyncCallback, object) | argument 0 -> qualifier | false |
| System.IO.BufferedStream.CopyTo(Stream, int) | qualifier -> argument 0 | false |
| System.IO.BufferedStream.CopyToAsync(Stream, int, CancellationToken) | qualifier -> argument 0 | false |
| System.IO.BufferedStream.Read(Byte[], int, int) | qualifier -> argument 0 | false |
| System.IO.BufferedStream.ReadAsync(Byte[], int, int, CancellationToken) | qualifier -> argument 0 | false |
| System.IO.BufferedStream.Write(Byte[], int, int) | argument 0 -> qualifier | false |
| System.IO.BufferedStream.WriteAsync(Byte[], int, int, CancellationToken) | argument 0 -> qualifier | false |
| System.IO.Compression.DeflateStream.BeginRead(Byte[], int, int, AsyncCallback, object) | qualifier -> argument 0 | false |
| System.IO.Compression.DeflateStream.BeginWrite(Byte[], int, int, AsyncCallback, object) | argument 0 -> qualifier | false |
| System.IO.Compression.DeflateStream.CopyTo(Stream, int) | qualifier -> argument 0 | false |
| System.IO.Compression.DeflateStream.CopyToAsync(Stream, int, CancellationToken) | qualifier -> argument 0 | false |
| System.IO.Compression.DeflateStream.DeflateStream(Stream, CompressionLevel) | argument 0 -> return | false |
| System.IO.Compression.DeflateStream.DeflateStream(Stream, CompressionLevel, bool) | argument 0 -> return | false |
| System.IO.Compression.DeflateStream.DeflateStream(Stream, CompressionMode) | argument 0 -> return | false |
| System.IO.Compression.DeflateStream.DeflateStream(Stream, CompressionMode, bool) | argument 0 -> return | false |
| System.IO.Compression.DeflateStream.Read(Byte[], int, int) | qualifier -> argument 0 | false |
| System.IO.Compression.DeflateStream.ReadAsync(Byte[], int, int, CancellationToken) | qualifier -> argument 0 | false |
| System.IO.Compression.DeflateStream.Write(Byte[], int, int) | argument 0 -> qualifier | false |
| System.IO.Compression.DeflateStream.WriteAsync(Byte[], int, int, CancellationToken) | argument 0 -> qualifier | false |
| System.IO.Compression.GZipStream.BeginRead(Byte[], int, int, AsyncCallback, object) | qualifier -> argument 0 | false |
| System.IO.Compression.GZipStream.BeginWrite(Byte[], int, int, AsyncCallback, object) | argument 0 -> qualifier | false |
| System.IO.Compression.GZipStream.CopyTo(Stream, int) | qualifier -> argument 0 | false |
| System.IO.Compression.GZipStream.CopyToAsync(Stream, int, CancellationToken) | qualifier -> argument 0 | false |
| System.IO.Compression.GZipStream.Read(Byte[], int, int) | qualifier -> argument 0 | false |
| System.IO.Compression.GZipStream.ReadAsync(Byte[], int, int, CancellationToken) | qualifier -> argument 0 | false |
| System.IO.Compression.GZipStream.Write(Byte[], int, int) | argument 0 -> qualifier | false |
| System.IO.Compression.GZipStream.WriteAsync(Byte[], int, int, CancellationToken) | argument 0 -> qualifier | false |
| System.IO.FileStream.BeginRead(Byte[], int, int, AsyncCallback, object) | qualifier -> argument 0 | false |
| System.IO.FileStream.BeginWrite(Byte[], int, int, AsyncCallback, object) | argument 0 -> qualifier | false |
| System.IO.FileStream.Read(Byte[], int, int) | qualifier -> argument 0 | false |
| System.IO.FileStream.ReadAsync(Byte[], int, int, CancellationToken) | qualifier -> argument 0 | false |
| System.IO.FileStream.Write(Byte[], int, int) | argument 0 -> qualifier | false |
| System.IO.FileStream.WriteAsync(Byte[], int, int, CancellationToken) | argument 0 -> qualifier | false |
| System.IO.MemoryStream.CopyTo(Stream, int) | qualifier -> argument 0 | false |
| System.IO.MemoryStream.CopyToAsync(Stream, int, CancellationToken) | qualifier -> argument 0 | false |
| System.IO.MemoryStream.MemoryStream(Byte[]) | argument 0 -> return | false |
| System.IO.MemoryStream.MemoryStream(Byte[], bool) | argument 0 -> return | false |
| System.IO.MemoryStream.MemoryStream(Byte[], int, int) | argument 0 -> return | false |
| System.IO.MemoryStream.MemoryStream(Byte[], int, int, bool) | argument 0 -> return | false |
| System.IO.MemoryStream.MemoryStream(Byte[], int, int, bool, bool) | argument 0 -> return | false |
| System.IO.MemoryStream.Read(Byte[], int, int) | qualifier -> argument 0 | false |
| System.IO.MemoryStream.ReadAsync(Byte[], int, int, CancellationToken) | qualifier -> argument 0 | false |
| System.IO.MemoryStream.ToArray() | qualifier -> return | false |
| System.IO.MemoryStream.Write(Byte[], int, int) | argument 0 -> qualifier | false |
| System.IO.MemoryStream.WriteAsync(Byte[], int, int, CancellationToken) | argument 0 -> qualifier | false |
| System.IO.Path.Combine(string, string) | argument 0 -> return | false |
| System.IO.Path.Combine(string, string) | argument 1 -> return | false |
| System.IO.Path.Combine(string, string, string) | argument 0 -> return | false |
| System.IO.Path.Combine(string, string, string) | argument 1 -> return | false |
| System.IO.Path.Combine(string, string, string) | argument 2 -> return | false |
| System.IO.Path.Combine(string, string, string, string) | argument 0 -> return | false |
| System.IO.Path.Combine(string, string, string, string) | argument 1 -> return | false |
| System.IO.Path.Combine(string, string, string, string) | argument 2 -> return | false |
| System.IO.Path.Combine(string, string, string, string) | argument 3 -> return | false |
| System.IO.Path.GetDirectoryName(ReadOnlySpan<Char>) | argument 0 -> return | false |
| System.IO.Path.GetDirectoryName(string) | argument 0 -> return | false |
| System.IO.Path.GetExtension(ReadOnlySpan<Char>) | argument 0 -> return | false |
| System.IO.Path.GetExtension(string) | argument 0 -> return | false |
| System.IO.Path.GetFileName(ReadOnlySpan<Char>) | argument 0 -> return | false |
| System.IO.Path.GetFileName(string) | argument 0 -> return | false |
| System.IO.Path.GetFileNameWithoutExtension(ReadOnlySpan<Char>) | argument 0 -> return | false |
| System.IO.Path.GetFileNameWithoutExtension(string) | argument 0 -> return | false |
| System.IO.Path.GetFullPath(string) | argument 0 -> return | false |
| System.IO.Path.GetFullPath(string, string) | argument 0 -> return | false |
| System.IO.Path.GetPathRoot(ReadOnlySpan<Char>) | argument 0 -> return | false |
| System.IO.Path.GetPathRoot(string) | argument 0 -> return | false |
| System.IO.Path.GetRelativePath(string, string) | argument 1 -> return | false |
| System.IO.Pipes.PipeStream.BeginRead(Byte[], int, int, AsyncCallback, object) | qualifier -> argument 0 | false |
| System.IO.Pipes.PipeStream.BeginWrite(Byte[], int, int, AsyncCallback, object) | argument 0 -> qualifier | false |
| System.IO.Pipes.PipeStream.Read(Byte[], int, int) | qualifier -> argument 0 | false |
| System.IO.Pipes.PipeStream.ReadAsync(Byte[], int, int, CancellationToken) | qualifier -> argument 0 | false |
| System.IO.Pipes.PipeStream.Write(Byte[], int, int) | argument 0 -> qualifier | false |
| System.IO.Pipes.PipeStream.WriteAsync(Byte[], int, int, CancellationToken) | argument 0 -> qualifier | false |
| System.IO.Stream.BeginRead(Byte[], int, int, AsyncCallback, object) | qualifier -> argument 0 | false |
| System.IO.Stream.BeginWrite(Byte[], int, int, AsyncCallback, object) | argument 0 -> qualifier | false |
| System.IO.Stream.CopyTo(Stream) | qualifier -> argument 0 | false |
| System.IO.Stream.CopyTo(Stream, int) | qualifier -> argument 0 | false |
| System.IO.Stream.CopyToAsync(Stream) | qualifier -> argument 0 | false |
| System.IO.Stream.CopyToAsync(Stream, CancellationToken) | qualifier -> argument 0 | false |
| System.IO.Stream.CopyToAsync(Stream, int) | qualifier -> argument 0 | false |
| System.IO.Stream.CopyToAsync(Stream, int, CancellationToken) | qualifier -> argument 0 | false |
| System.IO.Stream.Read(Byte[], int, int) | qualifier -> argument 0 | false |
| System.IO.Stream.ReadAsync(Byte[], int, int) | qualifier -> argument 0 | false |
| System.IO.Stream.ReadAsync(Byte[], int, int, CancellationToken) | qualifier -> argument 0 | false |
| System.IO.Stream.Write(Byte[], int, int) | argument 0 -> qualifier | false |
| System.IO.Stream.WriteAsync(Byte[], int, int) | argument 0 -> qualifier | false |
| System.IO.Stream.WriteAsync(Byte[], int, int, CancellationToken) | argument 0 -> qualifier | false |
| System.IO.StringReader.Read() | qualifier -> return | false |
| System.IO.StringReader.Read(Char[], int, int) | qualifier -> return | false |
| System.IO.StringReader.Read(Span<Char>) | qualifier -> return | false |
| System.IO.StringReader.ReadAsync(Char[], int, int) | qualifier -> return | false |
| System.IO.StringReader.ReadAsync(Memory<Char>, CancellationToken) | qualifier -> return | false |
| System.IO.StringReader.ReadBlock(Span<Char>) | qualifier -> return | false |
| System.IO.StringReader.ReadBlockAsync(Char[], int, int) | qualifier -> return | false |
| System.IO.StringReader.ReadBlockAsync(Memory<Char>, CancellationToken) | qualifier -> return | false |
| System.IO.StringReader.ReadLine() | qualifier -> return | false |
| System.IO.StringReader.ReadLineAsync() | qualifier -> return | false |
| System.IO.StringReader.ReadToEnd() | qualifier -> return | false |
| System.IO.StringReader.ReadToEndAsync() | qualifier -> return | false |
| System.IO.StringReader.StringReader(string) | argument 0 -> return | false |
| System.IO.TextReader.Read() | qualifier -> return | false |
| System.IO.TextReader.Read(Char[], int, int) | qualifier -> return | false |
| System.IO.TextReader.Read(Span<Char>) | qualifier -> return | false |
| System.IO.TextReader.ReadAsync(Char[], int, int) | qualifier -> return | false |
| System.IO.TextReader.ReadAsync(Memory<Char>, CancellationToken) | qualifier -> return | false |
| System.IO.TextReader.ReadBlock(Char[], int, int) | qualifier -> return | false |
| System.IO.TextReader.ReadBlock(Span<Char>) | qualifier -> return | false |
| System.IO.TextReader.ReadBlockAsync(Char[], int, int) | qualifier -> return | false |
| System.IO.TextReader.ReadBlockAsync(Memory<Char>, CancellationToken) | qualifier -> return | false |
| System.IO.TextReader.ReadLine() | qualifier -> return | false |
| System.IO.TextReader.ReadLineAsync() | qualifier -> return | false |
| System.IO.TextReader.ReadToEnd() | qualifier -> return | false |
| System.IO.TextReader.ReadToEndAsync() | qualifier -> return | false |
| System.IO.UnmanagedMemoryStream.Read(Byte[], int, int) | qualifier -> argument 0 | false |
| System.IO.UnmanagedMemoryStream.ReadAsync(Byte[], int, int, CancellationToken) | qualifier -> argument 0 | false |
| System.IO.UnmanagedMemoryStream.Write(Byte[], int, int) | argument 0 -> qualifier | false |
| System.IO.UnmanagedMemoryStream.WriteAsync(Byte[], int, int, CancellationToken) | argument 0 -> qualifier | false |
| System.Int32.Parse(string) | argument 0 -> return | false |
| System.Int32.Parse(string, IFormatProvider) | argument 0 -> return | false |
| System.Int32.Parse(string, NumberStyles) | argument 0 -> return | false |
| System.Int32.Parse(string, NumberStyles, IFormatProvider) | argument 0 -> return | false |
| System.Int32.TryParse(string, NumberStyles, IFormatProvider, out int) | argument 0 -> argument 3 | false |
| System.Int32.TryParse(string, NumberStyles, IFormatProvider, out int) | argument 0 -> return | false |
| System.Int32.TryParse(string, out int) | argument 0 -> argument 1 | false |
| System.Int32.TryParse(string, out int) | argument 0 -> return | false |
| System.Lazy<>.Lazy(Func<T>) | output from argument 0 -> return | true |
| System.Lazy<>.Lazy(Func<T>, LazyThreadSafetyMode) | output from argument 0 -> return | true |
| System.Lazy<>.Lazy(Func<T>, bool) | output from argument 0 -> return | true |
| System.Lazy<>.get_Value() | qualifier -> return | true |
| System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>) | argument 0 -> parameter 1 of argument 2 | false |
| System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>) | argument 1 -> parameter 0 of argument 2 | false |
| System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>) | output from argument 2 -> parameter 0 of argument 3 | false |
| System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>) | output from argument 3 -> return | false |
| System.Linq.Enumerable.Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>) | argument 0 -> parameter 1 of argument 2 | false |
| System.Linq.Enumerable.Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>) | argument 1 -> parameter 0 of argument 2 | false |
| System.Linq.Enumerable.Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>) | output from argument 2 -> return | false |
| System.Linq.Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>) | argument 0 -> parameter 1 of argument 1 | false |
| System.Linq.Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>) | output from argument 1 -> return | false |
| System.Linq.Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>) | argument 0 -> return | false |
| System.Linq.Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Cast<TResult>(IEnumerable) | argument 0 -> return | false |
| System.Linq.Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>) | argument 0 -> return | false |
| System.Linq.Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>) | argument 1 -> return | false |
| System.Linq.Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>) | argument 0 -> return | false |
| System.Linq.Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource) | argument 0 -> return | false |
| System.Linq.Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource) | argument 1 -> return | false |
| System.Linq.Enumerable.Distinct<TSource>(IEnumerable<TSource>) | argument 0 -> return | false |
| System.Linq.Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>) | argument 0 -> return | false |
| System.Linq.Enumerable.ElementAt<TSource>(IEnumerable<TSource>, int) | argument 0 -> return | false |
| System.Linq.Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, int) | argument 0 -> return | false |
| System.Linq.Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>) | argument 0 -> return | false |
| System.Linq.Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>) | argument 0 -> return | false |
| System.Linq.Enumerable.First<TSource>(IEnumerable<TSource>) | argument 0 -> return | false |
| System.Linq.Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | argument 0 -> return | false |
| System.Linq.Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>) | argument 0 -> return | false |
| System.Linq.Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | argument 0 -> return | false |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>) | output from argument 1 -> parameter 0 of argument 3 | false |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>) | output from argument 2 -> parameter 1 of argument 3 | false |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>) | output from argument 3 -> return | false |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>) | output from argument 1 -> parameter 0 of argument 3 | false |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>) | output from argument 2 -> parameter 1 of argument 3 | false |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>) | output from argument 3 -> return | false |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | output from argument 2 -> return | false |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>) | argument 0 -> parameter 1 of argument 2 | false |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>) | output from argument 1 -> parameter 0 of argument 2 | false |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>) | output from argument 2 -> return | false |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>) | argument 0 -> return | false |
| System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>) | argument 0 -> parameter 0 of argument 4 | false |
| System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>) | argument 1 -> parameter 0 of argument 3 | false |
| System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>) | argument 1 -> parameter 1 of argument 4 | false |
| System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>) | output from argument 4 -> return | false |
| System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 4 | false |
| System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>) | argument 1 -> parameter 0 of argument 3 | false |
| System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>) | argument 1 -> parameter 1 of argument 4 | false |
| System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>) | output from argument 4 -> return | false |
| System.Linq.Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>) | argument 0 -> return | false |
| System.Linq.Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>) | argument 1 -> return | false |
| System.Linq.Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>) | argument 0 -> return | false |
| System.Linq.Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>) | argument 1 -> return | false |
| System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>) | argument 0 -> parameter 0 of argument 4 | false |
| System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>) | argument 1 -> parameter 0 of argument 3 | false |
| System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>) | argument 1 -> parameter 1 of argument 4 | false |
| System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>) | output from argument 4 -> return | false |
| System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 4 | false |
| System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>) | argument 1 -> parameter 0 of argument 3 | false |
| System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>) | argument 1 -> parameter 1 of argument 4 | false |
| System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>) | output from argument 4 -> return | false |
| System.Linq.Enumerable.Last<TSource>(IEnumerable<TSource>) | argument 0 -> return | false |
| System.Linq.Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | argument 0 -> return | false |
| System.Linq.Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>) | argument 0 -> return | false |
| System.Linq.Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | argument 0 -> return | false |
| System.Linq.Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.OfType<TResult>(IEnumerable) | argument 0 -> return | false |
| System.Linq.Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>) | argument 0 -> return | false |
| System.Linq.Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>) | argument 0 -> return | false |
| System.Linq.Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>) | argument 0 -> return | false |
| System.Linq.Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>) | argument 0 -> return | false |
| System.Linq.Enumerable.Reverse<TSource>(IEnumerable<TSource>) | argument 0 -> return | false |
| System.Linq.Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>) | output from argument 1 -> return | false |
| System.Linq.Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>) | output from argument 1 -> return | false |
| System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | output from argument 1 -> parameter 1 of argument 2 | false |
| System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | output from argument 2 -> return | false |
| System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | output from argument 1 -> parameter 1 of argument 2 | false |
| System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | output from argument 2 -> return | false |
| System.Linq.Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>) | output from argument 1 -> return | false |
| System.Linq.Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>) | output from argument 1 -> return | false |
| System.Linq.Enumerable.Single<TSource>(IEnumerable<TSource>) | argument 0 -> return | false |
| System.Linq.Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | argument 0 -> return | false |
| System.Linq.Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>) | argument 0 -> return | false |
| System.Linq.Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | argument 0 -> return | false |
| System.Linq.Enumerable.Skip<TSource>(IEnumerable<TSource>, int) | argument 0 -> return | false |
| System.Linq.Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | argument 0 -> return | false |
| System.Linq.Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>) | argument 0 -> return | false |
| System.Linq.Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Take<TSource>(IEnumerable<TSource>, int) | argument 0 -> return | false |
| System.Linq.Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | argument 0 -> return | false |
| System.Linq.Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>) | argument 0 -> return | false |
| System.Linq.Enumerable.ThenBy<TSource, TKey>(IOrderedEnumerable<TSource>, Func<TSource, TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.ThenBy<TSource, TKey>(IOrderedEnumerable<TSource>, Func<TSource, TKey>) | argument 0 -> return | false |
| System.Linq.Enumerable.ThenBy<TSource, TKey>(IOrderedEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.ThenBy<TSource, TKey>(IOrderedEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>) | argument 0 -> return | false |
| System.Linq.Enumerable.ThenByDescending<TSource, TKey>(IOrderedEnumerable<TSource>, Func<TSource, TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.ThenByDescending<TSource, TKey>(IOrderedEnumerable<TSource>, Func<TSource, TKey>) | argument 0 -> return | false |
| System.Linq.Enumerable.ThenByDescending<TSource, TKey>(IOrderedEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.ThenByDescending<TSource, TKey>(IOrderedEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>) | argument 0 -> return | false |
| System.Linq.Enumerable.ToArray<TSource>(IEnumerable<TSource>) | argument 0 -> return | false |
| System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | output from argument 2 -> return | false |
| System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | output from argument 2 -> return | false |
| System.Linq.Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>) | argument 0 -> return | false |
| System.Linq.Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>) | argument 0 -> return | false |
| System.Linq.Enumerable.ToList<TSource>(IEnumerable<TSource>) | argument 0 -> return | false |
| System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | output from argument 2 -> return | false |
| System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | output from argument 2 -> return | false |
| System.Linq.Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>) | argument 0 -> return | false |
| System.Linq.Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>) | argument 0 -> return | false |
| System.Linq.Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>) | argument 0 -> return | false |
| System.Linq.Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>) | argument 1 -> return | false |
| System.Linq.Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>) | argument 0 -> return | false |
| System.Linq.Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>) | argument 1 -> return | false |
| System.Linq.Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>) | argument 0 -> return | false |
| System.Linq.Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>) | argument 0 -> return | false |
| System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>) | argument 1 -> parameter 1 of argument 2 | false |
| System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>) | output from argument 2 -> return | false |
| System.Linq.EnumerableQuery<>.GetEnumerator() | qualifier -> return | false |
| System.Linq.Grouping<,>.Add(TElement) | argument 0 -> qualifier | false |
| System.Linq.Grouping<,>.GetEnumerator() | qualifier -> return | false |
| System.Linq.Grouping<,>.Insert(int, TElement) | argument 1 -> qualifier | false |
| System.Linq.Lookup<,>.GetEnumerator() | qualifier -> return | false |
| System.Linq.OrderedParallelQuery<>.GetEnumerator() | qualifier -> return | false |
| System.Linq.ParallelEnumerable.Aggregate<TSource, TAccumulate, TResult>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>) | argument 0 -> parameter 1 of argument 2 | false |
| System.Linq.ParallelEnumerable.Aggregate<TSource, TAccumulate, TResult>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>) | argument 1 -> parameter 0 of argument 2 | false |
| System.Linq.ParallelEnumerable.Aggregate<TSource, TAccumulate, TResult>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>) | output from argument 2 -> parameter 0 of argument 3 | false |
| System.Linq.ParallelEnumerable.Aggregate<TSource, TAccumulate, TResult>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>) | output from argument 3 -> return | false |
| System.Linq.ParallelEnumerable.Aggregate<TSource, TAccumulate>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>) | argument 0 -> parameter 1 of argument 2 | false |
| System.Linq.ParallelEnumerable.Aggregate<TSource, TAccumulate>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>) | argument 1 -> parameter 0 of argument 2 | false |
| System.Linq.ParallelEnumerable.Aggregate<TSource, TAccumulate>(ParallelQuery<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>) | output from argument 2 -> return | false |
| System.Linq.ParallelEnumerable.Aggregate<TSource>(ParallelQuery<TSource>, Func<TSource, TSource, TSource>) | argument 0 -> parameter 1 of argument 1 | false |
| System.Linq.ParallelEnumerable.Aggregate<TSource>(ParallelQuery<TSource>, Func<TSource, TSource, TSource>) | output from argument 1 -> return | false |
| System.Linq.ParallelEnumerable.All<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Any<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.AsEnumerable<TSource>(ParallelQuery<TSource>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource, Decimal>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource, Double>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource, Int32>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource, Int64>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Decimal>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Double>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Int32>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Int64>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Single>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Average<TSource>(ParallelQuery<TSource>, Func<TSource, Single>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Cast<TResult>(ParallelQuery) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.Concat<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.Concat<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>) | argument 1 -> return | false |
| System.Linq.ParallelEnumerable.Concat<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.Concat<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>) | argument 1 -> return | false |
| System.Linq.ParallelEnumerable.Count<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.DefaultIfEmpty<TSource>(ParallelQuery<TSource>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.DefaultIfEmpty<TSource>(ParallelQuery<TSource>, TSource) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.DefaultIfEmpty<TSource>(ParallelQuery<TSource>, TSource) | argument 1 -> return | false |
| System.Linq.ParallelEnumerable.Distinct<TSource>(ParallelQuery<TSource>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.Distinct<TSource>(ParallelQuery<TSource>, IEqualityComparer<TSource>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.ElementAt<TSource>(ParallelQuery<TSource>, int) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.ElementAtOrDefault<TSource>(ParallelQuery<TSource>, int) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.Except<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.Except<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.Except<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.Except<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.First<TSource>(ParallelQuery<TSource>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.First<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.First<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.FirstOrDefault<TSource>(ParallelQuery<TSource>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.FirstOrDefault<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.FirstOrDefault<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>) | output from argument 1 -> parameter 0 of argument 3 | false |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>) | output from argument 2 -> parameter 1 of argument 3 | false |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>) | output from argument 3 -> return | false |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>) | output from argument 1 -> parameter 0 of argument 3 | false |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>) | output from argument 2 -> parameter 1 of argument 3 | false |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>) | output from argument 3 -> return | false |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | output from argument 2 -> return | false |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>) | argument 0 -> parameter 1 of argument 2 | false |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>) | output from argument 1 -> parameter 0 of argument 2 | false |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>) | output from argument 2 -> return | false |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey, TResult>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.GroupBy<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>) | argument 0 -> parameter 0 of argument 4 | false |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>) | argument 1 -> parameter 0 of argument 3 | false |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>) | argument 1 -> parameter 1 of argument 4 | false |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>) | output from argument 4 -> return | false |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 4 | false |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>) | argument 1 -> parameter 0 of argument 3 | false |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>) | argument 1 -> parameter 1 of argument 4 | false |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>) | output from argument 4 -> return | false |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>) | argument 0 -> parameter 0 of argument 4 | false |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>) | argument 1 -> parameter 0 of argument 3 | false |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>) | argument 1 -> parameter 1 of argument 4 | false |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>) | output from argument 4 -> return | false |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 4 | false |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>) | argument 1 -> parameter 0 of argument 3 | false |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>) | argument 1 -> parameter 1 of argument 4 | false |
| System.Linq.ParallelEnumerable.GroupJoin<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>) | output from argument 4 -> return | false |
| System.Linq.ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>) | argument 1 -> return | false |
| System.Linq.ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>) | argument 1 -> return | false |
| System.Linq.ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>) | argument 1 -> return | false |
| System.Linq.ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.Intersect<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>) | argument 1 -> return | false |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>) | argument 0 -> parameter 0 of argument 4 | false |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>) | argument 1 -> parameter 0 of argument 3 | false |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>) | argument 1 -> parameter 1 of argument 4 | false |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>) | output from argument 4 -> return | false |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 4 | false |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>) | argument 1 -> parameter 0 of argument 3 | false |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>) | argument 1 -> parameter 1 of argument 4 | false |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>) | output from argument 4 -> return | false |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>) | argument 0 -> parameter 0 of argument 4 | false |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>) | argument 1 -> parameter 0 of argument 3 | false |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>) | argument 1 -> parameter 1 of argument 4 | false |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>) | output from argument 4 -> return | false |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 4 | false |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>) | argument 1 -> parameter 0 of argument 3 | false |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>) | argument 1 -> parameter 1 of argument 4 | false |
| System.Linq.ParallelEnumerable.Join<TOuter, TInner, TKey, TResult>(ParallelQuery<TOuter>, ParallelQuery<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>) | output from argument 4 -> return | false |
| System.Linq.ParallelEnumerable.Last<TSource>(ParallelQuery<TSource>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.Last<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Last<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.LastOrDefault<TSource>(ParallelQuery<TSource>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.LastOrDefault<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.LastOrDefault<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.LongCount<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Max<TSource, TResult>(ParallelQuery<TSource>, Func<TSource, TResult>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource, Decimal>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource, Double>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource, Int32>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource, Int64>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Decimal>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Double>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Int32>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Int64>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Single>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Max<TSource>(ParallelQuery<TSource>, Func<TSource, Single>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Min<TSource, TResult>(ParallelQuery<TSource>, Func<TSource, TResult>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource, Decimal>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource, Double>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource, Int32>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource, Int64>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Decimal>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Double>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Int32>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Int64>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Single>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Min<TSource>(ParallelQuery<TSource>, Func<TSource, Single>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.OfType<TResult>(ParallelQuery) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.OrderBy<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.OrderBy<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.OrderBy<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>, IComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.OrderBy<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>, IComparer<TKey>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.OrderByDescending<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.OrderByDescending<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.OrderByDescending<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>, IComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.OrderByDescending<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>, IComparer<TKey>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.Reverse<TSource>(ParallelQuery<TSource>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.Select<TSource, TResult>(ParallelQuery<TSource>, Func<TSource, Int32, TResult>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Select<TSource, TResult>(ParallelQuery<TSource>, Func<TSource, Int32, TResult>) | output from argument 1 -> return | false |
| System.Linq.ParallelEnumerable.Select<TSource, TResult>(ParallelQuery<TSource>, Func<TSource, TResult>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Select<TSource, TResult>(ParallelQuery<TSource>, Func<TSource, TResult>) | output from argument 1 -> return | false |
| System.Linq.ParallelEnumerable.SelectMany<TSource, TCollection, TResult>(ParallelQuery<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.SelectMany<TSource, TCollection, TResult>(ParallelQuery<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.ParallelEnumerable.SelectMany<TSource, TCollection, TResult>(ParallelQuery<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | output from argument 1 -> parameter 1 of argument 2 | false |
| System.Linq.ParallelEnumerable.SelectMany<TSource, TCollection, TResult>(ParallelQuery<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | output from argument 2 -> return | false |
| System.Linq.ParallelEnumerable.SelectMany<TSource, TCollection, TResult>(ParallelQuery<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.SelectMany<TSource, TCollection, TResult>(ParallelQuery<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.ParallelEnumerable.SelectMany<TSource, TCollection, TResult>(ParallelQuery<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | output from argument 1 -> parameter 1 of argument 2 | false |
| System.Linq.ParallelEnumerable.SelectMany<TSource, TCollection, TResult>(ParallelQuery<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>) | output from argument 2 -> return | false |
| System.Linq.ParallelEnumerable.SelectMany<TSource, TResult>(ParallelQuery<TSource>, Func<TSource, IEnumerable<TResult>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.SelectMany<TSource, TResult>(ParallelQuery<TSource>, Func<TSource, IEnumerable<TResult>>) | output from argument 1 -> return | false |
| System.Linq.ParallelEnumerable.SelectMany<TSource, TResult>(ParallelQuery<TSource>, Func<TSource, Int32, IEnumerable<TResult>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.SelectMany<TSource, TResult>(ParallelQuery<TSource>, Func<TSource, Int32, IEnumerable<TResult>>) | output from argument 1 -> return | false |
| System.Linq.ParallelEnumerable.Single<TSource>(ParallelQuery<TSource>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.Single<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Single<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.SingleOrDefault<TSource>(ParallelQuery<TSource>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.SingleOrDefault<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.SingleOrDefault<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.Skip<TSource>(ParallelQuery<TSource>, int) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.SkipWhile<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.SkipWhile<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.SkipWhile<TSource>(ParallelQuery<TSource>, Func<TSource, Int32, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.SkipWhile<TSource>(ParallelQuery<TSource>, Func<TSource, Int32, Boolean>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource, Decimal>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource, Double>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource, Int32>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource, Int64>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Decimal>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Double>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Int32>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Int64>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource, Nullable<Single>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Sum<TSource>(ParallelQuery<TSource>, Func<TSource, Single>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Take<TSource>(ParallelQuery<TSource>, int) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.TakeWhile<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.TakeWhile<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.TakeWhile<TSource>(ParallelQuery<TSource>, Func<TSource, Int32, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.TakeWhile<TSource>(ParallelQuery<TSource>, Func<TSource, Int32, Boolean>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.ThenBy<TSource, TKey>(OrderedParallelQuery<TSource>, Func<TSource, TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.ThenBy<TSource, TKey>(OrderedParallelQuery<TSource>, Func<TSource, TKey>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.ThenBy<TSource, TKey>(OrderedParallelQuery<TSource>, Func<TSource, TKey>, IComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.ThenBy<TSource, TKey>(OrderedParallelQuery<TSource>, Func<TSource, TKey>, IComparer<TKey>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.ThenByDescending<TSource, TKey>(OrderedParallelQuery<TSource>, Func<TSource, TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.ThenByDescending<TSource, TKey>(OrderedParallelQuery<TSource>, Func<TSource, TKey>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.ThenByDescending<TSource, TKey>(OrderedParallelQuery<TSource>, Func<TSource, TKey>, IComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.ThenByDescending<TSource, TKey>(OrderedParallelQuery<TSource>, Func<TSource, TKey>, IComparer<TKey>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.ToArray<TSource>(ParallelQuery<TSource>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.ToDictionary<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.ToDictionary<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.ParallelEnumerable.ToDictionary<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | output from argument 2 -> return | false |
| System.Linq.ParallelEnumerable.ToDictionary<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.ToDictionary<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.ParallelEnumerable.ToDictionary<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | output from argument 2 -> return | false |
| System.Linq.ParallelEnumerable.ToDictionary<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.ToDictionary<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.ToDictionary<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.ToDictionary<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.ToList<TSource>(ParallelQuery<TSource>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.ToLookup<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.ToLookup<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.ParallelEnumerable.ToLookup<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>) | output from argument 2 -> return | false |
| System.Linq.ParallelEnumerable.ToLookup<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.ToLookup<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.ParallelEnumerable.ToLookup<TSource, TKey, TElement>(ParallelQuery<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) | output from argument 2 -> return | false |
| System.Linq.ParallelEnumerable.ToLookup<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.ToLookup<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.ToLookup<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.ToLookup<TSource, TKey>(ParallelQuery<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>) | argument 1 -> return | false |
| System.Linq.ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>) | argument 1 -> return | false |
| System.Linq.ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>) | argument 1 -> return | false |
| System.Linq.ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.Union<TSource>(ParallelQuery<TSource>, ParallelQuery<TSource>, IEqualityComparer<TSource>) | argument 1 -> return | false |
| System.Linq.ParallelEnumerable.Where<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Where<TSource>(ParallelQuery<TSource>, Func<TSource, Boolean>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.Where<TSource>(ParallelQuery<TSource>, Func<TSource, Int32, Boolean>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.ParallelEnumerable.Where<TSource>(ParallelQuery<TSource>, Func<TSource, Int32, Boolean>) | argument 0 -> return | false |
| System.Linq.ParallelEnumerable.Zip<TFirst, TSecond, TResult>(ParallelQuery<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.ParallelEnumerable.Zip<TFirst, TSecond, TResult>(ParallelQuery<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>) | argument 1 -> parameter 1 of argument 2 | false |
| System.Linq.ParallelEnumerable.Zip<TFirst, TSecond, TResult>(ParallelQuery<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>) | output from argument 2 -> return | false |
| System.Linq.ParallelEnumerable.Zip<TFirst, TSecond, TResult>(ParallelQuery<TFirst>, ParallelQuery<TSecond>, Func<TFirst, TSecond, TResult>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.ParallelEnumerable.Zip<TFirst, TSecond, TResult>(ParallelQuery<TFirst>, ParallelQuery<TSecond>, Func<TFirst, TSecond, TResult>) | argument 1 -> parameter 1 of argument 2 | false |
| System.Linq.ParallelEnumerable.Zip<TFirst, TSecond, TResult>(ParallelQuery<TFirst>, ParallelQuery<TSecond>, Func<TFirst, TSecond, TResult>) | output from argument 2 -> return | false |
| System.Linq.ParallelQuery.GetEnumerator() | qualifier -> return | false |
| System.Linq.ParallelQuery<>.GetEnumerator() | qualifier -> return | false |
| System.Linq.Queryable.Aggregate<TSource, TAccumulate, TResult>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>, Expression<Func<TAccumulate,TResult>>) | argument 0 -> parameter 1 of argument 2 | false |
| System.Linq.Queryable.Aggregate<TSource, TAccumulate, TResult>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>, Expression<Func<TAccumulate,TResult>>) | argument 1 -> parameter 0 of argument 2 | false |
| System.Linq.Queryable.Aggregate<TSource, TAccumulate, TResult>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>, Expression<Func<TAccumulate,TResult>>) | output from argument 2 -> parameter 0 of argument 3 | false |
| System.Linq.Queryable.Aggregate<TSource, TAccumulate, TResult>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>, Expression<Func<TAccumulate,TResult>>) | output from argument 3 -> return | false |
| System.Linq.Queryable.Aggregate<TSource, TAccumulate>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>) | argument 0 -> parameter 1 of argument 2 | false |
| System.Linq.Queryable.Aggregate<TSource, TAccumulate>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>) | argument 1 -> parameter 0 of argument 2 | false |
| System.Linq.Queryable.Aggregate<TSource, TAccumulate>(IQueryable<TSource>, TAccumulate, Expression<Func<TAccumulate,TSource,TAccumulate>>) | output from argument 2 -> return | false |
| System.Linq.Queryable.Aggregate<TSource>(IQueryable<TSource>, Expression<Func<TSource,TSource,TSource>>) | argument 0 -> parameter 1 of argument 1 | false |
| System.Linq.Queryable.Aggregate<TSource>(IQueryable<TSource>, Expression<Func<TSource,TSource,TSource>>) | output from argument 1 -> return | false |
| System.Linq.Queryable.All<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.Any<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Decimal>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Double>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int64>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Decimal>>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Double>>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int32>>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int64>>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Single>>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.Average<TSource>(IQueryable<TSource>, Expression<Func<TSource,Single>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.Cast<TResult>(IQueryable) | argument 0 -> return | false |
| System.Linq.Queryable.Concat<TSource>(IQueryable<TSource>, IEnumerable<TSource>) | argument 0 -> return | false |
| System.Linq.Queryable.Concat<TSource>(IQueryable<TSource>, IEnumerable<TSource>) | argument 1 -> return | false |
| System.Linq.Queryable.Count<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.DefaultIfEmpty<TSource>(IQueryable<TSource>) | argument 0 -> return | false |
| System.Linq.Queryable.DefaultIfEmpty<TSource>(IQueryable<TSource>, TSource) | argument 0 -> return | false |
| System.Linq.Queryable.DefaultIfEmpty<TSource>(IQueryable<TSource>, TSource) | argument 1 -> return | false |
| System.Linq.Queryable.Distinct<TSource>(IQueryable<TSource>) | argument 0 -> return | false |
| System.Linq.Queryable.Distinct<TSource>(IQueryable<TSource>, IEqualityComparer<TSource>) | argument 0 -> return | false |
| System.Linq.Queryable.ElementAt<TSource>(IQueryable<TSource>, int) | argument 0 -> return | false |
| System.Linq.Queryable.ElementAtOrDefault<TSource>(IQueryable<TSource>, int) | argument 0 -> return | false |
| System.Linq.Queryable.Except<TSource>(IQueryable<TSource>, IEnumerable<TSource>) | argument 0 -> return | false |
| System.Linq.Queryable.Except<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>) | argument 0 -> return | false |
| System.Linq.Queryable.First<TSource>(IQueryable<TSource>) | argument 0 -> return | false |
| System.Linq.Queryable.First<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.First<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | argument 0 -> return | false |
| System.Linq.Queryable.FirstOrDefault<TSource>(IQueryable<TSource>) | argument 0 -> return | false |
| System.Linq.Queryable.FirstOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.FirstOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | argument 0 -> return | false |
| System.Linq.Queryable.GroupBy<TSource, TKey, TElement, TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.GroupBy<TSource, TKey, TElement, TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.Queryable.GroupBy<TSource, TKey, TElement, TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>) | output from argument 1 -> parameter 0 of argument 3 | false |
| System.Linq.Queryable.GroupBy<TSource, TKey, TElement, TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>) | output from argument 2 -> parameter 1 of argument 3 | false |
| System.Linq.Queryable.GroupBy<TSource, TKey, TElement, TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>) | output from argument 3 -> return | false |
| System.Linq.Queryable.GroupBy<TSource, TKey, TElement, TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.GroupBy<TSource, TKey, TElement, TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.Queryable.GroupBy<TSource, TKey, TElement, TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>, IEqualityComparer<TKey>) | output from argument 1 -> parameter 0 of argument 3 | false |
| System.Linq.Queryable.GroupBy<TSource, TKey, TElement, TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>, IEqualityComparer<TKey>) | output from argument 2 -> parameter 1 of argument 3 | false |
| System.Linq.Queryable.GroupBy<TSource, TKey, TElement, TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, Expression<Func<TKey,IEnumerable<TElement>,TResult>>, IEqualityComparer<TKey>) | output from argument 3 -> return | false |
| System.Linq.Queryable.GroupBy<TSource, TKey, TElement>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.GroupBy<TSource, TKey, TElement>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>) | output from argument 2 -> return | false |
| System.Linq.Queryable.GroupBy<TSource, TKey, TElement>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.GroupBy<TSource, TKey, TElement>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TSource,TElement>>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.Queryable.GroupBy<TSource, TKey, TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TKey,IEnumerable<TSource>,TResult>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.GroupBy<TSource, TKey, TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TKey,IEnumerable<TSource>,TResult>>) | output from argument 2 -> return | false |
| System.Linq.Queryable.GroupBy<TSource, TKey, TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TKey,IEnumerable<TSource>,TResult>>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.GroupBy<TSource, TKey, TResult>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, Expression<Func<TKey,IEnumerable<TSource>,TResult>>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.Queryable.GroupBy<TSource, TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.GroupBy<TSource, TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IEqualityComparer<TKey>) | argument 0 -> return | false |
| System.Linq.Queryable.GroupJoin<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.Queryable.GroupJoin<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>) | argument 0 -> parameter 0 of argument 4 | false |
| System.Linq.Queryable.GroupJoin<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>) | argument 1 -> parameter 0 of argument 3 | false |
| System.Linq.Queryable.GroupJoin<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>) | argument 1 -> parameter 1 of argument 4 | false |
| System.Linq.Queryable.GroupJoin<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>) | output from argument 4 -> return | false |
| System.Linq.Queryable.GroupJoin<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.Queryable.GroupJoin<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 4 | false |
| System.Linq.Queryable.GroupJoin<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>, IEqualityComparer<TKey>) | argument 1 -> parameter 0 of argument 3 | false |
| System.Linq.Queryable.GroupJoin<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>, IEqualityComparer<TKey>) | argument 1 -> parameter 1 of argument 4 | false |
| System.Linq.Queryable.GroupJoin<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,IEnumerable<TInner>,TResult>>, IEqualityComparer<TKey>) | output from argument 4 -> return | false |
| System.Linq.Queryable.Intersect<TSource>(IQueryable<TSource>, IEnumerable<TSource>) | argument 0 -> return | false |
| System.Linq.Queryable.Intersect<TSource>(IQueryable<TSource>, IEnumerable<TSource>) | argument 1 -> return | false |
| System.Linq.Queryable.Intersect<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>) | argument 0 -> return | false |
| System.Linq.Queryable.Intersect<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>) | argument 1 -> return | false |
| System.Linq.Queryable.Join<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.Queryable.Join<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>) | argument 0 -> parameter 0 of argument 4 | false |
| System.Linq.Queryable.Join<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>) | argument 1 -> parameter 0 of argument 3 | false |
| System.Linq.Queryable.Join<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>) | argument 1 -> parameter 1 of argument 4 | false |
| System.Linq.Queryable.Join<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>) | output from argument 4 -> return | false |
| System.Linq.Queryable.Join<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.Queryable.Join<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>, IEqualityComparer<TKey>) | argument 0 -> parameter 0 of argument 4 | false |
| System.Linq.Queryable.Join<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>, IEqualityComparer<TKey>) | argument 1 -> parameter 0 of argument 3 | false |
| System.Linq.Queryable.Join<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>, IEqualityComparer<TKey>) | argument 1 -> parameter 1 of argument 4 | false |
| System.Linq.Queryable.Join<TOuter, TInner, TKey, TResult>(IQueryable<TOuter>, IEnumerable<TInner>, Expression<Func<TOuter,TKey>>, Expression<Func<TInner,TKey>>, Expression<Func<TOuter,TInner,TResult>>, IEqualityComparer<TKey>) | output from argument 4 -> return | false |
| System.Linq.Queryable.Last<TSource>(IQueryable<TSource>) | argument 0 -> return | false |
| System.Linq.Queryable.Last<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.Last<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | argument 0 -> return | false |
| System.Linq.Queryable.LastOrDefault<TSource>(IQueryable<TSource>) | argument 0 -> return | false |
| System.Linq.Queryable.LastOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.LastOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | argument 0 -> return | false |
| System.Linq.Queryable.LongCount<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.Max<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.Min<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.OfType<TResult>(IQueryable) | argument 0 -> return | false |
| System.Linq.Queryable.OrderBy<TSource, TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.OrderBy<TSource, TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>) | argument 0 -> return | false |
| System.Linq.Queryable.OrderBy<TSource, TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.OrderBy<TSource, TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>) | argument 0 -> return | false |
| System.Linq.Queryable.OrderByDescending<TSource, TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.OrderByDescending<TSource, TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>) | argument 0 -> return | false |
| System.Linq.Queryable.OrderByDescending<TSource, TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.OrderByDescending<TSource, TKey>(IQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>) | argument 0 -> return | false |
| System.Linq.Queryable.Reverse<TSource>(IQueryable<TSource>) | argument 0 -> return | false |
| System.Linq.Queryable.Select<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,TResult>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.Select<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,TResult>>) | output from argument 1 -> return | false |
| System.Linq.Queryable.Select<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.Select<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource,TResult>>) | output from argument 1 -> return | false |
| System.Linq.Queryable.SelectMany<TSource, TCollection, TResult>(IQueryable<TSource>, Expression<Func<TSource,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.SelectMany<TSource, TCollection, TResult>(IQueryable<TSource>, Expression<Func<TSource,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.Queryable.SelectMany<TSource, TCollection, TResult>(IQueryable<TSource>, Expression<Func<TSource,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>) | output from argument 1 -> parameter 1 of argument 2 | false |
| System.Linq.Queryable.SelectMany<TSource, TCollection, TResult>(IQueryable<TSource>, Expression<Func<TSource,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>) | output from argument 2 -> return | false |
| System.Linq.Queryable.SelectMany<TSource, TCollection, TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.SelectMany<TSource, TCollection, TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.Queryable.SelectMany<TSource, TCollection, TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>) | output from argument 1 -> parameter 1 of argument 2 | false |
| System.Linq.Queryable.SelectMany<TSource, TCollection, TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,IEnumerable<TCollection>>>, Expression<Func<TSource,TCollection,TResult>>) | output from argument 2 -> return | false |
| System.Linq.Queryable.SelectMany<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource,IEnumerable<TResult>>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.SelectMany<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource,IEnumerable<TResult>>>) | output from argument 1 -> return | false |
| System.Linq.Queryable.SelectMany<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,IEnumerable<TResult>>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.SelectMany<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource,Int32,IEnumerable<TResult>>>) | output from argument 1 -> return | false |
| System.Linq.Queryable.Single<TSource>(IQueryable<TSource>) | argument 0 -> return | false |
| System.Linq.Queryable.Single<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.Single<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | argument 0 -> return | false |
| System.Linq.Queryable.SingleOrDefault<TSource>(IQueryable<TSource>) | argument 0 -> return | false |
| System.Linq.Queryable.SingleOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.SingleOrDefault<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | argument 0 -> return | false |
| System.Linq.Queryable.Skip<TSource>(IQueryable<TSource>, int) | argument 0 -> return | false |
| System.Linq.Queryable.SkipWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.SkipWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | argument 0 -> return | false |
| System.Linq.Queryable.SkipWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.SkipWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>) | argument 0 -> return | false |
| System.Linq.Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Decimal>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Double>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int64>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Decimal>>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Double>>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int32>>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Int64>>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Nullable<Single>>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.Sum<TSource>(IQueryable<TSource>, Expression<Func<TSource,Single>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.Take<TSource>(IQueryable<TSource>, int) | argument 0 -> return | false |
| System.Linq.Queryable.TakeWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.TakeWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | argument 0 -> return | false |
| System.Linq.Queryable.TakeWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.TakeWhile<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>) | argument 0 -> return | false |
| System.Linq.Queryable.ThenBy<TSource, TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.ThenBy<TSource, TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>) | argument 0 -> return | false |
| System.Linq.Queryable.ThenBy<TSource, TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.ThenBy<TSource, TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>) | argument 0 -> return | false |
| System.Linq.Queryable.ThenByDescending<TSource, TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.ThenByDescending<TSource, TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>) | argument 0 -> return | false |
| System.Linq.Queryable.ThenByDescending<TSource, TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.ThenByDescending<TSource, TKey>(IOrderedQueryable<TSource>, Expression<Func<TSource,TKey>>, IComparer<TKey>) | argument 0 -> return | false |
| System.Linq.Queryable.Union<TSource>(IQueryable<TSource>, IEnumerable<TSource>) | argument 0 -> return | false |
| System.Linq.Queryable.Union<TSource>(IQueryable<TSource>, IEnumerable<TSource>) | argument 1 -> return | false |
| System.Linq.Queryable.Union<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>) | argument 0 -> return | false |
| System.Linq.Queryable.Union<TSource>(IQueryable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>) | argument 1 -> return | false |
| System.Linq.Queryable.Where<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.Where<TSource>(IQueryable<TSource>, Expression<Func<TSource,Boolean>>) | argument 0 -> return | false |
| System.Linq.Queryable.Where<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>) | argument 0 -> parameter 0 of argument 1 | false |
| System.Linq.Queryable.Where<TSource>(IQueryable<TSource>, Expression<Func<TSource,Int32,Boolean>>) | argument 0 -> return | false |
| System.Linq.Queryable.Zip<TFirst, TSecond, TResult>(IQueryable<TFirst>, IEnumerable<TSecond>, Expression<Func<TFirst,TSecond,TResult>>) | argument 0 -> parameter 0 of argument 2 | false |
| System.Linq.Queryable.Zip<TFirst, TSecond, TResult>(IQueryable<TFirst>, IEnumerable<TSecond>, Expression<Func<TFirst,TSecond,TResult>>) | argument 1 -> parameter 1 of argument 2 | false |
| System.Linq.Queryable.Zip<TFirst, TSecond, TResult>(IQueryable<TFirst>, IEnumerable<TSecond>, Expression<Func<TFirst,TSecond,TResult>>) | output from argument 2 -> return | false |
| System.Net.Cookie.get_Value() | qualifier -> return | false |
| System.Net.CookieCollection.Add(Cookie) | argument 0 -> qualifier | false |
| System.Net.CookieCollection.Add(CookieCollection) | argument 0 -> qualifier | false |
| System.Net.CookieCollection.GetEnumerator() | qualifier -> return | false |
| System.Net.CredentialCache.GetEnumerator() | qualifier -> return | false |
| System.Net.HttpListenerPrefixCollection.Add(string) | argument 0 -> qualifier | false |
| System.Net.HttpListenerPrefixCollection.GetEnumerator() | qualifier -> return | false |
| System.Net.NetworkInformation.IPAddressCollection.Add(IPAddress) | argument 0 -> qualifier | false |
| System.Net.NetworkInformation.IPAddressCollection.GetEnumerator() | qualifier -> return | false |
| System.Net.Security.NegotiateStream.BeginRead(Byte[], int, int, AsyncCallback, object) | qualifier -> argument 0 | false |
| System.Net.Security.NegotiateStream.BeginWrite(Byte[], int, int, AsyncCallback, object) | argument 0 -> qualifier | false |
| System.Net.Security.NegotiateStream.Read(Byte[], int, int) | qualifier -> argument 0 | false |
| System.Net.Security.NegotiateStream.Write(Byte[], int, int) | argument 0 -> qualifier | false |
| System.Net.Security.SslStream.BeginRead(Byte[], int, int, AsyncCallback, object) | qualifier -> argument 0 | false |
| System.Net.Security.SslStream.BeginWrite(Byte[], int, int, AsyncCallback, object) | argument 0 -> qualifier | false |
| System.Net.Security.SslStream.Read(Byte[], int, int) | qualifier -> argument 0 | false |
| System.Net.Security.SslStream.ReadAsync(Byte[], int, int, CancellationToken) | qualifier -> argument 0 | false |
| System.Net.Security.SslStream.Write(Byte[], int, int) | argument 0 -> qualifier | false |
| System.Net.Security.SslStream.WriteAsync(Byte[], int, int, CancellationToken) | argument 0 -> qualifier | false |
| System.Net.WebUtility.HtmlEncode(string) | argument 0 -> return | false |
| System.Net.WebUtility.HtmlEncode(string, TextWriter) | argument 0 -> return | false |
| System.Net.WebUtility.UrlEncode(string) | argument 0 -> return | false |
| System.Object.ToString() | qualifier -> return | false |
| System.Resources.IResourceReader.GetEnumerator() | qualifier -> return | false |
| System.Resources.ResourceReader.GetEnumerator() | qualifier -> return | false |
| System.Resources.ResourceSet.GetEnumerator() | qualifier -> return | false |
| System.Runtime.CompilerServices.ConditionalWeakTable<,>.Add(TKey, TValue) | argument 1 -> qualifier | false |
| System.Runtime.CompilerServices.ConditionalWeakTable<,>.GetEnumerator() | qualifier -> return | false |
| System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<>.Add(T) | argument 0 -> qualifier | false |
| System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<>.Add(object) | argument 0 -> qualifier | false |
| System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<>.GetEnumerator() | qualifier -> return | false |
| System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<>.Insert(int, T) | argument 1 -> qualifier | false |
| System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<>.Insert(int, object) | argument 1 -> qualifier | false |
| System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<>.Reverse() | qualifier -> return | false |
| System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<>.Reverse(int, int) | qualifier -> return | false |
| System.Security.Cryptography.CryptoStream.BeginRead(Byte[], int, int, AsyncCallback, object) | qualifier -> argument 0 | false |
| System.Security.Cryptography.CryptoStream.BeginWrite(Byte[], int, int, AsyncCallback, object) | argument 0 -> qualifier | false |
| System.Security.Cryptography.CryptoStream.Read(Byte[], int, int) | qualifier -> argument 0 | false |
| System.Security.Cryptography.CryptoStream.ReadAsync(Byte[], int, int, CancellationToken) | qualifier -> argument 0 | false |
| System.Security.Cryptography.CryptoStream.Write(Byte[], int, int) | argument 0 -> qualifier | false |
| System.Security.Cryptography.CryptoStream.WriteAsync(Byte[], int, int, CancellationToken) | argument 0 -> qualifier | false |
| System.Security.PermissionSet.GetEnumerator() | qualifier -> return | false |
| System.String.Clone() | qualifier -> return | false |
| System.String.Clone() | qualifier -> return | true |
| System.String.Concat(IEnumerable<String>) | argument 0 -> return | false |
| System.String.Concat(ReadOnlySpan<Char>, ReadOnlySpan<Char>) | argument 0 -> return | false |
| System.String.Concat(ReadOnlySpan<Char>, ReadOnlySpan<Char>) | argument 1 -> return | false |
| System.String.Concat(ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>) | argument 0 -> return | false |
| System.String.Concat(ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>) | argument 1 -> return | false |
| System.String.Concat(ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>) | argument 2 -> return | false |
| System.String.Concat(ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>) | argument 0 -> return | false |
| System.String.Concat(ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>) | argument 1 -> return | false |
| System.String.Concat(ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>) | argument 2 -> return | false |
| System.String.Concat(ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>, ReadOnlySpan<Char>) | argument 3 -> return | false |
| System.String.Concat(object) | argument 0 -> return | false |
| System.String.Concat(object, object) | argument 0 -> return | false |
| System.String.Concat(object, object) | argument 1 -> return | false |
| System.String.Concat(object, object, object) | argument 0 -> return | false |
| System.String.Concat(object, object, object) | argument 1 -> return | false |
| System.String.Concat(object, object, object) | argument 2 -> return | false |
| System.String.Concat(string, string) | argument 0 -> return | false |
| System.String.Concat(string, string) | argument 1 -> return | false |
| System.String.Concat(string, string, string) | argument 0 -> return | false |
| System.String.Concat(string, string, string) | argument 1 -> return | false |
| System.String.Concat(string, string, string) | argument 2 -> return | false |
| System.String.Concat(string, string, string, string) | argument 0 -> return | false |
| System.String.Concat(string, string, string, string) | argument 1 -> return | false |
| System.String.Concat(string, string, string, string) | argument 2 -> return | false |
| System.String.Concat(string, string, string, string) | argument 3 -> return | false |
| System.String.Concat<T>(IEnumerable<T>) | argument 0 -> return | false |
| System.String.Copy(string) | argument 0 -> return | true |
| System.String.Format(IFormatProvider, string, object) | argument 1 -> return | false |
| System.String.Format(IFormatProvider, string, object) | argument 2 -> return | false |
| System.String.Format(IFormatProvider, string, object, object) | argument 1 -> return | false |
| System.String.Format(IFormatProvider, string, object, object) | argument 2 -> return | false |
| System.String.Format(IFormatProvider, string, object, object) | argument 3 -> return | false |
| System.String.Format(IFormatProvider, string, object, object, object) | argument 1 -> return | false |
| System.String.Format(IFormatProvider, string, object, object, object) | argument 2 -> return | false |
| System.String.Format(IFormatProvider, string, object, object, object) | argument 3 -> return | false |
| System.String.Format(IFormatProvider, string, object, object, object) | argument 4 -> return | false |
| System.String.Format(string, object) | argument 0 -> return | false |
| System.String.Format(string, object) | argument 1 -> return | false |
| System.String.Format(string, object, object) | argument 0 -> return | false |
| System.String.Format(string, object, object) | argument 1 -> return | false |
| System.String.Format(string, object, object) | argument 2 -> return | false |
| System.String.Format(string, object, object, object) | argument 0 -> return | false |
| System.String.Format(string, object, object, object) | argument 1 -> return | false |
| System.String.Format(string, object, object, object) | argument 2 -> return | false |
| System.String.Format(string, object, object, object) | argument 3 -> return | false |
| System.String.GetEnumerator() | qualifier -> return | false |
| System.String.Insert(int, string) | argument 1 -> return | false |
| System.String.Insert(int, string) | qualifier -> return | false |
| System.String.Join(string, IEnumerable<String>) | argument 0 -> return | false |
| System.String.Join(string, IEnumerable<String>) | argument 1 -> return | false |
| System.String.Join(string, String[], int, int) | argument 0 -> return | false |
| System.String.Join(string, String[], int, int) | argument 1 -> return | false |
| System.String.Join(string, String[], int, int) | argument 2 -> return | false |
| System.String.Join(string, String[], int, int) | argument 3 -> return | false |
| System.String.Join(string, params String[]) | argument 0 -> return | false |
| System.String.Join(string, params String[]) | argument 1 -> return | false |
| System.String.Join(string, params String[]) | argument 2 -> return | false |
| System.String.Join(string, params String[]) | argument 3 -> return | false |
| System.String.Join<T>(string, IEnumerable<T>) | argument 0 -> return | false |
| System.String.Join<T>(string, IEnumerable<T>) | argument 1 -> return | false |
| System.String.Normalize() | qualifier -> return | false |
| System.String.Normalize(NormalizationForm) | qualifier -> return | false |
| System.String.PadLeft(int) | qualifier -> return | false |
| System.String.PadLeft(int, char) | qualifier -> return | false |
| System.String.PadRight(int) | qualifier -> return | false |
| System.String.PadRight(int, char) | qualifier -> return | false |
| System.String.Remove(int) | qualifier -> return | false |
| System.String.Remove(int, int) | qualifier -> return | false |
| System.String.Replace(char, char) | argument 1 -> return | false |
| System.String.Replace(char, char) | qualifier -> return | false |
| System.String.Replace(string, string) | argument 1 -> return | false |
| System.String.Replace(string, string) | qualifier -> return | false |
| System.String.Split(Char[], StringSplitOptions) | qualifier -> return | false |
| System.String.Split(Char[], int) | qualifier -> return | false |
| System.String.Split(Char[], int, StringSplitOptions) | qualifier -> return | false |
| System.String.Split(String[], StringSplitOptions) | qualifier -> return | false |
| System.String.Split(String[], int, StringSplitOptions) | qualifier -> return | false |
| System.String.Split(char, StringSplitOptions) | qualifier -> return | false |
| System.String.Split(char, int, StringSplitOptions) | qualifier -> return | false |
| System.String.Split(params Char[]) | qualifier -> return | false |
| System.String.Split(string, StringSplitOptions) | qualifier -> return | false |
| System.String.Split(string, int, StringSplitOptions) | qualifier -> return | false |
| System.String.String(Char[]) | argument 0 -> return | false |
| System.String.String(Char[], int, int) | argument 0 -> return | false |
| System.String.Substring(int) | qualifier -> return | false |
| System.String.Substring(int, int) | qualifier -> return | false |
| System.String.ToLower() | qualifier -> return | false |
| System.String.ToLower(CultureInfo) | qualifier -> return | false |
| System.String.ToLowerInvariant() | qualifier -> return | false |
| System.String.ToString() | qualifier -> return | true |
| System.String.ToUpper() | qualifier -> return | false |
| System.String.ToUpper(CultureInfo) | qualifier -> return | false |
| System.String.ToUpperInvariant() | qualifier -> return | false |
| System.String.Trim() | qualifier -> return | false |
| System.String.Trim(char) | qualifier -> return | false |
| System.String.Trim(params Char[]) | qualifier -> return | false |
| System.String.TrimEnd() | qualifier -> return | false |
| System.String.TrimEnd(char) | qualifier -> return | false |
| System.String.TrimEnd(params Char[]) | qualifier -> return | false |
| System.String.TrimStart() | qualifier -> return | false |
| System.String.TrimStart(char) | qualifier -> return | false |
| System.String.TrimStart(params Char[]) | qualifier -> return | false |
| System.Text.Encoding.GetBytes(Char[]) | argument 0 -> return | false |
| System.Text.Encoding.GetBytes(Char[], int, int) | argument 0 -> return | false |
| System.Text.Encoding.GetBytes(Char[], int, int, Byte[], int) | argument 0 -> return | false |
| System.Text.Encoding.GetBytes(ReadOnlySpan<Char>, Span<Byte>) | argument 0 -> return | false |
| System.Text.Encoding.GetBytes(char*, int, byte*, int) | argument 0 -> return | false |
| System.Text.Encoding.GetBytes(string) | argument 0 -> return | false |
| System.Text.Encoding.GetBytes(string, int, int) | argument 0 -> return | false |
| System.Text.Encoding.GetBytes(string, int, int, Byte[], int) | argument 0 -> return | false |
| System.Text.Encoding.GetChars(Byte[]) | argument 0 -> return | false |
| System.Text.Encoding.GetChars(Byte[], int, int) | argument 0 -> return | false |
| System.Text.Encoding.GetChars(Byte[], int, int, Char[], int) | argument 0 -> return | false |
| System.Text.Encoding.GetChars(ReadOnlySpan<Byte>, Span<Char>) | argument 0 -> return | false |
| System.Text.Encoding.GetChars(byte*, int, char*, int) | argument 0 -> return | false |
| System.Text.Encoding.GetString(Byte[]) | argument 0 -> return | false |
| System.Text.Encoding.GetString(Byte[], int, int) | argument 0 -> return | false |
| System.Text.Encoding.GetString(ReadOnlySpan<Byte>) | argument 0 -> return | false |
| System.Text.Encoding.GetString(byte*, int) | argument 0 -> return | false |
| System.Text.RegularExpressions.CaptureCollection.Add(Capture) | argument 0 -> qualifier | false |
| System.Text.RegularExpressions.CaptureCollection.Add(object) | argument 0 -> qualifier | false |
| System.Text.RegularExpressions.CaptureCollection.GetEnumerator() | qualifier -> return | false |
| System.Text.RegularExpressions.CaptureCollection.Insert(int, Capture) | argument 1 -> qualifier | false |
| System.Text.RegularExpressions.CaptureCollection.Insert(int, object) | argument 1 -> qualifier | false |
| System.Text.RegularExpressions.GroupCollection.Add(Group) | argument 0 -> qualifier | false |
| System.Text.RegularExpressions.GroupCollection.Add(object) | argument 0 -> qualifier | false |
| System.Text.RegularExpressions.GroupCollection.GetEnumerator() | qualifier -> return | false |
| System.Text.RegularExpressions.GroupCollection.Insert(int, Group) | argument 1 -> qualifier | false |
| System.Text.RegularExpressions.GroupCollection.Insert(int, object) | argument 1 -> qualifier | false |
| System.Text.RegularExpressions.GroupCollection.get_Values() | qualifier -> return | false |
| System.Text.RegularExpressions.MatchCollection.Add(Match) | argument 0 -> qualifier | false |
| System.Text.RegularExpressions.MatchCollection.Add(object) | argument 0 -> qualifier | false |
| System.Text.RegularExpressions.MatchCollection.GetEnumerator() | qualifier -> return | false |
| System.Text.RegularExpressions.MatchCollection.Insert(int, Match) | argument 1 -> qualifier | false |
| System.Text.RegularExpressions.MatchCollection.Insert(int, object) | argument 1 -> qualifier | false |
| System.Text.StringBuilder.Append(object) | argument 0 -> qualifier | false |
| System.Text.StringBuilder.Append(string) | argument 0 -> qualifier | false |
| System.Text.StringBuilder.Append(string, int, int) | argument 0 -> qualifier | false |
| System.Text.StringBuilder.AppendFormat(IFormatProvider, string, object) | argument 1 -> qualifier | false |
| System.Text.StringBuilder.AppendFormat(IFormatProvider, string, object) | argument 2 -> qualifier | false |
| System.Text.StringBuilder.AppendFormat(IFormatProvider, string, object, object) | argument 1 -> qualifier | false |
| System.Text.StringBuilder.AppendFormat(IFormatProvider, string, object, object) | argument 2 -> qualifier | false |
| System.Text.StringBuilder.AppendFormat(IFormatProvider, string, object, object) | argument 3 -> qualifier | false |
| System.Text.StringBuilder.AppendFormat(IFormatProvider, string, object, object, object) | argument 1 -> qualifier | false |
| System.Text.StringBuilder.AppendFormat(IFormatProvider, string, object, object, object) | argument 2 -> qualifier | false |
| System.Text.StringBuilder.AppendFormat(IFormatProvider, string, object, object, object) | argument 3 -> qualifier | false |
| System.Text.StringBuilder.AppendFormat(IFormatProvider, string, object, object, object) | argument 4 -> qualifier | false |
| System.Text.StringBuilder.AppendFormat(string, object) | argument 0 -> qualifier | false |
| System.Text.StringBuilder.AppendFormat(string, object) | argument 1 -> qualifier | false |
| System.Text.StringBuilder.AppendFormat(string, object, object) | argument 0 -> qualifier | false |
| System.Text.StringBuilder.AppendFormat(string, object, object) | argument 1 -> qualifier | false |
| System.Text.StringBuilder.AppendFormat(string, object, object) | argument 2 -> qualifier | false |
| System.Text.StringBuilder.AppendFormat(string, object, object, object) | argument 0 -> qualifier | false |
| System.Text.StringBuilder.AppendFormat(string, object, object, object) | argument 1 -> qualifier | false |
| System.Text.StringBuilder.AppendFormat(string, object, object, object) | argument 2 -> qualifier | false |
| System.Text.StringBuilder.AppendFormat(string, object, object, object) | argument 3 -> qualifier | false |
| System.Text.StringBuilder.AppendLine(string) | argument 0 -> qualifier | false |
| System.Text.StringBuilder.StringBuilder(string) | argument 0 -> return | false |
| System.Text.StringBuilder.StringBuilder(string, int) | argument 0 -> return | false |
| System.Text.StringBuilder.StringBuilder(string, int, int, int) | argument 0 -> return | false |
| System.Text.StringBuilder.ToString() | qualifier -> return | false |
| System.Threading.Tasks.Task.ContinueWith(Action<Task, Object>, object) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task.ContinueWith(Action<Task, Object>, object, CancellationToken) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task.ContinueWith(Action<Task, Object>, object, CancellationToken, TaskContinuationOptions, TaskScheduler) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task.ContinueWith(Action<Task, Object>, object, TaskContinuationOptions) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task.ContinueWith(Action<Task, Object>, object, TaskScheduler) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, Object, TResult>, object) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, Object, TResult>, object) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, Object, TResult>, object, CancellationToken) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, Object, TResult>, object, CancellationToken) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, Object, TResult>, object, CancellationToken, TaskContinuationOptions, TaskScheduler) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, Object, TResult>, object, CancellationToken, TaskContinuationOptions, TaskScheduler) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, Object, TResult>, object, TaskContinuationOptions) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, Object, TResult>, object, TaskContinuationOptions) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, Object, TResult>, object, TaskScheduler) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, Object, TResult>, object, TaskScheduler) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, TResult>) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, TResult>, CancellationToken) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, TResult>, CancellationToken, TaskContinuationOptions, TaskScheduler) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, TResult>, TaskContinuationOptions) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task.ContinueWith<TResult>(Func<Task, TResult>, TaskScheduler) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task.FromResult<TResult>(TResult) | argument 0 -> return | true |
| System.Threading.Tasks.Task.Run<TResult>(Func<TResult>) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task.Run<TResult>(Func<TResult>, CancellationToken) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task.Run<TResult>(Func<Task<TResult>>) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task.Run<TResult>(Func<Task<TResult>>, CancellationToken) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task.Task(Action<Object>, object) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task.Task(Action<Object>, object, CancellationToken) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task.Task(Action<Object>, object, CancellationToken, TaskCreationOptions) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task.Task(Action<Object>, object, TaskCreationOptions) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task.WhenAll<TResult>(IEnumerable<Task<TResult>>) | argument 0 -> return | true |
| System.Threading.Tasks.Task.WhenAll<TResult>(params Task<TResult>[]) | argument 0 -> return | true |
| System.Threading.Tasks.Task.WhenAll<TResult>(params Task<TResult>[]) | argument 1 -> return | true |
| System.Threading.Tasks.Task.WhenAny<TResult>(IEnumerable<Task<TResult>>) | argument 0 -> return | true |
| System.Threading.Tasks.Task.WhenAny<TResult>(params Task<TResult>[]) | argument 0 -> return | true |
| System.Threading.Tasks.Task.WhenAny<TResult>(params Task<TResult>[]) | argument 1 -> return | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>, Object>, object) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>, Object>, object) | qualifier -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>, Object>, object, CancellationToken) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>, Object>, object, CancellationToken) | qualifier -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>, Object>, object, CancellationToken, TaskContinuationOptions, TaskScheduler) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>, Object>, object, CancellationToken, TaskContinuationOptions, TaskScheduler) | qualifier -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>, Object>, object, TaskContinuationOptions) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>, Object>, object, TaskContinuationOptions) | qualifier -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>, Object>, object, TaskScheduler) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>, Object>, object, TaskScheduler) | qualifier -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>>) | qualifier -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>>, CancellationToken) | qualifier -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>>, CancellationToken, TaskContinuationOptions, TaskScheduler) | qualifier -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>>, TaskContinuationOptions) | qualifier -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith(Action<Task<>>, TaskScheduler) | qualifier -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object) | qualifier -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object, CancellationToken) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object, CancellationToken) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object, CancellationToken) | qualifier -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object, CancellationToken, TaskContinuationOptions, TaskScheduler) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object, CancellationToken, TaskContinuationOptions, TaskScheduler) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object, CancellationToken, TaskContinuationOptions, TaskScheduler) | qualifier -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object, TaskContinuationOptions) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object, TaskContinuationOptions) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object, TaskContinuationOptions) | qualifier -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object, TaskScheduler) | argument 1 -> parameter 1 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object, TaskScheduler) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, Object, TNewResult>, object, TaskScheduler) | qualifier -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, TNewResult>) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, TNewResult>) | qualifier -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, TNewResult>, CancellationToken) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, TNewResult>, CancellationToken) | qualifier -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, TNewResult>, CancellationToken, TaskContinuationOptions, TaskScheduler) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, TNewResult>, CancellationToken, TaskContinuationOptions, TaskScheduler) | qualifier -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, TNewResult>, TaskContinuationOptions) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, TNewResult>, TaskContinuationOptions) | qualifier -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, TNewResult>, TaskScheduler) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task<>.ContinueWith<TNewResult>(Func<Task<>, TNewResult>, TaskScheduler) | qualifier -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.Task(Func<Object, TResult>, object) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.Task(Func<Object, TResult>, object) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task<>.Task(Func<Object, TResult>, object, CancellationToken) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.Task(Func<Object, TResult>, object, CancellationToken) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task<>.Task(Func<Object, TResult>, object, CancellationToken, TaskCreationOptions) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.Task(Func<Object, TResult>, object, CancellationToken, TaskCreationOptions) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task<>.Task(Func<Object, TResult>, object, TaskCreationOptions) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.Task<>.Task(Func<Object, TResult>, object, TaskCreationOptions) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task<>.Task(Func<TResult>) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task<>.Task(Func<TResult>, CancellationToken) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task<>.Task(Func<TResult>, CancellationToken, TaskCreationOptions) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task<>.Task(Func<TResult>, TaskCreationOptions) | output from argument 0 -> return | true |
| System.Threading.Tasks.Task<>.get_Result() | qualifier -> return | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task, TResult>) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task, TResult>) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task, TResult>, CancellationToken) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task, TResult>, CancellationToken) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task, TResult>, CancellationToken, TaskContinuationOptions, TaskScheduler) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task, TResult>, CancellationToken, TaskContinuationOptions, TaskScheduler) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task, TResult>, TaskContinuationOptions) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task, TResult>, TaskContinuationOptions) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult>(Task<TAntecedentResult>[], Action<Task>) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult>(Task<TAntecedentResult>[], Action<Task>, CancellationToken) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult>(Task<TAntecedentResult>[], Action<Task>, CancellationToken, TaskContinuationOptions, TaskScheduler) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TAntecedentResult>(Task<TAntecedentResult>[], Action<Task>, TaskContinuationOptions) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TResult>(Task[], Func<Task[], TResult>) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TResult>(Task[], Func<Task[], TResult>, CancellationToken) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TResult>(Task[], Func<Task[], TResult>, CancellationToken, TaskContinuationOptions, TaskScheduler) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAll<TResult>(Task[], Func<Task[], TResult>, TaskContinuationOptions) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>, CancellationToken) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>, CancellationToken) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>, CancellationToken, TaskContinuationOptions, TaskScheduler) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>, CancellationToken, TaskContinuationOptions, TaskScheduler) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>, TaskContinuationOptions) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult, TResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>, TaskContinuationOptions) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult>(Task<TAntecedentResult>[], Action<Task<TAntecedentResult>>) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult>(Task<TAntecedentResult>[], Action<Task<TAntecedentResult>>, CancellationToken) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult>(Task<TAntecedentResult>[], Action<Task<TAntecedentResult>>, CancellationToken, TaskContinuationOptions, TaskScheduler) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TAntecedentResult>(Task<TAntecedentResult>[], Action<Task<TAntecedentResult>>, TaskContinuationOptions) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TResult>(Task[], Func<Task, TResult>) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TResult>(Task[], Func<Task, TResult>, CancellationToken) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TResult>(Task[], Func<Task, TResult>, CancellationToken, TaskContinuationOptions, TaskScheduler) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory.ContinueWhenAny<TResult>(Task[], Func<Task, TResult>, TaskContinuationOptions) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory.StartNew(Action<Object>, object) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.TaskFactory.StartNew(Action<Object>, object, CancellationToken) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.TaskFactory.StartNew(Action<Object>, object, CancellationToken, TaskCreationOptions, TaskScheduler) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.TaskFactory.StartNew(Action<Object>, object, TaskCreationOptions) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.TaskFactory.StartNew<TResult>(Func<Object, TResult>, object) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.TaskFactory.StartNew<TResult>(Func<Object, TResult>, object) | output from argument 0 -> return | true |
| System.Threading.Tasks.TaskFactory.StartNew<TResult>(Func<Object, TResult>, object, CancellationToken) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.TaskFactory.StartNew<TResult>(Func<Object, TResult>, object, CancellationToken) | output from argument 0 -> return | true |
| System.Threading.Tasks.TaskFactory.StartNew<TResult>(Func<Object, TResult>, object, CancellationToken, TaskCreationOptions, TaskScheduler) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.TaskFactory.StartNew<TResult>(Func<Object, TResult>, object, CancellationToken, TaskCreationOptions, TaskScheduler) | output from argument 0 -> return | true |
| System.Threading.Tasks.TaskFactory.StartNew<TResult>(Func<Object, TResult>, object, TaskCreationOptions) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.TaskFactory.StartNew<TResult>(Func<Object, TResult>, object, TaskCreationOptions) | output from argument 0 -> return | true |
| System.Threading.Tasks.TaskFactory.StartNew<TResult>(Func<TResult>) | output from argument 0 -> return | true |
| System.Threading.Tasks.TaskFactory.StartNew<TResult>(Func<TResult>, CancellationToken) | output from argument 0 -> return | true |
| System.Threading.Tasks.TaskFactory.StartNew<TResult>(Func<TResult>, CancellationToken, TaskCreationOptions, TaskScheduler) | output from argument 0 -> return | true |
| System.Threading.Tasks.TaskFactory.StartNew<TResult>(Func<TResult>, TaskCreationOptions) | output from argument 0 -> return | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAll(Task[], Func<Task[], TResult>) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAll(Task[], Func<Task[], TResult>, CancellationToken) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAll(Task[], Func<Task[], TResult>, CancellationToken, TaskContinuationOptions, TaskScheduler) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAll(Task[], Func<Task[], TResult>, TaskContinuationOptions) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAll<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task, TResult>) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAll<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task, TResult>) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAll<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task, TResult>, CancellationToken) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAll<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task, TResult>, CancellationToken) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAll<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task, TResult>, CancellationToken, TaskContinuationOptions, TaskScheduler) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAll<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task, TResult>, CancellationToken, TaskContinuationOptions, TaskScheduler) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAll<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task, TResult>, TaskContinuationOptions) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAll<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task, TResult>, TaskContinuationOptions) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAny(Task[], Func<Task, TResult>) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAny(Task[], Func<Task, TResult>, CancellationToken) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAny(Task[], Func<Task, TResult>, CancellationToken, TaskContinuationOptions, TaskScheduler) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAny(Task[], Func<Task, TResult>, TaskContinuationOptions) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAny<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAny<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAny<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>, CancellationToken) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAny<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>, CancellationToken) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAny<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>, CancellationToken, TaskContinuationOptions, TaskScheduler) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAny<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>, CancellationToken, TaskContinuationOptions, TaskScheduler) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAny<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>, TaskContinuationOptions) | argument 0 -> parameter 0 of argument 1 | true |
| System.Threading.Tasks.TaskFactory<>.ContinueWhenAny<TAntecedentResult>(Task<TAntecedentResult>[], Func<Task<TAntecedentResult>, TResult>, TaskContinuationOptions) | output from argument 1 -> return | true |
| System.Threading.Tasks.TaskFactory<>.StartNew(Func<Object, TResult>, object) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.TaskFactory<>.StartNew(Func<Object, TResult>, object) | output from argument 0 -> return | true |
| System.Threading.Tasks.TaskFactory<>.StartNew(Func<Object, TResult>, object, CancellationToken) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.TaskFactory<>.StartNew(Func<Object, TResult>, object, CancellationToken) | output from argument 0 -> return | true |
| System.Threading.Tasks.TaskFactory<>.StartNew(Func<Object, TResult>, object, CancellationToken, TaskCreationOptions, TaskScheduler) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.TaskFactory<>.StartNew(Func<Object, TResult>, object, CancellationToken, TaskCreationOptions, TaskScheduler) | output from argument 0 -> return | true |
| System.Threading.Tasks.TaskFactory<>.StartNew(Func<Object, TResult>, object, TaskCreationOptions) | argument 1 -> parameter 0 of argument 0 | true |
| System.Threading.Tasks.TaskFactory<>.StartNew(Func<Object, TResult>, object, TaskCreationOptions) | output from argument 0 -> return | true |
| System.Threading.Tasks.TaskFactory<>.StartNew(Func<TResult>) | output from argument 0 -> return | true |
| System.Threading.Tasks.TaskFactory<>.StartNew(Func<TResult>, CancellationToken) | output from argument 0 -> return | true |
| System.Threading.Tasks.TaskFactory<>.StartNew(Func<TResult>, CancellationToken, TaskCreationOptions, TaskScheduler) | output from argument 0 -> return | true |
| System.Threading.Tasks.TaskFactory<>.StartNew(Func<TResult>, TaskCreationOptions) | output from argument 0 -> return | true |
| System.Uri.ToString() | qualifier -> return | false |
| System.Uri.Uri(string) | argument 0 -> return | false |
| System.Uri.Uri(string, UriKind) | argument 0 -> return | false |
| System.Uri.Uri(string, bool) | argument 0 -> return | false |
| System.Uri.get_OriginalString() | qualifier -> return | false |
| System.Uri.get_PathAndQuery() | qualifier -> return | false |
| System.Uri.get_Query() | qualifier -> return | false |
| System.Web.HttpCookie.get_Value() | qualifier -> return | false |
| System.Web.HttpCookie.get_Values() | qualifier -> return | false |
| System.Web.HttpServerUtility.UrlEncode(string) | argument 0 -> return | false |
| System.Web.HttpUtility.HtmlAttributeEncode(string) | argument 0 -> return | false |
| System.Web.HttpUtility.HtmlEncode(object) | argument 0 -> return | false |
| System.Web.HttpUtility.HtmlEncode(string) | argument 0 -> return | false |
| System.Web.HttpUtility.UrlEncode(string) | argument 0 -> return | false |
| System.Web.UI.WebControls.TextBox.get_Text() | qualifier -> return | false |
