name: Setup an incremental cache
description: Special cache wrapper to be run on pull requests and pushes, that will try to restore
  a cache as close as possible to the merge base

inputs:
  cached_path:
    description: 'The path to cache'
    required: true
  cached_key:
    description: 'The cache key to use - should be unique to the workflow'
    required: true

runs:
  using: composite
  steps:
    # calculate the merge-base with main, in a way that works both on PRs and pushes to main.
    - name: Calculate merge-base
      shell: bash
      if: ${{ github.event_name == 'pull_request' }}
      env:
        BASE_BRANCH: ${{ github.base_ref }}
      run: |
        MERGE_BASE=$(git cat-file commit $GITHUB_SHA | grep '^parent ' | head -1 | cut -f 2 -d " ")
        echo "merge_base=$MERGE_BASE" >> $GITHUB_ENV
#    - name: Restore read-only cache (PR)
#      if: ${{ github.event_name == 'pull_request' }}
#      uses: erik-krogh/actions-cache@a88d0603fe5fb5606db9f002dfcadeb32b5f84c6
#      with:
#        path: ${{ inputs.cached_cached_path }}
#        read-only: true
#        key: ${{ inputs.cached_key }}-pr-${{ github.sha }}
#        restore-keys: |
#          ${{ inputs.cached_key }}-${{ github.base_ref }}-${{ env.merge_base }}
#          ${{ inputs.cached_key }}-${{ github.base_ref }}-
#          ${{ inputs.cached_key }}-main-
    - name: Fill cache (push)
#      if: ${{ github.event_name != 'pull_request' }}
      uses: erik-krogh/actions-cache@a88d0603fe5fb5606db9f002dfcadeb32b5f84c6
      with:
        path: ${{ inputs.cached_path }}
        key: ${{ inputs.cached_key }}-${{ github.ref_name }}-${{ github.sha }} # just fill on main
        restore-keys: | # restore the latest cache if the exact cache is unavailable, to speed up compilation.
          ${{ inputs.cached_key }}-${{ github.ref_name }}-
          ${{ inputs.cached_key }}-main-
