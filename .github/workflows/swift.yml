name: "Swift"

on:
  pull_request:
    paths:
      - "swift/**"
      - "misc/bazel/**"
      - "misc/codegen/**"
      - "*.bazel*"
      - .github/workflows/swift.yml
      - .github/actions/**
      - codeql-workspace.yml
      - .pre-commit-config.yaml
      - "!**/*.md"
      - "!**/*.qhelp"
    branches:
      - main
      - rc/*
      - codeql-cli-*
  push:
    paths:
      - "swift/**"
      - "misc/bazel/**"
      - "misc/codegen/**"
      - "*.bazel*"
      - .github/workflows/swift.yml
      - .github/actions/**
      - codeql-workspace.yml
      - "!**/*.md"
      - "!**/*.qhelp"
    branches:
      - main
      - rc/*
      - codeql-cli-*

jobs:
  choose-runner:
    runs-on: ubuntu-latest
    outputs:
      mac-12: ${{ steps.results.outputs.MAC_12 }}
      ubuntu-latest: ${{ steps.results.outputs.UBUNTU_LATEST }}
      windows-latest: ${{ steps.results.outputs.WINDOWS_LATEST }}
    steps:
      - id: results
        run: |
          echo "UBUNTU_LATEST=$UBUNTU_LATEST" >> $GITHUB_OUTPUT
          echo "MAC_12=$MAC_12" >> $GITHUB_OUTPUT
          echo "WINDOWS_LATEST=$WINDOWS_LATEST" >> $GITHUB_OUTPUT
        env:
          UBUNTU_LATEST: ${{ (github.repository_owner == 'github' || vars.use_large_linux_runners_for_speed) && 'ubuntu-latest-xl' || 'ubuntu-latest' }}
          MAC_12: ${{ (github.repository_owner == 'github' || vars.use_large_mac_runners_for_speed) && 'macos-12-xl' || 'macos-12' }}
          WINDOWS_LATEST: ${{ (github.repository_owner == 'github' || vars.use_large_win_runners_for_speed) && 'windows-latest-xl' || 'windows-latest' }}

  # not using a matrix as you cannot depend on a specific job in a matrix, and we want to start linux checks
  # without waiting for the macOS build
  build-and-test-macos:
    needs: choose-runner
    runs-on: ${{ needs.choose-runner.outputs.mac-12 }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./swift/actions/build-and-test
  build-and-test-linux:
    needs: choose-runner
    runs-on: ${{ needs.choose-runner.outputs.ubuntu-latest }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./swift/actions/build-and-test
  qltests-linux:
    needs:
      - build-and-test-linux
      - choose-runner
    runs-on: ${{ needs.choose-runner.outputs.ubuntu-latest }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./swift/actions/run-ql-tests
  qltests-macos:
    if : ${{ github.event_name == 'pull_request' }}
    needs:
      - build-and-test-macos
      - choose-runner
    runs-on: ${{ needs.choose-runner.outputs.mac-12 }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./swift/actions/run-ql-tests
  integration-tests-linux:
    needs:
      - build-and-test-linux
      - choose-runner
    runs-on: ${{ needs.choose-runner.outputs.ubuntu-latest }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./swift/actions/run-integration-tests
  integration-tests-macos:
    if : ${{ github.event_name == 'pull_request' }}
    needs:
      - build-and-test-macos
      - choose-runner
    runs-on: ${{ needs.choose-runner.outputs.mac-12 }}
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: ./swift/actions/run-integration-tests
  clang-format:
    if : ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pre-commit/action@646c83fcd040023954eafda54b4db0192ce70507
        name: Check that python code is properly formatted
        with:
          extra_args: clang-format --all-files
  codegen:
    if : ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: bazelbuild/setup-bazelisk@v2
      - uses: actions/setup-python@v4
        with:
          python-version-file: 'swift/.python-version'
      - uses: pre-commit/action@646c83fcd040023954eafda54b4db0192ce70507
        name: Check that python code is properly formatted
        with:
          extra_args: autopep8 --all-files
      - uses: ./.github/actions/fetch-codeql
      - uses: pre-commit/action@646c83fcd040023954eafda54b4db0192ce70507
        name: Check that QL generated code was checked in
        with:
          extra_args: swift-codegen --all-files
      - name: Generate C++ files
        run: |
          bazel run //swift/codegen:codegen -- --generate=trap,cpp --cpp-output=$PWD/generated-cpp-files
      - uses: actions/upload-artifact@v3
        with:
          name: swift-generated-cpp-files
          path: generated-cpp-files/**
  database-upgrade-scripts:
    if : ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/fetch-codeql
      - uses: ./swift/actions/database-upgrade-scripts
