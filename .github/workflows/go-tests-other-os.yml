name: "Go: Run Tests - Other OS"
on:
  pull_request:
    paths:
      - "go/**"
      - "!go/ql/**" # don't run other-os if only ql/ files changed
      - .github/workflows/go-tests-other-os.yml
      - .github/actions/**
      - codeql-workspace.yml
env:
  GO_VERSION: '~1.21.0'
jobs:
  test-mac:
    name: Test MacOS
    runs-on: macos-latest
    steps:
      - name: Set up Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up CodeQL CLI
        uses: ./.github/actions/fetch-codeql

      - name: Enable problem matchers in repository
        shell: bash
        run: 'find .github/problem-matchers -name \*.json -exec echo "::add-matcher::{}" \;'

      - name: Build
        run: |
          cd go
          make

      - name: Cache compilation cache
        id: query-cache
        uses: ./.github/actions/cache-query-compilation
        with:
          key: go-qltest
      - name: Test
        run: |
          cd go
          make test cache="${{ steps.query-cache.outputs.cache-dir }}"

  choose-runner:
    runs-on: ubuntu-latest
    outputs:
      mac-12: ${{ steps.results.outputs.MAC_12 }}
      ubuntu-latest: ${{ steps.results.outputs.UBUNTU_LATEST }}
      windows-latest: ${{ steps.results.outputs.WINDOWS_LATEST }}
    steps:
      - id: results
        run: |
          echo "UBUNTU_LATEST=$UBUNTU_LATEST" >> $GITHUB_OUTPUT
          echo "MAC_12=$MAC_12" >> $GITHUB_OUTPUT
          echo "WINDOWS_LATEST=$WINDOWS_LATEST" >> $GITHUB_OUTPUT
        env:
          UBUNTU_LATEST: ${{ (github.repository_owner == 'github' || vars.use_large_linux_runners_for_speed) && 'ubuntu-latest-xl' || 'ubuntu-latest' }}
          MAC_12: ${{ (github.repository_owner == 'github' || vars.use_large_mac_runners_for_speed) && 'macos-12-xl' || 'macos-12' }}
          WINDOWS_LATEST: ${{ (github.repository_owner == 'github' || vars.use_large_win_runners_for_speed) && 'windows-latest-xl' || 'windows-latest' }}

  test-win:
    name: Test Windows
    needs: choose-runner
    runs-on: ${{ needs.choose-runner.outputs.windows-latest }}
    steps:
      - name: Set up Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up CodeQL CLI
        uses: ./.github/actions/fetch-codeql

      - name: Enable problem matchers in repository
        shell: bash
        run: 'find .github/problem-matchers -name \*.json -exec echo "::add-matcher::{}" \;'

      - name: Build
        run: |
          cd go
          make

      - name: Cache compilation cache
        id: query-cache
        uses: ./.github/actions/cache-query-compilation
        with:
          key: go-qltest

      - name: Test
        run: |
          cd go
          make test cache="${{ steps.query-cache.outputs.cache-dir }}"
