# THIS FILE IS AN AUTO-GENERATED MODELS AS DATA FILE. DO NOT EDIT.
extensions:
  - addsTo:
      pack: codeql/java-all
      extensible: summaryModel
    data:
      - ["java.util.concurrent", "BrokenBarrierException", True, "BrokenBarrierException", "(String)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "CancellationException", True, "CancellationException", "(String)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "CompletableFuture", True, "allOf", "(CompletableFuture[])", "", "Argument[0].ArrayElement", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "CompletableFuture", True, "anyOf", "(CompletableFuture[])", "", "Argument[0].ArrayElement", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "CompletableFuture", True, "completeAsync", "(Supplier)", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "CompletableFuture", True, "completeAsync", "(Supplier,Executor)", "", "Argument[this]", "ReturnValue", "value", "df-generated"]
      - ["java.util.concurrent", "CompletableFuture", True, "completeOnTimeout", "(Object,long,TimeUnit)", "", "Argument[this]", "ReturnValue", "value", "df-generated"]
      - ["java.util.concurrent", "CompletableFuture", True, "copy", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "CompletableFuture", True, "delayedExecutor", "(long,TimeUnit,Executor)", "", "Argument[2]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "CompletableFuture", True, "getNow", "(Object)", "", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "CompletableFuture", True, "getNow", "(Object)", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "CompletableFuture", True, "obtrudeException", "(Throwable)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "CompletableFuture", True, "obtrudeValue", "(Object)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "CompletableFuture", True, "orTimeout", "(long,TimeUnit)", "", "Argument[this]", "ReturnValue", "value", "df-generated"]
      - ["java.util.concurrent", "CompletionException", True, "CompletionException", "(String,Throwable)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "CompletionException", True, "CompletionException", "(String,Throwable)", "", "Argument[1]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "CompletionException", True, "CompletionException", "(Throwable)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "CompletionStage", True, "exceptionallyAsync", "(Function)", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "CompletionStage", True, "exceptionallyAsync", "(Function,Executor)", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "CompletionStage", True, "exceptionallyCompose", "(Function)", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "CompletionStage", True, "exceptionallyComposeAsync", "(Function)", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "CompletionStage", True, "exceptionallyComposeAsync", "(Function,Executor)", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap$KeySetView", True, "getMappedValue", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", True, "ConcurrentHashMap", "(Map)", "", "Argument[0].Element", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", True, "keySet", "(Object)", "", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", True, "keySet", "(Object)", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", True, "keys", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ConcurrentSkipListMap", True, "ConcurrentSkipListMap", "(Comparator)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "ConcurrentSkipListMap", True, "ConcurrentSkipListMap", "(Map)", "", "Argument[0].Element", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "ConcurrentSkipListSet", True, "ConcurrentSkipListSet", "(Collection)", "", "Argument[0].Element", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "ConcurrentSkipListSet", True, "ConcurrentSkipListSet", "(Comparator)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "ConcurrentSkipListSet", True, "ConcurrentSkipListSet", "(SortedSet)", "", "Argument[0].Element", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "CopyOnWriteArrayList", True, "CopyOnWriteArrayList", "(Collection)", "", "Argument[0].Element", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "CopyOnWriteArrayList", True, "CopyOnWriteArrayList", "(Object[])", "", "Argument[0].ArrayElement", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "CopyOnWriteArrayList", True, "addAllAbsent", "(Collection)", "", "Argument[0].Element", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "CopyOnWriteArrayList", True, "addIfAbsent", "(Object)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "CopyOnWriteArraySet", True, "CopyOnWriteArraySet", "(Collection)", "", "Argument[0].Element", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "CountedCompleter", True, "firstComplete", "()", "", "Argument[this]", "ReturnValue", "value", "df-generated"]
      - ["java.util.concurrent", "CountedCompleter", True, "getCompleter", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "CountedCompleter", True, "getRoot", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "CountedCompleter", True, "nextComplete", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "CyclicBarrier", True, "CyclicBarrier", "(int,Runnable)", "", "Argument[1]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "DelayQueue", True, "DelayQueue", "(Collection)", "", "Argument[0].Element", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "Exchanger", True, "exchange", "(Object)", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "Exchanger", True, "exchange", "(Object,long,TimeUnit)", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ExecutionException", True, "ExecutionException", "(String,Throwable)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "ExecutionException", True, "ExecutionException", "(String,Throwable)", "", "Argument[1]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "ExecutionException", True, "ExecutionException", "(Throwable)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "Executor", True, "execute", "(Runnable)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "ExecutorCompletionService", True, "ExecutorCompletionService", "(Executor)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "ExecutorCompletionService", True, "ExecutorCompletionService", "(Executor,BlockingQueue)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "ExecutorCompletionService", True, "ExecutorCompletionService", "(Executor,BlockingQueue)", "", "Argument[1].Element", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "ExecutorService", True, "invokeAll", "(Collection)", "", "Argument[0].Element", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ExecutorService", True, "invokeAll", "(Collection,long,TimeUnit)", "", "Argument[0].Element", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ExecutorService", True, "shutdownNow", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ExecutorService", True, "submit", "(Callable)", "", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ExecutorService", True, "submit", "(Runnable,Object)", "", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ExecutorService", True, "submit", "(Runnable,Object)", "", "Argument[1]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "Executors", True, "callable", "(Runnable)", "", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "Executors", True, "callable", "(Runnable,Object)", "", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "Executors", True, "callable", "(Runnable,Object)", "", "Argument[1]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "Executors", True, "newCachedThreadPool", "(ThreadFactory)", "", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "Executors", True, "newFixedThreadPool", "(int,ThreadFactory)", "", "Argument[1]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "Executors", True, "newScheduledThreadPool", "(int,ThreadFactory)", "", "Argument[1]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "Executors", True, "newSingleThreadExecutor", "(ThreadFactory)", "", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "Executors", True, "newSingleThreadScheduledExecutor", "(ThreadFactory)", "", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "Executors", True, "privilegedCallable", "(Callable)", "", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "Executors", True, "privilegedCallableUsingCurrentClassLoader", "(Callable)", "", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "Executors", True, "unconfigurableExecutorService", "(ExecutorService)", "", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "Executors", True, "unconfigurableScheduledExecutorService", "(ScheduledExecutorService)", "", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ForkJoinPool$ForkJoinWorkerThreadFactory", True, "newThread", "(ForkJoinPool)", "", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ForkJoinPool", True, "ForkJoinPool", "(int,ForkJoinPool$ForkJoinWorkerThreadFactory,Thread$UncaughtExceptionHandler,boolean)", "", "Argument[1]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "ForkJoinPool", True, "ForkJoinPool", "(int,ForkJoinPool$ForkJoinWorkerThreadFactory,Thread$UncaughtExceptionHandler,boolean)", "", "Argument[2]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "ForkJoinPool", True, "ForkJoinPool", "(int,ForkJoinPool$ForkJoinWorkerThreadFactory,Thread$UncaughtExceptionHandler,boolean,int,int,int,Predicate,long,TimeUnit)", "", "Argument[1]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "ForkJoinPool", True, "ForkJoinPool", "(int,ForkJoinPool$ForkJoinWorkerThreadFactory,Thread$UncaughtExceptionHandler,boolean,int,int,int,Predicate,long,TimeUnit)", "", "Argument[2]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "ForkJoinPool", True, "ForkJoinPool", "(int,ForkJoinPool$ForkJoinWorkerThreadFactory,Thread$UncaughtExceptionHandler,boolean,int,int,int,Predicate,long,TimeUnit)", "", "Argument[7]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "ForkJoinPool", True, "getFactory", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ForkJoinPool", True, "getUncaughtExceptionHandler", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ForkJoinPool", True, "invoke", "(ForkJoinTask)", "", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ForkJoinPool", True, "submit", "(ForkJoinTask)", "", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ForkJoinTask", True, "adapt", "(Callable)", "", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ForkJoinTask", True, "adapt", "(Runnable)", "", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ForkJoinTask", True, "adapt", "(Runnable,Object)", "", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ForkJoinTask", True, "adapt", "(Runnable,Object)", "", "Argument[1]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ForkJoinTask", True, "complete", "(Object)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "ForkJoinTask", True, "fork", "()", "", "Argument[this]", "ReturnValue", "value", "df-generated"]
      - ["java.util.concurrent", "ForkJoinTask", True, "getException", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ForkJoinTask", True, "invoke", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ForkJoinTask", True, "invokeAll", "(Collection)", "", "Argument[0].Element", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ForkJoinWorkerThread", True, "getPool", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "FutureTask", True, "FutureTask", "(Callable)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "FutureTask", True, "FutureTask", "(Runnable,Object)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "FutureTask", True, "FutureTask", "(Runnable,Object)", "", "Argument[1]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "LinkedBlockingDeque", True, "LinkedBlockingDeque", "(Collection)", "", "Argument[0].Element", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "LinkedBlockingQueue", True, "LinkedBlockingQueue", "(Collection)", "", "Argument[0].Element", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "Phaser", True, "Phaser", "(Phaser)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "Phaser", True, "Phaser", "(Phaser,int)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "Phaser", True, "getParent", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "Phaser", True, "getRoot", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "PriorityBlockingQueue", True, "PriorityBlockingQueue", "(Collection)", "", "Argument[0].Element", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "PriorityBlockingQueue", True, "PriorityBlockingQueue", "(int,Comparator)", "", "Argument[1]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "PriorityBlockingQueue", True, "comparator", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "RejectedExecutionException", True, "RejectedExecutionException", "(String)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "RejectedExecutionException", True, "RejectedExecutionException", "(String,Throwable)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "RejectedExecutionException", True, "RejectedExecutionException", "(String,Throwable)", "", "Argument[1]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "RejectedExecutionException", True, "RejectedExecutionException", "(Throwable)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "RejectedExecutionHandler", True, "rejectedExecution", "(Runnable,ThreadPoolExecutor)", "", "Argument[0]", "Argument[1]", "taint", "df-generated"]
      - ["java.util.concurrent", "ScheduledExecutorService", True, "schedule", "(Callable,long,TimeUnit)", "", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ScheduledExecutorService", True, "schedule", "(Runnable,long,TimeUnit)", "", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ScheduledExecutorService", True, "scheduleAtFixedRate", "(Runnable,long,long,TimeUnit)", "", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ScheduledExecutorService", True, "scheduleWithFixedDelay", "(Runnable,long,long,TimeUnit)", "", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ScheduledThreadPoolExecutor", True, "ScheduledThreadPoolExecutor", "(int,RejectedExecutionHandler)", "", "Argument[1]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "ScheduledThreadPoolExecutor", True, "ScheduledThreadPoolExecutor", "(int,ThreadFactory)", "", "Argument[1]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "ScheduledThreadPoolExecutor", True, "ScheduledThreadPoolExecutor", "(int,ThreadFactory,RejectedExecutionHandler)", "", "Argument[1]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "ScheduledThreadPoolExecutor", True, "ScheduledThreadPoolExecutor", "(int,ThreadFactory,RejectedExecutionHandler)", "", "Argument[2]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "SubmissionPublisher", True, "SubmissionPublisher", "(Executor,int)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "SubmissionPublisher", True, "SubmissionPublisher", "(Executor,int,BiConsumer)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "SubmissionPublisher", True, "SubmissionPublisher", "(Executor,int,BiConsumer)", "", "Argument[2]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "SubmissionPublisher", True, "closeExceptionally", "(Throwable)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "SubmissionPublisher", True, "getClosedException", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "SubmissionPublisher", True, "getExecutor", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "SubmissionPublisher", True, "getSubscribers", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ThreadFactory", True, "newThread", "(Runnable)", "", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ThreadFactory", True, "newThread", "(Runnable)", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", True, "ThreadPoolExecutor", "(int,int,long,TimeUnit,BlockingQueue)", "", "Argument[4].Element", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", True, "ThreadPoolExecutor", "(int,int,long,TimeUnit,BlockingQueue,RejectedExecutionHandler)", "", "Argument[4].Element", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", True, "ThreadPoolExecutor", "(int,int,long,TimeUnit,BlockingQueue,RejectedExecutionHandler)", "", "Argument[5]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", True, "ThreadPoolExecutor", "(int,int,long,TimeUnit,BlockingQueue,ThreadFactory)", "", "Argument[4].Element", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", True, "ThreadPoolExecutor", "(int,int,long,TimeUnit,BlockingQueue,ThreadFactory)", "", "Argument[5]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", True, "ThreadPoolExecutor", "(int,int,long,TimeUnit,BlockingQueue,ThreadFactory,RejectedExecutionHandler)", "", "Argument[4].Element", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", True, "ThreadPoolExecutor", "(int,int,long,TimeUnit,BlockingQueue,ThreadFactory,RejectedExecutionHandler)", "", "Argument[5]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", True, "ThreadPoolExecutor", "(int,int,long,TimeUnit,BlockingQueue,ThreadFactory,RejectedExecutionHandler)", "", "Argument[6]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", True, "getQueue", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", True, "getRejectedExecutionHandler", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", True, "getThreadFactory", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", True, "setRejectedExecutionHandler", "(RejectedExecutionHandler)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", True, "setThreadFactory", "(ThreadFactory)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["java.util.concurrent", "TimeoutException", True, "TimeoutException", "(String)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
  - addsTo:
      pack: codeql/java-all
      extensible: neutralModel
    data:
      - ["java.util.concurrent", "ArrayBlockingQueue", "ArrayBlockingQueue", "(int)", "summary", "df-generated"]
      - ["java.util.concurrent", "ArrayBlockingQueue", "ArrayBlockingQueue", "(int,boolean)", "summary", "df-generated"]
      - ["java.util.concurrent", "ArrayBlockingQueue", "ArrayBlockingQueue", "(int,boolean,Collection)", "summary", "df-generated"]
      - ["java.util.concurrent", "CompletableFuture", "completedStage", "(Object)", "summary", "df-generated"]
      - ["java.util.concurrent", "CompletableFuture", "defaultExecutor", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "CompletableFuture", "delayedExecutor", "(long,TimeUnit)", "summary", "df-generated"]
      - ["java.util.concurrent", "CompletableFuture", "failedFuture", "(Throwable)", "summary", "df-generated"]
      - ["java.util.concurrent", "CompletableFuture", "failedStage", "(Throwable)", "summary", "df-generated"]
      - ["java.util.concurrent", "CompletableFuture", "getNumberOfDependents", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "CompletableFuture", "isCompletedExceptionally", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "CompletableFuture", "minimalCompletionStage", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "CompletableFuture", "newIncompleteFuture", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "CompletableFuture", "runAsync", "(Runnable)", "summary", "df-generated"]
      - ["java.util.concurrent", "CompletableFuture", "runAsync", "(Runnable,Executor)", "summary", "df-generated"]
      - ["java.util.concurrent", "CompletableFuture", "supplyAsync", "(Supplier)", "summary", "df-generated"]
      - ["java.util.concurrent", "CompletableFuture", "supplyAsync", "(Supplier,Executor)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "ConcurrentHashMap", "(int)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "ConcurrentHashMap", "(int,float)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "ConcurrentHashMap", "(int,float,int)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "contains", "(Object)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "forEach", "(long,BiConsumer)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "forEach", "(long,BiFunction,Consumer)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "forEachEntry", "(long,Consumer)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "forEachEntry", "(long,Function,Consumer)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "forEachKey", "(long,Consumer)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "forEachKey", "(long,Function,Consumer)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "forEachValue", "(long,Consumer)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "forEachValue", "(long,Function,Consumer)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "mappingCount", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "newKeySet", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "newKeySet", "(int)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "reduce", "(long,BiFunction,BiFunction)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "reduceEntries", "(long,BiFunction)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "reduceEntries", "(long,Function,BiFunction)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "reduceEntriesToDouble", "(long,ToDoubleFunction,double,DoubleBinaryOperator)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "reduceEntriesToInt", "(long,ToIntFunction,int,IntBinaryOperator)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "reduceEntriesToLong", "(long,ToLongFunction,long,LongBinaryOperator)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "reduceKeys", "(long,BiFunction)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "reduceKeys", "(long,Function,BiFunction)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "reduceKeysToDouble", "(long,ToDoubleFunction,double,DoubleBinaryOperator)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "reduceKeysToInt", "(long,ToIntFunction,int,IntBinaryOperator)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "reduceKeysToLong", "(long,ToLongFunction,long,LongBinaryOperator)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "reduceToDouble", "(long,ToDoubleBiFunction,double,DoubleBinaryOperator)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "reduceToInt", "(long,ToIntBiFunction,int,IntBinaryOperator)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "reduceToLong", "(long,ToLongBiFunction,long,LongBinaryOperator)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "reduceValues", "(long,BiFunction)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "reduceValues", "(long,Function,BiFunction)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "reduceValuesToDouble", "(long,ToDoubleFunction,double,DoubleBinaryOperator)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "reduceValuesToInt", "(long,ToIntFunction,int,IntBinaryOperator)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "reduceValuesToLong", "(long,ToLongFunction,long,LongBinaryOperator)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "search", "(long,BiFunction)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "searchEntries", "(long,Function)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "searchKeys", "(long,Function)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentHashMap", "searchValues", "(long,Function)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentLinkedDeque", "ConcurrentLinkedDeque", "(Collection)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentLinkedQueue", "ConcurrentLinkedQueue", "(Collection)", "summary", "df-generated"]
      - ["java.util.concurrent", "ConcurrentSkipListMap", "ConcurrentSkipListMap", "(SortedMap)", "summary", "df-generated"]
      - ["java.util.concurrent", "CopyOnWriteArrayList", "indexOf", "(Object,int)", "summary", "df-generated"]
      - ["java.util.concurrent", "CopyOnWriteArrayList", "lastIndexOf", "(Object,int)", "summary", "df-generated"]
      - ["java.util.concurrent", "CountedCompleter", "addToPendingCount", "(int)", "summary", "df-generated"]
      - ["java.util.concurrent", "CountedCompleter", "compareAndSetPendingCount", "(int,int)", "summary", "df-generated"]
      - ["java.util.concurrent", "CountedCompleter", "compute", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "CountedCompleter", "decrementPendingCountUnlessZero", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "CountedCompleter", "getPendingCount", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "CountedCompleter", "helpComplete", "(int)", "summary", "df-generated"]
      - ["java.util.concurrent", "CountedCompleter", "onCompletion", "(CountedCompleter)", "summary", "df-generated"]
      - ["java.util.concurrent", "CountedCompleter", "onExceptionalCompletion", "(Throwable,CountedCompleter)", "summary", "df-generated"]
      - ["java.util.concurrent", "CountedCompleter", "propagateCompletion", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "CountedCompleter", "quietlyCompleteRoot", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "CountedCompleter", "setPendingCount", "(int)", "summary", "df-generated"]
      - ["java.util.concurrent", "CountedCompleter", "tryComplete", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "CyclicBarrier", "CyclicBarrier", "(int)", "summary", "df-generated"]
      - ["java.util.concurrent", "CyclicBarrier", "await", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "CyclicBarrier", "await", "(long,TimeUnit)", "summary", "df-generated"]
      - ["java.util.concurrent", "CyclicBarrier", "getNumberWaiting", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "CyclicBarrier", "getParties", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "CyclicBarrier", "isBroken", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "CyclicBarrier", "reset", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "Delayed", "getDelay", "(TimeUnit)", "summary", "df-generated"]
      - ["java.util.concurrent", "ExecutorService", "awaitTermination", "(long,TimeUnit)", "summary", "df-generated"]
      - ["java.util.concurrent", "ExecutorService", "invokeAny", "(Collection)", "summary", "df-generated"]
      - ["java.util.concurrent", "ExecutorService", "invokeAny", "(Collection,long,TimeUnit)", "summary", "df-generated"]
      - ["java.util.concurrent", "ExecutorService", "isShutdown", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ExecutorService", "isTerminated", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ExecutorService", "shutdown", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "Executors", "callable", "(PrivilegedAction)", "summary", "df-generated"]
      - ["java.util.concurrent", "Executors", "callable", "(PrivilegedExceptionAction)", "summary", "df-generated"]
      - ["java.util.concurrent", "Executors", "defaultThreadFactory", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "Executors", "newCachedThreadPool", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "Executors", "newFixedThreadPool", "(int)", "summary", "df-generated"]
      - ["java.util.concurrent", "Executors", "newScheduledThreadPool", "(int)", "summary", "df-generated"]
      - ["java.util.concurrent", "Executors", "newSingleThreadExecutor", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "Executors", "newSingleThreadScheduledExecutor", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "Executors", "newWorkStealingPool", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "Executors", "newWorkStealingPool", "(int)", "summary", "df-generated"]
      - ["java.util.concurrent", "Executors", "privilegedThreadFactory", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "Flow$Subscription", "cancel", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "Flow$Subscription", "request", "(long)", "summary", "df-generated"]
      - ["java.util.concurrent", "Flow", "defaultBufferSize", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinPool$ManagedBlocker", "block", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinPool$ManagedBlocker", "isReleasable", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinPool", "ForkJoinPool", "(int)", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinPool", "awaitQuiescence", "(long,TimeUnit)", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinPool", "commonPool", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinPool", "execute", "(ForkJoinTask)", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinPool", "getActiveThreadCount", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinPool", "getAsyncMode", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinPool", "getCommonPoolParallelism", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinPool", "getParallelism", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinPool", "getPoolSize", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinPool", "getQueuedSubmissionCount", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinPool", "getQueuedTaskCount", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinPool", "getRunningThreadCount", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinPool", "getStealCount", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinPool", "hasQueuedSubmissions", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinPool", "isQuiescent", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinPool", "isTerminating", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinPool", "managedBlock", "(ForkJoinPool$ManagedBlocker)", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinTask", "compareAndSetForkJoinTaskTag", "(short,short)", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinTask", "completeExceptionally", "(Throwable)", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinTask", "getForkJoinTaskTag", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinTask", "getPool", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinTask", "getQueuedTaskCount", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinTask", "getRawResult", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinTask", "getSurplusQueuedTaskCount", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinTask", "helpQuiesce", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinTask", "inForkJoinPool", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinTask", "invokeAll", "(ForkJoinTask,ForkJoinTask)", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinTask", "invokeAll", "(ForkJoinTask[])", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinTask", "isCompletedAbnormally", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinTask", "isCompletedNormally", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinTask", "join", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinTask", "quietlyComplete", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinTask", "quietlyInvoke", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinTask", "quietlyJoin", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinTask", "reinitialize", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinTask", "setForkJoinTaskTag", "(short)", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinTask", "tryUnfork", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ForkJoinWorkerThread", "getPoolIndex", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "LinkedBlockingDeque", "LinkedBlockingDeque", "(int)", "summary", "df-generated"]
      - ["java.util.concurrent", "LinkedBlockingQueue", "LinkedBlockingQueue", "(int)", "summary", "df-generated"]
      - ["java.util.concurrent", "LinkedTransferQueue", "LinkedTransferQueue", "(Collection)", "summary", "df-generated"]
      - ["java.util.concurrent", "Phaser", "Phaser", "(int)", "summary", "df-generated"]
      - ["java.util.concurrent", "Phaser", "arrive", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "Phaser", "arriveAndAwaitAdvance", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "Phaser", "arriveAndDeregister", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "Phaser", "awaitAdvance", "(int)", "summary", "df-generated"]
      - ["java.util.concurrent", "Phaser", "awaitAdvanceInterruptibly", "(int)", "summary", "df-generated"]
      - ["java.util.concurrent", "Phaser", "awaitAdvanceInterruptibly", "(int,long,TimeUnit)", "summary", "df-generated"]
      - ["java.util.concurrent", "Phaser", "bulkRegister", "(int)", "summary", "df-generated"]
      - ["java.util.concurrent", "Phaser", "forceTermination", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "Phaser", "getArrivedParties", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "Phaser", "getPhase", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "Phaser", "getRegisteredParties", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "Phaser", "getUnarrivedParties", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "Phaser", "isTerminated", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "Phaser", "register", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "PriorityBlockingQueue", "PriorityBlockingQueue", "(int)", "summary", "df-generated"]
      - ["java.util.concurrent", "ScheduledThreadPoolExecutor", "ScheduledThreadPoolExecutor", "(int)", "summary", "df-generated"]
      - ["java.util.concurrent", "ScheduledThreadPoolExecutor", "getContinueExistingPeriodicTasksAfterShutdownPolicy", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ScheduledThreadPoolExecutor", "getExecuteExistingDelayedTasksAfterShutdownPolicy", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ScheduledThreadPoolExecutor", "getRemoveOnCancelPolicy", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ScheduledThreadPoolExecutor", "setContinueExistingPeriodicTasksAfterShutdownPolicy", "(boolean)", "summary", "df-generated"]
      - ["java.util.concurrent", "ScheduledThreadPoolExecutor", "setExecuteExistingDelayedTasksAfterShutdownPolicy", "(boolean)", "summary", "df-generated"]
      - ["java.util.concurrent", "ScheduledThreadPoolExecutor", "setRemoveOnCancelPolicy", "(boolean)", "summary", "df-generated"]
      - ["java.util.concurrent", "Semaphore", "Semaphore", "(int)", "summary", "df-generated"]
      - ["java.util.concurrent", "Semaphore", "Semaphore", "(int,boolean)", "summary", "df-generated"]
      - ["java.util.concurrent", "Semaphore", "acquire", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "Semaphore", "acquire", "(int)", "summary", "df-generated"]
      - ["java.util.concurrent", "Semaphore", "acquireUninterruptibly", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "Semaphore", "acquireUninterruptibly", "(int)", "summary", "df-generated"]
      - ["java.util.concurrent", "Semaphore", "availablePermits", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "Semaphore", "drainPermits", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "Semaphore", "getQueueLength", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "Semaphore", "hasQueuedThreads", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "Semaphore", "isFair", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "Semaphore", "release", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "Semaphore", "release", "(int)", "summary", "df-generated"]
      - ["java.util.concurrent", "Semaphore", "tryAcquire", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "Semaphore", "tryAcquire", "(int)", "summary", "df-generated"]
      - ["java.util.concurrent", "Semaphore", "tryAcquire", "(int,long,TimeUnit)", "summary", "df-generated"]
      - ["java.util.concurrent", "Semaphore", "tryAcquire", "(long,TimeUnit)", "summary", "df-generated"]
      - ["java.util.concurrent", "SubmissionPublisher", "consume", "(Consumer)", "summary", "df-generated"]
      - ["java.util.concurrent", "SubmissionPublisher", "estimateMaximumLag", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "SubmissionPublisher", "estimateMinimumDemand", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "SubmissionPublisher", "getMaxBufferCapacity", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "SubmissionPublisher", "getNumberOfSubscribers", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "SubmissionPublisher", "hasSubscribers", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "SubmissionPublisher", "isClosed", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "SubmissionPublisher", "isSubscribed", "(Flow$Subscriber)", "summary", "df-generated"]
      - ["java.util.concurrent", "SubmissionPublisher", "offer", "(Object,BiPredicate)", "summary", "df-generated"]
      - ["java.util.concurrent", "SubmissionPublisher", "offer", "(Object,long,TimeUnit,BiPredicate)", "summary", "df-generated"]
      - ["java.util.concurrent", "SubmissionPublisher", "submit", "(Object)", "summary", "df-generated"]
      - ["java.util.concurrent", "SynchronousQueue", "SynchronousQueue", "(boolean)", "summary", "df-generated"]
      - ["java.util.concurrent", "ThreadLocalRandom", "current", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", "allowCoreThreadTimeOut", "(boolean)", "summary", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", "allowsCoreThreadTimeOut", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", "getActiveCount", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", "getCompletedTaskCount", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", "getCorePoolSize", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", "getKeepAliveTime", "(TimeUnit)", "summary", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", "getLargestPoolSize", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", "getMaximumPoolSize", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", "getPoolSize", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", "getTaskCount", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", "isTerminating", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", "prestartAllCoreThreads", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", "prestartCoreThread", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", "purge", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", "remove", "(Runnable)", "summary", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", "setCorePoolSize", "(int)", "summary", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", "setKeepAliveTime", "(long,TimeUnit)", "summary", "df-generated"]
      - ["java.util.concurrent", "ThreadPoolExecutor", "setMaximumPoolSize", "(int)", "summary", "df-generated"]
      - ["java.util.concurrent", "TimeUnit", "convert", "(Duration)", "summary", "df-generated"]
      - ["java.util.concurrent", "TimeUnit", "convert", "(long,TimeUnit)", "summary", "df-generated"]
      - ["java.util.concurrent", "TimeUnit", "of", "(ChronoUnit)", "summary", "df-generated"]
      - ["java.util.concurrent", "TimeUnit", "sleep", "(long)", "summary", "df-generated"]
      - ["java.util.concurrent", "TimeUnit", "timedJoin", "(Thread,long)", "summary", "df-generated"]
      - ["java.util.concurrent", "TimeUnit", "timedWait", "(Object,long)", "summary", "df-generated"]
      - ["java.util.concurrent", "TimeUnit", "toChronoUnit", "()", "summary", "df-generated"]
      - ["java.util.concurrent", "TimeUnit", "toDays", "(long)", "summary", "df-generated"]
      - ["java.util.concurrent", "TimeUnit", "toHours", "(long)", "summary", "df-generated"]
      - ["java.util.concurrent", "TimeUnit", "toMicros", "(long)", "summary", "df-generated"]
      - ["java.util.concurrent", "TimeUnit", "toMinutes", "(long)", "summary", "df-generated"]
      - ["java.util.concurrent", "TimeUnit", "toNanos", "(long)", "summary", "df-generated"]
      - ["java.util.concurrent", "TimeUnit", "toSeconds", "(long)", "summary", "df-generated"]
