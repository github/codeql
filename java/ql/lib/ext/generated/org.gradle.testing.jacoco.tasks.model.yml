# THIS FILE IS AN AUTO-GENERATED MODELS AS DATA FILE. DO NOT EDIT.
extensions:
  - addsTo:
      pack: codeql/java-all
      extensible: summaryModel
    data:
      - ["org.gradle.testing.jacoco.tasks", "JacocoBase", True, "getJacocoClasspath", "()", "", "Argument[this].SyntheticField[org.gradle.testing.jacoco.tasks.JacocoBase.jacocoClasspath]", "ReturnValue", "value", "dfc-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoBase", True, "setJacocoClasspath", "(FileCollection)", "", "Argument[0]", "Argument[this].SyntheticField[org.gradle.testing.jacoco.tasks.JacocoBase.jacocoClasspath]", "value", "dfc-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoCoverageVerification", True, "getViolationRules", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoCoverageVerification", True, "violationRules", "(Action)", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoReport", True, "getReportProjectName", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoReport", True, "getReports", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoReport", True, "reports", "(Action)", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoReport", True, "reports", "(Closure)", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoReportBase", True, "getAdditionalClassDirs", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoReportBase", True, "getAdditionalSourceDirs", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoReportBase", True, "getAllClassDirs", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoReportBase", True, "getAllSourceDirs", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoReportBase", True, "getClassDirectories", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoReportBase", True, "getExecutionData", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoReportBase", True, "getSourceDirectories", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoReportBase", True, "getSourceEncoding", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
  - addsTo:
      pack: codeql/java-all
      extensible: sinkModel
    data:
      - ["org.gradle.testing.jacoco.tasks", "JacocoCoverageVerification", True, "check", "()", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoCoverageVerification", True, "check", "()", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoCoverageVerification", True, "check", "()", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoCoverageVerification", True, "check", "()", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoCoverageVerification", True, "violationRules", "(Action)", "", "Argument[0]", "groovy-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoCoverageVerification", True, "violationRules", "(Action)", "", "Argument[0]", "path-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoCoverageVerification", True, "violationRules", "(Action)", "", "Argument[0]", "request-forgery", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoCoverageVerification", True, "violationRules", "(Action)", "", "Argument[0]", "xslt-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoReport", True, "generate", "()", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoReport", True, "generate", "()", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoReport", True, "generate", "()", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoReport", True, "generate", "()", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoReportBase", True, "executionData", "(TaskCollection)", "", "Argument[0]", "groovy-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoReportBase", True, "executionData", "(TaskCollection)", "", "Argument[0]", "path-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoReportBase", True, "executionData", "(TaskCollection)", "", "Argument[0]", "request-forgery", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoReportBase", True, "executionData", "(TaskCollection)", "", "Argument[0]", "xslt-injection", "df-generated"]
  - addsTo:
      pack: codeql/java-all
      extensible: neutralModel
    data:
      - ["org.gradle.testing.jacoco.tasks", "JacocoCoverageVerification", "check", "()", "summary", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoReport", "generate", "()", "summary", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoReportBase", "additionalClassDirs", "(FileCollection)", "summary", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoReportBase", "additionalClassDirs", "(File[])", "summary", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoReportBase", "additionalSourceDirs", "(FileCollection)", "summary", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoReportBase", "additionalSourceDirs", "(File[])", "summary", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoReportBase", "executionData", "(Object[])", "summary", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoReportBase", "executionData", "(TaskCollection)", "summary", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoReportBase", "executionData", "(Task[])", "summary", "df-generated"]
      - ["org.gradle.testing.jacoco.tasks", "JacocoReportBase", "sourceSets", "(SourceSet[])", "summary", "df-generated"]
