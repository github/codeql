# THIS FILE IS AN AUTO-GENERATED MODELS AS DATA FILE. DO NOT EDIT.
extensions:
  - addsTo:
      pack: codeql/java-all
      extensible: neutralModel
    data:
      - ["org.gradle.integtests", "BuildScriptClasspathIntegrationTest", "buildSrcProjectCanReferToSourceOutsideBuildSrcDir", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "BuildScriptClasspathIntegrationTest", "canDeclareClasspathInBuildScript", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "BuildScriptClasspathIntegrationTest", "canExtendTheDefaultBuildForBuildSrcProject", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "BuildScriptClasspathIntegrationTest", "canInjectClassPathIntoSubProjects", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "BuildScriptClasspathIntegrationTest", "canReuseClassPathRepositories", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "BuildScriptClasspathIntegrationTest", "canUseBuildSrcAndSystemClassesInClasspathDeclaration", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "BuildScriptClasspathIntegrationTest", "gradleImplementationClassesDoNotLeakOntoBuildScriptClassPathWhenUsingBuildSrc", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "BuildScriptClasspathIntegrationTest", "inheritsClassPathOfParentProject", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "BuildScriptClasspathIntegrationTest", "providesADefaultBuildForBuildSrcProject", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "BuildScriptClasspathIntegrationTest", "reportsFailureDuringClasspathDeclaration", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "ProjectLoadingIntegrationTest", "buildFailsWhenMultipleProjectsMeetDefaultProjectCriteria", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "ProjectLoadingIntegrationTest", "buildFailsWhenNestedBuildHasNoSettingsFile", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "ProjectLoadingIntegrationTest", "buildFailsWhenOneInitScriptDoesNotExist", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "ProjectLoadingIntegrationTest", "buildFailsWhenSpecifiedBuildFileIsNotAFile", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "ProjectLoadingIntegrationTest", "buildFailsWhenSpecifiedInitScriptIsNotAFile", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "ProjectLoadingIntegrationTest", "buildFailsWhenSpecifiedProjectDirectoryIsNotADirectory", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "ProjectLoadingIntegrationTest", "buildFailsWhenSpecifiedSettingsFileDoesNotContainMatchingProject", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "ProjectLoadingIntegrationTest", "buildFailsWhenSpecifiedSettingsFileIsNotAFile", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "ProjectLoadingIntegrationTest", "canDetermineRootProjectAndDefaultProjectBasedOnBuildFile", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "ProjectLoadingIntegrationTest", "canDetermineRootProjectAndDefaultProjectBasedOnCurrentDirectory", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "ProjectLoadingIntegrationTest", "canDetermineRootProjectAndDefaultProjectBasedOnProjectDirectory", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "ProjectLoadingIntegrationTest", "canTargetRootProjectDirectoryFromSubDirectory", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "ProjectLoadingIntegrationTest", "explicitBuildFileTakesPrecedenceOverBuildFileDefinedInSettingsInSameDirectory", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "ProjectLoadingIntegrationTest", "handlesSimilarlyNamedBuildFilesInSameDirectory", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "ProjectLoadingIntegrationTest", "handlesWhitespaceOnlySettingsAndBuildFiles", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "ProjectLoadingIntegrationTest", "multiProjectBuildCanHaveAllProjectsAsChildrenOfSettingsDir", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "ProjectLoadingIntegrationTest", "multiProjectBuildCanHaveMultipleProjectsWithSameProjectDir", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "ProjectLoadingIntegrationTest", "multiProjectBuildCanHaveSettingsFileAndRootBuildFileInSubDir", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "ProjectLoadingIntegrationTest", "multiProjectBuildCanHaveSeveralProjectsWithSameBuildFile", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "ProjectLoadingIntegrationTest", "rootProjectDirectoryAndBuildFileDoNotHaveToExistWhenInSettingsDir", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "ProjectLoadingIntegrationTest", "settingsFileGetsIgnoredWhenUsingSettingsOnlyDirectoryAsProjectDirectory", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "ProjectLoadingIntegrationTest", "settingsFileInParentDirectoryTakesPrecedenceOverBuildFile", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "ProjectLoadingIntegrationTest", "settingsFileTakesPrecedenceOverBuildFileInSameDirectory", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "ProjectLoadingIntegrationTest", "specifyingCustomBuildFileIsDeprecated", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "ProjectLoadingIntegrationTest", "specifyingCustomSettingsFileIsDeprecated", "()", "summary", "df-generated"]
      - ["org.gradle.integtests", "ProjectLoadingIntegrationTest", "usesRootProjectAsDefaultProjectWhenInSettingsDir", "()", "summary", "df-generated"]
