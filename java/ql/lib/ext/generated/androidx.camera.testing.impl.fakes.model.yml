# THIS FILE IS AN AUTO-GENERATED MODELS AS DATA FILE. DO NOT EDIT.
extensions:
  - addsTo:
      pack: codeql/java-all
      extensible: summaryModel
    data:
      - ["androidx.camera.testing.impl.fakes", "FakeCameraCoordinator", True, "addConcurrentCameraIdsAndCameraSelectors", "(Map)", "", "Argument[0].MapKey", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeCameraCoordinator.mConcurrentCameraIdMap].MapKey", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeCameraCoordinator", True, "addConcurrentCameraIdsAndCameraSelectors", "(Map)", "", "Argument[0].MapKey", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeCameraCoordinator.mConcurrentCameraIdMap].MapValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeCameraCoordinator", True, "getActiveConcurrentCameraInfos", "()", "", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeCameraCoordinator.mActiveConcurrentCameraInfos]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeCameraCoordinator", True, "getPairedConcurrentCameraId", "(String)", "", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeCameraCoordinator.mConcurrentCameraIdMap].MapValue", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeCameraCoordinator", True, "setActiveConcurrentCameraInfos", "(List)", "", "Argument[0]", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeCameraCoordinator.mActiveConcurrentCameraInfos]", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeCameraDeviceSurfaceManager", False, "setSuggestedStreamSpec", "(String,Class,StreamSpec)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeCameraDeviceSurfaceManager", False, "setValidSurfaceCombos", "(Set)", "", "Argument[0].Element", "Argument[this]", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeCameraFactory", False, "FakeCameraFactory", "(CameraSelector)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeCameraFactory", False, "getAvailableCameraIds", "()", "", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeCameraFactory.mCachedCameraIds]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeCameraFactory", False, "getAvailableCameraIds", "()", "", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeCameraFactory.mCameraMap].MapKey", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeCameraFactory.mCachedCameraIds].Element", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeCameraFactory", False, "getAvailableCameraIds", "()", "", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeCameraFactory.mCameraMap].MapKey", "ReturnValue.Element", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeCameraFactory", False, "getCameraCoordinator", "()", "", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeCameraFactory.mCameraCoordinator]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeCameraFactory", False, "getCameraManager", "()", "", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeCameraFactory.mCameraManager]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeCameraFactory", False, "insertCamera", "(int,String,Callable)", "", "Argument[1]", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeCameraFactory.mCameraMap].MapKey", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeCameraFactory", False, "insertDefaultBackCamera", "(String,Callable)", "", "Argument[0]", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeCameraFactory.mCameraMap].MapKey", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeCameraFactory", False, "insertDefaultFrontCamera", "(String,Callable)", "", "Argument[0]", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeCameraFactory.mCameraMap].MapKey", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeCameraFactory", False, "setCameraCoordinator", "(CameraCoordinator)", "", "Argument[0]", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeCameraFactory.mCameraCoordinator]", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeCameraFactory", False, "setCameraManager", "(Object)", "", "Argument[0]", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeCameraFactory.mCameraManager]", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeCaptureStage", True, "FakeCaptureStage", "(int,CaptureConfig)", "", "Argument[1]", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeCaptureStage.mCaptureConfig]", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeCaptureStage", True, "getCaptureConfig", "()", "", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeCaptureStage.mCaptureConfig]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeConfig$Builder", False, "build", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeConfig$Builder", False, "getMutableConfig", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeEncoderProfilesProvider$Builder", True, "add", "(int,EncoderProfilesProxy)", "", "Argument[1]", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeEncoderProfilesProvider$Builder.mQualityToProfileMap].MapValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeEncoderProfilesProvider$Builder", True, "add", "(int,EncoderProfilesProxy)", "", "Argument[1]", "ReturnValue.SyntheticField[androidx.camera.testing.impl.fakes.FakeEncoderProfilesProvider$Builder.mQualityToProfileMap].MapValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeEncoderProfilesProvider$Builder", True, "add", "(int,EncoderProfilesProxy)", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeEncoderProfilesProvider$Builder", True, "addAll", "(Map)", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeEncoderProfilesProvider$Builder", True, "build", "()", "", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeEncoderProfilesProvider$Builder.mQualityToProfileMap]", "ReturnValue.SyntheticField[androidx.camera.testing.impl.fakes.FakeEncoderProfilesProvider.mQualityToProfileMap]", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeEncoderProfilesProvider", True, "getAll", "(int)", "", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeEncoderProfilesProvider.mQualityToProfileMap].MapValue", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageEffect", True, "FakeImageEffect", "(Executor,ImageProcessor)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageEffect", True, "FakeImageEffect", "(Executor,ImageProcessor)", "", "Argument[1]", "Argument[this]", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageEffect", True, "FakeImageEffect", "(Executor,ImageProcessor,Consumer)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageEffect", True, "FakeImageEffect", "(Executor,ImageProcessor,Consumer)", "", "Argument[1]", "Argument[this]", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageEffect", True, "FakeImageEffect", "(Executor,ImageProcessor,Consumer)", "", "Argument[2]", "Argument[this]", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageInfo", False, "getSensorToBufferTransformMatrix", "()", "", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeImageInfo.mSensorToBufferTransformMatrix]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageInfo", False, "setSensorToBufferTransformMatrix", "(Matrix)", "", "Argument[0]", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeImageInfo.mSensorToBufferTransformMatrix]", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageProxy", False, "FakeImageProxy", "(ImageInfo)", "", "Argument[0]", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeImageProxy.mImageInfo]", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageProxy", False, "FakeImageProxy", "(ImageInfo,Bitmap)", "", "Argument[0]", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeImageProxy.mImageInfo]", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageProxy", False, "FakeImageProxy", "(ImageInfo,Bitmap)", "", "Argument[1]", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeImageProxy.mBitmap]", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageProxy", False, "getCloseFuture", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageProxy", False, "getCropRect", "()", "", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeImageProxy.mCropRect]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageProxy", False, "getImage", "()", "", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeImageProxy.mImage]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageProxy", False, "getImageInfo", "()", "", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeImageProxy.mImageInfo]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageProxy", False, "getPlanes", "()", "", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeImageProxy.mPlaneProxy]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageProxy", False, "setCropRect", "(Rect)", "", "Argument[0]", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeImageProxy.mCropRect]", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageProxy", False, "setImage", "(Image)", "", "Argument[0]", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeImageProxy.mImage]", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageProxy", False, "setImageInfo", "(ImageInfo)", "", "Argument[0]", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeImageProxy.mImageInfo]", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageProxy", False, "setPlanes", "(ImageProxy$PlaneProxy[])", "", "Argument[0]", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeImageProxy.mPlaneProxy]", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageProxy", False, "toBitmap", "()", "", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeImageProxy.mBitmap]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageReaderProxy", True, "getSurface", "()", "", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeImageReaderProxy.mSurface]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageReaderProxy", True, "setSurface", "(Surface)", "", "Argument[0]", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeImageReaderProxy.mSurface]", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeJpegPlaneProxy", True, "FakeJpegPlaneProxy", "(byte[])", "", "Argument[0]", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeJpegPlaneProxy.mByteBuffer]", "taint", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeJpegPlaneProxy", True, "getBuffer", "()", "", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeJpegPlaneProxy.mByteBuffer]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeLifecycleOwner", False, "getLifecycle", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeMultiValueSet", True, "clone", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakePlaneProxy", True, "FakePlaneProxy", "(ByteBuffer,int,int)", "", "Argument[0]", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakePlaneProxy.mByteBuffer]", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakePlaneProxy", True, "getBuffer", "()", "", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakePlaneProxy.mByteBuffer]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeSurfaceEffect", True, "FakeSurfaceEffect", "(Executor,SurfaceProcessor)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeSurfaceEffect", True, "FakeSurfaceEffect", "(Executor,SurfaceProcessor)", "", "Argument[1]", "Argument[this]", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeSurfaceEffect", True, "FakeSurfaceEffect", "(SurfaceProcessorInternal)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeSurfaceEffect", True, "FakeSurfaceEffect", "(int,SurfaceProcessorInternal)", "", "Argument[1]", "Argument[this]", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeSurfaceEffect", True, "FakeSurfaceEffect", "(int,int,SurfaceProcessorInternal)", "", "Argument[2]", "Argument[this]", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeSurfaceEffect", True, "FakeSurfaceEffect", "(int,int,int,SurfaceProcessorInternal)", "", "Argument[3]", "Argument[this]", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeSurfaceProcessor", True, "FakeSurfaceProcessor", "(Executor)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeSurfaceProcessor", True, "getInputSurface", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeSurfaceProcessor", True, "getOutputSurfaces", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeSurfaceProcessor", True, "getSurfaceOutputs", "()", "", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeSurfaceProcessor.mSurfaceOutputs]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeSurfaceProcessor", True, "getSurfaceRequest", "()", "", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeSurfaceProcessor.mSurfaceRequest]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeSurfaceProcessor", True, "isOutputSurfaceRequestedToClose", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeSurfaceProcessor", True, "onInputSurface", "(SurfaceRequest)", "", "Argument[0]", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeSurfaceProcessor.mSurfaceRequest]", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeSurfaceProcessor", True, "onOutputSurface", "(SurfaceOutput)", "", "Argument[0]", "Argument[this].SyntheticField[androidx.camera.testing.impl.fakes.FakeSurfaceProcessor.mSurfaceOutputs].MapValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeSurfaceProcessorInternal", True, "FakeSurfaceProcessorInternal", "(Executor)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeSurfaceProcessorInternal", True, "FakeSurfaceProcessorInternal", "(Executor,boolean)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCase", True, "FakeUseCase", "(FakeUseCaseConfig)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCase", True, "FakeUseCase", "(FakeUseCaseConfig,UseCaseConfigFactory$CaptureType)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCase", True, "setSessionConfigSupplier", "(Supplier)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCase", True, "updateSessionConfigForTesting", "(SessionConfig)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig$Builder", False, "build", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig$Builder", False, "getMutableConfig", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig$Builder", False, "getUseCaseConfig", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig$Builder", False, "setBufferFormat", "(int)", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig$Builder", False, "setCaptureOptionUnpacker", "(CaptureConfig$OptionUnpacker)", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig$Builder", False, "setCaptureType", "(UseCaseConfigFactory$CaptureType)", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig$Builder", False, "setCustomOrderedResolutions", "(List)", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig$Builder", False, "setDefaultCaptureConfig", "(CaptureConfig)", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig$Builder", False, "setDefaultResolution", "(Size)", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig$Builder", False, "setDefaultSessionConfig", "(SessionConfig)", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig$Builder", False, "setDynamicRange", "(DynamicRange)", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig$Builder", False, "setHighResolutionDisabled", "(boolean)", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig$Builder", False, "setMaxResolution", "(Size)", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig$Builder", False, "setMirrorMode", "(int)", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig$Builder", False, "setResolutionSelector", "(ResolutionSelector)", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig$Builder", False, "setSessionOptionUnpacker", "(SessionConfig$OptionUnpacker)", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig$Builder", False, "setSupportedResolutions", "(List)", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig$Builder", False, "setSurfaceOccupancyPriority", "(int)", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig$Builder", False, "setTargetAspectRatio", "(int)", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig$Builder", False, "setTargetClass", "(Class)", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig$Builder", False, "setTargetFrameRate", "(<any>)", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig$Builder", False, "setTargetName", "(String)", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig$Builder", False, "setTargetResolution", "(Size)", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig$Builder", False, "setTargetRotation", "(int)", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig$Builder", False, "setZslDisabled", "(boolean)", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfigFactory", False, "FakeUseCaseConfigFactory", "(List)", "", "Argument[0].Element", "Argument[this]", "taint", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "GrayscaleImageEffect", True, "getInputImage", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
  - addsTo:
      pack: codeql/java-all
      extensible: sinkModel
    data:
      - ["androidx.camera.testing.impl.fakes", "FakeUseCase", True, "notifyActiveForTesting", "()", "", "Argument[this]", "path-injection", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCase", True, "notifyInactiveForTesting", "()", "", "Argument[this]", "path-injection", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCase", True, "notifyResetForTesting", "()", "", "Argument[this]", "path-injection", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCase", True, "notifyUpdatedForTesting", "()", "", "Argument[this]", "path-injection", "df-generated"]
  - addsTo:
      pack: codeql/java-all
      extensible: neutralModel
    data:
      - ["androidx.camera.testing.impl.fakes", "FakeCameraCoordinator", "getCameraOperatingMode", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeCameraCoordinator", "removeListener", "(CameraCoordinator$ConcurrentCameraModeListener)", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeCameraCoordinator", "setCameraOperatingMode", "(int)", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeCameraCoordinator", "shutdown", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeCameraDeviceSurfaceManager", "getSuggestedStreamSpecs", "(int,String,List,Map,boolean,boolean)", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeCameraDeviceSurfaceManager", "transformSurfaceConfig", "(int,String,int,Size)", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeCaptureStage", "getId", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeDeferrableSurface", "FakeDeferrableSurface", "(Size,int)", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeDeferrableSurface", "close", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeDeferrableSurface", "setSurface", "(Surface)", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeEncoderProfilesProvider", "hasProfile", "(int)", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageInfo", "getRotationDegrees", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageInfo", "getTimestamp", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageInfo", "populateExifData", "(ExifData$Builder)", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageInfo", "setFocalLength", "(float)", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageInfo", "setRotationDegrees", "(int)", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageInfo", "setTag", "(String,Integer)", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageInfo", "setTag", "(TagBundle)", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageInfo", "setTimestamp", "(long)", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageProxy", "close", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageProxy", "getFormat", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageProxy", "getHeight", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageProxy", "getWidth", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageProxy", "isClosed", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageProxy", "setFormat", "(int)", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageProxy", "setHeight", "(int)", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageProxy", "setWidth", "(int)", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageReaderProxy", "FakeImageReaderProxy", "(int)", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageReaderProxy", "clearOnImageAvailableListener", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageReaderProxy", "close", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageReaderProxy", "getHeight", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageReaderProxy", "getImageFormat", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageReaderProxy", "getMaxImages", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageReaderProxy", "getWidth", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageReaderProxy", "isClosed", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageReaderProxy", "newInstance", "(int,int,int,int,long)", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageReaderProxy", "setImageFormat", "(int)", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeImageReaderProxy", "triggerImageAvailable", "(TagBundle,long)", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeJpegPlaneProxy", "getPixelStride", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeJpegPlaneProxy", "getRowStride", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeLifecycleOwner", "destroy", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeLifecycleOwner", "getObserverCount", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeLifecycleOwner", "pauseAndStop", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeLifecycleOwner", "start", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeLifecycleOwner", "startAndResume", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeLifecycleOwner", "stop", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakePlaneProxy", "getPixelStride", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakePlaneProxy", "getRowStride", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeSurfaceProcessor", "cleanUp", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeSurfaceProcessor", "isInputSurfaceReleased", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeSurfaceProcessorInternal", "getJpegQuality", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeSurfaceProcessorInternal", "getRotationDegrees", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeSurfaceProcessorInternal", "isReleased", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeSurfaceProcessorInternal", "release", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeSurfaceProcessorInternal", "snapshot", "(int,int)", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCase", "getDefaultConfig", "(boolean,UseCaseConfigFactory)", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCase", "getMergedConfigRetrieved", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCase", "getPipelineCreationCount", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCase", "getStateAttachedCount", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCase", "getSupportedEffectTargets", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCase", "getUseCaseConfigBuilder", "(Config)", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCase", "isDetached", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCase", "notifyActiveForTesting", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCase", "notifyInactiveForTesting", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCase", "notifyResetForTesting", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCase", "notifyUpdatedForTesting", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCase", "onStateAttached", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCase", "onStateDetached", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCase", "onUnbind", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCase", "setSupportedEffectTargets", "(Set)", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig$Builder", "Builder", "(Config)", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig$Builder", "Builder", "(Config,UseCaseConfigFactory$CaptureType)", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig$Builder", "Builder", "(UseCaseConfigFactory$CaptureType)", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig$Builder", "Builder", "(UseCaseConfigFactory$CaptureType,int)", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig", "getCaptureType", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfig", "getInputFormat", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfigFactory", "getConfig", "(UseCaseConfigFactory$CaptureType,int)", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfigFactory", "getLastRequestedCaptureType", "()", "summary", "df-generated"]
      - ["androidx.camera.testing.impl.fakes", "FakeUseCaseConfigFactory", "getSessionConfigTemplateType", "(UseCaseConfigFactory$CaptureType,int)", "summary", "df-generated"]
