# THIS FILE IS AN AUTO-GENERATED MODELS AS DATA FILE. DO NOT EDIT.
extensions:
  - addsTo:
      pack: codeql/java-all
      extensible: summaryModel
    data:
      - ["androidx.leanback.graphics", "ColorFilterCache", False, "getFilterForLevel", "(float)", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["androidx.leanback.graphics", "ColorFilterDimmer", False, "create", "(ColorFilterCache,float,float)", "", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["androidx.leanback.graphics", "ColorFilterDimmer", False, "getColorFilter", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["androidx.leanback.graphics", "ColorFilterDimmer", False, "getPaint", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["androidx.leanback.graphics", "ColorOverlayDimmer", False, "getPaint", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["androidx.leanback.graphics", "CompositeDrawable$ChildDrawable", False, "ChildDrawable", "(Drawable,CompositeDrawable)", "", "Argument[0]", "Argument[this].SyntheticField[androidx.leanback.graphics.CompositeDrawable$ChildDrawable.mDrawable]", "value", "dfc-generated"]
      - ["androidx.leanback.graphics", "CompositeDrawable$ChildDrawable", False, "getBoundsRule", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["androidx.leanback.graphics", "CompositeDrawable$ChildDrawable", False, "getDrawable", "()", "", "Argument[this].SyntheticField[androidx.leanback.graphics.CompositeDrawable$ChildDrawable.mDrawable]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.leanback.graphics", "CompositeDrawable", True, "getChildAt", "(int)", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["androidx.leanback.graphics", "CompositeDrawable", True, "getConstantState", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["androidx.leanback.graphics", "CompositeDrawable", True, "mutate", "()", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.leanback.graphics", "FitWidthBitmapDrawable", True, "getBitmap", "()", "", "Argument[this].SyntheticField[androidx.leanback.graphics.FitWidthBitmapDrawable.mBitmapState].SyntheticField[androidx.leanback.graphics.FitWidthBitmapDrawable$BitmapState.mBitmap]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.leanback.graphics", "FitWidthBitmapDrawable", True, "getConstantState", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["androidx.leanback.graphics", "FitWidthBitmapDrawable", True, "getSource", "()", "", "Argument[this].SyntheticField[androidx.leanback.graphics.FitWidthBitmapDrawable.mBitmapState].SyntheticField[androidx.leanback.graphics.FitWidthBitmapDrawable$BitmapState.mSource]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.leanback.graphics", "FitWidthBitmapDrawable", True, "mutate", "()", "", "Argument[this].SyntheticField[androidx.leanback.graphics.FitWidthBitmapDrawable.mBitmapState].SyntheticField[androidx.leanback.graphics.FitWidthBitmapDrawable$BitmapState.mBitmap]", "ReturnValue.SyntheticField[androidx.leanback.graphics.FitWidthBitmapDrawable.mBitmapState].SyntheticField[androidx.leanback.graphics.FitWidthBitmapDrawable$BitmapState.mBitmap]", "value", "dfc-generated"]
      - ["androidx.leanback.graphics", "FitWidthBitmapDrawable", True, "mutate", "()", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["androidx.leanback.graphics", "FitWidthBitmapDrawable", True, "setBitmap", "(Bitmap)", "", "Argument[0]", "Argument[this].SyntheticField[androidx.leanback.graphics.FitWidthBitmapDrawable.mBitmapState].SyntheticField[androidx.leanback.graphics.FitWidthBitmapDrawable$BitmapState.mBitmap]", "value", "dfc-generated"]
      - ["androidx.leanback.graphics", "FitWidthBitmapDrawable", True, "setSource", "(Rect)", "", "Argument[0]", "Argument[this].SyntheticField[androidx.leanback.graphics.FitWidthBitmapDrawable.mBitmapState].SyntheticField[androidx.leanback.graphics.FitWidthBitmapDrawable$BitmapState.mSource]", "value", "dfc-generated"]
  - addsTo:
      pack: codeql/java-all
      extensible: neutralModel
    data:
      - ["androidx.leanback.graphics", "BoundsRule$ValueRule", "absoluteValue", "(int)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "BoundsRule$ValueRule", "getAbsoluteValue", "()", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "BoundsRule$ValueRule", "getFraction", "()", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "BoundsRule$ValueRule", "inheritFromParent", "(float)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "BoundsRule$ValueRule", "inheritFromParentWithOffset", "(float,int)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "BoundsRule$ValueRule", "setAbsoluteValue", "(int)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "BoundsRule$ValueRule", "setFraction", "(float)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "BoundsRule", "BoundsRule", "(BoundsRule)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "BoundsRule", "calculateBounds", "(Rect,Rect)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "ColorFilterCache", "getColorFilterCache", "(int)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "ColorFilterDimmer", "applyFilterToView", "(View)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "ColorFilterDimmer", "createDefault", "(Context)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "ColorFilterDimmer", "setActiveLevel", "(float)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "ColorOverlayDimmer", "applyToColor", "(int)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "ColorOverlayDimmer", "createColorOverlayDimmer", "(int,float,float)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "ColorOverlayDimmer", "createDefault", "(Context)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "ColorOverlayDimmer", "drawColorOverlay", "(Canvas,View,boolean)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "ColorOverlayDimmer", "getAlpha", "()", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "ColorOverlayDimmer", "getAlphaFloat", "()", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "ColorOverlayDimmer", "needsDraw", "()", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "ColorOverlayDimmer", "setActiveLevel", "(float)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "CompositeDrawable$ChildDrawable", "recomputeBounds", "()", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "CompositeDrawable", "addChildDrawable", "(Drawable)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "CompositeDrawable", "draw", "(Canvas)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "CompositeDrawable", "getAlpha", "()", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "CompositeDrawable", "getChildCount", "()", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "CompositeDrawable", "getDrawable", "(int)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "CompositeDrawable", "getOpacity", "()", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "CompositeDrawable", "invalidateDrawable", "(Drawable)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "CompositeDrawable", "removeChild", "(int)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "CompositeDrawable", "removeDrawable", "(Drawable)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "CompositeDrawable", "scheduleDrawable", "(Drawable,Runnable,long)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "CompositeDrawable", "setAlpha", "(int)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "CompositeDrawable", "setChildDrawableAt", "(int,Drawable)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "CompositeDrawable", "setColorFilter", "(ColorFilter)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "CompositeDrawable", "unscheduleDrawable", "(Drawable,Runnable)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "CompositeDrawableTest", "constantState", "()", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "CompositeDrawableTest", "copyChildDrawableTest", "()", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "CompositeDrawableTest", "mutateTest", "()", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "CompositeDrawableTest", "updateBounds_noBoundsRule", "()", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "CompositeDrawableTest", "updateBounds_withBoundsRule", "()", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "CompositeDrawableTest", "updateBounds_withOverride", "()", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "FitWidthBitmapDrawable", "draw", "(Canvas)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "FitWidthBitmapDrawable", "getAlpha", "()", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "FitWidthBitmapDrawable", "getOpacity", "()", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "FitWidthBitmapDrawable", "getVerticalOffset", "()", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "FitWidthBitmapDrawable", "setAlpha", "(int)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "FitWidthBitmapDrawable", "setColorFilter", "(ColorFilter)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "FitWidthBitmapDrawable", "setVerticalOffset", "(int)", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "FitWidthBitmapDrawableTest", "constantState", "()", "summary", "df-generated"]
      - ["androidx.leanback.graphics", "FitWidthBitmapDrawableTest", "draw_withOffset", "()", "summary", "df-generated"]
