# THIS FILE IS AN AUTO-GENERATED MODELS AS DATA FILE. DO NOT EDIT.
extensions:
  - addsTo:
      pack: codeql/java-all
      extensible: summaryModel
    data:
      - ["org.gradle.api.tasks.testing", "AbstractTestTask", True, "getBinaryResultsDirectory", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "AbstractTestTask", True, "getFilter", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "AbstractTestTask", True, "getReports", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "AbstractTestTask", True, "getTestLogging", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "AbstractTestTask", True, "reports", "(Action)", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "AbstractTestTask", True, "reports", "(Closure)", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "AbstractTestTask", True, "setTestNameIncludePatterns", "(List)", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["org.gradle.api.tasks.testing", "AggregateTestReport", True, "getReportTask", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "executable", "(Object)", "", "Argument[0]", "Argument[this].SyntheticField[org.gradle.api.tasks.testing.Test.forkOptions].SyntheticField[org.gradle.process.internal.DefaultProcessForkOptions.executable]", "value", "dfc-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "executable", "(Object)", "", "Argument[0]", "ReturnValue.SyntheticField[org.gradle.api.tasks.testing.Test.forkOptions].SyntheticField[org.gradle.process.internal.DefaultProcessForkOptions.executable]", "value", "dfc-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getCandidateClassFiles", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getClasspath", "()", "", "Argument[this].SyntheticField[org.gradle.api.tasks.testing.Test.classpath]", "ReturnValue", "value", "dfc-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getExecutable", "()", "", "Argument[this].SyntheticField[org.gradle.api.tasks.testing.Test.forkOptions].SyntheticField[org.gradle.process.internal.DefaultProcessForkOptions.executable]", "ReturnValue", "taint", "dfc-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getJavaLauncher", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getModularity", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getTestClassesDirs", "()", "", "Argument[this].SyntheticField[org.gradle.api.tasks.testing.Test.testClassesDirs]", "ReturnValue", "value", "dfc-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getTestFrameworkProperty", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getWorkingDir", "()", "", "Argument[this].SyntheticField[org.gradle.api.tasks.testing.Test.forkOptions].SyntheticField[org.gradle.process.internal.DefaultProcessForkOptions.workingDir]", "ReturnValue", "value", "dfc-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setClasspath", "(FileCollection)", "", "Argument[0]", "Argument[this].SyntheticField[org.gradle.api.tasks.testing.Test.classpath]", "value", "dfc-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setExecutable", "(Object)", "", "Argument[0]", "Argument[this].SyntheticField[org.gradle.api.tasks.testing.Test.forkOptions].SyntheticField[org.gradle.process.internal.DefaultProcessForkOptions.executable]", "value", "dfc-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setExecutable", "(String)", "", "Argument[0]", "Argument[this].SyntheticField[org.gradle.api.tasks.testing.Test.forkOptions].SyntheticField[org.gradle.process.internal.DefaultProcessForkOptions.executable]", "value", "dfc-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setTestClassesDirs", "(FileCollection)", "", "Argument[0]", "Argument[this].SyntheticField[org.gradle.api.tasks.testing.Test.testClassesDirs]", "value", "dfc-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setWorkingDir", "(File)", "", "Argument[0]", "Argument[this].SyntheticField[org.gradle.api.tasks.testing.Test.forkOptions].SyntheticField[org.gradle.process.internal.DefaultProcessForkOptions.workingDir]", "value", "dfc-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setWorkingDir", "(Object)", "", "Argument[0]", "Argument[this].SyntheticField[org.gradle.api.tasks.testing.Test.forkOptions].SyntheticField[org.gradle.process.internal.DefaultProcessForkOptions.workingDir]", "value", "dfc-generated"]
      - ["org.gradle.api.tasks.testing", "TestDescriptor", True, "getClassName", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestDescriptor", True, "getDisplayName", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestDescriptor", True, "getName", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestDescriptor", True, "getParent", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestExecutionException", True, "TestExecutionException", "(String)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestExecutionException", True, "TestExecutionException", "(String,Throwable)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestExecutionException", True, "TestExecutionException", "(String,Throwable)", "", "Argument[1]", "Argument[this]", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromFileComparisonFailure", "(Throwable,String,String,byte[],byte[],List)", "", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromFileComparisonFailure", "(Throwable,String,String,byte[],byte[],List)", "", "Argument[1]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromFileComparisonFailure", "(Throwable,String,String,byte[],byte[],List)", "", "Argument[2]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromFileComparisonFailure", "(Throwable,String,String,byte[],byte[],List)", "", "Argument[3]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromFileComparisonFailure", "(Throwable,String,String,byte[],byte[],List)", "", "Argument[4]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromFileComparisonFailure", "(Throwable,String,String,byte[],byte[],List)", "", "Argument[5].Element", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromTestAssertionFailure", "(Throwable,String,String)", "", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromTestAssertionFailure", "(Throwable,String,String)", "", "Argument[1]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromTestAssertionFailure", "(Throwable,String,String)", "", "Argument[2]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromTestAssertionFailure", "(Throwable,String,String,List)", "", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromTestAssertionFailure", "(Throwable,String,String,List)", "", "Argument[1]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromTestAssertionFailure", "(Throwable,String,String,List)", "", "Argument[2]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromTestAssertionFailure", "(Throwable,String,String,List)", "", "Argument[3].Element", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromTestFrameworkFailure", "(Throwable)", "", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromTestFrameworkFailure", "(Throwable,List)", "", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromTestFrameworkFailure", "(Throwable,List)", "", "Argument[1].Element", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "getCauses", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "getDetails", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "getRawFailure", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailureDetails", True, "getActual", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailureDetails", True, "getActualContent", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailureDetails", True, "getClassName", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailureDetails", True, "getExpected", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailureDetails", True, "getExpectedContent", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailureDetails", True, "getMessage", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailureDetails", True, "getStacktrace", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFilter", True, "excludeTest", "(String,String)", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["org.gradle.api.tasks.testing", "TestFilter", True, "excludeTestsMatching", "(String)", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["org.gradle.api.tasks.testing", "TestFilter", True, "getExcludePatterns", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFilter", True, "getIncludePatterns", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFilter", True, "includeTest", "(String,String)", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["org.gradle.api.tasks.testing", "TestFilter", True, "includeTestsMatching", "(String)", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["org.gradle.api.tasks.testing", "TestFilter", True, "setExcludePatterns", "(String[])", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["org.gradle.api.tasks.testing", "TestFilter", True, "setIncludePatterns", "(String[])", "", "Argument[this]", "ReturnValue", "value", "dfc-generated"]
      - ["org.gradle.api.tasks.testing", "TestListener", True, "afterSuite", "(TestDescriptor,TestResult)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestListener", True, "afterTest", "(TestDescriptor,TestResult)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestListener", True, "beforeSuite", "(TestDescriptor)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestListener", True, "beforeTest", "(TestDescriptor)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestOutputEvent", True, "getMessage", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestOutputListener", True, "onOutput", "(TestDescriptor,TestOutputEvent)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestOutputListener", True, "onOutput", "(TestDescriptor,TestOutputEvent)", "", "Argument[1]", "Argument[this]", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestReport", True, "getDestinationDirectory", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestReport", True, "getTestResults", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestResult", True, "getException", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestResult", True, "getExceptions", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestResult", True, "getFailures", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
  - addsTo:
      pack: codeql/java-all
      extensible: sinkModel
    data:
      - ["org.gradle.api.tasks.testing", "AbstractTestTask", True, "executeTests", "()", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "AbstractTestTask", True, "executeTests", "()", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "AbstractTestTask", True, "executeTests", "()", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "AbstractTestTask", True, "executeTests", "()", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "AbstractTestTask", True, "testLogging", "(Action)", "", "Argument[0]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "AbstractTestTask", True, "testLogging", "(Action)", "", "Argument[0]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "AbstractTestTask", True, "testLogging", "(Action)", "", "Argument[0]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "AbstractTestTask", True, "testLogging", "(Action)", "", "Argument[0]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "copyTo", "(JavaForkOptions)", "", "Argument[0]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "copyTo", "(JavaForkOptions)", "", "Argument[0]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "copyTo", "(JavaForkOptions)", "", "Argument[0]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "copyTo", "(JavaForkOptions)", "", "Argument[0]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "copyTo", "(JavaForkOptions)", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "copyTo", "(JavaForkOptions)", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "copyTo", "(JavaForkOptions)", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "copyTo", "(JavaForkOptions)", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "copyTo", "(ProcessForkOptions)", "", "Argument[0]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "copyTo", "(ProcessForkOptions)", "", "Argument[0]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "copyTo", "(ProcessForkOptions)", "", "Argument[0]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "copyTo", "(ProcessForkOptions)", "", "Argument[0]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "copyTo", "(ProcessForkOptions)", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "copyTo", "(ProcessForkOptions)", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "copyTo", "(ProcessForkOptions)", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "copyTo", "(ProcessForkOptions)", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "debugOptions", "(Action)", "", "Argument[0]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "debugOptions", "(Action)", "", "Argument[0]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "debugOptions", "(Action)", "", "Argument[0]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "debugOptions", "(Action)", "", "Argument[0]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "debugOptions", "(Action)", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "debugOptions", "(Action)", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "debugOptions", "(Action)", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "debugOptions", "(Action)", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "exclude", "(Iterable)", "", "Argument[0]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "exclude", "(Iterable)", "", "Argument[0]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "exclude", "(Iterable)", "", "Argument[0]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "exclude", "(Iterable)", "", "Argument[0]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "executeTests", "()", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "executeTests", "()", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "executeTests", "()", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "executeTests", "()", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "filter", "(Action)", "", "Argument[0]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "filter", "(Action)", "", "Argument[0]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "filter", "(Action)", "", "Argument[0]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "filter", "(Action)", "", "Argument[0]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getAllJvmArgs", "()", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getAllJvmArgs", "()", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getAllJvmArgs", "()", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getAllJvmArgs", "()", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getDebug", "()", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getDebug", "()", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getDebug", "()", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getDebug", "()", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getForkEvery", "()", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getForkEvery", "()", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getForkEvery", "()", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getForkEvery", "()", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getJavaVersion", "()", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getJavaVersion", "()", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getJavaVersion", "()", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getJavaVersion", "()", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getMaxParallelForks", "()", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getMaxParallelForks", "()", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getMaxParallelForks", "()", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getMaxParallelForks", "()", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getOptions", "()", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getOptions", "()", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getOptions", "()", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getOptions", "()", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getTestFramework", "()", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getTestFramework", "()", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getTestFramework", "()", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getTestFramework", "()", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getWorkingDir", "()", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getWorkingDir", "()", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getWorkingDir", "()", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "getWorkingDir", "()", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "include", "(Iterable)", "", "Argument[0]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "include", "(Iterable)", "", "Argument[0]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "include", "(Iterable)", "", "Argument[0]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "include", "(Iterable)", "", "Argument[0]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "jvmArgs", "(Iterable)", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "jvmArgs", "(Iterable)", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "jvmArgs", "(Iterable)", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "jvmArgs", "(Iterable)", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "jvmArgs", "(Object[])", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "jvmArgs", "(Object[])", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "jvmArgs", "(Object[])", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "jvmArgs", "(Object[])", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "options", "(Action)", "", "Argument[0]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "options", "(Action)", "", "Argument[0]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "options", "(Action)", "", "Argument[0]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "options", "(Action)", "", "Argument[0]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "options", "(Action)", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "options", "(Action)", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "options", "(Action)", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "options", "(Action)", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "options", "(Closure)", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "options", "(Closure)", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "options", "(Closure)", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "options", "(Closure)", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setAllJvmArgs", "(Iterable)", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setAllJvmArgs", "(Iterable)", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setAllJvmArgs", "(Iterable)", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setAllJvmArgs", "(Iterable)", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setAllJvmArgs", "(List)", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setAllJvmArgs", "(List)", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setAllJvmArgs", "(List)", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setAllJvmArgs", "(List)", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setDebug", "(boolean)", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setDebug", "(boolean)", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setDebug", "(boolean)", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setDebug", "(boolean)", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setExcludes", "(Iterable)", "", "Argument[0]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setExcludes", "(Iterable)", "", "Argument[0]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setExcludes", "(Iterable)", "", "Argument[0]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setExcludes", "(Iterable)", "", "Argument[0]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setIncludes", "(Iterable)", "", "Argument[0]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setIncludes", "(Iterable)", "", "Argument[0]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setIncludes", "(Iterable)", "", "Argument[0]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setIncludes", "(Iterable)", "", "Argument[0]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setJvmArgs", "(Iterable)", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setJvmArgs", "(Iterable)", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setJvmArgs", "(Iterable)", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setJvmArgs", "(Iterable)", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setJvmArgs", "(List)", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setJvmArgs", "(List)", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setJvmArgs", "(List)", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setJvmArgs", "(List)", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setWorkingDir", "(File)", "", "Argument[0]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setWorkingDir", "(File)", "", "Argument[0]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setWorkingDir", "(File)", "", "Argument[0]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setWorkingDir", "(File)", "", "Argument[0]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setWorkingDir", "(File)", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setWorkingDir", "(File)", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setWorkingDir", "(File)", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setWorkingDir", "(File)", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setWorkingDir", "(Object)", "", "Argument[0]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setWorkingDir", "(Object)", "", "Argument[0]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setWorkingDir", "(Object)", "", "Argument[0]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setWorkingDir", "(Object)", "", "Argument[0]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setWorkingDir", "(Object)", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setWorkingDir", "(Object)", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setWorkingDir", "(Object)", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "setWorkingDir", "(Object)", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "testFramework", "(Closure)", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "testFramework", "(Closure)", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "testFramework", "(Closure)", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "testFramework", "(Closure)", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useJUnit", "()", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useJUnit", "()", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useJUnit", "()", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useJUnit", "()", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useJUnit", "(Action)", "", "Argument[0]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useJUnit", "(Action)", "", "Argument[0]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useJUnit", "(Action)", "", "Argument[0]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useJUnit", "(Action)", "", "Argument[0]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useJUnit", "(Action)", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useJUnit", "(Action)", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useJUnit", "(Action)", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useJUnit", "(Action)", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useJUnit", "(Closure)", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useJUnit", "(Closure)", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useJUnit", "(Closure)", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useJUnit", "(Closure)", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useJUnitPlatform", "()", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useJUnitPlatform", "()", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useJUnitPlatform", "()", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useJUnitPlatform", "()", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useJUnitPlatform", "(Action)", "", "Argument[0]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useJUnitPlatform", "(Action)", "", "Argument[0]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useJUnitPlatform", "(Action)", "", "Argument[0]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useJUnitPlatform", "(Action)", "", "Argument[0]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useJUnitPlatform", "(Action)", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useJUnitPlatform", "(Action)", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useJUnitPlatform", "(Action)", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useJUnitPlatform", "(Action)", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useTestNG", "()", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useTestNG", "()", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useTestNG", "()", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useTestNG", "()", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useTestNG", "(Action)", "", "Argument[0]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useTestNG", "(Action)", "", "Argument[0]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useTestNG", "(Action)", "", "Argument[0]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useTestNG", "(Action)", "", "Argument[0]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useTestNG", "(Action)", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useTestNG", "(Action)", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useTestNG", "(Action)", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useTestNG", "(Action)", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useTestNG", "(Closure)", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useTestNG", "(Closure)", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useTestNG", "(Closure)", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "useTestNG", "(Closure)", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "workingDir", "(Object)", "", "Argument[0]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "workingDir", "(Object)", "", "Argument[0]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "workingDir", "(Object)", "", "Argument[0]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "workingDir", "(Object)", "", "Argument[0]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "workingDir", "(Object)", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "workingDir", "(Object)", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "workingDir", "(Object)", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", True, "workingDir", "(Object)", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromFileComparisonFailure", "(Throwable,String,String,byte[],byte[],List)", "", "Argument[0]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromFileComparisonFailure", "(Throwable,String,String,byte[],byte[],List)", "", "Argument[0]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromFileComparisonFailure", "(Throwable,String,String,byte[],byte[],List)", "", "Argument[0]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromFileComparisonFailure", "(Throwable,String,String,byte[],byte[],List)", "", "Argument[0]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromTestAssertionFailure", "(Throwable,String,String)", "", "Argument[0]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromTestAssertionFailure", "(Throwable,String,String)", "", "Argument[0]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromTestAssertionFailure", "(Throwable,String,String)", "", "Argument[0]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromTestAssertionFailure", "(Throwable,String,String)", "", "Argument[0]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromTestAssertionFailure", "(Throwable,String,String,List)", "", "Argument[0]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromTestAssertionFailure", "(Throwable,String,String,List)", "", "Argument[0]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromTestAssertionFailure", "(Throwable,String,String,List)", "", "Argument[0]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromTestAssertionFailure", "(Throwable,String,String,List)", "", "Argument[0]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromTestFrameworkFailure", "(Throwable)", "", "Argument[0]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromTestFrameworkFailure", "(Throwable)", "", "Argument[0]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromTestFrameworkFailure", "(Throwable)", "", "Argument[0]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromTestFrameworkFailure", "(Throwable)", "", "Argument[0]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromTestFrameworkFailure", "(Throwable,List)", "", "Argument[0]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromTestFrameworkFailure", "(Throwable,List)", "", "Argument[0]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromTestFrameworkFailure", "(Throwable,List)", "", "Argument[0]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestFailure", True, "fromTestFrameworkFailure", "(Throwable,List)", "", "Argument[0]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestReport", True, "getDestinationDir", "()", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestReport", True, "getDestinationDir", "()", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestReport", True, "getDestinationDir", "()", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestReport", True, "getDestinationDir", "()", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestReport", True, "setDestinationDir", "(File)", "", "Argument[0]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestReport", True, "setDestinationDir", "(File)", "", "Argument[0]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestReport", True, "setDestinationDir", "(File)", "", "Argument[0]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestReport", True, "setDestinationDir", "(File)", "", "Argument[0]", "xslt-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestReport", True, "setDestinationDir", "(File)", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestReport", True, "setDestinationDir", "(File)", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestReport", True, "setDestinationDir", "(File)", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestReport", True, "setDestinationDir", "(File)", "", "Argument[this]", "xslt-injection", "df-generated"]
  - addsTo:
      pack: codeql/java-all
      extensible: neutralModel
    data:
      - ["org.gradle.api.tasks.testing", "AbstractTestTask", "addTestListener", "(TestListener)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "AbstractTestTask", "addTestOutputListener", "(TestOutputListener)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "AbstractTestTask", "afterSuite", "(Closure)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "AbstractTestTask", "afterTest", "(Closure)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "AbstractTestTask", "beforeSuite", "(Closure)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "AbstractTestTask", "beforeTest", "(Closure)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "AbstractTestTask", "executeTests", "()", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "AbstractTestTask", "getIgnoreFailures", "()", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "AbstractTestTask", "onOutput", "(Closure)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "AbstractTestTask", "removeTestListener", "(TestListener)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "AbstractTestTask", "removeTestOutputListener", "(TestOutputListener)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "AbstractTestTask", "setIgnoreFailures", "(boolean)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "AbstractTestTask", "testLogging", "(Action)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "AbstractTestTask", "testLogging", "(Closure)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "debugOptions", "(Action)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "executeTests", "()", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "filter", "(Action)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "getDebug", "()", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "getDryRun", "()", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "getEnableAssertions", "()", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "getFailFast", "()", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "getForkEvery", "()", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "getJavaVersion", "()", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "getJvmArgs", "()", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "getMaxParallelForks", "()", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "getOptions", "()", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "getTestFramework", "()", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "isScanForTestClasses", "()", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "options", "(Action)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "options", "(Closure)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "setAllJvmArgs", "(Iterable)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "setAllJvmArgs", "(List)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "setBootstrapClasspath", "(FileCollection)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "setDebug", "(boolean)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "setDefaultCharacterEncoding", "(String)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "setEnableAssertions", "(boolean)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "setFailFast", "(boolean)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "setForkEvery", "(Long)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "setForkEvery", "(long)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "setJvmArgs", "(Iterable)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "setJvmArgs", "(List)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "setMaxParallelForks", "(int)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "setScanForTestClasses", "(boolean)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "setSystemProperties", "(Map)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "testFramework", "(Closure)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "useJUnit", "()", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "useJUnit", "(Action)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "useJUnit", "(Closure)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "useJUnitPlatform", "()", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "useJUnitPlatform", "(Action)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "useTestNG", "()", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "useTestNG", "(Action)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "Test", "useTestNG", "(Closure)", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestReport", "getDestinationDir", "()", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestReport", "reportOn", "(Object[])", "summary", "df-generated"]
      - ["org.gradle.api.tasks.testing", "TestReport", "setDestinationDir", "(File)", "summary", "df-generated"]
