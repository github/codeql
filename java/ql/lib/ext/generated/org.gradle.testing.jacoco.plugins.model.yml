# THIS FILE IS AN AUTO-GENERATED MODELS AS DATA FILE. DO NOT EDIT.
extensions:
  - addsTo:
      pack: codeql/java-all
      extensible: summaryModel
    data:
      - ["org.gradle.testing.jacoco.plugins", "JacocoCoverageReport", True, "getReportTask", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoPlugin", True, "JacocoPlugin", "(Instantiator)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoPlugin", True, "apply", "(Project)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoPluginExtension", True, "JacocoPluginExtension", "(Project,JacocoAgentJar)", "", "Argument[1]", "Argument[this]", "taint", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoPluginExtension", True, "getReportsDirectory", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoPluginExtension", True, "getToolVersion", "()", "", "Argument[this].SyntheticField[org.gradle.testing.jacoco.plugins.JacocoPluginExtension.toolVersion]", "ReturnValue", "value", "dfc-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoPluginExtension", True, "setToolVersion", "(String)", "", "Argument[0]", "Argument[this].SyntheticField[org.gradle.testing.jacoco.plugins.JacocoPluginExtension.toolVersion]", "value", "dfc-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "JacocoTaskExtension", "(ObjectFactory,JacocoAgentJar,JavaForkOptions)", "", "Argument[1]", "Argument[this]", "taint", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "JacocoTaskExtension", "(ObjectFactory,JacocoAgentJar,JavaForkOptions)", "", "Argument[2]", "Argument[this]", "taint", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "getAddress", "()", "", "Argument[this].SyntheticField[org.gradle.testing.jacoco.plugins.JacocoTaskExtension.address]", "ReturnValue", "value", "dfc-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "getAgentClasspath", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "getAsJvmArg", "()", "", "Argument[this]", "ReturnValue", "taint", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "getClassDumpDir", "()", "", "Argument[this].SyntheticField[org.gradle.testing.jacoco.plugins.JacocoTaskExtension.classDumpDir]", "ReturnValue", "value", "dfc-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "getExcludeClassLoaders", "()", "", "Argument[this].SyntheticField[org.gradle.testing.jacoco.plugins.JacocoTaskExtension.excludeClassLoaders]", "ReturnValue", "value", "dfc-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "getExcludes", "()", "", "Argument[this].SyntheticField[org.gradle.testing.jacoco.plugins.JacocoTaskExtension.excludes]", "ReturnValue", "value", "dfc-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "getIncludes", "()", "", "Argument[this].SyntheticField[org.gradle.testing.jacoco.plugins.JacocoTaskExtension.includes]", "ReturnValue", "value", "dfc-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "getSessionId", "()", "", "Argument[this].SyntheticField[org.gradle.testing.jacoco.plugins.JacocoTaskExtension.sessionId]", "ReturnValue", "value", "dfc-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "setAddress", "(String)", "", "Argument[0]", "Argument[this].SyntheticField[org.gradle.testing.jacoco.plugins.JacocoTaskExtension.address]", "value", "dfc-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "setClassDumpDir", "(File)", "", "Argument[0]", "Argument[this].SyntheticField[org.gradle.testing.jacoco.plugins.JacocoTaskExtension.classDumpDir]", "value", "dfc-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "setDestinationFile", "(Provider)", "", "Argument[0]", "Argument[this]", "taint", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "setExcludeClassLoaders", "(List)", "", "Argument[0]", "Argument[this].SyntheticField[org.gradle.testing.jacoco.plugins.JacocoTaskExtension.excludeClassLoaders]", "value", "dfc-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "setExcludes", "(List)", "", "Argument[0]", "Argument[this].SyntheticField[org.gradle.testing.jacoco.plugins.JacocoTaskExtension.excludes]", "value", "dfc-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "setIncludes", "(List)", "", "Argument[0]", "Argument[this].SyntheticField[org.gradle.testing.jacoco.plugins.JacocoTaskExtension.includes]", "value", "dfc-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "setSessionId", "(String)", "", "Argument[0]", "Argument[this].SyntheticField[org.gradle.testing.jacoco.plugins.JacocoTaskExtension.sessionId]", "value", "dfc-generated"]
  - addsTo:
      pack: codeql/java-all
      extensible: sinkModel
    data:
      - ["org.gradle.testing.jacoco.plugins", "JacocoPlugin", True, "apply", "(Project)", "", "Argument[0]", "groovy-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoPlugin", True, "apply", "(Project)", "", "Argument[0]", "path-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoPlugin", True, "apply", "(Project)", "", "Argument[0]", "request-forgery", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoPlugin", True, "apply", "(Project)", "", "Argument[0]", "xslt-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoPlugin", True, "apply", "(Project)", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoPluginExtension", True, "applyTo", "(Task)", "", "Argument[0]", "groovy-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoPluginExtension", True, "applyTo", "(Task)", "", "Argument[0]", "path-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoPluginExtension", True, "applyTo", "(Task)", "", "Argument[0]", "request-forgery", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoPluginExtension", True, "applyTo", "(Task)", "", "Argument[0]", "xslt-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoPluginExtension", True, "applyTo", "(Task)", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoPluginExtension", True, "applyTo", "(Task)", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoPluginExtension", True, "applyTo", "(Task)", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoPluginExtension", True, "applyTo", "(Task)", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoPluginExtension", True, "applyTo", "(TaskCollection)", "", "Argument[0]", "groovy-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoPluginExtension", True, "applyTo", "(TaskCollection)", "", "Argument[0]", "path-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoPluginExtension", True, "applyTo", "(TaskCollection)", "", "Argument[0]", "request-forgery", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoPluginExtension", True, "applyTo", "(TaskCollection)", "", "Argument[0]", "xslt-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "getAsJvmArg", "()", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "getAsJvmArg", "()", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "getAsJvmArg", "()", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "getAsJvmArg", "()", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "getDestinationFile", "()", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "getDestinationFile", "()", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "getDestinationFile", "()", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "getDestinationFile", "()", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "setDestinationFile", "(File)", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "setDestinationFile", "(File)", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "setDestinationFile", "(File)", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "setDestinationFile", "(File)", "", "Argument[this]", "xslt-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "setDestinationFile", "(Provider)", "", "Argument[this]", "groovy-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "setDestinationFile", "(Provider)", "", "Argument[this]", "path-injection", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "setDestinationFile", "(Provider)", "", "Argument[this]", "request-forgery", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", True, "setDestinationFile", "(Provider)", "", "Argument[this]", "xslt-injection", "df-generated"]
  - addsTo:
      pack: codeql/java-all
      extensible: neutralModel
    data:
      - ["org.gradle.testing.jacoco.plugins", "JacocoPluginExtension", "applyTo", "(Task)", "summary", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoPluginExtension", "applyTo", "(TaskCollection)", "summary", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoReportAggregationPlugin", "apply", "(Project)", "summary", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension$Output", "getAsArg", "()", "summary", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", "getDestinationFile", "()", "summary", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", "getOutput", "()", "summary", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", "getPort", "()", "summary", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", "isDumpOnExit", "()", "summary", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", "isEnabled", "()", "summary", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", "isIncludeNoLocationClasses", "()", "summary", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", "isJmx", "()", "summary", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", "setDestinationFile", "(File)", "summary", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", "setDumpOnExit", "(boolean)", "summary", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", "setEnabled", "(boolean)", "summary", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", "setIncludeNoLocationClasses", "(boolean)", "summary", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", "setJmx", "(boolean)", "summary", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", "setOutput", "(JacocoTaskExtension$Output)", "summary", "df-generated"]
      - ["org.gradle.testing.jacoco.plugins", "JacocoTaskExtension", "setPort", "(int)", "summary", "df-generated"]
