// Generated automatically from com.microsoft.sqlserver.jdbc.ISQLServerDataSource for testing purposes

package com.microsoft.sqlserver.jdbc;

import com.microsoft.sqlserver.jdbc.SQLServerAccessTokenCallback;
import javax.sql.CommonDataSource;
import org.ietf.jgss.GSSCredential;

public interface ISQLServerDataSource extends CommonDataSource
{
    GSSCredential getGSSCredentials();
    SQLServerAccessTokenCallback getAccessTokenCallback();
    String getAADSecurePrincipalId();
    String getAccessToken();
    String getApplicationIntent();
    String getApplicationName();
    String getAuthentication();
    String getClientCertificate();
    String getClientKey();
    String getColumnEncryptionSetting();
    String getDatabaseName();
    String getDatetimeParameterType();
    String getDescription();
    String getDomain();
    String getEnclaveAttestationProtocol();
    String getEnclaveAttestationUrl();
    String getEncrypt();
    String getFailoverPartner();
    String getHostNameInCertificate();
    String getIPAddressPreference();
    String getInstanceName();
    String getJAASConfigurationName();
    String getJASSConfigurationName();
    String getKeyStoreAuthentication();
    String getKeyStoreLocation();
    String getKeyStorePrincipalId();
    String getKeyVaultProviderClientId();
    String getMSIClientId();
    String getMaxResultBuffer();
    String getPrepareMethod();
    String getRealm();
    String getResponseBuffering();
    String getSSLProtocol();
    String getSelectMethod();
    String getServerCertificate();
    String getServerName();
    String getServerSpn();
    String getSocketFactoryClass();
    String getSocketFactoryConstructorArg();
    String getTrustManagerClass();
    String getTrustManagerConstructorArg();
    String getTrustStore();
    String getTrustStoreType();
    String getURL();
    String getUser();
    String getWorkstationID();
    boolean getDelayLoadingLobs();
    boolean getDisableStatementPooling();
    boolean getEnablePrepareOnFirstPreparedStatementCall();
    boolean getFIPS();
    boolean getLastUpdateCount();
    boolean getMultiSubnetFailover();
    boolean getReplication();
    boolean getSendStringParametersAsUnicode();
    boolean getSendTemporalDataTypesAsStringForBulkCopy();
    boolean getSendTimeAsDatetime();
    boolean getServerNameAsACE();
    boolean getTransparentNetworkIPResolution();
    boolean getTrustServerCertificate();
    boolean getUseBulkCopyForBatchInsert();
    boolean getUseFmtOnly();
    boolean getXopenStates();
    int getCancelQueryTimeout();
    int getConnectRetryCount();
    int getConnectRetryInterval();
    int getLockTimeout();
    int getMsiTokenCacheTtl();
    int getPacketSize();
    int getPortNumber();
    int getQueryTimeout();
    int getServerPreparedStatementDiscardThreshold();
    int getSocketTimeout();
    int getStatementPoolingCacheSize();
    void setAADSecurePrincipalId(String p0);
    void setAADSecurePrincipalSecret(String p0);
    void setAccessToken(String p0);
    void setAccessTokenCallback(SQLServerAccessTokenCallback p0);
    void setApplicationIntent(String p0);
    void setApplicationName(String p0);
    void setAuthentication(String p0);
    void setAuthenticationScheme(String p0);
    void setCancelQueryTimeout(int p0);
    void setClientCertificate(String p0);
    void setClientKey(String p0);
    void setClientKeyPassword(String p0);
    void setColumnEncryptionSetting(String p0);
    void setConnectRetryCount(int p0);
    void setConnectRetryInterval(int p0);
    void setDatabaseName(String p0);
    void setDatetimeParameterType(String p0);
    void setDelayLoadingLobs(boolean p0);
    void setDescription(String p0);
    void setDisableStatementPooling(boolean p0);
    void setDomain(String p0);
    void setEnablePrepareOnFirstPreparedStatementCall(boolean p0);
    void setEnclaveAttestationProtocol(String p0);
    void setEnclaveAttestationUrl(String p0);
    void setEncrypt(String p0);
    void setEncrypt(boolean p0);
    void setFIPS(boolean p0);
    void setFailoverPartner(String p0);
    void setGSSCredentials(GSSCredential p0);
    void setHostNameInCertificate(String p0);
    void setIPAddressPreference(String p0);
    void setInstanceName(String p0);
    void setIntegratedSecurity(boolean p0);
    void setJAASConfigurationName(String p0);
    void setJASSConfigurationName(String p0);
    void setKeyStoreAuthentication(String p0);
    void setKeyStoreLocation(String p0);
    void setKeyStorePrincipalId(String p0);
    void setKeyStoreSecret(String p0);
    void setKeyVaultProviderClientId(String p0);
    void setKeyVaultProviderClientKey(String p0);
    void setLastUpdateCount(boolean p0);
    void setLockTimeout(int p0);
    void setMSIClientId(String p0);
    void setMaxResultBuffer(String p0);
    void setMsiTokenCacheTtl(int p0);
    void setMultiSubnetFailover(boolean p0);
    void setPacketSize(int p0);
    void setPassword(String p0);
    void setPortNumber(int p0);
    void setPrepareMethod(String p0);
    void setQueryTimeout(int p0);
    void setRealm(String p0);
    void setReplication(boolean p0);
    void setResponseBuffering(String p0);
    void setSSLProtocol(String p0);
    void setSelectMethod(String p0);
    void setSendStringParametersAsUnicode(boolean p0);
    void setSendTemporalDataTypesAsStringForBulkCopy(boolean p0);
    void setSendTimeAsDatetime(boolean p0);
    void setServerCertificate(String p0);
    void setServerName(String p0);
    void setServerNameAsACE(boolean p0);
    void setServerPreparedStatementDiscardThreshold(int p0);
    void setServerSpn(String p0);
    void setSocketFactoryClass(String p0);
    void setSocketFactoryConstructorArg(String p0);
    void setSocketTimeout(int p0);
    void setStatementPoolingCacheSize(int p0);
    void setTransparentNetworkIPResolution(boolean p0);
    void setTrustManagerClass(String p0);
    void setTrustManagerConstructorArg(String p0);
    void setTrustServerCertificate(boolean p0);
    void setTrustStore(String p0);
    void setTrustStorePassword(String p0);
    void setTrustStoreType(String p0);
    void setURL(String p0);
    void setUseBulkCopyForBatchInsert(boolean p0);
    void setUseFmtOnly(boolean p0);
    void setUser(String p0);
    void setWorkstationID(String p0);
    void setXopenStates(boolean p0);
}
