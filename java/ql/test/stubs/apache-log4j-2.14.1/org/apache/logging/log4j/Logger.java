// Generated automatically from org.apache.logging.log4j.Logger for testing purposes

package org.apache.logging.log4j;

import org.apache.logging.log4j.Level;
import org.apache.logging.log4j.LogBuilder;
import org.apache.logging.log4j.Marker;
import org.apache.logging.log4j.message.EntryMessage;
import org.apache.logging.log4j.message.Message;
import org.apache.logging.log4j.message.MessageFactory;
import org.apache.logging.log4j.util.MessageSupplier;
import org.apache.logging.log4j.util.Supplier;

public interface Logger
{
    <MF extends MessageFactory> MF getMessageFactory();
    <R> R exit(R p0);
    <R> R traceExit(EntryMessage p0, R p1);
    <R> R traceExit(Message p0, R p1);
    <R> R traceExit(R p0);
    <R> R traceExit(String p0, R p1);
    <T extends Throwable> T throwing(Level p0, T p1);
    <T extends Throwable> T throwing(T p0);
    EntryMessage traceEntry();
    EntryMessage traceEntry(Message p0);
    EntryMessage traceEntry(String p0, Object... p1);
    EntryMessage traceEntry(String p0, Supplier<? extends Object>... p1);
    EntryMessage traceEntry(Supplier<? extends Object>... p0);
    Level getLevel();
    String getName();
    boolean isDebugEnabled();
    boolean isDebugEnabled(Marker p0);
    boolean isEnabled(Level p0);
    boolean isEnabled(Level p0, Marker p1);
    boolean isErrorEnabled();
    boolean isErrorEnabled(Marker p0);
    boolean isFatalEnabled();
    boolean isFatalEnabled(Marker p0);
    boolean isInfoEnabled();
    boolean isInfoEnabled(Marker p0);
    boolean isTraceEnabled();
    boolean isTraceEnabled(Marker p0);
    boolean isWarnEnabled();
    boolean isWarnEnabled(Marker p0);
    default LogBuilder always(){ return null; }
    default LogBuilder atDebug(){ return null; }
    default LogBuilder atError(){ return null; }
    default LogBuilder atFatal(){ return null; }
    default LogBuilder atInfo(){ return null; }
    default LogBuilder atLevel(Level p0){ return null; }
    default LogBuilder atTrace(){ return null; }
    default LogBuilder atWarn(){ return null; }
    default void logMessage(Level p0, Marker p1, String p2, StackTraceElement p3, Message p4, Throwable p5){}
    void catching(Level p0, Throwable p1);
    void catching(Throwable p0);
    void debug(CharSequence p0);
    void debug(CharSequence p0, Throwable p1);
    void debug(Marker p0, CharSequence p1);
    void debug(Marker p0, CharSequence p1, Throwable p2);
    void debug(Marker p0, Message p1);
    void debug(Marker p0, Message p1, Throwable p2);
    void debug(Marker p0, MessageSupplier p1);
    void debug(Marker p0, MessageSupplier p1, Throwable p2);
    void debug(Marker p0, Object p1);
    void debug(Marker p0, Object p1, Throwable p2);
    void debug(Marker p0, String p1);
    void debug(Marker p0, String p1, Object p2);
    void debug(Marker p0, String p1, Object p2, Object p3);
    void debug(Marker p0, String p1, Object p2, Object p3, Object p4);
    void debug(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5);
    void debug(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6);
    void debug(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7);
    void debug(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8);
    void debug(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9);
    void debug(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9, Object p10);
    void debug(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9, Object p10, Object p11);
    void debug(Marker p0, String p1, Object... p2);
    void debug(Marker p0, String p1, Supplier<? extends Object>... p2);
    void debug(Marker p0, String p1, Throwable p2);
    void debug(Marker p0, Supplier<? extends Object> p1);
    void debug(Marker p0, Supplier<? extends Object> p1, Throwable p2);
    void debug(Message p0);
    void debug(Message p0, Throwable p1);
    void debug(MessageSupplier p0);
    void debug(MessageSupplier p0, Throwable p1);
    void debug(Object p0);
    void debug(Object p0, Throwable p1);
    void debug(String p0);
    void debug(String p0, Object p1);
    void debug(String p0, Object p1, Object p2);
    void debug(String p0, Object p1, Object p2, Object p3);
    void debug(String p0, Object p1, Object p2, Object p3, Object p4);
    void debug(String p0, Object p1, Object p2, Object p3, Object p4, Object p5);
    void debug(String p0, Object p1, Object p2, Object p3, Object p4, Object p5, Object p6);
    void debug(String p0, Object p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7);
    void debug(String p0, Object p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8);
    void debug(String p0, Object p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9);
    void debug(String p0, Object p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9, Object p10);
    void debug(String p0, Object... p1);
    void debug(String p0, Supplier<? extends Object>... p1);
    void debug(String p0, Throwable p1);
    void debug(Supplier<? extends Object> p0);
    void debug(Supplier<? extends Object> p0, Throwable p1);
    void entry();
    void entry(Object... p0);
    void error(CharSequence p0);
    void error(CharSequence p0, Throwable p1);
    void error(Marker p0, CharSequence p1);
    void error(Marker p0, CharSequence p1, Throwable p2);
    void error(Marker p0, Message p1);
    void error(Marker p0, Message p1, Throwable p2);
    void error(Marker p0, MessageSupplier p1);
    void error(Marker p0, MessageSupplier p1, Throwable p2);
    void error(Marker p0, Object p1);
    void error(Marker p0, Object p1, Throwable p2);
    void error(Marker p0, String p1);
    void error(Marker p0, String p1, Object p2);
    void error(Marker p0, String p1, Object p2, Object p3);
    void error(Marker p0, String p1, Object p2, Object p3, Object p4);
    void error(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5);
    void error(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6);
    void error(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7);
    void error(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8);
    void error(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9);
    void error(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9, Object p10);
    void error(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9, Object p10, Object p11);
    void error(Marker p0, String p1, Object... p2);
    void error(Marker p0, String p1, Supplier<? extends Object>... p2);
    void error(Marker p0, String p1, Throwable p2);
    void error(Marker p0, Supplier<? extends Object> p1);
    void error(Marker p0, Supplier<? extends Object> p1, Throwable p2);
    void error(Message p0);
    void error(Message p0, Throwable p1);
    void error(MessageSupplier p0);
    void error(MessageSupplier p0, Throwable p1);
    void error(Object p0);
    void error(Object p0, Throwable p1);
    void error(String p0);
    void error(String p0, Object p1);
    void error(String p0, Object p1, Object p2);
    void error(String p0, Object p1, Object p2, Object p3);
    void error(String p0, Object p1, Object p2, Object p3, Object p4);
    void error(String p0, Object p1, Object p2, Object p3, Object p4, Object p5);
    void error(String p0, Object p1, Object p2, Object p3, Object p4, Object p5, Object p6);
    void error(String p0, Object p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7);
    void error(String p0, Object p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8);
    void error(String p0, Object p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9);
    void error(String p0, Object p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9, Object p10);
    void error(String p0, Object... p1);
    void error(String p0, Supplier<? extends Object>... p1);
    void error(String p0, Throwable p1);
    void error(Supplier<? extends Object> p0);
    void error(Supplier<? extends Object> p0, Throwable p1);
    void exit();
    void fatal(CharSequence p0);
    void fatal(CharSequence p0, Throwable p1);
    void fatal(Marker p0, CharSequence p1);
    void fatal(Marker p0, CharSequence p1, Throwable p2);
    void fatal(Marker p0, Message p1);
    void fatal(Marker p0, Message p1, Throwable p2);
    void fatal(Marker p0, MessageSupplier p1);
    void fatal(Marker p0, MessageSupplier p1, Throwable p2);
    void fatal(Marker p0, Object p1);
    void fatal(Marker p0, Object p1, Throwable p2);
    void fatal(Marker p0, String p1);
    void fatal(Marker p0, String p1, Object p2);
    void fatal(Marker p0, String p1, Object p2, Object p3);
    void fatal(Marker p0, String p1, Object p2, Object p3, Object p4);
    void fatal(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5);
    void fatal(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6);
    void fatal(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7);
    void fatal(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8);
    void fatal(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9);
    void fatal(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9, Object p10);
    void fatal(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9, Object p10, Object p11);
    void fatal(Marker p0, String p1, Object... p2);
    void fatal(Marker p0, String p1, Supplier<? extends Object>... p2);
    void fatal(Marker p0, String p1, Throwable p2);
    void fatal(Marker p0, Supplier<? extends Object> p1);
    void fatal(Marker p0, Supplier<? extends Object> p1, Throwable p2);
    void fatal(Message p0);
    void fatal(Message p0, Throwable p1);
    void fatal(MessageSupplier p0);
    void fatal(MessageSupplier p0, Throwable p1);
    void fatal(Object p0);
    void fatal(Object p0, Throwable p1);
    void fatal(String p0);
    void fatal(String p0, Object p1);
    void fatal(String p0, Object p1, Object p2);
    void fatal(String p0, Object p1, Object p2, Object p3);
    void fatal(String p0, Object p1, Object p2, Object p3, Object p4);
    void fatal(String p0, Object p1, Object p2, Object p3, Object p4, Object p5);
    void fatal(String p0, Object p1, Object p2, Object p3, Object p4, Object p5, Object p6);
    void fatal(String p0, Object p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7);
    void fatal(String p0, Object p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8);
    void fatal(String p0, Object p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9);
    void fatal(String p0, Object p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9, Object p10);
    void fatal(String p0, Object... p1);
    void fatal(String p0, Supplier<? extends Object>... p1);
    void fatal(String p0, Throwable p1);
    void fatal(Supplier<? extends Object> p0);
    void fatal(Supplier<? extends Object> p0, Throwable p1);
    void info(CharSequence p0);
    void info(CharSequence p0, Throwable p1);
    void info(Marker p0, CharSequence p1);
    void info(Marker p0, CharSequence p1, Throwable p2);
    void info(Marker p0, Message p1);
    void info(Marker p0, Message p1, Throwable p2);
    void info(Marker p0, MessageSupplier p1);
    void info(Marker p0, MessageSupplier p1, Throwable p2);
    void info(Marker p0, Object p1);
    void info(Marker p0, Object p1, Throwable p2);
    void info(Marker p0, String p1);
    void info(Marker p0, String p1, Object p2);
    void info(Marker p0, String p1, Object p2, Object p3);
    void info(Marker p0, String p1, Object p2, Object p3, Object p4);
    void info(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5);
    void info(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6);
    void info(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7);
    void info(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8);
    void info(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9);
    void info(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9, Object p10);
    void info(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9, Object p10, Object p11);
    void info(Marker p0, String p1, Object... p2);
    void info(Marker p0, String p1, Supplier<? extends Object>... p2);
    void info(Marker p0, String p1, Throwable p2);
    void info(Marker p0, Supplier<? extends Object> p1);
    void info(Marker p0, Supplier<? extends Object> p1, Throwable p2);
    void info(Message p0);
    void info(Message p0, Throwable p1);
    void info(MessageSupplier p0);
    void info(MessageSupplier p0, Throwable p1);
    void info(Object p0);
    void info(Object p0, Throwable p1);
    void info(String p0);
    void info(String p0, Object p1);
    void info(String p0, Object p1, Object p2);
    void info(String p0, Object p1, Object p2, Object p3);
    void info(String p0, Object p1, Object p2, Object p3, Object p4);
    void info(String p0, Object p1, Object p2, Object p3, Object p4, Object p5);
    void info(String p0, Object p1, Object p2, Object p3, Object p4, Object p5, Object p6);
    void info(String p0, Object p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7);
    void info(String p0, Object p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8);
    void info(String p0, Object p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9);
    void info(String p0, Object p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9, Object p10);
    void info(String p0, Object... p1);
    void info(String p0, Supplier<? extends Object>... p1);
    void info(String p0, Throwable p1);
    void info(Supplier<? extends Object> p0);
    void info(Supplier<? extends Object> p0, Throwable p1);
    void log(Level p0, CharSequence p1);
    void log(Level p0, CharSequence p1, Throwable p2);
    void log(Level p0, Marker p1, CharSequence p2);
    void log(Level p0, Marker p1, CharSequence p2, Throwable p3);
    void log(Level p0, Marker p1, Message p2);
    void log(Level p0, Marker p1, Message p2, Throwable p3);
    void log(Level p0, Marker p1, MessageSupplier p2);
    void log(Level p0, Marker p1, MessageSupplier p2, Throwable p3);
    void log(Level p0, Marker p1, Object p2);
    void log(Level p0, Marker p1, Object p2, Throwable p3);
    void log(Level p0, Marker p1, String p2);
    void log(Level p0, Marker p1, String p2, Object p3);
    void log(Level p0, Marker p1, String p2, Object p3, Object p4);
    void log(Level p0, Marker p1, String p2, Object p3, Object p4, Object p5);
    void log(Level p0, Marker p1, String p2, Object p3, Object p4, Object p5, Object p6);
    void log(Level p0, Marker p1, String p2, Object p3, Object p4, Object p5, Object p6, Object p7);
    void log(Level p0, Marker p1, String p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8);
    void log(Level p0, Marker p1, String p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9);
    void log(Level p0, Marker p1, String p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9, Object p10);
    void log(Level p0, Marker p1, String p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9, Object p10, Object p11);
    void log(Level p0, Marker p1, String p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9, Object p10, Object p11, Object p12);
    void log(Level p0, Marker p1, String p2, Object... p3);
    void log(Level p0, Marker p1, String p2, Supplier<? extends Object>... p3);
    void log(Level p0, Marker p1, String p2, Throwable p3);
    void log(Level p0, Marker p1, Supplier<? extends Object> p2);
    void log(Level p0, Marker p1, Supplier<? extends Object> p2, Throwable p3);
    void log(Level p0, Message p1);
    void log(Level p0, Message p1, Throwable p2);
    void log(Level p0, MessageSupplier p1);
    void log(Level p0, MessageSupplier p1, Throwable p2);
    void log(Level p0, Object p1);
    void log(Level p0, Object p1, Throwable p2);
    void log(Level p0, String p1);
    void log(Level p0, String p1, Object p2);
    void log(Level p0, String p1, Object p2, Object p3);
    void log(Level p0, String p1, Object p2, Object p3, Object p4);
    void log(Level p0, String p1, Object p2, Object p3, Object p4, Object p5);
    void log(Level p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6);
    void log(Level p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7);
    void log(Level p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8);
    void log(Level p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9);
    void log(Level p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9, Object p10);
    void log(Level p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9, Object p10, Object p11);
    void log(Level p0, String p1, Object... p2);
    void log(Level p0, String p1, Supplier<? extends Object>... p2);
    void log(Level p0, String p1, Throwable p2);
    void log(Level p0, Supplier<? extends Object> p1);
    void log(Level p0, Supplier<? extends Object> p1, Throwable p2);
    void printf(Level p0, Marker p1, String p2, Object... p3);
    void printf(Level p0, String p1, Object... p2);
    void trace(CharSequence p0);
    void trace(CharSequence p0, Throwable p1);
    void trace(Marker p0, CharSequence p1);
    void trace(Marker p0, CharSequence p1, Throwable p2);
    void trace(Marker p0, Message p1);
    void trace(Marker p0, Message p1, Throwable p2);
    void trace(Marker p0, MessageSupplier p1);
    void trace(Marker p0, MessageSupplier p1, Throwable p2);
    void trace(Marker p0, Object p1);
    void trace(Marker p0, Object p1, Throwable p2);
    void trace(Marker p0, String p1);
    void trace(Marker p0, String p1, Object p2);
    void trace(Marker p0, String p1, Object p2, Object p3);
    void trace(Marker p0, String p1, Object p2, Object p3, Object p4);
    void trace(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5);
    void trace(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6);
    void trace(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7);
    void trace(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8);
    void trace(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9);
    void trace(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9, Object p10);
    void trace(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9, Object p10, Object p11);
    void trace(Marker p0, String p1, Object... p2);
    void trace(Marker p0, String p1, Supplier<? extends Object>... p2);
    void trace(Marker p0, String p1, Throwable p2);
    void trace(Marker p0, Supplier<? extends Object> p1);
    void trace(Marker p0, Supplier<? extends Object> p1, Throwable p2);
    void trace(Message p0);
    void trace(Message p0, Throwable p1);
    void trace(MessageSupplier p0);
    void trace(MessageSupplier p0, Throwable p1);
    void trace(Object p0);
    void trace(Object p0, Throwable p1);
    void trace(String p0);
    void trace(String p0, Object p1);
    void trace(String p0, Object p1, Object p2);
    void trace(String p0, Object p1, Object p2, Object p3);
    void trace(String p0, Object p1, Object p2, Object p3, Object p4);
    void trace(String p0, Object p1, Object p2, Object p3, Object p4, Object p5);
    void trace(String p0, Object p1, Object p2, Object p3, Object p4, Object p5, Object p6);
    void trace(String p0, Object p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7);
    void trace(String p0, Object p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8);
    void trace(String p0, Object p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9);
    void trace(String p0, Object p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9, Object p10);
    void trace(String p0, Object... p1);
    void trace(String p0, Supplier<? extends Object>... p1);
    void trace(String p0, Throwable p1);
    void trace(Supplier<? extends Object> p0);
    void trace(Supplier<? extends Object> p0, Throwable p1);
    void traceExit();
    void traceExit(EntryMessage p0);
    void warn(CharSequence p0);
    void warn(CharSequence p0, Throwable p1);
    void warn(Marker p0, CharSequence p1);
    void warn(Marker p0, CharSequence p1, Throwable p2);
    void warn(Marker p0, Message p1);
    void warn(Marker p0, Message p1, Throwable p2);
    void warn(Marker p0, MessageSupplier p1);
    void warn(Marker p0, MessageSupplier p1, Throwable p2);
    void warn(Marker p0, Object p1);
    void warn(Marker p0, Object p1, Throwable p2);
    void warn(Marker p0, String p1);
    void warn(Marker p0, String p1, Object p2);
    void warn(Marker p0, String p1, Object p2, Object p3);
    void warn(Marker p0, String p1, Object p2, Object p3, Object p4);
    void warn(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5);
    void warn(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6);
    void warn(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7);
    void warn(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8);
    void warn(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9);
    void warn(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9, Object p10);
    void warn(Marker p0, String p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9, Object p10, Object p11);
    void warn(Marker p0, String p1, Object... p2);
    void warn(Marker p0, String p1, Supplier<? extends Object>... p2);
    void warn(Marker p0, String p1, Throwable p2);
    void warn(Marker p0, Supplier<? extends Object> p1);
    void warn(Marker p0, Supplier<? extends Object> p1, Throwable p2);
    void warn(Message p0);
    void warn(Message p0, Throwable p1);
    void warn(MessageSupplier p0);
    void warn(MessageSupplier p0, Throwable p1);
    void warn(Object p0);
    void warn(Object p0, Throwable p1);
    void warn(String p0);
    void warn(String p0, Object p1);
    void warn(String p0, Object p1, Object p2);
    void warn(String p0, Object p1, Object p2, Object p3);
    void warn(String p0, Object p1, Object p2, Object p3, Object p4);
    void warn(String p0, Object p1, Object p2, Object p3, Object p4, Object p5);
    void warn(String p0, Object p1, Object p2, Object p3, Object p4, Object p5, Object p6);
    void warn(String p0, Object p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7);
    void warn(String p0, Object p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8);
    void warn(String p0, Object p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9);
    void warn(String p0, Object p1, Object p2, Object p3, Object p4, Object p5, Object p6, Object p7, Object p8, Object p9, Object p10);
    void warn(String p0, Object... p1);
    void warn(String p0, Supplier<? extends Object>... p1);
    void warn(String p0, Throwable p1);
    void warn(Supplier<? extends Object> p0);
    void warn(Supplier<? extends Object> p0, Throwable p1);
}
