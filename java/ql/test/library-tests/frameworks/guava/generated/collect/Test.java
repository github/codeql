package generatedtest;

import com.google.common.base.Function;
import com.google.common.base.Optional;
import com.google.common.base.Predicate;
import com.google.common.collect.ArrayListMultimap;
import com.google.common.collect.ArrayTable;
import com.google.common.collect.BiMap;
import com.google.common.collect.ClassToInstanceMap;
import com.google.common.collect.Collections2;
import com.google.common.collect.ConcurrentHashMultiset;
import com.google.common.collect.HashBasedTable;
import com.google.common.collect.HashBiMap;
import com.google.common.collect.HashMultimap;
import com.google.common.collect.HashMultiset;
import com.google.common.collect.ImmutableBiMap;
import com.google.common.collect.ImmutableClassToInstanceMap;
import com.google.common.collect.ImmutableCollection;
import com.google.common.collect.ImmutableList;
import com.google.common.collect.ImmutableListMultimap;
import com.google.common.collect.ImmutableMap;
import com.google.common.collect.ImmutableMultimap;
import com.google.common.collect.ImmutableMultiset;
import com.google.common.collect.ImmutableSet;
import com.google.common.collect.ImmutableSetMultimap;
import com.google.common.collect.ImmutableSortedMap;
import com.google.common.collect.ImmutableSortedMultiset;
import com.google.common.collect.ImmutableSortedSet;
import com.google.common.collect.ImmutableTable;
import com.google.common.collect.Iterables;
import com.google.common.collect.Iterators;
import com.google.common.collect.LinkedHashMultimap;
import com.google.common.collect.LinkedHashMultiset;
import com.google.common.collect.LinkedListMultimap;
import com.google.common.collect.ListMultimap;
import com.google.common.collect.Lists;
import com.google.common.collect.MapDifference;
import com.google.common.collect.Maps;
import com.google.common.collect.Multimap;
import com.google.common.collect.Multimaps;
import com.google.common.collect.Multiset;
import com.google.common.collect.Multisets;
import com.google.common.collect.MutableClassToInstanceMap;
import com.google.common.collect.ObjectArrays;
import com.google.common.collect.PeekingIterator;
import com.google.common.collect.Queues;
import com.google.common.collect.RowSortedTable;
import com.google.common.collect.SetMultimap;
import com.google.common.collect.Sets;
import com.google.common.collect.SortedMapDifference;
import com.google.common.collect.SortedMultiset;
import com.google.common.collect.SortedSetMultimap;
import com.google.common.collect.Table;
import com.google.common.collect.Tables;
import com.google.common.collect.TreeBasedTable;
import com.google.common.collect.TreeMultimap;
import com.google.common.collect.TreeMultiset;
import com.google.common.collect.UnmodifiableIterator;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.Deque;
import java.util.EnumMap;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.NavigableMap;
import java.util.NavigableSet;
import java.util.PriorityQueue;
import java.util.Properties;
import java.util.Queue;
import java.util.Set;
import java.util.SortedMap;
import java.util.SortedSet;
import java.util.TreeMap;
import java.util.TreeSet;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.ConcurrentLinkedQueue;
import java.util.concurrent.CopyOnWriteArrayList;
import java.util.concurrent.CopyOnWriteArraySet;
import java.util.concurrent.LinkedBlockingDeque;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.PriorityBlockingQueue;

// Test case generated by GenerateFlowTestCase.ql
public class Test {

	<C> C getTable_columnKey(ImmutableTable.Builder<?,C,?> b) { return getTable_columnKey(b.build()); }
	<C> C getTable_columnKey(Table<?,C,?> t) { return t.columnKeySet().iterator().next(); }
	<K> K getMapKey(ImmutableMap.Builder<K,?> b) { return getMapKey(b.build()); }
	<K> K getMapKey(ImmutableMultimap.Builder<K,?> b) { return getMapKey(b.build()); }
	<K> K getMapKey(Map<K,?> map) { return map.keySet().iterator().next(); }
	<K> K getMapKey(Multimap<K,?> map) { return map.keySet().iterator().next(); }
	<K> Map.Entry<K,?> newEntryWithMapKey(K key) { return Map.of(key, null).entrySet().iterator().next(); }
	<R,C,V> Table.Cell<R,C,V> newTableCell(R row, C column, V value) { return getElement(ImmutableTable.of(row, column, value).cellSet()); }
	<R,C,V> TreeBasedTable<R,C,V> newTable(R row, C column, V value) { TreeBasedTable t = TreeBasedTable.create(null, null); t.put(row, column, value); return t; }
	<R> R getTable_rowKey(ImmutableTable.Builder<R,?,?> b) { return getTable_rowKey(b.build()); }
	<R> R getTable_rowKey(Table<R,?,?> t) { return t.rowKeySet().iterator().next(); }
	<T> Multiset.Entry<T> newEntryWithElement(T el) { return getElement(ImmutableMultiset.of(el).entrySet()); }
	<T> T getArrayElement(T[] array) { return array[0]; }
	<T> T getElement(Enumeration<T> it) { return it.nextElement(); }
	<T> T getElement(ImmutableCollection.Builder<T> b) { return getElement(b.build()); }
	<T> T getElement(Iterable<T> it) { return it.iterator().next(); }
	<T> T getElement(Iterator<T> it) { return it.next(); }
	<T> T getElement(Optional<T> o) { return o.get(); }
	<V> Map.Entry<?,V> newEntryWithMapValue(V value) { return Map.of(null, value).entrySet().iterator().next(); }
	<V> MapDifference.ValueDifference newMapValueDifference(V l, V r) { return Maps.difference(Map.of(null, l), Map.of(null, r)).entriesDiffering().get(null); }
	<V> V getMapValue(ImmutableMap.Builder<?,V> b) { return getMapValue(b.build()); }
	<V> V getMapValue(ImmutableMultimap.Builder<?,V> b) { return getMapValue(b.build()); }
	<V> V getMapValue(ImmutableTable.Builder<?,?,V> b) { return getMapValue(b.build()); }
	<V> V getMapValue(Map<?,V> map) { return map.get(null); }
	<V> V getMapValue(Multimap<?,V> map) { return map.values().iterator().next(); }
	<V> V getMapValue(Table<?,?,V> t) { return t.values().iterator().next(); }
	Object newWithElementDefault(Object element) { return null; }
	Object newWithMapKeyDefault(Object element) { return null; }
	Object newWithMapValueDefault(Object element) { return null; }
	Object source() { return null; }
	void sink(Object o) { }

	public void test() throws Exception {

		{
			// "com.google.common.collect;ArrayListMultimap;true;create;(Multimap);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			ArrayListMultimap out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(source(), null);
			out = ArrayListMultimap.create(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ArrayListMultimap;true;create;(Multimap);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			ArrayListMultimap out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(null, source());
			out = ArrayListMultimap.create(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ArrayTable;true;create;(Iterable,Iterable);;Element of Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of ReturnValue;value;manual"
			ArrayTable out = null;
			Iterable in = (Iterable)List.of(source());
			out = ArrayTable.create(in, null);
			sink(getTable_rowKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ArrayTable;true;create;(Iterable,Iterable);;Element of Argument[1];SyntheticField[com.google.common.collect.Table.columnKey] of ReturnValue;value;manual"
			ArrayTable out = null;
			Iterable in = (Iterable)List.of(source());
			out = ArrayTable.create(null, in);
			sink(getTable_columnKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ArrayTable;true;create;(Table);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			ArrayTable out = null;
			Table in = (Table)ArrayTable.create(ImmutableTable.of(null, null, source()));
			out = ArrayTable.create(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ArrayTable;true;create;(Table);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[0];SyntheticField[com.google.common.collect.Table.columnKey] of ReturnValue;value;manual"
			ArrayTable out = null;
			Table in = (Table)ArrayTable.create(ImmutableTable.of(null, source(), null));
			out = ArrayTable.create(in);
			sink(getTable_columnKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ArrayTable;true;create;(Table);;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of ReturnValue;value;manual"
			ArrayTable out = null;
			Table in = (Table)ArrayTable.create(ImmutableTable.of(source(), null, null));
			out = ArrayTable.create(in);
			sink(getTable_rowKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;BiMap;true;forcePut;(Object,Object);;Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out.forcePut(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;BiMap;true;forcePut;(Object,Object);;Argument[0];MapKey of Argument[-1];value;manual"
			HashBiMap out = null;
			Object in = (Object)source();
			out.forcePut(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;BiMap;true;forcePut;(Object,Object);;Argument[0];MapKey of Argument[-1];value;manual"
			BiMap out = null;
			Object in = (Object)source();
			out.forcePut(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;BiMap;true;forcePut;(Object,Object);;Argument[1];MapValue of Argument[-1];value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out.forcePut(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;BiMap;true;forcePut;(Object,Object);;Argument[1];MapValue of Argument[-1];value;manual"
			HashBiMap out = null;
			Object in = (Object)source();
			out.forcePut(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;BiMap;true;forcePut;(Object,Object);;Argument[1];MapValue of Argument[-1];value;manual"
			BiMap out = null;
			Object in = (Object)source();
			out.forcePut(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;BiMap;true;inverse;();;MapKey of Argument[-1];MapValue of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			ImmutableBiMap in = (ImmutableBiMap)ImmutableBiMap.of(source(), null);
			out = in.inverse();
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;BiMap;true;inverse;();;MapKey of Argument[-1];MapValue of ReturnValue;value;manual"
			BiMap out = null;
			HashBiMap in = (HashBiMap)HashBiMap.create(Map.of(source(), null));
			out = in.inverse();
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;BiMap;true;inverse;();;MapKey of Argument[-1];MapValue of ReturnValue;value;manual"
			BiMap out = null;
			BiMap in = (BiMap)ImmutableBiMap.of(source(), null);
			out = in.inverse();
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;BiMap;true;inverse;();;MapValue of Argument[-1];MapKey of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			ImmutableBiMap in = (ImmutableBiMap)ImmutableBiMap.of(null, source());
			out = in.inverse();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;BiMap;true;inverse;();;MapValue of Argument[-1];MapKey of ReturnValue;value;manual"
			BiMap out = null;
			HashBiMap in = (HashBiMap)HashBiMap.create(Map.of(null, source()));
			out = in.inverse();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;BiMap;true;inverse;();;MapValue of Argument[-1];MapKey of ReturnValue;value;manual"
			BiMap out = null;
			BiMap in = (BiMap)ImmutableBiMap.of(null, source());
			out = in.inverse();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ClassToInstanceMap;true;getInstance;(Class);;MapValue of Argument[-1];ReturnValue;value;manual"
			Object out = null;
			MutableClassToInstanceMap in = (MutableClassToInstanceMap)MutableClassToInstanceMap.create(Map.of(null, source()));
			out = in.getInstance(null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ClassToInstanceMap;true;getInstance;(Class);;MapValue of Argument[-1];ReturnValue;value;manual"
			Object out = null;
			ImmutableClassToInstanceMap in = (ImmutableClassToInstanceMap)ImmutableClassToInstanceMap.of(null, source());
			out = in.getInstance(null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ClassToInstanceMap;true;getInstance;(Class);;MapValue of Argument[-1];ReturnValue;value;manual"
			Object out = null;
			ClassToInstanceMap in = (ClassToInstanceMap)ImmutableClassToInstanceMap.of(null, source());
			out = in.getInstance(null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ClassToInstanceMap;true;putInstance;(Class,Object);;Argument[1];MapValue of Argument[-1];value;manual"
			MutableClassToInstanceMap out = null;
			Object in = (Object)source();
			out.putInstance(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ClassToInstanceMap;true;putInstance;(Class,Object);;Argument[1];MapValue of Argument[-1];value;manual"
			ImmutableClassToInstanceMap out = null;
			Object in = (Object)source();
			out.putInstance(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ClassToInstanceMap;true;putInstance;(Class,Object);;Argument[1];MapValue of Argument[-1];value;manual"
			ClassToInstanceMap out = null;
			Object in = (Object)source();
			out.putInstance(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ClassToInstanceMap;true;putInstance;(Class,Object);;MapValue of Argument[-1];ReturnValue;value;manual"
			Object out = null;
			MutableClassToInstanceMap in = (MutableClassToInstanceMap)MutableClassToInstanceMap.create(Map.of(null, source()));
			out = in.putInstance(null, null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ClassToInstanceMap;true;putInstance;(Class,Object);;MapValue of Argument[-1];ReturnValue;value;manual"
			Object out = null;
			ImmutableClassToInstanceMap in = (ImmutableClassToInstanceMap)ImmutableClassToInstanceMap.of(null, source());
			out = in.putInstance(null, null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ClassToInstanceMap;true;putInstance;(Class,Object);;MapValue of Argument[-1];ReturnValue;value;manual"
			Object out = null;
			ClassToInstanceMap in = (ClassToInstanceMap)ImmutableClassToInstanceMap.of(null, source());
			out = in.putInstance(null, null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Collections2;false;filter;(Collection,Predicate);;Element of Argument[0];Element of ReturnValue;value;manual"
			Collection out = null;
			Collection in = (Collection)List.of(source());
			out = Collections2.filter(in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Collections2;false;orderedPermutations;(Iterable);;Element of Argument[0];Element of Element of ReturnValue;value;manual"
			Collection<List> out = null;
			Iterable in = (Iterable)List.of(source());
			out = Collections2.orderedPermutations(in);
			sink(getElement(getElement(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Collections2;false;orderedPermutations;(Iterable,Comparator);;Element of Argument[0];Element of Element of ReturnValue;value;manual"
			Collection<List> out = null;
			Iterable in = (Iterable)List.of(source());
			out = Collections2.orderedPermutations(in, null);
			sink(getElement(getElement(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Collections2;false;permutations;(Collection);;Element of Argument[0];Element of Element of ReturnValue;value;manual"
			Collection<List> out = null;
			Collection in = (Collection)List.of(source());
			out = Collections2.permutations(in);
			sink(getElement(getElement(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ConcurrentHashMultiset;true;create;(Iterable);;Element of Argument[0];Element of ReturnValue;value;manual"
			ConcurrentHashMultiset out = null;
			Iterable in = (Iterable)List.of(source());
			out = ConcurrentHashMultiset.create(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;HashBasedTable;true;create;(Table);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			HashBasedTable out = null;
			Table in = (Table)newTable(null, null, source());
			out = HashBasedTable.create(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;HashBasedTable;true;create;(Table);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[0];SyntheticField[com.google.common.collect.Table.columnKey] of ReturnValue;value;manual"
			HashBasedTable out = null;
			Table in = (Table)newTable(null, source(), null);
			out = HashBasedTable.create(in);
			sink(getTable_columnKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;HashBasedTable;true;create;(Table);;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of ReturnValue;value;manual"
			HashBasedTable out = null;
			Table in = (Table)newTable(source(), null, null);
			out = HashBasedTable.create(in);
			sink(getTable_rowKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;HashBiMap;true;create;(Map);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			HashBiMap out = null;
			Map in = (Map)Map.of(source(), null);
			out = HashBiMap.create(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;HashBiMap;true;create;(Map);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			HashBiMap out = null;
			Map in = (Map)Map.of(null, source());
			out = HashBiMap.create(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;HashMultimap;true;create;(Multimap);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			HashMultimap out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(source(), null);
			out = HashMultimap.create(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;HashMultimap;true;create;(Multimap);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			HashMultimap out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(null, source());
			out = HashMultimap.create(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;HashMultiset;true;create;(Iterable);;Element of Argument[0];Element of ReturnValue;value;manual"
			HashMultiset out = null;
			Iterable in = (Iterable)List.of(source());
			out = HashMultiset.create(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableBiMap;true;of;;;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out = ImmutableBiMap.of(in, null, null, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableBiMap;true;of;;;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out = ImmutableBiMap.of(in, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableBiMap;true;of;;;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out = ImmutableBiMap.of(in, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableBiMap;true;of;;;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out = ImmutableBiMap.of(in, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableBiMap;true;of;;;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out = ImmutableBiMap.of(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableBiMap;true;of;;;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out = ImmutableBiMap.of(null, in, null, null, null, null, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableBiMap;true;of;;;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out = ImmutableBiMap.of(null, in, null, null, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableBiMap;true;of;;;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out = ImmutableBiMap.of(null, in, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableBiMap;true;of;;;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out = ImmutableBiMap.of(null, in, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableBiMap;true;of;;;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out = ImmutableBiMap.of(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableBiMap;true;of;;;Argument[2];MapKey of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out = ImmutableBiMap.of(null, null, in, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableBiMap;true;of;;;Argument[2];MapKey of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out = ImmutableBiMap.of(null, null, in, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableBiMap;true;of;;;Argument[2];MapKey of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out = ImmutableBiMap.of(null, null, in, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableBiMap;true;of;;;Argument[2];MapKey of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out = ImmutableBiMap.of(null, null, in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableBiMap;true;of;;;Argument[3];MapValue of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out = ImmutableBiMap.of(null, null, null, in, null, null, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableBiMap;true;of;;;Argument[3];MapValue of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out = ImmutableBiMap.of(null, null, null, in, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableBiMap;true;of;;;Argument[3];MapValue of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out = ImmutableBiMap.of(null, null, null, in, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableBiMap;true;of;;;Argument[3];MapValue of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out = ImmutableBiMap.of(null, null, null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableBiMap;true;of;;;Argument[4];MapKey of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out = ImmutableBiMap.of(null, null, null, null, in, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableBiMap;true;of;;;Argument[4];MapKey of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out = ImmutableBiMap.of(null, null, null, null, in, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableBiMap;true;of;;;Argument[4];MapKey of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out = ImmutableBiMap.of(null, null, null, null, in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableBiMap;true;of;;;Argument[5];MapValue of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out = ImmutableBiMap.of(null, null, null, null, null, in, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableBiMap;true;of;;;Argument[5];MapValue of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out = ImmutableBiMap.of(null, null, null, null, null, in, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableBiMap;true;of;;;Argument[5];MapValue of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out = ImmutableBiMap.of(null, null, null, null, null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableBiMap;true;of;;;Argument[6];MapKey of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out = ImmutableBiMap.of(null, null, null, null, null, null, in, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableBiMap;true;of;;;Argument[6];MapKey of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out = ImmutableBiMap.of(null, null, null, null, null, null, in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableBiMap;true;of;;;Argument[7];MapValue of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out = ImmutableBiMap.of(null, null, null, null, null, null, null, in, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableBiMap;true;of;;;Argument[7];MapValue of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out = ImmutableBiMap.of(null, null, null, null, null, null, null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableBiMap;true;of;;;Argument[8];MapKey of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out = ImmutableBiMap.of(null, null, null, null, null, null, null, null, in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableBiMap;true;of;;;Argument[9];MapValue of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			Object in = (Object)source();
			out = ImmutableBiMap.of(null, null, null, null, null, null, null, null, null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableClassToInstanceMap;true;copyOf;(Map);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableClassToInstanceMap out = null;
			Map in = (Map)Map.of(source(), null);
			out = ImmutableClassToInstanceMap.copyOf(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableClassToInstanceMap;true;copyOf;(Map);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			ImmutableClassToInstanceMap out = null;
			Map in = (Map)Map.of(null, source());
			out = ImmutableClassToInstanceMap.copyOf(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableClassToInstanceMap;true;of;(Class,Object);;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableClassToInstanceMap out = null;
			Class in = (Class)source();
			out = ImmutableClassToInstanceMap.of(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableClassToInstanceMap;true;of;(Class,Object);;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableClassToInstanceMap out = null;
			Object in = (Object)source();
			out = ImmutableClassToInstanceMap.of(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;(Object);;Argument[0];Element of Argument[-1];value;manual"
			ImmutableSortedSet.Builder out = null;
			Object in = (Object)source();
			out.add(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;(Object);;Argument[0];Element of Argument[-1];value;manual"
			ImmutableSortedMultiset.Builder out = null;
			Object in = (Object)source();
			out.add(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;(Object);;Argument[0];Element of Argument[-1];value;manual"
			ImmutableSet.Builder out = null;
			Object in = (Object)source();
			out.add(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;(Object);;Argument[0];Element of Argument[-1];value;manual"
			ImmutableMultiset.Builder out = null;
			Object in = (Object)source();
			out.add(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;(Object);;Argument[0];Element of Argument[-1];value;manual"
			ImmutableList.Builder out = null;
			Object in = (Object)source();
			out.add(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;(Object);;Argument[0];Element of Argument[-1];value;manual"
			ImmutableCollection.Builder out = null;
			Object in = (Object)source();
			out.add(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;(Object[]);;ArrayElement of Argument[0];Element of Argument[-1];value;manual"
			ImmutableSortedSet.Builder out = null;
			Object[] in = (Object[])new Object[]{source()};
			out.add(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;(Object[]);;ArrayElement of Argument[0];Element of Argument[-1];value;manual"
			ImmutableSortedMultiset.Builder out = null;
			Object[] in = (Object[])new Object[]{source()};
			out.add(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;(Object[]);;ArrayElement of Argument[0];Element of Argument[-1];value;manual"
			ImmutableSet.Builder out = null;
			Object[] in = (Object[])new Object[]{source()};
			out.add(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;(Object[]);;ArrayElement of Argument[0];Element of Argument[-1];value;manual"
			ImmutableMultiset.Builder out = null;
			Object[] in = (Object[])new Object[]{source()};
			out.add(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;(Object[]);;ArrayElement of Argument[0];Element of Argument[-1];value;manual"
			ImmutableList.Builder out = null;
			Object[] in = (Object[])new Object[]{source()};
			out.add(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;(Object[]);;ArrayElement of Argument[0];Element of Argument[-1];value;manual"
			ImmutableCollection.Builder out = null;
			Object[] in = (Object[])new Object[]{source()};
			out.add(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;;;Argument[-1];ReturnValue;value;manual"
			ImmutableSortedSet.Builder out = null;
			ImmutableSortedSet.Builder in = (ImmutableSortedSet.Builder)source();
			out = in.add((Object[])null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;;;Argument[-1];ReturnValue;value;manual"
			ImmutableSortedSet.Builder out = null;
			ImmutableSortedSet.Builder in = (ImmutableSortedSet.Builder)source();
			out = in.add((Object)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;;;Argument[-1];ReturnValue;value;manual"
			ImmutableSortedMultiset.Builder out = null;
			ImmutableSortedMultiset.Builder in = (ImmutableSortedMultiset.Builder)source();
			out = in.add((Object[])null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;;;Argument[-1];ReturnValue;value;manual"
			ImmutableSortedMultiset.Builder out = null;
			ImmutableSortedMultiset.Builder in = (ImmutableSortedMultiset.Builder)source();
			out = in.add((Object)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;;;Argument[-1];ReturnValue;value;manual"
			ImmutableSet.Builder out = null;
			ImmutableSet.Builder in = (ImmutableSet.Builder)source();
			out = in.add((Object[])null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;;;Argument[-1];ReturnValue;value;manual"
			ImmutableSet.Builder out = null;
			ImmutableSet.Builder in = (ImmutableSet.Builder)source();
			out = in.add((Object)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;;;Argument[-1];ReturnValue;value;manual"
			ImmutableMultiset.Builder out = null;
			ImmutableMultiset.Builder in = (ImmutableMultiset.Builder)source();
			out = in.add((Object[])null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;;;Argument[-1];ReturnValue;value;manual"
			ImmutableMultiset.Builder out = null;
			ImmutableMultiset.Builder in = (ImmutableMultiset.Builder)source();
			out = in.add((Object)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;;;Argument[-1];ReturnValue;value;manual"
			ImmutableList.Builder out = null;
			ImmutableList.Builder in = (ImmutableList.Builder)source();
			out = in.add((Object[])null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;;;Argument[-1];ReturnValue;value;manual"
			ImmutableList.Builder out = null;
			ImmutableList.Builder in = (ImmutableList.Builder)source();
			out = in.add((Object)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;;;Argument[-1];ReturnValue;value;manual"
			ImmutableCollection.Builder out = null;
			ImmutableCollection.Builder in = (ImmutableCollection.Builder)source();
			out = in.add((Object[])null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;add;;;Argument[-1];ReturnValue;value;manual"
			ImmutableCollection.Builder out = null;
			ImmutableCollection.Builder in = (ImmutableCollection.Builder)source();
			out = in.add((Object)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;(Iterable);;Element of Argument[0];Element of Argument[-1];value;manual"
			ImmutableSortedSet.Builder out = null;
			Iterable in = (Iterable)List.of(source());
			out.addAll(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;(Iterable);;Element of Argument[0];Element of Argument[-1];value;manual"
			ImmutableSortedMultiset.Builder out = null;
			Iterable in = (Iterable)List.of(source());
			out.addAll(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;(Iterable);;Element of Argument[0];Element of Argument[-1];value;manual"
			ImmutableSet.Builder out = null;
			Iterable in = (Iterable)List.of(source());
			out.addAll(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;(Iterable);;Element of Argument[0];Element of Argument[-1];value;manual"
			ImmutableMultiset.Builder out = null;
			Iterable in = (Iterable)List.of(source());
			out.addAll(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;(Iterable);;Element of Argument[0];Element of Argument[-1];value;manual"
			ImmutableList.Builder out = null;
			Iterable in = (Iterable)List.of(source());
			out.addAll(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;(Iterable);;Element of Argument[0];Element of Argument[-1];value;manual"
			ImmutableCollection.Builder out = null;
			Iterable in = (Iterable)List.of(source());
			out.addAll(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;(Iterator);;Element of Argument[0];Element of Argument[-1];value;manual"
			ImmutableSortedSet.Builder out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out.addAll(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;(Iterator);;Element of Argument[0];Element of Argument[-1];value;manual"
			ImmutableSortedMultiset.Builder out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out.addAll(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;(Iterator);;Element of Argument[0];Element of Argument[-1];value;manual"
			ImmutableSet.Builder out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out.addAll(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;(Iterator);;Element of Argument[0];Element of Argument[-1];value;manual"
			ImmutableMultiset.Builder out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out.addAll(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;(Iterator);;Element of Argument[0];Element of Argument[-1];value;manual"
			ImmutableList.Builder out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out.addAll(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;(Iterator);;Element of Argument[0];Element of Argument[-1];value;manual"
			ImmutableCollection.Builder out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out.addAll(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;;;Argument[-1];ReturnValue;value;manual"
			ImmutableSortedSet.Builder out = null;
			ImmutableSortedSet.Builder in = (ImmutableSortedSet.Builder)source();
			out = in.addAll((Iterator)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;;;Argument[-1];ReturnValue;value;manual"
			ImmutableSortedSet.Builder out = null;
			ImmutableSortedSet.Builder in = (ImmutableSortedSet.Builder)source();
			out = in.addAll((Iterable)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;;;Argument[-1];ReturnValue;value;manual"
			ImmutableSortedMultiset.Builder out = null;
			ImmutableSortedMultiset.Builder in = (ImmutableSortedMultiset.Builder)source();
			out = in.addAll((Iterator)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;;;Argument[-1];ReturnValue;value;manual"
			ImmutableSortedMultiset.Builder out = null;
			ImmutableSortedMultiset.Builder in = (ImmutableSortedMultiset.Builder)source();
			out = in.addAll((Iterable)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;;;Argument[-1];ReturnValue;value;manual"
			ImmutableSet.Builder out = null;
			ImmutableSet.Builder in = (ImmutableSet.Builder)source();
			out = in.addAll((Iterator)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;;;Argument[-1];ReturnValue;value;manual"
			ImmutableSet.Builder out = null;
			ImmutableSet.Builder in = (ImmutableSet.Builder)source();
			out = in.addAll((Iterable)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;;;Argument[-1];ReturnValue;value;manual"
			ImmutableMultiset.Builder out = null;
			ImmutableMultiset.Builder in = (ImmutableMultiset.Builder)source();
			out = in.addAll((Iterator)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;;;Argument[-1];ReturnValue;value;manual"
			ImmutableMultiset.Builder out = null;
			ImmutableMultiset.Builder in = (ImmutableMultiset.Builder)source();
			out = in.addAll((Iterable)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;;;Argument[-1];ReturnValue;value;manual"
			ImmutableList.Builder out = null;
			ImmutableList.Builder in = (ImmutableList.Builder)source();
			out = in.addAll((Iterator)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;;;Argument[-1];ReturnValue;value;manual"
			ImmutableList.Builder out = null;
			ImmutableList.Builder in = (ImmutableList.Builder)source();
			out = in.addAll((Iterable)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;;;Argument[-1];ReturnValue;value;manual"
			ImmutableCollection.Builder out = null;
			ImmutableCollection.Builder in = (ImmutableCollection.Builder)source();
			out = in.addAll((Iterator)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;addAll;;;Argument[-1];ReturnValue;value;manual"
			ImmutableCollection.Builder out = null;
			ImmutableCollection.Builder in = (ImmutableCollection.Builder)source();
			out = in.addAll((Iterable)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;build;();;Element of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			ImmutableSortedSet.Builder in = (ImmutableSortedSet.Builder)ImmutableSortedSet.builder().add(source());
			out = in.build();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;build;();;Element of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableSortedMultiset out = null;
			ImmutableSortedMultiset.Builder in = (ImmutableSortedMultiset.Builder)ImmutableSortedMultiset.builder().add(source());
			out = in.build();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;build;();;Element of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			ImmutableSet.Builder in = (ImmutableSet.Builder)ImmutableSet.builder().add(source());
			out = in.build();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;build;();;Element of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableMultiset out = null;
			ImmutableMultiset.Builder in = (ImmutableMultiset.Builder)ImmutableMultiset.builder().add(source());
			out = in.build();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;build;();;Element of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			ImmutableList.Builder in = (ImmutableList.Builder)ImmutableList.builder().add(source());
			out = in.build();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection$Builder;true;build;();;Element of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableCollection out = null;
			ImmutableCollection.Builder in = (ImmutableCollection.Builder)ImmutableList.builder().add(source());
			out = in.build();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection;true;asList;();;Element of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			ImmutableSet in = (ImmutableSet)ImmutableSet.of(source());
			out = in.asList();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection;true;asList;();;Element of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			ImmutableMultiset in = (ImmutableMultiset)ImmutableMultiset.of(source());
			out = in.asList();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection;true;asList;();;Element of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			ImmutableList in = (ImmutableList)ImmutableList.of(source());
			out = in.asList();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableCollection;true;asList;();;Element of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			ImmutableCollection in = (ImmutableCollection)ImmutableList.of(source());
			out = in.asList();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;copyOf;(Collection);;Element of Argument[0];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Collection in = (Collection)List.of(source());
			out = ImmutableList.copyOf(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;copyOf;(Iterable);;Element of Argument[0];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Iterable in = (Iterable)List.of(source());
			out = ImmutableList.copyOf(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;copyOf;(Iterator);;Element of Argument[0];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = ImmutableList.copyOf(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;copyOf;(Object[]);;ArrayElement of Argument[0];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object[] in = (Object[])new Object[]{source()};
			out = ImmutableList.copyOf(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, null, null, null, null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, null, null, null, in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, null, null, null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, null, null, in, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, null, null, in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, null, null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, null, in, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, null, in, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, null, in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, in, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, in, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, in, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, in, null, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, in, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, in, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, in, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, in, null, null, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, in, null, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, in, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, in, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, in, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, in, null, null, null, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, in, null, null, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, in, null, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, in, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, in, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, in, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, in, null, null, null, null, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, in, null, null, null, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, in, null, null, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, in, null, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, in, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, in, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, in, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, in, null, null, null, null, null, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, in, null, null, null, null, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, in, null, null, null, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, in, null, null, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, in, null, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, in, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, in, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, in, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(in, null, null, null, null, null, null, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(in, null, null, null, null, null, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(in, null, null, null, null, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(in, null, null, null, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(in, null, null, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(in, null, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(in, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(in, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(in, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(in, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of((Object)null, in, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of((Object)null, (Object)null, in, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of((Object)null, (Object)null, (Object)null, in, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of((Object)null, (Object)null, (Object)null, (Object)null, in, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of((Object)null, (Object)null, (Object)null, (Object)null, (Object)null, in, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of((Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, in, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of((Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, in, (Object)null, (Object)null, (Object)null, (Object)null, (Object[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of((Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, in, (Object)null, (Object)null, (Object)null, (Object[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of((Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, in, (Object)null, (Object)null, (Object[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of((Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, in, (Object)null, (Object[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;Argument[0..11];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object in = (Object)source();
			out = ImmutableList.of((Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, in, (Object[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;of;;;ArrayElement of Argument[12];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Object[] in = (Object[])new Object[]{source()};
			out = ImmutableList.of((Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;reverse;();;Element of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			ImmutableList in = (ImmutableList)ImmutableList.of(source());
			out = in.reverse();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;sortedCopyOf;(Comparator,Iterable);;Element of Argument[1];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Iterable in = (Iterable)List.of(source());
			out = ImmutableList.sortedCopyOf(null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableList;true;sortedCopyOf;(Iterable);;Element of Argument[0];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			Iterable in = (Iterable)List.of(source());
			out = ImmutableList.sortedCopyOf(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableListMultimap;true;of;;;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(in, null, null, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableListMultimap;true;of;;;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(in, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableListMultimap;true;of;;;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(in, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableListMultimap;true;of;;;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(in, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableListMultimap;true;of;;;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableListMultimap;true;of;;;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, in, null, null, null, null, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableListMultimap;true;of;;;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, in, null, null, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableListMultimap;true;of;;;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, in, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableListMultimap;true;of;;;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, in, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableListMultimap;true;of;;;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableListMultimap;true;of;;;Argument[2];MapKey of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, in, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableListMultimap;true;of;;;Argument[2];MapKey of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, in, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableListMultimap;true;of;;;Argument[2];MapKey of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, in, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableListMultimap;true;of;;;Argument[2];MapKey of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableListMultimap;true;of;;;Argument[3];MapValue of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, in, null, null, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableListMultimap;true;of;;;Argument[3];MapValue of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, in, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableListMultimap;true;of;;;Argument[3];MapValue of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, in, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableListMultimap;true;of;;;Argument[3];MapValue of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableListMultimap;true;of;;;Argument[4];MapKey of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, null, in, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableListMultimap;true;of;;;Argument[4];MapKey of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, null, in, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableListMultimap;true;of;;;Argument[4];MapKey of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, null, in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableListMultimap;true;of;;;Argument[5];MapValue of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, null, null, in, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableListMultimap;true;of;;;Argument[5];MapValue of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, null, null, in, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableListMultimap;true;of;;;Argument[5];MapValue of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, null, null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableListMultimap;true;of;;;Argument[6];MapKey of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, null, null, null, in, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableListMultimap;true;of;;;Argument[6];MapKey of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, null, null, null, in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableListMultimap;true;of;;;Argument[7];MapValue of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, null, null, null, null, in, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableListMultimap;true;of;;;Argument[7];MapValue of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, null, null, null, null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableListMultimap;true;of;;;Argument[8];MapKey of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, null, null, null, null, null, in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableListMultimap;true;of;;;Argument[9];MapValue of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out = ImmutableListMultimap.of(null, null, null, null, null, null, null, null, null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;build;();;MapKey of Argument[-1];MapKey of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			ImmutableSortedMap.Builder in = (ImmutableSortedMap.Builder)ImmutableSortedMap.builder().put(source(), null);
			out = in.build();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;build;();;MapKey of Argument[-1];MapKey of ReturnValue;value;manual"
			ImmutableMap out = null;
			ImmutableMap.Builder in = (ImmutableMap.Builder)ImmutableMap.builder().put(source(), null);
			out = in.build();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;build;();;MapKey of Argument[-1];MapKey of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			ImmutableBiMap.Builder in = (ImmutableBiMap.Builder)ImmutableBiMap.builder().put(source(), null);
			out = in.build();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;build;();;MapValue of Argument[-1];MapValue of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			ImmutableSortedMap.Builder in = (ImmutableSortedMap.Builder)ImmutableSortedMap.builder().put(null, source());
			out = in.build();
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;build;();;MapValue of Argument[-1];MapValue of ReturnValue;value;manual"
			ImmutableMap out = null;
			ImmutableMap.Builder in = (ImmutableMap.Builder)ImmutableMap.builder().put(null, source());
			out = in.build();
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;build;();;MapValue of Argument[-1];MapValue of ReturnValue;value;manual"
			ImmutableBiMap out = null;
			ImmutableBiMap.Builder in = (ImmutableBiMap.Builder)ImmutableBiMap.builder().put(null, source());
			out = in.build();
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;orderEntriesByValue;(Comparator);;Argument[-1];ReturnValue;value;manual"
			ImmutableSortedMap.Builder out = null;
			ImmutableSortedMap.Builder in = (ImmutableSortedMap.Builder)source();
			out = in.orderEntriesByValue(null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;orderEntriesByValue;(Comparator);;Argument[-1];ReturnValue;value;manual"
			ImmutableMap.Builder out = null;
			ImmutableMap.Builder in = (ImmutableMap.Builder)source();
			out = in.orderEntriesByValue(null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;orderEntriesByValue;(Comparator);;Argument[-1];ReturnValue;value;manual"
			ImmutableBiMap.Builder out = null;
			ImmutableBiMap.Builder in = (ImmutableBiMap.Builder)source();
			out = in.orderEntriesByValue(null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;put;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableSortedMap.Builder out = null;
			Map.Entry in = (Map.Entry)newEntryWithMapKey(source());
			out.put(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;put;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableMap.Builder out = null;
			Map.Entry in = (Map.Entry)newEntryWithMapKey(source());
			out.put(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;put;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableBiMap.Builder out = null;
			Map.Entry in = (Map.Entry)newEntryWithMapKey(source());
			out.put(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;put;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];value;manual"
			ImmutableSortedMap.Builder out = null;
			Map.Entry in = (Map.Entry)newEntryWithMapValue(source());
			out.put(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;put;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];value;manual"
			ImmutableMap.Builder out = null;
			Map.Entry in = (Map.Entry)newEntryWithMapValue(source());
			out.put(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;put;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];value;manual"
			ImmutableBiMap.Builder out = null;
			Map.Entry in = (Map.Entry)newEntryWithMapValue(source());
			out.put(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableSortedMap.Builder out = null;
			Object in = (Object)source();
			out.put(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableMap.Builder out = null;
			Object in = (Object)source();
			out.put(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableBiMap.Builder out = null;
			Object in = (Object)source();
			out.put(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];value;manual"
			ImmutableSortedMap.Builder out = null;
			Object in = (Object)source();
			out.put(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];value;manual"
			ImmutableMap.Builder out = null;
			Object in = (Object)source();
			out.put(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];value;manual"
			ImmutableBiMap.Builder out = null;
			Object in = (Object)source();
			out.put(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;put;;;Argument[-1];ReturnValue;value;manual"
			ImmutableSortedMap.Builder out = null;
			ImmutableSortedMap.Builder in = (ImmutableSortedMap.Builder)source();
			out = in.put(null, null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;put;;;Argument[-1];ReturnValue;value;manual"
			ImmutableSortedMap.Builder out = null;
			ImmutableSortedMap.Builder in = (ImmutableSortedMap.Builder)source();
			out = in.put(null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;put;;;Argument[-1];ReturnValue;value;manual"
			ImmutableMap.Builder out = null;
			ImmutableMap.Builder in = (ImmutableMap.Builder)source();
			out = in.put(null, null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;put;;;Argument[-1];ReturnValue;value;manual"
			ImmutableMap.Builder out = null;
			ImmutableMap.Builder in = (ImmutableMap.Builder)source();
			out = in.put(null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;put;;;Argument[-1];ReturnValue;value;manual"
			ImmutableBiMap.Builder out = null;
			ImmutableBiMap.Builder in = (ImmutableBiMap.Builder)source();
			out = in.put(null, null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;put;;;Argument[-1];ReturnValue;value;manual"
			ImmutableBiMap.Builder out = null;
			ImmutableBiMap.Builder in = (ImmutableBiMap.Builder)source();
			out = in.put(null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;putAll;(Iterable);;MapKey of Element of Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableSortedMap.Builder out = null;
			Iterable in = (Iterable)List.of(newEntryWithMapKey(source()));
			out.putAll(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;putAll;(Iterable);;MapKey of Element of Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableMap.Builder out = null;
			Iterable in = (Iterable)List.of(newEntryWithMapKey(source()));
			out.putAll(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;putAll;(Iterable);;MapKey of Element of Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableBiMap.Builder out = null;
			Iterable in = (Iterable)List.of(newEntryWithMapKey(source()));
			out.putAll(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;putAll;(Iterable);;MapValue of Element of Argument[0];MapValue of Argument[-1];value;manual"
			ImmutableSortedMap.Builder out = null;
			Iterable in = (Iterable)List.of(newEntryWithMapValue(source()));
			out.putAll(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;putAll;(Iterable);;MapValue of Element of Argument[0];MapValue of Argument[-1];value;manual"
			ImmutableMap.Builder out = null;
			Iterable in = (Iterable)List.of(newEntryWithMapValue(source()));
			out.putAll(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;putAll;(Iterable);;MapValue of Element of Argument[0];MapValue of Argument[-1];value;manual"
			ImmutableBiMap.Builder out = null;
			Iterable in = (Iterable)List.of(newEntryWithMapValue(source()));
			out.putAll(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;putAll;(Map);;MapKey of Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableSortedMap.Builder out = null;
			Map in = (Map)Map.of(source(), null);
			out.putAll(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;putAll;(Map);;MapKey of Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableMap.Builder out = null;
			Map in = (Map)Map.of(source(), null);
			out.putAll(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;putAll;(Map);;MapKey of Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableBiMap.Builder out = null;
			Map in = (Map)Map.of(source(), null);
			out.putAll(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;putAll;(Map);;MapValue of Argument[0];MapValue of Argument[-1];value;manual"
			ImmutableSortedMap.Builder out = null;
			Map in = (Map)Map.of(null, source());
			out.putAll(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;putAll;(Map);;MapValue of Argument[0];MapValue of Argument[-1];value;manual"
			ImmutableMap.Builder out = null;
			Map in = (Map)Map.of(null, source());
			out.putAll(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;putAll;(Map);;MapValue of Argument[0];MapValue of Argument[-1];value;manual"
			ImmutableBiMap.Builder out = null;
			Map in = (Map)Map.of(null, source());
			out.putAll(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;putAll;;;Argument[-1];ReturnValue;value;manual"
			ImmutableSortedMap.Builder out = null;
			ImmutableSortedMap.Builder in = (ImmutableSortedMap.Builder)source();
			out = in.putAll((Map)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;putAll;;;Argument[-1];ReturnValue;value;manual"
			ImmutableSortedMap.Builder out = null;
			ImmutableSortedMap.Builder in = (ImmutableSortedMap.Builder)source();
			out = in.putAll((Iterable)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;putAll;;;Argument[-1];ReturnValue;value;manual"
			ImmutableMap.Builder out = null;
			ImmutableMap.Builder in = (ImmutableMap.Builder)source();
			out = in.putAll((Map)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;putAll;;;Argument[-1];ReturnValue;value;manual"
			ImmutableMap.Builder out = null;
			ImmutableMap.Builder in = (ImmutableMap.Builder)source();
			out = in.putAll((Iterable)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;putAll;;;Argument[-1];ReturnValue;value;manual"
			ImmutableBiMap.Builder out = null;
			ImmutableBiMap.Builder in = (ImmutableBiMap.Builder)source();
			out = in.putAll((Map)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap$Builder;true;putAll;;;Argument[-1];ReturnValue;value;manual"
			ImmutableBiMap.Builder out = null;
			ImmutableBiMap.Builder in = (ImmutableBiMap.Builder)source();
			out = in.putAll((Iterable)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;copyOf;(Iterable);;MapKey of Element of Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableMap out = null;
			Iterable in = (Iterable)List.of(newEntryWithMapKey(source()));
			out = ImmutableMap.copyOf(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;copyOf;(Iterable);;MapValue of Element of Argument[0];MapValue of ReturnValue;value;manual"
			ImmutableMap out = null;
			Iterable in = (Iterable)List.of(newEntryWithMapValue(source()));
			out = ImmutableMap.copyOf(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;copyOf;(Map);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableMap out = null;
			Map in = (Map)Map.of(source(), null);
			out = ImmutableMap.copyOf(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;copyOf;(Map);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			ImmutableMap out = null;
			Map in = (Map)Map.of(null, source());
			out = ImmutableMap.copyOf(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(in, null, null, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(in, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(in, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(in, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, in, null, null, null, null, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, in, null, null, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, in, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, in, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[2];MapKey of ReturnValue;value;manual"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, in, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[2];MapKey of ReturnValue;value;manual"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, in, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[2];MapKey of ReturnValue;value;manual"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, in, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[2];MapKey of ReturnValue;value;manual"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[3];MapValue of ReturnValue;value;manual"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, in, null, null, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[3];MapValue of ReturnValue;value;manual"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, in, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[3];MapValue of ReturnValue;value;manual"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, in, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[3];MapValue of ReturnValue;value;manual"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[4];MapKey of ReturnValue;value;manual"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, null, in, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[4];MapKey of ReturnValue;value;manual"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, null, in, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[4];MapKey of ReturnValue;value;manual"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, null, in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[5];MapValue of ReturnValue;value;manual"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, null, null, in, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[5];MapValue of ReturnValue;value;manual"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, null, null, in, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[5];MapValue of ReturnValue;value;manual"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, null, null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[6];MapKey of ReturnValue;value;manual"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, null, null, null, in, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[6];MapKey of ReturnValue;value;manual"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, null, null, null, in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[7];MapValue of ReturnValue;value;manual"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, null, null, null, null, in, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[7];MapValue of ReturnValue;value;manual"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, null, null, null, null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[8];MapKey of ReturnValue;value;manual"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, null, null, null, null, null, in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMap;true;of;;;Argument[9];MapValue of ReturnValue;value;manual"
			ImmutableMap out = null;
			Object in = (Object)source();
			out = ImmutableMap.of(null, null, null, null, null, null, null, null, null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;build;();;MapKey of Argument[-1];MapKey of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			ImmutableSetMultimap.Builder in = (ImmutableSetMultimap.Builder)ImmutableSetMultimap.builder().put(source(), null);
			out = in.build();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;build;();;MapKey of Argument[-1];MapKey of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			ImmutableMultimap.Builder in = (ImmutableMultimap.Builder)ImmutableMultimap.builder().put(source(), null);
			out = in.build();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;build;();;MapKey of Argument[-1];MapKey of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			ImmutableListMultimap.Builder in = (ImmutableListMultimap.Builder)ImmutableListMultimap.builder().put(source(), null);
			out = in.build();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;build;();;MapValue of Argument[-1];MapValue of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			ImmutableSetMultimap.Builder in = (ImmutableSetMultimap.Builder)ImmutableSetMultimap.builder().put(null, source());
			out = in.build();
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;build;();;MapValue of Argument[-1];MapValue of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			ImmutableMultimap.Builder in = (ImmutableMultimap.Builder)ImmutableMultimap.builder().put(null, source());
			out = in.build();
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;build;();;MapValue of Argument[-1];MapValue of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			ImmutableListMultimap.Builder in = (ImmutableListMultimap.Builder)ImmutableListMultimap.builder().put(null, source());
			out = in.build();
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;orderKeysBy;(Comparator);;Argument[-1];ReturnValue;value;manual"
			ImmutableSetMultimap.Builder out = null;
			ImmutableSetMultimap.Builder in = (ImmutableSetMultimap.Builder)source();
			out = in.orderKeysBy(null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;orderKeysBy;(Comparator);;Argument[-1];ReturnValue;value;manual"
			ImmutableMultimap.Builder out = null;
			ImmutableMultimap.Builder in = (ImmutableMultimap.Builder)source();
			out = in.orderKeysBy(null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;orderKeysBy;(Comparator);;Argument[-1];ReturnValue;value;manual"
			ImmutableListMultimap.Builder out = null;
			ImmutableListMultimap.Builder in = (ImmutableListMultimap.Builder)source();
			out = in.orderKeysBy(null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;orderValuesBy;(Comparator);;Argument[-1];ReturnValue;value;manual"
			ImmutableSetMultimap.Builder out = null;
			ImmutableSetMultimap.Builder in = (ImmutableSetMultimap.Builder)source();
			out = in.orderValuesBy(null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;orderValuesBy;(Comparator);;Argument[-1];ReturnValue;value;manual"
			ImmutableMultimap.Builder out = null;
			ImmutableMultimap.Builder in = (ImmutableMultimap.Builder)source();
			out = in.orderValuesBy(null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;orderValuesBy;(Comparator);;Argument[-1];ReturnValue;value;manual"
			ImmutableListMultimap.Builder out = null;
			ImmutableListMultimap.Builder in = (ImmutableListMultimap.Builder)source();
			out = in.orderValuesBy(null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableSetMultimap.Builder out = null;
			Map.Entry in = (Map.Entry)newEntryWithMapKey(source());
			out.put(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableMultimap.Builder out = null;
			Map.Entry in = (Map.Entry)newEntryWithMapKey(source());
			out.put(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableListMultimap.Builder out = null;
			Map.Entry in = (Map.Entry)newEntryWithMapKey(source());
			out.put(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];value;manual"
			ImmutableSetMultimap.Builder out = null;
			Map.Entry in = (Map.Entry)newEntryWithMapValue(source());
			out.put(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];value;manual"
			ImmutableMultimap.Builder out = null;
			Map.Entry in = (Map.Entry)newEntryWithMapValue(source());
			out.put(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];value;manual"
			ImmutableListMultimap.Builder out = null;
			Map.Entry in = (Map.Entry)newEntryWithMapValue(source());
			out.put(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableSetMultimap.Builder out = null;
			Object in = (Object)source();
			out.put(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableMultimap.Builder out = null;
			Object in = (Object)source();
			out.put(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableListMultimap.Builder out = null;
			Object in = (Object)source();
			out.put(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];value;manual"
			ImmutableSetMultimap.Builder out = null;
			Object in = (Object)source();
			out.put(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];value;manual"
			ImmutableMultimap.Builder out = null;
			Object in = (Object)source();
			out.put(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];value;manual"
			ImmutableListMultimap.Builder out = null;
			Object in = (Object)source();
			out.put(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;;;Argument[-1];ReturnValue;value;manual"
			ImmutableSetMultimap.Builder out = null;
			ImmutableSetMultimap.Builder in = (ImmutableSetMultimap.Builder)source();
			out = in.put(null, null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;;;Argument[-1];ReturnValue;value;manual"
			ImmutableSetMultimap.Builder out = null;
			ImmutableSetMultimap.Builder in = (ImmutableSetMultimap.Builder)source();
			out = in.put(null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;;;Argument[-1];ReturnValue;value;manual"
			ImmutableMultimap.Builder out = null;
			ImmutableMultimap.Builder in = (ImmutableMultimap.Builder)source();
			out = in.put(null, null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;;;Argument[-1];ReturnValue;value;manual"
			ImmutableMultimap.Builder out = null;
			ImmutableMultimap.Builder in = (ImmutableMultimap.Builder)source();
			out = in.put(null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;;;Argument[-1];ReturnValue;value;manual"
			ImmutableListMultimap.Builder out = null;
			ImmutableListMultimap.Builder in = (ImmutableListMultimap.Builder)source();
			out = in.put(null, null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;put;;;Argument[-1];ReturnValue;value;manual"
			ImmutableListMultimap.Builder out = null;
			ImmutableListMultimap.Builder in = (ImmutableListMultimap.Builder)source();
			out = in.put(null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Iterable);;MapKey of Element of Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableSetMultimap.Builder out = null;
			Iterable in = (Iterable)List.of(newEntryWithMapKey(source()));
			out.putAll(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Iterable);;MapKey of Element of Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableMultimap.Builder out = null;
			Iterable in = (Iterable)List.of(newEntryWithMapKey(source()));
			out.putAll(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Iterable);;MapKey of Element of Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableListMultimap.Builder out = null;
			Iterable in = (Iterable)List.of(newEntryWithMapKey(source()));
			out.putAll(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Iterable);;MapValue of Element of Argument[0];MapValue of Argument[-1];value;manual"
			ImmutableSetMultimap.Builder out = null;
			Iterable in = (Iterable)List.of(newEntryWithMapValue(source()));
			out.putAll(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Iterable);;MapValue of Element of Argument[0];MapValue of Argument[-1];value;manual"
			ImmutableMultimap.Builder out = null;
			Iterable in = (Iterable)List.of(newEntryWithMapValue(source()));
			out.putAll(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Iterable);;MapValue of Element of Argument[0];MapValue of Argument[-1];value;manual"
			ImmutableListMultimap.Builder out = null;
			Iterable in = (Iterable)List.of(newEntryWithMapValue(source()));
			out.putAll(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Multimap);;MapKey of Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableSetMultimap.Builder out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(source(), null);
			out.putAll(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Multimap);;MapKey of Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableMultimap.Builder out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(source(), null);
			out.putAll(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Multimap);;MapKey of Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableListMultimap.Builder out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(source(), null);
			out.putAll(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Multimap);;MapValue of Argument[0];MapValue of Argument[-1];value;manual"
			ImmutableSetMultimap.Builder out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(null, source());
			out.putAll(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Multimap);;MapValue of Argument[0];MapValue of Argument[-1];value;manual"
			ImmutableMultimap.Builder out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(null, source());
			out.putAll(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Multimap);;MapValue of Argument[0];MapValue of Argument[-1];value;manual"
			ImmutableListMultimap.Builder out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(null, source());
			out.putAll(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableSetMultimap.Builder out = null;
			Object in = (Object)source();
			out.putAll(in, (Iterable)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableMultimap.Builder out = null;
			Object in = (Object)source();
			out.putAll(in, (Iterable)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableListMultimap.Builder out = null;
			Object in = (Object)source();
			out.putAll(in, (Iterable)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value;manual"
			ImmutableSetMultimap.Builder out = null;
			Iterable in = (Iterable)List.of(source());
			out.putAll((Object)null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value;manual"
			ImmutableMultimap.Builder out = null;
			Iterable in = (Iterable)List.of(source());
			out.putAll((Object)null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value;manual"
			ImmutableListMultimap.Builder out = null;
			Iterable in = (Iterable)List.of(source());
			out.putAll((Object)null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Object,Object[]);;Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableSetMultimap.Builder out = null;
			Object in = (Object)source();
			out.putAll(in, (Object[])null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Object,Object[]);;Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableMultimap.Builder out = null;
			Object in = (Object)source();
			out.putAll(in, (Object[])null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Object,Object[]);;Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableListMultimap.Builder out = null;
			Object in = (Object)source();
			out.putAll(in, (Object[])null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Object,Object[]);;ArrayElement of Argument[1];MapValue of Argument[-1];value;manual"
			ImmutableSetMultimap.Builder out = null;
			Object[] in = (Object[])new Object[]{source()};
			out.putAll((Object)null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Object,Object[]);;ArrayElement of Argument[1];MapValue of Argument[-1];value;manual"
			ImmutableMultimap.Builder out = null;
			Object[] in = (Object[])new Object[]{source()};
			out.putAll((Object)null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;(Object,Object[]);;ArrayElement of Argument[1];MapValue of Argument[-1];value;manual"
			ImmutableListMultimap.Builder out = null;
			Object[] in = (Object[])new Object[]{source()};
			out.putAll((Object)null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;;;Argument[-1];ReturnValue;value;manual"
			ImmutableSetMultimap.Builder out = null;
			ImmutableSetMultimap.Builder in = (ImmutableSetMultimap.Builder)source();
			out = in.putAll((Object)null, (Object[])null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;;;Argument[-1];ReturnValue;value;manual"
			ImmutableSetMultimap.Builder out = null;
			ImmutableSetMultimap.Builder in = (ImmutableSetMultimap.Builder)source();
			out = in.putAll((Object)null, (Iterable)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;;;Argument[-1];ReturnValue;value;manual"
			ImmutableSetMultimap.Builder out = null;
			ImmutableSetMultimap.Builder in = (ImmutableSetMultimap.Builder)source();
			out = in.putAll((Multimap)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;;;Argument[-1];ReturnValue;value;manual"
			ImmutableSetMultimap.Builder out = null;
			ImmutableSetMultimap.Builder in = (ImmutableSetMultimap.Builder)source();
			out = in.putAll((Iterable)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;;;Argument[-1];ReturnValue;value;manual"
			ImmutableMultimap.Builder out = null;
			ImmutableMultimap.Builder in = (ImmutableMultimap.Builder)source();
			out = in.putAll((Object)null, (Object[])null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;;;Argument[-1];ReturnValue;value;manual"
			ImmutableMultimap.Builder out = null;
			ImmutableMultimap.Builder in = (ImmutableMultimap.Builder)source();
			out = in.putAll((Object)null, (Iterable)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;;;Argument[-1];ReturnValue;value;manual"
			ImmutableMultimap.Builder out = null;
			ImmutableMultimap.Builder in = (ImmutableMultimap.Builder)source();
			out = in.putAll((Multimap)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;;;Argument[-1];ReturnValue;value;manual"
			ImmutableMultimap.Builder out = null;
			ImmutableMultimap.Builder in = (ImmutableMultimap.Builder)source();
			out = in.putAll((Iterable)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;;;Argument[-1];ReturnValue;value;manual"
			ImmutableListMultimap.Builder out = null;
			ImmutableListMultimap.Builder in = (ImmutableListMultimap.Builder)source();
			out = in.putAll((Object)null, (Object[])null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;;;Argument[-1];ReturnValue;value;manual"
			ImmutableListMultimap.Builder out = null;
			ImmutableListMultimap.Builder in = (ImmutableListMultimap.Builder)source();
			out = in.putAll((Object)null, (Iterable)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;;;Argument[-1];ReturnValue;value;manual"
			ImmutableListMultimap.Builder out = null;
			ImmutableListMultimap.Builder in = (ImmutableListMultimap.Builder)source();
			out = in.putAll((Multimap)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap$Builder;true;putAll;;;Argument[-1];ReturnValue;value;manual"
			ImmutableListMultimap.Builder out = null;
			ImmutableListMultimap.Builder in = (ImmutableListMultimap.Builder)source();
			out = in.putAll((Iterable)null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;copyOf;(Iterable);;MapKey of Element of Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Iterable in = (Iterable)List.of(newEntryWithMapKey(source()));
			out = ImmutableMultimap.copyOf(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;copyOf;(Iterable);;MapValue of Element of Argument[0];MapValue of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Iterable in = (Iterable)List.of(newEntryWithMapValue(source()));
			out = ImmutableMultimap.copyOf(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;copyOf;(Multimap);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(source(), null);
			out = ImmutableMultimap.copyOf(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;copyOf;(Multimap);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(null, source());
			out = ImmutableMultimap.copyOf(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;inverse;();;MapKey of Argument[-1];MapValue of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			ImmutableSetMultimap in = (ImmutableSetMultimap)ImmutableSetMultimap.of(source(), null);
			out = in.inverse();
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;inverse;();;MapKey of Argument[-1];MapValue of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			ImmutableMultimap in = (ImmutableMultimap)ImmutableMultimap.of(source(), null);
			out = in.inverse();
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;inverse;();;MapKey of Argument[-1];MapValue of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			ImmutableListMultimap in = (ImmutableListMultimap)ImmutableListMultimap.of(source(), null);
			out = in.inverse();
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;inverse;();;MapValue of Argument[-1];MapKey of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			ImmutableSetMultimap in = (ImmutableSetMultimap)ImmutableSetMultimap.of(null, source());
			out = in.inverse();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;inverse;();;MapValue of Argument[-1];MapKey of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			ImmutableMultimap in = (ImmutableMultimap)ImmutableMultimap.of(null, source());
			out = in.inverse();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;inverse;();;MapValue of Argument[-1];MapKey of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			ImmutableListMultimap in = (ImmutableListMultimap)ImmutableListMultimap.of(null, source());
			out = in.inverse();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(in, null, null, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(in, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(in, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(in, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, in, null, null, null, null, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, in, null, null, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, in, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, in, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[2];MapKey of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, in, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[2];MapKey of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, in, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[2];MapKey of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, in, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[2];MapKey of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[3];MapValue of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, in, null, null, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[3];MapValue of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, in, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[3];MapValue of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, in, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[3];MapValue of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[4];MapKey of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, null, in, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[4];MapKey of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, null, in, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[4];MapKey of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, null, in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[5];MapValue of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, null, null, in, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[5];MapValue of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, null, null, in, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[5];MapValue of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, null, null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[6];MapKey of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, null, null, null, in, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[6];MapKey of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, null, null, null, in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[7];MapValue of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, null, null, null, null, in, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[7];MapValue of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, null, null, null, null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[8];MapKey of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, null, null, null, null, null, in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultimap;true;of;;;Argument[9];MapValue of ReturnValue;value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out = ImmutableMultimap.of(null, null, null, null, null, null, null, null, null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset$Builder;true;addCopies;(Object,int);;Argument[-1];ReturnValue;value;manual"
			ImmutableSortedMultiset.Builder out = null;
			ImmutableSortedMultiset.Builder in = (ImmutableSortedMultiset.Builder)source();
			out = in.addCopies(null, 0);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset$Builder;true;addCopies;(Object,int);;Argument[-1];ReturnValue;value;manual"
			ImmutableMultiset.Builder out = null;
			ImmutableMultiset.Builder in = (ImmutableMultiset.Builder)source();
			out = in.addCopies(null, 0);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset$Builder;true;addCopies;(Object,int);;Argument[0];Element of Argument[-1];value;manual"
			ImmutableSortedMultiset.Builder out = null;
			Object in = (Object)source();
			out.addCopies(in, 0);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset$Builder;true;addCopies;(Object,int);;Argument[0];Element of Argument[-1];value;manual"
			ImmutableMultiset.Builder out = null;
			Object in = (Object)source();
			out.addCopies(in, 0);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset$Builder;true;setCount;(Object,int);;Argument[0];Element of Argument[-1];value;manual"
			ImmutableSortedMultiset.Builder out = null;
			Object in = (Object)source();
			out.setCount(in, 0);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset$Builder;true;setCount;(Object,int);;Argument[0];Element of Argument[-1];value;manual"
			ImmutableMultiset.Builder out = null;
			Object in = (Object)source();
			out.setCount(in, 0);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;copyOf;(Iterable);;Element of Argument[0];Element of ReturnValue;value;manual"
			ImmutableMultiset out = null;
			Iterable in = (Iterable)List.of(source());
			out = ImmutableMultiset.copyOf(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;copyOf;(Iterator);;Element of Argument[0];Element of ReturnValue;value;manual"
			ImmutableMultiset out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = ImmutableMultiset.copyOf(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;copyOf;(Object[]);;ArrayElement of Argument[0];Element of ReturnValue;value;manual"
			ImmutableMultiset out = null;
			Object[] in = (Object[])new Object[]{source()};
			out = ImmutableMultiset.copyOf(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(null, null, null, null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(null, null, null, in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(null, null, null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(null, null, in, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(null, null, in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(null, null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(null, in, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(null, in, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(null, in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(in, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(in, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(in, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(in, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of((Object)null, in, (Object)null, (Object)null, (Object)null, (Object)null, (Object[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of((Object)null, (Object)null, in, (Object)null, (Object)null, (Object)null, (Object[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of((Object)null, (Object)null, (Object)null, in, (Object)null, (Object)null, (Object[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of((Object)null, (Object)null, (Object)null, (Object)null, in, (Object)null, (Object[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out = ImmutableMultiset.of((Object)null, (Object)null, (Object)null, (Object)null, (Object)null, in, (Object[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableMultiset;true;of;;;ArrayElement of Argument[6];Element of ReturnValue;value;manual"
			ImmutableMultiset out = null;
			Object[] in = (Object[])new Object[]{source()};
			out = ImmutableMultiset.of((Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;copyOf;(Collection);;Element of Argument[0];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			Collection in = (Collection)List.of(source());
			out = ImmutableSet.copyOf(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;copyOf;(Iterable);;Element of Argument[0];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			Iterable in = (Iterable)List.of(source());
			out = ImmutableSet.copyOf(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;copyOf;(Iterator);;Element of Argument[0];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = ImmutableSet.copyOf(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;copyOf;(Object[]);;ArrayElement of Argument[0];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			Object[] in = (Object[])new Object[]{source()};
			out = ImmutableSet.copyOf(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(null, null, null, null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(null, null, null, in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(null, null, null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(null, null, in, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(null, null, in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(null, null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(null, in, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(null, in, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(null, in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(in, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(in, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(in, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(in, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of((Object)null, in, (Object)null, (Object)null, (Object)null, (Object)null, (Object[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of((Object)null, (Object)null, in, (Object)null, (Object)null, (Object)null, (Object[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of((Object)null, (Object)null, (Object)null, in, (Object)null, (Object)null, (Object[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of((Object)null, (Object)null, (Object)null, (Object)null, in, (Object)null, (Object[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			Object in = (Object)source();
			out = ImmutableSet.of((Object)null, (Object)null, (Object)null, (Object)null, (Object)null, in, (Object[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSet;true;of;;;ArrayElement of Argument[6];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			Object[] in = (Object[])new Object[]{source()};
			out = ImmutableSet.of((Object)null, (Object)null, (Object)null, (Object)null, (Object)null, (Object)null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(in, null, null, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(in, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(in, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(in, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, in, null, null, null, null, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, in, null, null, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, in, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, in, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[2];MapKey of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, in, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[2];MapKey of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, in, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[2];MapKey of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, in, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[2];MapKey of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[3];MapValue of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, in, null, null, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[3];MapValue of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, in, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[3];MapValue of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, in, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[3];MapValue of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[4];MapKey of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, null, in, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[4];MapKey of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, null, in, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[4];MapKey of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, null, in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[5];MapValue of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, null, null, in, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[5];MapValue of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, null, null, in, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[5];MapValue of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, null, null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[6];MapKey of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, null, null, null, in, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[6];MapKey of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, null, null, null, in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[7];MapValue of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, null, null, null, null, in, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[7];MapValue of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, null, null, null, null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[8];MapKey of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, null, null, null, null, null, in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSetMultimap;true;of;;;Argument[9];MapValue of ReturnValue;value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out = ImmutableSetMultimap.of(null, null, null, null, null, null, null, null, null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;copyOf;(Iterable);;MapKey of Element of Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Iterable in = (Iterable)List.of(newEntryWithMapKey(source()));
			out = ImmutableSortedMap.copyOf(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;copyOf;(Iterable);;MapValue of Element of Argument[0];MapValue of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Iterable in = (Iterable)List.of(newEntryWithMapValue(source()));
			out = ImmutableSortedMap.copyOf(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;copyOf;(Iterable,Comparator);;MapKey of Element of Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Iterable in = (Iterable)List.of(newEntryWithMapKey(source()));
			out = ImmutableSortedMap.copyOf(in, (Comparator)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;copyOf;(Iterable,Comparator);;MapValue of Element of Argument[0];MapValue of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Iterable in = (Iterable)List.of(newEntryWithMapValue(source()));
			out = ImmutableSortedMap.copyOf(in, (Comparator)null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;copyOf;(Map);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Map in = (Map)Map.of(source(), null);
			out = ImmutableSortedMap.copyOf(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;copyOf;(Map);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Map in = (Map)Map.of(null, source());
			out = ImmutableSortedMap.copyOf(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;copyOf;(Map,Comparator);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Map in = (Map)Map.of(source(), null);
			out = ImmutableSortedMap.copyOf(in, (Comparator)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;copyOf;(Map,Comparator);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Map in = (Map)Map.of(null, source());
			out = ImmutableSortedMap.copyOf(in, (Comparator)null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;copyOfSorted;(SortedMap);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			SortedMap in = (SortedMap)ImmutableSortedMap.of((Comparable)source(), null);
			out = ImmutableSortedMap.copyOfSorted(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;copyOfSorted;(SortedMap);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			SortedMap in = (SortedMap)ImmutableSortedMap.of((Comparable)null, source());
			out = ImmutableSortedMap.copyOfSorted(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;of;;;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMap.of(in, null, null, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;of;;;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMap.of(in, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;of;;;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMap.of(in, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;of;;;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMap.of(in, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;of;;;Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMap.of(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;of;;;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMap.of(null, in, null, null, null, null, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;of;;;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMap.of(null, in, null, null, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;of;;;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMap.of(null, in, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;of;;;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMap.of(null, in, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;of;;;Argument[1];MapValue of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMap.of(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;of;;;Argument[2];MapKey of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMap.of(null, null, in, null, null, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;of;;;Argument[2];MapKey of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMap.of(null, null, in, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;of;;;Argument[2];MapKey of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMap.of(null, null, in, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;of;;;Argument[2];MapKey of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMap.of(null, null, in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;of;;;Argument[3];MapValue of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMap.of(null, null, null, in, null, null, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;of;;;Argument[3];MapValue of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMap.of(null, null, null, in, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;of;;;Argument[3];MapValue of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMap.of(null, null, null, in, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;of;;;Argument[3];MapValue of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMap.of(null, null, null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;of;;;Argument[4];MapKey of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMap.of(null, null, null, null, in, null, null, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;of;;;Argument[4];MapKey of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMap.of(null, null, null, null, in, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;of;;;Argument[4];MapKey of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMap.of(null, null, null, null, in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;of;;;Argument[5];MapValue of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMap.of(null, null, null, null, null, in, null, null, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;of;;;Argument[5];MapValue of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMap.of(null, null, null, null, null, in, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;of;;;Argument[5];MapValue of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMap.of(null, null, null, null, null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;of;;;Argument[6];MapKey of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMap.of(null, null, null, null, null, null, in, null, null, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;of;;;Argument[6];MapKey of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMap.of(null, null, null, null, null, null, in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;of;;;Argument[7];MapValue of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMap.of(null, null, null, null, null, null, null, in, null, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;of;;;Argument[7];MapValue of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMap.of(null, null, null, null, null, null, null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;of;;;Argument[8];MapKey of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMap.of(null, null, null, null, null, null, null, null, in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMap;true;of;;;Argument[9];MapValue of ReturnValue;value;manual"
			ImmutableSortedMap out = null;
			Object in = (Object)source();
			out = ImmutableSortedMap.of(null, null, null, null, null, null, null, null, null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;copyOf;(Comparable[]);;ArrayElement of Argument[0];Element of ReturnValue;value;manual"
			ImmutableSortedMultiset out = null;
			Comparable[] in = (Comparable[])new Comparable[]{(Comparable)source()};
			out = ImmutableSortedMultiset.copyOf(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;copyOf;(Comparator,Iterable);;Element of Argument[1];Element of ReturnValue;value;manual"
			ImmutableSortedMultiset out = null;
			Iterable in = (Iterable)List.of(source());
			out = ImmutableSortedMultiset.copyOf((Comparator)null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;copyOf;(Comparator,Iterator);;Element of Argument[1];Element of ReturnValue;value;manual"
			ImmutableSortedMultiset out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = ImmutableSortedMultiset.copyOf((Comparator)null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;copyOf;(Iterable);;Element of Argument[0];Element of ReturnValue;value;manual"
			ImmutableSortedMultiset out = null;
			Iterable in = (Iterable)List.of(source());
			out = ImmutableSortedMultiset.copyOf(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;copyOf;(Iterator);;Element of Argument[0];Element of ReturnValue;value;manual"
			ImmutableSortedMultiset out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = ImmutableSortedMultiset.copyOf(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;copyOfSorted;(SortedMultiset);;Element of Argument[0];Element of ReturnValue;value;manual"
			ImmutableSortedMultiset out = null;
			SortedMultiset in = (SortedMultiset)ImmutableSortedMultiset.of((Comparable)source());
			out = ImmutableSortedMultiset.copyOfSorted(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(null, null, null, null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(null, null, null, in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(null, null, null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(null, null, in, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(null, null, in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(null, null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(null, in, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(null, in, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(null, in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(in, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(in, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(in, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(in, (Comparable)null, (Comparable)null, (Comparable)null, (Comparable)null, (Comparable)null, (Comparable[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of((Comparable)null, in, (Comparable)null, (Comparable)null, (Comparable)null, (Comparable)null, (Comparable[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of((Comparable)null, (Comparable)null, in, (Comparable)null, (Comparable)null, (Comparable)null, (Comparable[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of((Comparable)null, (Comparable)null, (Comparable)null, in, (Comparable)null, (Comparable)null, (Comparable[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of((Comparable)null, (Comparable)null, (Comparable)null, (Comparable)null, in, (Comparable)null, (Comparable[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedMultiset out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedMultiset.of((Comparable)null, (Comparable)null, (Comparable)null, (Comparable)null, (Comparable)null, in, (Comparable[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedMultiset;true;of;;;ArrayElement of Argument[6];Element of ReturnValue;value;manual"
			ImmutableSortedMultiset out = null;
			Comparable[] in = (Comparable[])new Comparable[]{(Comparable)source()};
			out = ImmutableSortedMultiset.of((Comparable)null, (Comparable)null, (Comparable)null, (Comparable)null, (Comparable)null, (Comparable)null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;copyOf;(Collection);;Element of Argument[0];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			Collection in = (Collection)List.of(source());
			out = ImmutableSortedSet.copyOf(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;copyOf;(Comparable[]);;ArrayElement of Argument[0];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			Comparable[] in = (Comparable[])new Comparable[]{(Comparable)source()};
			out = ImmutableSortedSet.copyOf(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;copyOf;(Comparator,Collection);;Element of Argument[1];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			Collection in = (Collection)List.of(source());
			out = ImmutableSortedSet.copyOf((Comparator)null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;copyOf;(Comparator,Iterable);;Element of Argument[1];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			Iterable in = (Iterable)List.of(source());
			out = ImmutableSortedSet.copyOf((Comparator)null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;copyOf;(Comparator,Iterator);;Element of Argument[1];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = ImmutableSortedSet.copyOf((Comparator)null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;copyOf;(Iterable);;Element of Argument[0];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			Iterable in = (Iterable)List.of(source());
			out = ImmutableSortedSet.copyOf(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;copyOf;(Iterator);;Element of Argument[0];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = ImmutableSortedSet.copyOf(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;copyOfSorted;(SortedSet);;Element of Argument[0];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			SortedSet in = (SortedSet)ImmutableSortedSet.of((Comparable)source());
			out = ImmutableSortedSet.copyOfSorted(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(null, null, null, null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(null, null, null, in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(null, null, null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(null, null, in, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(null, null, in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(null, null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(null, in, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(null, in, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(null, in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(in, null, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(in, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(in, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(in, (Comparable)null, (Comparable)null, (Comparable)null, (Comparable)null, (Comparable)null, (Comparable[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of((Comparable)null, in, (Comparable)null, (Comparable)null, (Comparable)null, (Comparable)null, (Comparable[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of((Comparable)null, (Comparable)null, in, (Comparable)null, (Comparable)null, (Comparable)null, (Comparable[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of((Comparable)null, (Comparable)null, (Comparable)null, in, (Comparable)null, (Comparable)null, (Comparable[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of((Comparable)null, (Comparable)null, (Comparable)null, (Comparable)null, in, (Comparable)null, (Comparable[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;of;;;Argument[0..5];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			Comparable in = (Comparable)source();
			out = ImmutableSortedSet.of((Comparable)null, (Comparable)null, (Comparable)null, (Comparable)null, (Comparable)null, in, (Comparable[])null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableSortedSet;true;of;;;ArrayElement of Argument[6];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			Comparable[] in = (Comparable[])new Comparable[]{(Comparable)source()};
			out = ImmutableSortedSet.of((Comparable)null, (Comparable)null, (Comparable)null, (Comparable)null, (Comparable)null, (Comparable)null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable$Builder;true;build;();;MapValue of Argument[-1];MapValue of ReturnValue;value;manual"
			ImmutableTable out = null;
			ImmutableTable.Builder in = (ImmutableTable.Builder)ImmutableTable.builder().put(null, null, source());
			out = in.build();
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable$Builder;true;build;();;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];SyntheticField[com.google.common.collect.Table.columnKey] of ReturnValue;value;manual"
			ImmutableTable out = null;
			ImmutableTable.Builder in = (ImmutableTable.Builder)ImmutableTable.builder().put(null, source(), null);
			out = in.build();
			sink(getTable_columnKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable$Builder;true;build;();;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];SyntheticField[com.google.common.collect.Table.rowKey] of ReturnValue;value;manual"
			ImmutableTable out = null;
			ImmutableTable.Builder in = (ImmutableTable.Builder)ImmutableTable.builder().put(source(), null, null);
			out = in.build();
			sink(getTable_rowKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable$Builder;true;orderColumnsBy;(Comparator);;Argument[-1];ReturnValue;value;manual"
			ImmutableTable.Builder out = null;
			ImmutableTable.Builder in = (ImmutableTable.Builder)source();
			out = in.orderColumnsBy(null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable$Builder;true;orderRowsBy;(Comparator);;Argument[-1];ReturnValue;value;manual"
			ImmutableTable.Builder out = null;
			ImmutableTable.Builder in = (ImmutableTable.Builder)source();
			out = in.orderRowsBy(null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable$Builder;true;put;(Cell);;Argument[-1];ReturnValue;value;manual"
			ImmutableTable.Builder out = null;
			ImmutableTable.Builder in = (ImmutableTable.Builder)source();
			out = in.put(null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable$Builder;true;put;(Cell);;MapValue of Argument[0];MapValue of Argument[-1];value;manual"
			ImmutableTable.Builder out = null;
			Table.Cell in = (Table.Cell)newTableCell(null, null, source());
			out.put(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable$Builder;true;put;(Cell);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[0];SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];value;manual"
			ImmutableTable.Builder out = null;
			Table.Cell in = (Table.Cell)newTableCell(null, source(), null);
			out.put(in);
			sink(getTable_columnKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable$Builder;true;put;(Cell);;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];value;manual"
			ImmutableTable.Builder out = null;
			Table.Cell in = (Table.Cell)newTableCell(source(), null, null);
			out.put(in);
			sink(getTable_rowKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable$Builder;true;put;(Object,Object,Object);;Argument[-1];ReturnValue;value;manual"
			ImmutableTable.Builder out = null;
			ImmutableTable.Builder in = (ImmutableTable.Builder)source();
			out = in.put(null, null, null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable$Builder;true;put;(Object,Object,Object);;Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];value;manual"
			ImmutableTable.Builder out = null;
			Object in = (Object)source();
			out.put(in, null, null);
			sink(getTable_rowKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable$Builder;true;put;(Object,Object,Object);;Argument[1];SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];value;manual"
			ImmutableTable.Builder out = null;
			Object in = (Object)source();
			out.put(null, in, null);
			sink(getTable_columnKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable$Builder;true;put;(Object,Object,Object);;Argument[2];MapValue of Argument[-1];value;manual"
			ImmutableTable.Builder out = null;
			Object in = (Object)source();
			out.put(null, null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable$Builder;true;putAll;(Table);;Argument[-1];ReturnValue;value;manual"
			ImmutableTable.Builder out = null;
			ImmutableTable.Builder in = (ImmutableTable.Builder)source();
			out = in.putAll(null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable$Builder;true;putAll;(Table);;MapValue of Argument[0];MapValue of Argument[-1];value;manual"
			ImmutableTable.Builder out = null;
			Table in = (Table)ImmutableTable.of(null, null, source());
			out.putAll(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable$Builder;true;putAll;(Table);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[0];SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];value;manual"
			ImmutableTable.Builder out = null;
			Table in = (Table)ImmutableTable.of(null, source(), null);
			out.putAll(in);
			sink(getTable_columnKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable$Builder;true;putAll;(Table);;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];value;manual"
			ImmutableTable.Builder out = null;
			Table in = (Table)ImmutableTable.of(source(), null, null);
			out.putAll(in);
			sink(getTable_rowKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable;true;copyOf;(Table);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			ImmutableTable out = null;
			Table in = (Table)ImmutableTable.of(null, null, source());
			out = ImmutableTable.copyOf(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable;true;copyOf;(Table);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[0];SyntheticField[com.google.common.collect.Table.columnKey] of ReturnValue;value;manual"
			ImmutableTable out = null;
			Table in = (Table)ImmutableTable.of(null, source(), null);
			out = ImmutableTable.copyOf(in);
			sink(getTable_columnKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable;true;copyOf;(Table);;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of ReturnValue;value;manual"
			ImmutableTable out = null;
			Table in = (Table)ImmutableTable.of(source(), null, null);
			out = ImmutableTable.copyOf(in);
			sink(getTable_rowKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable;true;of;(Object,Object,Object);;Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of ReturnValue;value;manual"
			ImmutableTable out = null;
			Object in = (Object)source();
			out = ImmutableTable.of(in, null, null);
			sink(getTable_rowKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable;true;of;(Object,Object,Object);;Argument[1];SyntheticField[com.google.common.collect.Table.columnKey] of ReturnValue;value;manual"
			ImmutableTable out = null;
			Object in = (Object)source();
			out = ImmutableTable.of(null, in, null);
			sink(getTable_columnKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ImmutableTable;true;of;(Object,Object,Object);;Argument[2];MapValue of ReturnValue;value;manual"
			ImmutableTable out = null;
			Object in = (Object)source();
			out = ImmutableTable.of(null, null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;addAll;(Collection,Iterable);;Element of Argument[1];Element of Argument[0];value;manual"
			Collection out = null;
			Iterable in = (Iterable)List.of(source());
			Iterables.addAll(out, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;concat;(Iterable);;Element of Element of Argument[0];Element of ReturnValue;value;manual"
			Iterable out = null;
			Iterable in = (Iterable)List.of(List.of(source()));
			out = Iterables.concat(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;concat;(Iterable,Iterable);;Element of Argument[0..1];Element of ReturnValue;value;manual"
			Iterable out = null;
			Iterable in = (Iterable)List.of(source());
			out = Iterables.concat(null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;concat;(Iterable,Iterable);;Element of Argument[0..1];Element of ReturnValue;value;manual"
			Iterable out = null;
			Iterable in = (Iterable)List.of(source());
			out = Iterables.concat(in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;concat;(Iterable,Iterable,Iterable);;Element of Argument[0..2];Element of ReturnValue;value;manual"
			Iterable out = null;
			Iterable in = (Iterable)List.of(source());
			out = Iterables.concat(null, null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;concat;(Iterable,Iterable,Iterable);;Element of Argument[0..2];Element of ReturnValue;value;manual"
			Iterable out = null;
			Iterable in = (Iterable)List.of(source());
			out = Iterables.concat(null, in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;concat;(Iterable,Iterable,Iterable);;Element of Argument[0..2];Element of ReturnValue;value;manual"
			Iterable out = null;
			Iterable in = (Iterable)List.of(source());
			out = Iterables.concat(in, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;concat;(Iterable,Iterable,Iterable,Iterable);;Element of Argument[0..3];Element of ReturnValue;value;manual"
			Iterable out = null;
			Iterable in = (Iterable)List.of(source());
			out = Iterables.concat(null, null, null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;concat;(Iterable,Iterable,Iterable,Iterable);;Element of Argument[0..3];Element of ReturnValue;value;manual"
			Iterable out = null;
			Iterable in = (Iterable)List.of(source());
			out = Iterables.concat(null, null, in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;concat;(Iterable,Iterable,Iterable,Iterable);;Element of Argument[0..3];Element of ReturnValue;value;manual"
			Iterable out = null;
			Iterable in = (Iterable)List.of(source());
			out = Iterables.concat(null, in, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;concat;(Iterable,Iterable,Iterable,Iterable);;Element of Argument[0..3];Element of ReturnValue;value;manual"
			Iterable out = null;
			Iterable in = (Iterable)List.of(source());
			out = Iterables.concat(in, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;concat;(Iterable[]);;Element of ArrayElement of Argument[0];Element of ReturnValue;value;manual"
			Iterable out = null;
			Iterable[] in = (Iterable[])new Iterable[]{(Iterable)List.of(source())};
			out = Iterables.concat(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;consumingIterable;(Iterable);;Element of Argument[0];Element of ReturnValue;value;manual"
			Iterable out = null;
			Iterable in = (Iterable)List.of(source());
			out = Iterables.consumingIterable(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;cycle;(Iterable);;Element of Argument[0];Element of ReturnValue;value;manual"
			Iterable out = null;
			Iterable in = (Iterable)List.of(source());
			out = Iterables.cycle(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;cycle;(Object[]);;ArrayElement of Argument[0];Element of ReturnValue;value;manual"
			Iterable out = null;
			Object[] in = (Object[])new Object[]{source()};
			out = Iterables.cycle(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;filter;(Iterable,Class);;Element of Argument[0];Element of ReturnValue;value;manual"
			Iterable out = null;
			Iterable in = (Iterable)List.of(source());
			out = Iterables.filter(in, (Class)null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;filter;(Iterable,Predicate);;Element of Argument[0];Element of ReturnValue;value;manual"
			Iterable out = null;
			Iterable in = (Iterable)List.of(source());
			out = Iterables.filter(in, (Predicate)null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;find;(Iterable,Predicate);;Element of Argument[0];ReturnValue;value;manual"
			Object out = null;
			Iterable in = (Iterable)List.of(source());
			out = Iterables.find(in, null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;find;(Iterable,Predicate,Object);;Argument[2];ReturnValue;value;manual"
			Object out = null;
			Object in = (Object)source();
			out = Iterables.find(null, null, in);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;find;(Iterable,Predicate,Object);;Element of Argument[0];ReturnValue;value;manual"
			Object out = null;
			Iterable in = (Iterable)List.of(source());
			out = Iterables.find(in, null, null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;get;(Iterable,int);;Element of Argument[0];ReturnValue;value;manual"
			Object out = null;
			Iterable in = (Iterable)List.of(source());
			out = Iterables.get(in, 0);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;get;(Iterable,int,Object);;Argument[2];ReturnValue;value;manual"
			Object out = null;
			Object in = (Object)source();
			out = Iterables.get(null, 0, in);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;get;(Iterable,int,Object);;Element of Argument[0];ReturnValue;value;manual"
			Object out = null;
			Iterable in = (Iterable)List.of(source());
			out = Iterables.get(in, 0, null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;getLast;(Iterable);;Element of Argument[0];ReturnValue;value;manual"
			Object out = null;
			Iterable in = (Iterable)List.of(source());
			out = Iterables.getLast(in);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;getLast;(Iterable,Object);;Argument[1];ReturnValue;value;manual"
			Object out = null;
			Object in = (Object)source();
			out = Iterables.getLast(null, in);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;getLast;(Iterable,Object);;Element of Argument[0];ReturnValue;value;manual"
			Object out = null;
			Iterable in = (Iterable)List.of(source());
			out = Iterables.getLast(in, null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;getOnlyElement;(Iterable);;Element of Argument[0];ReturnValue;value;manual"
			Object out = null;
			Iterable in = (Iterable)List.of(source());
			out = Iterables.getOnlyElement(in);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;getOnlyElement;(Iterable,Object);;Argument[1];ReturnValue;value;manual"
			Object out = null;
			Object in = (Object)source();
			out = Iterables.getOnlyElement(null, in);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;getOnlyElement;(Iterable,Object);;Element of Argument[0];ReturnValue;value;manual"
			Object out = null;
			Iterable in = (Iterable)List.of(source());
			out = Iterables.getOnlyElement(in, null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;limit;(Iterable,int);;Element of Argument[0];Element of ReturnValue;value;manual"
			Iterable out = null;
			Iterable in = (Iterable)List.of(source());
			out = Iterables.limit(in, 0);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;mergeSorted;(Iterable,Comparator);;Element of Element of Argument[0];Element of ReturnValue;value;manual"
			Iterable out = null;
			Iterable in = (Iterable)List.of(List.of(source()));
			out = Iterables.mergeSorted(in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;paddedPartition;(Iterable,int);;Element of Argument[0];Element of Element of ReturnValue;value;manual"
			Iterable<List> out = null;
			Iterable in = (Iterable)List.of(source());
			out = Iterables.paddedPartition(in, 0);
			sink(getElement(getElement(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;partition;(Iterable,int);;Element of Argument[0];Element of Element of ReturnValue;value;manual"
			Iterable<List> out = null;
			Iterable in = (Iterable)List.of(source());
			out = Iterables.partition(in, 0);
			sink(getElement(getElement(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;skip;(Iterable,int);;Element of Argument[0];Element of ReturnValue;value;manual"
			Iterable out = null;
			Iterable in = (Iterable)List.of(source());
			out = Iterables.skip(in, 0);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;toArray;(Iterable,Class);;Element of Argument[0];ArrayElement of ReturnValue;value;manual"
			Object[] out = null;
			Iterable in = (Iterable)List.of(source());
			out = Iterables.toArray(in, (Class)null);
			sink(getArrayElement(out)); // $ hasValueFlow
		}
		// {
		// 	// "com.google.common.collect;Iterables;false;toString;(Iterable);;Element of Argument[0];ReturnValue;taint;manual"
		// 	String out = null;
		// 	Iterable in = (Iterable)List.of(source());
		// 	out = Iterables.toString(in);
		// 	sink(out); // $ hasTaintFlow
		// }
		{
			// "com.google.common.collect;Iterables;false;tryFind;(Iterable,Predicate);;Element of Argument[0];Element of ReturnValue;value;manual"
			Optional out = null;
			Iterable in = (Iterable)List.of(source());
			out = Iterables.tryFind(in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;unmodifiableIterable;(ImmutableCollection);;Element of Argument[0];Element of ReturnValue;value;manual"
			Iterable out = null;
			ImmutableCollection in = (ImmutableCollection)ImmutableList.of(source());
			out = Iterables.unmodifiableIterable(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterables;false;unmodifiableIterable;(Iterable);;Element of Argument[0];Element of ReturnValue;value;manual"
			Iterable out = null;
			Iterable in = (Iterable)List.of(source());
			out = Iterables.unmodifiableIterable(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;addAll;(Collection,Iterator);;Element of Argument[1];Element of Argument[0];value;manual"
			Collection out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			Iterators.addAll(out, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;asEnumeration;(Iterator);;Element of Argument[0];Element of ReturnValue;value;manual"
			Enumeration out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Iterators.asEnumeration(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;concat;(Iterator);;Element of Element of Argument[0];Element of ReturnValue;value;manual"
			Iterator out = null;
			Iterator in = (Iterator)List.of(List.of(source()).iterator()).iterator();
			out = Iterators.concat(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;concat;(Iterator,Iterator);;Element of Argument[0..1];Element of ReturnValue;value;manual"
			Iterator out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Iterators.concat(null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;concat;(Iterator,Iterator);;Element of Argument[0..1];Element of ReturnValue;value;manual"
			Iterator out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Iterators.concat(in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;concat;(Iterator,Iterator,Iterator);;Element of Argument[0..2];Element of ReturnValue;value;manual"
			Iterator out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Iterators.concat(null, null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;concat;(Iterator,Iterator,Iterator);;Element of Argument[0..2];Element of ReturnValue;value;manual"
			Iterator out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Iterators.concat(null, in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;concat;(Iterator,Iterator,Iterator);;Element of Argument[0..2];Element of ReturnValue;value;manual"
			Iterator out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Iterators.concat(in, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;concat;(Iterator,Iterator,Iterator,Iterator);;Element of Argument[0..3];Element of ReturnValue;value;manual"
			Iterator out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Iterators.concat(null, null, null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;concat;(Iterator,Iterator,Iterator,Iterator);;Element of Argument[0..3];Element of ReturnValue;value;manual"
			Iterator out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Iterators.concat(null, null, in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;concat;(Iterator,Iterator,Iterator,Iterator);;Element of Argument[0..3];Element of ReturnValue;value;manual"
			Iterator out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Iterators.concat(null, in, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;concat;(Iterator,Iterator,Iterator,Iterator);;Element of Argument[0..3];Element of ReturnValue;value;manual"
			Iterator out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Iterators.concat(in, null, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;concat;(Iterator[]);;Element of ArrayElement of Argument[0];Element of ReturnValue;value;manual"
			Iterator out = null;
			Iterator[] in = (Iterator[])new Iterator[]{(Iterator)List.of(source()).iterator()};
			out = Iterators.concat(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;consumingIterator;(Iterator);;Element of Argument[0];Element of ReturnValue;value;manual"
			Iterator out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Iterators.consumingIterator(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;cycle;(Iterable);;Element of Argument[0];Element of ReturnValue;value;manual"
			Iterator out = null;
			Iterable in = (Iterable)List.of(source());
			out = Iterators.cycle(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;cycle;(Object[]);;ArrayElement of Argument[0];Element of ReturnValue;value;manual"
			Iterator out = null;
			Object[] in = (Object[])new Object[]{source()};
			out = Iterators.cycle(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;filter;(Iterator,Class);;Element of Argument[0];Element of ReturnValue;value;manual"
			UnmodifiableIterator out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Iterators.filter(in, (Class)null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;filter;(Iterator,Predicate);;Element of Argument[0];Element of ReturnValue;value;manual"
			UnmodifiableIterator out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Iterators.filter(in, (Predicate)null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;find;(Iterator,Predicate);;Element of Argument[0];ReturnValue;value;manual"
			Object out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Iterators.find(in, null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;find;(Iterator,Predicate,Object);;Argument[2];ReturnValue;value;manual"
			Object out = null;
			Object in = (Object)source();
			out = Iterators.find(null, null, in);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;find;(Iterator,Predicate,Object);;Element of Argument[0];ReturnValue;value;manual"
			Object out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Iterators.find(in, null, null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;forArray;(Object[]);;ArrayElement of Argument[0];Element of ReturnValue;value;manual"
			UnmodifiableIterator out = null;
			Object[] in = (Object[])new Object[]{source()};
			out = Iterators.forArray(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;forEnumeration;(Enumeration);;Element of Argument[0];Element of ReturnValue;value;manual"
			UnmodifiableIterator out = null;
			Enumeration in = (Enumeration)newWithElementDefault(source());
			out = Iterators.forEnumeration(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;get;(Iterator,int);;Element of Argument[0];ReturnValue;value;manual"
			Object out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Iterators.get(in, 0);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;get;(Iterator,int,Object);;Argument[2];ReturnValue;value;manual"
			Object out = null;
			Object in = (Object)source();
			out = Iterators.get(null, 0, in);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;get;(Iterator,int,Object);;Element of Argument[0];ReturnValue;value;manual"
			Object out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Iterators.get(in, 0, null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;getLast;(Iterator);;Element of Argument[0];ReturnValue;value;manual"
			Object out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Iterators.getLast(in);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;getLast;(Iterator,Object);;Argument[1];ReturnValue;value;manual"
			Object out = null;
			Object in = (Object)source();
			out = Iterators.getLast(null, in);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;getLast;(Iterator,Object);;Element of Argument[0];ReturnValue;value;manual"
			Object out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Iterators.getLast(in, null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;getNext;(Iterator,Object);;Argument[1];ReturnValue;value;manual"
			Object out = null;
			Object in = (Object)source();
			out = Iterators.getNext(null, in);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;getNext;(Iterator,Object);;Element of Argument[0];ReturnValue;value;manual"
			Object out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Iterators.getNext(in, null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;getOnlyElement;(Iterator);;Element of Argument[0];ReturnValue;value;manual"
			Object out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Iterators.getOnlyElement(in);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;getOnlyElement;(Iterator,Object);;Argument[1];ReturnValue;value;manual"
			Object out = null;
			Object in = (Object)source();
			out = Iterators.getOnlyElement(null, in);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;getOnlyElement;(Iterator,Object);;Element of Argument[0];ReturnValue;value;manual"
			Object out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Iterators.getOnlyElement(in, null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;limit;(Iterator,int);;Element of Argument[0];Element of ReturnValue;value;manual"
			Iterator out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Iterators.limit(in, 0);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;mergeSorted;(Iterable,Comparator);;Element of Element of Argument[0];Element of ReturnValue;value;manual"
			UnmodifiableIterator out = null;
			Iterable in = (Iterable)List.of(List.of(source()).iterator());
			out = Iterators.mergeSorted(in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;paddedPartition;(Iterator,int);;Element of Argument[0];Element of Element of ReturnValue;value;manual"
			UnmodifiableIterator<List> out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Iterators.paddedPartition(in, 0);
			sink(getElement(getElement(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;partition;(Iterator,int);;Element of Argument[0];Element of Element of ReturnValue;value;manual"
			UnmodifiableIterator<List> out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Iterators.partition(in, 0);
			sink(getElement(getElement(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;peekingIterator;(Iterator);;Element of Argument[0];Element of ReturnValue;value;manual"
			PeekingIterator out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Iterators.peekingIterator(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;peekingIterator;(PeekingIterator);;Element of Argument[0];Element of ReturnValue;value;manual"
			PeekingIterator out = null;
			PeekingIterator in = (PeekingIterator)Iterators.peekingIterator(List.of(source()).iterator());
			out = Iterators.peekingIterator(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;singletonIterator;(Object);;Argument[0];Element of ReturnValue;value;manual"
			UnmodifiableIterator out = null;
			Object in = (Object)source();
			out = Iterators.singletonIterator(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;toArray;(Iterator,Class);;Element of Argument[0];ArrayElement of ReturnValue;value;manual"
			Object[] out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Iterators.toArray(in, null);
			sink(getArrayElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;tryFind;(Iterator,Predicate);;Element of Argument[0];Element of ReturnValue;value;manual"
			Optional out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Iterators.tryFind(in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;unmodifiableIterator;(Iterator);;Element of Argument[0];Element of ReturnValue;value;manual"
			UnmodifiableIterator out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Iterators.unmodifiableIterator(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Iterators;false;unmodifiableIterator;(UnmodifiableIterator);;Element of Argument[0];Element of ReturnValue;value;manual"
			UnmodifiableIterator out = null;
			UnmodifiableIterator in = (UnmodifiableIterator)Iterators.unmodifiableIterator(List.of(source()).iterator());
			out = Iterators.unmodifiableIterator(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;LinkedHashMultimap;true;create;(Multimap);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			LinkedHashMultimap out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(source(), null);
			out = LinkedHashMultimap.create(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;LinkedHashMultimap;true;create;(Multimap);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			LinkedHashMultimap out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(null, source());
			out = LinkedHashMultimap.create(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;LinkedHashMultiset;true;create;(Iterable);;Element of Argument[0];Element of ReturnValue;value;manual"
			LinkedHashMultiset out = null;
			Iterable in = (Iterable)List.of(source());
			out = LinkedHashMultiset.create(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;LinkedListMultimap;true;create;(Multimap);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			LinkedListMultimap out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(source(), null);
			out = LinkedListMultimap.create(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;LinkedListMultimap;true;create;(Multimap);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			LinkedListMultimap out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(null, source());
			out = LinkedListMultimap.create(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Lists;false;asList;(Object,Object,Object[]);;Argument[0..1];Element of ReturnValue;value;manual"
			List out = null;
			Object in = (Object)source();
			out = Lists.asList(null, in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Lists;false;asList;(Object,Object,Object[]);;Argument[0..1];Element of ReturnValue;value;manual"
			List out = null;
			Object in = (Object)source();
			out = Lists.asList(in, null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Lists;false;asList;(Object,Object,Object[]);;ArrayElement of Argument[2];Element of ReturnValue;value;manual"
			List out = null;
			Object[] in = (Object[])new Object[]{source()};
			out = Lists.asList(null, null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Lists;false;asList;(Object,Object[]);;Argument[0];Element of ReturnValue;value;manual"
			List out = null;
			Object in = (Object)source();
			out = Lists.asList(in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Lists;false;asList;(Object,Object[]);;ArrayElement of Argument[1];Element of ReturnValue;value;manual"
			List out = null;
			Object[] in = (Object[])new Object[]{source()};
			out = Lists.asList(null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Lists;false;cartesianProduct;(List);;Element of Element of Argument[0];Element of Element of ReturnValue;value;manual"
			List<List> out = null;
			List in = (List)List.of(List.of(source()));
			out = Lists.cartesianProduct(in);
			sink(getElement(getElement(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Lists;false;cartesianProduct;(List[]);;Element of ArrayElement of Argument[0];Element of Element of ReturnValue;value;manual"
			List<List> out = null;
			List[] in = (List[])new List[]{(List)List.of(source())};
			out = Lists.cartesianProduct(in);
			sink(getElement(getElement(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Lists;false;charactersOf;(CharSequence);;Argument[0];Element of ReturnValue;taint;manual"
			List out = null;
			CharSequence in = (CharSequence)source();
			out = Lists.charactersOf(in);
			sink(getElement(out)); // $ hasTaintFlow
		}
		{
			// "com.google.common.collect;Lists;false;charactersOf;(String);;Argument[0];Element of ReturnValue;taint;manual"
			ImmutableList out = null;
			String in = (String)source();
			out = Lists.charactersOf(in);
			sink(getElement(out)); // $ hasTaintFlow
		}
		{
			// "com.google.common.collect;Lists;false;newArrayList;(Iterable);;Element of Argument[0];Element of ReturnValue;value;manual"
			ArrayList out = null;
			Iterable in = (Iterable)List.of(source());
			out = Lists.newArrayList(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Lists;false;newArrayList;(Iterator);;Element of Argument[0];Element of ReturnValue;value;manual"
			ArrayList out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Lists.newArrayList(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Lists;false;newArrayList;(Object[]);;ArrayElement of Argument[0];Element of ReturnValue;value;manual"
			ArrayList out = null;
			Object[] in = (Object[])new Object[]{source()};
			out = Lists.newArrayList(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Lists;false;newCopyOnWriteArrayList;(Iterable);;Element of Argument[0];Element of ReturnValue;value;manual"
			CopyOnWriteArrayList out = null;
			Iterable in = (Iterable)List.of(source());
			out = Lists.newCopyOnWriteArrayList(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Lists;false;newLinkedList;(Iterable);;Element of Argument[0];Element of ReturnValue;value;manual"
			LinkedList out = null;
			Iterable in = (Iterable)List.of(source());
			out = Lists.newLinkedList(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Lists;false;partition;(List,int);;Element of Argument[0];Element of Element of ReturnValue;value;manual"
			List<List> out = null;
			List in = (List)List.of(source());
			out = Lists.partition(in, 0);
			sink(getElement(getElement(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Lists;false;reverse;(List);;Element of Argument[0];Element of ReturnValue;value;manual"
			List out = null;
			List in = (List)List.of(source());
			out = Lists.reverse(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;MapDifference$ValueDifference;true;leftValue;();;SyntheticField[com.google.common.collect.MapDifference.left] of Argument[-1];ReturnValue;value;manual"
			Object out = null;
			MapDifference.ValueDifference in = (MapDifference.ValueDifference)newMapValueDifference(source(), null);
			out = in.leftValue();
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;MapDifference$ValueDifference;true;rightValue;();;SyntheticField[com.google.common.collect.MapDifference.right] of Argument[-1];ReturnValue;value;manual"
			Object out = null;
			MapDifference.ValueDifference in = (MapDifference.ValueDifference)newMapValueDifference(null, source());
			out = in.rightValue();
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;MapDifference;true;entriesDiffering;();;MapKey of SyntheticField[com.google.common.collect.MapDifference.left] of Argument[-1];MapKey of ReturnValue;value;manual"
			SortedMap out = null;
			SortedMapDifference in = (SortedMapDifference)Maps.difference(ImmutableSortedMap.of((Comparable)source(), null), null);
			out = in.entriesDiffering();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;MapDifference;true;entriesDiffering;();;MapKey of SyntheticField[com.google.common.collect.MapDifference.left] of Argument[-1];MapKey of ReturnValue;value;manual"
			Map out = null;
			MapDifference in = (MapDifference)Maps.difference(Map.of(source(), null), null);
			out = in.entriesDiffering();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;MapDifference;true;entriesDiffering;();;MapKey of SyntheticField[com.google.common.collect.MapDifference.right] of Argument[-1];MapKey of ReturnValue;value;manual"
			SortedMap out = null;
			SortedMapDifference in = (SortedMapDifference)Maps.difference(null, ImmutableSortedMap.of((Comparable)source(), null));
			out = in.entriesDiffering();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;MapDifference;true;entriesDiffering;();;MapKey of SyntheticField[com.google.common.collect.MapDifference.right] of Argument[-1];MapKey of ReturnValue;value;manual"
			Map out = null;
			MapDifference in = (MapDifference)Maps.difference(null, Map.of(source(), null));
			out = in.entriesDiffering();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;MapDifference;true;entriesDiffering;();;MapValue of SyntheticField[com.google.common.collect.MapDifference.left] of Argument[-1];SyntheticField[com.google.common.collect.MapDifference.left] of MapValue of ReturnValue;value;manual"
			SortedMap<Object,MapDifference.ValueDifference> out = null;
			SortedMapDifference in = (SortedMapDifference)Maps.difference(ImmutableSortedMap.of((Comparable)null, source()), null);
			out = in.entriesDiffering();
			sink(getMapValue(out).leftValue()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;MapDifference;true;entriesDiffering;();;MapValue of SyntheticField[com.google.common.collect.MapDifference.left] of Argument[-1];SyntheticField[com.google.common.collect.MapDifference.left] of MapValue of ReturnValue;value;manual"
			Map<Object,MapDifference.ValueDifference> out = null;
			MapDifference in = (MapDifference)Maps.difference(Map.of(null, source()), null);
			out = in.entriesDiffering();
			sink(getMapValue(out).leftValue()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;MapDifference;true;entriesDiffering;();;MapValue of SyntheticField[com.google.common.collect.MapDifference.right] of Argument[-1];SyntheticField[com.google.common.collect.MapDifference.right] of MapValue of ReturnValue;value;manual"
			SortedMap<Object,MapDifference.ValueDifference> out = null;
			SortedMapDifference in = (SortedMapDifference)Maps.difference(null, ImmutableSortedMap.of((Comparable)null, source()));
			out = in.entriesDiffering();
			sink(getMapValue(out).rightValue()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;MapDifference;true;entriesDiffering;();;MapValue of SyntheticField[com.google.common.collect.MapDifference.right] of Argument[-1];SyntheticField[com.google.common.collect.MapDifference.right] of MapValue of ReturnValue;value;manual"
			Map<Object,MapDifference.ValueDifference> out = null;
			MapDifference in = (MapDifference)Maps.difference(null, Map.of(null, source()));
			out = in.entriesDiffering();
			sink(getMapValue(out).rightValue()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;MapDifference;true;entriesInCommon;();;MapKey of SyntheticField[com.google.common.collect.MapDifference.left] of Argument[-1];MapKey of ReturnValue;value;manual"
			SortedMap out = null;
			SortedMapDifference in = (SortedMapDifference)Maps.difference(ImmutableSortedMap.of((Comparable)source(), null), null);
			out = in.entriesInCommon();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;MapDifference;true;entriesInCommon;();;MapKey of SyntheticField[com.google.common.collect.MapDifference.left] of Argument[-1];MapKey of ReturnValue;value;manual"
			Map out = null;
			MapDifference in = (MapDifference)Maps.difference(Map.of(source(), null), null);
			out = in.entriesInCommon();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;MapDifference;true;entriesInCommon;();;MapKey of SyntheticField[com.google.common.collect.MapDifference.right] of Argument[-1];MapKey of ReturnValue;value;manual"
			SortedMap out = null;
			SortedMapDifference in = (SortedMapDifference)Maps.difference(null, ImmutableSortedMap.of((Comparable)source(), null));
			out = in.entriesInCommon();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;MapDifference;true;entriesInCommon;();;MapKey of SyntheticField[com.google.common.collect.MapDifference.right] of Argument[-1];MapKey of ReturnValue;value;manual"
			Map out = null;
			MapDifference in = (MapDifference)Maps.difference(null, Map.of(source(), null));
			out = in.entriesInCommon();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;MapDifference;true;entriesInCommon;();;MapValue of SyntheticField[com.google.common.collect.MapDifference.left] of Argument[-1];MapValue of ReturnValue;value;manual"
			SortedMap out = null;
			SortedMapDifference in = (SortedMapDifference)Maps.difference(ImmutableSortedMap.of((Comparable)null, source()), null);
			out = in.entriesInCommon();
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;MapDifference;true;entriesInCommon;();;MapValue of SyntheticField[com.google.common.collect.MapDifference.left] of Argument[-1];MapValue of ReturnValue;value;manual"
			Map out = null;
			MapDifference in = (MapDifference)Maps.difference(Map.of(null, source()), null);
			out = in.entriesInCommon();
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;MapDifference;true;entriesInCommon;();;MapValue of SyntheticField[com.google.common.collect.MapDifference.right] of Argument[-1];MapValue of ReturnValue;value;manual"
			SortedMap out = null;
			SortedMapDifference in = (SortedMapDifference)Maps.difference(null, ImmutableSortedMap.of((Comparable)null, source()));
			out = in.entriesInCommon();
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;MapDifference;true;entriesInCommon;();;MapValue of SyntheticField[com.google.common.collect.MapDifference.right] of Argument[-1];MapValue of ReturnValue;value;manual"
			Map out = null;
			MapDifference in = (MapDifference)Maps.difference(null, Map.of(null, source()));
			out = in.entriesInCommon();
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;MapDifference;true;entriesOnlyOnLeft;();;MapKey of SyntheticField[com.google.common.collect.MapDifference.left] of Argument[-1];MapKey of ReturnValue;value;manual"
			SortedMap out = null;
			SortedMapDifference in = (SortedMapDifference)Maps.difference(ImmutableSortedMap.of((Comparable)source(), null), null);
			out = in.entriesOnlyOnLeft();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;MapDifference;true;entriesOnlyOnLeft;();;MapKey of SyntheticField[com.google.common.collect.MapDifference.left] of Argument[-1];MapKey of ReturnValue;value;manual"
			Map out = null;
			MapDifference in = (MapDifference)Maps.difference(Map.of(source(), null), null);
			out = in.entriesOnlyOnLeft();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;MapDifference;true;entriesOnlyOnLeft;();;MapValue of SyntheticField[com.google.common.collect.MapDifference.left] of Argument[-1];MapValue of ReturnValue;value;manual"
			SortedMap out = null;
			SortedMapDifference in = (SortedMapDifference)Maps.difference(ImmutableSortedMap.of((Comparable)null, source()), null);
			out = in.entriesOnlyOnLeft();
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;MapDifference;true;entriesOnlyOnLeft;();;MapValue of SyntheticField[com.google.common.collect.MapDifference.left] of Argument[-1];MapValue of ReturnValue;value;manual"
			Map out = null;
			MapDifference in = (MapDifference)Maps.difference(Map.of(null, source()), null);
			out = in.entriesOnlyOnLeft();
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;MapDifference;true;entriesOnlyOnRight;();;MapKey of SyntheticField[com.google.common.collect.MapDifference.right] of Argument[-1];MapKey of ReturnValue;value;manual"
			SortedMap out = null;
			SortedMapDifference in = (SortedMapDifference)Maps.difference(null, ImmutableSortedMap.of((Comparable)source(),null));
			out = in.entriesOnlyOnRight();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;MapDifference;true;entriesOnlyOnRight;();;MapKey of SyntheticField[com.google.common.collect.MapDifference.right] of Argument[-1];MapKey of ReturnValue;value;manual"
			Map out = null;
			MapDifference in = (MapDifference)Maps.difference(null, Map.of(source(), null));
			out = in.entriesOnlyOnRight();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;MapDifference;true;entriesOnlyOnRight;();;MapValue of SyntheticField[com.google.common.collect.MapDifference.right] of Argument[-1];MapValue of ReturnValue;value;manual"
			SortedMap out = null;
			SortedMapDifference in = (SortedMapDifference)Maps.difference(null, ImmutableSortedMap.of((Comparable)null, source()));
			out = in.entriesOnlyOnRight();
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;MapDifference;true;entriesOnlyOnRight;();;MapValue of SyntheticField[com.google.common.collect.MapDifference.right] of Argument[-1];MapValue of ReturnValue;value;manual"
			Map out = null;
			MapDifference in = (MapDifference)Maps.difference(null, Map.of(null, source()));
			out = in.entriesOnlyOnRight();
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;asMap;(NavigableSet,Function);;Element of Argument[0];MapKey of ReturnValue;value;manual"
			NavigableMap out = null;
			NavigableSet in = (NavigableSet)ImmutableSortedSet.of((Comparable)source());
			out = Maps.asMap(in, (Function)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;asMap;(Set,Function);;Element of Argument[0];MapKey of ReturnValue;value;manual"
			Map out = null;
			Set in = (Set)Set.of(source());
			out = Maps.asMap(in, (Function)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;asMap;(SortedSet,Function);;Element of Argument[0];MapKey of ReturnValue;value;manual"
			SortedMap out = null;
			SortedSet in = (SortedSet)ImmutableSortedSet.of((Comparable)source());
			out = Maps.asMap(in, (Function)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;difference;(Map,Map);;MapKey of Argument[0];MapKey of SyntheticField[com.google.common.collect.MapDifference.left] of ReturnValue;value;manual"
			MapDifference out = null;
			Map in = (Map)Map.of(source(), null);
			out = Maps.difference(in, (Map)null);
			sink(getMapKey(out.entriesOnlyOnLeft())); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;difference;(Map,Map);;MapKey of Argument[1];MapKey of SyntheticField[com.google.common.collect.MapDifference.right] of ReturnValue;value;manual"
			MapDifference out = null;
			Map in = (Map)Map.of(source(), null);
			out = Maps.difference((Map)null, in);
			sink(getMapKey(out.entriesOnlyOnRight())); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;difference;(Map,Map);;MapValue of Argument[0];MapValue of SyntheticField[com.google.common.collect.MapDifference.left] of ReturnValue;value;manual"
			MapDifference out = null;
			Map in = (Map)Map.of(null, source());
			out = Maps.difference(in, (Map)null);
			sink(getMapValue(out.entriesOnlyOnLeft())); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;difference;(Map,Map);;MapValue of Argument[1];MapValue of SyntheticField[com.google.common.collect.MapDifference.right] of ReturnValue;value;manual"
			MapDifference out = null;
			Map in = (Map)Map.of(null, source());
			out = Maps.difference((Map)null, in);
			sink(getMapValue(out.entriesOnlyOnRight())); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;difference;(Map,Map,Equivalence);;MapKey of Argument[0];MapKey of SyntheticField[com.google.common.collect.MapDifference.left] of ReturnValue;value;manual"
			MapDifference out = null;
			Map in = (Map)Map.of(source(), null);
			out = Maps.difference(in, null, null);
			sink(getMapKey(out.entriesOnlyOnLeft())); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;difference;(Map,Map,Equivalence);;MapKey of Argument[1];MapKey of SyntheticField[com.google.common.collect.MapDifference.right] of ReturnValue;value;manual"
			MapDifference out = null;
			Map in = (Map)Map.of(source(), null);
			out = Maps.difference(null, in, null);
			sink(getMapKey(out.entriesOnlyOnRight())); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;difference;(Map,Map,Equivalence);;MapValue of Argument[0];MapValue of SyntheticField[com.google.common.collect.MapDifference.left] of ReturnValue;value;manual"
			MapDifference out = null;
			Map in = (Map)Map.of(null, source());
			out = Maps.difference(in, null, null);
			sink(getMapValue(out.entriesOnlyOnLeft())); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;difference;(Map,Map,Equivalence);;MapValue of Argument[1];MapValue of SyntheticField[com.google.common.collect.MapDifference.right] of ReturnValue;value;manual"
			MapDifference out = null;
			Map in = (Map)Map.of(null, source());
			out = Maps.difference(null, in, null);
			sink(getMapValue(out.entriesOnlyOnRight())); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;difference;(SortedMap,Map);;MapKey of Argument[0];MapKey of SyntheticField[com.google.common.collect.MapDifference.left] of ReturnValue;value;manual"
			SortedMapDifference out = null;
			SortedMap in = (SortedMap)ImmutableSortedMap.of((Comparable)source(), null);
			out = Maps.difference(in, (Map)null);
			sink(getMapKey(out.entriesOnlyOnLeft())); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;difference;(SortedMap,Map);;MapKey of Argument[1];MapKey of SyntheticField[com.google.common.collect.MapDifference.right] of ReturnValue;value;manual"
			SortedMapDifference out = null;
			Map in = (Map)Map.of(source(), null);
			out = Maps.difference((SortedMap)null, in);
			sink(getMapKey(out.entriesOnlyOnRight())); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;difference;(SortedMap,Map);;MapValue of Argument[0];MapValue of SyntheticField[com.google.common.collect.MapDifference.left] of ReturnValue;value;manual"
			SortedMapDifference out = null;
			SortedMap in = (SortedMap)ImmutableSortedMap.of((Comparable)null, source());
			out = Maps.difference(in, (Map)null);
			sink(getMapValue(out.entriesOnlyOnLeft())); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;difference;(SortedMap,Map);;MapValue of Argument[1];MapValue of SyntheticField[com.google.common.collect.MapDifference.right] of ReturnValue;value;manual"
			SortedMapDifference out = null;
			Map in = (Map)Map.of(null, source());
			out = Maps.difference((SortedMap)null, in);
			sink(getMapValue(out.entriesOnlyOnRight())); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterEntries;;;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			SortedMap out = null;
			SortedMap in = (SortedMap)ImmutableSortedMap.of((Comparable)source(), null);
			out = Maps.filterEntries(in, (Predicate)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterEntries;;;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			NavigableMap out = null;
			NavigableMap in = (NavigableMap)ImmutableSortedMap.of((Comparable)source(), null);
			out = Maps.filterEntries(in, (Predicate)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterEntries;;;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			Map out = null;
			Map in = (Map)Map.of(source(), null);
			out = Maps.filterEntries(in, (Predicate)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterEntries;;;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			BiMap out = null;
			BiMap in = (BiMap)ImmutableBiMap.of(source(), null);
			out = Maps.filterEntries(in, (Predicate)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterKeys;;;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			SortedMap out = null;
			SortedMap in = (SortedMap)ImmutableSortedMap.of((Comparable)source(), null);
			out = Maps.filterKeys(in, (Predicate)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterKeys;;;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			NavigableMap out = null;
			NavigableMap in = (NavigableMap)ImmutableSortedMap.of((Comparable)source(), null);
			out = Maps.filterKeys(in, (Predicate)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterKeys;;;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			Map out = null;
			Map in = (Map)Map.of(source(), null);
			out = Maps.filterKeys(in, (Predicate)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterKeys;;;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			BiMap out = null;
			BiMap in = (BiMap)ImmutableBiMap.of(source(), null);
			out = Maps.filterKeys(in, (Predicate)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterValues;;;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			SortedMap out = null;
			SortedMap in = (SortedMap)ImmutableSortedMap.of((Comparable)source(), null);
			out = Maps.filterValues(in, (Predicate)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterValues;;;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			NavigableMap out = null;
			NavigableMap in = (NavigableMap)ImmutableSortedMap.of((Comparable)source(), null);
			out = Maps.filterValues(in, (Predicate)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterValues;;;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			Map out = null;
			Map in = (Map)Map.of(source(), null);
			out = Maps.filterValues(in, (Predicate)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;filterValues;;;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			BiMap out = null;
			BiMap in = (BiMap)ImmutableBiMap.of(source(), null);
			out = Maps.filterValues(in, (Predicate)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;fromProperties;(Properties);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableMap out = null;
			Properties in = (Properties)newWithMapKeyDefault(source());
			out = Maps.fromProperties(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;fromProperties;(Properties);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			ImmutableMap out = null;
			Properties in = (Properties)newWithMapValueDefault(source());
			out = Maps.fromProperties(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;immutableEntry;(Object,Object);;Argument[0];MapKey of ReturnValue;value;manual"
			Map.Entry out = null;
			Object in = (Object)source();
			out = Maps.immutableEntry(in, null);
			sink(out.getKey()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;immutableEntry;(Object,Object);;Argument[1];MapValue of ReturnValue;value;manual"
			Map.Entry out = null;
			Object in = (Object)source();
			out = Maps.immutableEntry(null, in);
			sink(out.getValue()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;immutableEnumMap;(Map);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			ImmutableMap out = null;
			Map in = (Map)Map.of(null, source());
			out = Maps.immutableEnumMap(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;newEnumMap;(Map);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			EnumMap out = null;
			Map in = (Map)Map.of(null, source());
			out = Maps.newEnumMap(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;newHashMap;(Map);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			HashMap out = null;
			Map in = (Map)Map.of(source(), null);
			out = Maps.newHashMap(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;newHashMap;(Map);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			HashMap out = null;
			Map in = (Map)Map.of(null, source());
			out = Maps.newHashMap(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;newLinkedHashMap;(Map);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			LinkedHashMap out = null;
			Map in = (Map)Map.of(source(), null);
			out = Maps.newLinkedHashMap(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;newLinkedHashMap;(Map);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			LinkedHashMap out = null;
			Map in = (Map)Map.of(null, source());
			out = Maps.newLinkedHashMap(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;newTreeMap;(SortedMap);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			TreeMap out = null;
			SortedMap in = (SortedMap)ImmutableSortedMap.of((Comparable)source(), null);
			out = Maps.newTreeMap(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;newTreeMap;(SortedMap);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			TreeMap out = null;
			SortedMap in = (SortedMap)ImmutableSortedMap.of((Comparable)null, source());
			out = Maps.newTreeMap(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;subMap;(NavigableMap,Range);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			NavigableMap out = null;
			NavigableMap in = (NavigableMap)ImmutableSortedMap.of((Comparable)source(), null);
			out = Maps.subMap(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;subMap;(NavigableMap,Range);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			NavigableMap out = null;
			NavigableMap in = (NavigableMap)ImmutableSortedMap.of((Comparable)null, source());
			out = Maps.subMap(in, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;synchronizedBiMap;(BiMap);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			BiMap out = null;
			BiMap in = (BiMap)ImmutableBiMap.of(source(), null);
			out = Maps.synchronizedBiMap(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;synchronizedBiMap;(BiMap);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			BiMap out = null;
			BiMap in = (BiMap)ImmutableBiMap.of(null, source());
			out = Maps.synchronizedBiMap(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;synchronizedNavigableMap;(NavigableMap);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			NavigableMap out = null;
			NavigableMap in = (NavigableMap)ImmutableSortedMap.of((Comparable)source(), null);
			out = Maps.synchronizedNavigableMap(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;synchronizedNavigableMap;(NavigableMap);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			NavigableMap out = null;
			NavigableMap in = (NavigableMap)ImmutableSortedMap.of((Comparable)null, source());
			out = Maps.synchronizedNavigableMap(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;toMap;(Iterable,Function);;Element of Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableMap out = null;
			Iterable in = (Iterable)List.of(source());
			out = Maps.toMap(in, (Function)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;toMap;(Iterator,Function);;Element of Argument[0];MapKey of ReturnValue;value;manual"
			ImmutableMap out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Maps.toMap(in, (Function)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;transformValues;(Map,Function);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			Map out = null;
			Map in = (Map)Map.of(source(), null);
			out = Maps.transformValues(in, (Function)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;transformValues;(NavigableMap,Function);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			NavigableMap out = null;
			NavigableMap in = (NavigableMap)ImmutableSortedMap.of((Comparable)source(), null);
			out = Maps.transformValues(in, (Function)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;transformValues;(SortedMap,Function);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			SortedMap out = null;
			SortedMap in = (SortedMap)ImmutableSortedMap.of((Comparable)source(), null);
			out = Maps.transformValues(in, (Function)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;uniqueIndex;(Iterable,Function);;Element of Argument[0];MapValue of ReturnValue;value;manual"
			ImmutableMap out = null;
			Iterable in = (Iterable)List.of(source());
			out = Maps.uniqueIndex(in, (Function)null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;uniqueIndex;(Iterator,Function);;Element of Argument[0];MapValue of ReturnValue;value;manual"
			ImmutableMap out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Maps.uniqueIndex(in, (Function)null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;unmodifiableBiMap;(BiMap);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			BiMap out = null;
			BiMap in = (BiMap)ImmutableBiMap.of(source(), null);
			out = Maps.unmodifiableBiMap(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;unmodifiableBiMap;(BiMap);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			BiMap out = null;
			BiMap in = (BiMap)ImmutableBiMap.of(null, source());
			out = Maps.unmodifiableBiMap(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;unmodifiableNavigableMap;(NavigableMap);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			NavigableMap out = null;
			NavigableMap in = (NavigableMap)ImmutableSortedMap.of((Comparable)source(), null);
			out = Maps.unmodifiableNavigableMap(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Maps;false;unmodifiableNavigableMap;(NavigableMap);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			NavigableMap out = null;
			NavigableMap in = (NavigableMap)ImmutableSortedMap.of((Comparable)null, source());
			out = Maps.unmodifiableNavigableMap(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapKey of Argument[-1];MapKey of ReturnValue;value;manual"
			NavigableMap out = null;
			TreeMultimap in = (TreeMultimap)TreeMultimap.create(ImmutableMultimap.of((Comparable)source(), null));
			out = in.asMap();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapKey of Argument[-1];MapKey of ReturnValue;value;manual"
			Map out = null;
			SortedSetMultimap in = (SortedSetMultimap)TreeMultimap.create(ImmutableMultimap.of((Comparable)source(), null));
			out = in.asMap();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapKey of Argument[-1];MapKey of ReturnValue;value;manual"
			Map out = null;
			SetMultimap in = (SetMultimap)ImmutableSetMultimap.of(source(), null);
			out = in.asMap();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapKey of Argument[-1];MapKey of ReturnValue;value;manual"
			Map out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(source(), null);
			out = in.asMap();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapKey of Argument[-1];MapKey of ReturnValue;value;manual"
			Map out = null;
			ListMultimap in = (ListMultimap)ImmutableListMultimap.of(source(), null);
			out = in.asMap();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapKey of Argument[-1];MapKey of ReturnValue;value;manual"
			ImmutableMap out = null;
			ImmutableMultimap in = (ImmutableMultimap)ImmutableMultimap.of(source(), null);
			out = in.asMap();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapValue of Argument[-1];Element of MapValue of ReturnValue;value;manual"
			NavigableMap<Object,Collection> out = null;
			TreeMultimap in = (TreeMultimap)TreeMultimap.create(ImmutableMultimap.of(null, (Comparable)source()));
			out = in.asMap();
			sink(getElement(getMapValue(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapValue of Argument[-1];Element of MapValue of ReturnValue;value;manual"
			Map<Object,Collection> out = null;
			SortedSetMultimap in = (SortedSetMultimap)TreeMultimap.create(ImmutableMultimap.of(null, (Comparable)source()));
			out = in.asMap();
			sink(getElement(getMapValue(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapValue of Argument[-1];Element of MapValue of ReturnValue;value;manual"
			Map<Object,Collection> out = null;
			SetMultimap in = (SetMultimap)ImmutableSetMultimap.of(null, source());
			out = in.asMap();
			sink(getElement(getMapValue(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapValue of Argument[-1];Element of MapValue of ReturnValue;value;manual"
			Map<Object,Collection> out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(null, source());
			out = in.asMap();
			sink(getElement(getMapValue(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapValue of Argument[-1];Element of MapValue of ReturnValue;value;manual"
			Map<Object,Collection> out = null;
			ListMultimap in = (ListMultimap)ImmutableListMultimap.of(null, source());
			out = in.asMap();
			sink(getElement(getMapValue(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;asMap;();;MapValue of Argument[-1];Element of MapValue of ReturnValue;value;manual"
			ImmutableMap<Object,Collection> out = null;
			ImmutableMultimap in = (ImmutableMultimap)ImmutableMultimap.of(null, source());
			out = in.asMap();
			sink(getElement(getMapValue(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;entries;();;MapKey of Argument[-1];MapKey of Element of ReturnValue;value;manual"
			Set<Map.Entry> out = null;
			SetMultimap in = (SetMultimap)ImmutableSetMultimap.of(source(), null);
			out = in.entries();
			sink(getElement(out).getKey()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;entries;();;MapKey of Argument[-1];MapKey of Element of ReturnValue;value;manual"
			Set<Map.Entry> out = null;
			LinkedHashMultimap in = (LinkedHashMultimap)LinkedHashMultimap.create(ImmutableMultimap.of(source(), null));
			out = in.entries();
			sink(getElement(out).getKey()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;entries;();;MapKey of Argument[-1];MapKey of Element of ReturnValue;value;manual"
			List<Map.Entry> out = null;
			LinkedListMultimap in = (LinkedListMultimap)LinkedListMultimap.create(ImmutableMultimap.of(source(), null));
			out = in.entries();
			sink(getElement(out).getKey()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;entries;();;MapKey of Argument[-1];MapKey of Element of ReturnValue;value;manual"
			ImmutableSet<Map.Entry> out = null;
			ImmutableSetMultimap in = (ImmutableSetMultimap)ImmutableSetMultimap.of(source(), null);
			out = in.entries();
			sink(getElement(out).getKey()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;entries;();;MapKey of Argument[-1];MapKey of Element of ReturnValue;value;manual"
			ImmutableCollection<Map.Entry> out = null;
			ImmutableMultimap in = (ImmutableMultimap)ImmutableMultimap.of(source(), null);
			out = in.entries();
			sink(getElement(out).getKey()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;entries;();;MapKey of Argument[-1];MapKey of Element of ReturnValue;value;manual"
			Collection<Map.Entry> out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(source(), null);
			out = in.entries();
			sink(getElement(out).getKey()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;entries;();;MapValue of Argument[-1];MapValue of Element of ReturnValue;value;manual"
			Set<Map.Entry> out = null;
			SetMultimap in = (SetMultimap)ImmutableSetMultimap.of(null, source());
			out = in.entries();
			sink(getElement(out).getValue()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;entries;();;MapValue of Argument[-1];MapValue of Element of ReturnValue;value;manual"
			Set<Map.Entry> out = null;
			LinkedHashMultimap in = (LinkedHashMultimap)LinkedHashMultimap.create(ImmutableMultimap.of(null, source()));
			out = in.entries();
			sink(getElement(out).getValue()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;entries;();;MapValue of Argument[-1];MapValue of Element of ReturnValue;value;manual"
			List<Map.Entry> out = null;
			LinkedListMultimap in = (LinkedListMultimap)LinkedListMultimap.create(ImmutableMultimap.of(null, source()));
			out = in.entries();
			sink(getElement(out).getValue()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;entries;();;MapValue of Argument[-1];MapValue of Element of ReturnValue;value;manual"
			ImmutableSet<Map.Entry> out = null;
			ImmutableSetMultimap in = (ImmutableSetMultimap)ImmutableSetMultimap.of(null, source());
			out = in.entries();
			sink(getElement(out).getValue()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;entries;();;MapValue of Argument[-1];MapValue of Element of ReturnValue;value;manual"
			ImmutableCollection<Map.Entry> out = null;
			ImmutableMultimap in = (ImmutableMultimap)ImmutableMultimap.of(null, source());
			out = in.entries();
			sink(getElement(out).getValue()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;entries;();;MapValue of Argument[-1];MapValue of Element of ReturnValue;value;manual"
			Collection<Map.Entry> out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(null, source());
			out = in.entries();
			sink(getElement(out).getValue()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			SortedSet out = null;
			SortedSetMultimap in = (SortedSetMultimap)TreeMultimap.create(ImmutableMultimap.of(null, (Comparable)source()));
			out = in.get(null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			Set out = null;
			SetMultimap in = (SetMultimap)ImmutableSetMultimap.of(null, source());
			out = in.get(null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			NavigableSet out = null;
			TreeMultimap in = (TreeMultimap)TreeMultimap.create(ImmutableMultimap.of(null, (Comparable)source()));
			out = in.get(null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			List out = null;
			ListMultimap in = (ListMultimap)ImmutableListMultimap.of(null, source());
			out = in.get(null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			List out = null;
			LinkedListMultimap in = (LinkedListMultimap)LinkedListMultimap.create(ImmutableMultimap.of(null, source()));
			out = in.get(null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			ImmutableSetMultimap in = (ImmutableSetMultimap)ImmutableSetMultimap.of(null, source());
			out = in.get(null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			ImmutableListMultimap in = (ImmutableListMultimap)ImmutableListMultimap.of(null, source());
			out = in.get(null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableCollection out = null;
			ImmutableMultimap in = (ImmutableMultimap)ImmutableMultimap.of(null, source());
			out = in.get(null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;get;(Object);;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			Collection out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(null, source());
			out = in.get(null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;keySet;();;MapKey of Argument[-1];Element of ReturnValue;value;manual"
			Set out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(source(), null);
			out = in.keySet();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;keySet;();;MapKey of Argument[-1];Element of ReturnValue;value;manual"
			Set out = null;
			LinkedHashMultimap in = (LinkedHashMultimap)LinkedHashMultimap.create(ImmutableMultimap.of(source(), null));
			out = in.keySet();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;keySet;();;MapKey of Argument[-1];Element of ReturnValue;value;manual"
			NavigableSet out = null;
			TreeMultimap in = (TreeMultimap)TreeMultimap.create(ImmutableMultimap.of((Comparable)source(), null));
			out = in.keySet();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;keySet;();;MapKey of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			ImmutableMultimap in = (ImmutableMultimap)ImmutableMultimap.of(source(), null);
			out = in.keySet();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;keys;();;MapKey of Argument[-1];Element of ReturnValue;value;manual"
			Multiset out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(source(), null);
			out = in.keys();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;keys;();;MapKey of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableMultiset out = null;
			ImmutableMultimap in = (ImmutableMultimap)ImmutableMultimap.of(source(), null);
			out = in.keys();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];value;manual"
			Multimap out = null;
			Object in = (Object)source();
			out.put(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];value;manual"
			LinkedListMultimap out = null;
			Object in = (Object)source();
			out.put(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out.put(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];value;manual"
			Multimap out = null;
			Object in = (Object)source();
			out.put(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];value;manual"
			LinkedListMultimap out = null;
			Object in = (Object)source();
			out.put(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;put;(Object,Object);;Argument[1];MapValue of Argument[-1];value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out.put(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;putAll;(Multimap);;MapKey of Argument[0];MapKey of Argument[-1];value;manual"
			Multimap out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(source(), null);
			out.putAll(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;putAll;(Multimap);;MapKey of Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableMultimap out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(source(), null);
			out.putAll(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;putAll;(Multimap);;MapValue of Argument[0];MapValue of Argument[-1];value;manual"
			Multimap out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(null, source());
			out.putAll(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;putAll;(Multimap);;MapValue of Argument[0];MapValue of Argument[-1];value;manual"
			ImmutableMultimap out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(null, source());
			out.putAll(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;putAll;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value;manual"
			Multimap out = null;
			Object in = (Object)source();
			out.putAll(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;putAll;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out.putAll(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;putAll;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value;manual"
			Multimap out = null;
			Iterable in = (Iterable)List.of(source());
			out.putAll(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;putAll;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value;manual"
			ImmutableMultimap out = null;
			Iterable in = (Iterable)List.of(source());
			out.putAll(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;removeAll;(Object);;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			SortedSet out = null;
			SortedSetMultimap in = (SortedSetMultimap)TreeMultimap.create(ImmutableMultimap.of(null, (Comparable)source()));
			out = in.removeAll(null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;removeAll;(Object);;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			Set out = null;
			SetMultimap in = (SetMultimap)ImmutableSetMultimap.of(null, source());
			out = in.removeAll(null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;removeAll;(Object);;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			List out = null;
			ListMultimap in = (ListMultimap)ImmutableListMultimap.of(null, source());
			out = in.removeAll(null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;removeAll;(Object);;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			List out = null;
			LinkedListMultimap in = (LinkedListMultimap)LinkedListMultimap.create(ImmutableMultimap.of(null, source()));
			out = in.removeAll(null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;removeAll;(Object);;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			ImmutableSetMultimap in = (ImmutableSetMultimap)ImmutableSetMultimap.of(null, source());
			out = in.removeAll(null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;removeAll;(Object);;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			ImmutableListMultimap in = (ImmutableListMultimap)ImmutableListMultimap.of(null, source());
			out = in.removeAll(null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;removeAll;(Object);;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableCollection out = null;
			ImmutableMultimap in = (ImmutableMultimap)ImmutableMultimap.of(null, source());
			out = in.removeAll(null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;removeAll;(Object);;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			Collection out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(null, source());
			out = in.removeAll(null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value;manual"
			SortedSetMultimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value;manual"
			SetMultimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value;manual"
			Multimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value;manual"
			ListMultimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value;manual"
			LinkedListMultimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value;manual"
			LinkedHashMultimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableSetMultimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableMultimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Argument[0];MapKey of Argument[-1];value;manual"
			ImmutableListMultimap out = null;
			Object in = (Object)source();
			out.replaceValues(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value;manual"
			SortedSetMultimap out = null;
			Iterable in = (Iterable)List.of(source());
			out.replaceValues(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value;manual"
			SetMultimap out = null;
			Iterable in = (Iterable)List.of(source());
			out.replaceValues(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value;manual"
			Multimap out = null;
			Iterable in = (Iterable)List.of(source());
			out.replaceValues(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value;manual"
			ListMultimap out = null;
			Iterable in = (Iterable)List.of(source());
			out.replaceValues(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value;manual"
			LinkedListMultimap out = null;
			Iterable in = (Iterable)List.of(source());
			out.replaceValues(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value;manual"
			LinkedHashMultimap out = null;
			Iterable in = (Iterable)List.of(source());
			out.replaceValues(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value;manual"
			ImmutableSetMultimap out = null;
			Iterable in = (Iterable)List.of(source());
			out.replaceValues(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value;manual"
			ImmutableMultimap out = null;
			Iterable in = (Iterable)List.of(source());
			out.replaceValues(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;Element of Argument[1];MapValue of Argument[-1];value;manual"
			ImmutableListMultimap out = null;
			Iterable in = (Iterable)List.of(source());
			out.replaceValues(null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			SortedSet out = null;
			SortedSetMultimap in = (SortedSetMultimap)TreeMultimap.create(ImmutableMultimap.of(null, (Comparable)source()));
			out = in.replaceValues(null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			Set out = null;
			SetMultimap in = (SetMultimap)ImmutableSetMultimap.of(null, source());
			out = in.replaceValues(null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			Set out = null;
			LinkedHashMultimap in = (LinkedHashMultimap)LinkedHashMultimap.create(ImmutableMultimap.of(null, source()));
			out = in.replaceValues(null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			List out = null;
			ListMultimap in = (ListMultimap)ImmutableListMultimap.of(null, source());
			out = in.replaceValues(null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			List out = null;
			LinkedListMultimap in = (LinkedListMultimap)LinkedListMultimap.create(ImmutableMultimap.of(null, source()));
			out = in.replaceValues(null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			ImmutableSetMultimap in = (ImmutableSetMultimap)ImmutableSetMultimap.of(null, source());
			out = in.replaceValues(null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableList out = null;
			ImmutableListMultimap in = (ImmutableListMultimap)ImmutableListMultimap.of(null, source());
			out = in.replaceValues(null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableCollection out = null;
			ImmutableMultimap in = (ImmutableMultimap)ImmutableMultimap.of(null, source());
			out = in.replaceValues(null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;replaceValues;(Object,Iterable);;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			Collection out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(null, source());
			out = in.replaceValues(null, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;values;();;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			List out = null;
			LinkedListMultimap in = (LinkedListMultimap)LinkedListMultimap.create(ImmutableMultimap.of(null, source()));
			out = in.values();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;values;();;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableCollection out = null;
			ImmutableMultimap in = (ImmutableMultimap)ImmutableMultimap.of(null, source());
			out = in.values();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;values;();;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			Collection out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(null, source());
			out = in.values();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimap;true;values;();;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			Collection out = null;
			LinkedHashMultimap in = (LinkedHashMultimap)LinkedHashMultimap.create(ImmutableMultimap.of(null, source()));
			out = in.values();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;asMap;(ListMultimap);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			Map out = null;
			ListMultimap in = (ListMultimap)ImmutableListMultimap.of(source(), null);
			out = Multimaps.asMap(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;asMap;(ListMultimap);;MapValue of Argument[0];Element of MapValue of ReturnValue;value;manual"
			Map<Object,Collection> out = null;
			ListMultimap in = (ListMultimap)ImmutableListMultimap.of(null, source());
			out = Multimaps.asMap(in);
			sink(getElement(getMapValue(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;asMap;(Multimap);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			Map out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(source(), null);
			out = Multimaps.asMap(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;asMap;(Multimap);;MapValue of Argument[0];Element of MapValue of ReturnValue;value;manual"
			Map<Object,Collection> out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(null, source());
			out = Multimaps.asMap(in);
			sink(getElement(getMapValue(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;asMap;(SetMultimap);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			Map out = null;
			SetMultimap in = (SetMultimap)ImmutableSetMultimap.of(source(), null);
			out = Multimaps.asMap(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;asMap;(SetMultimap);;MapValue of Argument[0];Element of MapValue of ReturnValue;value;manual"
			Map<Object,Collection> out = null;
			SetMultimap in = (SetMultimap)ImmutableSetMultimap.of(null, source());
			out = Multimaps.asMap(in);
			sink(getElement(getMapValue(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;asMap;(SortedSetMultimap);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			Map out = null;
			SortedSetMultimap in = (SortedSetMultimap)TreeMultimap.create(ImmutableMultimap.of((Comparable)source(), null));
			out = Multimaps.asMap(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;asMap;(SortedSetMultimap);;MapValue of Argument[0];Element of MapValue of ReturnValue;value;manual"
			Map<Object,Collection> out = null;
			SortedSetMultimap in = (SortedSetMultimap)TreeMultimap.create(ImmutableMultimap.of(null, (Comparable)source()));
			out = Multimaps.asMap(in);
			sink(getElement(getMapValue(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;filterEntries;(Multimap,Predicate);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			Multimap out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(source(), null);
			out = Multimaps.filterEntries(in, (Predicate)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;filterEntries;(Multimap,Predicate);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			Multimap out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(null, source());
			out = Multimaps.filterEntries(in, (Predicate)null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;filterEntries;(SetMultimap,Predicate);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			SetMultimap out = null;
			SetMultimap in = (SetMultimap)ImmutableSetMultimap.of(source(), null);
			out = Multimaps.filterEntries(in, (Predicate)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;filterEntries;(SetMultimap,Predicate);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			SetMultimap out = null;
			SetMultimap in = (SetMultimap)ImmutableSetMultimap.of(null, source());
			out = Multimaps.filterEntries(in, (Predicate)null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;filterKeys;(Multimap,Predicate);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			Multimap out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(source(), null);
			out = Multimaps.filterKeys(in, (Predicate)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;filterKeys;(Multimap,Predicate);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			Multimap out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(null, source());
			out = Multimaps.filterKeys(in, (Predicate)null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;filterKeys;(SetMultimap,Predicate);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			SetMultimap out = null;
			SetMultimap in = (SetMultimap)ImmutableSetMultimap.of(source(), null);
			out = Multimaps.filterKeys(in, (Predicate)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;filterKeys;(SetMultimap,Predicate);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			SetMultimap out = null;
			SetMultimap in = (SetMultimap)ImmutableSetMultimap.of(null, source());
			out = Multimaps.filterKeys(in, (Predicate)null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;filterValues;(Multimap,Predicate);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			Multimap out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(source(), null);
			out = Multimaps.filterValues(in, (Predicate)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;filterValues;(Multimap,Predicate);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			Multimap out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(null, source());
			out = Multimaps.filterValues(in, (Predicate)null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;filterValues;(SetMultimap,Predicate);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			SetMultimap out = null;
			SetMultimap in = (SetMultimap)ImmutableSetMultimap.of(source(), null);
			out = Multimaps.filterValues(in, (Predicate)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;filterValues;(SetMultimap,Predicate);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			SetMultimap out = null;
			SetMultimap in = (SetMultimap)ImmutableSetMultimap.of(null, source());
			out = Multimaps.filterValues(in, (Predicate)null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;forMap;(Map);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			SetMultimap out = null;
			Map in = (Map)Map.of(source(), null);
			out = Multimaps.forMap(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;forMap;(Map);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			SetMultimap out = null;
			Map in = (Map)Map.of(null, source());
			out = Multimaps.forMap(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;index;(Iterable,Function);;Element of Argument[0];MapValue of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Iterable in = (Iterable)List.of(source());
			out = Multimaps.index(in, (Function)null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;index;(Iterator,Function);;Element of Argument[0];MapValue of ReturnValue;value;manual"
			ImmutableListMultimap out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Multimaps.index(in, (Function)null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;invertFrom;(Multimap,Multimap);;Argument[1];ReturnValue;value;manual"
			Multimap out = null;
			Multimap in = (Multimap)source();
			out = Multimaps.invertFrom(null, in);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;invertFrom;(Multimap,Multimap);;MapKey of Argument[0];MapValue of Argument[1];value;manual"
			Multimap out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(source(), null);
			Multimaps.invertFrom(in, out);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;invertFrom;(Multimap,Multimap);;MapValue of Argument[0];MapKey of Argument[1];value;manual"
			Multimap out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(null, source());
			Multimaps.invertFrom(in, out);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;newListMultimap;(Map,Supplier);;Element of MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			ListMultimap out = null;
			Map in = (Map)Map.of(null, newWithElementDefault(source()));
			out = Multimaps.newListMultimap(in, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;newListMultimap;(Map,Supplier);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			ListMultimap out = null;
			Map in = (Map)Map.of(source(), null);
			out = Multimaps.newListMultimap(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;newMultimap;(Map,Supplier);;Element of MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			Multimap out = null;
			Map in = (Map)Map.of(null, newWithElementDefault(source()));
			out = Multimaps.newMultimap(in, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;newMultimap;(Map,Supplier);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			Multimap out = null;
			Map in = (Map)Map.of(source(), null);
			out = Multimaps.newMultimap(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;newSetMultimap;(Map,Supplier);;Element of MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			SetMultimap out = null;
			Map in = (Map)Map.of(null, newWithElementDefault(source()));
			out = Multimaps.newSetMultimap(in, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;newSetMultimap;(Map,Supplier);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			SetMultimap out = null;
			Map in = (Map)Map.of(source(), null);
			out = Multimaps.newSetMultimap(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;newSortedSetMultimap;(Map,Supplier);;Element of MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			SortedSetMultimap out = null;
			Map in = (Map)Map.of(null, newWithElementDefault(source()));
			out = Multimaps.newSortedSetMultimap(in, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;newSortedSetMultimap;(Map,Supplier);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			SortedSetMultimap out = null;
			Map in = (Map)Map.of(source(), null);
			out = Multimaps.newSortedSetMultimap(in, null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;synchronizedListMultimap;(ListMultimap);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			ListMultimap out = null;
			ListMultimap in = (ListMultimap)ImmutableListMultimap.of(source(), null);
			out = Multimaps.synchronizedListMultimap(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;synchronizedListMultimap;(ListMultimap);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			ListMultimap out = null;
			ListMultimap in = (ListMultimap)ImmutableListMultimap.of(null, source());
			out = Multimaps.synchronizedListMultimap(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;synchronizedMultimap;(Multimap);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			Multimap out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(source(), null);
			out = Multimaps.synchronizedMultimap(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;synchronizedMultimap;(Multimap);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			Multimap out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(null, source());
			out = Multimaps.synchronizedMultimap(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;synchronizedSetMultimap;(SetMultimap);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			SetMultimap out = null;
			SetMultimap in = (SetMultimap)ImmutableSetMultimap.of(source(), null);
			out = Multimaps.synchronizedSetMultimap(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;synchronizedSetMultimap;(SetMultimap);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			SetMultimap out = null;
			SetMultimap in = (SetMultimap)ImmutableSetMultimap.of(null, source());
			out = Multimaps.synchronizedSetMultimap(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;synchronizedSortedSetMultimap;(SortedSetMultimap);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			SortedSetMultimap out = null;
			SortedSetMultimap in = (SortedSetMultimap)TreeMultimap.create(ImmutableMultimap.of((Comparable)source(), null));
			out = Multimaps.synchronizedSortedSetMultimap(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;synchronizedSortedSetMultimap;(SortedSetMultimap);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			SortedSetMultimap out = null;
			SortedSetMultimap in = (SortedSetMultimap)TreeMultimap.create(ImmutableMultimap.of(null, (Comparable)source()));
			out = Multimaps.synchronizedSortedSetMultimap(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;transformValues;(ListMultimap,Function);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			ListMultimap out = null;
			ListMultimap in = (ListMultimap)ImmutableListMultimap.of(source(), null);
			out = Multimaps.transformValues(in, (Function)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;transformValues;(Multimap,Function);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			Multimap out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(source(), null);
			out = Multimaps.transformValues(in, (Function)null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;unmodifiableListMultimap;(ImmutableListMultimap);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			ListMultimap out = null;
			ImmutableListMultimap in = (ImmutableListMultimap)ImmutableListMultimap.of(source(), null);
			out = Multimaps.unmodifiableListMultimap(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;unmodifiableListMultimap;(ImmutableListMultimap);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			ListMultimap out = null;
			ImmutableListMultimap in = (ImmutableListMultimap)ImmutableListMultimap.of(null, source());
			out = Multimaps.unmodifiableListMultimap(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;unmodifiableListMultimap;(ListMultimap);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			ListMultimap out = null;
			ListMultimap in = (ListMultimap)ImmutableListMultimap.of(source(), null);
			out = Multimaps.unmodifiableListMultimap(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;unmodifiableListMultimap;(ListMultimap);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			ListMultimap out = null;
			ListMultimap in = (ListMultimap)ImmutableListMultimap.of(null, source());
			out = Multimaps.unmodifiableListMultimap(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;unmodifiableMultimap;(ImmutableMultimap);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			Multimap out = null;
			ImmutableMultimap in = (ImmutableMultimap)ImmutableMultimap.of(source(), null);
			out = Multimaps.unmodifiableMultimap(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;unmodifiableMultimap;(ImmutableMultimap);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			Multimap out = null;
			ImmutableMultimap in = (ImmutableMultimap)ImmutableMultimap.of(null, source());
			out = Multimaps.unmodifiableMultimap(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;unmodifiableMultimap;(Multimap);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			Multimap out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(source(), null);
			out = Multimaps.unmodifiableMultimap(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;unmodifiableMultimap;(Multimap);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			Multimap out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(null, source());
			out = Multimaps.unmodifiableMultimap(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;unmodifiableSetMultimap;(ImmutableSetMultimap);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			SetMultimap out = null;
			ImmutableSetMultimap in = (ImmutableSetMultimap)ImmutableSetMultimap.of(source(), null);
			out = Multimaps.unmodifiableSetMultimap(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;unmodifiableSetMultimap;(ImmutableSetMultimap);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			SetMultimap out = null;
			ImmutableSetMultimap in = (ImmutableSetMultimap)ImmutableSetMultimap.of(null, source());
			out = Multimaps.unmodifiableSetMultimap(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;unmodifiableSetMultimap;(SetMultimap);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			SetMultimap out = null;
			SetMultimap in = (SetMultimap)ImmutableSetMultimap.of(source(), null);
			out = Multimaps.unmodifiableSetMultimap(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;unmodifiableSetMultimap;(SetMultimap);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			SetMultimap out = null;
			SetMultimap in = (SetMultimap)ImmutableSetMultimap.of(null, source());
			out = Multimaps.unmodifiableSetMultimap(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;unmodifiableSortedSetMultimap;(SortedSetMultimap);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			SortedSetMultimap out = null;
			SortedSetMultimap in = (SortedSetMultimap)TreeMultimap.create(ImmutableMultimap.of((Comparable)source(), null));
			out = Multimaps.unmodifiableSortedSetMultimap(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multimaps;false;unmodifiableSortedSetMultimap;(SortedSetMultimap);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			SortedSetMultimap out = null;
			SortedSetMultimap in = (SortedSetMultimap)TreeMultimap.create(ImmutableMultimap.of(null, (Comparable)source()));
			out = Multimaps.unmodifiableSortedSetMultimap(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset$Entry;true;getElement;();;Element of Argument[-1];ReturnValue;value;manual"
			Object out = null;
			Multiset.Entry in = (Multiset.Entry)newEntryWithElement(source());
			out = in.getElement();
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;add;(Object,int);;Argument[0];Element of Argument[-1];value;manual"
			TreeMultiset out = null;
			Object in = (Object)source();
			out.add(in, 0);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;add;(Object,int);;Argument[0];Element of Argument[-1];value;manual"
			Multiset out = null;
			Object in = (Object)source();
			out.add(in, 0);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;add;(Object,int);;Argument[0];Element of Argument[-1];value;manual"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out.add(in, 0);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;add;(Object,int);;Argument[0];Element of Argument[-1];value;manual"
			ConcurrentHashMultiset out = null;
			Object in = (Object)source();
			out.add(in, 0);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;elementSet;();;Element of Argument[-1];Element of ReturnValue;value;manual"
			Set out = null;
			Multiset in = (Multiset)ImmutableMultiset.of(source());
			out = in.elementSet();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;elementSet;();;Element of Argument[-1];Element of ReturnValue;value;manual"
			NavigableSet out = null;
			SortedMultiset in = (SortedMultiset)ImmutableSortedMultiset.of((Comparable)source());
			out = in.elementSet();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;elementSet;();;Element of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableSortedSet out = null;
			ImmutableSortedMultiset in = (ImmutableSortedMultiset)ImmutableSortedMultiset.of((Comparable)source());
			out = in.elementSet();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;elementSet;();;Element of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			ImmutableMultiset in = (ImmutableMultiset)ImmutableMultiset.of(source());
			out = in.elementSet();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;entrySet;();;Element of Argument[-1];Element of Element of ReturnValue;value;manual"
			Set<Multiset.Entry> out = null;
			SortedMultiset in = (SortedMultiset)ImmutableSortedMultiset.of((Comparable)source());
			out = in.entrySet();
			sink(getElement(out).getElement()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;entrySet;();;Element of Argument[-1];Element of Element of ReturnValue;value;manual"
			Set<Multiset.Entry> out = null;
			Multiset in = (Multiset)ImmutableMultiset.of(source());
			out = in.entrySet();
			sink(getElement(out).getElement()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;entrySet;();;Element of Argument[-1];Element of Element of ReturnValue;value;manual"
			ImmutableSet<Multiset.Entry> out = null;
			ImmutableMultiset in = (ImmutableMultiset)ImmutableMultiset.of(source());
			out = in.entrySet();
			sink(getElement(out).getElement()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;setCount;(Object,int);;Argument[0];Element of Argument[-1];value;manual"
			TreeMultiset out = null;
			Object in = (Object)source();
			out.setCount(in, 0);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;setCount;(Object,int);;Argument[0];Element of Argument[-1];value;manual"
			Multiset out = null;
			Object in = (Object)source();
			out.setCount(in, 0);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;setCount;(Object,int);;Argument[0];Element of Argument[-1];value;manual"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out.setCount(in, 0);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;setCount;(Object,int);;Argument[0];Element of Argument[-1];value;manual"
			ConcurrentHashMultiset out = null;
			Object in = (Object)source();
			out.setCount(in, 0);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;setCount;(Object,int,int);;Argument[0];Element of Argument[-1];value;manual"
			TreeMultiset out = null;
			Object in = (Object)source();
			out.setCount(in, 0, 0);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;setCount;(Object,int,int);;Argument[0];Element of Argument[-1];value;manual"
			Multiset out = null;
			Object in = (Object)source();
			out.setCount(in, 0, 0);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;setCount;(Object,int,int);;Argument[0];Element of Argument[-1];value;manual"
			ImmutableMultiset out = null;
			Object in = (Object)source();
			out.setCount(in, 0, 0);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multiset;true;setCount;(Object,int,int);;Argument[0];Element of Argument[-1];value;manual"
			ConcurrentHashMultiset out = null;
			Object in = (Object)source();
			out.setCount(in, 0, 0);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multisets;false;copyHighestCountFirst;(Multiset);;Element of Argument[0];Element of ReturnValue;value;manual"
			ImmutableMultiset out = null;
			Multiset in = (Multiset)ImmutableMultiset.of(source());
			out = Multisets.copyHighestCountFirst(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multisets;false;difference;(Multiset,Multiset);;Element of Argument[0];Element of ReturnValue;value;manual"
			Multiset out = null;
			Multiset in = (Multiset)ImmutableMultiset.of(source());
			out = Multisets.difference(in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multisets;false;filter;(Multiset,Predicate);;Element of Argument[0];Element of ReturnValue;value;manual"
			Multiset out = null;
			Multiset in = (Multiset)ImmutableMultiset.of(source());
			out = Multisets.filter(in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multisets;false;immutableEntry;(Object,int);;Argument[0];Element of ReturnValue;value;manual"
			Multiset.Entry out = null;
			Object in = (Object)source();
			out = Multisets.immutableEntry(in, 0);
			sink(out.getElement()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multisets;false;intersection;(Multiset,Multiset);;Element of Argument[0..1];Element of ReturnValue;value;manual"
			Multiset out = null;
			Multiset in = (Multiset)ImmutableMultiset.of(source());
			out = Multisets.intersection(null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multisets;false;intersection;(Multiset,Multiset);;Element of Argument[0..1];Element of ReturnValue;value;manual"
			Multiset out = null;
			Multiset in = (Multiset)ImmutableMultiset.of(source());
			out = Multisets.intersection(in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multisets;false;sum;(Multiset,Multiset);;Element of Argument[0..1];Element of ReturnValue;value;manual"
			Multiset out = null;
			Multiset in = (Multiset)ImmutableMultiset.of(source());
			out = Multisets.sum(null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multisets;false;sum;(Multiset,Multiset);;Element of Argument[0..1];Element of ReturnValue;value;manual"
			Multiset out = null;
			Multiset in = (Multiset)ImmutableMultiset.of(source());
			out = Multisets.sum(in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multisets;false;union;(Multiset,Multiset);;Element of Argument[0..1];Element of ReturnValue;value;manual"
			Multiset out = null;
			Multiset in = (Multiset)ImmutableMultiset.of(source());
			out = Multisets.union(null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multisets;false;union;(Multiset,Multiset);;Element of Argument[0..1];Element of ReturnValue;value;manual"
			Multiset out = null;
			Multiset in = (Multiset)ImmutableMultiset.of(source());
			out = Multisets.union(in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multisets;false;unmodifiableMultiset;(ImmutableMultiset);;Element of Argument[0];Element of ReturnValue;value;manual"
			Multiset out = null;
			ImmutableMultiset in = (ImmutableMultiset)ImmutableMultiset.of(source());
			out = Multisets.unmodifiableMultiset(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multisets;false;unmodifiableMultiset;(Multiset);;Element of Argument[0];Element of ReturnValue;value;manual"
			Multiset out = null;
			Multiset in = (Multiset)ImmutableMultiset.of(source());
			out = Multisets.unmodifiableMultiset(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Multisets;false;unmodifiableSortedMultiset;(SortedMultiset);;Element of Argument[0];Element of ReturnValue;value;manual"
			SortedMultiset out = null;
			SortedMultiset in = (SortedMultiset)ImmutableSortedMultiset.of((Comparable)source());
			out = Multisets.unmodifiableSortedMultiset(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;MutableClassToInstanceMap;true;create;(Map);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			MutableClassToInstanceMap out = null;
			Map in = (Map)Map.of(source(), null);
			out = MutableClassToInstanceMap.create(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;MutableClassToInstanceMap;true;create;(Map);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			MutableClassToInstanceMap out = null;
			Map in = (Map)Map.of(null, source());
			out = MutableClassToInstanceMap.create(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ObjectArrays;false;concat;(Object,Object[]);;Argument[0];ArrayElement of ReturnValue;value;manual"
			Object[] out = null;
			Object in = (Object)source();
			out = ObjectArrays.concat(in, (Object[])null);
			sink(getArrayElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ObjectArrays;false;concat;(Object,Object[]);;ArrayElement of Argument[1];ArrayElement of ReturnValue;value;manual"
			Object[] out = null;
			Object[] in = (Object[])new Object[]{source()};
			out = ObjectArrays.concat((Object)null, in);
			sink(getArrayElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ObjectArrays;false;concat;(Object[],Object);;Argument[1];ArrayElement of ReturnValue;value;manual"
			Object[] out = null;
			Object in = (Object)source();
			out = ObjectArrays.concat((Object[])null, in);
			sink(getArrayElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ObjectArrays;false;concat;(Object[],Object);;ArrayElement of Argument[0];ArrayElement of ReturnValue;value;manual"
			Object[] out = null;
			Object[] in = (Object[])new Object[]{source()};
			out = ObjectArrays.concat(in, (Object)null);
			sink(getArrayElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ObjectArrays;false;concat;(Object[],Object[],Class);;ArrayElement of Argument[0..1];ArrayElement of ReturnValue;value;manual"
			Object[] out = null;
			Object[] in = (Object[])new Object[]{source()};
			out = ObjectArrays.concat(null, in, null);
			sink(getArrayElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;ObjectArrays;false;concat;(Object[],Object[],Class);;ArrayElement of Argument[0..1];ArrayElement of ReturnValue;value;manual"
			Object[] out = null;
			Object[] in = (Object[])new Object[]{source()};
			out = ObjectArrays.concat(in, null, null);
			sink(getArrayElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Queues;false;drain;(BlockingQueue,Collection,int,Duration);;Element of Argument[0];Element of Argument[1];value;manual"
			Collection out = null;
			BlockingQueue in = (BlockingQueue)newWithElementDefault(source());
			Queues.drain(in, out, 0, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Queues;false;drain;(BlockingQueue,Collection,int,long,TimeUnit);;Element of Argument[0];Element of Argument[1];value;manual"
			Collection out = null;
			BlockingQueue in = (BlockingQueue)newWithElementDefault(source());
			Queues.drain(in, out, 0, 0L, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Queues;false;newArrayDeque;(Iterable);;Element of Argument[0];Element of ReturnValue;value;manual"
			ArrayDeque out = null;
			Iterable in = (Iterable)List.of(source());
			out = Queues.newArrayDeque(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Queues;false;newConcurrentLinkedQueue;(Iterable);;Element of Argument[0];Element of ReturnValue;value;manual"
			ConcurrentLinkedQueue out = null;
			Iterable in = (Iterable)List.of(source());
			out = Queues.newConcurrentLinkedQueue(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Queues;false;newLinkedBlockingDeque;(Iterable);;Element of Argument[0];Element of ReturnValue;value;manual"
			LinkedBlockingDeque out = null;
			Iterable in = (Iterable)List.of(source());
			out = Queues.newLinkedBlockingDeque(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Queues;false;newLinkedBlockingQueue;(Iterable);;Element of Argument[0];Element of ReturnValue;value;manual"
			LinkedBlockingQueue out = null;
			Iterable in = (Iterable)List.of(source());
			out = Queues.newLinkedBlockingQueue(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Queues;false;newPriorityBlockingQueue;(Iterable);;Element of Argument[0];Element of ReturnValue;value;manual"
			PriorityBlockingQueue out = null;
			Iterable in = (Iterable)List.of(source());
			out = Queues.newPriorityBlockingQueue(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Queues;false;newPriorityQueue;(Iterable);;Element of Argument[0];Element of ReturnValue;value;manual"
			PriorityQueue out = null;
			Iterable in = (Iterable)List.of(source());
			out = Queues.newPriorityQueue(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Queues;false;synchronizedDeque;(Deque);;Element of Argument[0];Element of ReturnValue;value;manual"
			Deque out = null;
			Deque in = (Deque)newWithElementDefault(source());
			out = Queues.synchronizedDeque(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Queues;false;synchronizedQueue;(Queue);;Element of Argument[0];Element of ReturnValue;value;manual"
			Queue out = null;
			Queue in = (Queue)newWithElementDefault(source());
			out = Queues.synchronizedQueue(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Sets$SetView;true;copyInto;(Set);;Element of Argument[-1];Element of Argument[0];value;manual"
			Set out = null;
			Sets.SetView in = (Sets.SetView)Sets.union(Set.of(source()), null);
			in.copyInto(out);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Sets$SetView;true;immutableCopy;();;Element of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			Sets.SetView in = (Sets.SetView)Sets.union(Set.of(source()), null);
			out = in.immutableCopy();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;cartesianProduct;(List);;Element of Element of Argument[0];Element of Element of ReturnValue;value;manual"
			Set<List> out = null;
			List in = (List)List.of(Set.of(source()));
			out = Sets.cartesianProduct(in);
			sink(getElement(getElement(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;cartesianProduct;(Set[]);;Element of ArrayElement of Argument[0];Element of Element of ReturnValue;value;manual"
			Set<List> out = null;
			Set[] in = (Set[])new Set[]{Set.of(source())};
			out = Sets.cartesianProduct(in);
			sink(getElement(getElement(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;combinations;(Set,int);;Element of Argument[0];Element of Element of ReturnValue;value;manual"
			Set<Set> out = null;
			Set in = (Set)Set.of(source());
			out = Sets.combinations(in, 0);
			sink(getElement(getElement(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;difference;(Set,Set);;Element of Argument[0];Element of ReturnValue;value;manual"
			Sets.SetView out = null;
			Set in = (Set)Set.of(source());
			out = Sets.difference(in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;filter;(NavigableSet,Predicate);;Element of Argument[0];Element of ReturnValue;value;manual"
			NavigableSet out = null;
			NavigableSet in = (NavigableSet)ImmutableSortedSet.of((Comparable)source());
			out = Sets.filter(in, (Predicate)null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;filter;(Set,Predicate);;Element of Argument[0];Element of ReturnValue;value;manual"
			Set out = null;
			Set in = (Set)Set.of(source());
			out = Sets.filter(in, (Predicate)null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;filter;(SortedSet,Predicate);;Element of Argument[0];Element of ReturnValue;value;manual"
			SortedSet out = null;
			SortedSet in = (SortedSet)ImmutableSortedSet.of((Comparable)source());
			out = Sets.filter(in, (Predicate)null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;intersection;(Set,Set);;Element of Argument[0..1];Element of ReturnValue;value;manual"
			Sets.SetView out = null;
			Set in = (Set)Set.of(source());
			out = Sets.intersection(null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;intersection;(Set,Set);;Element of Argument[0..1];Element of ReturnValue;value;manual"
			Sets.SetView out = null;
			Set in = (Set)Set.of(source());
			out = Sets.intersection(in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;newConcurrentHashSet;(Iterable);;Element of Argument[0];Element of ReturnValue;value;manual"
			Set out = null;
			Iterable in = (Iterable)List.of(source());
			out = Sets.newConcurrentHashSet(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;newCopyOnWriteArraySet;(Iterable);;Element of Argument[0];Element of ReturnValue;value;manual"
			CopyOnWriteArraySet out = null;
			Iterable in = (Iterable)List.of(source());
			out = Sets.newCopyOnWriteArraySet(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;newHashSet;(Iterable);;Element of Argument[0];Element of ReturnValue;value;manual"
			HashSet out = null;
			Iterable in = (Iterable)List.of(source());
			out = Sets.newHashSet(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;newHashSet;(Iterator);;Element of Argument[0];Element of ReturnValue;value;manual"
			HashSet out = null;
			Iterator in = (Iterator)List.of(source()).iterator();
			out = Sets.newHashSet(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;newHashSet;(Object[]);;ArrayElement of Argument[0];Element of ReturnValue;value;manual"
			HashSet out = null;
			Object[] in = (Object[])new Object[]{source()};
			out = Sets.newHashSet(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;newLinkedHashSet;(Iterable);;Element of Argument[0];Element of ReturnValue;value;manual"
			LinkedHashSet out = null;
			Iterable in = (Iterable)List.of(source());
			out = Sets.newLinkedHashSet(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;newSetFromMap;(Map);;MapKey of Argument[0];Element of ReturnValue;value;manual"
			Set out = null;
			Map in = (Map)Map.of(source(), null);
			out = Sets.newSetFromMap(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;newTreeSet;(Iterable);;Element of Argument[0];Element of ReturnValue;value;manual"
			TreeSet out = null;
			Iterable in = (Iterable)List.of(source());
			out = Sets.newTreeSet(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;powerSet;(Set);;Element of Argument[0];Element of Element of ReturnValue;value;manual"
			Set<Set> out = null;
			Set in = (Set)Set.of(source());
			out = Sets.powerSet(in);
			sink(getElement(getElement(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;subSet;(NavigableSet,Range);;Element of Argument[0];Element of ReturnValue;value;manual"
			NavigableSet out = null;
			NavigableSet in = (NavigableSet)ImmutableSortedSet.of((Comparable)source());
			out = Sets.subSet(in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;symmetricDifference;(Set,Set);;Element of Argument[0..1];Element of ReturnValue;value;manual"
			Sets.SetView out = null;
			Set in = (Set)Set.of(source());
			out = Sets.symmetricDifference(null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;symmetricDifference;(Set,Set);;Element of Argument[0..1];Element of ReturnValue;value;manual"
			Sets.SetView out = null;
			Set in = (Set)Set.of(source());
			out = Sets.symmetricDifference(in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;synchronizedNavigableSet;(NavigableSet);;Element of Argument[0];Element of ReturnValue;value;manual"
			NavigableSet out = null;
			NavigableSet in = (NavigableSet)ImmutableSortedSet.of((Comparable)source());
			out = Sets.synchronizedNavigableSet(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;union;(Set,Set);;Element of Argument[0..1];Element of ReturnValue;value;manual"
			Sets.SetView out = null;
			Set in = (Set)Set.of(source());
			out = Sets.union(null, in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;union;(Set,Set);;Element of Argument[0..1];Element of ReturnValue;value;manual"
			Sets.SetView out = null;
			Set in = (Set)Set.of(source());
			out = Sets.union(in, null);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Sets;false;unmodifiableNavigableSet;(NavigableSet);;Element of Argument[0];Element of ReturnValue;value;manual"
			NavigableSet out = null;
			NavigableSet in = (NavigableSet)ImmutableSortedSet.of((Comparable)source());
			out = Sets.unmodifiableNavigableSet(in);
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table$Cell;true;getColumnKey;();;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];ReturnValue;value;manual"
			Object out = null;
			Table.Cell in = (Table.Cell)newTableCell(null, source(), null);
			out = in.getColumnKey();
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table$Cell;true;getRowKey;();;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];ReturnValue;value;manual"
			Object out = null;
			Table.Cell in = (Table.Cell)newTableCell(source(), null, null);
			out = in.getRowKey();
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table$Cell;true;getValue;();;MapValue of Argument[-1];ReturnValue;value;manual"
			Object out = null;
			Table.Cell in = (Table.Cell)newTableCell(null, null, source());
			out = in.getValue();
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;cellSet;();;MapValue of Argument[-1];MapValue of Element of ReturnValue;value;manual"
			Set<Table.Cell> out = null;
			Table in = (Table)newTable(null, null, source());
			out = in.cellSet();
			sink(getElement(out).getValue()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;cellSet;();;MapValue of Argument[-1];MapValue of Element of ReturnValue;value;manual"
			Set<Table.Cell> out = null;
			ArrayTable in = (ArrayTable)ArrayTable.create(ImmutableTable.of(null, null, source()));
			out = in.cellSet();
			sink(getElement(out).getValue()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;cellSet;();;MapValue of Argument[-1];MapValue of Element of ReturnValue;value;manual"
			ImmutableSet<Table.Cell> out = null;
			ImmutableTable in = (ImmutableTable)ImmutableTable.of(null, null, source());
			out = in.cellSet();
			sink(getElement(out).getValue()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;cellSet;();;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];SyntheticField[com.google.common.collect.Table.columnKey] of Element of ReturnValue;value;manual"
			Set<Table.Cell> out = null;
			Table in = (Table)newTable(null, source(), null);
			out = in.cellSet();
			sink(getElement(out).getColumnKey()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;cellSet;();;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];SyntheticField[com.google.common.collect.Table.columnKey] of Element of ReturnValue;value;manual"
			Set<Table.Cell> out = null;
			ArrayTable in = (ArrayTable)ArrayTable.create(ImmutableTable.of(null, source(), null));
			out = in.cellSet();
			sink(getElement(out).getColumnKey()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;cellSet;();;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];SyntheticField[com.google.common.collect.Table.columnKey] of Element of ReturnValue;value;manual"
			ImmutableSet<Table.Cell> out = null;
			ImmutableTable in = (ImmutableTable)ImmutableTable.of(null, source(), null);
			out = in.cellSet();
			sink(getElement(out).getColumnKey()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;cellSet;();;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];SyntheticField[com.google.common.collect.Table.rowKey] of Element of ReturnValue;value;manual"
			Set<Table.Cell> out = null;
			Table in = (Table)newTable(source(), null, null);
			out = in.cellSet();
			sink(getElement(out).getRowKey()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;cellSet;();;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];SyntheticField[com.google.common.collect.Table.rowKey] of Element of ReturnValue;value;manual"
			Set<Table.Cell> out = null;
			ArrayTable in = (ArrayTable)ArrayTable.create(ImmutableTable.of(source(), null, null));
			out = in.cellSet();
			sink(getElement(out).getRowKey()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;cellSet;();;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];SyntheticField[com.google.common.collect.Table.rowKey] of Element of ReturnValue;value;manual"
			ImmutableSet<Table.Cell> out = null;
			ImmutableTable in = (ImmutableTable)ImmutableTable.of(source(), null, null);
			out = in.cellSet();
			sink(getElement(out).getRowKey()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;column;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value;manual"
			Map out = null;
			Table in = (Table)newTable(null, null, source());
			out = in.column(null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;column;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value;manual"
			Map out = null;
			ArrayTable in = (ArrayTable)ArrayTable.create(ImmutableTable.of(null, null, source()));
			out = in.column(null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;column;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value;manual"
			ImmutableMap out = null;
			ImmutableTable in = (ImmutableTable)ImmutableTable.of(null, null, source());
			out = in.column(null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;column;(Object);;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];MapKey of ReturnValue;value;manual"
			Map out = null;
			Table in = (Table)newTable(source(), null, null);
			out = in.column(null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;column;(Object);;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];MapKey of ReturnValue;value;manual"
			Map out = null;
			ArrayTable in = (ArrayTable)ArrayTable.create(ImmutableTable.of(source(), null, null));
			out = in.column(null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;column;(Object);;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];MapKey of ReturnValue;value;manual"
			ImmutableMap out = null;
			ImmutableTable in = (ImmutableTable)ImmutableTable.of(source(), null, null);
			out = in.column(null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;columnKeySet;();;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];Element of ReturnValue;value;manual"
			Set out = null;
			Table in = (Table)newTable(null, source(), null);
			out = in.columnKeySet();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;columnKeySet;();;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			ImmutableTable in = (ImmutableTable)ImmutableTable.of(null, source(), null);
			out = in.columnKeySet();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;columnKeySet;();;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			ArrayTable in = (ArrayTable)ArrayTable.create(ImmutableTable.of(null, source(), null));
			out = in.columnKeySet();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;columnMap;();;MapValue of Argument[-1];MapValue of MapValue of ReturnValue;value;manual"
			Map<Object,Map> out = null;
			Table in = (Table)newTable(null, null, source());
			out = in.columnMap();
			sink(getMapValue(getMapValue(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;columnMap;();;MapValue of Argument[-1];MapValue of MapValue of ReturnValue;value;manual"
			Map<Object,Map> out = null;
			ArrayTable in = (ArrayTable)ArrayTable.create(ImmutableTable.of(null, null, source()));
			out = in.columnMap();
			sink(getMapValue(getMapValue(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;columnMap;();;MapValue of Argument[-1];MapValue of MapValue of ReturnValue;value;manual"
			ImmutableMap<Object,Map> out = null;
			ImmutableTable in = (ImmutableTable)ImmutableTable.of(null, null, source());
			out = in.columnMap();
			sink(getMapValue(getMapValue(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;columnMap;();;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];MapKey of ReturnValue;value;manual"
			Map out = null;
			Table in = (Table)newTable(null, source(), null);
			out = in.columnMap();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;columnMap;();;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];MapKey of ReturnValue;value;manual"
			Map out = null;
			ArrayTable in = (ArrayTable)ArrayTable.create(ImmutableTable.of(null, source(), null));
			out = in.columnMap();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;columnMap;();;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];MapKey of ReturnValue;value;manual"
			ImmutableMap out = null;
			ImmutableTable in = (ImmutableTable)ImmutableTable.of(null, source(), null);
			out = in.columnMap();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;columnMap;();;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];MapKey of MapValue of ReturnValue;value;manual"
			Map<Object,Map> out = null;
			Table in = (Table)newTable(source(), null, null);
			out = in.columnMap();
			sink(getMapKey(getMapValue(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;columnMap;();;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];MapKey of MapValue of ReturnValue;value;manual"
			Map<Object,Map> out = null;
			ArrayTable in = (ArrayTable)ArrayTable.create(ImmutableTable.of(source(), null, null));
			out = in.columnMap();
			sink(getMapKey(getMapValue(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;columnMap;();;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];MapKey of MapValue of ReturnValue;value;manual"
			ImmutableMap<Object,Map> out = null;
			ImmutableTable in = (ImmutableTable)ImmutableTable.of(source(), null, null);
			out = in.columnMap();
			sink(getMapKey(getMapValue(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;get;(Object,Object);;MapValue of Argument[-1];ReturnValue;value;manual"
			Object out = null;
			Table in = (Table)newTable(null, null, source());
			out = in.get(null, null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;get;(Object,Object);;MapValue of Argument[-1];ReturnValue;value;manual"
			Object out = null;
			HashBasedTable in = (HashBasedTable)HashBasedTable.create(ImmutableTable.of(null, null, source()));
			out = in.get(null, null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;get;(Object,Object);;MapValue of Argument[-1];ReturnValue;value;manual"
			Object out = null;
			ArrayTable in = (ArrayTable)ArrayTable.create(ImmutableTable.of(null, null, source()));
			out = in.get(null, null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;put;(Object,Object,Object);;Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];value;manual"
			Table out = null;
			Object in = (Object)source();
			out.put(in, null, null);
			sink(getTable_rowKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;put;(Object,Object,Object);;Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];value;manual"
			ImmutableTable out = null;
			Object in = (Object)source();
			out.put(in, null, null);
			sink(getTable_rowKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;put;(Object,Object,Object);;Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];value;manual"
			ArrayTable out = null;
			Object in = (Object)source();
			out.put(in, null, null);
			sink(getTable_rowKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;put;(Object,Object,Object);;Argument[1];SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];value;manual"
			Table out = null;
			Object in = (Object)source();
			out.put(null, in, null);
			sink(getTable_columnKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;put;(Object,Object,Object);;Argument[1];SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];value;manual"
			ImmutableTable out = null;
			Object in = (Object)source();
			out.put(null, in, null);
			sink(getTable_columnKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;put;(Object,Object,Object);;Argument[1];SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];value;manual"
			ArrayTable out = null;
			Object in = (Object)source();
			out.put(null, in, null);
			sink(getTable_columnKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;put;(Object,Object,Object);;Argument[2];MapValue of Argument[-1];value;manual"
			Table out = null;
			Object in = (Object)source();
			out.put(null, null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;put;(Object,Object,Object);;Argument[2];MapValue of Argument[-1];value;manual"
			ImmutableTable out = null;
			Object in = (Object)source();
			out.put(null, null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;put;(Object,Object,Object);;Argument[2];MapValue of Argument[-1];value;manual"
			ArrayTable out = null;
			Object in = (Object)source();
			out.put(null, null, in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;putAll;(Table);;MapValue of Argument[0];MapValue of Argument[-1];value;manual"
			Table out = null;
			Table in = (Table)newTable(null, null, source());
			out.putAll(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;putAll;(Table);;MapValue of Argument[0];MapValue of Argument[-1];value;manual"
			ImmutableTable out = null;
			Table in = (Table)ImmutableTable.of(null, null, source());
			out.putAll(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;putAll;(Table);;MapValue of Argument[0];MapValue of Argument[-1];value;manual"
			ArrayTable out = null;
			Table in = (Table)ArrayTable.create(ImmutableTable.of(null, null, source()));
			out.putAll(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;putAll;(Table);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[0];SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];value;manual"
			Table out = null;
			Table in = (Table)newTable(null, source(), null);
			out.putAll(in);
			sink(getTable_columnKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;putAll;(Table);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[0];SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];value;manual"
			ImmutableTable out = null;
			Table in = (Table)ImmutableTable.of(null, source(), null);
			out.putAll(in);
			sink(getTable_columnKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;putAll;(Table);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[0];SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];value;manual"
			ArrayTable out = null;
			Table in = (Table)ArrayTable.create(ImmutableTable.of(null, source(), null));
			out.putAll(in);
			sink(getTable_columnKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;putAll;(Table);;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];value;manual"
			Table out = null;
			Table in = (Table)newTable(source(), null, null);
			out.putAll(in);
			sink(getTable_rowKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;putAll;(Table);;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];value;manual"
			ImmutableTable out = null;
			Table in = (Table)ImmutableTable.of(source(), null, null);
			out.putAll(in);
			sink(getTable_rowKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;putAll;(Table);;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];value;manual"
			ArrayTable out = null;
			Table in = (Table)ArrayTable.create(ImmutableTable.of(source(), null, null));
			out.putAll(in);
			sink(getTable_rowKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;remove;(Object,Object);;MapValue of Argument[-1];ReturnValue;value;manual"
			Object out = null;
			Table in = (Table)newTable(null, null, source());
			out = in.remove(null, null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;remove;(Object,Object);;MapValue of Argument[-1];ReturnValue;value;manual"
			Object out = null;
			ImmutableTable in = (ImmutableTable)ImmutableTable.of(null, null, source());
			out = in.remove(null, null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;remove;(Object,Object);;MapValue of Argument[-1];ReturnValue;value;manual"
			Object out = null;
			HashBasedTable in = (HashBasedTable)HashBasedTable.create(ImmutableTable.of(null, null, source()));
			out = in.remove(null, null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;remove;(Object,Object);;MapValue of Argument[-1];ReturnValue;value;manual"
			Object out = null;
			ArrayTable in = (ArrayTable)ArrayTable.create(ImmutableTable.of(null, null, source()));
			out = in.remove(null, null);
			sink(out); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;row;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value;manual"
			SortedMap out = null;
			TreeBasedTable in = (TreeBasedTable)newTable(null, null, source());
			out = in.row(null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;row;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value;manual"
			Map out = null;
			Table in = (Table)newTable(null, null, source());
			out = in.row(null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;row;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value;manual"
			Map out = null;
			ArrayTable in = (ArrayTable)ArrayTable.create(ImmutableTable.of(null, null, source()));
			out = in.row(null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;row;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;value;manual"
			ImmutableMap out = null;
			ImmutableTable in = (ImmutableTable)ImmutableTable.of(null, null, source());
			out = in.row(null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;row;(Object);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];MapKey of ReturnValue;value;manual"
			SortedMap out = null;
			TreeBasedTable in = (TreeBasedTable)newTable(null, source(), null);
			out = in.row(null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;row;(Object);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];MapKey of ReturnValue;value;manual"
			Map out = null;
			Table in = (Table)newTable(null, source(), null);
			out = in.row(null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;row;(Object);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];MapKey of ReturnValue;value;manual"
			Map out = null;
			ArrayTable in = (ArrayTable)ArrayTable.create(ImmutableTable.of(null, source(), null));
			out = in.row(null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;row;(Object);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];MapKey of ReturnValue;value;manual"
			ImmutableMap out = null;
			ImmutableTable in = (ImmutableTable)ImmutableTable.of(null, source(), null);
			out = in.row(null);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;rowKeySet;();;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];Element of ReturnValue;value;manual"
			SortedSet out = null;
			TreeBasedTable in = (TreeBasedTable)newTable(source(), null, null);
			out = in.rowKeySet();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;rowKeySet;();;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];Element of ReturnValue;value;manual"
			SortedSet out = null;
			RowSortedTable in = (RowSortedTable)newTable(source(), null, null);
			out = in.rowKeySet();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;rowKeySet;();;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];Element of ReturnValue;value;manual"
			Set out = null;
			Table in = (Table)newTable(source(), null, null);
			out = in.rowKeySet();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;rowKeySet;();;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			ImmutableTable in = (ImmutableTable)ImmutableTable.of(source(), null, null);
			out = in.rowKeySet();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;rowKeySet;();;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableSet out = null;
			ArrayTable in = (ArrayTable)ArrayTable.create(ImmutableTable.of(source(), null, null));
			out = in.rowKeySet();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;rowMap;();;MapValue of Argument[-1];MapValue of MapValue of ReturnValue;value;manual"
			SortedMap<Object,Map> out = null;
			TreeBasedTable in = (TreeBasedTable)newTable(null, null, source());
			out = in.rowMap();
			sink(getMapValue(getMapValue(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;rowMap;();;MapValue of Argument[-1];MapValue of MapValue of ReturnValue;value;manual"
			SortedMap<Object,Map> out = null;
			RowSortedTable in = (RowSortedTable)newTable(null, null, source());
			out = in.rowMap();
			sink(getMapValue(getMapValue(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;rowMap;();;MapValue of Argument[-1];MapValue of MapValue of ReturnValue;value;manual"
			Map<Object,Map> out = null;
			Table in = (Table)newTable(null, null, source());
			out = in.rowMap();
			sink(getMapValue(getMapValue(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;rowMap;();;MapValue of Argument[-1];MapValue of MapValue of ReturnValue;value;manual"
			Map<Object,Map> out = null;
			ArrayTable in = (ArrayTable)ArrayTable.create(ImmutableTable.of(null, null, source()));
			out = in.rowMap();
			sink(getMapValue(getMapValue(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;rowMap;();;MapValue of Argument[-1];MapValue of MapValue of ReturnValue;value;manual"
			ImmutableMap<Object,Map> out = null;
			ImmutableTable in = (ImmutableTable)ImmutableTable.of(null, null, source());
			out = in.rowMap();
			sink(getMapValue(getMapValue(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;rowMap;();;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];MapKey of MapValue of ReturnValue;value;manual"
			SortedMap<Object,Map> out = null;
			TreeBasedTable in = (TreeBasedTable)newTable(null, source(), null);
			out = in.rowMap();
			sink(getMapKey(getMapValue(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;rowMap;();;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];MapKey of MapValue of ReturnValue;value;manual"
			SortedMap<Object,Map> out = null;
			RowSortedTable in = (RowSortedTable)newTable(null, source(), null);
			out = in.rowMap();
			sink(getMapKey(getMapValue(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;rowMap;();;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];MapKey of MapValue of ReturnValue;value;manual"
			Map<Object,Map> out = null;
			Table in = (Table)newTable(null, source(), null);
			out = in.rowMap();
			sink(getMapKey(getMapValue(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;rowMap;();;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];MapKey of MapValue of ReturnValue;value;manual"
			Map<Object,Map> out = null;
			ArrayTable in = (ArrayTable)ArrayTable.create(ImmutableTable.of(null, source(), null));
			out = in.rowMap();
			sink(getMapKey(getMapValue(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;rowMap;();;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[-1];MapKey of MapValue of ReturnValue;value;manual"
			ImmutableMap<Object,Map> out = null;
			ImmutableTable in = (ImmutableTable)ImmutableTable.of(null, source(), null);
			out = in.rowMap();
			sink(getMapKey(getMapValue(out))); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;rowMap;();;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];MapKey of ReturnValue;value;manual"
			SortedMap out = null;
			TreeBasedTable in = (TreeBasedTable)newTable(source(), null, null);
			out = in.rowMap();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;rowMap;();;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];MapKey of ReturnValue;value;manual"
			SortedMap out = null;
			RowSortedTable in = (RowSortedTable)newTable(source(), null, null);
			out = in.rowMap();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;rowMap;();;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];MapKey of ReturnValue;value;manual"
			Map out = null;
			Table in = (Table)newTable(source(), null, null);
			out = in.rowMap();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;rowMap;();;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];MapKey of ReturnValue;value;manual"
			Map out = null;
			ArrayTable in = (ArrayTable)ArrayTable.create(ImmutableTable.of(source(), null, null));
			out = in.rowMap();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;rowMap;();;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[-1];MapKey of ReturnValue;value;manual"
			ImmutableMap out = null;
			ImmutableTable in = (ImmutableTable)ImmutableTable.of(source(), null, null);
			out = in.rowMap();
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;values;();;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			ImmutableCollection out = null;
			ImmutableTable in = (ImmutableTable)ImmutableTable.of(null, null, source());
			out = in.values();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;values;();;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			Collection out = null;
			Table in = (Table)newTable(null, null, source());
			out = in.values();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Table;true;values;();;MapValue of Argument[-1];Element of ReturnValue;value;manual"
			Collection out = null;
			ArrayTable in = (ArrayTable)ArrayTable.create(ImmutableTable.of(null, null, source()));
			out = in.values();
			sink(getElement(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Tables;false;immutableCell;(Object,Object,Object);;Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of ReturnValue;value;manual"
			Table.Cell out = null;
			Object in = (Object)source();
			out = Tables.immutableCell(in, null, null);
			sink(out.getRowKey()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Tables;false;immutableCell;(Object,Object,Object);;Argument[1];SyntheticField[com.google.common.collect.Table.columnKey] of ReturnValue;value;manual"
			Table.Cell out = null;
			Object in = (Object)source();
			out = Tables.immutableCell(null, in, null);
			sink(out.getColumnKey()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Tables;false;immutableCell;(Object,Object,Object);;Argument[2];MapValue of ReturnValue;value;manual"
			Table.Cell out = null;
			Object in = (Object)source();
			out = Tables.immutableCell(null, null, in);
			sink(out.getValue()); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Tables;false;newCustomTable;(Map,Supplier);;MapKey of Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of ReturnValue;value;manual"
			Table out = null;
			Map in = (Map)Map.of(source(), null);
			out = Tables.newCustomTable(in, null);
			sink(getTable_rowKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Tables;false;newCustomTable;(Map,Supplier);;MapKey of MapValue of Argument[0];SyntheticField[com.google.common.collect.Table.columnKey] of ReturnValue;value;manual"
			Table out = null;
			Map in = (Map)Map.of(null, Map.of(source(), null));
			out = Tables.newCustomTable(in, null);
			sink(getTable_columnKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Tables;false;newCustomTable;(Map,Supplier);;MapValue of MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			Table out = null;
			Map in = (Map)Map.of(null, Map.of(null, source()));
			out = Tables.newCustomTable(in, null);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Tables;false;synchronizedTable;(Table);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			Table out = null;
			Table in = (Table)newTable(null, null, source());
			out = Tables.synchronizedTable(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Tables;false;synchronizedTable;(Table);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[0];SyntheticField[com.google.common.collect.Table.columnKey] of ReturnValue;value;manual"
			Table out = null;
			Table in = (Table)newTable(null, source(), null);
			out = Tables.synchronizedTable(in);
			sink(getTable_columnKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Tables;false;synchronizedTable;(Table);;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of ReturnValue;value;manual"
			Table out = null;
			Table in = (Table)newTable(source(), null, null);
			out = Tables.synchronizedTable(in);
			sink(getTable_rowKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Tables;false;transformValues;(Table,Function);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[0];SyntheticField[com.google.common.collect.Table.columnKey] of ReturnValue;value;manual"
			Table out = null;
			Table in = (Table)newTable(null, source(), null);
			out = Tables.transformValues(in, null);
			sink(getTable_columnKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Tables;false;transformValues;(Table,Function);;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of ReturnValue;value;manual"
			Table out = null;
			Table in = (Table)newTable(source(), null, null);
			out = Tables.transformValues(in, null);
			sink(getTable_rowKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Tables;false;transpose;(Table);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			Table out = null;
			Table in = (Table)newTable(null, null, source());
			out = Tables.transpose(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Tables;false;transpose;(Table);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of ReturnValue;value;manual"
			Table out = null;
			Table in = (Table)newTable(null, source(), null);
			out = Tables.transpose(in);
			sink(getTable_rowKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Tables;false;transpose;(Table);;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[0];SyntheticField[com.google.common.collect.Table.columnKey] of ReturnValue;value;manual"
			Table out = null;
			Table in = (Table)newTable(source(), null, null);
			out = Tables.transpose(in);
			sink(getTable_columnKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Tables;false;unmodifiableRowSortedTable;(RowSortedTable);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			RowSortedTable out = null;
			RowSortedTable in = (RowSortedTable)newTable(null, null, source());
			out = Tables.unmodifiableRowSortedTable(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Tables;false;unmodifiableRowSortedTable;(RowSortedTable);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[0];SyntheticField[com.google.common.collect.Table.columnKey] of ReturnValue;value;manual"
			RowSortedTable out = null;
			RowSortedTable in = (RowSortedTable)newTable(null, source(), null);
			out = Tables.unmodifiableRowSortedTable(in);
			sink(getTable_columnKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Tables;false;unmodifiableRowSortedTable;(RowSortedTable);;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of ReturnValue;value;manual"
			RowSortedTable out = null;
			RowSortedTable in = (RowSortedTable)newTable(source(), null, null);
			out = Tables.unmodifiableRowSortedTable(in);
			sink(getTable_rowKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Tables;false;unmodifiableTable;(Table);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			Table out = null;
			Table in = (Table)newTable(null, null, source());
			out = Tables.unmodifiableTable(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Tables;false;unmodifiableTable;(Table);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[0];SyntheticField[com.google.common.collect.Table.columnKey] of ReturnValue;value;manual"
			Table out = null;
			Table in = (Table)newTable(null, source(), null);
			out = Tables.unmodifiableTable(in);
			sink(getTable_columnKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;Tables;false;unmodifiableTable;(Table);;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of ReturnValue;value;manual"
			Table out = null;
			Table in = (Table)newTable(source(), null, null);
			out = Tables.unmodifiableTable(in);
			sink(getTable_rowKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;TreeBasedTable;true;create;(TreeBasedTable);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			TreeBasedTable out = null;
			TreeBasedTable in = (TreeBasedTable)newTable(null, null, source());
			out = TreeBasedTable.create(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;TreeBasedTable;true;create;(TreeBasedTable);;SyntheticField[com.google.common.collect.Table.columnKey] of Argument[0];SyntheticField[com.google.common.collect.Table.columnKey] of ReturnValue;value;manual"
			TreeBasedTable out = null;
			TreeBasedTable in = (TreeBasedTable)newTable(null, source(), null);
			out = TreeBasedTable.create(in);
			sink(getTable_columnKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;TreeBasedTable;true;create;(TreeBasedTable);;SyntheticField[com.google.common.collect.Table.rowKey] of Argument[0];SyntheticField[com.google.common.collect.Table.rowKey] of ReturnValue;value;manual"
			TreeBasedTable out = null;
			TreeBasedTable in = (TreeBasedTable)newTable(source(), null, null);
			out = TreeBasedTable.create(in);
			sink(getTable_rowKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;TreeMultimap;true;create;(Multimap);;MapKey of Argument[0];MapKey of ReturnValue;value;manual"
			TreeMultimap out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(source(), null);
			out = TreeMultimap.create(in);
			sink(getMapKey(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;TreeMultimap;true;create;(Multimap);;MapValue of Argument[0];MapValue of ReturnValue;value;manual"
			TreeMultimap out = null;
			Multimap in = (Multimap)ImmutableMultimap.of(null, source());
			out = TreeMultimap.create(in);
			sink(getMapValue(out)); // $ hasValueFlow
		}
		{
			// "com.google.common.collect;TreeMultiset;true;create;(Iterable);;Element of Argument[0];Element of ReturnValue;value;manual"
			TreeMultiset out = null;
			Iterable in = (Iterable)List.of(source());
			out = TreeMultiset.create(in);
			sink(getElement(out)); // $ hasValueFlow
		}

	}

}