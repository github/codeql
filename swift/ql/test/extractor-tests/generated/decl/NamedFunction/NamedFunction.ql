// generated by codegen/codegen.py, do not edit
import codeql.swift.elements
import TestUtils

query predicate instances(
  NamedFunction x, string getModule__label, ModuleDecl getModule, string getInterfaceType__label,
  Type getInterfaceType
) {
  toBeTested(x) and
  not x.isUnknown() and
  getModule__label = "getModule:" and
  getModule = x.getModule() and
  getInterfaceType__label = "getInterfaceType:" and
  getInterfaceType = x.getInterfaceType()
}

query predicate getGenericTypeParam(
  NamedFunction x, int index, GenericTypeParamDecl getGenericTypeParam
) {
  toBeTested(x) and not x.isUnknown() and getGenericTypeParam = x.getGenericTypeParam(index)
}

query predicate getMember(NamedFunction x, int index, Decl getMember) {
  toBeTested(x) and not x.isUnknown() and getMember = x.getMember(index)
}

query predicate getName(NamedFunction x, string getName) {
  toBeTested(x) and not x.isUnknown() and getName = x.getName()
}

query predicate getSelfParam(NamedFunction x, ParamDecl getSelfParam) {
  toBeTested(x) and not x.isUnknown() and getSelfParam = x.getSelfParam()
}

query predicate getParam(NamedFunction x, int index, ParamDecl getParam) {
  toBeTested(x) and not x.isUnknown() and getParam = x.getParam(index)
}

query predicate getBody(NamedFunction x, BraceStmt getBody) {
  toBeTested(x) and not x.isUnknown() and getBody = x.getBody()
}

query predicate getCapture(NamedFunction x, int index, CapturedDecl getCapture) {
  toBeTested(x) and not x.isUnknown() and getCapture = x.getCapture(index)
}
