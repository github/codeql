// generated by codegen/codegen.py, do not edit
/**
 * This module provides the generated definition of `IfStmt`.
 * INTERNAL: Do not import directly.
 */

private import codeql.swift.generated.Synth
private import codeql.swift.generated.Raw
import codeql.swift.elements.stmt.internal.LabeledConditionalStmtImpl::Impl as LabeledConditionalStmtImpl
import codeql.swift.elements.stmt.Stmt

/**
 * INTERNAL: This module contains the fully generated definition of `IfStmt` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * INTERNAL: Do not reference the `Generated::IfStmt` class directly.
   * Use the subclass `IfStmt`, where the following predicates are available.
   */
  class IfStmt extends Synth::TIfStmt, LabeledConditionalStmtImpl::LabeledConditionalStmt {
    override string getAPrimaryQlClass() { result = "IfStmt" }

    /**
     * Gets the then of this if statement.
     */
    Stmt getThen() {
      result = Synth::convertStmtFromRaw(Synth::convertIfStmtToRaw(this).(Raw::IfStmt).getThen())
    }

    /**
     * Gets the else of this if statement, if it exists.
     */
    Stmt getElse() {
      result = Synth::convertStmtFromRaw(Synth::convertIfStmtToRaw(this).(Raw::IfStmt).getElse())
    }

    /**
     * Holds if `getElse()` exists.
     */
    final predicate hasElse() { exists(this.getElse()) }
  }
}
