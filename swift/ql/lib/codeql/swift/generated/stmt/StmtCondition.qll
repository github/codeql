// generated by codegen/codegen.py, do not edit
/**
 * This module provides the generated definition of `StmtCondition`.
 * INTERNAL: Do not import directly.
 */

private import codeql.swift.generated.Synth
private import codeql.swift.generated.Raw
import codeql.swift.elements.internal.AstNodeImpl::Impl as AstNodeImpl
import codeql.swift.elements.stmt.ConditionElement

/**
 * INTERNAL: This module contains the fully generated definition of `StmtCondition` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * INTERNAL: Do not reference the `Generated::StmtCondition` class directly.
   * Use the subclass `StmtCondition`, where the following predicates are available.
   */
  class StmtCondition extends Synth::TStmtCondition, AstNodeImpl::AstNode {
    override string getAPrimaryQlClass() { result = "StmtCondition" }

    /**
     * Gets the `index`th element of this statement condition (0-based).
     */
    ConditionElement getElement(int index) {
      result =
        Synth::convertConditionElementFromRaw(Synth::convertStmtConditionToRaw(this)
              .(Raw::StmtCondition)
              .getElement(index))
    }

    /**
     * Gets any of the elements of this statement condition.
     */
    final ConditionElement getAnElement() { result = this.getElement(_) }

    /**
     * Gets the number of elements of this statement condition.
     */
    final int getNumberOfElements() { result = count(int i | exists(this.getElement(i))) }
  }
}
