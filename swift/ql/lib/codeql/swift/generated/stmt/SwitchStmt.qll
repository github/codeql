// generated by codegen/codegen.py
private import codeql.swift.generated.Synth
private import codeql.swift.generated.Raw
import codeql.swift.elements.stmt.CaseStmt
import codeql.swift.elements.expr.Expr
import codeql.swift.elements.stmt.LabeledStmt

module Generated {
  class SwitchStmt extends Synth::TSwitchStmt, LabeledStmt {
    override string getAPrimaryQlClass() { result = "SwitchStmt" }

    Expr getImmediateExpr() {
      result =
        Synth::convertExprFromRaw(Synth::convertSwitchStmtToRaw(this).(Raw::SwitchStmt).getExpr())
    }

    final Expr getExpr() { result = getImmediateExpr().resolve() }

    CaseStmt getImmediateCase(int index) {
      result =
        Synth::convertCaseStmtFromRaw(Synth::convertSwitchStmtToRaw(this)
              .(Raw::SwitchStmt)
              .getCase(index))
    }

    final CaseStmt getCase(int index) { result = getImmediateCase(index).resolve() }

    final CaseStmt getACase() { result = getCase(_) }

    final int getNumberOfCases() { result = count(getACase()) }
  }
}
