// generated by codegen/codegen.py, do not edit
/**
 * This module provides the generated definition of `DoCatchStmt`.
 * INTERNAL: Do not import directly.
 */

private import codeql.swift.generated.Synth
private import codeql.swift.generated.Raw
import codeql.swift.elements.stmt.CaseStmt
import codeql.swift.elements.stmt.internal.LabeledStmtImpl::Impl as LabeledStmtImpl
import codeql.swift.elements.stmt.Stmt

/**
 * INTERNAL: This module contains the fully generated definition of `DoCatchStmt` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * INTERNAL: Do not reference the `Generated::DoCatchStmt` class directly.
   * Use the subclass `DoCatchStmt`, where the following predicates are available.
   */
  class DoCatchStmt extends Synth::TDoCatchStmt, LabeledStmtImpl::LabeledStmt {
    override string getAPrimaryQlClass() { result = "DoCatchStmt" }

    /**
     * Gets the body of this do catch statement.
     */
    Stmt getBody() {
      result =
        Synth::convertStmtFromRaw(Synth::convertDoCatchStmtToRaw(this).(Raw::DoCatchStmt).getBody())
    }

    /**
     * Gets the `index`th catch of this do catch statement (0-based).
     */
    CaseStmt getCatch(int index) {
      result =
        Synth::convertCaseStmtFromRaw(Synth::convertDoCatchStmtToRaw(this)
              .(Raw::DoCatchStmt)
              .getCatch(index))
    }

    /**
     * Gets any of the catches of this do catch statement.
     */
    final CaseStmt getACatch() { result = this.getCatch(_) }

    /**
     * Gets the number of catches of this do catch statement.
     */
    final int getNumberOfCatches() { result = count(int i | exists(this.getCatch(i))) }
  }
}
