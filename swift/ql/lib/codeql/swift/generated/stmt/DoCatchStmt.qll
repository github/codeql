// generated by codegen/codegen.py
private import codeql.swift.generated.Synth
private import codeql.swift.generated.Raw
import codeql.swift.elements.stmt.CaseStmt
import codeql.swift.elements.stmt.LabeledStmt
import codeql.swift.elements.stmt.Stmt

module Generated {
  class DoCatchStmt extends Synth::TDoCatchStmt, LabeledStmt {
    override string getAPrimaryQlClass() { result = "DoCatchStmt" }

    /**
     * Gets the body of this do catch statement.
     */
    Stmt getBody() {
      result =
        Synth::convertStmtFromRaw(Synth::convertDoCatchStmtToRaw(this).(Raw::DoCatchStmt).getBody())
    }

    /**
     * Gets the `index`th catch of this do catch statement (0-based).
     */
    CaseStmt getCatch(int index) {
      result =
        Synth::convertCaseStmtFromRaw(Synth::convertDoCatchStmtToRaw(this)
              .(Raw::DoCatchStmt)
              .getCatch(index))
    }

    /**
     * Gets any of the catches of this do catch statement.
     */
    final CaseStmt getACatch() { result = this.getCatch(_) }

    /**
     * Gets the number of catches of this do catch statement.
     */
    final int getNumberOfCatches() { result = count(int i | exists(this.getCatch(i))) }
  }
}
