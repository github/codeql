// generated by codegen/codegen.py, do not edit
/**
 * This module provides the generated definition of `Callable`.
 * INTERNAL: Do not import directly.
 */

private import codeql.swift.generated.Synth
private import codeql.swift.generated.Raw
import codeql.swift.elements.internal.AstNodeImpl::Impl as AstNodeImpl
import codeql.swift.elements.stmt.BraceStmt
import codeql.swift.elements.decl.CapturedDecl
import codeql.swift.elements.decl.ParamDecl

/**
 * INTERNAL: This module contains the fully generated definition of `Callable` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * INTERNAL: Do not reference the `Generated::Callable` class directly.
   * Use the subclass `Callable`, where the following predicates are available.
   */
  class Callable extends Synth::TCallable, AstNodeImpl::AstNode {
    /**
     * Gets the name of this callable, if it exists.
     *
     * The name includes argument labels of the callable, for example `myFunction(arg:)`.
     */
    string getName() { result = Synth::convertCallableToRaw(this).(Raw::Callable).getName() }

    /**
     * Holds if `getName()` exists.
     */
    final predicate hasName() { exists(this.getName()) }

    /**
     * Gets the self parameter of this callable, if it exists.
     */
    ParamDecl getSelfParam() {
      result =
        Synth::convertParamDeclFromRaw(Synth::convertCallableToRaw(this)
              .(Raw::Callable)
              .getSelfParam())
    }

    /**
     * Holds if `getSelfParam()` exists.
     */
    final predicate hasSelfParam() { exists(this.getSelfParam()) }

    /**
     * Gets the `index`th parameter of this callable (0-based).
     */
    ParamDecl getParam(int index) {
      result =
        Synth::convertParamDeclFromRaw(Synth::convertCallableToRaw(this)
              .(Raw::Callable)
              .getParam(index))
    }

    /**
     * Gets any of the parameters of this callable.
     */
    final ParamDecl getAParam() { result = this.getParam(_) }

    /**
     * Gets the number of parameters of this callable.
     */
    final int getNumberOfParams() { result = count(int i | exists(this.getParam(i))) }

    /**
     * Gets the body of this callable, if it exists.
     *
     * The body is absent within protocol declarations.
     */
    BraceStmt getBody() {
      result =
        Synth::convertBraceStmtFromRaw(Synth::convertCallableToRaw(this).(Raw::Callable).getBody())
    }

    /**
     * Holds if `getBody()` exists.
     */
    final predicate hasBody() { exists(this.getBody()) }

    /**
     * Gets the `index`th capture of this callable (0-based).
     */
    CapturedDecl getCapture(int index) {
      result =
        Synth::convertCapturedDeclFromRaw(Synth::convertCallableToRaw(this)
              .(Raw::Callable)
              .getCapture(index))
    }

    /**
     * Gets any of the captures of this callable.
     */
    final CapturedDecl getACapture() { result = this.getCapture(_) }

    /**
     * Gets the number of captures of this callable.
     */
    final int getNumberOfCaptures() { result = count(int i | exists(this.getCapture(i))) }
  }
}
