// generated by codegen/codegen.py
private import codeql.swift.generated.Synth
private import codeql.swift.generated.Raw
import codeql.swift.elements.decl.GenericTypeDecl
import codeql.swift.elements.type.Type

module Generated {
  class NominalTypeDecl extends Synth::TNominalTypeDecl, GenericTypeDecl {
    /**
     * Gets the type of this nominal type declaration.
     *
     * This includes nodes from the "hidden" AST. It can be overridden in subclasses to change the
     * behavior of both the `Immediate` and non-`Immediate` versions.
     */
    Type getImmediateType() {
      result =
        Synth::convertTypeFromRaw(Synth::convertNominalTypeDeclToRaw(this)
              .(Raw::NominalTypeDecl)
              .getType())
    }

    /**
     * Gets the type of this nominal type declaration.
     */
    final Type getType() { result = getImmediateType().resolve() }
  }
}
