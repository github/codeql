// generated by codegen/codegen.py
private import codeql.swift.generated.Synth
private import codeql.swift.generated.Raw
import codeql.swift.elements.Locatable

module Generated {
  class Diagnostics extends Synth::TDiagnostics, Locatable {
    /**
     * Would get the most immediate element that should substitute this element in the explicit AST.
     * There is no such element for this class, which cannot be hidden in the AST.
     */
    final Diagnostics getResolveStep() { none() }

    override string getAPrimaryQlClass() { result = "Diagnostics" }

    /**
     * Gets the text of this diagnostics.
     */
    string getText() { result = Synth::convertDiagnosticsToRaw(this).(Raw::Diagnostics).getText() }

    /**
     * Gets the kind of this diagnostics.
     */
    int getKind() { result = Synth::convertDiagnosticsToRaw(this).(Raw::Diagnostics).getKind() }
  }
}
