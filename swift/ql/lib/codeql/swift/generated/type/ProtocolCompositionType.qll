// generated by codegen/codegen.py, do not edit
/**
 * This module provides the generated definition of `ProtocolCompositionType`.
 * INTERNAL: Do not import directly.
 */

private import codeql.swift.generated.Synth
private import codeql.swift.generated.Raw
import codeql.swift.elements.type.Type
import codeql.swift.elements.type.internal.TypeImpl::Impl as TypeImpl

/**
 * INTERNAL: This module contains the fully generated definition of `ProtocolCompositionType` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * INTERNAL: Do not reference the `Generated::ProtocolCompositionType` class directly.
   * Use the subclass `ProtocolCompositionType`, where the following predicates are available.
   */
  class ProtocolCompositionType extends Synth::TProtocolCompositionType, TypeImpl::Type {
    override string getAPrimaryQlClass() { result = "ProtocolCompositionType" }

    /**
     * Gets the `index`th member of this protocol composition type (0-based).
     *
     * This includes nodes from the "hidden" AST. It can be overridden in subclasses to change the
     * behavior of both the `Immediate` and non-`Immediate` versions.
     */
    Type getImmediateMember(int index) {
      result =
        Synth::convertTypeFromRaw(Synth::convertProtocolCompositionTypeToRaw(this)
              .(Raw::ProtocolCompositionType)
              .getMember(index))
    }

    /**
     * Gets the `index`th member of this protocol composition type (0-based).
     */
    final Type getMember(int index) {
      exists(Type immediate |
        immediate = this.getImmediateMember(index) and
        if exists(this.getResolveStep()) then result = immediate else result = immediate.resolve()
      )
    }

    /**
     * Gets any of the members of this protocol composition type.
     */
    final Type getAMember() { result = this.getMember(_) }

    /**
     * Gets the number of members of this protocol composition type.
     */
    final int getNumberOfMembers() { result = count(int i | exists(this.getMember(i))) }
  }
}
