// generated by codegen/codegen.py, do not edit
/**
 * This module provides the generated definition of `OpaqueTypeArchetypeType`.
 * INTERNAL: Do not import directly.
 */

private import codeql.swift.generated.Synth
private import codeql.swift.generated.Raw
import codeql.swift.elements.type.internal.ArchetypeTypeImpl::Impl as ArchetypeTypeImpl
import codeql.swift.elements.decl.OpaqueTypeDecl

/**
 * INTERNAL: This module contains the fully generated definition of `OpaqueTypeArchetypeType` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * An opaque type, that is a type formally equivalent to an underlying type but abstracting it away.
   *
   * See https://docs.swift.org/swift-book/LanguageGuide/OpaqueTypes.html.
   * INTERNAL: Do not reference the `Generated::OpaqueTypeArchetypeType` class directly.
   * Use the subclass `OpaqueTypeArchetypeType`, where the following predicates are available.
   */
  class OpaqueTypeArchetypeType extends Synth::TOpaqueTypeArchetypeType,
    ArchetypeTypeImpl::ArchetypeType
  {
    override string getAPrimaryQlClass() { result = "OpaqueTypeArchetypeType" }

    /**
     * Gets the declaration of this opaque type archetype type.
     */
    OpaqueTypeDecl getDeclaration() {
      result =
        Synth::convertOpaqueTypeDeclFromRaw(Synth::convertOpaqueTypeArchetypeTypeToRaw(this)
              .(Raw::OpaqueTypeArchetypeType)
              .getDeclaration())
    }
  }
}
