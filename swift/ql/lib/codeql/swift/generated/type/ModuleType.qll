// generated by codegen/codegen.py
private import codeql.swift.generated.Synth
private import codeql.swift.generated.Raw
import codeql.swift.elements.decl.ModuleDecl
import codeql.swift.elements.type.Type

module Generated {
  class ModuleType extends Synth::TModuleType, Type {
    override string getAPrimaryQlClass() { result = "ModuleType" }

    /**
     * Gets the module of this module type.
     *
     * This includes nodes from the "hidden" AST. It can be overridden in subclasses to change the
     * behavior of both the `Immediate` and non-`Immediate` versions.
     */
    ModuleDecl getImmediateModule() {
      result =
        Synth::convertModuleDeclFromRaw(Synth::convertModuleTypeToRaw(this)
              .(Raw::ModuleType)
              .getModule())
    }

    /**
     * Gets the module of this module type.
     */
    final ModuleDecl getModule() { result = getImmediateModule().resolve() }
  }
}
