// generated by codegen/codegen.py
private import codeql.swift.generated.Synth
private import codeql.swift.generated.Raw
import codeql.swift.elements.expr.ApplyExpr
import codeql.swift.elements.expr.Expr

module Generated {
  /**
   * INTERNAL: Do not use.
   * An internal raw instance of method lookups like `x.foo` in `x.foo()`.
   * This is completely replaced by the synthesized type `MethodLookupExpr`.
   */
  class SelfApplyExpr extends Synth::TSelfApplyExpr, ApplyExpr {
    /**
     * Gets the base of this self apply expression.
     *
     * This includes nodes from the "hidden" AST. It can be overridden in subclasses to change the
     * behavior of both the `Immediate` and non-`Immediate` versions.
     */
    Expr getImmediateBase() {
      result =
        Synth::convertExprFromRaw(Synth::convertSelfApplyExprToRaw(this)
              .(Raw::SelfApplyExpr)
              .getBase())
    }

    /**
     * Gets the base of this self apply expression.
     */
    final Expr getBase() { result = getImmediateBase().resolve() }
  }
}
