// generated by codegen/codegen.py
import codeql.swift.elements.expr.Expr
import codeql.swift.elements.expr.OpaqueValueExpr

class OpenExistentialExprBase extends @open_existential_expr, Expr {
  override string getAPrimaryQlClass() { result = "OpenExistentialExpr" }

  Expr getSubExpr() {
    exists(Expr x |
      open_existential_exprs(this, x, _, _) and
      result = x.resolve()
    )
  }

  Expr getExistential() {
    exists(Expr x |
      open_existential_exprs(this, _, x, _) and
      result = x.resolve()
    )
  }

  OpaqueValueExpr getOpaqueExpr() {
    exists(OpaqueValueExpr x |
      open_existential_exprs(this, _, _, x) and
      result = x.resolve()
    )
  }
}
