// generated by codegen/codegen.py
import codeql.swift.elements.expr.Argument
import codeql.swift.elements.expr.LookupExpr

class SubscriptExprBase extends @subscript_expr, LookupExpr {
  override string getAPrimaryQlClass() { result = "SubscriptExpr" }

  Argument getArgument(int index) {
    exists(Argument x |
      subscript_expr_arguments(this, index, x) and
      result = x.resolve()
    )
  }

  Argument getAnArgument() { result = getArgument(_) }

  int getNumberOfArguments() { result = count(getAnArgument()) }

  predicate hasDirectToStorageSemantics() { subscript_expr_has_direct_to_storage_semantics(this) }

  predicate hasDirectToImplementationSemantics() {
    subscript_expr_has_direct_to_implementation_semantics(this)
  }

  predicate hasOrdinarySemantics() { subscript_expr_has_ordinary_semantics(this) }
}
