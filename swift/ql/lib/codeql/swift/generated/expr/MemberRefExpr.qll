// generated by codegen/codegen.py
private import codeql.swift.generated.Synth
private import codeql.swift.generated.Raw
import codeql.swift.elements.expr.LookupExpr

module Generated {
  class MemberRefExpr extends Synth::TMemberRefExpr, LookupExpr {
    override string getAPrimaryQlClass() { result = "MemberRefExpr" }

    /**
     * Holds if this member reference expression has direct to storage semantics.
     */
    predicate hasDirectToStorageSemantics() {
      Synth::convertMemberRefExprToRaw(this).(Raw::MemberRefExpr).hasDirectToStorageSemantics()
    }

    /**
     * Holds if this member reference expression has direct to implementation semantics.
     */
    predicate hasDirectToImplementationSemantics() {
      Synth::convertMemberRefExprToRaw(this)
          .(Raw::MemberRefExpr)
          .hasDirectToImplementationSemantics()
    }

    /**
     * Holds if this member reference expression has ordinary semantics.
     */
    predicate hasOrdinarySemantics() {
      Synth::convertMemberRefExprToRaw(this).(Raw::MemberRefExpr).hasOrdinarySemantics()
    }

    /**
     * Holds if this member reference expression has distributed thunk semantics.
     */
    predicate hasDistributedThunkSemantics() {
      Synth::convertMemberRefExprToRaw(this).(Raw::MemberRefExpr).hasDistributedThunkSemantics()
    }
  }
}
