// generated by codegen/codegen.py, do not edit
/**
 * This module provides the generated definition of `RegexLiteralExpr`.
 * INTERNAL: Do not import directly.
 */

private import codeql.swift.generated.Synth
private import codeql.swift.generated.Raw
import codeql.swift.elements.expr.internal.LiteralExprImpl::Impl as LiteralExprImpl

/**
 * INTERNAL: This module contains the fully generated definition of `RegexLiteralExpr` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * A regular expression literal which is checked at compile time, for example `/a(a|b)*b/`.
   * INTERNAL: Do not reference the `Generated::RegexLiteralExpr` class directly.
   * Use the subclass `RegexLiteralExpr`, where the following predicates are available.
   */
  class RegexLiteralExpr extends Synth::TRegexLiteralExpr, LiteralExprImpl::LiteralExpr {
    override string getAPrimaryQlClass() { result = "RegexLiteralExpr" }

    /**
     * Gets the pattern of this regular expression.
     */
    string getPattern() {
      result = Synth::convertRegexLiteralExprToRaw(this).(Raw::RegexLiteralExpr).getPattern()
    }

    /**
     * Gets the version of the internal regular expression language being used by Swift.
     */
    int getVersion() {
      result = Synth::convertRegexLiteralExprToRaw(this).(Raw::RegexLiteralExpr).getVersion()
    }
  }
}
