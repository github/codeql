// generated by codegen/codegen.py
private import codeql.swift.generated.Synth
private import codeql.swift.generated.Raw
import codeql.swift.elements.expr.Expr
import codeql.swift.elements.decl.VarDecl

module Generated {
  class RebindSelfInInitializerExpr extends Synth::TRebindSelfInInitializerExpr, Expr {
    override string getAPrimaryQlClass() { result = "RebindSelfInInitializerExpr" }

    /**
     * Gets the sub expression of this rebind self in initializer expression.
     *
     * This includes nodes from the "hidden" AST. It can be overridden in subclasses to change the
     * behavior of both the `Immediate` and non-`Immediate` versions.
     */
    Expr getImmediateSubExpr() {
      result =
        Synth::convertExprFromRaw(Synth::convertRebindSelfInInitializerExprToRaw(this)
              .(Raw::RebindSelfInInitializerExpr)
              .getSubExpr())
    }

    /**
     * Gets the sub expression of this rebind self in initializer expression.
     */
    final Expr getSubExpr() { result = this.getImmediateSubExpr().resolve() }

    /**
     * Gets the self of this rebind self in initializer expression.
     *
     * This includes nodes from the "hidden" AST. It can be overridden in subclasses to change the
     * behavior of both the `Immediate` and non-`Immediate` versions.
     */
    VarDecl getImmediateSelf() {
      result =
        Synth::convertVarDeclFromRaw(Synth::convertRebindSelfInInitializerExprToRaw(this)
              .(Raw::RebindSelfInInitializerExpr)
              .getSelf())
    }

    /**
     * Gets the self of this rebind self in initializer expression.
     */
    final VarDecl getSelf() { result = this.getImmediateSelf().resolve() }
  }
}
