// generated by codegen/codegen.py, do not edit
/**
 * This module provides the generated definition of `IntegerLiteralExpr`.
 * INTERNAL: Do not import directly.
 */

private import codeql.swift.generated.Synth
private import codeql.swift.generated.Raw
import codeql.swift.elements.expr.internal.NumberLiteralExprImpl::Impl as NumberLiteralExprImpl

/**
 * INTERNAL: This module contains the fully generated definition of `IntegerLiteralExpr` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * INTERNAL: Do not reference the `Generated::IntegerLiteralExpr` class directly.
   * Use the subclass `IntegerLiteralExpr`, where the following predicates are available.
   */
  class IntegerLiteralExpr extends Synth::TIntegerLiteralExpr,
    NumberLiteralExprImpl::NumberLiteralExpr
  {
    override string getAPrimaryQlClass() { result = "IntegerLiteralExpr" }

    /**
     * Gets the string value of this integer literal expression.
     */
    string getStringValue() {
      result =
        Synth::convertIntegerLiteralExprToRaw(this).(Raw::IntegerLiteralExpr).getStringValue()
    }
  }
}
