// generated by codegen/codegen.py, remove this comment if you wish to edit this file
/**
 * This module provides a hand-modifiable wrapper around the generated class `OpenExistentialExpr`.
 *
 * INTERNAL: Do not use.
 */

private import codeql.swift.generated.expr.OpenExistentialExpr

/**
 * INTERNAL: This module contains the customizable definition of `OpenExistentialExpr` and should not
 * be referenced directly.
 */
module Impl {
  /**
   * An implicit expression created by the compiler when a method is called on a protocol. For example in
   * ```
   * protocol P {
   *   func foo() -> Int
   * }
   * func bar(x: P) -> Int {
   *   return x.foo()
   * }
   * `x.foo()` is actually wrapped in an `OpenExistentialExpr` that "opens" `x` replacing it in its subexpression with
   * an `OpaqueValueExpr`.
   * ```
   */
  class OpenExistentialExpr extends Generated::OpenExistentialExpr { }
}
