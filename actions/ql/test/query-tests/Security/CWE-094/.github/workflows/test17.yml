name: Test

on:
  issue_comment:

permissions:
    contents: read
    pull-requests: write

jobs:
    setup:
        runs-on: ubuntu-latest
        steps:
          - name: Get PR details
            id: get-pr
            if: github.event_name == 'issue_comment'
            uses: octokit/request-action@v2.x
            with:
              route: GET /repos/${{ github.repository }}/pulls/${{ github.event.issue.number }}
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          - name: Set PR source branch as env variable
            if: github.event_name == 'issue_comment'
            run: |
              PR_SOURCE_BRANCH=$(echo '${{ steps.get-pr.outputs.data }}' | jq -r '.head.ref')
              echo "BRANCH=$PR_SOURCE_BRANCH" >> $GITHUB_ENV
    setup2:
        runs-on: ubuntu-latest
        steps:
          - name: Get PR details
            uses: octokit/request-action@v2.x
            id: get-pr-details
            with:
              route: GET /repos/{repository}/pulls/{pull_number}
              repository: ${{ github.repository }}
              pull_number: ${{ github.event.issue.number }}
            env:
              GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          - name: Set environment variables
            run: |
              MERGE_STATUS=${{ fromJson(steps.get-pr-details.outputs.data).mergeable }}
              if $MERGE_STATUS; then echo "COMMENT=\[Fast Forward CI\] ${{ env.HEAD_REF }} cannot be merged into ${{ env.BASE_REF }} at the moment." >> $GITHUB_ENV; fi
              echo "MERGE_STATUS=$MERGE_STATUS" >> $GITHUB_ENV
              echo "BASE_REF=${{ fromJson(steps.get-pr-details.outputs.data).base.ref }}" >> $GITHUB_ENV
              echo "HEAD_REF=${{ fromJson(steps.get-pr-details.outputs.data).head.ref }}" >> $GITHUB_ENV
    setup3:
        runs-on: ubuntu-latest
        steps:
          - id: issues
            uses: octokit/request-action@v2.x
            with:
              route: GET /repos/${{ github.repository_owner }}/${{ github.repository }}/issues?state=open
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
          - run: |
              echo '${{ steps.issues.outputs.data }}' > issues.json
    setup4:
        runs-on: ubuntu-latest
        steps:
          - id: get-pull-request
            uses: octokit/request-action@v2.x
            with:
              route: GET /repos/{owner}/{repo}/pulls/{pull_number}
              owner: foo 
              repo: bar
              pull_number: ${{ github.event.issue.number }}

          - run: >-
              echo "Pull request title is  \"${{
              fromJson(steps.get-pull-request.outputs.data).title }}\" but expected
              \"Updated test pull request\"" && exit 1



