.. _abstract-syntax-tree-classes-for-working-with-javascript-and-typescript-programs:

Abstract syntax tree classes for working with JavaScript and TypeScript programs
================================================================================

CodeQL has a large selection of classes for representing the abstract syntax tree of JavaScript and TypeScript programs.

.. include:: ../reusables/abstract-syntax-tree.rst

Statement classes
-----------------

This table lists subclasses of Stmt_ representing ECMAScript and TypeScript statements.

+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
|                               Statement syntax                                |          CodeQL class          |                        Superclasses                         |                                            Remarks                                             |
+===============================================================================+================================+=============================================================+================================================================================================+
| Expr_  ``;``                                                                  | ExprStmt_                      |                                                             |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| Label_ ``:`` Stmt_                                                            | LabeledStmt_                   |                                                             |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``;``                                                                         | EmptyStmt_                     |                                                             |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``break`` Label_ ``;``                                                        | BreakStmt_                     | JumpStmt_, BreakOrContinueStmt_                             |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``case`` Expr_ ``:`` Stmt_...                                                 | Case_                          |                                                             | can only occur as child of a SwitchStmt_                                                       |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``catch(`` Identifier_ ``)`` ``{`` Stmt_... ``}``                             | CatchClause_                   | ControlStmt_                                                | can only occur as child of a TryStmt_                                                          |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``class`` Identifier_ ``extends`` Expr_ ``{`` MemberDeclaration_... ``}``     | ClassDeclStmt_                 | ClassDefinition_, ClassOrInterface_, TypeParameterized_     |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``const`` Identifier_ ``=`` Expr_ ``;``                                       | ConstDeclStmt_                 | DeclStmt_                                                   |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``continue`` Label_ ``;``                                                     | ContinueStmt_                  | JumpStmt_, BreakOrContinueStmt_                             |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``debugger;``                                                                 | DebuggerStmt_                  |                                                             |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``declare`` ``global`` ``{`` Stmt_... ``}``                                   | GlobalAugmentationDeclaration_ |                                                             |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``declare`` ``module`` StringLiteral_ ``{`` Stmt_... ``}``                    | ExternalModuleDeclaration_     |                                                             |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``default:`` Stmt_...                                                         | Case_                          |                                                             | can only occur as child of a SwitchStmt_; use `isDefault` to distinguish `default` from `case` |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``do`` Stmt_ ``while`` ``(`` Expr_ ``)``                                      | DoWhileStmt_                   | ControlStmt_, LoopStmt_                                     |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``enum`` Identifier_ ``{`` MemberDeclaration_... ``}``                        | EnumDeclaration_               | NamespaceDefinition_                                        |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``export * from`` StringLiteral_                                              | BulkReExportDeclaration_       | ReExportDeclaration_, ExportDeclaration_                    |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``export default`` ClassDeclStmt_                                             | ExportDefaultDeclaration_      | ExportDeclaration_                                          |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``export default`` Expr_ ``;``                                                | ExportDefaultDeclaration_      | ExportDeclaration_                                          |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``export default`` FunctionDeclStmt_                                          | ExportDefaultDeclaration_      | ExportDeclaration_                                          |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``export {`` ExportSpecifier_... ``};``                                       | ExportNamedDeclaration_        | ExportDeclaration_                                          |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``export`` DeclStmt_                                                          | ExportNamedDeclaration_        | ExportDeclaration_                                          |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``export`` ``=`` Expr_ ``;``                                                  | ExportAssignDeclaration_       |                                                             |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``export`` ``as`` ``namespace`` Identifier_ ``;``                             | ExportAsNamespaceDeclaration_  |                                                             |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``for`` ``(`` Expr_ ``;`` Expr_ ``;`` Expr_ ``)`` Stmt_                       | ForStmt_                       | ControlStmt_, LoopStmt_                                     |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``for`` ``(`` VarAccess_ ``in`` Expr_ ``)`` Stmt_                             | ForInStmt_                     | ControlStmt_, LoopStmt_, EnhancedForLoop_                   |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``for`` ``(`` VarAccess_ ``of`` Expr_ ``)`` Stmt_                             | ForOfStmt_                     | ControlStmt_, LoopStmt_, EnhancedForLoop_                   |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``function`` Identifier_ ``(`` Parameter_... ``)`` ``{`` Stmt_... ``}``       | FunctionDeclStmt_              | Function_                                                   |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``if`` ``(`` Expr_ ``)`` Stmt_ ``else`` Stmt_                                 | IfStmt_                        | ControlStmt_                                                |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``import {`` ImportSpecifier_... ``from`` StringLiteral_                      | ImportDeclaration_             | Import_                                                     |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``import`` Identifier_ ``=`` Expr_ ``;``                                      | ImportEqualsDeclaration_       |                                                             |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``interface`` Identifier_ ``{`` MemberDeclaration_... ``}``                   | InterfaceDeclaration_          | InterfaceDefinition_, ClassOrInterface_, TypeParameterized_ |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``let`` Identifier_ ``=`` Expr_ ``;``                                         | LetStmt_                       | DeclStmt_                                                   |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``namespace`` Identifier_ ``{`` Stmt_... ``}``                                | NamespaceDeclaration_          | NamespaceDefinition_                                        |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``return`` Expr_ ``;``                                                        | ReturnStmt_                    | JumpStmt_                                                   |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``switch`` ``(`` Expr_ ``) {`` Case_... ``}``                                 | SwitchStmt_                    | ControlStmt_                                                |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``throw`` Expr_ ``;``                                                         | ThrowStmt_                     | JumpStmt_                                                   |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``try`` ``{`` Stmt_... ``}`` CatchClause_... ``finally`` ``{`` Stmt_... ``}`` | TryStmt_                       | ControlStmt_                                                |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``type`` Identifier_ ``=`` TypeExpr_ ``;``                                    | TypeAliasDeclaration_          | TypeParameterized_                                          |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``var`` Identifier_ ``=`` Expr_ ``;``                                         | VarDeclStmt_                   | DeclStmt_                                                   |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``while`` ``(`` Expr_ ``)`` Stmt_                                             | WhileStmt_                     | ControlStmt_, LoopStmt_                                     |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``with`` ``(`` Expr_ ``)`` Stmt_                                              | WithStmt_                      | ControlStmt_                                                |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| ``{`` Stmt_... ``}``                                                          | BlockStmt_                     |                                                             |                                                                                                |
+-------------------------------------------------------------------------------+--------------------------------+-------------------------------------------------------------+------------------------------------------------------------------------------------------------+

Expression classes
------------------

There is a large number of expression classes, so we present them by category. All classes in this section are subclasses of Expr_, except where noted otherwise.

Literals
~~~~~~~~

All classes in this subsection are subclasses of Literal_.

+-------------------+-----------------+
| Expression syntax |  CodeQL class   |
+===================+=================+
| ``true``          | BooleanLiteral_ |
+-------------------+-----------------+
| ``23``            | NumberLiteral_  |
+-------------------+-----------------+
| ``4.2``           | NumberLiteral_  |
+-------------------+-----------------+
| ``"Hello"``       | StringLiteral_  |
+-------------------+-----------------+
| ``/ab*c?/``       | RegExpLiteral_  |
+-------------------+-----------------+
| ``null``          | NullLiteral_    |
+-------------------+-----------------+

Identifiers
~~~~~~~~~~~

All identifiers are represented by the class Identifier_, which has subclasses to represent specific kinds of identifiers:

- VarAccess_: an identifier that refers to a variable
- VarDecl_: an identifier that declares a variable, for example ``x`` in ``var x = "hi"`` or in ``function(x) { }``
- VarRef_: a VarAccess_ or a VarDecl_
- Label_: an identifier that refers to a statement label or a property, not a variable; in the following examples, ``l`` and ``p`` are labels:

  - ``break l;``
  - ``l: for(;;) {}``
  - ``x.p``
  - ``{ p: 42 }``


Primary expressions
~~~~~~~~~~~~~~~~~~~

All classes in this subsection are subclasses of Expr_.

+-------------------------------------------------------------+---------------------+--------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|                      Expression syntax                      |    CodeQL class     | Superclasses |                                                                                                  Remarks                                                                                                   |
+=============================================================+=====================+==============+============================================================================================================================================================================================================+
| ``this``                                                    | ThisExpr_           |              |                                                                                                                                                                                                            |
+-------------------------------------------------------------+---------------------+--------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| ``[`` Expr_... ``]``                                        | ArrayExpr_          |              |                                                                                                                                                                                                            |
+-------------------------------------------------------------+---------------------+--------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| ``{`` Property_... ``}``                                    | ObjectExpr_         |              |                                                                                                                                                                                                            |
+-------------------------------------------------------------+---------------------+--------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| ``function`` ``(`` Parameter_... ``)`` ``{`` Stmt_... ``}`` | FunctionExpr_       | Function_    |                                                                                                                                                                                                            |
+-------------------------------------------------------------+---------------------+--------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| ``(`` Parameter_... ``)`` ``=>`` Expr_                      | ArrowFunctionExpr_  | Function_    |                                                                                                                                                                                                            |
+-------------------------------------------------------------+---------------------+--------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| ``(`` Expr_ ``)``                                           | ParExpr_            |              |                                                                                                                                                                                                            |
+-------------------------------------------------------------+---------------------+--------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| ````` ... `````                                             | TemplateLiteral_    |              | an element in a TemplateLiteral_ is either a TemplateElement_ representing a constant template element, or some other expression representing an interpolated expression of the form ``${`` Expr_ ``}``    |
+-------------------------------------------------------------+---------------------+--------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Expr_ ````` ... `````                                       | TaggedTemplateExpr_ |              | an element in a TaggedTemplateExpr_ is either a TemplateElement_ representing a constant template element, or some other expression representing an interpolated expression of the form ``${`` Expr_ ``}`` |
+-------------------------------------------------------------+---------------------+--------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Properties
~~~~~~~~~~

All classes in this subsection are subclasses of Property_. Note that Property_ is not a subclass of Expr_.

+------------------------------------------------------------------+-----------------+-------------------+
|                         Property syntax                          |  CodeQL class   |   Superclasses    |
+==================================================================+=================+===================+
| Identifier_ ``:`` Expr_                                          | ValueProperty_  |                   |
+------------------------------------------------------------------+-----------------+-------------------+
| ``get`` Identifier_ ``()`` ``{`` Stmt_... ``}``                  | PropertyGetter_ | PropertyAccessor_ |
+------------------------------------------------------------------+-----------------+-------------------+
| ``set`` Identifier_ ``(`` Identifier_ ``)`` ``{`` Stmt_... ``}`` | PropertySetter_ | PropertyAccessor_ |
+------------------------------------------------------------------+-----------------+-------------------+

Property accesses
~~~~~~~~~~~~~~~~~

All classes in this subsection are subclasses of PropAccess_.

+-------------------------+--------------+
|    Expression syntax    | CodeQL class |
+=========================+==============+
| Expr_ ``.`` Identifier_ | DotExpr_     |
+-------------------------+--------------+
| Expr_ ``[`` Expr_ ``]`` | IndexExpr_   |
+-------------------------+--------------+

Function calls and ``new``
~~~~~~~~~~~~~~~~~~~~~~~~~~

All classes in this subsection are subclasses of InvokeExpr_.

+-----------------------------------------------+-----------------+-----------------------------------------------------------------------------------+
|               Expression syntax               |  CodeQL class   |                                      Remarks                                      |
+===============================================+=================+===================================================================================+
| Expr_ ``(`` Expr_... ``)``                    | CallExpr_       |                                                                                   |
+-----------------------------------------------+-----------------+-----------------------------------------------------------------------------------+
| Expr_ ``.`` Identifier_  ``(`` Expr_... ``)`` | MethodCallExpr_ | this also includes calls of the form Expr_ ``[`` Expr_ ``]`` ``(`` Expr_... ``)`` |
+-----------------------------------------------+-----------------+-----------------------------------------------------------------------------------+
| ``new`` Expr_ ``(`` Expr_... ``)``            | NewExpr_        |                                                                                   |
+-----------------------------------------------+-----------------+-----------------------------------------------------------------------------------+

Unary expressions
~~~~~~~~~~~~~~~~~

All classes in this subsection are subclasses of UnaryExpr_.

+-------------------+----------------+
| Expression syntax |  CodeQL class  |
+===================+================+
| ``~`` Expr_       | BitNotExpr_    |
+-------------------+----------------+
| ``-`` Expr_       | NegExpr_       |
+-------------------+----------------+
| ``+`` Expr_       | PlusExpr_      |
+-------------------+----------------+
| ``!`` Expr_       | LogNotExpr_    |
+-------------------+----------------+
| ``typeof`` Expr_  | TypeofExpr_    |
+-------------------+----------------+
| ``void`` Expr_    | VoidExpr_      |
+-------------------+----------------+
| ``delete`` Expr_  | DeleteExpr_    |
+-------------------+----------------+
| ``...`` Expr_     | SpreadElement_ |
+-------------------+----------------+

Binary expressions
~~~~~~~~~~~~~~~~~~

All classes in this subsection are subclasses of BinaryExpr_.

+----------------------------+-----------------+----------------------------+
|     Expression syntax      |  CodeQL class   |        Superclasses        |
+============================+=================+============================+
| Expr_ ``*`` Expr_          | MulExpr_        |                            |
+----------------------------+-----------------+----------------------------+
| Expr_ ``/`` Expr_          | DivExpr_        |                            |
+----------------------------+-----------------+----------------------------+
| Expr_ ``%`` Expr_          | ModExpr_        |                            |
+----------------------------+-----------------+----------------------------+
| Expr_ ``**`` Expr_         | ExpExpr_        |                            |
+----------------------------+-----------------+----------------------------+
| Expr_ ``+`` Expr_          | AddExpr_        |                            |
+----------------------------+-----------------+----------------------------+
| Expr_ ``-`` Expr_          | SubExpr_        |                            |
+----------------------------+-----------------+----------------------------+
| Expr_ ``<<`` Expr_         | LShiftExpr_     |                            |
+----------------------------+-----------------+----------------------------+
| Expr_ ``>>`` Expr_         | RShiftExpr_     |                            |
+----------------------------+-----------------+----------------------------+
| Expr_ ``>>>`` Expr_        | URShiftExpr_    |                            |
+----------------------------+-----------------+----------------------------+
| Expr_ ``&&`` Expr_         | LogAndExpr_     |                            |
+----------------------------+-----------------+----------------------------+
| Expr_ ``||`` Expr_         | LogOrExpr_      |                            |
+----------------------------+-----------------+----------------------------+
| Expr_ ``<`` Expr_          | LTExpr_         | Comparison_                |
+----------------------------+-----------------+----------------------------+
| Expr_ ``>`` Expr_          | GTExpr_         | Comparison_                |
+----------------------------+-----------------+----------------------------+
| Expr_ ``<=`` Expr_         | LEExpr_         | Comparison_                |
+----------------------------+-----------------+----------------------------+
| Expr_ ``>=`` Expr_         | GEExpr_         | Comparison_                |
+----------------------------+-----------------+----------------------------+
| Expr_ ``==`` Expr_         | EqExpr_         | EqualityTest_, Comparison_ |
+----------------------------+-----------------+----------------------------+
| Expr_ ``!=`` Expr_         | NEqExpr_        | EqualityTest_, Comparison_ |
+----------------------------+-----------------+----------------------------+
| Expr_ ``===`` Expr_        | StrictEqExpr_   | EqualityTest_, Comparison_ |
+----------------------------+-----------------+----------------------------+
| Expr_ ``!==`` Expr_        | StrictNEqExpr_  | EqualityTest_, Comparison_ |
+----------------------------+-----------------+----------------------------+
| Expr_ ``&`` Expr_          | BitAndExpr_     |                            |
+----------------------------+-----------------+----------------------------+
| Expr_ ``|`` Expr_          | BitOrExpr_      |                            |
+----------------------------+-----------------+----------------------------+
| Expr_ ``^`` Expr_          | XOrExpr_        |                            |
+----------------------------+-----------------+----------------------------+
| Expr_ ``in`` Expr_         | InExpr_         |                            |
+----------------------------+-----------------+----------------------------+
| Expr_ ``instanceof`` Expr_ | InstanceofExpr_ |                            |
+----------------------------+-----------------+----------------------------+

Assignment expressions
~~~~~~~~~~~~~~~~~~~~~~

All classes in this table are subclasses of Assignment_.

+----------------------+--------------------+---------------------+
|  Expression syntax   |    CodeQL class    |    Superclasses     |
+======================+====================+=====================+
| Expr_ ``=`` Expr_    | AssignExpr_        |                     |
+----------------------+--------------------+---------------------+
| Expr_ ``+=`` Expr_   | AssignAddExpr_     | CompoundAssignExpr_ |
+----------------------+--------------------+---------------------+
| Expr_ ``-=`` Expr_   | AssignSubExpr_     | CompoundAssignExpr_ |
+----------------------+--------------------+---------------------+
| Expr_ ``*=`` Expr_   | AssignMulExpr_     | CompoundAssignExpr_ |
+----------------------+--------------------+---------------------+
| Expr_ ``**=`` Expr_  | AssignExpExpr_     | CompoundAssignExpr_ |
+----------------------+--------------------+---------------------+
| Expr_ ``/=`` Expr_   | AssignDivExpr_     | CompoundAssignExpr_ |
+----------------------+--------------------+---------------------+
| Expr_ ``%=`` Expr_   | AssignModExpr_     | CompoundAssignExpr_ |
+----------------------+--------------------+---------------------+
| Expr_ ``&=`` Expr_   | AssignAndExpr_     | CompoundAssignExpr_ |
+----------------------+--------------------+---------------------+
| Expr_ ``|=`` Expr_   | AssignOrExpr_      | CompoundAssignExpr_ |
+----------------------+--------------------+---------------------+
| Expr_ ``^=`` Expr_   | AssignXOrExpr_     | CompoundAssignExpr_ |
+----------------------+--------------------+---------------------+
| Expr_ ``<<=`` Expr_  | AssignLShiftExpr_  | CompoundAssignExpr_ |
+----------------------+--------------------+---------------------+
| Expr_ ``>>=`` Expr_  | AssignRShiftExpr_  | CompoundAssignExpr_ |
+----------------------+--------------------+---------------------+
| Expr_ ``>>>=`` Expr_ | AssignURShiftExpr_ | CompoundAssignExpr_ |
+----------------------+--------------------+---------------------+

Update expressions
~~~~~~~~~~~~~~~~~~

All classes in this table are subclasses of UpdateExpr_.

+-------------------+--------------+
| Expression syntax | CodeQL class |
+===================+==============+
| Expr_ ``++``      | PostIncExpr_ |
+-------------------+--------------+
| Expr_ ``--``      | PostDecExpr_ |
+-------------------+--------------+
| ``++`` Expr_      | PreIncExpr_  |
+-------------------+--------------+
| ``--`` Expr_      | PreDecExpr_  |
+-------------------+--------------+

Miscellaneous
~~~~~~~~~~~~~

All classes in this table are subclasses of Expr_.

+-------------------------------+------------------+
|       Expression syntax       |   CodeQL class   |
+===============================+==================+
| Expr_ ``?`` Expr_ ``:`` Expr_ | ConditionalExpr_ |
+-------------------------------+------------------+
| Expr_ ``,`` ... ``,`` Expr_   | SeqExpr_         |
+-------------------------------+------------------+
| ``await`` Expr_               | AwaitExpr_       |
+-------------------------------+------------------+
| ``yield`` Expr_               | YieldExpr_       |
+-------------------------------+------------------+

Further reading
---------------

.. include:: ../reusables/javascript-further-reading.rst
.. include:: ../reusables/codeql-ref-tools-further-reading.rst


.. Links used in tables. For information about using these links, see
   https://www.sphinx-doc.org/en/master/usage/restructuredtext/basics.html#hyperlinks.

.. _Stmt: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$Stmt.html
.. _Expr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$Expr.html
.. _ExprStmt: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$ExprStmt.html
.. _Label: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$Label.html
.. _LabeledStmt: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$LabeledStmt.html
.. _EmptyStmt: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$EmptyStmt.html
.. _BreakStmt: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$BreakStmt.html
.. _JumpStmt: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$JumpStmt.html
.. _BreakOrContinueStmt: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$BreakOrContinueStmt.html
.. _Case: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$Case.html
.. _SwitchStmt: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$SwitchStmt.html
.. _Identifier: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$Identifier.html
.. _CatchClause: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$CatchClause.html
.. _ControlStmt: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$ControlStmt.html
.. _TryStmt: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$TryStmt.html
.. _MemberDeclaration: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Classes.qll/type.Classes$MemberDeclaration.html
.. _ClassDeclStmt: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Classes.qll/type.Classes$ClassDeclStmt.html
.. _ClassDefinition: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Classes.qll/type.Classes$ClassDefinition.html
.. _ClassOrInterface: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Classes.qll/type.Classes$ClassOrInterface.html
.. _TypeParameterized: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/TypeScript.qll/type.TypeScript$TypeParameterized.html
.. _ConstDeclStmt: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$ConstDeclStmt.html
.. _DeclStmt: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$DeclStmt.html
.. _ContinueStmt: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$ContinueStmt.html
.. _DebuggerStmt: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$DebuggerStmt.html
.. _GlobalAugmentationDeclaration: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/TypeScript.qll/type.TypeScript$GlobalAugmentationDeclaration.html
.. _StringLiteral: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$StringLiteral.html
.. _ExternalModuleDeclaration: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/TypeScript.qll/type.TypeScript$ExternalModuleDeclaration.html
.. _DoWhileStmt: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$DoWhileStmt.html
.. _LoopStmt: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$LoopStmt.html
.. _EnumDeclaration: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/TypeScript.qll/type.TypeScript$EnumDeclaration.html
.. _NamespaceDefinition: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/TypeScript.qll/type.TypeScript$NamespaceDefinition.html
.. _BulkReExportDeclaration: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/ES2015Modules.qll/type.ES2015Modules$BulkReExportDeclaration.html
.. _ReExportDeclaration: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/ES2015Modules.qll/type.ES2015Modules$ReExportDeclaration.html
.. _ExportDeclaration: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/ES2015Modules.qll/type.ES2015Modules$ExportDeclaration.html
.. _ExportDefaultDeclaration: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/ES2015Modules.qll/type.ES2015Modules$ExportDefaultDeclaration.html
.. _FunctionDeclStmt: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$FunctionDeclStmt.html
.. _ExportSpecifier: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/ES2015Modules.qll/type.ES2015Modules$ExportSpecifier.html
.. _ExportNamedDeclaration: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/ES2015Modules.qll/type.ES2015Modules$ExportNamedDeclaration.html
.. _ExportAssignDeclaration: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/TypeScript.qll/type.TypeScript$ExportAssignDeclaration.html
.. _ExportAsNamespaceDeclaration: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/TypeScript.qll/type.TypeScript$ExportAsNamespaceDeclaration.html
.. _ForStmt: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$ForStmt.html
.. _VarAccess: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Variables.qll/type.Variables$VarAccess.html
.. _ForInStmt: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$ForInStmt.html
.. _EnhancedForLoop: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$EnhancedForLoop.html
.. _ForOfStmt: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$ForOfStmt.html
.. _Parameter: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Variables.qll/type.Variables$Parameter.html
.. _Function: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Functions.qll/type.Functions$Function.html
.. _IfStmt: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$IfStmt.html
.. _ImportSpecifier: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/ES2015Modules.qll/type.ES2015Modules$ImportSpecifier.html
.. _ImportDeclaration: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/ES2015Modules.qll/type.ES2015Modules$ImportDeclaration.html
.. _Import: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Modules.qll/type.Modules$Import.html
.. _ImportEqualsDeclaration: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/TypeScript.qll/type.TypeScript$ImportEqualsDeclaration.html
.. _InterfaceDeclaration: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/TypeScript.qll/type.TypeScript$InterfaceDeclaration.html
.. _InterfaceDefinition: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/TypeScript.qll/type.TypeScript$InterfaceDefinition.html
.. _LetStmt: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$LetStmt.html
.. _NamespaceDeclaration: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/TypeScript.qll/type.TypeScript$NamespaceDeclaration.html
.. _ReturnStmt: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$ReturnStmt.html
.. _ThrowStmt: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$ThrowStmt.html
.. _TypeExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/TypeScript.qll/type.TypeScript$TypeExpr.html
.. _TypeAliasDeclaration: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/TypeScript.qll/type.TypeScript$TypeAliasDeclaration.html
.. _VarDeclStmt: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$VarDeclStmt.html
.. _WhileStmt: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$WhileStmt.html
.. _WithStmt: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$WithStmt.html
.. _BlockStmt: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Stmt.qll/type.Stmt$BlockStmt.html
.. _Literal: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$Literal.html
.. _BooleanLiteral: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$BooleanLiteral.html
.. _NumberLiteral: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$NumberLiteral.html
.. _RegExpLiteral: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$RegExpLiteral.html
.. _NullLiteral: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$NullLiteral.html
.. _VarDecl: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Variables.qll/type.Variables$VarDecl.html
.. _VarRef: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Variables.qll/type.Variables$VarRef.html
.. _ThisExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$ThisExpr.html
.. _ArrayExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$ArrayExpr.html
.. _Property: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$Property.html
.. _ObjectExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$ObjectExpr.html
.. _FunctionExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$FunctionExpr.html
.. _ArrowFunctionExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$ArrowFunctionExpr.html
.. _ParExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$ParExpr.html
.. _TemplateLiteral: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Templates.qll/type.Templates$TemplateLiteral.html
.. _TemplateElement: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Templates.qll/type.Templates$TemplateElement.html
.. _TaggedTemplateExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Templates.qll/type.Templates$TaggedTemplateExpr.html
.. _ValueProperty: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$ValueProperty.html
.. _PropertyGetter: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$PropertyGetter.html
.. _PropertyAccessor: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$PropertyAccessor.html
.. _PropertySetter: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$PropertySetter.html
.. _PropAccess: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$PropAccess.html
.. _DotExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$DotExpr.html
.. _IndexExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$IndexExpr.html
.. _InvokeExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$InvokeExpr.html
.. _CallExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$CallExpr.html
.. _MethodCallExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$MethodCallExpr.html
.. _NewExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$NewExpr.html
.. _UnaryExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$UnaryExpr.html
.. _BitNotExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$BitNotExpr.html
.. _NegExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$NegExpr.html
.. _PlusExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$PlusExpr.html
.. _LogNotExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$LogNotExpr.html
.. _TypeofExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$TypeofExpr.html
.. _VoidExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$VoidExpr.html
.. _DeleteExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$DeleteExpr.html
.. _SpreadElement: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$SpreadElement.html
.. _BinaryExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$BinaryExpr.html
.. _MulExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$MulExpr.html
.. _DivExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$DivExpr.html
.. _ModExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$ModExpr.html
.. _ExpExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$ExpExpr.html
.. _AddExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$AddExpr.html
.. _SubExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$SubExpr.html
.. _LShiftExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$LShiftExpr.html
.. _RShiftExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$RShiftExpr.html
.. _URShiftExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$URShiftExpr.html
.. _LogAndExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$LogAndExpr.html
.. _LogOrExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$LogOrExpr.html
.. _LTExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$LTExpr.html
.. _Comparison: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$Comparison.html
.. _GTExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$GTExpr.html
.. _LEExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$LEExpr.html
.. _GEExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$GEExpr.html
.. _EqExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$EqExpr.html
.. _EqualityTest: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$EqualityTest.html
.. _NEqExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$NEqExpr.html
.. _StrictEqExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$StrictEqExpr.html
.. _StrictNEqExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$StrictNEqExpr.html
.. _BitAndExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$BitAndExpr.html
.. _BitOrExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$BitOrExpr.html
.. _XOrExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$XOrExpr.html
.. _InExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$InExpr.html
.. _InstanceofExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$InstanceofExpr.html
.. _Assignment: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$Assignment.html
.. _AssignExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$AssignExpr.html
.. _AssignAddExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$AssignAddExpr.html
.. _CompoundAssignExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$CompoundAssignExpr.html
.. _AssignSubExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$AssignSubExpr.html
.. _AssignMulExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$AssignMulExpr.html
.. _AssignExpExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$AssignExpExpr.html
.. _AssignDivExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$AssignDivExpr.html
.. _AssignModExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$AssignModExpr.html
.. _AssignAndExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$AssignAndExpr.html
.. _AssignOrExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$AssignOrExpr.html
.. _AssignXOrExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$AssignXOrExpr.html
.. _AssignLShiftExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$AssignLShiftExpr.html
.. _AssignRShiftExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$AssignRShiftExpr.html
.. _AssignURShiftExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$AssignURShiftExpr.html
.. _UpdateExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$UpdateExpr.html
.. _PostIncExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$PostIncExpr.html
.. _PostDecExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$PostDecExpr.html
.. _PreIncExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$PreIncExpr.html
.. _PreDecExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$PreDecExpr.html
.. _ConditionalExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$ConditionalExpr.html
.. _SeqExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$SeqExpr.html
.. _AwaitExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$AwaitExpr.html
.. _YieldExpr: https://codeql.github.com/codeql-standard-libraries/javascript/semmle/javascript/Expr.qll/type.Expr$YieldExpr.html

