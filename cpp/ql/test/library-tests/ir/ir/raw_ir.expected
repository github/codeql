bad_asts.cpp:
#    9| int Bad::S::MemberFunction<int 6>(int)
#    9|   Block 0
#    9|     v9_1(void)            = EnterFunction                : 
#    9|     mu9_2(unknown)        = AliasedDefinition            : 
#    9|     mu9_3(unknown)        = InitializeNonLocal           : 
#    9|     r9_4(glval<unknown>)  = VariableAddress[#this]       : 
#    9|     mu9_5(glval<S>)       = InitializeParameter[#this]   : &:r9_4
#    9|     r9_6(glval<S>)        = Load[#this]                  : &:r9_4, ~m?
#    9|     mu9_7(S)              = InitializeIndirection[#this] : &:r9_6
#    9|     r9_8(glval<int>)      = VariableAddress[y]           : 
#    9|     mu9_9(int)            = InitializeParameter[y]       : &:r9_8
#   10|     r10_1(glval<int>)     = VariableAddress[#return]     : 
#   10|     r10_2(int)            = Constant[6]                  : 
#   10|     r10_3(glval<unknown>) = VariableAddress[#this]       : 
#   10|     r10_4(S *)            = Load[#this]                  : &:r10_3, ~m?
#   10|     r10_5(glval<int>)     = FieldAddress[x]              : r10_4
#   10|     r10_6(int)            = Load[?]                      : &:r10_5, ~m?
#   10|     r10_7(int)            = Add                          : r10_2, r10_6
#   10|     r10_8(glval<int>)     = VariableAddress[y]           : 
#   10|     r10_9(int)            = Load[y]                      : &:r10_8, ~m?
#   10|     r10_10(int)           = Add                          : r10_7, r10_9
#   10|     mu10_11(int)          = Store[#return]               : &:r10_1, r10_10
#    9|     v9_10(void)           = ReturnIndirection[#this]     : &:r9_6, ~m?
#    9|     r9_11(glval<int>)     = VariableAddress[#return]     : 
#    9|     v9_12(void)           = ReturnValue                  : &:r9_11, ~m?
#    9|     v9_13(void)           = AliasedUse                   : ~m?
#    9|     v9_14(void)           = ExitFunction                 : 

#   14| void Bad::CallBadMemberFunction()
#   14|   Block 0
#   14|     v14_1(void)           = EnterFunction                   : 
#   14|     mu14_2(unknown)       = AliasedDefinition               : 
#   14|     mu14_3(unknown)       = InitializeNonLocal              : 
#   15|     r15_1(glval<S>)       = VariableAddress[s]              : 
#   15|     mu15_2(S)             = Uninitialized[s]                : &:r15_1
#   15|     r15_3(glval<int>)     = FieldAddress[x]                 : r15_1
#   15|     r15_4(int)            = Constant[0]                     : 
#   15|     mu15_5(int)           = Store[?]                        : &:r15_3, r15_4
#   16|     r16_1(glval<S>)       = VariableAddress[s]              : 
#   16|     r16_2(glval<unknown>) = FunctionAddress[MemberFunction] : 
#   16|     r16_3(int)            = Constant[1]                     : 
#   16|     r16_4(int)            = Call[MemberFunction]            : func:r16_2, this:r16_1, 0:r16_3
#   16|     mu16_5(unknown)       = ^CallSideEffect                 : ~m?
#   16|     v16_6(void)           = ^IndirectReadSideEffect[-1]     : &:r16_1, ~m?
#   16|     mu16_7(S)             = ^IndirectMayWriteSideEffect[-1] : &:r16_1
#   17|     v17_1(void)           = NoOp                            : 
#   14|     v14_4(void)           = ReturnVoid                      : 
#   14|     v14_5(void)           = AliasedUse                      : ~m?
#   14|     v14_6(void)           = ExitFunction                    : 

#   19| void Bad::Point::Point(Bad::Point const&)
#   19|   Block 0
#   19|     v19_1(void)            = EnterFunction                                : 
#   19|     mu19_2(unknown)        = AliasedDefinition                            : 
#   19|     mu19_3(unknown)        = InitializeNonLocal                           : 
#   19|     r19_4(glval<unknown>)  = VariableAddress[#this]                       : 
#   19|     mu19_5(glval<Point>)   = InitializeParameter[#this]                   : &:r19_4
#   19|     r19_6(glval<Point>)    = Load[#this]                                  : &:r19_4, ~m?
#   19|     mu19_7(Point)          = InitializeIndirection[#this]                 : &:r19_6
#-----|     r0_1(glval<Point &>)   = VariableAddress[(unnamed parameter 0)]       : 
#-----|     mu0_2(Point &)         = InitializeParameter[(unnamed parameter 0)]   : &:r0_1
#-----|     r0_3(Point &)          = Load[(unnamed parameter 0)]                  : &:r0_1, ~m?
#-----|     mu0_4(unknown)         = InitializeIndirection[(unnamed parameter 0)] : &:r0_3
#   19|     r19_8(glval<int>)      = FieldAddress[x]                              : mu19_5
#   19|     r19_9(glval<Point &>)  = VariableAddress[(unnamed parameter 0)]       : 
#   19|     r19_10(Point &)        = Load[(unnamed parameter 0)]                  : &:r19_9, ~m?
#   19|     r19_11(glval<Point>)   = CopyValue                                    : r19_10
#   19|     r19_12(glval<int>)     = FieldAddress[x]                              : r19_11
#   19|     r19_13(int)            = Load[?]                                      : &:r19_12, ~m?
#   19|     mu19_14(int)           = Store[?]                                     : &:r19_8, r19_13
#   19|     r19_15(glval<int>)     = FieldAddress[y]                              : mu19_5
#   19|     r19_16(glval<Point &>) = VariableAddress[(unnamed parameter 0)]       : 
#   19|     r19_17(Point &)        = Load[(unnamed parameter 0)]                  : &:r19_16, ~m?
#   19|     r19_18(glval<Point>)   = CopyValue                                    : r19_17
#   19|     r19_19(glval<int>)     = FieldAddress[y]                              : r19_18
#   19|     r19_20(int)            = Load[?]                                      : &:r19_19, ~m?
#   19|     mu19_21(int)           = Store[?]                                     : &:r19_15, r19_20
#   19|     v19_22(void)           = NoOp                                         : 
#   19|     v19_23(void)           = ReturnIndirection[#this]                     : &:r19_6, ~m?
#-----|     v0_5(void)             = ReturnIndirection[(unnamed parameter 0)]     : &:r0_3, ~m?
#   19|     v19_24(void)           = ReturnVoid                                   : 
#   19|     v19_25(void)           = AliasedUse                                   : ~m?
#   19|     v19_26(void)           = ExitFunction                                 : 

#   22| void Bad::Point::Point()
#   22|   Block 0
#   22|     v22_1(void)           = EnterFunction                : 
#   22|     mu22_2(unknown)       = AliasedDefinition            : 
#   22|     mu22_3(unknown)       = InitializeNonLocal           : 
#   22|     r22_4(glval<unknown>) = VariableAddress[#this]       : 
#   22|     mu22_5(glval<Point>)  = InitializeParameter[#this]   : &:r22_4
#   22|     r22_6(glval<Point>)   = Load[#this]                  : &:r22_4, ~m?
#   22|     mu22_7(Point)         = InitializeIndirection[#this] : &:r22_6
#   23|     v23_1(void)           = NoOp                         : 
#   22|     v22_8(void)           = ReturnIndirection[#this]     : &:r22_6, ~m?
#   22|     v22_9(void)           = ReturnVoid                   : 
#   22|     v22_10(void)          = AliasedUse                   : ~m?
#   22|     v22_11(void)          = ExitFunction                 : 

#   26| void Bad::CallCopyConstructor(Bad::Point const&)
#   26|   Block 0
#   26|     v26_1(void)           = EnterFunction            : 
#   26|     mu26_2(unknown)       = AliasedDefinition        : 
#   26|     mu26_3(unknown)       = InitializeNonLocal       : 
#   26|     r26_4(glval<Point &>) = VariableAddress[a]       : 
#   26|     mu26_5(Point &)       = InitializeParameter[a]   : &:r26_4
#   26|     r26_6(Point &)        = Load[a]                  : &:r26_4, ~m?
#   26|     mu26_7(unknown)       = InitializeIndirection[a] : &:r26_6
#   27|     r27_1(glval<Point>)   = VariableAddress[b]       : 
#   27|     r27_2(glval<Point &>) = VariableAddress[a]       : 
#   27|     r27_3(Point &)        = Load[a]                  : &:r27_2, ~m?
#   27|     r27_4(glval<Point>)   = CopyValue                : r27_3
#   27|     r27_5(glval<Point>)   = Convert                  : r27_4
#   27|     r27_6(Point)          = Load[?]                  : &:r27_5, ~m?
#   27|     mu27_7(Point)         = Store[b]                 : &:r27_1, r27_6
#   28|     v28_1(void)           = NoOp                     : 
#   26|     v26_8(void)           = ReturnIndirection[a]     : &:r26_6, ~m?
#   26|     v26_9(void)           = ReturnVoid               : 
#   26|     v26_10(void)          = AliasedUse               : ~m?
#   26|     v26_11(void)          = ExitFunction             : 

bad_stmts.cpp:
#    5| void Bad::errorExpr()
#    5|   Block 0
#    5|     v5_1(void)         = EnterFunction           : 
#    5|     mu5_2(unknown)     = AliasedDefinition       : 
#    5|     mu5_3(unknown)     = InitializeNonLocal      : 
#    6|     r6_1(glval<int &>) = VariableAddress[intref] : 
#    6|     r6_2(error)        = Error                   : 
#    6|     mu6_3(int &)       = Store[intref]           : &:r6_1, r6_2
#    7|     r7_1(glval<int>)   = VariableAddress[x]      : 
#    7|     r7_2(error)        = Error                   : 
#    7|     mu7_3(int)         = Store[x]                : &:r7_1, r7_2
#    8|     r8_1(glval<error>) = Error                   : 
#    8|     r8_2(error)        = Load[?]                 : &:r8_1, ~m?
#    8|     r8_3(glval<int>)   = VariableAddress[x]      : 
#    8|     mu8_4(int)         = Store[x]                : &:r8_3, r8_2
#    9|     v9_1(void)         = NoOp                    : 
#    5|     v5_4(void)         = ReturnVoid              : 
#    5|     v5_5(void)         = AliasedUse              : ~m?
#    5|     v5_6(void)         = ExitFunction            : 

clang.cpp:
#    5| int* globalIntAddress()
#    5|   Block 0
#    5|     v5_1(void)         = EnterFunction              : 
#    5|     mu5_2(unknown)     = AliasedDefinition          : 
#    5|     mu5_3(unknown)     = InitializeNonLocal         : 
#    6|     r6_1(glval<int *>) = VariableAddress[#return]   : 
#    6|     r6_2(glval<int>)   = VariableAddress[globalInt] : 
#    6|     r6_3(int *)        = CopyValue                  : r6_2
#    6|     mu6_4(int *)       = Store[#return]             : &:r6_1, r6_3
#    5|     r5_4(glval<int *>) = VariableAddress[#return]   : 
#    5|     v5_5(void)         = ReturnValue                : &:r5_4, ~m?
#    5|     v5_6(void)         = AliasedUse                 : ~m?
#    5|     v5_7(void)         = ExitFunction               : 

complex.c:
#    1| void complex_literals()
#    1|   Block 0
#    1|     v1_1(void)                           = EnterFunction        : 
#    1|     mu1_2(unknown)                       = AliasedDefinition    : 
#    1|     mu1_3(unknown)                       = InitializeNonLocal   : 
#    2|     r2_1(glval<_Complex float>)          = VariableAddress[cf]  : 
#    2|     r2_2(double)                         = Constant[2.0]        : 
#    2|     r2_3(_Complex float)                 = Convert              : r2_2
#    2|     mu2_4(_Complex float)                = Store[cf]            : &:r2_1, r2_3
#    3|     r3_1(_Imaginary float)               = Constant[1.0i]       : 
#    3|     r3_2(_Complex float)                 = Convert              : r3_1
#    3|     r3_3(glval<_Complex float>)          = VariableAddress[cf]  : 
#    3|     mu3_4(_Complex float)                = Store[cf]            : &:r3_3, r3_2
#    4|     r4_1(glval<_Complex double>)         = VariableAddress[cd]  : 
#    4|     r4_2(double)                         = Constant[3.0]        : 
#    4|     r4_3(_Complex double)                = Convert              : r4_2
#    4|     mu4_4(_Complex double)               = Store[cd]            : &:r4_1, r4_3
#    5|     r5_1(_Imaginary float)               = Constant[1.0i]       : 
#    5|     r5_2(_Complex double)                = Convert              : r5_1
#    5|     r5_3(glval<_Complex double>)         = VariableAddress[cd]  : 
#    5|     mu5_4(_Complex double)               = Store[cd]            : &:r5_3, r5_2
#    6|     r6_1(glval<_Complex long double>)    = VariableAddress[cld] : 
#    6|     r6_2(double)                         = Constant[5.0]        : 
#    6|     r6_3(_Complex long double)           = Convert              : r6_2
#    6|     mu6_4(_Complex long double)          = Store[cld]           : &:r6_1, r6_3
#    7|     r7_1(_Imaginary float)               = Constant[1.0i]       : 
#    7|     r7_2(_Complex long double)           = Convert              : r7_1
#    7|     r7_3(glval<_Complex long double>)    = VariableAddress[cld] : 
#    7|     mu7_4(_Complex long double)          = Store[cld]           : &:r7_3, r7_2
#    9|     r9_1(glval<_Imaginary float>)        = VariableAddress[jf]  : 
#    9|     r9_2(_Imaginary float)               = Constant[1.0i]       : 
#    9|     mu9_3(_Imaginary float)              = Store[jf]            : &:r9_1, r9_2
#   10|     r10_1(glval<_Imaginary double>)      = VariableAddress[jd]  : 
#   10|     r10_2(_Imaginary float)              = Constant[1.0i]       : 
#   10|     r10_3(_Imaginary double)             = Convert              : r10_2
#   10|     mu10_4(_Imaginary double)            = Store[jd]            : &:r10_1, r10_3
#   11|     r11_1(glval<_Imaginary long double>) = VariableAddress[jld] : 
#   11|     r11_2(_Imaginary float)              = Constant[1.0i]       : 
#   11|     r11_3(_Imaginary long double)        = Convert              : r11_2
#   11|     mu11_4(_Imaginary long double)       = Store[jld]           : &:r11_1, r11_3
#   12|     v12_1(void)                          = NoOp                 : 
#    1|     v1_4(void)                           = ReturnVoid           : 
#    1|     v1_5(void)                           = AliasedUse           : ~m?
#    1|     v1_6(void)                           = ExitFunction         : 

#   14| void complex_arithmetic()
#   14|   Block 0
#   14|     v14_1(void)                    = EnterFunction        : 
#   14|     mu14_2(unknown)                = AliasedDefinition    : 
#   14|     mu14_3(unknown)                = InitializeNonLocal   : 
#   15|     r15_1(glval<float>)            = VariableAddress[f1]  : 
#   15|     r15_2(float)                   = Constant[5.0]        : 
#   15|     mu15_3(float)                  = Store[f1]            : &:r15_1, r15_2
#   16|     r16_1(glval<float>)            = VariableAddress[f2]  : 
#   16|     r16_2(float)                   = Constant[7.0]        : 
#   16|     mu16_3(float)                  = Store[f2]            : &:r16_1, r16_2
#   17|     r17_1(glval<float>)            = VariableAddress[f3]  : 
#   17|     mu17_2(float)                  = Uninitialized[f3]    : &:r17_1
#   18|     r18_1(glval<_Complex float>)   = VariableAddress[cf1] : 
#   18|     r18_2(double)                  = Constant[2.0]        : 
#   18|     r18_3(_Complex float)          = Convert              : r18_2
#   18|     mu18_4(_Complex float)         = Store[cf1]           : &:r18_1, r18_3
#   19|     r19_1(glval<_Complex float>)   = VariableAddress[cf2] : 
#   19|     r19_2(_Imaginary float)        = Constant[1.0i]       : 
#   19|     r19_3(_Complex float)          = Convert              : r19_2
#   19|     mu19_4(_Complex float)         = Store[cf2]           : &:r19_1, r19_3
#   20|     r20_1(glval<_Complex float>)   = VariableAddress[cf3] : 
#   20|     mu20_2(_Complex float)         = Uninitialized[cf3]   : &:r20_1
#   21|     r21_1(glval<_Imaginary float>) = VariableAddress[jf1] : 
#   21|     r21_2(_Imaginary float)        = Constant[1.0i]       : 
#   21|     mu21_3(_Imaginary float)       = Store[jf1]           : &:r21_1, r21_2
#   22|     r22_1(glval<_Imaginary float>) = VariableAddress[jf2] : 
#   22|     r22_2(_Imaginary float)        = Constant[1.0i]       : 
#   22|     mu22_3(_Imaginary float)       = Store[jf2]           : &:r22_1, r22_2
#   23|     r23_1(glval<_Imaginary float>) = VariableAddress[jf3] : 
#   23|     mu23_2(_Imaginary float)       = Uninitialized[jf3]   : &:r23_1
#   26|     r26_1(glval<_Complex float>)   = VariableAddress[cf1] : 
#   26|     r26_2(_Complex float)          = Load[cf1]            : &:r26_1, ~m?
#   26|     r26_3(_Complex float)          = CopyValue            : r26_2
#   26|     r26_4(glval<_Complex float>)   = VariableAddress[cf3] : 
#   26|     mu26_5(_Complex float)         = Store[cf3]           : &:r26_4, r26_3
#   27|     r27_1(glval<_Complex float>)   = VariableAddress[cf1] : 
#   27|     r27_2(_Complex float)          = Load[cf1]            : &:r27_1, ~m?
#   27|     r27_3(_Complex float)          = Negate               : r27_2
#   27|     r27_4(glval<_Complex float>)   = VariableAddress[cf3] : 
#   27|     mu27_5(_Complex float)         = Store[cf3]           : &:r27_4, r27_3
#   30|     r30_1(glval<_Complex float>)   = VariableAddress[cf1] : 
#   30|     r30_2(_Complex float)          = Load[cf1]            : &:r30_1, ~m?
#   30|     r30_3(glval<_Complex float>)   = VariableAddress[cf2] : 
#   30|     r30_4(_Complex float)          = Load[cf2]            : &:r30_3, ~m?
#   30|     r30_5(_Complex float)          = Add                  : r30_2, r30_4
#   30|     r30_6(glval<_Complex float>)   = VariableAddress[cf3] : 
#   30|     mu30_7(_Complex float)         = Store[cf3]           : &:r30_6, r30_5
#   31|     r31_1(glval<_Complex float>)   = VariableAddress[cf1] : 
#   31|     r31_2(_Complex float)          = Load[cf1]            : &:r31_1, ~m?
#   31|     r31_3(glval<_Complex float>)   = VariableAddress[cf2] : 
#   31|     r31_4(_Complex float)          = Load[cf2]            : &:r31_3, ~m?
#   31|     r31_5(_Complex float)          = Sub                  : r31_2, r31_4
#   31|     r31_6(glval<_Complex float>)   = VariableAddress[cf3] : 
#   31|     mu31_7(_Complex float)         = Store[cf3]           : &:r31_6, r31_5
#   32|     r32_1(glval<_Complex float>)   = VariableAddress[cf1] : 
#   32|     r32_2(_Complex float)          = Load[cf1]            : &:r32_1, ~m?
#   32|     r32_3(glval<_Complex float>)   = VariableAddress[cf2] : 
#   32|     r32_4(_Complex float)          = Load[cf2]            : &:r32_3, ~m?
#   32|     r32_5(_Complex float)          = Mul                  : r32_2, r32_4
#   32|     r32_6(glval<_Complex float>)   = VariableAddress[cf3] : 
#   32|     mu32_7(_Complex float)         = Store[cf3]           : &:r32_6, r32_5
#   33|     r33_1(glval<_Complex float>)   = VariableAddress[cf1] : 
#   33|     r33_2(_Complex float)          = Load[cf1]            : &:r33_1, ~m?
#   33|     r33_3(glval<_Complex float>)   = VariableAddress[cf2] : 
#   33|     r33_4(_Complex float)          = Load[cf2]            : &:r33_3, ~m?
#   33|     r33_5(_Complex float)          = Div                  : r33_2, r33_4
#   33|     r33_6(glval<_Complex float>)   = VariableAddress[cf3] : 
#   33|     mu33_7(_Complex float)         = Store[cf3]           : &:r33_6, r33_5
#   36|     r36_1(glval<_Imaginary float>) = VariableAddress[jf1] : 
#   36|     r36_2(_Imaginary float)        = Load[jf1]            : &:r36_1, ~m?
#   36|     r36_3(_Imaginary float)        = CopyValue            : r36_2
#   36|     r36_4(glval<_Imaginary float>) = VariableAddress[jf3] : 
#   36|     mu36_5(_Imaginary float)       = Store[jf3]           : &:r36_4, r36_3
#   37|     r37_1(glval<_Imaginary float>) = VariableAddress[jf1] : 
#   37|     r37_2(_Imaginary float)        = Load[jf1]            : &:r37_1, ~m?
#   37|     r37_3(_Imaginary float)        = Negate               : r37_2
#   37|     r37_4(glval<_Imaginary float>) = VariableAddress[jf3] : 
#   37|     mu37_5(_Imaginary float)       = Store[jf3]           : &:r37_4, r37_3
#   40|     r40_1(glval<_Imaginary float>) = VariableAddress[jf1] : 
#   40|     r40_2(_Imaginary float)        = Load[jf1]            : &:r40_1, ~m?
#   40|     r40_3(glval<_Imaginary float>) = VariableAddress[jf2] : 
#   40|     r40_4(_Imaginary float)        = Load[jf2]            : &:r40_3, ~m?
#   40|     r40_5(_Imaginary float)        = Add                  : r40_2, r40_4
#   40|     r40_6(glval<_Imaginary float>) = VariableAddress[jf3] : 
#   40|     mu40_7(_Imaginary float)       = Store[jf3]           : &:r40_6, r40_5
#   41|     r41_1(glval<_Imaginary float>) = VariableAddress[jf1] : 
#   41|     r41_2(_Imaginary float)        = Load[jf1]            : &:r41_1, ~m?
#   41|     r41_3(glval<_Imaginary float>) = VariableAddress[jf2] : 
#   41|     r41_4(_Imaginary float)        = Load[jf2]            : &:r41_3, ~m?
#   41|     r41_5(_Imaginary float)        = Sub                  : r41_2, r41_4
#   41|     r41_6(glval<_Imaginary float>) = VariableAddress[jf3] : 
#   41|     mu41_7(_Imaginary float)       = Store[jf3]           : &:r41_6, r41_5
#   42|     r42_1(glval<_Imaginary float>) = VariableAddress[jf1] : 
#   42|     r42_2(_Imaginary float)        = Load[jf1]            : &:r42_1, ~m?
#   42|     r42_3(glval<_Imaginary float>) = VariableAddress[jf2] : 
#   42|     r42_4(_Imaginary float)        = Load[jf2]            : &:r42_3, ~m?
#   42|     r42_5(float)                   = Mul                  : r42_2, r42_4
#   42|     r42_6(glval<float>)            = VariableAddress[f3]  : 
#   42|     mu42_7(float)                  = Store[f3]            : &:r42_6, r42_5
#   43|     r43_1(glval<_Imaginary float>) = VariableAddress[jf1] : 
#   43|     r43_2(_Imaginary float)        = Load[jf1]            : &:r43_1, ~m?
#   43|     r43_3(glval<_Imaginary float>) = VariableAddress[jf2] : 
#   43|     r43_4(_Imaginary float)        = Load[jf2]            : &:r43_3, ~m?
#   43|     r43_5(float)                   = Div                  : r43_2, r43_4
#   43|     r43_6(glval<float>)            = VariableAddress[f3]  : 
#   43|     mu43_7(float)                  = Store[f3]            : &:r43_6, r43_5
#   46|     r46_1(glval<_Imaginary float>) = VariableAddress[jf1] : 
#   46|     r46_2(_Imaginary float)        = Load[jf1]            : &:r46_1, ~m?
#   46|     r46_3(glval<float>)            = VariableAddress[f2]  : 
#   46|     r46_4(float)                   = Load[f2]             : &:r46_3, ~m?
#   46|     r46_5(_Complex float)          = Add                  : r46_2, r46_4
#   46|     r46_6(glval<_Complex float>)   = VariableAddress[cf3] : 
#   46|     mu46_7(_Complex float)         = Store[cf3]           : &:r46_6, r46_5
#   47|     r47_1(glval<_Imaginary float>) = VariableAddress[jf1] : 
#   47|     r47_2(_Imaginary float)        = Load[jf1]            : &:r47_1, ~m?
#   47|     r47_3(glval<float>)            = VariableAddress[f2]  : 
#   47|     r47_4(float)                   = Load[f2]             : &:r47_3, ~m?
#   47|     r47_5(_Complex float)          = Sub                  : r47_2, r47_4
#   47|     r47_6(glval<_Complex float>)   = VariableAddress[cf3] : 
#   47|     mu47_7(_Complex float)         = Store[cf3]           : &:r47_6, r47_5
#   48|     r48_1(glval<_Imaginary float>) = VariableAddress[jf1] : 
#   48|     r48_2(_Imaginary float)        = Load[jf1]            : &:r48_1, ~m?
#   48|     r48_3(glval<float>)            = VariableAddress[f2]  : 
#   48|     r48_4(float)                   = Load[f2]             : &:r48_3, ~m?
#   48|     r48_5(_Imaginary float)        = Mul                  : r48_2, r48_4
#   48|     r48_6(glval<_Imaginary float>) = VariableAddress[jf3] : 
#   48|     mu48_7(_Imaginary float)       = Store[jf3]           : &:r48_6, r48_5
#   49|     r49_1(glval<_Imaginary float>) = VariableAddress[jf1] : 
#   49|     r49_2(_Imaginary float)        = Load[jf1]            : &:r49_1, ~m?
#   49|     r49_3(glval<float>)            = VariableAddress[f2]  : 
#   49|     r49_4(float)                   = Load[f2]             : &:r49_3, ~m?
#   49|     r49_5(_Imaginary float)        = Div                  : r49_2, r49_4
#   49|     r49_6(glval<_Imaginary float>) = VariableAddress[jf3] : 
#   49|     mu49_7(_Imaginary float)       = Store[jf3]           : &:r49_6, r49_5
#   52|     r52_1(glval<float>)            = VariableAddress[f1]  : 
#   52|     r52_2(float)                   = Load[f1]             : &:r52_1, ~m?
#   52|     r52_3(glval<_Imaginary float>) = VariableAddress[jf2] : 
#   52|     r52_4(_Imaginary float)        = Load[jf2]            : &:r52_3, ~m?
#   52|     r52_5(_Complex float)          = Add                  : r52_2, r52_4
#   52|     r52_6(glval<_Complex float>)   = VariableAddress[cf3] : 
#   52|     mu52_7(_Complex float)         = Store[cf3]           : &:r52_6, r52_5
#   53|     r53_1(glval<float>)            = VariableAddress[f1]  : 
#   53|     r53_2(float)                   = Load[f1]             : &:r53_1, ~m?
#   53|     r53_3(glval<_Imaginary float>) = VariableAddress[jf2] : 
#   53|     r53_4(_Imaginary float)        = Load[jf2]            : &:r53_3, ~m?
#   53|     r53_5(_Complex float)          = Sub                  : r53_2, r53_4
#   53|     r53_6(glval<_Complex float>)   = VariableAddress[cf3] : 
#   53|     mu53_7(_Complex float)         = Store[cf3]           : &:r53_6, r53_5
#   54|     r54_1(glval<float>)            = VariableAddress[f1]  : 
#   54|     r54_2(float)                   = Load[f1]             : &:r54_1, ~m?
#   54|     r54_3(glval<_Imaginary float>) = VariableAddress[jf2] : 
#   54|     r54_4(_Imaginary float)        = Load[jf2]            : &:r54_3, ~m?
#   54|     r54_5(_Imaginary float)        = Mul                  : r54_2, r54_4
#   54|     r54_6(glval<_Imaginary float>) = VariableAddress[jf3] : 
#   54|     mu54_7(_Imaginary float)       = Store[jf3]           : &:r54_6, r54_5
#   55|     r55_1(glval<float>)            = VariableAddress[f1]  : 
#   55|     r55_2(float)                   = Load[f1]             : &:r55_1, ~m?
#   55|     r55_3(glval<_Imaginary float>) = VariableAddress[jf2] : 
#   55|     r55_4(_Imaginary float)        = Load[jf2]            : &:r55_3, ~m?
#   55|     r55_5(_Imaginary float)        = Div                  : r55_2, r55_4
#   55|     r55_6(glval<_Imaginary float>) = VariableAddress[jf3] : 
#   55|     mu55_7(_Imaginary float)       = Store[jf3]           : &:r55_6, r55_5
#   56|     v56_1(void)                    = NoOp                 : 
#   14|     v14_4(void)                    = ReturnVoid           : 
#   14|     v14_5(void)                    = AliasedUse           : ~m?
#   14|     v14_6(void)                    = ExitFunction         : 

#   58| void complex_conversions()
#   58|   Block 0
#   58|     v58_1(void)                           = EnterFunction        : 
#   58|     mu58_2(unknown)                       = AliasedDefinition    : 
#   58|     mu58_3(unknown)                       = InitializeNonLocal   : 
#   59|     r59_1(glval<float>)                   = VariableAddress[f]   : 
#   59|     r59_2(float)                          = Constant[2.0]        : 
#   59|     mu59_3(float)                         = Store[f]             : &:r59_1, r59_2
#   60|     r60_1(glval<double>)                  = VariableAddress[d]   : 
#   60|     r60_2(double)                         = Constant[3.0]        : 
#   60|     mu60_3(double)                        = Store[d]             : &:r60_1, r60_2
#   61|     r61_1(glval<long double>)             = VariableAddress[ld]  : 
#   61|     r61_2(long double)                    = Constant[5.0]        : 
#   61|     mu61_3(long double)                   = Store[ld]            : &:r61_1, r61_2
#   62|     r62_1(glval<_Complex float>)          = VariableAddress[cf]  : 
#   62|     r62_2(double)                         = Constant[7.0]        : 
#   62|     r62_3(_Complex float)                 = Convert              : r62_2
#   62|     mu62_4(_Complex float)                = Store[cf]            : &:r62_1, r62_3
#   63|     r63_1(glval<_Complex double>)         = VariableAddress[cd]  : 
#   63|     r63_2(double)                         = Constant[11.0]       : 
#   63|     r63_3(_Complex double)                = Convert              : r63_2
#   63|     mu63_4(_Complex double)               = Store[cd]            : &:r63_1, r63_3
#   64|     r64_1(glval<_Complex long double>)    = VariableAddress[cld] : 
#   64|     r64_2(double)                         = Constant[13.0]       : 
#   64|     r64_3(_Complex long double)           = Convert              : r64_2
#   64|     mu64_4(_Complex long double)          = Store[cld]           : &:r64_1, r64_3
#   65|     r65_1(glval<_Imaginary float>)        = VariableAddress[jf]  : 
#   65|     r65_2(_Imaginary float)               = Constant[1.0i]       : 
#   65|     mu65_3(_Imaginary float)              = Store[jf]            : &:r65_1, r65_2
#   66|     r66_1(glval<_Imaginary double>)       = VariableAddress[jd]  : 
#   66|     r66_2(_Imaginary float)               = Constant[1.0i]       : 
#   66|     r66_3(_Imaginary double)              = Convert              : r66_2
#   66|     mu66_4(_Imaginary double)             = Store[jd]            : &:r66_1, r66_3
#   67|     r67_1(glval<_Imaginary long double>)  = VariableAddress[jld] : 
#   67|     r67_2(_Imaginary float)               = Constant[1.0i]       : 
#   67|     r67_3(_Imaginary long double)         = Convert              : r67_2
#   67|     mu67_4(_Imaginary long double)        = Store[jld]           : &:r67_1, r67_3
#   70|     r70_1(glval<_Complex float>)          = VariableAddress[cf]  : 
#   70|     r70_2(_Complex float)                 = Load[cf]             : &:r70_1, ~m?
#   70|     r70_3(glval<_Complex float>)          = VariableAddress[cf]  : 
#   70|     mu70_4(_Complex float)                = Store[cf]            : &:r70_3, r70_2
#   71|     r71_1(glval<_Complex double>)         = VariableAddress[cd]  : 
#   71|     r71_2(_Complex double)                = Load[cd]             : &:r71_1, ~m?
#   71|     r71_3(_Complex float)                 = Convert              : r71_2
#   71|     r71_4(glval<_Complex float>)          = VariableAddress[cf]  : 
#   71|     mu71_5(_Complex float)                = Store[cf]            : &:r71_4, r71_3
#   72|     r72_1(glval<_Complex long double>)    = VariableAddress[cld] : 
#   72|     r72_2(_Complex long double)           = Load[cld]            : &:r72_1, ~m?
#   72|     r72_3(_Complex float)                 = Convert              : r72_2
#   72|     r72_4(glval<_Complex float>)          = VariableAddress[cf]  : 
#   72|     mu72_5(_Complex float)                = Store[cf]            : &:r72_4, r72_3
#   73|     r73_1(glval<_Complex float>)          = VariableAddress[cf]  : 
#   73|     r73_2(_Complex float)                 = Load[cf]             : &:r73_1, ~m?
#   73|     r73_3(_Complex double)                = Convert              : r73_2
#   73|     r73_4(glval<_Complex double>)         = VariableAddress[cd]  : 
#   73|     mu73_5(_Complex double)               = Store[cd]            : &:r73_4, r73_3
#   74|     r74_1(glval<_Complex double>)         = VariableAddress[cd]  : 
#   74|     r74_2(_Complex double)                = Load[cd]             : &:r74_1, ~m?
#   74|     r74_3(glval<_Complex double>)         = VariableAddress[cd]  : 
#   74|     mu74_4(_Complex double)               = Store[cd]            : &:r74_3, r74_2
#   75|     r75_1(glval<_Complex long double>)    = VariableAddress[cld] : 
#   75|     r75_2(_Complex long double)           = Load[cld]            : &:r75_1, ~m?
#   75|     r75_3(_Complex double)                = Convert              : r75_2
#   75|     r75_4(glval<_Complex double>)         = VariableAddress[cd]  : 
#   75|     mu75_5(_Complex double)               = Store[cd]            : &:r75_4, r75_3
#   76|     r76_1(glval<_Complex float>)          = VariableAddress[cf]  : 
#   76|     r76_2(_Complex float)                 = Load[cf]             : &:r76_1, ~m?
#   76|     r76_3(_Complex long double)           = Convert              : r76_2
#   76|     r76_4(glval<_Complex long double>)    = VariableAddress[cld] : 
#   76|     mu76_5(_Complex long double)          = Store[cld]           : &:r76_4, r76_3
#   77|     r77_1(glval<_Complex double>)         = VariableAddress[cd]  : 
#   77|     r77_2(_Complex double)                = Load[cd]             : &:r77_1, ~m?
#   77|     r77_3(_Complex long double)           = Convert              : r77_2
#   77|     r77_4(glval<_Complex long double>)    = VariableAddress[cld] : 
#   77|     mu77_5(_Complex long double)          = Store[cld]           : &:r77_4, r77_3
#   78|     r78_1(glval<_Complex long double>)    = VariableAddress[cld] : 
#   78|     r78_2(_Complex long double)           = Load[cld]            : &:r78_1, ~m?
#   78|     r78_3(glval<_Complex long double>)    = VariableAddress[cld] : 
#   78|     mu78_4(_Complex long double)          = Store[cld]           : &:r78_3, r78_2
#   81|     r81_1(glval<float>)                   = VariableAddress[f]   : 
#   81|     r81_2(float)                          = Load[f]              : &:r81_1, ~m?
#   81|     r81_3(_Complex float)                 = Convert              : r81_2
#   81|     r81_4(glval<_Complex float>)          = VariableAddress[cf]  : 
#   81|     mu81_5(_Complex float)                = Store[cf]            : &:r81_4, r81_3
#   82|     r82_1(glval<double>)                  = VariableAddress[d]   : 
#   82|     r82_2(double)                         = Load[d]              : &:r82_1, ~m?
#   82|     r82_3(_Complex float)                 = Convert              : r82_2
#   82|     r82_4(glval<_Complex float>)          = VariableAddress[cf]  : 
#   82|     mu82_5(_Complex float)                = Store[cf]            : &:r82_4, r82_3
#   83|     r83_1(glval<long double>)             = VariableAddress[ld]  : 
#   83|     r83_2(long double)                    = Load[ld]             : &:r83_1, ~m?
#   83|     r83_3(_Complex float)                 = Convert              : r83_2
#   83|     r83_4(glval<_Complex float>)          = VariableAddress[cf]  : 
#   83|     mu83_5(_Complex float)                = Store[cf]            : &:r83_4, r83_3
#   84|     r84_1(glval<float>)                   = VariableAddress[f]   : 
#   84|     r84_2(float)                          = Load[f]              : &:r84_1, ~m?
#   84|     r84_3(_Complex double)                = Convert              : r84_2
#   84|     r84_4(glval<_Complex double>)         = VariableAddress[cd]  : 
#   84|     mu84_5(_Complex double)               = Store[cd]            : &:r84_4, r84_3
#   85|     r85_1(glval<double>)                  = VariableAddress[d]   : 
#   85|     r85_2(double)                         = Load[d]              : &:r85_1, ~m?
#   85|     r85_3(_Complex double)                = Convert              : r85_2
#   85|     r85_4(glval<_Complex double>)         = VariableAddress[cd]  : 
#   85|     mu85_5(_Complex double)               = Store[cd]            : &:r85_4, r85_3
#   86|     r86_1(glval<long double>)             = VariableAddress[ld]  : 
#   86|     r86_2(long double)                    = Load[ld]             : &:r86_1, ~m?
#   86|     r86_3(_Complex double)                = Convert              : r86_2
#   86|     r86_4(glval<_Complex double>)         = VariableAddress[cd]  : 
#   86|     mu86_5(_Complex double)               = Store[cd]            : &:r86_4, r86_3
#   87|     r87_1(glval<float>)                   = VariableAddress[f]   : 
#   87|     r87_2(float)                          = Load[f]              : &:r87_1, ~m?
#   87|     r87_3(_Complex long double)           = Convert              : r87_2
#   87|     r87_4(glval<_Complex long double>)    = VariableAddress[cld] : 
#   87|     mu87_5(_Complex long double)          = Store[cld]           : &:r87_4, r87_3
#   88|     r88_1(glval<double>)                  = VariableAddress[d]   : 
#   88|     r88_2(double)                         = Load[d]              : &:r88_1, ~m?
#   88|     r88_3(_Complex long double)           = Convert              : r88_2
#   88|     r88_4(glval<_Complex long double>)    = VariableAddress[cld] : 
#   88|     mu88_5(_Complex long double)          = Store[cld]           : &:r88_4, r88_3
#   89|     r89_1(glval<long double>)             = VariableAddress[ld]  : 
#   89|     r89_2(long double)                    = Load[ld]             : &:r89_1, ~m?
#   89|     r89_3(_Complex long double)           = Convert              : r89_2
#   89|     r89_4(glval<_Complex long double>)    = VariableAddress[cld] : 
#   89|     mu89_5(_Complex long double)          = Store[cld]           : &:r89_4, r89_3
#   92|     r92_1(glval<_Complex float>)          = VariableAddress[cf]  : 
#   92|     r92_2(_Complex float)                 = Load[cf]             : &:r92_1, ~m?
#   92|     r92_3(float)                          = Convert              : r92_2
#   92|     r92_4(glval<float>)                   = VariableAddress[f]   : 
#   92|     mu92_5(float)                         = Store[f]             : &:r92_4, r92_3
#   93|     r93_1(glval<_Complex double>)         = VariableAddress[cd]  : 
#   93|     r93_2(_Complex double)                = Load[cd]             : &:r93_1, ~m?
#   93|     r93_3(float)                          = Convert              : r93_2
#   93|     r93_4(glval<float>)                   = VariableAddress[f]   : 
#   93|     mu93_5(float)                         = Store[f]             : &:r93_4, r93_3
#   94|     r94_1(glval<_Complex long double>)    = VariableAddress[cld] : 
#   94|     r94_2(_Complex long double)           = Load[cld]            : &:r94_1, ~m?
#   94|     r94_3(float)                          = Convert              : r94_2
#   94|     r94_4(glval<float>)                   = VariableAddress[f]   : 
#   94|     mu94_5(float)                         = Store[f]             : &:r94_4, r94_3
#   95|     r95_1(glval<_Complex float>)          = VariableAddress[cf]  : 
#   95|     r95_2(_Complex float)                 = Load[cf]             : &:r95_1, ~m?
#   95|     r95_3(double)                         = Convert              : r95_2
#   95|     r95_4(glval<double>)                  = VariableAddress[d]   : 
#   95|     mu95_5(double)                        = Store[d]             : &:r95_4, r95_3
#   96|     r96_1(glval<_Complex double>)         = VariableAddress[cd]  : 
#   96|     r96_2(_Complex double)                = Load[cd]             : &:r96_1, ~m?
#   96|     r96_3(double)                         = Convert              : r96_2
#   96|     r96_4(glval<double>)                  = VariableAddress[d]   : 
#   96|     mu96_5(double)                        = Store[d]             : &:r96_4, r96_3
#   97|     r97_1(glval<_Complex long double>)    = VariableAddress[cld] : 
#   97|     r97_2(_Complex long double)           = Load[cld]            : &:r97_1, ~m?
#   97|     r97_3(double)                         = Convert              : r97_2
#   97|     r97_4(glval<double>)                  = VariableAddress[d]   : 
#   97|     mu97_5(double)                        = Store[d]             : &:r97_4, r97_3
#   98|     r98_1(glval<_Complex float>)          = VariableAddress[cf]  : 
#   98|     r98_2(_Complex float)                 = Load[cf]             : &:r98_1, ~m?
#   98|     r98_3(long double)                    = Convert              : r98_2
#   98|     r98_4(glval<long double>)             = VariableAddress[ld]  : 
#   98|     mu98_5(long double)                   = Store[ld]            : &:r98_4, r98_3
#   99|     r99_1(glval<_Complex double>)         = VariableAddress[cd]  : 
#   99|     r99_2(_Complex double)                = Load[cd]             : &:r99_1, ~m?
#   99|     r99_3(long double)                    = Convert              : r99_2
#   99|     r99_4(glval<long double>)             = VariableAddress[ld]  : 
#   99|     mu99_5(long double)                   = Store[ld]            : &:r99_4, r99_3
#  100|     r100_1(glval<_Complex long double>)   = VariableAddress[cld] : 
#  100|     r100_2(_Complex long double)          = Load[cld]            : &:r100_1, ~m?
#  100|     r100_3(long double)                   = Convert              : r100_2
#  100|     r100_4(glval<long double>)            = VariableAddress[ld]  : 
#  100|     mu100_5(long double)                  = Store[ld]            : &:r100_4, r100_3
#  103|     r103_1(glval<_Imaginary float>)       = VariableAddress[jf]  : 
#  103|     r103_2(_Imaginary float)              = Load[jf]             : &:r103_1, ~m?
#  103|     r103_3(_Complex float)                = Convert              : r103_2
#  103|     r103_4(glval<_Complex float>)         = VariableAddress[cf]  : 
#  103|     mu103_5(_Complex float)               = Store[cf]            : &:r103_4, r103_3
#  104|     r104_1(glval<_Imaginary double>)      = VariableAddress[jd]  : 
#  104|     r104_2(_Imaginary double)             = Load[jd]             : &:r104_1, ~m?
#  104|     r104_3(_Complex float)                = Convert              : r104_2
#  104|     r104_4(glval<_Complex float>)         = VariableAddress[cf]  : 
#  104|     mu104_5(_Complex float)               = Store[cf]            : &:r104_4, r104_3
#  105|     r105_1(glval<_Imaginary long double>) = VariableAddress[jld] : 
#  105|     r105_2(_Imaginary long double)        = Load[jld]            : &:r105_1, ~m?
#  105|     r105_3(_Complex float)                = Convert              : r105_2
#  105|     r105_4(glval<_Complex float>)         = VariableAddress[cf]  : 
#  105|     mu105_5(_Complex float)               = Store[cf]            : &:r105_4, r105_3
#  106|     r106_1(glval<_Imaginary float>)       = VariableAddress[jf]  : 
#  106|     r106_2(_Imaginary float)              = Load[jf]             : &:r106_1, ~m?
#  106|     r106_3(_Complex double)               = Convert              : r106_2
#  106|     r106_4(glval<_Complex double>)        = VariableAddress[cd]  : 
#  106|     mu106_5(_Complex double)              = Store[cd]            : &:r106_4, r106_3
#  107|     r107_1(glval<_Imaginary double>)      = VariableAddress[jd]  : 
#  107|     r107_2(_Imaginary double)             = Load[jd]             : &:r107_1, ~m?
#  107|     r107_3(_Complex double)               = Convert              : r107_2
#  107|     r107_4(glval<_Complex double>)        = VariableAddress[cd]  : 
#  107|     mu107_5(_Complex double)              = Store[cd]            : &:r107_4, r107_3
#  108|     r108_1(glval<_Imaginary long double>) = VariableAddress[jld] : 
#  108|     r108_2(_Imaginary long double)        = Load[jld]            : &:r108_1, ~m?
#  108|     r108_3(_Complex double)               = Convert              : r108_2
#  108|     r108_4(glval<_Complex double>)        = VariableAddress[cd]  : 
#  108|     mu108_5(_Complex double)              = Store[cd]            : &:r108_4, r108_3
#  109|     r109_1(glval<_Imaginary float>)       = VariableAddress[jf]  : 
#  109|     r109_2(_Imaginary float)              = Load[jf]             : &:r109_1, ~m?
#  109|     r109_3(_Complex long double)          = Convert              : r109_2
#  109|     r109_4(glval<_Complex long double>)   = VariableAddress[cld] : 
#  109|     mu109_5(_Complex long double)         = Store[cld]           : &:r109_4, r109_3
#  110|     r110_1(glval<_Imaginary double>)      = VariableAddress[jd]  : 
#  110|     r110_2(_Imaginary double)             = Load[jd]             : &:r110_1, ~m?
#  110|     r110_3(_Complex long double)          = Convert              : r110_2
#  110|     r110_4(glval<_Complex long double>)   = VariableAddress[cld] : 
#  110|     mu110_5(_Complex long double)         = Store[cld]           : &:r110_4, r110_3
#  111|     r111_1(glval<_Imaginary long double>) = VariableAddress[jld] : 
#  111|     r111_2(_Imaginary long double)        = Load[jld]            : &:r111_1, ~m?
#  111|     r111_3(_Complex long double)          = Convert              : r111_2
#  111|     r111_4(glval<_Complex long double>)   = VariableAddress[cld] : 
#  111|     mu111_5(_Complex long double)         = Store[cld]           : &:r111_4, r111_3
#  114|     r114_1(glval<_Complex float>)         = VariableAddress[cf]  : 
#  114|     r114_2(_Complex float)                = Load[cf]             : &:r114_1, ~m?
#  114|     r114_3(_Imaginary float)              = Convert              : r114_2
#  114|     r114_4(glval<_Imaginary float>)       = VariableAddress[jf]  : 
#  114|     mu114_5(_Imaginary float)             = Store[jf]            : &:r114_4, r114_3
#  115|     r115_1(glval<_Complex double>)        = VariableAddress[cd]  : 
#  115|     r115_2(_Complex double)               = Load[cd]             : &:r115_1, ~m?
#  115|     r115_3(_Imaginary float)              = Convert              : r115_2
#  115|     r115_4(glval<_Imaginary float>)       = VariableAddress[jf]  : 
#  115|     mu115_5(_Imaginary float)             = Store[jf]            : &:r115_4, r115_3
#  116|     r116_1(glval<_Complex long double>)   = VariableAddress[cld] : 
#  116|     r116_2(_Complex long double)          = Load[cld]            : &:r116_1, ~m?
#  116|     r116_3(_Imaginary float)              = Convert              : r116_2
#  116|     r116_4(glval<_Imaginary float>)       = VariableAddress[jf]  : 
#  116|     mu116_5(_Imaginary float)             = Store[jf]            : &:r116_4, r116_3
#  117|     r117_1(glval<_Complex float>)         = VariableAddress[cf]  : 
#  117|     r117_2(_Complex float)                = Load[cf]             : &:r117_1, ~m?
#  117|     r117_3(_Imaginary double)             = Convert              : r117_2
#  117|     r117_4(glval<_Imaginary double>)      = VariableAddress[jd]  : 
#  117|     mu117_5(_Imaginary double)            = Store[jd]            : &:r117_4, r117_3
#  118|     r118_1(glval<_Complex double>)        = VariableAddress[cd]  : 
#  118|     r118_2(_Complex double)               = Load[cd]             : &:r118_1, ~m?
#  118|     r118_3(_Imaginary double)             = Convert              : r118_2
#  118|     r118_4(glval<_Imaginary double>)      = VariableAddress[jd]  : 
#  118|     mu118_5(_Imaginary double)            = Store[jd]            : &:r118_4, r118_3
#  119|     r119_1(glval<_Complex long double>)   = VariableAddress[cld] : 
#  119|     r119_2(_Complex long double)          = Load[cld]            : &:r119_1, ~m?
#  119|     r119_3(_Imaginary double)             = Convert              : r119_2
#  119|     r119_4(glval<_Imaginary double>)      = VariableAddress[jd]  : 
#  119|     mu119_5(_Imaginary double)            = Store[jd]            : &:r119_4, r119_3
#  120|     r120_1(glval<_Complex float>)         = VariableAddress[cf]  : 
#  120|     r120_2(_Complex float)                = Load[cf]             : &:r120_1, ~m?
#  120|     r120_3(_Imaginary long double)        = Convert              : r120_2
#  120|     r120_4(glval<_Imaginary long double>) = VariableAddress[jld] : 
#  120|     mu120_5(_Imaginary long double)       = Store[jld]           : &:r120_4, r120_3
#  121|     r121_1(glval<_Complex double>)        = VariableAddress[cd]  : 
#  121|     r121_2(_Complex double)               = Load[cd]             : &:r121_1, ~m?
#  121|     r121_3(_Imaginary long double)        = Convert              : r121_2
#  121|     r121_4(glval<_Imaginary long double>) = VariableAddress[jld] : 
#  121|     mu121_5(_Imaginary long double)       = Store[jld]           : &:r121_4, r121_3
#  122|     r122_1(glval<_Complex long double>)   = VariableAddress[cld] : 
#  122|     r122_2(_Complex long double)          = Load[cld]            : &:r122_1, ~m?
#  122|     r122_3(_Imaginary long double)        = Convert              : r122_2
#  122|     r122_4(glval<_Imaginary long double>) = VariableAddress[jld] : 
#  122|     mu122_5(_Imaginary long double)       = Store[jld]           : &:r122_4, r122_3
#  125|     r125_1(glval<float>)                  = VariableAddress[f]   : 
#  125|     r125_2(float)                         = Load[f]              : &:r125_1, ~m?
#  125|     r125_3(_Imaginary float)              = Convert              : r125_2
#  125|     r125_4(glval<_Imaginary float>)       = VariableAddress[jf]  : 
#  125|     mu125_5(_Imaginary float)             = Store[jf]            : &:r125_4, r125_3
#  126|     r126_1(glval<double>)                 = VariableAddress[d]   : 
#  126|     r126_2(double)                        = Load[d]              : &:r126_1, ~m?
#  126|     r126_3(_Imaginary float)              = Convert              : r126_2
#  126|     r126_4(glval<_Imaginary float>)       = VariableAddress[jf]  : 
#  126|     mu126_5(_Imaginary float)             = Store[jf]            : &:r126_4, r126_3
#  127|     r127_1(glval<long double>)            = VariableAddress[ld]  : 
#  127|     r127_2(long double)                   = Load[ld]             : &:r127_1, ~m?
#  127|     r127_3(_Imaginary float)              = Convert              : r127_2
#  127|     r127_4(glval<_Imaginary float>)       = VariableAddress[jf]  : 
#  127|     mu127_5(_Imaginary float)             = Store[jf]            : &:r127_4, r127_3
#  128|     r128_1(glval<float>)                  = VariableAddress[f]   : 
#  128|     r128_2(float)                         = Load[f]              : &:r128_1, ~m?
#  128|     r128_3(_Imaginary double)             = Convert              : r128_2
#  128|     r128_4(glval<_Imaginary double>)      = VariableAddress[jd]  : 
#  128|     mu128_5(_Imaginary double)            = Store[jd]            : &:r128_4, r128_3
#  129|     r129_1(glval<double>)                 = VariableAddress[d]   : 
#  129|     r129_2(double)                        = Load[d]              : &:r129_1, ~m?
#  129|     r129_3(_Imaginary double)             = Convert              : r129_2
#  129|     r129_4(glval<_Imaginary double>)      = VariableAddress[jd]  : 
#  129|     mu129_5(_Imaginary double)            = Store[jd]            : &:r129_4, r129_3
#  130|     r130_1(glval<long double>)            = VariableAddress[ld]  : 
#  130|     r130_2(long double)                   = Load[ld]             : &:r130_1, ~m?
#  130|     r130_3(_Imaginary double)             = Convert              : r130_2
#  130|     r130_4(glval<_Imaginary double>)      = VariableAddress[jd]  : 
#  130|     mu130_5(_Imaginary double)            = Store[jd]            : &:r130_4, r130_3
#  131|     r131_1(glval<float>)                  = VariableAddress[f]   : 
#  131|     r131_2(float)                         = Load[f]              : &:r131_1, ~m?
#  131|     r131_3(_Imaginary long double)        = Convert              : r131_2
#  131|     r131_4(glval<_Imaginary long double>) = VariableAddress[jld] : 
#  131|     mu131_5(_Imaginary long double)       = Store[jld]           : &:r131_4, r131_3
#  132|     r132_1(glval<double>)                 = VariableAddress[d]   : 
#  132|     r132_2(double)                        = Load[d]              : &:r132_1, ~m?
#  132|     r132_3(_Imaginary long double)        = Convert              : r132_2
#  132|     r132_4(glval<_Imaginary long double>) = VariableAddress[jld] : 
#  132|     mu132_5(_Imaginary long double)       = Store[jld]           : &:r132_4, r132_3
#  133|     r133_1(glval<long double>)            = VariableAddress[ld]  : 
#  133|     r133_2(long double)                   = Load[ld]             : &:r133_1, ~m?
#  133|     r133_3(_Imaginary long double)        = Convert              : r133_2
#  133|     r133_4(glval<_Imaginary long double>) = VariableAddress[jld] : 
#  133|     mu133_5(_Imaginary long double)       = Store[jld]           : &:r133_4, r133_3
#  136|     r136_1(glval<_Imaginary float>)       = VariableAddress[jf]  : 
#  136|     r136_2(_Imaginary float)              = Load[jf]             : &:r136_1, ~m?
#  136|     r136_3(float)                         = Convert              : r136_2
#  136|     r136_4(glval<float>)                  = VariableAddress[f]   : 
#  136|     mu136_5(float)                        = Store[f]             : &:r136_4, r136_3
#  137|     r137_1(glval<_Imaginary double>)      = VariableAddress[jd]  : 
#  137|     r137_2(_Imaginary double)             = Load[jd]             : &:r137_1, ~m?
#  137|     r137_3(float)                         = Convert              : r137_2
#  137|     r137_4(glval<float>)                  = VariableAddress[f]   : 
#  137|     mu137_5(float)                        = Store[f]             : &:r137_4, r137_3
#  138|     r138_1(glval<_Imaginary long double>) = VariableAddress[jld] : 
#  138|     r138_2(_Imaginary long double)        = Load[jld]            : &:r138_1, ~m?
#  138|     r138_3(float)                         = Convert              : r138_2
#  138|     r138_4(glval<float>)                  = VariableAddress[f]   : 
#  138|     mu138_5(float)                        = Store[f]             : &:r138_4, r138_3
#  139|     r139_1(glval<_Imaginary float>)       = VariableAddress[jf]  : 
#  139|     r139_2(_Imaginary float)              = Load[jf]             : &:r139_1, ~m?
#  139|     r139_3(double)                        = Convert              : r139_2
#  139|     r139_4(glval<double>)                 = VariableAddress[d]   : 
#  139|     mu139_5(double)                       = Store[d]             : &:r139_4, r139_3
#  140|     r140_1(glval<_Imaginary double>)      = VariableAddress[jd]  : 
#  140|     r140_2(_Imaginary double)             = Load[jd]             : &:r140_1, ~m?
#  140|     r140_3(double)                        = Convert              : r140_2
#  140|     r140_4(glval<double>)                 = VariableAddress[d]   : 
#  140|     mu140_5(double)                       = Store[d]             : &:r140_4, r140_3
#  141|     r141_1(glval<_Imaginary long double>) = VariableAddress[jld] : 
#  141|     r141_2(_Imaginary long double)        = Load[jld]            : &:r141_1, ~m?
#  141|     r141_3(double)                        = Convert              : r141_2
#  141|     r141_4(glval<double>)                 = VariableAddress[d]   : 
#  141|     mu141_5(double)                       = Store[d]             : &:r141_4, r141_3
#  142|     r142_1(glval<_Imaginary float>)       = VariableAddress[jf]  : 
#  142|     r142_2(_Imaginary float)              = Load[jf]             : &:r142_1, ~m?
#  142|     r142_3(long double)                   = Convert              : r142_2
#  142|     r142_4(glval<long double>)            = VariableAddress[ld]  : 
#  142|     mu142_5(long double)                  = Store[ld]            : &:r142_4, r142_3
#  143|     r143_1(glval<_Imaginary double>)      = VariableAddress[jd]  : 
#  143|     r143_2(_Imaginary double)             = Load[jd]             : &:r143_1, ~m?
#  143|     r143_3(long double)                   = Convert              : r143_2
#  143|     r143_4(glval<long double>)            = VariableAddress[ld]  : 
#  143|     mu143_5(long double)                  = Store[ld]            : &:r143_4, r143_3
#  144|     r144_1(glval<_Imaginary long double>) = VariableAddress[jld] : 
#  144|     r144_2(_Imaginary long double)        = Load[jld]            : &:r144_1, ~m?
#  144|     r144_3(long double)                   = Convert              : r144_2
#  144|     r144_4(glval<long double>)            = VariableAddress[ld]  : 
#  144|     mu144_5(long double)                  = Store[ld]            : &:r144_4, r144_3
#  145|     v145_1(void)                          = NoOp                 : 
#   58|     v58_4(void)                           = ReturnVoid           : 
#   58|     v58_5(void)                           = AliasedUse           : ~m?
#   58|     v58_6(void)                           = ExitFunction         : 

destructors_for_temps.cpp:
#   14| char temp_test()
#   14|   Block 0
#   14|     v14_1(void)                        = EnterFunction                         : 
#   14|     mu14_2(unknown)                    = AliasedDefinition                     : 
#   14|     mu14_3(unknown)                    = InitializeNonLocal                    : 
#   15|     r15_1(glval<char>)                 = VariableAddress[x]                    : 
#   15|     r15_2(glval<ClassWithDestructor2>) = VariableAddress[#temp15:14]           : 
#   15|     mu15_3(ClassWithDestructor2)       = Uninitialized[#temp15:14]             : &:r15_2
#   15|     r15_4(glval<unknown>)              = FunctionAddress[ClassWithDestructor2] : 
#   15|     v15_5(void)                        = Call[ClassWithDestructor2]            : func:r15_4, this:r15_2
#   15|     mu15_6(unknown)                    = ^CallSideEffect                       : ~m?
#   15|     mu15_7(ClassWithDestructor2)       = ^IndirectMayWriteSideEffect[-1]       : &:r15_2
#   15|     r15_8(glval<unknown>)              = FunctionAddress[get_x]                : 
#   15|     r15_9(char)                        = Call[get_x]                           : func:r15_8, this:r15_2
#   15|     mu15_10(unknown)                   = ^CallSideEffect                       : ~m?
#   15|     v15_11(void)                       = ^IndirectReadSideEffect[-1]           : &:r15_2, ~m?
#   15|     mu15_12(ClassWithDestructor2)      = ^IndirectMayWriteSideEffect[-1]       : &:r15_2
#   15|     mu15_13(char)                      = Store[x]                              : &:r15_1, r15_9
#   16|     r16_1(glval<ClassWithConstructor>) = VariableAddress[y]                    : 
#   16|     mu16_2(ClassWithConstructor)       = Uninitialized[y]                      : &:r16_1
#   16|     r16_3(glval<unknown>)              = FunctionAddress[ClassWithConstructor] : 
#   16|     r16_4(char)                        = Constant[97]                          : 
#   16|     r16_5(glval<ClassWithDestructor2>) = VariableAddress[#temp16:33]           : 
#   16|     mu16_6(ClassWithDestructor2)       = Uninitialized[#temp16:33]             : &:r16_5
#   16|     r16_7(glval<unknown>)              = FunctionAddress[ClassWithDestructor2] : 
#   16|     v16_8(void)                        = Call[ClassWithDestructor2]            : func:r16_7, this:r16_5
#   16|     mu16_9(unknown)                    = ^CallSideEffect                       : ~m?
#   16|     mu16_10(ClassWithDestructor2)      = ^IndirectMayWriteSideEffect[-1]       : &:r16_5
#   16|     r16_11(glval<unknown>)             = FunctionAddress[get_x]                : 
#   16|     r16_12(char)                       = Call[get_x]                           : func:r16_11, this:r16_5
#   16|     mu16_13(unknown)                   = ^CallSideEffect                       : ~m?
#   16|     v16_14(void)                       = ^IndirectReadSideEffect[-1]           : &:r16_5, ~m?
#   16|     mu16_15(ClassWithDestructor2)      = ^IndirectMayWriteSideEffect[-1]       : &:r16_5
#   16|     v16_16(void)                       = Call[ClassWithConstructor]            : func:r16_3, this:r16_1, 0:r16_4, 1:r16_12
#   16|     mu16_17(unknown)                   = ^CallSideEffect                       : ~m?
#   16|     mu16_18(ClassWithConstructor)      = ^IndirectMayWriteSideEffect[-1]       : &:r16_1
#   17|     r17_1(glval<char>)                 = VariableAddress[#return]              : 
#   17|     r17_2(glval<ClassWithDestructor2>) = VariableAddress[#temp17:12]           : 
#   17|     mu17_3(ClassWithDestructor2)       = Uninitialized[#temp17:12]             : &:r17_2
#   17|     r17_4(glval<unknown>)              = FunctionAddress[ClassWithDestructor2] : 
#   17|     v17_5(void)                        = Call[ClassWithDestructor2]            : func:r17_4, this:r17_2
#   17|     mu17_6(unknown)                    = ^CallSideEffect                       : ~m?
#   17|     mu17_7(ClassWithDestructor2)       = ^IndirectMayWriteSideEffect[-1]       : &:r17_2
#   17|     r17_8(glval<unknown>)              = FunctionAddress[get_x]                : 
#   17|     r17_9(char)                        = Call[get_x]                           : func:r17_8, this:r17_2
#   17|     mu17_10(unknown)                   = ^CallSideEffect                       : ~m?
#   17|     v17_11(void)                       = ^IndirectReadSideEffect[-1]           : &:r17_2, ~m?
#   17|     mu17_12(ClassWithDestructor2)      = ^IndirectMayWriteSideEffect[-1]       : &:r17_2
#   17|     mu17_13(char)                      = Store[#return]                        : &:r17_1, r17_9
#   14|     r14_4(glval<char>)                 = VariableAddress[#return]              : 
#   14|     v14_5(void)                        = ReturnValue                           : &:r14_4, ~m?
#   14|     v14_6(void)                        = AliasedUse                            : ~m?
#   14|     v14_7(void)                        = ExitFunction                          : 

#   21| char temp_test2()
#   21|   Block 0
#   21|     v21_1(void)                         = EnterFunction                         : 
#   21|     mu21_2(unknown)                     = AliasedDefinition                     : 
#   21|     mu21_3(unknown)                     = InitializeNonLocal                    : 
#   22|     r22_1(glval<unknown>)               = FunctionAddress[operator new]         : 
#   22|     r22_2(unsigned long)                = Constant[1]                           : 
#   22|     r22_3(void *)                       = Call[operator new]                    : func:r22_1, 0:r22_2
#   22|     mu22_4(unknown)                     = ^CallSideEffect                       : ~m?
#   22|     mu22_5(unknown)                     = ^InitializeDynamicAllocation          : &:r22_3
#   22|     r22_6(ClassWithDestructor2 *)       = Convert                               : r22_3
#   22|     r22_7(glval<unknown>)               = FunctionAddress[ClassWithDestructor2] : 
#   22|     v22_8(void)                         = Call[ClassWithDestructor2]            : func:r22_7, this:r22_6
#   22|     mu22_9(unknown)                     = ^CallSideEffect                       : ~m?
#   22|     mu22_10(ClassWithDestructor2)       = ^IndirectMayWriteSideEffect[-1]       : &:r22_6
#   23|     r23_1(glval<char>)                  = VariableAddress[#return]              : 
#   23|     r23_2(glval<ClassWithDestructor2>)  = VariableAddress[#temp23:12]           : 
#   23|     mu23_3(ClassWithDestructor2)        = Uninitialized[#temp23:12]             : &:r23_2
#   23|     r23_4(glval<unknown>)               = FunctionAddress[ClassWithDestructor2] : 
#   23|     v23_5(void)                         = Call[ClassWithDestructor2]            : func:r23_4, this:r23_2
#   23|     mu23_6(unknown)                     = ^CallSideEffect                       : ~m?
#   23|     mu23_7(ClassWithDestructor2)        = ^IndirectMayWriteSideEffect[-1]       : &:r23_2
#   23|     r23_8(glval<unknown>)               = FunctionAddress[get_x]                : 
#   23|     r23_9(char)                         = Call[get_x]                           : func:r23_8, this:r23_2
#   23|     mu23_10(unknown)                    = ^CallSideEffect                       : ~m?
#   23|     v23_11(void)                        = ^IndirectReadSideEffect[-1]           : &:r23_2, ~m?
#   23|     mu23_12(ClassWithDestructor2)       = ^IndirectMayWriteSideEffect[-1]       : &:r23_2
#   23|     r23_13(int)                         = Convert                               : r23_9
#   23|     r23_14(glval<ClassWithDestructor2>) = VariableAddress[#temp23:45]           : 
#   23|     mu23_15(ClassWithDestructor2)       = Uninitialized[#temp23:45]             : &:r23_14
#   23|     r23_16(glval<unknown>)              = FunctionAddress[ClassWithDestructor2] : 
#   23|     v23_17(void)                        = Call[ClassWithDestructor2]            : func:r23_16, this:r23_14
#   23|     mu23_18(unknown)                    = ^CallSideEffect                       : ~m?
#   23|     mu23_19(ClassWithDestructor2)       = ^IndirectMayWriteSideEffect[-1]       : &:r23_14
#   23|     r23_20(glval<unknown>)              = FunctionAddress[get_x]                : 
#   23|     r23_21(char)                        = Call[get_x]                           : func:r23_20, this:r23_14
#   23|     mu23_22(unknown)                    = ^CallSideEffect                       : ~m?
#   23|     v23_23(void)                        = ^IndirectReadSideEffect[-1]           : &:r23_14, ~m?
#   23|     mu23_24(ClassWithDestructor2)       = ^IndirectMayWriteSideEffect[-1]       : &:r23_14
#   23|     r23_25(int)                         = Convert                               : r23_21
#   23|     r23_26(int)                         = Add                                   : r23_13, r23_25
#   23|     r23_27(char)                        = Convert                               : r23_26
#   23|     mu23_28(char)                       = Store[#return]                        : &:r23_1, r23_27
#   21|     r21_4(glval<char>)                  = VariableAddress[#return]              : 
#   21|     v21_5(void)                         = ReturnValue                           : &:r21_4, ~m?
#   21|     v21_6(void)                         = AliasedUse                            : ~m?
#   21|     v21_7(void)                         = ExitFunction                          : 

#   29| void temp_test3()
#   29|   Block 0
#   29|     v29_1(void)                          = EnterFunction                          : 
#   29|     mu29_2(unknown)                      = AliasedDefinition                      : 
#   29|     mu29_3(unknown)                      = InitializeNonLocal                     : 
#   30|     r30_1(glval<ClassWithDestructor2 &>) = VariableAddress[rs]                    : 
#   30|     r30_2(glval<ClassWithDestructor2>)   = VariableAddress[#temp30:38]            : 
#   30|     r30_3(glval<unknown>)                = FunctionAddress[returnValue]           : 
#   30|     r30_4(ClassWithDestructor2)          = Call[returnValue]                      : func:r30_3
#   30|     mu30_5(unknown)                      = ^CallSideEffect                        : ~m?
#   30|     mu30_6(ClassWithDestructor2)         = Store[#temp30:38]                      : &:r30_2, r30_4
#   30|     r30_7(glval<ClassWithDestructor2>)   = Convert                                : r30_2
#   30|     r30_8(ClassWithDestructor2 &)        = CopyValue                              : r30_7
#   30|     mu30_9(ClassWithDestructor2 &)       = Store[rs]                              : &:r30_1, r30_8
#   31|     v31_1(void)                          = NoOp                                   : 
#   31|     r31_2(glval<ClassWithDestructor2>)   = CopyValue                              : r30_2
#   31|     r31_3(glval<unknown>)                = FunctionAddress[~ClassWithDestructor2] : 
#   31|     v31_4(void)                          = Call[~ClassWithDestructor2]            : func:r31_3, this:r31_2
#   31|     mu31_5(unknown)                      = ^CallSideEffect                        : ~m?
#   31|     v31_6(void)                          = ^IndirectReadSideEffect[-1]            : &:r31_2, ~m?
#   31|     mu31_7(ClassWithDestructor2)         = ^IndirectMayWriteSideEffect[-1]        : &:r31_2
#   29|     v29_4(void)                          = ReturnVoid                             : 
#   29|     v29_5(void)                          = AliasedUse                             : ~m?
#   29|     v29_6(void)                          = ExitFunction                           : 

#   33| void temp_test4()
#   33|   Block 0
#   33|     v33_1(void)                          = EnterFunction                          : 
#   33|     mu33_2(unknown)                      = AliasedDefinition                      : 
#   33|     mu33_3(unknown)                      = InitializeNonLocal                     : 
#   34|     r34_1(glval<ClassWithDestructor2>)   = VariableAddress[c]                     : 
#   34|     mu34_2(ClassWithDestructor2)         = Uninitialized[c]                       : &:r34_1
#   34|     r34_3(glval<unknown>)                = FunctionAddress[ClassWithDestructor2]  : 
#   34|     v34_4(void)                          = Call[ClassWithDestructor2]             : func:r34_3, this:r34_1
#   34|     mu34_5(unknown)                      = ^CallSideEffect                        : ~m?
#   34|     mu34_6(ClassWithDestructor2)         = ^IndirectMayWriteSideEffect[-1]        : &:r34_1
#   35|     r35_1(glval<ClassWithDestructor2 &>) = VariableAddress[rs2]                   : 
#   35|     r35_2(glval<ClassWithDestructor2>)   = VariableAddress[#temp35:39]            : 
#   35|     r35_3(glval<unknown>)                = FunctionAddress[returnValue]           : 
#   35|     r35_4(ClassWithDestructor2)          = Call[returnValue]                      : func:r35_3
#   35|     mu35_5(unknown)                      = ^CallSideEffect                        : ~m?
#   35|     mu35_6(ClassWithDestructor2)         = Store[#temp35:39]                      : &:r35_2, r35_4
#   35|     r35_7(glval<ClassWithDestructor2>)   = Convert                                : r35_2
#   35|     r35_8(ClassWithDestructor2 &)        = CopyValue                              : r35_7
#   35|     mu35_9(ClassWithDestructor2 &)       = Store[rs2]                             : &:r35_1, r35_8
#   36|     v36_1(void)                          = NoOp                                   : 
#   36|     r36_2(glval<ClassWithDestructor2>)   = CopyValue                              : r35_2
#   36|     r36_3(glval<unknown>)                = FunctionAddress[~ClassWithDestructor2] : 
#   36|     v36_4(void)                          = Call[~ClassWithDestructor2]            : func:r36_3, this:r36_2
#   36|     mu36_5(unknown)                      = ^CallSideEffect                        : ~m?
#   36|     v36_6(void)                          = ^IndirectReadSideEffect[-1]            : &:r36_2, ~m?
#   36|     mu36_7(ClassWithDestructor2)         = ^IndirectMayWriteSideEffect[-1]        : &:r36_2
#   36|     r36_8(glval<ClassWithDestructor2>)   = VariableAddress[c]                     : 
#   36|     r36_9(glval<unknown>)                = FunctionAddress[~ClassWithDestructor2] : 
#   36|     v36_10(void)                         = Call[~ClassWithDestructor2]            : func:r36_9, this:r36_8
#   36|     mu36_11(unknown)                     = ^CallSideEffect                        : ~m?
#   36|     v36_12(void)                         = ^IndirectReadSideEffect[-1]            : &:r36_8, ~m?
#   36|     mu36_13(ClassWithDestructor2)        = ^IndirectMayWriteSideEffect[-1]        : &:r36_8
#   33|     v33_4(void)                          = ReturnVoid                             : 
#   33|     v33_5(void)                          = AliasedUse                             : ~m?
#   33|     v33_6(void)                          = ExitFunction                           : 

#   38| void temp_test5(bool)
#   38|   Block 0
#   38|     v38_1(void)                        = EnterFunction              : 
#   38|     mu38_2(unknown)                    = AliasedDefinition          : 
#   38|     mu38_3(unknown)                    = InitializeNonLocal         : 
#   38|     r38_4(glval<bool>)                 = VariableAddress[b]         : 
#   38|     mu38_5(bool)                       = InitializeParameter[b]     : &:r38_4
#   39|     r39_1(glval<ClassWithDestructor2>) = VariableAddress[#temp39:3] : 
#   39|     r39_2(glval<bool>)                 = VariableAddress[b]         : 
#   39|     r39_3(bool)                        = Load[b]                    : &:r39_2, ~m?
#   39|     v39_4(void)                        = ConditionalBranch          : r39_3
#-----|   False -> Block 3
#-----|   True -> Block 2

#   39|   Block 1
#   39|     r39_5(glval<ClassWithDestructor2>) = VariableAddress[#temp39:3] : 
#   39|     r39_6(ClassWithDestructor2)        = Load[#temp39:3]            : &:r39_5, ~m?
#   39|     mu39_7(ClassWithDestructor2)       = Store[#temp39:3]           : &:r39_1, r39_6
#   40|     v40_1(void)                        = NoOp                       : 
#   38|     v38_6(void)                        = ReturnVoid                 : 
#   38|     v38_7(void)                        = AliasedUse                 : ~m?
#   38|     v38_8(void)                        = ExitFunction               : 

#   39|   Block 2
#   39|     r39_8(glval<ClassWithDestructor2>)  = VariableAddress[#temp39:7]            : 
#   39|     mu39_9(ClassWithDestructor2)        = Uninitialized[#temp39:7]              : &:r39_8
#   39|     r39_10(glval<unknown>)              = FunctionAddress[ClassWithDestructor2] : 
#   39|     v39_11(void)                        = Call[ClassWithDestructor2]            : func:r39_10, this:r39_8
#   39|     mu39_12(unknown)                    = ^CallSideEffect                       : ~m?
#   39|     mu39_13(ClassWithDestructor2)       = ^IndirectMayWriteSideEffect[-1]       : &:r39_8
#   39|     r39_14(ClassWithDestructor2)        = Load[#temp39:7]                       : &:r39_8, ~m?
#   39|     r39_15(glval<ClassWithDestructor2>) = VariableAddress[#temp39:3]            : 
#   39|     mu39_16(ClassWithDestructor2)       = Store[#temp39:3]                      : &:r39_15, r39_14
#-----|   Goto -> Block 1

#   39|   Block 3
#   39|     r39_17(glval<ClassWithDestructor2>) = VariableAddress[#temp39:32]           : 
#   39|     mu39_18(ClassWithDestructor2)       = Uninitialized[#temp39:32]             : &:r39_17
#   39|     r39_19(glval<unknown>)              = FunctionAddress[ClassWithDestructor2] : 
#   39|     v39_20(void)                        = Call[ClassWithDestructor2]            : func:r39_19, this:r39_17
#   39|     mu39_21(unknown)                    = ^CallSideEffect                       : ~m?
#   39|     mu39_22(ClassWithDestructor2)       = ^IndirectMayWriteSideEffect[-1]       : &:r39_17
#   39|     r39_23(ClassWithDestructor2)        = Load[#temp39:32]                      : &:r39_17, ~m?
#   39|     r39_24(glval<ClassWithDestructor2>) = VariableAddress[#temp39:3]            : 
#   39|     mu39_25(ClassWithDestructor2)       = Store[#temp39:3]                      : &:r39_24, r39_23
#-----|   Goto -> Block 1

#   42| void temp_test6(bool)
#   42|   Block 0
#   42|     v42_1(void)                        = EnterFunction                         : 
#   42|     mu42_2(unknown)                    = AliasedDefinition                     : 
#   42|     mu42_3(unknown)                    = InitializeNonLocal                    : 
#   42|     r42_4(glval<bool>)                 = VariableAddress[b]                    : 
#   42|     mu42_5(bool)                       = InitializeParameter[b]                : &:r42_4
#   43|     r43_1(glval<ClassWithDestructor2>) = VariableAddress[c]                    : 
#   43|     mu43_2(ClassWithDestructor2)       = Uninitialized[c]                      : &:r43_1
#   43|     r43_3(glval<unknown>)              = FunctionAddress[ClassWithDestructor2] : 
#   43|     v43_4(void)                        = Call[ClassWithDestructor2]            : func:r43_3, this:r43_1
#   43|     mu43_5(unknown)                    = ^CallSideEffect                       : ~m?
#   43|     mu43_6(ClassWithDestructor2)       = ^IndirectMayWriteSideEffect[-1]       : &:r43_1
#   44|     r44_1(glval<bool>)                 = VariableAddress[b]                    : 
#   44|     r44_2(bool)                        = Load[b]                               : &:r44_1, ~m?
#   44|     v44_3(void)                        = ConditionalBranch                     : r44_2
#-----|   False -> Block 4
#-----|   True -> Block 3

#   42|   Block 1
#   42|     v42_6(void) = AliasedUse   : ~m?
#   42|     v42_7(void) = ExitFunction : 

#   42|   Block 2
#   42|     v42_8(void) = Unwind : 
#-----|   Goto -> Block 1

#   45|   Block 3
#   45|     r45_1(glval<ClassWithConstructor>) = VariableAddress[#throw45:7]           : 
#   45|     mu45_2(ClassWithConstructor)       = Uninitialized[#throw45:7]             : &:r45_1
#   45|     r45_3(glval<unknown>)              = FunctionAddress[ClassWithConstructor] : 
#   45|     r45_4(char)                        = Constant[120]                         : 
#   45|     r45_5(glval<ClassWithDestructor2>) = VariableAddress[#temp45:39]           : 
#   45|     mu45_6(ClassWithDestructor2)       = Uninitialized[#temp45:39]             : &:r45_5
#   45|     r45_7(glval<unknown>)              = FunctionAddress[ClassWithDestructor2] : 
#   45|     v45_8(void)                        = Call[ClassWithDestructor2]            : func:r45_7, this:r45_5
#   45|     mu45_9(unknown)                    = ^CallSideEffect                       : ~m?
#   45|     mu45_10(ClassWithDestructor2)      = ^IndirectMayWriteSideEffect[-1]       : &:r45_5
#   45|     r45_11(glval<unknown>)             = FunctionAddress[get_x]                : 
#   45|     r45_12(char)                       = Call[get_x]                           : func:r45_11, this:r45_5
#   45|     mu45_13(unknown)                   = ^CallSideEffect                       : ~m?
#   45|     v45_14(void)                       = ^IndirectReadSideEffect[-1]           : &:r45_5, ~m?
#   45|     mu45_15(ClassWithDestructor2)      = ^IndirectMayWriteSideEffect[-1]       : &:r45_5
#   45|     v45_16(void)                       = Call[ClassWithConstructor]            : func:r45_3, this:r45_1, 0:r45_4, 1:r45_12
#   45|     mu45_17(unknown)                   = ^CallSideEffect                       : ~m?
#   45|     mu45_18(ClassWithConstructor)      = ^IndirectMayWriteSideEffect[-1]       : &:r45_1
#   45|     v45_19(void)                       = ThrowValue                            : &:r45_1, ~m?
#-----|   Exception -> Block 2

#   47|   Block 4
#   47|     v47_1(void)                        = NoOp                                   : 
#   47|     r47_2(glval<ClassWithDestructor2>) = VariableAddress[c]                     : 
#   47|     r47_3(glval<unknown>)              = FunctionAddress[~ClassWithDestructor2] : 
#   47|     v47_4(void)                        = Call[~ClassWithDestructor2]            : func:r47_3, this:r47_2
#   47|     mu47_5(unknown)                    = ^CallSideEffect                        : ~m?
#   47|     v47_6(void)                        = ^IndirectReadSideEffect[-1]            : &:r47_2, ~m?
#   47|     mu47_7(ClassWithDestructor2)       = ^IndirectMayWriteSideEffect[-1]        : &:r47_2
#   42|     v42_9(void)                        = ReturnVoid                             : 
#-----|   Goto -> Block 1

#   49| void temp_test7(bool)
#   49|   Block 0
#   49|     v49_1(void)                        = EnterFunction                         : 
#   49|     mu49_2(unknown)                    = AliasedDefinition                     : 
#   49|     mu49_3(unknown)                    = InitializeNonLocal                    : 
#   49|     r49_4(glval<bool>)                 = VariableAddress[b]                    : 
#   49|     mu49_5(bool)                       = InitializeParameter[b]                : &:r49_4
#   50|     r50_1(glval<ClassWithDestructor2>) = VariableAddress[c]                    : 
#   50|     mu50_2(ClassWithDestructor2)       = Uninitialized[c]                      : &:r50_1
#   50|     r50_3(glval<unknown>)              = FunctionAddress[ClassWithDestructor2] : 
#   50|     v50_4(void)                        = Call[ClassWithDestructor2]            : func:r50_3, this:r50_1
#   50|     mu50_5(unknown)                    = ^CallSideEffect                       : ~m?
#   50|     mu50_6(ClassWithDestructor2)       = ^IndirectMayWriteSideEffect[-1]       : &:r50_1
#   51|     r51_1(glval<ClassWithDestructor2>) = VariableAddress[#temp51:5]            : 
#   51|     r51_2(glval<bool>)                 = VariableAddress[b]                    : 
#   51|     r51_3(bool)                        = Load[b]                               : &:r51_2, ~m?
#   51|     v51_4(void)                        = ConditionalBranch                     : r51_3
#-----|   False -> Block 4
#-----|   True -> Block 3

#   49|   Block 1
#   49|     v49_6(void) = AliasedUse   : ~m?
#   49|     v49_7(void) = ExitFunction : 

#   49|   Block 2
#   49|     v49_8(void) = Unwind : 
#-----|   Goto -> Block 1

#   51|   Block 3
#   51|     r51_5(glval<ClassWithConstructor>) = VariableAddress[#throw51:9]           : 
#   51|     mu51_6(ClassWithConstructor)       = Uninitialized[#throw51:9]             : &:r51_5
#   51|     r51_7(glval<unknown>)              = FunctionAddress[ClassWithConstructor] : 
#   51|     r51_8(char)                        = Constant[120]                         : 
#   51|     r51_9(glval<ClassWithDestructor2>) = VariableAddress[#temp51:41]           : 
#   51|     mu51_10(ClassWithDestructor2)      = Uninitialized[#temp51:41]             : &:r51_9
#   51|     r51_11(glval<unknown>)             = FunctionAddress[ClassWithDestructor2] : 
#   51|     v51_12(void)                       = Call[ClassWithDestructor2]            : func:r51_11, this:r51_9
#   51|     mu51_13(unknown)                   = ^CallSideEffect                       : ~m?
#   51|     mu51_14(ClassWithDestructor2)      = ^IndirectMayWriteSideEffect[-1]       : &:r51_9
#   51|     r51_15(glval<unknown>)             = FunctionAddress[get_x]                : 
#   51|     r51_16(char)                       = Call[get_x]                           : func:r51_15, this:r51_9
#   51|     mu51_17(unknown)                   = ^CallSideEffect                       : ~m?
#   51|     v51_18(void)                       = ^IndirectReadSideEffect[-1]           : &:r51_9, ~m?
#   51|     mu51_19(ClassWithDestructor2)      = ^IndirectMayWriteSideEffect[-1]       : &:r51_9
#   51|     v51_20(void)                       = Call[ClassWithConstructor]            : func:r51_7, this:r51_5, 0:r51_8, 1:r51_16
#   51|     mu51_21(unknown)                   = ^CallSideEffect                       : ~m?
#   51|     mu51_22(ClassWithConstructor)      = ^IndirectMayWriteSideEffect[-1]       : &:r51_5
#   51|     v51_23(void)                       = ThrowValue                            : &:r51_5, ~m?
#-----|   Exception -> Block 2

#   51|   Block 4
#   51|     r51_24(glval<ClassWithDestructor2>) = VariableAddress[#temp51:75]            : 
#   51|     mu51_25(ClassWithDestructor2)       = Uninitialized[#temp51:75]              : &:r51_24
#   51|     r51_26(glval<unknown>)              = FunctionAddress[ClassWithDestructor2]  : 
#   51|     v51_27(void)                        = Call[ClassWithDestructor2]             : func:r51_26, this:r51_24
#   51|     mu51_28(unknown)                    = ^CallSideEffect                        : ~m?
#   51|     mu51_29(ClassWithDestructor2)       = ^IndirectMayWriteSideEffect[-1]        : &:r51_24
#   51|     r51_30(ClassWithDestructor2)        = Load[#temp51:75]                       : &:r51_24, ~m?
#   51|     r51_31(glval<ClassWithDestructor2>) = VariableAddress[#temp51:5]             : 
#   51|     mu51_32(ClassWithDestructor2)       = Store[#temp51:5]                       : &:r51_31, r51_30
#   51|     r51_33(glval<ClassWithDestructor2>) = VariableAddress[#temp51:5]             : 
#   51|     r51_34(ClassWithDestructor2)        = Load[#temp51:5]                        : &:r51_33, ~m?
#   51|     mu51_35(ClassWithDestructor2)       = Store[#temp51:5]                       : &:r51_1, r51_34
#   52|     v52_1(void)                         = NoOp                                   : 
#   52|     r52_2(glval<ClassWithDestructor2>)  = VariableAddress[c]                     : 
#   52|     r52_3(glval<unknown>)               = FunctionAddress[~ClassWithDestructor2] : 
#   52|     v52_4(void)                         = Call[~ClassWithDestructor2]            : func:r52_3, this:r52_2
#   52|     mu52_5(unknown)                     = ^CallSideEffect                        : ~m?
#   52|     v52_6(void)                         = ^IndirectReadSideEffect[-1]            : &:r52_2, ~m?
#   52|     mu52_7(ClassWithDestructor2)        = ^IndirectMayWriteSideEffect[-1]        : &:r52_2
#   49|     v49_9(void)                         = ReturnVoid                             : 
#-----|   Goto -> Block 1

#   54| void temp_test8(bool)
#   54|   Block 0
#   54|     v54_1(void)                        = EnterFunction              : 
#   54|     mu54_2(unknown)                    = AliasedDefinition          : 
#   54|     mu54_3(unknown)                    = InitializeNonLocal         : 
#   54|     r54_4(glval<bool>)                 = VariableAddress[b]         : 
#   54|     mu54_5(bool)                       = InitializeParameter[b]     : &:r54_4
#   55|     r55_1(glval<ClassWithDestructor2>) = VariableAddress[#temp55:5] : 
#   55|     r55_2(glval<bool>)                 = VariableAddress[b]         : 
#   55|     r55_3(bool)                        = Load[b]                    : &:r55_2, ~m?
#   55|     v55_4(void)                        = ConditionalBranch          : r55_3
#-----|   False -> Block 4
#-----|   True -> Block 3

#   54|   Block 1
#   54|     v54_6(void) = AliasedUse   : ~m?
#   54|     v54_7(void) = ExitFunction : 

#   54|   Block 2
#   54|     v54_8(void) = Unwind : 
#-----|   Goto -> Block 1

#   55|   Block 3
#   55|     r55_5(glval<ClassWithConstructor>) = VariableAddress[#throw55:9]           : 
#   55|     mu55_6(ClassWithConstructor)       = Uninitialized[#throw55:9]             : &:r55_5
#   55|     r55_7(glval<unknown>)              = FunctionAddress[ClassWithConstructor] : 
#   55|     r55_8(char)                        = Constant[120]                         : 
#   55|     r55_9(glval<ClassWithDestructor2>) = VariableAddress[#temp55:41]           : 
#   55|     mu55_10(ClassWithDestructor2)      = Uninitialized[#temp55:41]             : &:r55_9
#   55|     r55_11(glval<unknown>)             = FunctionAddress[ClassWithDestructor2] : 
#   55|     v55_12(void)                       = Call[ClassWithDestructor2]            : func:r55_11, this:r55_9
#   55|     mu55_13(unknown)                   = ^CallSideEffect                       : ~m?
#   55|     mu55_14(ClassWithDestructor2)      = ^IndirectMayWriteSideEffect[-1]       : &:r55_9
#   55|     r55_15(glval<unknown>)             = FunctionAddress[get_x]                : 
#   55|     r55_16(char)                       = Call[get_x]                           : func:r55_15, this:r55_9
#   55|     mu55_17(unknown)                   = ^CallSideEffect                       : ~m?
#   55|     v55_18(void)                       = ^IndirectReadSideEffect[-1]           : &:r55_9, ~m?
#   55|     mu55_19(ClassWithDestructor2)      = ^IndirectMayWriteSideEffect[-1]       : &:r55_9
#   55|     v55_20(void)                       = Call[ClassWithConstructor]            : func:r55_7, this:r55_5, 0:r55_8, 1:r55_16
#   55|     mu55_21(unknown)                   = ^CallSideEffect                       : ~m?
#   55|     mu55_22(ClassWithConstructor)      = ^IndirectMayWriteSideEffect[-1]       : &:r55_5
#   55|     v55_23(void)                       = ThrowValue                            : &:r55_5, ~m?
#-----|   Exception -> Block 2

#   55|   Block 4
#   55|     r55_24(glval<ClassWithDestructor2>) = VariableAddress[#temp55:75]           : 
#   55|     mu55_25(ClassWithDestructor2)       = Uninitialized[#temp55:75]             : &:r55_24
#   55|     r55_26(glval<unknown>)              = FunctionAddress[ClassWithDestructor2] : 
#   55|     v55_27(void)                        = Call[ClassWithDestructor2]            : func:r55_26, this:r55_24
#   55|     mu55_28(unknown)                    = ^CallSideEffect                       : ~m?
#   55|     mu55_29(ClassWithDestructor2)       = ^IndirectMayWriteSideEffect[-1]       : &:r55_24
#   55|     r55_30(ClassWithDestructor2)        = Load[#temp55:75]                      : &:r55_24, ~m?
#   55|     r55_31(glval<ClassWithDestructor2>) = VariableAddress[#temp55:5]            : 
#   55|     mu55_32(ClassWithDestructor2)       = Store[#temp55:5]                      : &:r55_31, r55_30
#   55|     r55_33(glval<ClassWithDestructor2>) = VariableAddress[#temp55:5]            : 
#   55|     r55_34(ClassWithDestructor2)        = Load[#temp55:5]                       : &:r55_33, ~m?
#   55|     mu55_35(ClassWithDestructor2)       = Store[#temp55:5]                      : &:r55_1, r55_34
#   56|     v56_1(void)                         = NoOp                                  : 
#   54|     v54_9(void)                         = ReturnVoid                            : 
#-----|   Goto -> Block 1

#   58| void temp_test9()
#   58|   Block 0
#   58|     v58_1(void)                        = EnterFunction                         : 
#   58|     mu58_2(unknown)                    = AliasedDefinition                     : 
#   58|     mu58_3(unknown)                    = InitializeNonLocal                    : 
#   59|     r59_1(glval<char[2]>)              = VariableAddress[x]                    : 
#   59|     mu59_2(char[2])                    = Uninitialized[x]                      : &:r59_1
#   59|     r59_3(int)                         = Constant[0]                           : 
#   59|     r59_4(glval<char>)                 = PointerAdd[1]                         : r59_1, r59_3
#   59|     r59_5(char)                        = Constant[0]                           : 
#   59|     mu59_6(char)                       = Store[?]                              : &:r59_4, r59_5
#   59|     r59_7(int)                         = Constant[1]                           : 
#   59|     r59_8(glval<char>)                 = PointerAdd[1]                         : r59_1, r59_7
#   59|     r59_9(glval<ClassWithDestructor2>) = VariableAddress[#temp59:21]           : 
#   59|     mu59_10(ClassWithDestructor2)      = Uninitialized[#temp59:21]             : &:r59_9
#   59|     r59_11(glval<unknown>)             = FunctionAddress[ClassWithDestructor2] : 
#   59|     v59_12(void)                       = Call[ClassWithDestructor2]            : func:r59_11, this:r59_9
#   59|     mu59_13(unknown)                   = ^CallSideEffect                       : ~m?
#   59|     mu59_14(ClassWithDestructor2)      = ^IndirectMayWriteSideEffect[-1]       : &:r59_9
#   59|     r59_15(glval<unknown>)             = FunctionAddress[get_x]                : 
#   59|     r59_16(char)                       = Call[get_x]                           : func:r59_15, this:r59_9
#   59|     mu59_17(unknown)                   = ^CallSideEffect                       : ~m?
#   59|     v59_18(void)                       = ^IndirectReadSideEffect[-1]           : &:r59_9, ~m?
#   59|     mu59_19(ClassWithDestructor2)      = ^IndirectMayWriteSideEffect[-1]       : &:r59_9
#   59|     mu59_20(char)                      = Store[?]                              : &:r59_8, r59_16
#   60|     v60_1(void)                        = NoOp                                  : 
#   58|     v58_4(void)                        = ReturnVoid                            : 
#   58|     v58_5(void)                        = AliasedUse                            : ~m?
#   58|     v58_6(void)                        = ExitFunction                          : 

#   66| void temp_test10()
#   66|   Block 0
#   66|     v66_1(void)                        = EnterFunction                         : 
#   66|     mu66_2(unknown)                    = AliasedDefinition                     : 
#   66|     mu66_3(unknown)                    = InitializeNonLocal                    : 
#   67|     r67_1(glval<ClassWithField>)       = VariableAddress[c]                    : 
#   67|     mu67_2(ClassWithField)             = Uninitialized[c]                      : &:r67_1
#   67|     r67_3(glval<int>)                  = FieldAddress[x]                       : r67_1
#   67|     r67_4(glval<ClassWithDestructor2>) = VariableAddress[#temp67:30]           : 
#   67|     mu67_5(ClassWithDestructor2)       = Uninitialized[#temp67:30]             : &:r67_4
#   67|     r67_6(glval<unknown>)              = FunctionAddress[ClassWithDestructor2] : 
#   67|     v67_7(void)                        = Call[ClassWithDestructor2]            : func:r67_6, this:r67_4
#   67|     mu67_8(unknown)                    = ^CallSideEffect                       : ~m?
#   67|     mu67_9(ClassWithDestructor2)       = ^IndirectMayWriteSideEffect[-1]       : &:r67_4
#   67|     r67_10(glval<unknown>)             = FunctionAddress[get_x]                : 
#   67|     r67_11(char)                       = Call[get_x]                           : func:r67_10, this:r67_4
#   67|     mu67_12(unknown)                   = ^CallSideEffect                       : ~m?
#   67|     v67_13(void)                       = ^IndirectReadSideEffect[-1]           : &:r67_4, ~m?
#   67|     mu67_14(ClassWithDestructor2)      = ^IndirectMayWriteSideEffect[-1]       : &:r67_4
#   67|     r67_15(int)                        = Convert                               : r67_11
#   67|     mu67_16(int)                       = Store[?]                              : &:r67_3, r67_15
#   68|     v68_1(void)                        = NoOp                                  : 
#   66|     v66_4(void)                        = ReturnVoid                            : 
#   66|     v66_5(void)                        = AliasedUse                            : ~m?
#   66|     v66_6(void)                        = ExitFunction                          : 

ir.c:
#    7| void MyCoordsTest(int)
#    7|   Block 0
#    7|     v7_1(void)                                 = EnterFunction                : 
#    7|     mu7_2(unknown)                             = AliasedDefinition            : 
#    7|     mu7_3(unknown)                             = InitializeNonLocal           : 
#    7|     r7_4(glval<int>)                           = VariableAddress[pos]         : 
#    7|     mu7_5(int)                                 = InitializeParameter[pos]     : &:r7_4
#    8|     r8_1(glval<(unnamed class/struct/union)>)  = VariableAddress[coords]      : 
#    8|     mu8_2((unnamed class/struct/union))        = Uninitialized[coords]        : &:r8_1
#    8|     r8_3(glval<int>)                           = FieldAddress[x]              : r8_1
#    8|     r8_4(int)                                  = Constant[0]                  : 
#    8|     mu8_5(int)                                 = Store[?]                     : &:r8_3, r8_4
#    8|     r8_6(glval<int>)                           = FieldAddress[y]              : r8_1
#    8|     r8_7(int)                                  = Constant[0]                  : 
#    8|     mu8_8(int)                                 = Store[?]                     : &:r8_6, r8_7
#    9|     r9_1(glval<int>)                           = VariableAddress[pos]         : 
#    9|     r9_2(int)                                  = Load[pos]                    : &:r9_1, ~m?
#    9|     r9_3(int)                                  = Constant[1]                  : 
#    9|     r9_4(int)                                  = Add                          : r9_2, r9_3
#    9|     r9_5(glval<(unnamed class/struct/union)>)  = VariableAddress[coords]      : 
#    9|     r9_6(glval<int>)                           = FieldAddress[y]              : r9_5
#    9|     mu9_7(int)                                 = Store[?]                     : &:r9_6, r9_4
#    9|     r9_8(int)                                  = Load[?]                      : &:r9_6, ~m?
#    9|     r9_9(glval<(unnamed class/struct/union)>)  = VariableAddress[coords]      : 
#    9|     r9_10(glval<int>)                          = FieldAddress[x]              : r9_9
#    9|     mu9_11(int)                                = Store[?]                     : &:r9_10, r9_8
#   10|     r10_1(glval<unknown>)                      = FunctionAddress[getX]        : 
#   10|     r10_2(glval<(unnamed class/struct/union)>) = VariableAddress[coords]      : 
#   10|     r10_3(struct <unnamed> *)                  = CopyValue                    : r10_2
#   10|     r10_4(int)                                 = Call[getX]                   : func:r10_1, 0:r10_3
#   10|     mu10_5(unknown)                            = ^CallSideEffect              : ~m?
#   10|     v10_6(void)                                = ^BufferReadSideEffect[0]     : &:r10_3, ~m?
#   10|     mu10_7(unknown)                            = ^BufferMayWriteSideEffect[0] : &:r10_3
#   10|     r10_8(glval<(unnamed class/struct/union)>) = VariableAddress[coords]      : 
#   10|     r10_9(glval<int>)                          = FieldAddress[x]              : r10_8
#   10|     mu10_10(int)                               = Store[?]                     : &:r10_9, r10_4
#   11|     v11_1(void)                                = NoOp                         : 
#    7|     v7_6(void)                                 = ReturnVoid                   : 
#    7|     v7_7(void)                                 = AliasedUse                   : ~m?
#    7|     v7_8(void)                                 = ExitFunction                 : 

#   13| void CStyleCast(void*)
#   13|   Block 0
#   13|     v13_1(void)          = EnterFunction              : 
#   13|     mu13_2(unknown)      = AliasedDefinition          : 
#   13|     mu13_3(unknown)      = InitializeNonLocal         : 
#   13|     r13_4(glval<void *>) = VariableAddress[src]       : 
#   13|     mu13_5(void *)       = InitializeParameter[src]   : &:r13_4
#   13|     r13_6(void *)        = Load[src]                  : &:r13_4, ~m?
#   13|     mu13_7(unknown)      = InitializeIndirection[src] : &:r13_6
#   15|     r15_1(glval<char *>) = VariableAddress[dst]       : 
#   15|     r15_2(glval<void *>) = VariableAddress[src]       : 
#   15|     r15_3(void *)        = Load[src]                  : &:r15_2, ~m?
#   15|     r15_4(char *)        = Convert                    : r15_3
#   15|     mu15_5(char *)       = Store[dst]                 : &:r15_1, r15_4
#   16|     v16_1(void)          = NoOp                       : 
#   13|     v13_8(void)          = ReturnIndirection[src]     : &:r13_6, ~m?
#   13|     v13_9(void)          = ReturnVoid                 : 
#   13|     v13_10(void)         = AliasedUse                 : ~m?
#   13|     v13_11(void)         = ExitFunction               : 

#   21| int TryExceptTest(int)
#   21|   Block 0
#   21|     v21_1(void)           = EnterFunction                           : 
#   21|     mu21_2(unknown)       = AliasedDefinition                       : 
#   21|     mu21_3(unknown)       = InitializeNonLocal                      : 
#   21|     r21_4(glval<int>)     = VariableAddress[x]                      : 
#   21|     mu21_5(int)           = InitializeParameter[x]                  : &:r21_4
#   22|     r22_1(glval<int *>)   = VariableAddress[localPtr]               : 
#   22|     mu22_2(int *)         = Uninitialized[localPtr]                 : &:r22_1
#   25|     r25_1(glval<unknown>) = FunctionAddress[ExRaiseAccessViolation] : 
#   25|     r25_2(glval<int>)     = VariableAddress[x]                      : 
#   25|     r25_3(int)            = Load[x]                                 : &:r25_2, ~m?
#   25|     v25_4(void)           = Call[ExRaiseAccessViolation]            : func:r25_1, 0:r25_3
#   25|     mu25_5(unknown)       = ^CallSideEffect                         : ~m?
#-----|   Exception -> Block 5

#   21|   Block 1
#   21|     r21_6(glval<int>) = VariableAddress[#return] : 
#   21|     v21_7(void)       = ReturnValue              : &:r21_6, ~m?
#   21|     v21_8(void)       = AliasedUse               : ~m?
#   21|     v21_9(void)       = ExitFunction             : 

#   26|   Block 2
#   26|     r26_1(int)  = Constant[0]       : 
#   26|     r26_2(bool) = CompareEQ         : r26_8, r26_1
#   26|     v26_3(void) = ConditionalBranch : r26_2
#-----|   False -> Block 3
#-----|   True -> Block 4

#   26|   Block 3
#   26|     r26_4(int)  = Constant[1]       : 
#   26|     r26_5(bool) = CompareEQ         : r26_8, r26_4
#   26|     v26_6(void) = ConditionalBranch : r26_5
#-----|   True -> Block 6

#   26|   Block 4
#   26|     v26_7(void)       = Unwind                   : 
#   29|     r29_1(glval<int>) = VariableAddress[#return] : 
#   29|     r29_2(int)        = Constant[0]              : 
#   29|     mu29_3(int)       = Store[#return]           : &:r29_1, r29_2
#-----|   Goto -> Block 1

#   26|   Block 5
#   26|     r26_8(int)   = Constant[1]       : 
#   26|     r26_9(int)   = Constant[-1]      : 
#   26|     r26_10(bool) = CompareEQ         : r26_8, r26_9
#   26|     v26_11(void) = ConditionalBranch : r26_10
#-----|   False -> Block 2
#-----|   True -> Block 4

#   27|   Block 6
#   27|     r27_1(glval<int>) = VariableAddress[#return] : 
#   27|     r27_2(int)        = Constant[1]              : 
#   27|     mu27_3(int)       = Store[#return]           : &:r27_1, r27_2
#-----|   Goto -> Block 1

ir.cpp:
#    1| void Constants()
#    1|   Block 0
#    1|     v1_1(void)                       = EnterFunction            : 
#    1|     mu1_2(unknown)                   = AliasedDefinition        : 
#    1|     mu1_3(unknown)                   = InitializeNonLocal       : 
#    2|     r2_1(glval<char>)                = VariableAddress[c_i]     : 
#    2|     r2_2(char)                       = Constant[1]              : 
#    2|     mu2_3(char)                      = Store[c_i]               : &:r2_1, r2_2
#    3|     r3_1(glval<char>)                = VariableAddress[c_c]     : 
#    3|     r3_2(char)                       = Constant[65]             : 
#    3|     mu3_3(char)                      = Store[c_c]               : &:r3_1, r3_2
#    5|     r5_1(glval<signed char>)         = VariableAddress[sc_i]    : 
#    5|     r5_2(signed char)                = Constant[-1]             : 
#    5|     mu5_3(signed char)               = Store[sc_i]              : &:r5_1, r5_2
#    6|     r6_1(glval<signed char>)         = VariableAddress[sc_c]    : 
#    6|     r6_2(signed char)                = Constant[65]             : 
#    6|     mu6_3(signed char)               = Store[sc_c]              : &:r6_1, r6_2
#    8|     r8_1(glval<unsigned char>)       = VariableAddress[uc_i]    : 
#    8|     r8_2(unsigned char)              = Constant[5]              : 
#    8|     mu8_3(unsigned char)             = Store[uc_i]              : &:r8_1, r8_2
#    9|     r9_1(glval<unsigned char>)       = VariableAddress[uc_c]    : 
#    9|     r9_2(unsigned char)              = Constant[65]             : 
#    9|     mu9_3(unsigned char)             = Store[uc_c]              : &:r9_1, r9_2
#   11|     r11_1(glval<short>)              = VariableAddress[s]       : 
#   11|     r11_2(short)                     = Constant[5]              : 
#   11|     mu11_3(short)                    = Store[s]                 : &:r11_1, r11_2
#   12|     r12_1(glval<unsigned short>)     = VariableAddress[us]      : 
#   12|     r12_2(unsigned short)            = Constant[5]              : 
#   12|     mu12_3(unsigned short)           = Store[us]                : &:r12_1, r12_2
#   14|     r14_1(glval<int>)                = VariableAddress[i]       : 
#   14|     r14_2(int)                       = Constant[5]              : 
#   14|     mu14_3(int)                      = Store[i]                 : &:r14_1, r14_2
#   15|     r15_1(glval<unsigned int>)       = VariableAddress[ui]      : 
#   15|     r15_2(unsigned int)              = Constant[5]              : 
#   15|     mu15_3(unsigned int)             = Store[ui]                : &:r15_1, r15_2
#   17|     r17_1(glval<long>)               = VariableAddress[l]       : 
#   17|     r17_2(long)                      = Constant[5]              : 
#   17|     mu17_3(long)                     = Store[l]                 : &:r17_1, r17_2
#   18|     r18_1(glval<unsigned long>)      = VariableAddress[ul]      : 
#   18|     r18_2(unsigned long)             = Constant[5]              : 
#   18|     mu18_3(unsigned long)            = Store[ul]                : &:r18_1, r18_2
#   20|     r20_1(glval<long long>)          = VariableAddress[ll_i]    : 
#   20|     r20_2(long long)                 = Constant[5]              : 
#   20|     mu20_3(long long)                = Store[ll_i]              : &:r20_1, r20_2
#   21|     r21_1(glval<long long>)          = VariableAddress[ll_ll]   : 
#   21|     r21_2(long long)                 = Constant[5]              : 
#   21|     mu21_3(long long)                = Store[ll_ll]             : &:r21_1, r21_2
#   22|     r22_1(glval<unsigned long long>) = VariableAddress[ull_i]   : 
#   22|     r22_2(unsigned long long)        = Constant[5]              : 
#   22|     mu22_3(unsigned long long)       = Store[ull_i]             : &:r22_1, r22_2
#   23|     r23_1(glval<unsigned long long>) = VariableAddress[ull_ull] : 
#   23|     r23_2(unsigned long long)        = Constant[5]              : 
#   23|     mu23_3(unsigned long long)       = Store[ull_ull]           : &:r23_1, r23_2
#   25|     r25_1(glval<bool>)               = VariableAddress[b_t]     : 
#   25|     r25_2(bool)                      = Constant[1]              : 
#   25|     mu25_3(bool)                     = Store[b_t]               : &:r25_1, r25_2
#   26|     r26_1(glval<bool>)               = VariableAddress[b_f]     : 
#   26|     r26_2(bool)                      = Constant[0]              : 
#   26|     mu26_3(bool)                     = Store[b_f]               : &:r26_1, r26_2
#   28|     r28_1(glval<wchar_t>)            = VariableAddress[wc_i]    : 
#   28|     r28_2(wchar_t)                   = Constant[5]              : 
#   28|     mu28_3(wchar_t)                  = Store[wc_i]              : &:r28_1, r28_2
#   29|     r29_1(glval<wchar_t>)            = VariableAddress[wc_c]    : 
#   29|     r29_2(wchar_t)                   = Constant[65]             : 
#   29|     mu29_3(wchar_t)                  = Store[wc_c]              : &:r29_1, r29_2
#   31|     r31_1(glval<char16_t>)           = VariableAddress[c16]     : 
#   31|     r31_2(char16_t)                  = Constant[65]             : 
#   31|     mu31_3(char16_t)                 = Store[c16]               : &:r31_1, r31_2
#   32|     r32_1(glval<char32_t>)           = VariableAddress[c32]     : 
#   32|     r32_2(char32_t)                  = Constant[65]             : 
#   32|     mu32_3(char32_t)                 = Store[c32]               : &:r32_1, r32_2
#   34|     r34_1(glval<float>)              = VariableAddress[f_i]     : 
#   34|     r34_2(float)                     = Constant[1.0]            : 
#   34|     mu34_3(float)                    = Store[f_i]               : &:r34_1, r34_2
#   35|     r35_1(glval<float>)              = VariableAddress[f_f]     : 
#   35|     r35_2(float)                     = Constant[1.0]            : 
#   35|     mu35_3(float)                    = Store[f_f]               : &:r35_1, r35_2
#   36|     r36_1(glval<float>)              = VariableAddress[f_d]     : 
#   36|     r36_2(float)                     = Constant[1.0]            : 
#   36|     mu36_3(float)                    = Store[f_d]               : &:r36_1, r36_2
#   38|     r38_1(glval<double>)             = VariableAddress[d_i]     : 
#   38|     r38_2(double)                    = Constant[1.0]            : 
#   38|     mu38_3(double)                   = Store[d_i]               : &:r38_1, r38_2
#   39|     r39_1(glval<double>)             = VariableAddress[d_f]     : 
#   39|     r39_2(double)                    = Constant[1.0]            : 
#   39|     mu39_3(double)                   = Store[d_f]               : &:r39_1, r39_2
#   40|     r40_1(glval<double>)             = VariableAddress[d_d]     : 
#   40|     r40_2(double)                    = Constant[1.0]            : 
#   40|     mu40_3(double)                   = Store[d_d]               : &:r40_1, r40_2
#   41|     v41_1(void)                      = NoOp                     : 
#    1|     v1_4(void)                       = ReturnVoid               : 
#    1|     v1_5(void)                       = AliasedUse               : ~m?
#    1|     v1_6(void)                       = ExitFunction             : 

#   43| void Foo()
#   43|   Block 0
#   43|     v43_1(void)         = EnterFunction      : 
#   43|     mu43_2(unknown)     = AliasedDefinition  : 
#   43|     mu43_3(unknown)     = InitializeNonLocal : 
#   44|     r44_1(glval<int>)   = VariableAddress[x] : 
#   44|     r44_2(int)          = Constant[17]       : 
#   44|     mu44_3(int)         = Store[x]           : &:r44_1, r44_2
#   45|     r45_1(glval<short>) = VariableAddress[y] : 
#   45|     r45_2(short)        = Constant[7]        : 
#   45|     mu45_3(short)       = Store[y]           : &:r45_1, r45_2
#   46|     r46_1(glval<int>)   = VariableAddress[x] : 
#   46|     r46_2(int)          = Load[x]            : &:r46_1, ~m?
#   46|     r46_3(glval<short>) = VariableAddress[y] : 
#   46|     r46_4(short)        = Load[y]            : &:r46_3, ~m?
#   46|     r46_5(int)          = Convert            : r46_4
#   46|     r46_6(int)          = Add                : r46_2, r46_5
#   46|     r46_7(short)        = Convert            : r46_6
#   46|     r46_8(glval<short>) = VariableAddress[y] : 
#   46|     mu46_9(short)       = Store[y]           : &:r46_8, r46_7
#   47|     r47_1(glval<int>)   = VariableAddress[x] : 
#   47|     r47_2(int)          = Load[x]            : &:r47_1, ~m?
#   47|     r47_3(glval<short>) = VariableAddress[y] : 
#   47|     r47_4(short)        = Load[y]            : &:r47_3, ~m?
#   47|     r47_5(int)          = Convert            : r47_4
#   47|     r47_6(int)          = Mul                : r47_2, r47_5
#   47|     r47_7(glval<int>)   = VariableAddress[x] : 
#   47|     mu47_8(int)         = Store[x]           : &:r47_7, r47_6
#   48|     v48_1(void)         = NoOp               : 
#   43|     v43_4(void)         = ReturnVoid         : 
#   43|     v43_5(void)         = AliasedUse         : ~m?
#   43|     v43_6(void)         = ExitFunction       : 

#   50| void IntegerOps(int, int)
#   50|   Block 0
#   50|     v50_1(void)       = EnterFunction          : 
#   50|     mu50_2(unknown)   = AliasedDefinition      : 
#   50|     mu50_3(unknown)   = InitializeNonLocal     : 
#   50|     r50_4(glval<int>) = VariableAddress[x]     : 
#   50|     mu50_5(int)       = InitializeParameter[x] : &:r50_4
#   50|     r50_6(glval<int>) = VariableAddress[y]     : 
#   50|     mu50_7(int)       = InitializeParameter[y] : &:r50_6
#   51|     r51_1(glval<int>) = VariableAddress[z]     : 
#   51|     mu51_2(int)       = Uninitialized[z]       : &:r51_1
#   53|     r53_1(glval<int>) = VariableAddress[x]     : 
#   53|     r53_2(int)        = Load[x]                : &:r53_1, ~m?
#   53|     r53_3(glval<int>) = VariableAddress[y]     : 
#   53|     r53_4(int)        = Load[y]                : &:r53_3, ~m?
#   53|     r53_5(int)        = Add                    : r53_2, r53_4
#   53|     r53_6(glval<int>) = VariableAddress[z]     : 
#   53|     mu53_7(int)       = Store[z]               : &:r53_6, r53_5
#   54|     r54_1(glval<int>) = VariableAddress[x]     : 
#   54|     r54_2(int)        = Load[x]                : &:r54_1, ~m?
#   54|     r54_3(glval<int>) = VariableAddress[y]     : 
#   54|     r54_4(int)        = Load[y]                : &:r54_3, ~m?
#   54|     r54_5(int)        = Sub                    : r54_2, r54_4
#   54|     r54_6(glval<int>) = VariableAddress[z]     : 
#   54|     mu54_7(int)       = Store[z]               : &:r54_6, r54_5
#   55|     r55_1(glval<int>) = VariableAddress[x]     : 
#   55|     r55_2(int)        = Load[x]                : &:r55_1, ~m?
#   55|     r55_3(glval<int>) = VariableAddress[y]     : 
#   55|     r55_4(int)        = Load[y]                : &:r55_3, ~m?
#   55|     r55_5(int)        = Mul                    : r55_2, r55_4
#   55|     r55_6(glval<int>) = VariableAddress[z]     : 
#   55|     mu55_7(int)       = Store[z]               : &:r55_6, r55_5
#   56|     r56_1(glval<int>) = VariableAddress[x]     : 
#   56|     r56_2(int)        = Load[x]                : &:r56_1, ~m?
#   56|     r56_3(glval<int>) = VariableAddress[y]     : 
#   56|     r56_4(int)        = Load[y]                : &:r56_3, ~m?
#   56|     r56_5(int)        = Div                    : r56_2, r56_4
#   56|     r56_6(glval<int>) = VariableAddress[z]     : 
#   56|     mu56_7(int)       = Store[z]               : &:r56_6, r56_5
#   57|     r57_1(glval<int>) = VariableAddress[x]     : 
#   57|     r57_2(int)        = Load[x]                : &:r57_1, ~m?
#   57|     r57_3(glval<int>) = VariableAddress[y]     : 
#   57|     r57_4(int)        = Load[y]                : &:r57_3, ~m?
#   57|     r57_5(int)        = Rem                    : r57_2, r57_4
#   57|     r57_6(glval<int>) = VariableAddress[z]     : 
#   57|     mu57_7(int)       = Store[z]               : &:r57_6, r57_5
#   59|     r59_1(glval<int>) = VariableAddress[x]     : 
#   59|     r59_2(int)        = Load[x]                : &:r59_1, ~m?
#   59|     r59_3(glval<int>) = VariableAddress[y]     : 
#   59|     r59_4(int)        = Load[y]                : &:r59_3, ~m?
#   59|     r59_5(int)        = BitAnd                 : r59_2, r59_4
#   59|     r59_6(glval<int>) = VariableAddress[z]     : 
#   59|     mu59_7(int)       = Store[z]               : &:r59_6, r59_5
#   60|     r60_1(glval<int>) = VariableAddress[x]     : 
#   60|     r60_2(int)        = Load[x]                : &:r60_1, ~m?
#   60|     r60_3(glval<int>) = VariableAddress[y]     : 
#   60|     r60_4(int)        = Load[y]                : &:r60_3, ~m?
#   60|     r60_5(int)        = BitOr                  : r60_2, r60_4
#   60|     r60_6(glval<int>) = VariableAddress[z]     : 
#   60|     mu60_7(int)       = Store[z]               : &:r60_6, r60_5
#   61|     r61_1(glval<int>) = VariableAddress[x]     : 
#   61|     r61_2(int)        = Load[x]                : &:r61_1, ~m?
#   61|     r61_3(glval<int>) = VariableAddress[y]     : 
#   61|     r61_4(int)        = Load[y]                : &:r61_3, ~m?
#   61|     r61_5(int)        = BitXor                 : r61_2, r61_4
#   61|     r61_6(glval<int>) = VariableAddress[z]     : 
#   61|     mu61_7(int)       = Store[z]               : &:r61_6, r61_5
#   63|     r63_1(glval<int>) = VariableAddress[x]     : 
#   63|     r63_2(int)        = Load[x]                : &:r63_1, ~m?
#   63|     r63_3(glval<int>) = VariableAddress[y]     : 
#   63|     r63_4(int)        = Load[y]                : &:r63_3, ~m?
#   63|     r63_5(int)        = ShiftLeft              : r63_2, r63_4
#   63|     r63_6(glval<int>) = VariableAddress[z]     : 
#   63|     mu63_7(int)       = Store[z]               : &:r63_6, r63_5
#   64|     r64_1(glval<int>) = VariableAddress[x]     : 
#   64|     r64_2(int)        = Load[x]                : &:r64_1, ~m?
#   64|     r64_3(glval<int>) = VariableAddress[y]     : 
#   64|     r64_4(int)        = Load[y]                : &:r64_3, ~m?
#   64|     r64_5(int)        = ShiftRight             : r64_2, r64_4
#   64|     r64_6(glval<int>) = VariableAddress[z]     : 
#   64|     mu64_7(int)       = Store[z]               : &:r64_6, r64_5
#   66|     r66_1(glval<int>) = VariableAddress[x]     : 
#   66|     r66_2(int)        = Load[x]                : &:r66_1, ~m?
#   66|     r66_3(glval<int>) = VariableAddress[z]     : 
#   66|     mu66_4(int)       = Store[z]               : &:r66_3, r66_2
#   68|     r68_1(glval<int>) = VariableAddress[x]     : 
#   68|     r68_2(int)        = Load[x]                : &:r68_1, ~m?
#   68|     r68_3(glval<int>) = VariableAddress[z]     : 
#   68|     r68_4(int)        = Load[z]                : &:r68_3, ~m?
#   68|     r68_5(int)        = Add                    : r68_4, r68_2
#   68|     mu68_6(int)       = Store[z]               : &:r68_3, r68_5
#   69|     r69_1(glval<int>) = VariableAddress[x]     : 
#   69|     r69_2(int)        = Load[x]                : &:r69_1, ~m?
#   69|     r69_3(glval<int>) = VariableAddress[z]     : 
#   69|     r69_4(int)        = Load[z]                : &:r69_3, ~m?
#   69|     r69_5(int)        = Sub                    : r69_4, r69_2
#   69|     mu69_6(int)       = Store[z]               : &:r69_3, r69_5
#   70|     r70_1(glval<int>) = VariableAddress[x]     : 
#   70|     r70_2(int)        = Load[x]                : &:r70_1, ~m?
#   70|     r70_3(glval<int>) = VariableAddress[z]     : 
#   70|     r70_4(int)        = Load[z]                : &:r70_3, ~m?
#   70|     r70_5(int)        = Mul                    : r70_4, r70_2
#   70|     mu70_6(int)       = Store[z]               : &:r70_3, r70_5
#   71|     r71_1(glval<int>) = VariableAddress[x]     : 
#   71|     r71_2(int)        = Load[x]                : &:r71_1, ~m?
#   71|     r71_3(glval<int>) = VariableAddress[z]     : 
#   71|     r71_4(int)        = Load[z]                : &:r71_3, ~m?
#   71|     r71_5(int)        = Div                    : r71_4, r71_2
#   71|     mu71_6(int)       = Store[z]               : &:r71_3, r71_5
#   72|     r72_1(glval<int>) = VariableAddress[x]     : 
#   72|     r72_2(int)        = Load[x]                : &:r72_1, ~m?
#   72|     r72_3(glval<int>) = VariableAddress[z]     : 
#   72|     r72_4(int)        = Load[z]                : &:r72_3, ~m?
#   72|     r72_5(int)        = Rem                    : r72_4, r72_2
#   72|     mu72_6(int)       = Store[z]               : &:r72_3, r72_5
#   74|     r74_1(glval<int>) = VariableAddress[x]     : 
#   74|     r74_2(int)        = Load[x]                : &:r74_1, ~m?
#   74|     r74_3(glval<int>) = VariableAddress[z]     : 
#   74|     r74_4(int)        = Load[z]                : &:r74_3, ~m?
#   74|     r74_5(int)        = BitAnd                 : r74_4, r74_2
#   74|     mu74_6(int)       = Store[z]               : &:r74_3, r74_5
#   75|     r75_1(glval<int>) = VariableAddress[x]     : 
#   75|     r75_2(int)        = Load[x]                : &:r75_1, ~m?
#   75|     r75_3(glval<int>) = VariableAddress[z]     : 
#   75|     r75_4(int)        = Load[z]                : &:r75_3, ~m?
#   75|     r75_5(int)        = BitOr                  : r75_4, r75_2
#   75|     mu75_6(int)       = Store[z]               : &:r75_3, r75_5
#   76|     r76_1(glval<int>) = VariableAddress[x]     : 
#   76|     r76_2(int)        = Load[x]                : &:r76_1, ~m?
#   76|     r76_3(glval<int>) = VariableAddress[z]     : 
#   76|     r76_4(int)        = Load[z]                : &:r76_3, ~m?
#   76|     r76_5(int)        = BitXor                 : r76_4, r76_2
#   76|     mu76_6(int)       = Store[z]               : &:r76_3, r76_5
#   78|     r78_1(glval<int>) = VariableAddress[x]     : 
#   78|     r78_2(int)        = Load[x]                : &:r78_1, ~m?
#   78|     r78_3(glval<int>) = VariableAddress[z]     : 
#   78|     r78_4(int)        = Load[z]                : &:r78_3, ~m?
#   78|     r78_5(int)        = ShiftLeft              : r78_4, r78_2
#   78|     mu78_6(int)       = Store[z]               : &:r78_3, r78_5
#   79|     r79_1(glval<int>) = VariableAddress[x]     : 
#   79|     r79_2(int)        = Load[x]                : &:r79_1, ~m?
#   79|     r79_3(glval<int>) = VariableAddress[z]     : 
#   79|     r79_4(int)        = Load[z]                : &:r79_3, ~m?
#   79|     r79_5(int)        = ShiftRight             : r79_4, r79_2
#   79|     mu79_6(int)       = Store[z]               : &:r79_3, r79_5
#   81|     r81_1(glval<int>) = VariableAddress[x]     : 
#   81|     r81_2(int)        = Load[x]                : &:r81_1, ~m?
#   81|     r81_3(int)        = CopyValue              : r81_2
#   81|     r81_4(glval<int>) = VariableAddress[z]     : 
#   81|     mu81_5(int)       = Store[z]               : &:r81_4, r81_3
#   82|     r82_1(glval<int>) = VariableAddress[x]     : 
#   82|     r82_2(int)        = Load[x]                : &:r82_1, ~m?
#   82|     r82_3(int)        = Negate                 : r82_2
#   82|     r82_4(glval<int>) = VariableAddress[z]     : 
#   82|     mu82_5(int)       = Store[z]               : &:r82_4, r82_3
#   83|     r83_1(glval<int>) = VariableAddress[x]     : 
#   83|     r83_2(int)        = Load[x]                : &:r83_1, ~m?
#   83|     r83_3(int)        = BitComplement          : r83_2
#   83|     r83_4(glval<int>) = VariableAddress[z]     : 
#   83|     mu83_5(int)       = Store[z]               : &:r83_4, r83_3
#   84|     r84_1(glval<int>) = VariableAddress[x]     : 
#   84|     r84_2(int)        = Load[x]                : &:r84_1, ~m?
#   84|     r84_3(int)        = Constant[0]            : 
#   84|     r84_4(bool)       = CompareNE              : r84_2, r84_3
#   84|     r84_5(bool)       = LogicalNot             : r84_4
#   84|     r84_6(int)        = Convert                : r84_5
#   84|     r84_7(glval<int>) = VariableAddress[z]     : 
#   84|     mu84_8(int)       = Store[z]               : &:r84_7, r84_6
#   85|     v85_1(void)       = NoOp                   : 
#   50|     v50_8(void)       = ReturnVoid             : 
#   50|     v50_9(void)       = AliasedUse             : ~m?
#   50|     v50_10(void)      = ExitFunction           : 

#   87| void IntegerCompare(int, int)
#   87|   Block 0
#   87|     v87_1(void)        = EnterFunction          : 
#   87|     mu87_2(unknown)    = AliasedDefinition      : 
#   87|     mu87_3(unknown)    = InitializeNonLocal     : 
#   87|     r87_4(glval<int>)  = VariableAddress[x]     : 
#   87|     mu87_5(int)        = InitializeParameter[x] : &:r87_4
#   87|     r87_6(glval<int>)  = VariableAddress[y]     : 
#   87|     mu87_7(int)        = InitializeParameter[y] : &:r87_6
#   88|     r88_1(glval<bool>) = VariableAddress[b]     : 
#   88|     mu88_2(bool)       = Uninitialized[b]       : &:r88_1
#   90|     r90_1(glval<int>)  = VariableAddress[x]     : 
#   90|     r90_2(int)         = Load[x]                : &:r90_1, ~m?
#   90|     r90_3(glval<int>)  = VariableAddress[y]     : 
#   90|     r90_4(int)         = Load[y]                : &:r90_3, ~m?
#   90|     r90_5(bool)        = CompareEQ              : r90_2, r90_4
#   90|     r90_6(glval<bool>) = VariableAddress[b]     : 
#   90|     mu90_7(bool)       = Store[b]               : &:r90_6, r90_5
#   91|     r91_1(glval<int>)  = VariableAddress[x]     : 
#   91|     r91_2(int)         = Load[x]                : &:r91_1, ~m?
#   91|     r91_3(glval<int>)  = VariableAddress[y]     : 
#   91|     r91_4(int)         = Load[y]                : &:r91_3, ~m?
#   91|     r91_5(bool)        = CompareNE              : r91_2, r91_4
#   91|     r91_6(glval<bool>) = VariableAddress[b]     : 
#   91|     mu91_7(bool)       = Store[b]               : &:r91_6, r91_5
#   92|     r92_1(glval<int>)  = VariableAddress[x]     : 
#   92|     r92_2(int)         = Load[x]                : &:r92_1, ~m?
#   92|     r92_3(glval<int>)  = VariableAddress[y]     : 
#   92|     r92_4(int)         = Load[y]                : &:r92_3, ~m?
#   92|     r92_5(bool)        = CompareLT              : r92_2, r92_4
#   92|     r92_6(glval<bool>) = VariableAddress[b]     : 
#   92|     mu92_7(bool)       = Store[b]               : &:r92_6, r92_5
#   93|     r93_1(glval<int>)  = VariableAddress[x]     : 
#   93|     r93_2(int)         = Load[x]                : &:r93_1, ~m?
#   93|     r93_3(glval<int>)  = VariableAddress[y]     : 
#   93|     r93_4(int)         = Load[y]                : &:r93_3, ~m?
#   93|     r93_5(bool)        = CompareGT              : r93_2, r93_4
#   93|     r93_6(glval<bool>) = VariableAddress[b]     : 
#   93|     mu93_7(bool)       = Store[b]               : &:r93_6, r93_5
#   94|     r94_1(glval<int>)  = VariableAddress[x]     : 
#   94|     r94_2(int)         = Load[x]                : &:r94_1, ~m?
#   94|     r94_3(glval<int>)  = VariableAddress[y]     : 
#   94|     r94_4(int)         = Load[y]                : &:r94_3, ~m?
#   94|     r94_5(bool)        = CompareLE              : r94_2, r94_4
#   94|     r94_6(glval<bool>) = VariableAddress[b]     : 
#   94|     mu94_7(bool)       = Store[b]               : &:r94_6, r94_5
#   95|     r95_1(glval<int>)  = VariableAddress[x]     : 
#   95|     r95_2(int)         = Load[x]                : &:r95_1, ~m?
#   95|     r95_3(glval<int>)  = VariableAddress[y]     : 
#   95|     r95_4(int)         = Load[y]                : &:r95_3, ~m?
#   95|     r95_5(bool)        = CompareGE              : r95_2, r95_4
#   95|     r95_6(glval<bool>) = VariableAddress[b]     : 
#   95|     mu95_7(bool)       = Store[b]               : &:r95_6, r95_5
#   96|     v96_1(void)        = NoOp                   : 
#   87|     v87_8(void)        = ReturnVoid             : 
#   87|     v87_9(void)        = AliasedUse             : ~m?
#   87|     v87_10(void)       = ExitFunction           : 

#   98| void IntegerCrement(int)
#   98|   Block 0
#   98|     v98_1(void)        = EnterFunction          : 
#   98|     mu98_2(unknown)    = AliasedDefinition      : 
#   98|     mu98_3(unknown)    = InitializeNonLocal     : 
#   98|     r98_4(glval<int>)  = VariableAddress[x]     : 
#   98|     mu98_5(int)        = InitializeParameter[x] : &:r98_4
#   99|     r99_1(glval<int>)  = VariableAddress[y]     : 
#   99|     mu99_2(int)        = Uninitialized[y]       : &:r99_1
#  101|     r101_1(glval<int>) = VariableAddress[x]     : 
#  101|     r101_2(int)        = Load[x]                : &:r101_1, ~m?
#  101|     r101_3(int)        = Constant[1]            : 
#  101|     r101_4(int)        = Add                    : r101_2, r101_3
#  101|     mu101_5(int)       = Store[x]               : &:r101_1, r101_4
#  101|     r101_6(int)        = Load[x]                : &:r101_1, ~m?
#  101|     r101_7(glval<int>) = VariableAddress[y]     : 
#  101|     mu101_8(int)       = Store[y]               : &:r101_7, r101_6
#  102|     r102_1(glval<int>) = VariableAddress[x]     : 
#  102|     r102_2(int)        = Load[x]                : &:r102_1, ~m?
#  102|     r102_3(int)        = Constant[1]            : 
#  102|     r102_4(int)        = Sub                    : r102_2, r102_3
#  102|     mu102_5(int)       = Store[x]               : &:r102_1, r102_4
#  102|     r102_6(int)        = Load[x]                : &:r102_1, ~m?
#  102|     r102_7(glval<int>) = VariableAddress[y]     : 
#  102|     mu102_8(int)       = Store[y]               : &:r102_7, r102_6
#  103|     r103_1(glval<int>) = VariableAddress[x]     : 
#  103|     r103_2(int)        = Load[x]                : &:r103_1, ~m?
#  103|     r103_3(int)        = Constant[1]            : 
#  103|     r103_4(int)        = Add                    : r103_2, r103_3
#  103|     mu103_5(int)       = Store[x]               : &:r103_1, r103_4
#  103|     r103_6(int)        = CopyValue              : r103_2
#  103|     r103_7(glval<int>) = VariableAddress[y]     : 
#  103|     mu103_8(int)       = Store[y]               : &:r103_7, r103_6
#  104|     r104_1(glval<int>) = VariableAddress[x]     : 
#  104|     r104_2(int)        = Load[x]                : &:r104_1, ~m?
#  104|     r104_3(int)        = Constant[1]            : 
#  104|     r104_4(int)        = Sub                    : r104_2, r104_3
#  104|     mu104_5(int)       = Store[x]               : &:r104_1, r104_4
#  104|     r104_6(int)        = CopyValue              : r104_2
#  104|     r104_7(glval<int>) = VariableAddress[y]     : 
#  104|     mu104_8(int)       = Store[y]               : &:r104_7, r104_6
#  105|     v105_1(void)       = NoOp                   : 
#   98|     v98_6(void)        = ReturnVoid             : 
#   98|     v98_7(void)        = AliasedUse             : ~m?
#   98|     v98_8(void)        = ExitFunction           : 

#  107| void IntegerCrement_LValue(int)
#  107|   Block 0
#  107|     v107_1(void)         = EnterFunction          : 
#  107|     mu107_2(unknown)     = AliasedDefinition      : 
#  107|     mu107_3(unknown)     = InitializeNonLocal     : 
#  107|     r107_4(glval<int>)   = VariableAddress[x]     : 
#  107|     mu107_5(int)         = InitializeParameter[x] : &:r107_4
#  108|     r108_1(glval<int *>) = VariableAddress[p]     : 
#  108|     mu108_2(int *)       = Uninitialized[p]       : &:r108_1
#  110|     r110_1(glval<int>)   = VariableAddress[x]     : 
#  110|     r110_2(int)          = Load[x]                : &:r110_1, ~m?
#  110|     r110_3(int)          = Constant[1]            : 
#  110|     r110_4(int)          = Add                    : r110_2, r110_3
#  110|     mu110_5(int)         = Store[x]               : &:r110_1, r110_4
#  110|     r110_6(glval<int>)   = CopyValue              : r110_1
#  110|     r110_7(int *)        = CopyValue              : r110_6
#  110|     r110_8(glval<int *>) = VariableAddress[p]     : 
#  110|     mu110_9(int *)       = Store[p]               : &:r110_8, r110_7
#  111|     r111_1(glval<int>)   = VariableAddress[x]     : 
#  111|     r111_2(int)          = Load[x]                : &:r111_1, ~m?
#  111|     r111_3(int)          = Constant[1]            : 
#  111|     r111_4(int)          = Sub                    : r111_2, r111_3
#  111|     mu111_5(int)         = Store[x]               : &:r111_1, r111_4
#  111|     r111_6(glval<int>)   = CopyValue              : r111_1
#  111|     r111_7(int *)        = CopyValue              : r111_6
#  111|     r111_8(glval<int *>) = VariableAddress[p]     : 
#  111|     mu111_9(int *)       = Store[p]               : &:r111_8, r111_7
#  112|     v112_1(void)         = NoOp                   : 
#  107|     v107_6(void)         = ReturnVoid             : 
#  107|     v107_7(void)         = AliasedUse             : ~m?
#  107|     v107_8(void)         = ExitFunction           : 

#  114| void FloatOps(double, double)
#  114|   Block 0
#  114|     v114_1(void)          = EnterFunction          : 
#  114|     mu114_2(unknown)      = AliasedDefinition      : 
#  114|     mu114_3(unknown)      = InitializeNonLocal     : 
#  114|     r114_4(glval<double>) = VariableAddress[x]     : 
#  114|     mu114_5(double)       = InitializeParameter[x] : &:r114_4
#  114|     r114_6(glval<double>) = VariableAddress[y]     : 
#  114|     mu114_7(double)       = InitializeParameter[y] : &:r114_6
#  115|     r115_1(glval<double>) = VariableAddress[z]     : 
#  115|     mu115_2(double)       = Uninitialized[z]       : &:r115_1
#  117|     r117_1(glval<double>) = VariableAddress[x]     : 
#  117|     r117_2(double)        = Load[x]                : &:r117_1, ~m?
#  117|     r117_3(glval<double>) = VariableAddress[y]     : 
#  117|     r117_4(double)        = Load[y]                : &:r117_3, ~m?
#  117|     r117_5(double)        = Add                    : r117_2, r117_4
#  117|     r117_6(glval<double>) = VariableAddress[z]     : 
#  117|     mu117_7(double)       = Store[z]               : &:r117_6, r117_5
#  118|     r118_1(glval<double>) = VariableAddress[x]     : 
#  118|     r118_2(double)        = Load[x]                : &:r118_1, ~m?
#  118|     r118_3(glval<double>) = VariableAddress[y]     : 
#  118|     r118_4(double)        = Load[y]                : &:r118_3, ~m?
#  118|     r118_5(double)        = Sub                    : r118_2, r118_4
#  118|     r118_6(glval<double>) = VariableAddress[z]     : 
#  118|     mu118_7(double)       = Store[z]               : &:r118_6, r118_5
#  119|     r119_1(glval<double>) = VariableAddress[x]     : 
#  119|     r119_2(double)        = Load[x]                : &:r119_1, ~m?
#  119|     r119_3(glval<double>) = VariableAddress[y]     : 
#  119|     r119_4(double)        = Load[y]                : &:r119_3, ~m?
#  119|     r119_5(double)        = Mul                    : r119_2, r119_4
#  119|     r119_6(glval<double>) = VariableAddress[z]     : 
#  119|     mu119_7(double)       = Store[z]               : &:r119_6, r119_5
#  120|     r120_1(glval<double>) = VariableAddress[x]     : 
#  120|     r120_2(double)        = Load[x]                : &:r120_1, ~m?
#  120|     r120_3(glval<double>) = VariableAddress[y]     : 
#  120|     r120_4(double)        = Load[y]                : &:r120_3, ~m?
#  120|     r120_5(double)        = Div                    : r120_2, r120_4
#  120|     r120_6(glval<double>) = VariableAddress[z]     : 
#  120|     mu120_7(double)       = Store[z]               : &:r120_6, r120_5
#  122|     r122_1(glval<double>) = VariableAddress[x]     : 
#  122|     r122_2(double)        = Load[x]                : &:r122_1, ~m?
#  122|     r122_3(glval<double>) = VariableAddress[z]     : 
#  122|     mu122_4(double)       = Store[z]               : &:r122_3, r122_2
#  124|     r124_1(glval<double>) = VariableAddress[x]     : 
#  124|     r124_2(double)        = Load[x]                : &:r124_1, ~m?
#  124|     r124_3(glval<double>) = VariableAddress[z]     : 
#  124|     r124_4(double)        = Load[z]                : &:r124_3, ~m?
#  124|     r124_5(double)        = Add                    : r124_4, r124_2
#  124|     mu124_6(double)       = Store[z]               : &:r124_3, r124_5
#  125|     r125_1(glval<double>) = VariableAddress[x]     : 
#  125|     r125_2(double)        = Load[x]                : &:r125_1, ~m?
#  125|     r125_3(glval<double>) = VariableAddress[z]     : 
#  125|     r125_4(double)        = Load[z]                : &:r125_3, ~m?
#  125|     r125_5(double)        = Sub                    : r125_4, r125_2
#  125|     mu125_6(double)       = Store[z]               : &:r125_3, r125_5
#  126|     r126_1(glval<double>) = VariableAddress[x]     : 
#  126|     r126_2(double)        = Load[x]                : &:r126_1, ~m?
#  126|     r126_3(glval<double>) = VariableAddress[z]     : 
#  126|     r126_4(double)        = Load[z]                : &:r126_3, ~m?
#  126|     r126_5(double)        = Mul                    : r126_4, r126_2
#  126|     mu126_6(double)       = Store[z]               : &:r126_3, r126_5
#  127|     r127_1(glval<double>) = VariableAddress[x]     : 
#  127|     r127_2(double)        = Load[x]                : &:r127_1, ~m?
#  127|     r127_3(glval<double>) = VariableAddress[z]     : 
#  127|     r127_4(double)        = Load[z]                : &:r127_3, ~m?
#  127|     r127_5(double)        = Div                    : r127_4, r127_2
#  127|     mu127_6(double)       = Store[z]               : &:r127_3, r127_5
#  129|     r129_1(glval<double>) = VariableAddress[x]     : 
#  129|     r129_2(double)        = Load[x]                : &:r129_1, ~m?
#  129|     r129_3(double)        = CopyValue              : r129_2
#  129|     r129_4(glval<double>) = VariableAddress[z]     : 
#  129|     mu129_5(double)       = Store[z]               : &:r129_4, r129_3
#  130|     r130_1(glval<double>) = VariableAddress[x]     : 
#  130|     r130_2(double)        = Load[x]                : &:r130_1, ~m?
#  130|     r130_3(double)        = Negate                 : r130_2
#  130|     r130_4(glval<double>) = VariableAddress[z]     : 
#  130|     mu130_5(double)       = Store[z]               : &:r130_4, r130_3
#  131|     v131_1(void)          = NoOp                   : 
#  114|     v114_8(void)          = ReturnVoid             : 
#  114|     v114_9(void)          = AliasedUse             : ~m?
#  114|     v114_10(void)         = ExitFunction           : 

#  133| void FloatCompare(double, double)
#  133|   Block 0
#  133|     v133_1(void)          = EnterFunction          : 
#  133|     mu133_2(unknown)      = AliasedDefinition      : 
#  133|     mu133_3(unknown)      = InitializeNonLocal     : 
#  133|     r133_4(glval<double>) = VariableAddress[x]     : 
#  133|     mu133_5(double)       = InitializeParameter[x] : &:r133_4
#  133|     r133_6(glval<double>) = VariableAddress[y]     : 
#  133|     mu133_7(double)       = InitializeParameter[y] : &:r133_6
#  134|     r134_1(glval<bool>)   = VariableAddress[b]     : 
#  134|     mu134_2(bool)         = Uninitialized[b]       : &:r134_1
#  136|     r136_1(glval<double>) = VariableAddress[x]     : 
#  136|     r136_2(double)        = Load[x]                : &:r136_1, ~m?
#  136|     r136_3(glval<double>) = VariableAddress[y]     : 
#  136|     r136_4(double)        = Load[y]                : &:r136_3, ~m?
#  136|     r136_5(bool)          = CompareEQ              : r136_2, r136_4
#  136|     r136_6(glval<bool>)   = VariableAddress[b]     : 
#  136|     mu136_7(bool)         = Store[b]               : &:r136_6, r136_5
#  137|     r137_1(glval<double>) = VariableAddress[x]     : 
#  137|     r137_2(double)        = Load[x]                : &:r137_1, ~m?
#  137|     r137_3(glval<double>) = VariableAddress[y]     : 
#  137|     r137_4(double)        = Load[y]                : &:r137_3, ~m?
#  137|     r137_5(bool)          = CompareNE              : r137_2, r137_4
#  137|     r137_6(glval<bool>)   = VariableAddress[b]     : 
#  137|     mu137_7(bool)         = Store[b]               : &:r137_6, r137_5
#  138|     r138_1(glval<double>) = VariableAddress[x]     : 
#  138|     r138_2(double)        = Load[x]                : &:r138_1, ~m?
#  138|     r138_3(glval<double>) = VariableAddress[y]     : 
#  138|     r138_4(double)        = Load[y]                : &:r138_3, ~m?
#  138|     r138_5(bool)          = CompareLT              : r138_2, r138_4
#  138|     r138_6(glval<bool>)   = VariableAddress[b]     : 
#  138|     mu138_7(bool)         = Store[b]               : &:r138_6, r138_5
#  139|     r139_1(glval<double>) = VariableAddress[x]     : 
#  139|     r139_2(double)        = Load[x]                : &:r139_1, ~m?
#  139|     r139_3(glval<double>) = VariableAddress[y]     : 
#  139|     r139_4(double)        = Load[y]                : &:r139_3, ~m?
#  139|     r139_5(bool)          = CompareGT              : r139_2, r139_4
#  139|     r139_6(glval<bool>)   = VariableAddress[b]     : 
#  139|     mu139_7(bool)         = Store[b]               : &:r139_6, r139_5
#  140|     r140_1(glval<double>) = VariableAddress[x]     : 
#  140|     r140_2(double)        = Load[x]                : &:r140_1, ~m?
#  140|     r140_3(glval<double>) = VariableAddress[y]     : 
#  140|     r140_4(double)        = Load[y]                : &:r140_3, ~m?
#  140|     r140_5(bool)          = CompareLE              : r140_2, r140_4
#  140|     r140_6(glval<bool>)   = VariableAddress[b]     : 
#  140|     mu140_7(bool)         = Store[b]               : &:r140_6, r140_5
#  141|     r141_1(glval<double>) = VariableAddress[x]     : 
#  141|     r141_2(double)        = Load[x]                : &:r141_1, ~m?
#  141|     r141_3(glval<double>) = VariableAddress[y]     : 
#  141|     r141_4(double)        = Load[y]                : &:r141_3, ~m?
#  141|     r141_5(bool)          = CompareGE              : r141_2, r141_4
#  141|     r141_6(glval<bool>)   = VariableAddress[b]     : 
#  141|     mu141_7(bool)         = Store[b]               : &:r141_6, r141_5
#  142|     v142_1(void)          = NoOp                   : 
#  133|     v133_8(void)          = ReturnVoid             : 
#  133|     v133_9(void)          = AliasedUse             : ~m?
#  133|     v133_10(void)         = ExitFunction           : 

#  144| void FloatCrement(float)
#  144|   Block 0
#  144|     v144_1(void)         = EnterFunction          : 
#  144|     mu144_2(unknown)     = AliasedDefinition      : 
#  144|     mu144_3(unknown)     = InitializeNonLocal     : 
#  144|     r144_4(glval<float>) = VariableAddress[x]     : 
#  144|     mu144_5(float)       = InitializeParameter[x] : &:r144_4
#  145|     r145_1(glval<float>) = VariableAddress[y]     : 
#  145|     mu145_2(float)       = Uninitialized[y]       : &:r145_1
#  147|     r147_1(glval<float>) = VariableAddress[x]     : 
#  147|     r147_2(float)        = Load[x]                : &:r147_1, ~m?
#  147|     r147_3(float)        = Constant[1.0]          : 
#  147|     r147_4(float)        = Add                    : r147_2, r147_3
#  147|     mu147_5(float)       = Store[x]               : &:r147_1, r147_4
#  147|     r147_6(float)        = Load[x]                : &:r147_1, ~m?
#  147|     r147_7(glval<float>) = VariableAddress[y]     : 
#  147|     mu147_8(float)       = Store[y]               : &:r147_7, r147_6
#  148|     r148_1(glval<float>) = VariableAddress[x]     : 
#  148|     r148_2(float)        = Load[x]                : &:r148_1, ~m?
#  148|     r148_3(float)        = Constant[1.0]          : 
#  148|     r148_4(float)        = Sub                    : r148_2, r148_3
#  148|     mu148_5(float)       = Store[x]               : &:r148_1, r148_4
#  148|     r148_6(float)        = Load[x]                : &:r148_1, ~m?
#  148|     r148_7(glval<float>) = VariableAddress[y]     : 
#  148|     mu148_8(float)       = Store[y]               : &:r148_7, r148_6
#  149|     r149_1(glval<float>) = VariableAddress[x]     : 
#  149|     r149_2(float)        = Load[x]                : &:r149_1, ~m?
#  149|     r149_3(float)        = Constant[1.0]          : 
#  149|     r149_4(float)        = Add                    : r149_2, r149_3
#  149|     mu149_5(float)       = Store[x]               : &:r149_1, r149_4
#  149|     r149_6(float)        = CopyValue              : r149_2
#  149|     r149_7(glval<float>) = VariableAddress[y]     : 
#  149|     mu149_8(float)       = Store[y]               : &:r149_7, r149_6
#  150|     r150_1(glval<float>) = VariableAddress[x]     : 
#  150|     r150_2(float)        = Load[x]                : &:r150_1, ~m?
#  150|     r150_3(float)        = Constant[1.0]          : 
#  150|     r150_4(float)        = Sub                    : r150_2, r150_3
#  150|     mu150_5(float)       = Store[x]               : &:r150_1, r150_4
#  150|     r150_6(float)        = CopyValue              : r150_2
#  150|     r150_7(glval<float>) = VariableAddress[y]     : 
#  150|     mu150_8(float)       = Store[y]               : &:r150_7, r150_6
#  151|     v151_1(void)         = NoOp                   : 
#  144|     v144_6(void)         = ReturnVoid             : 
#  144|     v144_7(void)         = AliasedUse             : ~m?
#  144|     v144_8(void)         = ExitFunction           : 

#  153| void PointerOps(int*, int)
#  153|   Block 0
#  153|     v153_1(void)         = EnterFunction            : 
#  153|     mu153_2(unknown)     = AliasedDefinition        : 
#  153|     mu153_3(unknown)     = InitializeNonLocal       : 
#  153|     r153_4(glval<int *>) = VariableAddress[p]       : 
#  153|     mu153_5(int *)       = InitializeParameter[p]   : &:r153_4
#  153|     r153_6(int *)        = Load[p]                  : &:r153_4, ~m?
#  153|     mu153_7(unknown)     = InitializeIndirection[p] : &:r153_6
#  153|     r153_8(glval<int>)   = VariableAddress[i]       : 
#  153|     mu153_9(int)         = InitializeParameter[i]   : &:r153_8
#  154|     r154_1(glval<int *>) = VariableAddress[q]       : 
#  154|     mu154_2(int *)       = Uninitialized[q]         : &:r154_1
#  155|     r155_1(glval<bool>)  = VariableAddress[b]       : 
#  155|     mu155_2(bool)        = Uninitialized[b]         : &:r155_1
#  157|     r157_1(glval<int *>) = VariableAddress[p]       : 
#  157|     r157_2(int *)        = Load[p]                  : &:r157_1, ~m?
#  157|     r157_3(glval<int>)   = VariableAddress[i]       : 
#  157|     r157_4(int)          = Load[i]                  : &:r157_3, ~m?
#  157|     r157_5(int *)        = PointerAdd[4]            : r157_2, r157_4
#  157|     r157_6(glval<int *>) = VariableAddress[q]       : 
#  157|     mu157_7(int *)       = Store[q]                 : &:r157_6, r157_5
#  158|     r158_1(glval<int>)   = VariableAddress[i]       : 
#  158|     r158_2(int)          = Load[i]                  : &:r158_1, ~m?
#  158|     r158_3(glval<int *>) = VariableAddress[p]       : 
#  158|     r158_4(int *)        = Load[p]                  : &:r158_3, ~m?
#  158|     r158_5(int *)        = PointerAdd[4]            : r158_4, r158_2
#  158|     r158_6(glval<int *>) = VariableAddress[q]       : 
#  158|     mu158_7(int *)       = Store[q]                 : &:r158_6, r158_5
#  159|     r159_1(glval<int *>) = VariableAddress[p]       : 
#  159|     r159_2(int *)        = Load[p]                  : &:r159_1, ~m?
#  159|     r159_3(glval<int>)   = VariableAddress[i]       : 
#  159|     r159_4(int)          = Load[i]                  : &:r159_3, ~m?
#  159|     r159_5(int *)        = PointerSub[4]            : r159_2, r159_4
#  159|     r159_6(glval<int *>) = VariableAddress[q]       : 
#  159|     mu159_7(int *)       = Store[q]                 : &:r159_6, r159_5
#  160|     r160_1(glval<int *>) = VariableAddress[p]       : 
#  160|     r160_2(int *)        = Load[p]                  : &:r160_1, ~m?
#  160|     r160_3(glval<int *>) = VariableAddress[q]       : 
#  160|     r160_4(int *)        = Load[q]                  : &:r160_3, ~m?
#  160|     r160_5(long)         = PointerDiff[4]           : r160_2, r160_4
#  160|     r160_6(int)          = Convert                  : r160_5
#  160|     r160_7(glval<int>)   = VariableAddress[i]       : 
#  160|     mu160_8(int)         = Store[i]                 : &:r160_7, r160_6
#  162|     r162_1(glval<int *>) = VariableAddress[p]       : 
#  162|     r162_2(int *)        = Load[p]                  : &:r162_1, ~m?
#  162|     r162_3(glval<int *>) = VariableAddress[q]       : 
#  162|     mu162_4(int *)       = Store[q]                 : &:r162_3, r162_2
#  164|     r164_1(glval<int>)   = VariableAddress[i]       : 
#  164|     r164_2(int)          = Load[i]                  : &:r164_1, ~m?
#  164|     r164_3(glval<int *>) = VariableAddress[q]       : 
#  164|     r164_4(int *)        = Load[q]                  : &:r164_3, ~m?
#  164|     r164_5(int *)        = PointerAdd[4]            : r164_4, r164_2
#  164|     mu164_6(int *)       = Store[q]                 : &:r164_3, r164_5
#  165|     r165_1(glval<int>)   = VariableAddress[i]       : 
#  165|     r165_2(int)          = Load[i]                  : &:r165_1, ~m?
#  165|     r165_3(glval<int *>) = VariableAddress[q]       : 
#  165|     r165_4(int *)        = Load[q]                  : &:r165_3, ~m?
#  165|     r165_5(int *)        = PointerSub[4]            : r165_4, r165_2
#  165|     mu165_6(int *)       = Store[q]                 : &:r165_3, r165_5
#  167|     r167_1(glval<int *>) = VariableAddress[p]       : 
#  167|     r167_2(int *)        = Load[p]                  : &:r167_1, ~m?
#  167|     r167_3(int *)        = Constant[0]              : 
#  167|     r167_4(bool)         = CompareNE                : r167_2, r167_3
#  167|     r167_5(glval<bool>)  = VariableAddress[b]       : 
#  167|     mu167_6(bool)        = Store[b]                 : &:r167_5, r167_4
#  168|     r168_1(glval<int *>) = VariableAddress[p]       : 
#  168|     r168_2(int *)        = Load[p]                  : &:r168_1, ~m?
#  168|     r168_3(int *)        = Constant[0]              : 
#  168|     r168_4(bool)         = CompareNE                : r168_2, r168_3
#  168|     r168_5(bool)         = LogicalNot               : r168_4
#  168|     r168_6(glval<bool>)  = VariableAddress[b]       : 
#  168|     mu168_7(bool)        = Store[b]                 : &:r168_6, r168_5
#  169|     v169_1(void)         = NoOp                     : 
#  153|     v153_10(void)        = ReturnIndirection[p]     : &:r153_6, ~m?
#  153|     v153_11(void)        = ReturnVoid               : 
#  153|     v153_12(void)        = AliasedUse               : ~m?
#  153|     v153_13(void)        = ExitFunction             : 

#  171| void ArrayAccess(int*, int)
#  171|   Block 0
#  171|     v171_1(void)           = EnterFunction            : 
#  171|     mu171_2(unknown)       = AliasedDefinition        : 
#  171|     mu171_3(unknown)       = InitializeNonLocal       : 
#  171|     r171_4(glval<int *>)   = VariableAddress[p]       : 
#  171|     mu171_5(int *)         = InitializeParameter[p]   : &:r171_4
#  171|     r171_6(int *)          = Load[p]                  : &:r171_4, ~m?
#  171|     mu171_7(unknown)       = InitializeIndirection[p] : &:r171_6
#  171|     r171_8(glval<int>)     = VariableAddress[i]       : 
#  171|     mu171_9(int)           = InitializeParameter[i]   : &:r171_8
#  172|     r172_1(glval<int>)     = VariableAddress[x]       : 
#  172|     mu172_2(int)           = Uninitialized[x]         : &:r172_1
#  174|     r174_1(glval<int *>)   = VariableAddress[p]       : 
#  174|     r174_2(int *)          = Load[p]                  : &:r174_1, ~m?
#  174|     r174_3(glval<int>)     = VariableAddress[i]       : 
#  174|     r174_4(int)            = Load[i]                  : &:r174_3, ~m?
#  174|     r174_5(glval<int>)     = PointerAdd[4]            : r174_2, r174_4
#  174|     r174_6(int)            = Load[?]                  : &:r174_5, ~m?
#  174|     r174_7(glval<int>)     = VariableAddress[x]       : 
#  174|     mu174_8(int)           = Store[x]                 : &:r174_7, r174_6
#  175|     r175_1(glval<int *>)   = VariableAddress[p]       : 
#  175|     r175_2(int *)          = Load[p]                  : &:r175_1, ~m?
#  175|     r175_3(glval<int>)     = VariableAddress[i]       : 
#  175|     r175_4(int)            = Load[i]                  : &:r175_3, ~m?
#  175|     r175_5(glval<int>)     = PointerAdd[4]            : r175_2, r175_4
#  175|     r175_6(int)            = Load[?]                  : &:r175_5, ~m?
#  175|     r175_7(glval<int>)     = VariableAddress[x]       : 
#  175|     mu175_8(int)           = Store[x]                 : &:r175_7, r175_6
#  177|     r177_1(glval<int>)     = VariableAddress[x]       : 
#  177|     r177_2(int)            = Load[x]                  : &:r177_1, ~m?
#  177|     r177_3(glval<int *>)   = VariableAddress[p]       : 
#  177|     r177_4(int *)          = Load[p]                  : &:r177_3, ~m?
#  177|     r177_5(glval<int>)     = VariableAddress[i]       : 
#  177|     r177_6(int)            = Load[i]                  : &:r177_5, ~m?
#  177|     r177_7(glval<int>)     = PointerAdd[4]            : r177_4, r177_6
#  177|     mu177_8(int)           = Store[?]                 : &:r177_7, r177_2
#  178|     r178_1(glval<int>)     = VariableAddress[x]       : 
#  178|     r178_2(int)            = Load[x]                  : &:r178_1, ~m?
#  178|     r178_3(glval<int *>)   = VariableAddress[p]       : 
#  178|     r178_4(int *)          = Load[p]                  : &:r178_3, ~m?
#  178|     r178_5(glval<int>)     = VariableAddress[i]       : 
#  178|     r178_6(int)            = Load[i]                  : &:r178_5, ~m?
#  178|     r178_7(glval<int>)     = PointerAdd[4]            : r178_4, r178_6
#  178|     mu178_8(int)           = Store[?]                 : &:r178_7, r178_2
#  180|     r180_1(glval<int[10]>) = VariableAddress[a]       : 
#  180|     mu180_2(int[10])       = Uninitialized[a]         : &:r180_1
#  181|     r181_1(glval<int[10]>) = VariableAddress[a]       : 
#  181|     r181_2(int *)          = Convert                  : r181_1
#  181|     r181_3(glval<int>)     = VariableAddress[i]       : 
#  181|     r181_4(int)            = Load[i]                  : &:r181_3, ~m?
#  181|     r181_5(glval<int>)     = PointerAdd[4]            : r181_2, r181_4
#  181|     r181_6(int)            = Load[?]                  : &:r181_5, ~m?
#  181|     r181_7(glval<int>)     = VariableAddress[x]       : 
#  181|     mu181_8(int)           = Store[x]                 : &:r181_7, r181_6
#  182|     r182_1(glval<int[10]>) = VariableAddress[a]       : 
#  182|     r182_2(int *)          = Convert                  : r182_1
#  182|     r182_3(glval<int>)     = VariableAddress[i]       : 
#  182|     r182_4(int)            = Load[i]                  : &:r182_3, ~m?
#  182|     r182_5(glval<int>)     = PointerAdd[4]            : r182_2, r182_4
#  182|     r182_6(int)            = Load[?]                  : &:r182_5, ~m?
#  182|     r182_7(glval<int>)     = VariableAddress[x]       : 
#  182|     mu182_8(int)           = Store[x]                 : &:r182_7, r182_6
#  183|     r183_1(glval<int>)     = VariableAddress[x]       : 
#  183|     r183_2(int)            = Load[x]                  : &:r183_1, ~m?
#  183|     r183_3(glval<int[10]>) = VariableAddress[a]       : 
#  183|     r183_4(int *)          = Convert                  : r183_3
#  183|     r183_5(glval<int>)     = VariableAddress[i]       : 
#  183|     r183_6(int)            = Load[i]                  : &:r183_5, ~m?
#  183|     r183_7(glval<int>)     = PointerAdd[4]            : r183_4, r183_6
#  183|     mu183_8(int)           = Store[?]                 : &:r183_7, r183_2
#  184|     r184_1(glval<int>)     = VariableAddress[x]       : 
#  184|     r184_2(int)            = Load[x]                  : &:r184_1, ~m?
#  184|     r184_3(glval<int[10]>) = VariableAddress[a]       : 
#  184|     r184_4(int *)          = Convert                  : r184_3
#  184|     r184_5(glval<int>)     = VariableAddress[i]       : 
#  184|     r184_6(int)            = Load[i]                  : &:r184_5, ~m?
#  184|     r184_7(glval<int>)     = PointerAdd[4]            : r184_4, r184_6
#  184|     mu184_8(int)           = Store[?]                 : &:r184_7, r184_2
#  185|     v185_1(void)           = NoOp                     : 
#  171|     v171_10(void)          = ReturnIndirection[p]     : &:r171_6, ~m?
#  171|     v171_11(void)          = ReturnVoid               : 
#  171|     v171_12(void)          = AliasedUse               : ~m?
#  171|     v171_13(void)          = ExitFunction             : 

#  187| void StringLiteral(int)
#  187|   Block 0
#  187|     v187_1(void)              = EnterFunction          : 
#  187|     mu187_2(unknown)          = AliasedDefinition      : 
#  187|     mu187_3(unknown)          = InitializeNonLocal     : 
#  187|     r187_4(glval<int>)        = VariableAddress[i]     : 
#  187|     mu187_5(int)              = InitializeParameter[i] : &:r187_4
#  188|     r188_1(glval<char>)       = VariableAddress[c]     : 
#  188|     r188_2(glval<char[4]>)    = StringConstant["Foo"]  : 
#  188|     r188_3(char *)            = Convert                : r188_2
#  188|     r188_4(glval<int>)        = VariableAddress[i]     : 
#  188|     r188_5(int)               = Load[i]                : &:r188_4, ~m?
#  188|     r188_6(glval<char>)       = PointerAdd[1]          : r188_3, r188_5
#  188|     r188_7(char)              = Load[?]                : &:r188_6, ~m?
#  188|     mu188_8(char)             = Store[c]               : &:r188_1, r188_7
#  189|     r189_1(glval<wchar_t *>)  = VariableAddress[pwc]   : 
#  189|     r189_2(glval<wchar_t[4]>) = StringConstant[L"Bar"] : 
#  189|     r189_3(wchar_t *)         = Convert                : r189_2
#  189|     r189_4(wchar_t *)         = Convert                : r189_3
#  189|     mu189_5(wchar_t *)        = Store[pwc]             : &:r189_1, r189_4
#  190|     r190_1(glval<wchar_t>)    = VariableAddress[wc]    : 
#  190|     r190_2(glval<wchar_t *>)  = VariableAddress[pwc]   : 
#  190|     r190_3(wchar_t *)         = Load[pwc]              : &:r190_2, ~m?
#  190|     r190_4(glval<int>)        = VariableAddress[i]     : 
#  190|     r190_5(int)               = Load[i]                : &:r190_4, ~m?
#  190|     r190_6(glval<wchar_t>)    = PointerAdd[4]          : r190_3, r190_5
#  190|     r190_7(wchar_t)           = Load[?]                : &:r190_6, ~m?
#  190|     mu190_8(wchar_t)          = Store[wc]              : &:r190_1, r190_7
#  191|     v191_1(void)              = NoOp                   : 
#  187|     v187_6(void)              = ReturnVoid             : 
#  187|     v187_7(void)              = AliasedUse             : ~m?
#  187|     v187_8(void)              = ExitFunction           : 

#  193| void PointerCompare(int*, int*)
#  193|   Block 0
#  193|     v193_1(void)         = EnterFunction            : 
#  193|     mu193_2(unknown)     = AliasedDefinition        : 
#  193|     mu193_3(unknown)     = InitializeNonLocal       : 
#  193|     r193_4(glval<int *>) = VariableAddress[p]       : 
#  193|     mu193_5(int *)       = InitializeParameter[p]   : &:r193_4
#  193|     r193_6(int *)        = Load[p]                  : &:r193_4, ~m?
#  193|     mu193_7(unknown)     = InitializeIndirection[p] : &:r193_6
#  193|     r193_8(glval<int *>) = VariableAddress[q]       : 
#  193|     mu193_9(int *)       = InitializeParameter[q]   : &:r193_8
#  193|     r193_10(int *)       = Load[q]                  : &:r193_8, ~m?
#  193|     mu193_11(unknown)    = InitializeIndirection[q] : &:r193_10
#  194|     r194_1(glval<bool>)  = VariableAddress[b]       : 
#  194|     mu194_2(bool)        = Uninitialized[b]         : &:r194_1
#  196|     r196_1(glval<int *>) = VariableAddress[p]       : 
#  196|     r196_2(int *)        = Load[p]                  : &:r196_1, ~m?
#  196|     r196_3(glval<int *>) = VariableAddress[q]       : 
#  196|     r196_4(int *)        = Load[q]                  : &:r196_3, ~m?
#  196|     r196_5(bool)         = CompareEQ                : r196_2, r196_4
#  196|     r196_6(glval<bool>)  = VariableAddress[b]       : 
#  196|     mu196_7(bool)        = Store[b]                 : &:r196_6, r196_5
#  197|     r197_1(glval<int *>) = VariableAddress[p]       : 
#  197|     r197_2(int *)        = Load[p]                  : &:r197_1, ~m?
#  197|     r197_3(glval<int *>) = VariableAddress[q]       : 
#  197|     r197_4(int *)        = Load[q]                  : &:r197_3, ~m?
#  197|     r197_5(bool)         = CompareNE                : r197_2, r197_4
#  197|     r197_6(glval<bool>)  = VariableAddress[b]       : 
#  197|     mu197_7(bool)        = Store[b]                 : &:r197_6, r197_5
#  198|     r198_1(glval<int *>) = VariableAddress[p]       : 
#  198|     r198_2(int *)        = Load[p]                  : &:r198_1, ~m?
#  198|     r198_3(glval<int *>) = VariableAddress[q]       : 
#  198|     r198_4(int *)        = Load[q]                  : &:r198_3, ~m?
#  198|     r198_5(bool)         = CompareLT                : r198_2, r198_4
#  198|     r198_6(glval<bool>)  = VariableAddress[b]       : 
#  198|     mu198_7(bool)        = Store[b]                 : &:r198_6, r198_5
#  199|     r199_1(glval<int *>) = VariableAddress[p]       : 
#  199|     r199_2(int *)        = Load[p]                  : &:r199_1, ~m?
#  199|     r199_3(glval<int *>) = VariableAddress[q]       : 
#  199|     r199_4(int *)        = Load[q]                  : &:r199_3, ~m?
#  199|     r199_5(bool)         = CompareGT                : r199_2, r199_4
#  199|     r199_6(glval<bool>)  = VariableAddress[b]       : 
#  199|     mu199_7(bool)        = Store[b]                 : &:r199_6, r199_5
#  200|     r200_1(glval<int *>) = VariableAddress[p]       : 
#  200|     r200_2(int *)        = Load[p]                  : &:r200_1, ~m?
#  200|     r200_3(glval<int *>) = VariableAddress[q]       : 
#  200|     r200_4(int *)        = Load[q]                  : &:r200_3, ~m?
#  200|     r200_5(bool)         = CompareLE                : r200_2, r200_4
#  200|     r200_6(glval<bool>)  = VariableAddress[b]       : 
#  200|     mu200_7(bool)        = Store[b]                 : &:r200_6, r200_5
#  201|     r201_1(glval<int *>) = VariableAddress[p]       : 
#  201|     r201_2(int *)        = Load[p]                  : &:r201_1, ~m?
#  201|     r201_3(glval<int *>) = VariableAddress[q]       : 
#  201|     r201_4(int *)        = Load[q]                  : &:r201_3, ~m?
#  201|     r201_5(bool)         = CompareGE                : r201_2, r201_4
#  201|     r201_6(glval<bool>)  = VariableAddress[b]       : 
#  201|     mu201_7(bool)        = Store[b]                 : &:r201_6, r201_5
#  202|     v202_1(void)         = NoOp                     : 
#  193|     v193_12(void)        = ReturnIndirection[p]     : &:r193_6, ~m?
#  193|     v193_13(void)        = ReturnIndirection[q]     : &:r193_10, ~m?
#  193|     v193_14(void)        = ReturnVoid               : 
#  193|     v193_15(void)        = AliasedUse               : ~m?
#  193|     v193_16(void)        = ExitFunction             : 

#  204| void PointerCrement(int*)
#  204|   Block 0
#  204|     v204_1(void)         = EnterFunction            : 
#  204|     mu204_2(unknown)     = AliasedDefinition        : 
#  204|     mu204_3(unknown)     = InitializeNonLocal       : 
#  204|     r204_4(glval<int *>) = VariableAddress[p]       : 
#  204|     mu204_5(int *)       = InitializeParameter[p]   : &:r204_4
#  204|     r204_6(int *)        = Load[p]                  : &:r204_4, ~m?
#  204|     mu204_7(unknown)     = InitializeIndirection[p] : &:r204_6
#  205|     r205_1(glval<int *>) = VariableAddress[q]       : 
#  205|     mu205_2(int *)       = Uninitialized[q]         : &:r205_1
#  207|     r207_1(glval<int *>) = VariableAddress[p]       : 
#  207|     r207_2(int *)        = Load[p]                  : &:r207_1, ~m?
#  207|     r207_3(int)          = Constant[1]              : 
#  207|     r207_4(int *)        = PointerAdd[4]            : r207_2, r207_3
#  207|     mu207_5(int *)       = Store[p]                 : &:r207_1, r207_4
#  207|     r207_6(int *)        = Load[p]                  : &:r207_1, ~m?
#  207|     r207_7(glval<int *>) = VariableAddress[q]       : 
#  207|     mu207_8(int *)       = Store[q]                 : &:r207_7, r207_6
#  208|     r208_1(glval<int *>) = VariableAddress[p]       : 
#  208|     r208_2(int *)        = Load[p]                  : &:r208_1, ~m?
#  208|     r208_3(int)          = Constant[1]              : 
#  208|     r208_4(int *)        = PointerSub[4]            : r208_2, r208_3
#  208|     mu208_5(int *)       = Store[p]                 : &:r208_1, r208_4
#  208|     r208_6(int *)        = Load[p]                  : &:r208_1, ~m?
#  208|     r208_7(glval<int *>) = VariableAddress[q]       : 
#  208|     mu208_8(int *)       = Store[q]                 : &:r208_7, r208_6
#  209|     r209_1(glval<int *>) = VariableAddress[p]       : 
#  209|     r209_2(int *)        = Load[p]                  : &:r209_1, ~m?
#  209|     r209_3(int)          = Constant[1]              : 
#  209|     r209_4(int *)        = PointerAdd[4]            : r209_2, r209_3
#  209|     mu209_5(int *)       = Store[p]                 : &:r209_1, r209_4
#  209|     r209_6(int *)        = CopyValue                : r209_2
#  209|     r209_7(glval<int *>) = VariableAddress[q]       : 
#  209|     mu209_8(int *)       = Store[q]                 : &:r209_7, r209_6
#  210|     r210_1(glval<int *>) = VariableAddress[p]       : 
#  210|     r210_2(int *)        = Load[p]                  : &:r210_1, ~m?
#  210|     r210_3(int)          = Constant[1]              : 
#  210|     r210_4(int *)        = PointerSub[4]            : r210_2, r210_3
#  210|     mu210_5(int *)       = Store[p]                 : &:r210_1, r210_4
#  210|     r210_6(int *)        = CopyValue                : r210_2
#  210|     r210_7(glval<int *>) = VariableAddress[q]       : 
#  210|     mu210_8(int *)       = Store[q]                 : &:r210_7, r210_6
#  211|     v211_1(void)         = NoOp                     : 
#  204|     v204_8(void)         = ReturnIndirection[p]     : &:r204_6, ~m?
#  204|     v204_9(void)         = ReturnVoid               : 
#  204|     v204_10(void)        = AliasedUse               : ~m?
#  204|     v204_11(void)        = ExitFunction             : 

#  213| void CompoundAssignment()
#  213|   Block 0
#  213|     v213_1(void)         = EnterFunction      : 
#  213|     mu213_2(unknown)     = AliasedDefinition  : 
#  213|     mu213_3(unknown)     = InitializeNonLocal : 
#  215|     r215_1(glval<int>)   = VariableAddress[x] : 
#  215|     r215_2(int)          = Constant[5]        : 
#  215|     mu215_3(int)         = Store[x]           : &:r215_1, r215_2
#  216|     r216_1(int)          = Constant[7]        : 
#  216|     r216_2(glval<int>)   = VariableAddress[x] : 
#  216|     r216_3(int)          = Load[x]            : &:r216_2, ~m?
#  216|     r216_4(int)          = Add                : r216_3, r216_1
#  216|     mu216_5(int)         = Store[x]           : &:r216_2, r216_4
#  219|     r219_1(glval<short>) = VariableAddress[y] : 
#  219|     r219_2(short)        = Constant[5]        : 
#  219|     mu219_3(short)       = Store[y]           : &:r219_1, r219_2
#  220|     r220_1(glval<int>)   = VariableAddress[x] : 
#  220|     r220_2(int)          = Load[x]            : &:r220_1, ~m?
#  220|     r220_3(glval<short>) = VariableAddress[y] : 
#  220|     r220_4(short)        = Load[y]            : &:r220_3, ~m?
#  220|     r220_5(int)          = Convert            : r220_4
#  220|     r220_6(int)          = Add                : r220_5, r220_2
#  220|     r220_7(short)        = Convert            : r220_6
#  220|     mu220_8(short)       = Store[y]           : &:r220_3, r220_7
#  223|     r223_1(int)          = Constant[1]        : 
#  223|     r223_2(glval<short>) = VariableAddress[y] : 
#  223|     r223_3(short)        = Load[y]            : &:r223_2, ~m?
#  223|     r223_4(short)        = ShiftLeft          : r223_3, r223_1
#  223|     mu223_5(short)       = Store[y]           : &:r223_2, r223_4
#  226|     r226_1(glval<long>)  = VariableAddress[z] : 
#  226|     r226_2(long)         = Constant[7]        : 
#  226|     mu226_3(long)        = Store[z]           : &:r226_1, r226_2
#  227|     r227_1(float)        = Constant[2.0]      : 
#  227|     r227_2(glval<long>)  = VariableAddress[z] : 
#  227|     r227_3(long)         = Load[z]            : &:r227_2, ~m?
#  227|     r227_4(float)        = Convert            : r227_3
#  227|     r227_5(float)        = Add                : r227_4, r227_1
#  227|     r227_6(long)         = Convert            : r227_5
#  227|     mu227_7(long)        = Store[z]           : &:r227_2, r227_6
#  228|     v228_1(void)         = NoOp               : 
#  213|     v213_4(void)         = ReturnVoid         : 
#  213|     v213_5(void)         = AliasedUse         : ~m?
#  213|     v213_6(void)         = ExitFunction       : 

#  230| void UninitializedVariables()
#  230|   Block 0
#  230|     v230_1(void)       = EnterFunction      : 
#  230|     mu230_2(unknown)   = AliasedDefinition  : 
#  230|     mu230_3(unknown)   = InitializeNonLocal : 
#  231|     r231_1(glval<int>) = VariableAddress[x] : 
#  231|     mu231_2(int)       = Uninitialized[x]   : &:r231_1
#  232|     r232_1(glval<int>) = VariableAddress[y] : 
#  232|     r232_2(glval<int>) = VariableAddress[x] : 
#  232|     r232_3(int)        = Load[x]            : &:r232_2, ~m?
#  232|     mu232_4(int)       = Store[y]           : &:r232_1, r232_3
#  233|     v233_1(void)       = NoOp               : 
#  230|     v230_4(void)       = ReturnVoid         : 
#  230|     v230_5(void)       = AliasedUse         : ~m?
#  230|     v230_6(void)       = ExitFunction       : 

#  235| int Parameters(int, int)
#  235|   Block 0
#  235|     v235_1(void)       = EnterFunction            : 
#  235|     mu235_2(unknown)   = AliasedDefinition        : 
#  235|     mu235_3(unknown)   = InitializeNonLocal       : 
#  235|     r235_4(glval<int>) = VariableAddress[x]       : 
#  235|     mu235_5(int)       = InitializeParameter[x]   : &:r235_4
#  235|     r235_6(glval<int>) = VariableAddress[y]       : 
#  235|     mu235_7(int)       = InitializeParameter[y]   : &:r235_6
#  236|     r236_1(glval<int>) = VariableAddress[#return] : 
#  236|     r236_2(glval<int>) = VariableAddress[x]       : 
#  236|     r236_3(int)        = Load[x]                  : &:r236_2, ~m?
#  236|     r236_4(glval<int>) = VariableAddress[y]       : 
#  236|     r236_5(int)        = Load[y]                  : &:r236_4, ~m?
#  236|     r236_6(int)        = Rem                      : r236_3, r236_5
#  236|     mu236_7(int)       = Store[#return]           : &:r236_1, r236_6
#  235|     r235_8(glval<int>) = VariableAddress[#return] : 
#  235|     v235_9(void)       = ReturnValue              : &:r235_8, ~m?
#  235|     v235_10(void)      = AliasedUse               : ~m?
#  235|     v235_11(void)      = ExitFunction             : 

#  239| void IfStatements(bool, int, int)
#  239|   Block 0
#  239|     v239_1(void)        = EnterFunction          : 
#  239|     mu239_2(unknown)    = AliasedDefinition      : 
#  239|     mu239_3(unknown)    = InitializeNonLocal     : 
#  239|     r239_4(glval<bool>) = VariableAddress[b]     : 
#  239|     mu239_5(bool)       = InitializeParameter[b] : &:r239_4
#  239|     r239_6(glval<int>)  = VariableAddress[x]     : 
#  239|     mu239_7(int)        = InitializeParameter[x] : &:r239_6
#  239|     r239_8(glval<int>)  = VariableAddress[y]     : 
#  239|     mu239_9(int)        = InitializeParameter[y] : &:r239_8
#  240|     r240_1(glval<bool>) = VariableAddress[b]     : 
#  240|     r240_2(bool)        = Load[b]                : &:r240_1, ~m?
#  240|     v240_3(void)        = ConditionalBranch      : r240_2
#-----|   False -> Block 2
#-----|   True -> Block 1

#  240|   Block 1
#  240|     v240_4(void) = NoOp : 
#-----|   Goto -> Block 2

#  243|   Block 2
#  243|     r243_1(glval<bool>) = VariableAddress[b] : 
#  243|     r243_2(bool)        = Load[b]            : &:r243_1, ~m?
#  243|     v243_3(void)        = ConditionalBranch  : r243_2
#-----|   False -> Block 4
#-----|   True -> Block 3

#  244|   Block 3
#  244|     r244_1(glval<int>) = VariableAddress[y] : 
#  244|     r244_2(int)        = Load[y]            : &:r244_1, ~m?
#  244|     r244_3(glval<int>) = VariableAddress[x] : 
#  244|     mu244_4(int)       = Store[x]           : &:r244_3, r244_2
#-----|   Goto -> Block 4

#  247|   Block 4
#  247|     r247_1(glval<int>) = VariableAddress[x] : 
#  247|     r247_2(int)        = Load[x]            : &:r247_1, ~m?
#  247|     r247_3(int)        = Constant[7]        : 
#  247|     r247_4(bool)       = CompareLT          : r247_2, r247_3
#  247|     v247_5(void)       = ConditionalBranch  : r247_4
#-----|   False -> Block 6
#-----|   True -> Block 5

#  248|   Block 5
#  248|     r248_1(int)        = Constant[2]        : 
#  248|     r248_2(glval<int>) = VariableAddress[x] : 
#  248|     mu248_3(int)       = Store[x]           : &:r248_2, r248_1
#-----|   Goto -> Block 7

#  250|   Block 6
#  250|     r250_1(int)        = Constant[7]        : 
#  250|     r250_2(glval<int>) = VariableAddress[x] : 
#  250|     mu250_3(int)       = Store[x]           : &:r250_2, r250_1
#-----|   Goto -> Block 7

#  251|   Block 7
#  251|     v251_1(void)  = NoOp         : 
#  239|     v239_10(void) = ReturnVoid   : 
#  239|     v239_11(void) = AliasedUse   : ~m?
#  239|     v239_12(void) = ExitFunction : 

#  253| void WhileStatements(int)
#  253|   Block 0
#  253|     v253_1(void)       = EnterFunction          : 
#  253|     mu253_2(unknown)   = AliasedDefinition      : 
#  253|     mu253_3(unknown)   = InitializeNonLocal     : 
#  253|     r253_4(glval<int>) = VariableAddress[n]     : 
#  253|     mu253_5(int)       = InitializeParameter[n] : &:r253_4
#-----|   Goto -> Block 1

#  254|   Block 1
#  254|     r254_1(glval<int>) = VariableAddress[n] : 
#  254|     r254_2(int)        = Load[n]            : &:r254_1, ~m?
#  254|     r254_3(int)        = Constant[0]        : 
#  254|     r254_4(bool)       = CompareGT          : r254_2, r254_3
#  254|     v254_5(void)       = ConditionalBranch  : r254_4
#-----|   False -> Block 3
#-----|   True -> Block 2

#  255|   Block 2
#  255|     r255_1(int)        = Constant[1]        : 
#  255|     r255_2(glval<int>) = VariableAddress[n] : 
#  255|     r255_3(int)        = Load[n]            : &:r255_2, ~m?
#  255|     r255_4(int)        = Sub                : r255_3, r255_1
#  255|     mu255_5(int)       = Store[n]           : &:r255_2, r255_4
#-----|   Goto (back edge) -> Block 1

#  257|   Block 3
#  257|     v257_1(void) = NoOp         : 
#  253|     v253_6(void) = ReturnVoid   : 
#  253|     v253_7(void) = AliasedUse   : ~m?
#  253|     v253_8(void) = ExitFunction : 

#  259| void DoStatements(int)
#  259|   Block 0
#  259|     v259_1(void)       = EnterFunction          : 
#  259|     mu259_2(unknown)   = AliasedDefinition      : 
#  259|     mu259_3(unknown)   = InitializeNonLocal     : 
#  259|     r259_4(glval<int>) = VariableAddress[n]     : 
#  259|     mu259_5(int)       = InitializeParameter[n] : &:r259_4
#-----|   Goto -> Block 1

#  261|   Block 1
#  261|     r261_1(int)        = Constant[1]        : 
#  261|     r261_2(glval<int>) = VariableAddress[n] : 
#  261|     r261_3(int)        = Load[n]            : &:r261_2, ~m?
#  261|     r261_4(int)        = Sub                : r261_3, r261_1
#  261|     mu261_5(int)       = Store[n]           : &:r261_2, r261_4
#  262|     r262_1(glval<int>) = VariableAddress[n] : 
#  262|     r262_2(int)        = Load[n]            : &:r262_1, ~m?
#  262|     r262_3(int)        = Constant[0]        : 
#  262|     r262_4(bool)       = CompareGT          : r262_2, r262_3
#  262|     v262_5(void)       = ConditionalBranch  : r262_4
#-----|   False -> Block 2
#-----|   True (back edge) -> Block 1

#  263|   Block 2
#  263|     v263_1(void) = NoOp         : 
#  259|     v259_6(void) = ReturnVoid   : 
#  259|     v259_7(void) = AliasedUse   : ~m?
#  259|     v259_8(void) = ExitFunction : 

#  265| void For_Empty()
#  265|   Block 0
#  265|     v265_1(void)       = EnterFunction      : 
#  265|     mu265_2(unknown)   = AliasedDefinition  : 
#  265|     mu265_3(unknown)   = InitializeNonLocal : 
#  266|     r266_1(glval<int>) = VariableAddress[j] : 
#  266|     mu266_2(int)       = Uninitialized[j]   : &:r266_1
#-----|   Goto -> Block 2

#  265|   Block 1
#  265|     v265_4(void) = ReturnVoid   : 
#  265|     v265_5(void) = AliasedUse   : ~m?
#  265|     v265_6(void) = ExitFunction : 

#  268|   Block 2
#  268|     v268_1(void) = NoOp : 
#-----|   Goto (back edge) -> Block 2

#  272| void For_Init()
#  272|   Block 0
#  272|     v272_1(void)       = EnterFunction      : 
#  272|     mu272_2(unknown)   = AliasedDefinition  : 
#  272|     mu272_3(unknown)   = InitializeNonLocal : 
#  273|     r273_1(glval<int>) = VariableAddress[i] : 
#  273|     r273_2(int)        = Constant[0]        : 
#  273|     mu273_3(int)       = Store[i]           : &:r273_1, r273_2
#-----|   Goto -> Block 2

#  272|   Block 1
#  272|     v272_4(void) = ReturnVoid   : 
#  272|     v272_5(void) = AliasedUse   : ~m?
#  272|     v272_6(void) = ExitFunction : 

#  274|   Block 2
#  274|     v274_1(void) = NoOp : 
#-----|   Goto (back edge) -> Block 2

#  278| void For_Condition()
#  278|   Block 0
#  278|     v278_1(void)       = EnterFunction      : 
#  278|     mu278_2(unknown)   = AliasedDefinition  : 
#  278|     mu278_3(unknown)   = InitializeNonLocal : 
#  279|     r279_1(glval<int>) = VariableAddress[i] : 
#  279|     r279_2(int)        = Constant[0]        : 
#  279|     mu279_3(int)       = Store[i]           : &:r279_1, r279_2
#-----|   Goto -> Block 1

#  280|   Block 1
#  280|     r280_1(glval<int>) = VariableAddress[i] : 
#  280|     r280_2(int)        = Load[i]            : &:r280_1, ~m?
#  280|     r280_3(int)        = Constant[10]       : 
#  280|     r280_4(bool)       = CompareLT          : r280_2, r280_3
#  280|     v280_5(void)       = ConditionalBranch  : r280_4
#-----|   False -> Block 3
#-----|   True -> Block 2

#  281|   Block 2
#  281|     v281_1(void) = NoOp : 
#-----|   Goto (back edge) -> Block 1

#  283|   Block 3
#  283|     v283_1(void) = NoOp         : 
#  278|     v278_4(void) = ReturnVoid   : 
#  278|     v278_5(void) = AliasedUse   : ~m?
#  278|     v278_6(void) = ExitFunction : 

#  285| void For_Update()
#  285|   Block 0
#  285|     v285_1(void)       = EnterFunction      : 
#  285|     mu285_2(unknown)   = AliasedDefinition  : 
#  285|     mu285_3(unknown)   = InitializeNonLocal : 
#  286|     r286_1(glval<int>) = VariableAddress[i] : 
#  286|     r286_2(int)        = Constant[0]        : 
#  286|     mu286_3(int)       = Store[i]           : &:r286_1, r286_2
#-----|   Goto -> Block 2

#  285|   Block 1
#  285|     v285_4(void) = ReturnVoid   : 
#  285|     v285_5(void) = AliasedUse   : ~m?
#  285|     v285_6(void) = ExitFunction : 

#  288|   Block 2
#  288|     v288_1(void)       = NoOp               : 
#  287|     r287_1(int)        = Constant[1]        : 
#  287|     r287_2(glval<int>) = VariableAddress[i] : 
#  287|     r287_3(int)        = Load[i]            : &:r287_2, ~m?
#  287|     r287_4(int)        = Add                : r287_3, r287_1
#  287|     mu287_5(int)       = Store[i]           : &:r287_2, r287_4
#-----|   Goto (back edge) -> Block 2

#  292| void For_InitCondition()
#  292|   Block 0
#  292|     v292_1(void)       = EnterFunction      : 
#  292|     mu292_2(unknown)   = AliasedDefinition  : 
#  292|     mu292_3(unknown)   = InitializeNonLocal : 
#  293|     r293_1(glval<int>) = VariableAddress[i] : 
#  293|     r293_2(int)        = Constant[0]        : 
#  293|     mu293_3(int)       = Store[i]           : &:r293_1, r293_2
#-----|   Goto -> Block 1

#  293|   Block 1
#  293|     r293_4(glval<int>) = VariableAddress[i] : 
#  293|     r293_5(int)        = Load[i]            : &:r293_4, ~m?
#  293|     r293_6(int)        = Constant[10]       : 
#  293|     r293_7(bool)       = CompareLT          : r293_5, r293_6
#  293|     v293_8(void)       = ConditionalBranch  : r293_7
#-----|   False -> Block 3
#-----|   True -> Block 2

#  294|   Block 2
#  294|     v294_1(void) = NoOp : 
#-----|   Goto (back edge) -> Block 1

#  296|   Block 3
#  296|     v296_1(void) = NoOp         : 
#  292|     v292_4(void) = ReturnVoid   : 
#  292|     v292_5(void) = AliasedUse   : ~m?
#  292|     v292_6(void) = ExitFunction : 

#  298| void For_InitUpdate()
#  298|   Block 0
#  298|     v298_1(void)       = EnterFunction      : 
#  298|     mu298_2(unknown)   = AliasedDefinition  : 
#  298|     mu298_3(unknown)   = InitializeNonLocal : 
#  299|     r299_1(glval<int>) = VariableAddress[i] : 
#  299|     r299_2(int)        = Constant[0]        : 
#  299|     mu299_3(int)       = Store[i]           : &:r299_1, r299_2
#-----|   Goto -> Block 2

#  298|   Block 1
#  298|     v298_4(void) = ReturnVoid   : 
#  298|     v298_5(void) = AliasedUse   : ~m?
#  298|     v298_6(void) = ExitFunction : 

#  300|   Block 2
#  300|     v300_1(void)       = NoOp               : 
#  299|     r299_4(int)        = Constant[1]        : 
#  299|     r299_5(glval<int>) = VariableAddress[i] : 
#  299|     r299_6(int)        = Load[i]            : &:r299_5, ~m?
#  299|     r299_7(int)        = Add                : r299_6, r299_4
#  299|     mu299_8(int)       = Store[i]           : &:r299_5, r299_7
#-----|   Goto (back edge) -> Block 2

#  304| void For_ConditionUpdate()
#  304|   Block 0
#  304|     v304_1(void)       = EnterFunction      : 
#  304|     mu304_2(unknown)   = AliasedDefinition  : 
#  304|     mu304_3(unknown)   = InitializeNonLocal : 
#  305|     r305_1(glval<int>) = VariableAddress[i] : 
#  305|     r305_2(int)        = Constant[0]        : 
#  305|     mu305_3(int)       = Store[i]           : &:r305_1, r305_2
#-----|   Goto -> Block 1

#  306|   Block 1
#  306|     r306_1(glval<int>) = VariableAddress[i] : 
#  306|     r306_2(int)        = Load[i]            : &:r306_1, ~m?
#  306|     r306_3(int)        = Constant[10]       : 
#  306|     r306_4(bool)       = CompareLT          : r306_2, r306_3
#  306|     v306_5(void)       = ConditionalBranch  : r306_4
#-----|   False -> Block 3
#-----|   True -> Block 2

#  307|   Block 2
#  307|     v307_1(void)       = NoOp               : 
#  306|     r306_6(int)        = Constant[1]        : 
#  306|     r306_7(glval<int>) = VariableAddress[i] : 
#  306|     r306_8(int)        = Load[i]            : &:r306_7, ~m?
#  306|     r306_9(int)        = Add                : r306_8, r306_6
#  306|     mu306_10(int)      = Store[i]           : &:r306_7, r306_9
#-----|   Goto (back edge) -> Block 1

#  309|   Block 3
#  309|     v309_1(void) = NoOp         : 
#  304|     v304_4(void) = ReturnVoid   : 
#  304|     v304_5(void) = AliasedUse   : ~m?
#  304|     v304_6(void) = ExitFunction : 

#  311| void For_InitConditionUpdate()
#  311|   Block 0
#  311|     v311_1(void)       = EnterFunction      : 
#  311|     mu311_2(unknown)   = AliasedDefinition  : 
#  311|     mu311_3(unknown)   = InitializeNonLocal : 
#  312|     r312_1(glval<int>) = VariableAddress[i] : 
#  312|     r312_2(int)        = Constant[0]        : 
#  312|     mu312_3(int)       = Store[i]           : &:r312_1, r312_2
#-----|   Goto -> Block 1

#  312|   Block 1
#  312|     r312_4(glval<int>) = VariableAddress[i] : 
#  312|     r312_5(int)        = Load[i]            : &:r312_4, ~m?
#  312|     r312_6(int)        = Constant[10]       : 
#  312|     r312_7(bool)       = CompareLT          : r312_5, r312_6
#  312|     v312_8(void)       = ConditionalBranch  : r312_7
#-----|   False -> Block 3
#-----|   True -> Block 2

#  313|   Block 2
#  313|     v313_1(void)        = NoOp               : 
#  312|     r312_9(int)         = Constant[1]        : 
#  312|     r312_10(glval<int>) = VariableAddress[i] : 
#  312|     r312_11(int)        = Load[i]            : &:r312_10, ~m?
#  312|     r312_12(int)        = Add                : r312_11, r312_9
#  312|     mu312_13(int)       = Store[i]           : &:r312_10, r312_12
#-----|   Goto (back edge) -> Block 1

#  315|   Block 3
#  315|     v315_1(void) = NoOp         : 
#  311|     v311_4(void) = ReturnVoid   : 
#  311|     v311_5(void) = AliasedUse   : ~m?
#  311|     v311_6(void) = ExitFunction : 

#  317| void For_Break()
#  317|   Block 0
#  317|     v317_1(void)       = EnterFunction      : 
#  317|     mu317_2(unknown)   = AliasedDefinition  : 
#  317|     mu317_3(unknown)   = InitializeNonLocal : 
#  318|     r318_1(glval<int>) = VariableAddress[i] : 
#  318|     r318_2(int)        = Constant[0]        : 
#  318|     mu318_3(int)       = Store[i]           : &:r318_1, r318_2
#-----|   Goto -> Block 1

#  318|   Block 1
#  318|     r318_4(glval<int>) = VariableAddress[i] : 
#  318|     r318_5(int)        = Load[i]            : &:r318_4, ~m?
#  318|     r318_6(int)        = Constant[10]       : 
#  318|     r318_7(bool)       = CompareLT          : r318_5, r318_6
#  318|     v318_8(void)       = ConditionalBranch  : r318_7
#-----|   False -> Block 5
#-----|   True -> Block 3

#  318|   Block 2
#  318|     r318_9(int)         = Constant[1]        : 
#  318|     r318_10(glval<int>) = VariableAddress[i] : 
#  318|     r318_11(int)        = Load[i]            : &:r318_10, ~m?
#  318|     r318_12(int)        = Add                : r318_11, r318_9
#  318|     mu318_13(int)       = Store[i]           : &:r318_10, r318_12
#-----|   Goto (back edge) -> Block 1

#  319|   Block 3
#  319|     r319_1(glval<int>) = VariableAddress[i] : 
#  319|     r319_2(int)        = Load[i]            : &:r319_1, ~m?
#  319|     r319_3(int)        = Constant[5]        : 
#  319|     r319_4(bool)       = CompareEQ          : r319_2, r319_3
#  319|     v319_5(void)       = ConditionalBranch  : r319_4
#-----|   False -> Block 2
#-----|   True -> Block 4

#  320|   Block 4
#  320|     v320_1(void) = NoOp : 
#-----|   Goto -> Block 5

#  322|   Block 5
#  322|     v322_1(void) = NoOp         : 
#  323|     v323_1(void) = NoOp         : 
#  317|     v317_4(void) = ReturnVoid   : 
#  317|     v317_5(void) = AliasedUse   : ~m?
#  317|     v317_6(void) = ExitFunction : 

#  325| void For_Continue_Update()
#  325|   Block 0
#  325|     v325_1(void)       = EnterFunction      : 
#  325|     mu325_2(unknown)   = AliasedDefinition  : 
#  325|     mu325_3(unknown)   = InitializeNonLocal : 
#  326|     r326_1(glval<int>) = VariableAddress[i] : 
#  326|     r326_2(int)        = Constant[0]        : 
#  326|     mu326_3(int)       = Store[i]           : &:r326_1, r326_2
#-----|   Goto -> Block 1

#  326|   Block 1
#  326|     r326_4(glval<int>) = VariableAddress[i] : 
#  326|     r326_5(int)        = Load[i]            : &:r326_4, ~m?
#  326|     r326_6(int)        = Constant[10]       : 
#  326|     r326_7(bool)       = CompareLT          : r326_5, r326_6
#  326|     v326_8(void)       = ConditionalBranch  : r326_7
#-----|   False -> Block 5
#-----|   True -> Block 2

#  327|   Block 2
#  327|     r327_1(glval<int>) = VariableAddress[i] : 
#  327|     r327_2(int)        = Load[i]            : &:r327_1, ~m?
#  327|     r327_3(int)        = Constant[5]        : 
#  327|     r327_4(bool)       = CompareEQ          : r327_2, r327_3
#  327|     v327_5(void)       = ConditionalBranch  : r327_4
#-----|   False -> Block 4
#-----|   True -> Block 3

#  328|   Block 3
#  328|     v328_1(void) = NoOp : 
#-----|   Goto -> Block 4

#  326|   Block 4
#  326|     v326_9(void)        = NoOp               : 
#  326|     r326_10(int)        = Constant[1]        : 
#  326|     r326_11(glval<int>) = VariableAddress[i] : 
#  326|     r326_12(int)        = Load[i]            : &:r326_11, ~m?
#  326|     r326_13(int)        = Add                : r326_12, r326_10
#  326|     mu326_14(int)       = Store[i]           : &:r326_11, r326_13
#-----|   Goto (back edge) -> Block 1

#  331|   Block 5
#  331|     v331_1(void) = NoOp         : 
#  325|     v325_4(void) = ReturnVoid   : 
#  325|     v325_5(void) = AliasedUse   : ~m?
#  325|     v325_6(void) = ExitFunction : 

#  333| void For_Continue_NoUpdate()
#  333|   Block 0
#  333|     v333_1(void)       = EnterFunction      : 
#  333|     mu333_2(unknown)   = AliasedDefinition  : 
#  333|     mu333_3(unknown)   = InitializeNonLocal : 
#  334|     r334_1(glval<int>) = VariableAddress[i] : 
#  334|     r334_2(int)        = Constant[0]        : 
#  334|     mu334_3(int)       = Store[i]           : &:r334_1, r334_2
#-----|   Goto -> Block 1

#  334|   Block 1
#  334|     r334_4(glval<int>) = VariableAddress[i] : 
#  334|     r334_5(int)        = Load[i]            : &:r334_4, ~m?
#  334|     r334_6(int)        = Constant[10]       : 
#  334|     r334_7(bool)       = CompareLT          : r334_5, r334_6
#  334|     v334_8(void)       = ConditionalBranch  : r334_7
#-----|   False -> Block 5
#-----|   True -> Block 2

#  335|   Block 2
#  335|     r335_1(glval<int>) = VariableAddress[i] : 
#  335|     r335_2(int)        = Load[i]            : &:r335_1, ~m?
#  335|     r335_3(int)        = Constant[5]        : 
#  335|     r335_4(bool)       = CompareEQ          : r335_2, r335_3
#  335|     v335_5(void)       = ConditionalBranch  : r335_4
#-----|   False -> Block 4
#-----|   True -> Block 3

#  336|   Block 3
#  336|     v336_1(void) = NoOp : 
#-----|   Goto -> Block 4

#  334|   Block 4
#  334|     v334_9(void) = NoOp : 
#-----|   Goto (back edge) -> Block 1

#  339|   Block 5
#  339|     v339_1(void) = NoOp         : 
#  333|     v333_4(void) = ReturnVoid   : 
#  333|     v333_5(void) = AliasedUse   : ~m?
#  333|     v333_6(void) = ExitFunction : 

#  341| int Dereference(int*)
#  341|   Block 0
#  341|     v341_1(void)         = EnterFunction            : 
#  341|     mu341_2(unknown)     = AliasedDefinition        : 
#  341|     mu341_3(unknown)     = InitializeNonLocal       : 
#  341|     r341_4(glval<int *>) = VariableAddress[p]       : 
#  341|     mu341_5(int *)       = InitializeParameter[p]   : &:r341_4
#  341|     r341_6(int *)        = Load[p]                  : &:r341_4, ~m?
#  341|     mu341_7(unknown)     = InitializeIndirection[p] : &:r341_6
#  342|     r342_1(int)          = Constant[1]              : 
#  342|     r342_2(glval<int *>) = VariableAddress[p]       : 
#  342|     r342_3(int *)        = Load[p]                  : &:r342_2, ~m?
#  342|     r342_4(glval<int>)   = CopyValue                : r342_3
#  342|     mu342_5(int)         = Store[?]                 : &:r342_4, r342_1
#  343|     r343_1(glval<int>)   = VariableAddress[#return] : 
#  343|     r343_2(glval<int *>) = VariableAddress[p]       : 
#  343|     r343_3(int *)        = Load[p]                  : &:r343_2, ~m?
#  343|     r343_4(int)          = Load[?]                  : &:r343_3, ~m?
#  343|     mu343_5(int)         = Store[#return]           : &:r343_1, r343_4
#  341|     v341_8(void)         = ReturnIndirection[p]     : &:r341_6, ~m?
#  341|     r341_9(glval<int>)   = VariableAddress[#return] : 
#  341|     v341_10(void)        = ReturnValue              : &:r341_9, ~m?
#  341|     v341_11(void)        = AliasedUse               : ~m?
#  341|     v341_12(void)        = ExitFunction             : 

#  348| int* AddressOf()
#  348|   Block 0
#  348|     v348_1(void)         = EnterFunction            : 
#  348|     mu348_2(unknown)     = AliasedDefinition        : 
#  348|     mu348_3(unknown)     = InitializeNonLocal       : 
#  349|     r349_1(glval<int *>) = VariableAddress[#return] : 
#  349|     r349_2(glval<int>)   = VariableAddress[g]       : 
#  349|     r349_3(int *)        = CopyValue                : r349_2
#  349|     mu349_4(int *)       = Store[#return]           : &:r349_1, r349_3
#  348|     r348_4(glval<int *>) = VariableAddress[#return] : 
#  348|     v348_5(void)         = ReturnValue              : &:r348_4, ~m?
#  348|     v348_6(void)         = AliasedUse               : ~m?
#  348|     v348_7(void)         = ExitFunction             : 

#  352| void Break(int)
#  352|   Block 0
#  352|     v352_1(void)       = EnterFunction          : 
#  352|     mu352_2(unknown)   = AliasedDefinition      : 
#  352|     mu352_3(unknown)   = InitializeNonLocal     : 
#  352|     r352_4(glval<int>) = VariableAddress[n]     : 
#  352|     mu352_5(int)       = InitializeParameter[n] : &:r352_4
#-----|   Goto -> Block 1

#  353|   Block 1
#  353|     r353_1(glval<int>) = VariableAddress[n] : 
#  353|     r353_2(int)        = Load[n]            : &:r353_1, ~m?
#  353|     r353_3(int)        = Constant[0]        : 
#  353|     r353_4(bool)       = CompareGT          : r353_2, r353_3
#  353|     v353_5(void)       = ConditionalBranch  : r353_4
#-----|   False -> Block 5
#-----|   True -> Block 2

#  354|   Block 2
#  354|     r354_1(glval<int>) = VariableAddress[n] : 
#  354|     r354_2(int)        = Load[n]            : &:r354_1, ~m?
#  354|     r354_3(int)        = Constant[1]        : 
#  354|     r354_4(bool)       = CompareEQ          : r354_2, r354_3
#  354|     v354_5(void)       = ConditionalBranch  : r354_4
#-----|   False -> Block 4
#-----|   True -> Block 3

#  355|   Block 3
#  355|     v355_1(void) = NoOp : 
#-----|   Goto -> Block 5

#  356|   Block 4
#  356|     r356_1(int)        = Constant[1]        : 
#  356|     r356_2(glval<int>) = VariableAddress[n] : 
#  356|     r356_3(int)        = Load[n]            : &:r356_2, ~m?
#  356|     r356_4(int)        = Sub                : r356_3, r356_1
#  356|     mu356_5(int)       = Store[n]           : &:r356_2, r356_4
#-----|   Goto (back edge) -> Block 1

#  357|   Block 5
#  357|     v357_1(void) = NoOp         : 
#  358|     v358_1(void) = NoOp         : 
#  352|     v352_6(void) = ReturnVoid   : 
#  352|     v352_7(void) = AliasedUse   : ~m?
#  352|     v352_8(void) = ExitFunction : 

#  360| void Continue(int)
#  360|   Block 0
#  360|     v360_1(void)       = EnterFunction          : 
#  360|     mu360_2(unknown)   = AliasedDefinition      : 
#  360|     mu360_3(unknown)   = InitializeNonLocal     : 
#  360|     r360_4(glval<int>) = VariableAddress[n]     : 
#  360|     mu360_5(int)       = InitializeParameter[n] : &:r360_4
#-----|   Goto -> Block 1

#  362|   Block 1
#  362|     r362_1(glval<int>) = VariableAddress[n] : 
#  362|     r362_2(int)        = Load[n]            : &:r362_1, ~m?
#  362|     r362_3(int)        = Constant[1]        : 
#  362|     r362_4(bool)       = CompareEQ          : r362_2, r362_3
#  362|     v362_5(void)       = ConditionalBranch  : r362_4
#-----|   False -> Block 3
#-----|   True -> Block 2

#  363|   Block 2
#  363|     v363_1(void) = NoOp : 
#-----|   Goto -> Block 4

#  365|   Block 3
#  365|     r365_1(int)        = Constant[1]        : 
#  365|     r365_2(glval<int>) = VariableAddress[n] : 
#  365|     r365_3(int)        = Load[n]            : &:r365_2, ~m?
#  365|     r365_4(int)        = Sub                : r365_3, r365_1
#  365|     mu365_5(int)       = Store[n]           : &:r365_2, r365_4
#-----|   Goto -> Block 4

#  361|   Block 4
#  361|     v361_1(void)       = NoOp               : 
#  366|     r366_1(glval<int>) = VariableAddress[n] : 
#  366|     r366_2(int)        = Load[n]            : &:r366_1, ~m?
#  366|     r366_3(int)        = Constant[0]        : 
#  366|     r366_4(bool)       = CompareGT          : r366_2, r366_3
#  366|     v366_5(void)       = ConditionalBranch  : r366_4
#-----|   False -> Block 5
#-----|   True (back edge) -> Block 1

#  367|   Block 5
#  367|     v367_1(void) = NoOp         : 
#  360|     v360_6(void) = ReturnVoid   : 
#  360|     v360_7(void) = AliasedUse   : ~m?
#  360|     v360_8(void) = ExitFunction : 

#  372| void Call()
#  372|   Block 0
#  372|     v372_1(void)           = EnterFunction             : 
#  372|     mu372_2(unknown)       = AliasedDefinition         : 
#  372|     mu372_3(unknown)       = InitializeNonLocal        : 
#  373|     r373_1(glval<unknown>) = FunctionAddress[VoidFunc] : 
#  373|     v373_2(void)           = Call[VoidFunc]            : func:r373_1
#  373|     mu373_3(unknown)       = ^CallSideEffect           : ~m?
#  374|     v374_1(void)           = NoOp                      : 
#  372|     v372_4(void)           = ReturnVoid                : 
#  372|     v372_5(void)           = AliasedUse                : ~m?
#  372|     v372_6(void)           = ExitFunction              : 

#  376| int CallAdd(int, int)
#  376|   Block 0
#  376|     v376_1(void)           = EnterFunction            : 
#  376|     mu376_2(unknown)       = AliasedDefinition        : 
#  376|     mu376_3(unknown)       = InitializeNonLocal       : 
#  376|     r376_4(glval<int>)     = VariableAddress[x]       : 
#  376|     mu376_5(int)           = InitializeParameter[x]   : &:r376_4
#  376|     r376_6(glval<int>)     = VariableAddress[y]       : 
#  376|     mu376_7(int)           = InitializeParameter[y]   : &:r376_6
#  377|     r377_1(glval<int>)     = VariableAddress[#return] : 
#  377|     r377_2(glval<unknown>) = FunctionAddress[Add]     : 
#  377|     r377_3(glval<int>)     = VariableAddress[x]       : 
#  377|     r377_4(int)            = Load[x]                  : &:r377_3, ~m?
#  377|     r377_5(glval<int>)     = VariableAddress[y]       : 
#  377|     r377_6(int)            = Load[y]                  : &:r377_5, ~m?
#  377|     r377_7(int)            = Call[Add]                : func:r377_2, 0:r377_4, 1:r377_6
#  377|     mu377_8(unknown)       = ^CallSideEffect          : ~m?
#  377|     mu377_9(int)           = Store[#return]           : &:r377_1, r377_7
#  376|     r376_8(glval<int>)     = VariableAddress[#return] : 
#  376|     v376_9(void)           = ReturnValue              : &:r376_8, ~m?
#  376|     v376_10(void)          = AliasedUse               : ~m?
#  376|     v376_11(void)          = ExitFunction             : 

#  380| int Comma(int, int)
#  380|   Block 0
#  380|     v380_1(void)           = EnterFunction             : 
#  380|     mu380_2(unknown)       = AliasedDefinition         : 
#  380|     mu380_3(unknown)       = InitializeNonLocal        : 
#  380|     r380_4(glval<int>)     = VariableAddress[x]        : 
#  380|     mu380_5(int)           = InitializeParameter[x]    : &:r380_4
#  380|     r380_6(glval<int>)     = VariableAddress[y]        : 
#  380|     mu380_7(int)           = InitializeParameter[y]    : &:r380_6
#  381|     r381_1(glval<int>)     = VariableAddress[#return]  : 
#  381|     r381_2(glval<unknown>) = FunctionAddress[VoidFunc] : 
#  381|     v381_3(void)           = Call[VoidFunc]            : func:r381_2
#  381|     mu381_4(unknown)       = ^CallSideEffect           : ~m?
#  381|     r381_5(glval<unknown>) = FunctionAddress[CallAdd]  : 
#  381|     r381_6(glval<int>)     = VariableAddress[x]        : 
#  381|     r381_7(int)            = Load[x]                   : &:r381_6, ~m?
#  381|     r381_8(glval<int>)     = VariableAddress[y]        : 
#  381|     r381_9(int)            = Load[y]                   : &:r381_8, ~m?
#  381|     r381_10(int)           = Call[CallAdd]             : func:r381_5, 0:r381_7, 1:r381_9
#  381|     mu381_11(unknown)      = ^CallSideEffect           : ~m?
#  381|     r381_12(int)           = CopyValue                 : r381_10
#  381|     mu381_13(int)          = Store[#return]            : &:r381_1, r381_12
#  380|     r380_8(glval<int>)     = VariableAddress[#return]  : 
#  380|     v380_9(void)           = ReturnValue               : &:r380_8, ~m?
#  380|     v380_10(void)          = AliasedUse                : ~m?
#  380|     v380_11(void)          = ExitFunction              : 

#  384| void Switch(int)
#  384|   Block 0
#  384|     v384_1(void)       = EnterFunction          : 
#  384|     mu384_2(unknown)   = AliasedDefinition      : 
#  384|     mu384_3(unknown)   = InitializeNonLocal     : 
#  384|     r384_4(glval<int>) = VariableAddress[x]     : 
#  384|     mu384_5(int)       = InitializeParameter[x] : &:r384_4
#  385|     r385_1(glval<int>) = VariableAddress[y]     : 
#  385|     mu385_2(int)       = Uninitialized[y]       : &:r385_1
#  386|     r386_1(glval<int>) = VariableAddress[x]     : 
#  386|     r386_2(int)        = Load[x]                : &:r386_1, ~m?
#  386|     v386_3(void)       = Switch                 : r386_2
#-----|   Case[-1] -> Block 2
#-----|   Case[1] -> Block 3
#-----|   Case[2] -> Block 4
#-----|   Case[3] -> Block 5
#-----|   Case[4] -> Block 6
#-----|   Default -> Block 7

#  387|   Block 1
#  387|     r387_1(int)        = Constant[1234]     : 
#  387|     r387_2(glval<int>) = VariableAddress[y] : 
#  387|     mu387_3(int)       = Store[y]           : &:r387_2, r387_1
#-----|   Goto -> Block 2

#  389|   Block 2
#  389|     v389_1(void)       = NoOp               : 
#  390|     r390_1(int)        = Constant[-1]       : 
#  390|     r390_2(glval<int>) = VariableAddress[y] : 
#  390|     mu390_3(int)       = Store[y]           : &:r390_2, r390_1
#  391|     v391_1(void)       = NoOp               : 
#-----|   Goto -> Block 9

#  393|   Block 3
#  393|     v393_1(void) = NoOp : 
#-----|   Goto -> Block 4

#  394|   Block 4
#  394|     v394_1(void)       = NoOp               : 
#  395|     r395_1(int)        = Constant[1]        : 
#  395|     r395_2(glval<int>) = VariableAddress[y] : 
#  395|     mu395_3(int)       = Store[y]           : &:r395_2, r395_1
#  396|     v396_1(void)       = NoOp               : 
#-----|   Goto -> Block 9

#  398|   Block 5
#  398|     v398_1(void)       = NoOp               : 
#  399|     r399_1(int)        = Constant[3]        : 
#  399|     r399_2(glval<int>) = VariableAddress[y] : 
#  399|     mu399_3(int)       = Store[y]           : &:r399_2, r399_1
#-----|   Goto -> Block 6

#  400|   Block 6
#  400|     v400_1(void)       = NoOp               : 
#  401|     r401_1(int)        = Constant[4]        : 
#  401|     r401_2(glval<int>) = VariableAddress[y] : 
#  401|     mu401_3(int)       = Store[y]           : &:r401_2, r401_1
#  402|     v402_1(void)       = NoOp               : 
#-----|   Goto -> Block 9

#  404|   Block 7
#  404|     v404_1(void)       = NoOp               : 
#  405|     r405_1(int)        = Constant[0]        : 
#  405|     r405_2(glval<int>) = VariableAddress[y] : 
#  405|     mu405_3(int)       = Store[y]           : &:r405_2, r405_1
#  406|     v406_1(void)       = NoOp               : 
#-----|   Goto -> Block 9

#  408|   Block 8
#  408|     r408_1(int)        = Constant[5678]     : 
#  408|     r408_2(glval<int>) = VariableAddress[y] : 
#  408|     mu408_3(int)       = Store[y]           : &:r408_2, r408_1
#-----|   Goto -> Block 9

#  409|   Block 9
#  409|     v409_1(void) = NoOp         : 
#  410|     v410_1(void) = NoOp         : 
#  384|     v384_6(void) = ReturnVoid   : 
#  384|     v384_7(void) = AliasedUse   : ~m?
#  384|     v384_8(void) = ExitFunction : 

#  422| Point ReturnStruct(Point)
#  422|   Block 0
#  422|     v422_1(void)         = EnterFunction            : 
#  422|     mu422_2(unknown)     = AliasedDefinition        : 
#  422|     mu422_3(unknown)     = InitializeNonLocal       : 
#  422|     r422_4(glval<Point>) = VariableAddress[pt]      : 
#  422|     mu422_5(Point)       = InitializeParameter[pt]  : &:r422_4
#  423|     r423_1(glval<Point>) = VariableAddress[#return] : 
#  423|     r423_2(glval<Point>) = VariableAddress[pt]      : 
#  423|     r423_3(Point)        = Load[pt]                 : &:r423_2, ~m?
#  423|     mu423_4(Point)       = Store[#return]           : &:r423_1, r423_3
#  422|     r422_6(glval<Point>) = VariableAddress[#return] : 
#  422|     v422_7(void)         = ReturnValue              : &:r422_6, ~m?
#  422|     v422_8(void)         = AliasedUse               : ~m?
#  422|     v422_9(void)         = ExitFunction             : 

#  426| void FieldAccess()
#  426|   Block 0
#  426|     v426_1(void)         = EnterFunction       : 
#  426|     mu426_2(unknown)     = AliasedDefinition   : 
#  426|     mu426_3(unknown)     = InitializeNonLocal  : 
#  427|     r427_1(glval<Point>) = VariableAddress[pt] : 
#  427|     mu427_2(Point)       = Uninitialized[pt]   : &:r427_1
#  428|     r428_1(int)          = Constant[5]         : 
#  428|     r428_2(glval<Point>) = VariableAddress[pt] : 
#  428|     r428_3(glval<int>)   = FieldAddress[x]     : r428_2
#  428|     mu428_4(int)         = Store[?]            : &:r428_3, r428_1
#  429|     r429_1(glval<Point>) = VariableAddress[pt] : 
#  429|     r429_2(glval<int>)   = FieldAddress[x]     : r429_1
#  429|     r429_3(int)          = Load[?]             : &:r429_2, ~m?
#  429|     r429_4(glval<Point>) = VariableAddress[pt] : 
#  429|     r429_5(glval<int>)   = FieldAddress[y]     : r429_4
#  429|     mu429_6(int)         = Store[?]            : &:r429_5, r429_3
#  430|     r430_1(glval<int *>) = VariableAddress[p]  : 
#  430|     r430_2(glval<Point>) = VariableAddress[pt] : 
#  430|     r430_3(glval<int>)   = FieldAddress[y]     : r430_2
#  430|     r430_4(int *)        = CopyValue           : r430_3
#  430|     mu430_5(int *)       = Store[p]            : &:r430_1, r430_4
#  431|     v431_1(void)         = NoOp                : 
#  426|     v426_4(void)         = ReturnVoid          : 
#  426|     v426_5(void)         = AliasedUse          : ~m?
#  426|     v426_6(void)         = ExitFunction        : 

#  433| void LogicalOr(bool, bool)
#  433|   Block 0
#  433|     v433_1(void)        = EnterFunction          : 
#  433|     mu433_2(unknown)    = AliasedDefinition      : 
#  433|     mu433_3(unknown)    = InitializeNonLocal     : 
#  433|     r433_4(glval<bool>) = VariableAddress[a]     : 
#  433|     mu433_5(bool)       = InitializeParameter[a] : &:r433_4
#  433|     r433_6(glval<bool>) = VariableAddress[b]     : 
#  433|     mu433_7(bool)       = InitializeParameter[b] : &:r433_6
#  434|     r434_1(glval<int>)  = VariableAddress[x]     : 
#  434|     mu434_2(int)        = Uninitialized[x]       : &:r434_1
#  435|     r435_1(glval<bool>) = VariableAddress[a]     : 
#  435|     r435_2(bool)        = Load[a]                : &:r435_1, ~m?
#  435|     v435_3(void)        = ConditionalBranch      : r435_2
#-----|   False -> Block 1
#-----|   True -> Block 2

#  435|   Block 1
#  435|     r435_4(glval<bool>) = VariableAddress[b] : 
#  435|     r435_5(bool)        = Load[b]            : &:r435_4, ~m?
#  435|     v435_6(void)        = ConditionalBranch  : r435_5
#-----|   False -> Block 3
#-----|   True -> Block 2

#  436|   Block 2
#  436|     r436_1(int)        = Constant[7]        : 
#  436|     r436_2(glval<int>) = VariableAddress[x] : 
#  436|     mu436_3(int)       = Store[x]           : &:r436_2, r436_1
#-----|   Goto -> Block 3

#  439|   Block 3
#  439|     r439_1(glval<bool>) = VariableAddress[a] : 
#  439|     r439_2(bool)        = Load[a]            : &:r439_1, ~m?
#  439|     v439_3(void)        = ConditionalBranch  : r439_2
#-----|   False -> Block 4
#-----|   True -> Block 5

#  439|   Block 4
#  439|     r439_4(glval<bool>) = VariableAddress[b] : 
#  439|     r439_5(bool)        = Load[b]            : &:r439_4, ~m?
#  439|     v439_6(void)        = ConditionalBranch  : r439_5
#-----|   False -> Block 6
#-----|   True -> Block 5

#  440|   Block 5
#  440|     r440_1(int)        = Constant[1]        : 
#  440|     r440_2(glval<int>) = VariableAddress[x] : 
#  440|     mu440_3(int)       = Store[x]           : &:r440_2, r440_1
#-----|   Goto -> Block 7

#  443|   Block 6
#  443|     r443_1(int)        = Constant[5]        : 
#  443|     r443_2(glval<int>) = VariableAddress[x] : 
#  443|     mu443_3(int)       = Store[x]           : &:r443_2, r443_1
#-----|   Goto -> Block 7

#  445|   Block 7
#  445|     v445_1(void)  = NoOp         : 
#  433|     v433_8(void)  = ReturnVoid   : 
#  433|     v433_9(void)  = AliasedUse   : ~m?
#  433|     v433_10(void) = ExitFunction : 

#  447| void LogicalAnd(bool, bool)
#  447|   Block 0
#  447|     v447_1(void)        = EnterFunction          : 
#  447|     mu447_2(unknown)    = AliasedDefinition      : 
#  447|     mu447_3(unknown)    = InitializeNonLocal     : 
#  447|     r447_4(glval<bool>) = VariableAddress[a]     : 
#  447|     mu447_5(bool)       = InitializeParameter[a] : &:r447_4
#  447|     r447_6(glval<bool>) = VariableAddress[b]     : 
#  447|     mu447_7(bool)       = InitializeParameter[b] : &:r447_6
#  448|     r448_1(glval<int>)  = VariableAddress[x]     : 
#  448|     mu448_2(int)        = Uninitialized[x]       : &:r448_1
#  449|     r449_1(glval<bool>) = VariableAddress[a]     : 
#  449|     r449_2(bool)        = Load[a]                : &:r449_1, ~m?
#  449|     v449_3(void)        = ConditionalBranch      : r449_2
#-----|   False -> Block 3
#-----|   True -> Block 1

#  449|   Block 1
#  449|     r449_4(glval<bool>) = VariableAddress[b] : 
#  449|     r449_5(bool)        = Load[b]            : &:r449_4, ~m?
#  449|     v449_6(void)        = ConditionalBranch  : r449_5
#-----|   False -> Block 3
#-----|   True -> Block 2

#  450|   Block 2
#  450|     r450_1(int)        = Constant[7]        : 
#  450|     r450_2(glval<int>) = VariableAddress[x] : 
#  450|     mu450_3(int)       = Store[x]           : &:r450_2, r450_1
#-----|   Goto -> Block 3

#  453|   Block 3
#  453|     r453_1(glval<bool>) = VariableAddress[a] : 
#  453|     r453_2(bool)        = Load[a]            : &:r453_1, ~m?
#  453|     v453_3(void)        = ConditionalBranch  : r453_2
#-----|   False -> Block 6
#-----|   True -> Block 4

#  453|   Block 4
#  453|     r453_4(glval<bool>) = VariableAddress[b] : 
#  453|     r453_5(bool)        = Load[b]            : &:r453_4, ~m?
#  453|     v453_6(void)        = ConditionalBranch  : r453_5
#-----|   False -> Block 6
#-----|   True -> Block 5

#  454|   Block 5
#  454|     r454_1(int)        = Constant[1]        : 
#  454|     r454_2(glval<int>) = VariableAddress[x] : 
#  454|     mu454_3(int)       = Store[x]           : &:r454_2, r454_1
#-----|   Goto -> Block 7

#  457|   Block 6
#  457|     r457_1(int)        = Constant[5]        : 
#  457|     r457_2(glval<int>) = VariableAddress[x] : 
#  457|     mu457_3(int)       = Store[x]           : &:r457_2, r457_1
#-----|   Goto -> Block 7

#  459|   Block 7
#  459|     v459_1(void)  = NoOp         : 
#  447|     v447_8(void)  = ReturnVoid   : 
#  447|     v447_9(void)  = AliasedUse   : ~m?
#  447|     v447_10(void) = ExitFunction : 

#  461| void LogicalNot(bool, bool)
#  461|   Block 0
#  461|     v461_1(void)        = EnterFunction          : 
#  461|     mu461_2(unknown)    = AliasedDefinition      : 
#  461|     mu461_3(unknown)    = InitializeNonLocal     : 
#  461|     r461_4(glval<bool>) = VariableAddress[a]     : 
#  461|     mu461_5(bool)       = InitializeParameter[a] : &:r461_4
#  461|     r461_6(glval<bool>) = VariableAddress[b]     : 
#  461|     mu461_7(bool)       = InitializeParameter[b] : &:r461_6
#  462|     r462_1(glval<int>)  = VariableAddress[x]     : 
#  462|     mu462_2(int)        = Uninitialized[x]       : &:r462_1
#  463|     r463_1(glval<bool>) = VariableAddress[a]     : 
#  463|     r463_2(bool)        = Load[a]                : &:r463_1, ~m?
#  463|     r463_3(bool)        = LogicalNot             : r463_2
#  463|     v463_4(void)        = ConditionalBranch      : r463_3
#-----|   False -> Block 5
#-----|   True -> Block 1

#  464|   Block 1
#  464|     r464_1(int)        = Constant[1]        : 
#  464|     r464_2(glval<int>) = VariableAddress[x] : 
#  464|     mu464_3(int)       = Store[x]           : &:r464_2, r464_1
#-----|   Goto -> Block 5

#  467|   Block 2
#  467|     r467_1(glval<bool>) = VariableAddress[#temp467:11] : 
#  467|     r467_2(bool)        = Constant[0]                  : 
#  467|     mu467_3(bool)       = Store[#temp467:11]           : &:r467_1, r467_2
#-----|   Goto -> Block 3

#  467|   Block 3
#  467|     r467_4(glval<bool>) = VariableAddress[#temp467:11] : 
#  467|     r467_5(bool)        = Load[#temp467:11]            : &:r467_4, ~m?
#  467|     r467_6(bool)        = LogicalNot                   : r467_5
#  467|     v467_7(void)        = ConditionalBranch            : r467_6
#-----|   False -> Block 8
#-----|   True -> Block 7

#  467|   Block 4
#  467|     r467_8(glval<bool>) = VariableAddress[#temp467:11] : 
#  467|     r467_9(bool)        = Constant[1]                  : 
#  467|     mu467_10(bool)      = Store[#temp467:11]           : &:r467_8, r467_9
#-----|   Goto -> Block 3

#  467|   Block 5
#  467|     r467_11(glval<bool>) = VariableAddress[a] : 
#  467|     r467_12(bool)        = Load[a]            : &:r467_11, ~m?
#  467|     v467_13(void)        = ConditionalBranch  : r467_12
#-----|   False -> Block 2
#-----|   True -> Block 6

#  467|   Block 6
#  467|     r467_14(glval<bool>) = VariableAddress[b] : 
#  467|     r467_15(bool)        = Load[b]            : &:r467_14, ~m?
#  467|     v467_16(void)        = ConditionalBranch  : r467_15
#-----|   False -> Block 2
#-----|   True -> Block 4

#  468|   Block 7
#  468|     r468_1(int)        = Constant[2]        : 
#  468|     r468_2(glval<int>) = VariableAddress[x] : 
#  468|     mu468_3(int)       = Store[x]           : &:r468_2, r468_1
#-----|   Goto -> Block 9

#  471|   Block 8
#  471|     r471_1(int)        = Constant[3]        : 
#  471|     r471_2(glval<int>) = VariableAddress[x] : 
#  471|     mu471_3(int)       = Store[x]           : &:r471_2, r471_1
#-----|   Goto -> Block 9

#  473|   Block 9
#  473|     v473_1(void)  = NoOp         : 
#  461|     v461_8(void)  = ReturnVoid   : 
#  461|     v461_9(void)  = AliasedUse   : ~m?
#  461|     v461_10(void) = ExitFunction : 

#  475| void ConditionValues(bool, bool)
#  475|   Block 0
#  475|     v475_1(void)        = EnterFunction          : 
#  475|     mu475_2(unknown)    = AliasedDefinition      : 
#  475|     mu475_3(unknown)    = InitializeNonLocal     : 
#  475|     r475_4(glval<bool>) = VariableAddress[a]     : 
#  475|     mu475_5(bool)       = InitializeParameter[a] : &:r475_4
#  475|     r475_6(glval<bool>) = VariableAddress[b]     : 
#  475|     mu475_7(bool)       = InitializeParameter[b] : &:r475_6
#  476|     r476_1(glval<bool>) = VariableAddress[x]     : 
#  476|     mu476_2(bool)       = Uninitialized[x]       : &:r476_1
#  477|     r477_1(glval<bool>) = VariableAddress[a]     : 
#  477|     r477_2(bool)        = Load[a]                : &:r477_1, ~m?
#  477|     v477_3(void)        = ConditionalBranch      : r477_2
#-----|   False -> Block 1
#-----|   True -> Block 4

#  477|   Block 1
#  477|     r477_4(glval<bool>) = VariableAddress[#temp477:9] : 
#  477|     r477_5(bool)        = Constant[0]                 : 
#  477|     mu477_6(bool)       = Store[#temp477:9]           : &:r477_4, r477_5
#-----|   Goto -> Block 2

#  477|   Block 2
#  477|     r477_7(glval<bool>) = VariableAddress[#temp477:9] : 
#  477|     r477_8(bool)        = Load[#temp477:9]            : &:r477_7, ~m?
#  477|     r477_9(glval<bool>) = VariableAddress[x]          : 
#  477|     mu477_10(bool)      = Store[x]                    : &:r477_9, r477_8
#  478|     r478_1(glval<bool>) = VariableAddress[a]          : 
#  478|     r478_2(bool)        = Load[a]                     : &:r478_1, ~m?
#  478|     v478_3(void)        = ConditionalBranch           : r478_2
#-----|   False -> Block 8
#-----|   True -> Block 7

#  477|   Block 3
#  477|     r477_11(glval<bool>) = VariableAddress[#temp477:9] : 
#  477|     r477_12(bool)        = Constant[1]                 : 
#  477|     mu477_13(bool)       = Store[#temp477:9]           : &:r477_11, r477_12
#-----|   Goto -> Block 2

#  477|   Block 4
#  477|     r477_14(glval<bool>) = VariableAddress[b] : 
#  477|     r477_15(bool)        = Load[b]            : &:r477_14, ~m?
#  477|     v477_16(void)        = ConditionalBranch  : r477_15
#-----|   False -> Block 1
#-----|   True -> Block 3

#  478|   Block 5
#  478|     r478_4(glval<bool>) = VariableAddress[#temp478:9] : 
#  478|     r478_5(bool)        = Constant[0]                 : 
#  478|     mu478_6(bool)       = Store[#temp478:9]           : &:r478_4, r478_5
#-----|   Goto -> Block 6

#  478|   Block 6
#  478|     r478_7(glval<bool>) = VariableAddress[#temp478:9] : 
#  478|     r478_8(bool)        = Load[#temp478:9]            : &:r478_7, ~m?
#  478|     r478_9(glval<bool>) = VariableAddress[x]          : 
#  478|     mu478_10(bool)      = Store[x]                    : &:r478_9, r478_8
#  479|     r479_1(glval<bool>) = VariableAddress[a]          : 
#  479|     r479_2(bool)        = Load[a]                     : &:r479_1, ~m?
#  479|     v479_3(void)        = ConditionalBranch           : r479_2
#-----|   False -> Block 12
#-----|   True -> Block 11

#  478|   Block 7
#  478|     r478_11(glval<bool>) = VariableAddress[#temp478:9] : 
#  478|     r478_12(bool)        = Constant[1]                 : 
#  478|     mu478_13(bool)       = Store[#temp478:9]           : &:r478_11, r478_12
#-----|   Goto -> Block 6

#  478|   Block 8
#  478|     r478_14(glval<bool>) = VariableAddress[b] : 
#  478|     r478_15(bool)        = Load[b]            : &:r478_14, ~m?
#  478|     v478_16(void)        = ConditionalBranch  : r478_15
#-----|   False -> Block 5
#-----|   True -> Block 7

#  479|   Block 9
#  479|     r479_4(glval<bool>) = VariableAddress[#temp479:11] : 
#  479|     r479_5(bool)        = Constant[0]                  : 
#  479|     mu479_6(bool)       = Store[#temp479:11]           : &:r479_4, r479_5
#-----|   Goto -> Block 10

#  479|   Block 10
#  479|     r479_7(glval<bool>)  = VariableAddress[#temp479:11] : 
#  479|     r479_8(bool)         = Load[#temp479:11]            : &:r479_7, ~m?
#  479|     r479_9(bool)         = LogicalNot                   : r479_8
#  479|     r479_10(glval<bool>) = VariableAddress[x]           : 
#  479|     mu479_11(bool)       = Store[x]                     : &:r479_10, r479_9
#  480|     v480_1(void)         = NoOp                         : 
#  475|     v475_8(void)         = ReturnVoid                   : 
#  475|     v475_9(void)         = AliasedUse                   : ~m?
#  475|     v475_10(void)        = ExitFunction                 : 

#  479|   Block 11
#  479|     r479_12(glval<bool>) = VariableAddress[#temp479:11] : 
#  479|     r479_13(bool)        = Constant[1]                  : 
#  479|     mu479_14(bool)       = Store[#temp479:11]           : &:r479_12, r479_13
#-----|   Goto -> Block 10

#  479|   Block 12
#  479|     r479_15(glval<bool>) = VariableAddress[b] : 
#  479|     r479_16(bool)        = Load[b]            : &:r479_15, ~m?
#  479|     v479_17(void)        = ConditionalBranch  : r479_16
#-----|   False -> Block 9
#-----|   True -> Block 11

#  482| void Conditional(bool, int, int)
#  482|   Block 0
#  482|     v482_1(void)        = EnterFunction          : 
#  482|     mu482_2(unknown)    = AliasedDefinition      : 
#  482|     mu482_3(unknown)    = InitializeNonLocal     : 
#  482|     r482_4(glval<bool>) = VariableAddress[a]     : 
#  482|     mu482_5(bool)       = InitializeParameter[a] : &:r482_4
#  482|     r482_6(glval<int>)  = VariableAddress[x]     : 
#  482|     mu482_7(int)        = InitializeParameter[x] : &:r482_6
#  482|     r482_8(glval<int>)  = VariableAddress[y]     : 
#  482|     mu482_9(int)        = InitializeParameter[y] : &:r482_8
#  483|     r483_1(glval<int>)  = VariableAddress[z]     : 
#  483|     r483_2(glval<bool>) = VariableAddress[a]     : 
#  483|     r483_3(bool)        = Load[a]                : &:r483_2, ~m?
#  483|     v483_4(void)        = ConditionalBranch      : r483_3
#-----|   False -> Block 3
#-----|   True -> Block 2

#  483|   Block 1
#  483|     r483_5(glval<int>) = VariableAddress[#temp483:13] : 
#  483|     r483_6(int)        = Load[#temp483:13]            : &:r483_5, ~m?
#  483|     mu483_7(int)       = Store[z]                     : &:r483_1, r483_6
#  484|     v484_1(void)       = NoOp                         : 
#  482|     v482_10(void)      = ReturnVoid                   : 
#  482|     v482_11(void)      = AliasedUse                   : ~m?
#  482|     v482_12(void)      = ExitFunction                 : 

#  483|   Block 2
#  483|     r483_8(glval<int>)  = VariableAddress[x]           : 
#  483|     r483_9(int)         = Load[x]                      : &:r483_8, ~m?
#  483|     r483_10(glval<int>) = VariableAddress[#temp483:13] : 
#  483|     mu483_11(int)       = Store[#temp483:13]           : &:r483_10, r483_9
#-----|   Goto -> Block 1

#  483|   Block 3
#  483|     r483_12(glval<int>) = VariableAddress[y]           : 
#  483|     r483_13(int)        = Load[y]                      : &:r483_12, ~m?
#  483|     r483_14(glval<int>) = VariableAddress[#temp483:13] : 
#  483|     mu483_15(int)       = Store[#temp483:13]           : &:r483_14, r483_13
#-----|   Goto -> Block 1

#  486| void Conditional_LValue(bool)
#  486|   Block 0
#  486|     v486_1(void)        = EnterFunction          : 
#  486|     mu486_2(unknown)    = AliasedDefinition      : 
#  486|     mu486_3(unknown)    = InitializeNonLocal     : 
#  486|     r486_4(glval<bool>) = VariableAddress[a]     : 
#  486|     mu486_5(bool)       = InitializeParameter[a] : &:r486_4
#  487|     r487_1(glval<int>)  = VariableAddress[x]     : 
#  487|     mu487_2(int)        = Uninitialized[x]       : &:r487_1
#  488|     r488_1(glval<int>)  = VariableAddress[y]     : 
#  488|     mu488_2(int)        = Uninitialized[y]       : &:r488_1
#  489|     r489_1(int)         = Constant[5]            : 
#  489|     r489_2(glval<bool>) = VariableAddress[a]     : 
#  489|     r489_3(bool)        = Load[a]                : &:r489_2, ~m?
#  489|     v489_4(void)        = ConditionalBranch      : r489_3
#-----|   False -> Block 3
#-----|   True -> Block 2

#  489|   Block 1
#  489|     r489_5(glval<unknown>) = VariableAddress[#temp489:6] : 
#  489|     r489_6(glval<int>)     = Load[#temp489:6]            : &:r489_5, ~m?
#  489|     mu489_7(int)           = Store[?]                    : &:r489_6, r489_1
#  490|     v490_1(void)           = NoOp                        : 
#  486|     v486_6(void)           = ReturnVoid                  : 
#  486|     v486_7(void)           = AliasedUse                  : ~m?
#  486|     v486_8(void)           = ExitFunction                : 

#  489|   Block 2
#  489|     r489_8(glval<int>)     = VariableAddress[x]          : 
#  489|     r489_9(glval<unknown>) = VariableAddress[#temp489:6] : 
#  489|     mu489_10(glval<int>)   = Store[#temp489:6]           : &:r489_9, r489_8
#-----|   Goto -> Block 1

#  489|   Block 3
#  489|     r489_11(glval<int>)     = VariableAddress[y]          : 
#  489|     r489_12(glval<unknown>) = VariableAddress[#temp489:6] : 
#  489|     mu489_13(glval<int>)    = Store[#temp489:6]           : &:r489_12, r489_11
#-----|   Goto -> Block 1

#  492| void Conditional_Void(bool)
#  492|   Block 0
#  492|     v492_1(void)        = EnterFunction          : 
#  492|     mu492_2(unknown)    = AliasedDefinition      : 
#  492|     mu492_3(unknown)    = InitializeNonLocal     : 
#  492|     r492_4(glval<bool>) = VariableAddress[a]     : 
#  492|     mu492_5(bool)       = InitializeParameter[a] : &:r492_4
#  493|     r493_1(glval<bool>) = VariableAddress[a]     : 
#  493|     r493_2(bool)        = Load[a]                : &:r493_1, ~m?
#  493|     v493_3(void)        = ConditionalBranch      : r493_2
#-----|   False -> Block 2
#-----|   True -> Block 1

#  493|   Block 1
#  493|     r493_4(glval<unknown>) = FunctionAddress[VoidFunc] : 
#  493|     v493_5(void)           = Call[VoidFunc]            : func:r493_4
#  493|     mu493_6(unknown)       = ^CallSideEffect           : ~m?
#-----|   Goto -> Block 3

#  493|   Block 2
#  493|     r493_7(glval<unknown>) = FunctionAddress[VoidFunc] : 
#  493|     v493_8(void)           = Call[VoidFunc]            : func:r493_7
#  493|     mu493_9(unknown)       = ^CallSideEffect           : ~m?
#-----|   Goto -> Block 3

#  494|   Block 3
#  494|     v494_1(void) = NoOp         : 
#  492|     v492_6(void) = ReturnVoid   : 
#  492|     v492_7(void) = AliasedUse   : ~m?
#  492|     v492_8(void) = ExitFunction : 

#  496| void Nullptr()
#  496|   Block 0
#  496|     v496_1(void)         = EnterFunction      : 
#  496|     mu496_2(unknown)     = AliasedDefinition  : 
#  496|     mu496_3(unknown)     = InitializeNonLocal : 
#  497|     r497_1(glval<int *>) = VariableAddress[p] : 
#  497|     r497_2(int *)        = Constant[0]        : 
#  497|     mu497_3(int *)       = Store[p]           : &:r497_1, r497_2
#  498|     r498_1(glval<int *>) = VariableAddress[q] : 
#  498|     r498_2(int *)        = Constant[0]        : 
#  498|     mu498_3(int *)       = Store[q]           : &:r498_1, r498_2
#  499|     r499_1(int *)        = Constant[0]        : 
#  499|     r499_2(glval<int *>) = VariableAddress[p] : 
#  499|     mu499_3(int *)       = Store[p]           : &:r499_2, r499_1
#  500|     r500_1(int *)        = Constant[0]        : 
#  500|     r500_2(glval<int *>) = VariableAddress[q] : 
#  500|     mu500_3(int *)       = Store[q]           : &:r500_2, r500_1
#  501|     v501_1(void)         = NoOp               : 
#  496|     v496_4(void)         = ReturnVoid         : 
#  496|     v496_5(void)         = AliasedUse         : ~m?
#  496|     v496_6(void)         = ExitFunction       : 

#  503| void InitList(int, float)
#  503|   Block 0
#  503|     v503_1(void)         = EnterFunction          : 
#  503|     mu503_2(unknown)     = AliasedDefinition      : 
#  503|     mu503_3(unknown)     = InitializeNonLocal     : 
#  503|     r503_4(glval<int>)   = VariableAddress[x]     : 
#  503|     mu503_5(int)         = InitializeParameter[x] : &:r503_4
#  503|     r503_6(glval<float>) = VariableAddress[f]     : 
#  503|     mu503_7(float)       = InitializeParameter[f] : &:r503_6
#  504|     r504_1(glval<Point>) = VariableAddress[pt1]   : 
#  504|     mu504_2(Point)       = Uninitialized[pt1]     : &:r504_1
#  504|     r504_3(glval<int>)   = FieldAddress[x]        : r504_1
#  504|     r504_4(glval<int>)   = VariableAddress[x]     : 
#  504|     r504_5(int)          = Load[x]                : &:r504_4, ~m?
#  504|     mu504_6(int)         = Store[?]               : &:r504_3, r504_5
#  504|     r504_7(glval<int>)   = FieldAddress[y]        : r504_1
#  504|     r504_8(glval<float>) = VariableAddress[f]     : 
#  504|     r504_9(float)        = Load[f]                : &:r504_8, ~m?
#  504|     r504_10(int)         = Convert                : r504_9
#  504|     mu504_11(int)        = Store[?]               : &:r504_7, r504_10
#  505|     r505_1(glval<Point>) = VariableAddress[pt2]   : 
#  505|     mu505_2(Point)       = Uninitialized[pt2]     : &:r505_1
#  505|     r505_3(glval<int>)   = FieldAddress[x]        : r505_1
#  505|     r505_4(glval<int>)   = VariableAddress[x]     : 
#  505|     r505_5(int)          = Load[x]                : &:r505_4, ~m?
#  505|     mu505_6(int)         = Store[?]               : &:r505_3, r505_5
#  505|     r505_7(glval<int>)   = FieldAddress[y]        : r505_1
#  505|     r505_8(int)          = Constant[0]            : 
#  505|     mu505_9(int)         = Store[?]               : &:r505_7, r505_8
#  506|     r506_1(glval<Point>) = VariableAddress[pt3]   : 
#  506|     mu506_2(Point)       = Uninitialized[pt3]     : &:r506_1
#  506|     r506_3(glval<int>)   = FieldAddress[x]        : r506_1
#  506|     r506_4(int)          = Constant[0]            : 
#  506|     mu506_5(int)         = Store[?]               : &:r506_3, r506_4
#  506|     r506_6(glval<int>)   = FieldAddress[y]        : r506_1
#  506|     r506_7(int)          = Constant[0]            : 
#  506|     mu506_8(int)         = Store[?]               : &:r506_6, r506_7
#  508|     r508_1(glval<int>)   = VariableAddress[x1]    : 
#  508|     r508_2(int)          = Constant[1]            : 
#  508|     mu508_3(int)         = Store[x1]              : &:r508_1, r508_2
#  509|     r509_1(glval<int>)   = VariableAddress[x2]    : 
#  509|     r509_2(int)          = Constant[0]            : 
#  509|     mu509_3(int)         = Store[x2]              : &:r509_1, r509_2
#  510|     v510_1(void)         = NoOp                   : 
#  503|     v503_8(void)         = ReturnVoid             : 
#  503|     v503_9(void)         = AliasedUse             : ~m?
#  503|     v503_10(void)        = ExitFunction           : 

#  512| void NestedInitList(int, float)
#  512|   Block 0
#  512|     v512_1(void)          = EnterFunction             : 
#  512|     mu512_2(unknown)      = AliasedDefinition         : 
#  512|     mu512_3(unknown)      = InitializeNonLocal        : 
#  512|     r512_4(glval<int>)    = VariableAddress[x]        : 
#  512|     mu512_5(int)          = InitializeParameter[x]    : &:r512_4
#  512|     r512_6(glval<float>)  = VariableAddress[f]        : 
#  512|     mu512_7(float)        = InitializeParameter[f]    : &:r512_6
#  513|     r513_1(glval<Rect>)   = VariableAddress[r1]       : 
#  513|     mu513_2(Rect)         = Uninitialized[r1]         : &:r513_1
#  513|     r513_3(glval<Point>)  = FieldAddress[topLeft]     : r513_1
#  513|     r513_4(Point)         = Constant[0]               : 
#  513|     mu513_5(Point)        = Store[?]                  : &:r513_3, r513_4
#  513|     r513_6(glval<Point>)  = FieldAddress[bottomRight] : r513_1
#  513|     r513_7(Point)         = Constant[0]               : 
#  513|     mu513_8(Point)        = Store[?]                  : &:r513_6, r513_7
#  514|     r514_1(glval<Rect>)   = VariableAddress[r2]       : 
#  514|     mu514_2(Rect)         = Uninitialized[r2]         : &:r514_1
#  514|     r514_3(glval<Point>)  = FieldAddress[topLeft]     : r514_1
#  514|     r514_4(glval<int>)    = FieldAddress[x]           : r514_3
#  514|     r514_5(glval<int>)    = VariableAddress[x]        : 
#  514|     r514_6(int)           = Load[x]                   : &:r514_5, ~m?
#  514|     mu514_7(int)          = Store[?]                  : &:r514_4, r514_6
#  514|     r514_8(glval<int>)    = FieldAddress[y]           : r514_3
#  514|     r514_9(glval<float>)  = VariableAddress[f]        : 
#  514|     r514_10(float)        = Load[f]                   : &:r514_9, ~m?
#  514|     r514_11(int)          = Convert                   : r514_10
#  514|     mu514_12(int)         = Store[?]                  : &:r514_8, r514_11
#  514|     r514_13(glval<Point>) = FieldAddress[bottomRight] : r514_1
#  514|     r514_14(Point)        = Constant[0]               : 
#  514|     mu514_15(Point)       = Store[?]                  : &:r514_13, r514_14
#  515|     r515_1(glval<Rect>)   = VariableAddress[r3]       : 
#  515|     mu515_2(Rect)         = Uninitialized[r3]         : &:r515_1
#  515|     r515_3(glval<Point>)  = FieldAddress[topLeft]     : r515_1
#  515|     r515_4(glval<int>)    = FieldAddress[x]           : r515_3
#  515|     r515_5(glval<int>)    = VariableAddress[x]        : 
#  515|     r515_6(int)           = Load[x]                   : &:r515_5, ~m?
#  515|     mu515_7(int)          = Store[?]                  : &:r515_4, r515_6
#  515|     r515_8(glval<int>)    = FieldAddress[y]           : r515_3
#  515|     r515_9(glval<float>)  = VariableAddress[f]        : 
#  515|     r515_10(float)        = Load[f]                   : &:r515_9, ~m?
#  515|     r515_11(int)          = Convert                   : r515_10
#  515|     mu515_12(int)         = Store[?]                  : &:r515_8, r515_11
#  515|     r515_13(glval<Point>) = FieldAddress[bottomRight] : r515_1
#  515|     r515_14(glval<int>)   = FieldAddress[x]           : r515_13
#  515|     r515_15(glval<int>)   = VariableAddress[x]        : 
#  515|     r515_16(int)          = Load[x]                   : &:r515_15, ~m?
#  515|     mu515_17(int)         = Store[?]                  : &:r515_14, r515_16
#  515|     r515_18(glval<int>)   = FieldAddress[y]           : r515_13
#  515|     r515_19(glval<float>) = VariableAddress[f]        : 
#  515|     r515_20(float)        = Load[f]                   : &:r515_19, ~m?
#  515|     r515_21(int)          = Convert                   : r515_20
#  515|     mu515_22(int)         = Store[?]                  : &:r515_18, r515_21
#  516|     r516_1(glval<Rect>)   = VariableAddress[r4]       : 
#  516|     mu516_2(Rect)         = Uninitialized[r4]         : &:r516_1
#  516|     r516_3(glval<Point>)  = FieldAddress[topLeft]     : r516_1
#  516|     r516_4(glval<int>)    = FieldAddress[x]           : r516_3
#  516|     r516_5(glval<int>)    = VariableAddress[x]        : 
#  516|     r516_6(int)           = Load[x]                   : &:r516_5, ~m?
#  516|     mu516_7(int)          = Store[?]                  : &:r516_4, r516_6
#  516|     r516_8(glval<int>)    = FieldAddress[y]           : r516_3
#  516|     r516_9(int)           = Constant[0]               : 
#  516|     mu516_10(int)         = Store[?]                  : &:r516_8, r516_9
#  516|     r516_11(glval<Point>) = FieldAddress[bottomRight] : r516_1
#  516|     r516_12(glval<int>)   = FieldAddress[x]           : r516_11
#  516|     r516_13(glval<int>)   = VariableAddress[x]        : 
#  516|     r516_14(int)          = Load[x]                   : &:r516_13, ~m?
#  516|     mu516_15(int)         = Store[?]                  : &:r516_12, r516_14
#  516|     r516_16(glval<int>)   = FieldAddress[y]           : r516_11
#  516|     r516_17(int)          = Constant[0]               : 
#  516|     mu516_18(int)         = Store[?]                  : &:r516_16, r516_17
#  517|     v517_1(void)          = NoOp                      : 
#  512|     v512_8(void)          = ReturnVoid                : 
#  512|     v512_9(void)          = AliasedUse                : ~m?
#  512|     v512_10(void)         = ExitFunction              : 

#  519| void ArrayInit(int, float)
#  519|   Block 0
#  519|     v519_1(void)          = EnterFunction          : 
#  519|     mu519_2(unknown)      = AliasedDefinition      : 
#  519|     mu519_3(unknown)      = InitializeNonLocal     : 
#  519|     r519_4(glval<int>)    = VariableAddress[x]     : 
#  519|     mu519_5(int)          = InitializeParameter[x] : &:r519_4
#  519|     r519_6(glval<float>)  = VariableAddress[f]     : 
#  519|     mu519_7(float)        = InitializeParameter[f] : &:r519_6
#  520|     r520_1(glval<int[3]>) = VariableAddress[a1]    : 
#  520|     mu520_2(int[3])       = Uninitialized[a1]      : &:r520_1
#  520|     r520_3(int)           = Constant[0]            : 
#  520|     r520_4(glval<int>)    = PointerAdd[4]          : r520_1, r520_3
#  520|     r520_5(unknown[12])   = Constant[0]            : 
#  520|     mu520_6(unknown[12])  = Store[?]               : &:r520_4, r520_5
#  521|     r521_1(glval<int[3]>) = VariableAddress[a2]    : 
#  521|     mu521_2(int[3])       = Uninitialized[a2]      : &:r521_1
#  521|     r521_3(int)           = Constant[0]            : 
#  521|     r521_4(glval<int>)    = PointerAdd[4]          : r521_1, r521_3
#  521|     r521_5(glval<int>)    = VariableAddress[x]     : 
#  521|     r521_6(int)           = Load[x]                : &:r521_5, ~m?
#  521|     mu521_7(int)          = Store[?]               : &:r521_4, r521_6
#  521|     r521_8(int)           = Constant[1]            : 
#  521|     r521_9(glval<int>)    = PointerAdd[4]          : r521_1, r521_8
#  521|     r521_10(glval<float>) = VariableAddress[f]     : 
#  521|     r521_11(float)        = Load[f]                : &:r521_10, ~m?
#  521|     r521_12(int)          = Convert                : r521_11
#  521|     mu521_13(int)         = Store[?]               : &:r521_9, r521_12
#  521|     r521_14(int)          = Constant[2]            : 
#  521|     r521_15(glval<int>)   = PointerAdd[4]          : r521_1, r521_14
#  521|     r521_16(int)          = Constant[0]            : 
#  521|     mu521_17(int)         = Store[?]               : &:r521_15, r521_16
#  522|     r522_1(glval<int[3]>) = VariableAddress[a3]    : 
#  522|     mu522_2(int[3])       = Uninitialized[a3]      : &:r522_1
#  522|     r522_3(int)           = Constant[0]            : 
#  522|     r522_4(glval<int>)    = PointerAdd[4]          : r522_1, r522_3
#  522|     r522_5(glval<int>)    = VariableAddress[x]     : 
#  522|     r522_6(int)           = Load[x]                : &:r522_5, ~m?
#  522|     mu522_7(int)          = Store[?]               : &:r522_4, r522_6
#  522|     r522_8(int)           = Constant[1]            : 
#  522|     r522_9(glval<int>)    = PointerAdd[4]          : r522_1, r522_8
#  522|     r522_10(unknown[8])   = Constant[0]            : 
#  522|     mu522_11(unknown[8])  = Store[?]               : &:r522_9, r522_10
#  523|     v523_1(void)          = NoOp                   : 
#  519|     v519_8(void)          = ReturnVoid             : 
#  519|     v519_9(void)          = AliasedUse             : ~m?
#  519|     v519_10(void)         = ExitFunction           : 

#  530| void UnionInit(int, float)
#  530|   Block 0
#  530|     v530_1(void)          = EnterFunction          : 
#  530|     mu530_2(unknown)      = AliasedDefinition      : 
#  530|     mu530_3(unknown)      = InitializeNonLocal     : 
#  530|     r530_4(glval<int>)    = VariableAddress[x]     : 
#  530|     mu530_5(int)          = InitializeParameter[x] : &:r530_4
#  530|     r530_6(glval<float>)  = VariableAddress[f]     : 
#  530|     mu530_7(float)        = InitializeParameter[f] : &:r530_6
#  531|     r531_1(glval<U>)      = VariableAddress[u1]    : 
#  531|     mu531_2(U)            = Uninitialized[u1]      : &:r531_1
#  531|     r531_3(glval<double>) = FieldAddress[d]        : r531_1
#  531|     r531_4(glval<float>)  = VariableAddress[f]     : 
#  531|     r531_5(float)         = Load[f]                : &:r531_4, ~m?
#  531|     r531_6(double)        = Convert                : r531_5
#  531|     mu531_7(double)       = Store[?]               : &:r531_3, r531_6
#  533|     v533_1(void)          = NoOp                   : 
#  530|     v530_8(void)          = ReturnVoid             : 
#  530|     v530_9(void)          = AliasedUse             : ~m?
#  530|     v530_10(void)         = ExitFunction           : 

#  535| void EarlyReturn(int, int)
#  535|   Block 0
#  535|     v535_1(void)       = EnterFunction          : 
#  535|     mu535_2(unknown)   = AliasedDefinition      : 
#  535|     mu535_3(unknown)   = InitializeNonLocal     : 
#  535|     r535_4(glval<int>) = VariableAddress[x]     : 
#  535|     mu535_5(int)       = InitializeParameter[x] : &:r535_4
#  535|     r535_6(glval<int>) = VariableAddress[y]     : 
#  535|     mu535_7(int)       = InitializeParameter[y] : &:r535_6
#  536|     r536_1(glval<int>) = VariableAddress[x]     : 
#  536|     r536_2(int)        = Load[x]                : &:r536_1, ~m?
#  536|     r536_3(glval<int>) = VariableAddress[y]     : 
#  536|     r536_4(int)        = Load[y]                : &:r536_3, ~m?
#  536|     r536_5(bool)       = CompareLT              : r536_2, r536_4
#  536|     v536_6(void)       = ConditionalBranch      : r536_5
#-----|   False -> Block 3
#-----|   True -> Block 2

#  535|   Block 1
#  535|     v535_8(void)  = ReturnVoid   : 
#  535|     v535_9(void)  = AliasedUse   : ~m?
#  535|     v535_10(void) = ExitFunction : 

#  537|   Block 2
#  537|     v537_1(void) = NoOp : 
#-----|   Goto -> Block 1

#  540|   Block 3
#  540|     r540_1(glval<int>) = VariableAddress[x] : 
#  540|     r540_2(int)        = Load[x]            : &:r540_1, ~m?
#  540|     r540_3(glval<int>) = VariableAddress[y] : 
#  540|     mu540_4(int)       = Store[y]           : &:r540_3, r540_2
#  541|     v541_1(void)       = NoOp               : 
#-----|   Goto -> Block 1

#  543| int EarlyReturnValue(int, int)
#  543|   Block 0
#  543|     v543_1(void)       = EnterFunction          : 
#  543|     mu543_2(unknown)   = AliasedDefinition      : 
#  543|     mu543_3(unknown)   = InitializeNonLocal     : 
#  543|     r543_4(glval<int>) = VariableAddress[x]     : 
#  543|     mu543_5(int)       = InitializeParameter[x] : &:r543_4
#  543|     r543_6(glval<int>) = VariableAddress[y]     : 
#  543|     mu543_7(int)       = InitializeParameter[y] : &:r543_6
#  544|     r544_1(glval<int>) = VariableAddress[x]     : 
#  544|     r544_2(int)        = Load[x]                : &:r544_1, ~m?
#  544|     r544_3(glval<int>) = VariableAddress[y]     : 
#  544|     r544_4(int)        = Load[y]                : &:r544_3, ~m?
#  544|     r544_5(bool)       = CompareLT              : r544_2, r544_4
#  544|     v544_6(void)       = ConditionalBranch      : r544_5
#-----|   False -> Block 3
#-----|   True -> Block 2

#  543|   Block 1
#  543|     r543_8(glval<int>) = VariableAddress[#return] : 
#  543|     v543_9(void)       = ReturnValue              : &:r543_8, ~m?
#  543|     v543_10(void)      = AliasedUse               : ~m?
#  543|     v543_11(void)      = ExitFunction             : 

#  545|   Block 2
#  545|     r545_1(glval<int>) = VariableAddress[#return] : 
#  545|     r545_2(glval<int>) = VariableAddress[x]       : 
#  545|     r545_3(int)        = Load[x]                  : &:r545_2, ~m?
#  545|     mu545_4(int)       = Store[#return]           : &:r545_1, r545_3
#-----|   Goto -> Block 1

#  548|   Block 3
#  548|     r548_1(glval<int>) = VariableAddress[#return] : 
#  548|     r548_2(glval<int>) = VariableAddress[x]       : 
#  548|     r548_3(int)        = Load[x]                  : &:r548_2, ~m?
#  548|     r548_4(glval<int>) = VariableAddress[y]       : 
#  548|     r548_5(int)        = Load[y]                  : &:r548_4, ~m?
#  548|     r548_6(int)        = Add                      : r548_3, r548_5
#  548|     mu548_7(int)       = Store[#return]           : &:r548_1, r548_6
#-----|   Goto -> Block 1

#  551| int CallViaFuncPtr(int(*)(int))
#  551|   Block 0
#  551|     v551_1(void)             = EnterFunction            : 
#  551|     mu551_2(unknown)         = AliasedDefinition        : 
#  551|     mu551_3(unknown)         = InitializeNonLocal       : 
#  551|     r551_4(glval<..(*)(..)>) = VariableAddress[pfn]     : 
#  551|     mu551_5(..(*)(..))       = InitializeParameter[pfn] : &:r551_4
#  552|     r552_1(glval<int>)       = VariableAddress[#return] : 
#  552|     r552_2(glval<..(*)(..)>) = VariableAddress[pfn]     : 
#  552|     r552_3(..(*)(..))        = Load[pfn]                : &:r552_2, ~m?
#  552|     r552_4(int)              = Constant[5]              : 
#  552|     r552_5(int)              = Call[?]                  : func:r552_3, 0:r552_4
#  552|     mu552_6(unknown)         = ^CallSideEffect          : ~m?
#  552|     mu552_7(int)             = Store[#return]           : &:r552_1, r552_5
#  551|     r551_6(glval<int>)       = VariableAddress[#return] : 
#  551|     v551_7(void)             = ReturnValue              : &:r551_6, ~m?
#  551|     v551_8(void)             = AliasedUse               : ~m?
#  551|     v551_9(void)             = ExitFunction             : 

#  560| int EnumSwitch(E)
#  560|   Block 0
#  560|     v560_1(void)     = EnterFunction          : 
#  560|     mu560_2(unknown) = AliasedDefinition      : 
#  560|     mu560_3(unknown) = InitializeNonLocal     : 
#  560|     r560_4(glval<E>) = VariableAddress[e]     : 
#  560|     mu560_5(E)       = InitializeParameter[e] : &:r560_4
#  561|     r561_1(glval<E>) = VariableAddress[e]     : 
#  561|     r561_2(E)        = Load[e]                : &:r561_1, ~m?
#  561|     r561_3(int)      = Convert                : r561_2
#  561|     v561_4(void)     = Switch                 : r561_3
#-----|   Case[0] -> Block 2
#-----|   Case[1] -> Block 3
#-----|   Default -> Block 4

#  560|   Block 1
#  560|     r560_6(glval<int>) = VariableAddress[#return] : 
#  560|     v560_7(void)       = ReturnValue              : &:r560_6, ~m?
#  560|     v560_8(void)       = AliasedUse               : ~m?
#  560|     v560_9(void)       = ExitFunction             : 

#  562|   Block 2
#  562|     v562_1(void)       = NoOp                     : 
#  563|     r563_1(glval<int>) = VariableAddress[#return] : 
#  563|     r563_2(int)        = Constant[0]              : 
#  563|     mu563_3(int)       = Store[#return]           : &:r563_1, r563_2
#-----|   Goto -> Block 1

#  564|   Block 3
#  564|     v564_1(void)       = NoOp                     : 
#  565|     r565_1(glval<int>) = VariableAddress[#return] : 
#  565|     r565_2(int)        = Constant[1]              : 
#  565|     mu565_3(int)       = Store[#return]           : &:r565_1, r565_2
#-----|   Goto -> Block 1

#  566|   Block 4
#  566|     v566_1(void)       = NoOp                     : 
#  567|     r567_1(glval<int>) = VariableAddress[#return] : 
#  567|     r567_2(int)        = Constant[-1]             : 
#  567|     mu567_3(int)       = Store[#return]           : &:r567_1, r567_2
#-----|   Goto -> Block 1

#  571| void InitArray()
#  571|   Block 0
#  571|     v571_1(void)            = EnterFunction            : 
#  571|     mu571_2(unknown)        = AliasedDefinition        : 
#  571|     mu571_3(unknown)        = InitializeNonLocal       : 
#  572|     r572_1(glval<char[32]>) = VariableAddress[a_pad]   : 
#  572|     r572_2(glval<char[32]>) = StringConstant[""]       : 
#  572|     r572_3(char[32])        = Load[?]                  : &:r572_2, ~m?
#  572|     mu572_4(char[32])       = Store[a_pad]             : &:r572_1, r572_3
#  573|     r573_1(glval<char[4]>)  = VariableAddress[a_nopad] : 
#  573|     r573_2(glval<char[4]>)  = StringConstant["foo"]    : 
#  573|     r573_3(char[4])         = Load[?]                  : &:r573_2, ~m?
#  573|     mu573_4(char[4])        = Store[a_nopad]           : &:r573_1, r573_3
#  574|     r574_1(glval<char[5]>)  = VariableAddress[a_infer] : 
#  574|     r574_2(glval<char[5]>)  = StringConstant["blah"]   : 
#  574|     r574_3(char[5])         = Load[?]                  : &:r574_2, ~m?
#  574|     mu574_4(char[5])        = Store[a_infer]           : &:r574_1, r574_3
#  575|     r575_1(glval<char[2]>)  = VariableAddress[b]       : 
#  575|     mu575_2(char[2])        = Uninitialized[b]         : &:r575_1
#  576|     r576_1(glval<char[2]>)  = VariableAddress[c]       : 
#  576|     mu576_2(char[2])        = Uninitialized[c]         : &:r576_1
#  576|     r576_3(int)             = Constant[0]              : 
#  576|     r576_4(glval<char>)     = PointerAdd[1]            : r576_1, r576_3
#  576|     r576_5(unknown[2])      = Constant[0]              : 
#  576|     mu576_6(unknown[2])     = Store[?]                 : &:r576_4, r576_5
#  577|     r577_1(glval<char[2]>)  = VariableAddress[d]       : 
#  577|     mu577_2(char[2])        = Uninitialized[d]         : &:r577_1
#  577|     r577_3(int)             = Constant[0]              : 
#  577|     r577_4(glval<char>)     = PointerAdd[1]            : r577_1, r577_3
#  577|     r577_5(char)            = Constant[0]              : 
#  577|     mu577_6(char)           = Store[?]                 : &:r577_4, r577_5
#  577|     r577_7(int)             = Constant[1]              : 
#  577|     r577_8(glval<char>)     = PointerAdd[1]            : r577_1, r577_7
#  577|     r577_9(char)            = Constant[0]              : 
#  577|     mu577_10(char)          = Store[?]                 : &:r577_8, r577_9
#  578|     r578_1(glval<char[2]>)  = VariableAddress[e]       : 
#  578|     mu578_2(char[2])        = Uninitialized[e]         : &:r578_1
#  578|     r578_3(int)             = Constant[0]              : 
#  578|     r578_4(glval<char>)     = PointerAdd[1]            : r578_1, r578_3
#  578|     r578_5(char)            = Constant[0]              : 
#  578|     mu578_6(char)           = Store[?]                 : &:r578_4, r578_5
#  578|     r578_7(int)             = Constant[1]              : 
#  578|     r578_8(glval<char>)     = PointerAdd[1]            : r578_1, r578_7
#  578|     r578_9(char)            = Constant[1]              : 
#  578|     mu578_10(char)          = Store[?]                 : &:r578_8, r578_9
#  579|     r579_1(glval<char[3]>)  = VariableAddress[f]       : 
#  579|     mu579_2(char[3])        = Uninitialized[f]         : &:r579_1
#  579|     r579_3(int)             = Constant[0]              : 
#  579|     r579_4(glval<char>)     = PointerAdd[1]            : r579_1, r579_3
#  579|     r579_5(char)            = Constant[0]              : 
#  579|     mu579_6(char)           = Store[?]                 : &:r579_4, r579_5
#  579|     r579_7(int)             = Constant[1]              : 
#  579|     r579_8(glval<char>)     = PointerAdd[1]            : r579_1, r579_7
#  579|     r579_9(unknown[2])      = Constant[0]              : 
#  579|     mu579_10(unknown[2])    = Store[?]                 : &:r579_8, r579_9
#  580|     v580_1(void)            = NoOp                     : 
#  571|     v571_4(void)            = ReturnVoid               : 
#  571|     v571_5(void)            = AliasedUse               : ~m?
#  571|     v571_6(void)            = ExitFunction             : 

#  584| void VarArgs()
#  584|   Block 0
#  584|     v584_1(void)           = EnterFunction                   : 
#  584|     mu584_2(unknown)       = AliasedDefinition               : 
#  584|     mu584_3(unknown)       = InitializeNonLocal              : 
#  585|     r585_1(glval<unknown>) = FunctionAddress[VarArgFunction] : 
#  585|     r585_2(glval<char[6]>) = StringConstant["%d %s"]         : 
#  585|     r585_3(char *)         = Convert                         : r585_2
#  585|     r585_4(int)            = Constant[1]                     : 
#  585|     r585_5(glval<char[7]>) = StringConstant["string"]        : 
#  585|     r585_6(char *)         = Convert                         : r585_5
#  585|     v585_7(void)           = Call[VarArgFunction]            : func:r585_1, 0:r585_3, 1:r585_4, 2:r585_6
#  585|     mu585_8(unknown)       = ^CallSideEffect                 : ~m?
#  585|     v585_9(void)           = ^BufferReadSideEffect[0]        : &:r585_3, ~m?
#  585|     v585_10(void)          = ^BufferReadSideEffect[2]        : &:r585_6, ~m?
#  585|     mu585_11(unknown)      = ^BufferMayWriteSideEffect[2]    : &:r585_6
#  586|     v586_1(void)           = NoOp                            : 
#  584|     v584_4(void)           = ReturnVoid                      : 
#  584|     v584_5(void)           = AliasedUse                      : ~m?
#  584|     v584_6(void)           = ExitFunction                    : 

#  590| void SetFuncPtr()
#  590|   Block 0
#  590|     v590_1(void)             = EnterFunction                  : 
#  590|     mu590_2(unknown)         = AliasedDefinition              : 
#  590|     mu590_3(unknown)         = InitializeNonLocal             : 
#  591|     r591_1(glval<..(*)(..)>) = VariableAddress[pfn]           : 
#  591|     r591_2(..(*)(..))        = FunctionAddress[FuncPtrTarget] : 
#  591|     mu591_3(..(*)(..))       = Store[pfn]                     : &:r591_1, r591_2
#  592|     r592_1(glval<..()(..)>)  = FunctionAddress[FuncPtrTarget] : 
#  592|     r592_2(..(*)(..))        = CopyValue                      : r592_1
#  592|     r592_3(glval<..(*)(..)>) = VariableAddress[pfn]           : 
#  592|     mu592_4(..(*)(..))       = Store[pfn]                     : &:r592_3, r592_2
#  593|     r593_1(..(*)(..))        = FunctionAddress[FuncPtrTarget] : 
#  593|     r593_2(..(*)(..))        = CopyValue                      : r593_1
#  593|     r593_3(glval<..(*)(..)>) = VariableAddress[pfn]           : 
#  593|     mu593_4(..(*)(..))       = Store[pfn]                     : &:r593_3, r593_2
#  594|     r594_1(glval<..()(..)>)  = FunctionAddress[FuncPtrTarget] : 
#  594|     r594_2(..(*)(..))        = CopyValue                      : r594_1
#  594|     r594_3(..(*)(..))        = CopyValue                      : r594_2
#  594|     r594_4(..(*)(..))        = CopyValue                      : r594_3
#  594|     r594_5(..(*)(..))        = CopyValue                      : r594_4
#  594|     r594_6(glval<..(*)(..)>) = VariableAddress[pfn]           : 
#  594|     mu594_7(..(*)(..))       = Store[pfn]                     : &:r594_6, r594_5
#  595|     v595_1(void)             = NoOp                           : 
#  590|     v590_4(void)             = ReturnVoid                     : 
#  590|     v590_5(void)             = AliasedUse                     : ~m?
#  590|     v590_6(void)             = ExitFunction                   : 

#  615| void DeclareObject()
#  615|   Block 0
#  615|     v615_1(void)            = EnterFunction                   : 
#  615|     mu615_2(unknown)        = AliasedDefinition               : 
#  615|     mu615_3(unknown)        = InitializeNonLocal              : 
#  616|     r616_1(glval<String>)   = VariableAddress[s1]             : 
#  616|     mu616_2(String)         = Uninitialized[s1]               : &:r616_1
#  616|     r616_3(glval<unknown>)  = FunctionAddress[String]         : 
#  616|     v616_4(void)            = Call[String]                    : func:r616_3, this:r616_1
#  616|     mu616_5(unknown)        = ^CallSideEffect                 : ~m?
#  616|     mu616_6(String)         = ^IndirectMayWriteSideEffect[-1] : &:r616_1
#  617|     r617_1(glval<String>)   = VariableAddress[s2]             : 
#  617|     mu617_2(String)         = Uninitialized[s2]               : &:r617_1
#  617|     r617_3(glval<unknown>)  = FunctionAddress[String]         : 
#  617|     r617_4(glval<char[6]>)  = StringConstant["hello"]         : 
#  617|     r617_5(char *)          = Convert                         : r617_4
#  617|     v617_6(void)            = Call[String]                    : func:r617_3, this:r617_1, 0:r617_5
#  617|     mu617_7(unknown)        = ^CallSideEffect                 : ~m?
#  617|     v617_8(void)            = ^BufferReadSideEffect[0]        : &:r617_5, ~m?
#  617|     mu617_9(String)         = ^IndirectMayWriteSideEffect[-1] : &:r617_1
#  618|     r618_1(glval<String>)   = VariableAddress[s3]             : 
#  618|     r618_2(glval<unknown>)  = FunctionAddress[ReturnObject]   : 
#  618|     r618_3(String)          = Call[ReturnObject]              : func:r618_2
#  618|     mu618_4(unknown)        = ^CallSideEffect                 : ~m?
#  618|     mu618_5(String)         = Store[s3]                       : &:r618_1, r618_3
#  619|     r619_1(glval<String>)   = VariableAddress[s4]             : 
#  619|     mu619_2(String)         = Uninitialized[s4]               : &:r619_1
#  619|     r619_3(glval<unknown>)  = FunctionAddress[String]         : 
#  619|     r619_4(glval<char[5]>)  = StringConstant["test"]          : 
#  619|     r619_5(char *)          = Convert                         : r619_4
#  619|     v619_6(void)            = Call[String]                    : func:r619_3, this:r619_1, 0:r619_5
#  619|     mu619_7(unknown)        = ^CallSideEffect                 : ~m?
#  619|     v619_8(void)            = ^BufferReadSideEffect[0]        : &:r619_5, ~m?
#  619|     mu619_9(String)         = ^IndirectMayWriteSideEffect[-1] : &:r619_1
#  620|     v620_1(void)            = NoOp                            : 
#  620|     r620_2(glval<String>)   = VariableAddress[s4]             : 
#  620|     r620_3(glval<unknown>)  = FunctionAddress[~String]        : 
#  620|     v620_4(void)            = Call[~String]                   : func:r620_3, this:r620_2
#  620|     mu620_5(unknown)        = ^CallSideEffect                 : ~m?
#  620|     v620_6(void)            = ^IndirectReadSideEffect[-1]     : &:r620_2, ~m?
#  620|     mu620_7(String)         = ^IndirectMayWriteSideEffect[-1] : &:r620_2
#  620|     r620_8(glval<String>)   = VariableAddress[s3]             : 
#  620|     r620_9(glval<unknown>)  = FunctionAddress[~String]        : 
#  620|     v620_10(void)           = Call[~String]                   : func:r620_9, this:r620_8
#  620|     mu620_11(unknown)       = ^CallSideEffect                 : ~m?
#  620|     v620_12(void)           = ^IndirectReadSideEffect[-1]     : &:r620_8, ~m?
#  620|     mu620_13(String)        = ^IndirectMayWriteSideEffect[-1] : &:r620_8
#  620|     r620_14(glval<String>)  = VariableAddress[s2]             : 
#  620|     r620_15(glval<unknown>) = FunctionAddress[~String]        : 
#  620|     v620_16(void)           = Call[~String]                   : func:r620_15, this:r620_14
#  620|     mu620_17(unknown)       = ^CallSideEffect                 : ~m?
#  620|     v620_18(void)           = ^IndirectReadSideEffect[-1]     : &:r620_14, ~m?
#  620|     mu620_19(String)        = ^IndirectMayWriteSideEffect[-1] : &:r620_14
#  620|     r620_20(glval<String>)  = VariableAddress[s1]             : 
#  620|     r620_21(glval<unknown>) = FunctionAddress[~String]        : 
#  620|     v620_22(void)           = Call[~String]                   : func:r620_21, this:r620_20
#  620|     mu620_23(unknown)       = ^CallSideEffect                 : ~m?
#  620|     v620_24(void)           = ^IndirectReadSideEffect[-1]     : &:r620_20, ~m?
#  620|     mu620_25(String)        = ^IndirectMayWriteSideEffect[-1] : &:r620_20
#  615|     v615_4(void)            = ReturnVoid                      : 
#  615|     v615_5(void)            = AliasedUse                      : ~m?
#  615|     v615_6(void)            = ExitFunction                    : 

#  622| void CallMethods(String&, String*, String)
#  622|   Block 0
#  622|     v622_1(void)            = EnterFunction               : 
#  622|     mu622_2(unknown)        = AliasedDefinition           : 
#  622|     mu622_3(unknown)        = InitializeNonLocal          : 
#  622|     r622_4(glval<String &>) = VariableAddress[r]          : 
#  622|     mu622_5(String &)       = InitializeParameter[r]      : &:r622_4
#  622|     r622_6(String &)        = Load[r]                     : &:r622_4, ~m?
#  622|     mu622_7(unknown)        = InitializeIndirection[r]    : &:r622_6
#  622|     r622_8(glval<String *>) = VariableAddress[p]          : 
#  622|     mu622_9(String *)       = InitializeParameter[p]      : &:r622_8
#  622|     r622_10(String *)       = Load[p]                     : &:r622_8, ~m?
#  622|     mu622_11(unknown)       = InitializeIndirection[p]    : &:r622_10
#  622|     r622_12(glval<String>)  = VariableAddress[s]          : 
#  622|     mu622_13(String)        = InitializeParameter[s]      : &:r622_12
#  623|     r623_1(glval<String &>) = VariableAddress[r]          : 
#  623|     r623_2(String &)        = Load[r]                     : &:r623_1, ~m?
#  623|     r623_3(glval<String>)   = CopyValue                   : r623_2
#  623|     r623_4(glval<String>)   = Convert                     : r623_3
#  623|     r623_5(glval<unknown>)  = FunctionAddress[c_str]      : 
#  623|     r623_6(char *)          = Call[c_str]                 : func:r623_5, this:r623_4
#  623|     mu623_7(unknown)        = ^CallSideEffect             : ~m?
#  623|     v623_8(void)            = ^IndirectReadSideEffect[-1] : &:r623_4, ~m?
#  624|     r624_1(glval<String *>) = VariableAddress[p]          : 
#  624|     r624_2(String *)        = Load[p]                     : &:r624_1, ~m?
#  624|     r624_3(String *)        = Convert                     : r624_2
#  624|     r624_4(glval<unknown>)  = FunctionAddress[c_str]      : 
#  624|     r624_5(char *)          = Call[c_str]                 : func:r624_4, this:r624_3
#  624|     mu624_6(unknown)        = ^CallSideEffect             : ~m?
#  624|     v624_7(void)            = ^IndirectReadSideEffect[-1] : &:r624_3, ~m?
#  625|     r625_1(glval<String>)   = VariableAddress[s]          : 
#  625|     r625_2(glval<String>)   = Convert                     : r625_1
#  625|     r625_3(glval<unknown>)  = FunctionAddress[c_str]      : 
#  625|     r625_4(char *)          = Call[c_str]                 : func:r625_3, this:r625_2
#  625|     mu625_5(unknown)        = ^CallSideEffect             : ~m?
#  625|     v625_6(void)            = ^IndirectReadSideEffect[-1] : &:r625_2, ~m?
#  626|     v626_1(void)            = NoOp                        : 
#  622|     v622_14(void)           = ReturnIndirection[r]        : &:r622_6, ~m?
#  622|     v622_15(void)           = ReturnIndirection[p]        : &:r622_10, ~m?
#  622|     v622_16(void)           = ReturnVoid                  : 
#  622|     v622_17(void)           = AliasedUse                  : ~m?
#  622|     v622_18(void)           = ExitFunction                : 

#  628| void C::~C()
#  628|   Block 0
#  628|     v628_1(void)            = EnterFunction                : 
#  628|     mu628_2(unknown)        = AliasedDefinition            : 
#  628|     mu628_3(unknown)        = InitializeNonLocal           : 
#  628|     r628_4(glval<unknown>)  = VariableAddress[#this]       : 
#  628|     mu628_5(glval<C>)       = InitializeParameter[#this]   : &:r628_4
#  628|     r628_6(glval<C>)        = Load[#this]                  : &:r628_4, ~m?
#  628|     mu628_7(C)              = InitializeIndirection[#this] : &:r628_6
#-----|     v0_1(void)              = NoOp                         : 
#  628|     r628_8(glval<String>)   = FieldAddress[m_f]            : mu628_5
#  628|     r628_9(glval<unknown>)  = FunctionAddress[~String]     : 
#  628|     v628_10(void)           = Call[~String]                : func:r628_9, this:r628_8
#  628|     mu628_11(unknown)       = ^CallSideEffect              : ~m?
#  628|     r628_12(glval<String>)  = FieldAddress[m_b]            : mu628_5
#  628|     r628_13(glval<unknown>) = FunctionAddress[~String]     : 
#  628|     v628_14(void)           = Call[~String]                : func:r628_13, this:r628_12
#  628|     mu628_15(unknown)       = ^CallSideEffect              : ~m?
#  628|     v628_16(void)           = ReturnIndirection[#this]     : &:r628_6, ~m?
#  628|     v628_17(void)           = ReturnVoid                   : 
#  628|     v628_18(void)           = AliasedUse                   : ~m?
#  628|     v628_19(void)           = ExitFunction                 : 

#  630| int C::StaticMemberFunction(int)
#  630|   Block 0
#  630|     v630_1(void)       = EnterFunction            : 
#  630|     mu630_2(unknown)   = AliasedDefinition        : 
#  630|     mu630_3(unknown)   = InitializeNonLocal       : 
#  630|     r630_4(glval<int>) = VariableAddress[x]       : 
#  630|     mu630_5(int)       = InitializeParameter[x]   : &:r630_4
#  631|     r631_1(glval<int>) = VariableAddress[#return] : 
#  631|     r631_2(glval<int>) = VariableAddress[x]       : 
#  631|     r631_3(int)        = Load[x]                  : &:r631_2, ~m?
#  631|     mu631_4(int)       = Store[#return]           : &:r631_1, r631_3
#  630|     r630_6(glval<int>) = VariableAddress[#return] : 
#  630|     v630_7(void)       = ReturnValue              : &:r630_6, ~m?
#  630|     v630_8(void)       = AliasedUse               : ~m?
#  630|     v630_9(void)       = ExitFunction             : 

#  634| int C::InstanceMemberFunction(int)
#  634|   Block 0
#  634|     v634_1(void)           = EnterFunction                : 
#  634|     mu634_2(unknown)       = AliasedDefinition            : 
#  634|     mu634_3(unknown)       = InitializeNonLocal           : 
#  634|     r634_4(glval<unknown>) = VariableAddress[#this]       : 
#  634|     mu634_5(glval<C>)      = InitializeParameter[#this]   : &:r634_4
#  634|     r634_6(glval<C>)       = Load[#this]                  : &:r634_4, ~m?
#  634|     mu634_7(C)             = InitializeIndirection[#this] : &:r634_6
#  634|     r634_8(glval<int>)     = VariableAddress[x]           : 
#  634|     mu634_9(int)           = InitializeParameter[x]       : &:r634_8
#  635|     r635_1(glval<int>)     = VariableAddress[#return]     : 
#  635|     r635_2(glval<int>)     = VariableAddress[x]           : 
#  635|     r635_3(int)            = Load[x]                      : &:r635_2, ~m?
#  635|     mu635_4(int)           = Store[#return]               : &:r635_1, r635_3
#  634|     v634_10(void)          = ReturnIndirection[#this]     : &:r634_6, ~m?
#  634|     r634_11(glval<int>)    = VariableAddress[#return]     : 
#  634|     v634_12(void)          = ReturnValue                  : &:r634_11, ~m?
#  634|     v634_13(void)          = AliasedUse                   : ~m?
#  634|     v634_14(void)          = ExitFunction                 : 

#  638| int C::VirtualMemberFunction(int)
#  638|   Block 0
#  638|     v638_1(void)           = EnterFunction                : 
#  638|     mu638_2(unknown)       = AliasedDefinition            : 
#  638|     mu638_3(unknown)       = InitializeNonLocal           : 
#  638|     r638_4(glval<unknown>) = VariableAddress[#this]       : 
#  638|     mu638_5(glval<C>)      = InitializeParameter[#this]   : &:r638_4
#  638|     r638_6(glval<C>)       = Load[#this]                  : &:r638_4, ~m?
#  638|     mu638_7(C)             = InitializeIndirection[#this] : &:r638_6
#  638|     r638_8(glval<int>)     = VariableAddress[x]           : 
#  638|     mu638_9(int)           = InitializeParameter[x]       : &:r638_8
#  639|     r639_1(glval<int>)     = VariableAddress[#return]     : 
#  639|     r639_2(glval<int>)     = VariableAddress[x]           : 
#  639|     r639_3(int)            = Load[x]                      : &:r639_2, ~m?
#  639|     mu639_4(int)           = Store[#return]               : &:r639_1, r639_3
#  638|     v638_10(void)          = ReturnIndirection[#this]     : &:r638_6, ~m?
#  638|     r638_11(glval<int>)    = VariableAddress[#return]     : 
#  638|     v638_12(void)          = ReturnValue                  : &:r638_11, ~m?
#  638|     v638_13(void)          = AliasedUse                   : ~m?
#  638|     v638_14(void)          = ExitFunction                 : 

#  642| void C::FieldAccess()
#  642|   Block 0
#  642|     v642_1(void)           = EnterFunction                : 
#  642|     mu642_2(unknown)       = AliasedDefinition            : 
#  642|     mu642_3(unknown)       = InitializeNonLocal           : 
#  642|     r642_4(glval<unknown>) = VariableAddress[#this]       : 
#  642|     mu642_5(glval<C>)      = InitializeParameter[#this]   : &:r642_4
#  642|     r642_6(glval<C>)       = Load[#this]                  : &:r642_4, ~m?
#  642|     mu642_7(C)             = InitializeIndirection[#this] : &:r642_6
#  643|     r643_1(int)            = Constant[0]                  : 
#  643|     r643_2(glval<unknown>) = VariableAddress[#this]       : 
#  643|     r643_3(C *)            = Load[#this]                  : &:r643_2, ~m?
#  643|     r643_4(glval<int>)     = FieldAddress[m_a]            : r643_3
#  643|     mu643_5(int)           = Store[?]                     : &:r643_4, r643_1
#  644|     r644_1(int)            = Constant[1]                  : 
#  644|     r644_2(glval<unknown>) = VariableAddress[#this]       : 
#  644|     r644_3(C *)            = Load[#this]                  : &:r644_2, ~m?
#  644|     r644_4(glval<C>)       = CopyValue                    : r644_3
#  644|     r644_5(glval<int>)     = FieldAddress[m_a]            : r644_4
#  644|     mu644_6(int)           = Store[?]                     : &:r644_5, r644_1
#  645|     r645_1(int)            = Constant[2]                  : 
#  645|     r645_2(glval<unknown>) = VariableAddress[#this]       : 
#  645|     r645_3(C *)            = Load[#this]                  : &:r645_2, ~m?
#  645|     r645_4(glval<int>)     = FieldAddress[m_a]            : r645_3
#  645|     mu645_5(int)           = Store[?]                     : &:r645_4, r645_1
#  646|     r646_1(glval<int>)     = VariableAddress[x]           : 
#  646|     mu646_2(int)           = Uninitialized[x]             : &:r646_1
#  647|     r647_1(glval<unknown>) = VariableAddress[#this]       : 
#  647|     r647_2(C *)            = Load[#this]                  : &:r647_1, ~m?
#  647|     r647_3(glval<int>)     = FieldAddress[m_a]            : r647_2
#  647|     r647_4(int)            = Load[?]                      : &:r647_3, ~m?
#  647|     r647_5(glval<int>)     = VariableAddress[x]           : 
#  647|     mu647_6(int)           = Store[x]                     : &:r647_5, r647_4
#  648|     r648_1(glval<unknown>) = VariableAddress[#this]       : 
#  648|     r648_2(C *)            = Load[#this]                  : &:r648_1, ~m?
#  648|     r648_3(glval<C>)       = CopyValue                    : r648_2
#  648|     r648_4(glval<int>)     = FieldAddress[m_a]            : r648_3
#  648|     r648_5(int)            = Load[?]                      : &:r648_4, ~m?
#  648|     r648_6(glval<int>)     = VariableAddress[x]           : 
#  648|     mu648_7(int)           = Store[x]                     : &:r648_6, r648_5
#  649|     r649_1(glval<unknown>) = VariableAddress[#this]       : 
#  649|     r649_2(C *)            = Load[#this]                  : &:r649_1, ~m?
#  649|     r649_3(glval<int>)     = FieldAddress[m_a]            : r649_2
#  649|     r649_4(int)            = Load[?]                      : &:r649_3, ~m?
#  649|     r649_5(glval<int>)     = VariableAddress[x]           : 
#  649|     mu649_6(int)           = Store[x]                     : &:r649_5, r649_4
#  650|     v650_1(void)           = NoOp                         : 
#  642|     v642_8(void)           = ReturnIndirection[#this]     : &:r642_6, ~m?
#  642|     v642_9(void)           = ReturnVoid                   : 
#  642|     v642_10(void)          = AliasedUse                   : ~m?
#  642|     v642_11(void)          = ExitFunction                 : 

#  652| void C::MethodCalls()
#  652|   Block 0
#  652|     v652_1(void)           = EnterFunction                           : 
#  652|     mu652_2(unknown)       = AliasedDefinition                       : 
#  652|     mu652_3(unknown)       = InitializeNonLocal                      : 
#  652|     r652_4(glval<unknown>) = VariableAddress[#this]                  : 
#  652|     mu652_5(glval<C>)      = InitializeParameter[#this]              : &:r652_4
#  652|     r652_6(glval<C>)       = Load[#this]                             : &:r652_4, ~m?
#  652|     mu652_7(C)             = InitializeIndirection[#this]            : &:r652_6
#  653|     r653_1(glval<unknown>) = VariableAddress[#this]                  : 
#  653|     r653_2(C *)            = Load[#this]                             : &:r653_1, ~m?
#  653|     r653_3(glval<unknown>) = FunctionAddress[InstanceMemberFunction] : 
#  653|     r653_4(int)            = Constant[0]                             : 
#  653|     r653_5(int)            = Call[InstanceMemberFunction]            : func:r653_3, this:r653_2, 0:r653_4
#  653|     mu653_6(unknown)       = ^CallSideEffect                         : ~m?
#  653|     v653_7(void)           = ^IndirectReadSideEffect[-1]             : &:r653_2, ~m?
#  653|     mu653_8(C)             = ^IndirectMayWriteSideEffect[-1]         : &:r653_2
#  654|     r654_1(glval<unknown>) = VariableAddress[#this]                  : 
#  654|     r654_2(C *)            = Load[#this]                             : &:r654_1, ~m?
#  654|     r654_3(glval<C>)       = CopyValue                               : r654_2
#  654|     r654_4(glval<unknown>) = FunctionAddress[InstanceMemberFunction] : 
#  654|     r654_5(int)            = Constant[1]                             : 
#  654|     r654_6(int)            = Call[InstanceMemberFunction]            : func:r654_4, this:r654_3, 0:r654_5
#  654|     mu654_7(unknown)       = ^CallSideEffect                         : ~m?
#  654|     v654_8(void)           = ^IndirectReadSideEffect[-1]             : &:r654_3, ~m?
#  654|     mu654_9(C)             = ^IndirectMayWriteSideEffect[-1]         : &:r654_3
#  655|     r655_1(glval<unknown>) = VariableAddress[#this]                  : 
#  655|     r655_2(C *)            = Load[#this]                             : &:r655_1, ~m?
#  655|     r655_3(glval<unknown>) = FunctionAddress[InstanceMemberFunction] : 
#  655|     r655_4(int)            = Constant[2]                             : 
#  655|     r655_5(int)            = Call[InstanceMemberFunction]            : func:r655_3, this:r655_2, 0:r655_4
#  655|     mu655_6(unknown)       = ^CallSideEffect                         : ~m?
#  655|     v655_7(void)           = ^IndirectReadSideEffect[-1]             : &:r655_2, ~m?
#  655|     mu655_8(C)             = ^IndirectMayWriteSideEffect[-1]         : &:r655_2
#  656|     v656_1(void)           = NoOp                                    : 
#  652|     v652_8(void)           = ReturnIndirection[#this]                : &:r652_6, ~m?
#  652|     v652_9(void)           = ReturnVoid                              : 
#  652|     v652_10(void)          = AliasedUse                              : ~m?
#  652|     v652_11(void)          = ExitFunction                            : 

#  658| void C::C()
#  658|   Block 0
#  658|     v658_1(void)           = EnterFunction                   : 
#  658|     mu658_2(unknown)       = AliasedDefinition               : 
#  658|     mu658_3(unknown)       = InitializeNonLocal              : 
#  658|     r658_4(glval<unknown>) = VariableAddress[#this]          : 
#  658|     mu658_5(glval<C>)      = InitializeParameter[#this]      : &:r658_4
#  658|     r658_6(glval<C>)       = Load[#this]                     : &:r658_4, ~m?
#  658|     mu658_7(C)             = InitializeIndirection[#this]    : &:r658_6
#  659|     r659_1(glval<int>)     = FieldAddress[m_a]               : mu658_5
#  659|     r659_2(int)            = Constant[1]                     : 
#  659|     mu659_3(int)           = Store[?]                        : &:r659_1, r659_2
#  663|     r663_1(glval<String>)  = FieldAddress[m_b]               : mu658_5
#  663|     r663_2(glval<unknown>) = FunctionAddress[String]         : 
#  663|     v663_3(void)           = Call[String]                    : func:r663_2, this:r663_1
#  663|     mu663_4(unknown)       = ^CallSideEffect                 : ~m?
#  663|     mu663_5(String)        = ^IndirectMayWriteSideEffect[-1] : &:r663_1
#  660|     r660_1(glval<char>)    = FieldAddress[m_c]               : mu658_5
#  660|     r660_2(char)           = Constant[3]                     : 
#  660|     mu660_3(char)          = Store[?]                        : &:r660_1, r660_2
#  661|     r661_1(glval<void *>)  = FieldAddress[m_e]               : mu658_5
#  661|     r661_2(void *)         = Constant[0]                     : 
#  661|     mu661_3(void *)        = Store[?]                        : &:r661_1, r661_2
#  662|     r662_1(glval<String>)  = FieldAddress[m_f]               : mu658_5
#  662|     r662_2(glval<unknown>) = FunctionAddress[String]         : 
#  662|     r662_3(glval<char[5]>) = StringConstant["test"]          : 
#  662|     r662_4(char *)         = Convert                         : r662_3
#  662|     v662_5(void)           = Call[String]                    : func:r662_2, this:r662_1, 0:r662_4
#  662|     mu662_6(unknown)       = ^CallSideEffect                 : ~m?
#  662|     v662_7(void)           = ^BufferReadSideEffect[0]        : &:r662_4, ~m?
#  662|     mu662_8(String)        = ^IndirectMayWriteSideEffect[-1] : &:r662_1
#  664|     v664_1(void)           = NoOp                            : 
#  658|     v658_8(void)           = ReturnIndirection[#this]        : &:r658_6, ~m?
#  658|     v658_9(void)           = ReturnVoid                      : 
#  658|     v658_10(void)          = AliasedUse                      : ~m?
#  658|     v658_11(void)          = ExitFunction                    : 

#  675| int DerefReference(int&)
#  675|   Block 0
#  675|     v675_1(void)         = EnterFunction            : 
#  675|     mu675_2(unknown)     = AliasedDefinition        : 
#  675|     mu675_3(unknown)     = InitializeNonLocal       : 
#  675|     r675_4(glval<int &>) = VariableAddress[r]       : 
#  675|     mu675_5(int &)       = InitializeParameter[r]   : &:r675_4
#  675|     r675_6(int &)        = Load[r]                  : &:r675_4, ~m?
#  675|     mu675_7(unknown)     = InitializeIndirection[r] : &:r675_6
#  676|     r676_1(glval<int>)   = VariableAddress[#return] : 
#  676|     r676_2(glval<int &>) = VariableAddress[r]       : 
#  676|     r676_3(int &)        = Load[r]                  : &:r676_2, ~m?
#  676|     r676_4(int)          = Load[?]                  : &:r676_3, ~m?
#  676|     mu676_5(int)         = Store[#return]           : &:r676_1, r676_4
#  675|     v675_8(void)         = ReturnIndirection[r]     : &:r675_6, ~m?
#  675|     r675_9(glval<int>)   = VariableAddress[#return] : 
#  675|     v675_10(void)        = ReturnValue              : &:r675_9, ~m?
#  675|     v675_11(void)        = AliasedUse               : ~m?
#  675|     v675_12(void)        = ExitFunction             : 

#  679| int& TakeReference()
#  679|   Block 0
#  679|     v679_1(void)         = EnterFunction            : 
#  679|     mu679_2(unknown)     = AliasedDefinition        : 
#  679|     mu679_3(unknown)     = InitializeNonLocal       : 
#  680|     r680_1(glval<int &>) = VariableAddress[#return] : 
#  680|     r680_2(glval<int>)   = VariableAddress[g]       : 
#  680|     r680_3(int &)        = CopyValue                : r680_2
#  680|     mu680_4(int &)       = Store[#return]           : &:r680_1, r680_3
#  679|     r679_4(glval<int &>) = VariableAddress[#return] : 
#  679|     v679_5(void)         = ReturnValue              : &:r679_4, ~m?
#  679|     v679_6(void)         = AliasedUse               : ~m?
#  679|     v679_7(void)         = ExitFunction             : 

#  685| void InitReference(int)
#  685|   Block 0
#  685|     v685_1(void)            = EnterFunction                    : 
#  685|     mu685_2(unknown)        = AliasedDefinition                : 
#  685|     mu685_3(unknown)        = InitializeNonLocal               : 
#  685|     r685_4(glval<int>)      = VariableAddress[x]               : 
#  685|     mu685_5(int)            = InitializeParameter[x]           : &:r685_4
#  686|     r686_1(glval<int &>)    = VariableAddress[r]               : 
#  686|     r686_2(glval<int>)      = VariableAddress[x]               : 
#  686|     r686_3(int &)           = CopyValue                        : r686_2
#  686|     mu686_4(int &)          = Store[r]                         : &:r686_1, r686_3
#  687|     r687_1(glval<int &>)    = VariableAddress[r2]              : 
#  687|     r687_2(glval<int &>)    = VariableAddress[r]               : 
#  687|     r687_3(int &)           = Load[r]                          : &:r687_2, ~m?
#  687|     r687_4(glval<int>)      = CopyValue                        : r687_3
#  687|     r687_5(int &)           = CopyValue                        : r687_4
#  687|     mu687_6(int &)          = Store[r2]                        : &:r687_1, r687_5
#  688|     r688_1(glval<String &>) = VariableAddress[r3]              : 
#  688|     r688_2(glval<unknown>)  = FunctionAddress[ReturnReference] : 
#  688|     r688_3(String &)        = Call[ReturnReference]            : func:r688_2
#  688|     mu688_4(unknown)        = ^CallSideEffect                  : ~m?
#  688|     r688_5(glval<String>)   = CopyValue                        : r688_3
#  688|     r688_6(glval<String>)   = Convert                          : r688_5
#  688|     r688_7(String &)        = CopyValue                        : r688_6
#  688|     mu688_8(String &)       = Store[r3]                        : &:r688_1, r688_7
#  689|     v689_1(void)            = NoOp                             : 
#  685|     v685_6(void)            = ReturnVoid                       : 
#  685|     v685_7(void)            = AliasedUse                       : ~m?
#  685|     v685_8(void)            = ExitFunction                     : 

#  691| void ArrayReferences()
#  691|   Block 0
#  691|     v691_1(void)              = EnterFunction       : 
#  691|     mu691_2(unknown)          = AliasedDefinition   : 
#  691|     mu691_3(unknown)          = InitializeNonLocal  : 
#  692|     r692_1(glval<int[10]>)    = VariableAddress[a]  : 
#  692|     mu692_2(int[10])          = Uninitialized[a]    : &:r692_1
#  693|     r693_1(glval<int(&)[10]>) = VariableAddress[ra] : 
#  693|     r693_2(glval<int[10]>)    = VariableAddress[a]  : 
#  693|     r693_3(int(&)[10])        = CopyValue           : r693_2
#  693|     mu693_4(int(&)[10])       = Store[ra]           : &:r693_1, r693_3
#  694|     r694_1(glval<int>)        = VariableAddress[x]  : 
#  694|     r694_2(glval<int(&)[10]>) = VariableAddress[ra] : 
#  694|     r694_3(int(&)[10])        = Load[ra]            : &:r694_2, ~m?
#  694|     r694_4(glval<int[10]>)    = CopyValue           : r694_3
#  694|     r694_5(int *)             = Convert             : r694_4
#  694|     r694_6(int)               = Constant[5]         : 
#  694|     r694_7(glval<int>)        = PointerAdd[4]       : r694_5, r694_6
#  694|     r694_8(int)               = Load[?]             : &:r694_7, ~m?
#  694|     mu694_9(int)              = Store[x]            : &:r694_1, r694_8
#  695|     v695_1(void)              = NoOp                : 
#  691|     v691_4(void)              = ReturnVoid          : 
#  691|     v691_5(void)              = AliasedUse          : ~m?
#  691|     v691_6(void)              = ExitFunction        : 

#  697| void FunctionReferences()
#  697|   Block 0
#  697|     v697_1(void)             = EnterFunction                  : 
#  697|     mu697_2(unknown)         = AliasedDefinition              : 
#  697|     mu697_3(unknown)         = InitializeNonLocal             : 
#  698|     r698_1(glval<..(&)(..)>) = VariableAddress[rfn]           : 
#  698|     r698_2(glval<..()(..)>)  = FunctionAddress[FuncPtrTarget] : 
#  698|     r698_3(..(&)(..))        = CopyValue                      : r698_2
#  698|     mu698_4(..(&)(..))       = Store[rfn]                     : &:r698_1, r698_3
#  699|     r699_1(glval<..(*)(..)>) = VariableAddress[pfn]           : 
#  699|     r699_2(glval<..(&)(..)>) = VariableAddress[rfn]           : 
#  699|     r699_3(..(&)(..))        = Load[rfn]                      : &:r699_2, ~m?
#  699|     r699_4(..(*)(..))        = CopyValue                      : r699_3
#  699|     mu699_5(..(*)(..))       = Store[pfn]                     : &:r699_1, r699_4
#  700|     r700_1(glval<..(&)(..)>) = VariableAddress[rfn]           : 
#  700|     r700_2(..(&)(..))        = Load[rfn]                      : &:r700_1, ~m?
#  700|     r700_3(..(*)(..))        = CopyValue                      : r700_2
#  700|     r700_4(int)              = Constant[5]                    : 
#  700|     r700_5(int)              = Call[?]                        : func:r700_3, 0:r700_4
#  700|     mu700_6(unknown)         = ^CallSideEffect                : ~m?
#  701|     v701_1(void)             = NoOp                           : 
#  697|     v697_4(void)             = ReturnVoid                     : 
#  697|     v697_5(void)             = AliasedUse                     : ~m?
#  697|     v697_6(void)             = ExitFunction                   : 

#  704| int min<int>(int, int)
#  704|   Block 0
#  704|     v704_1(void)       = EnterFunction            : 
#  704|     mu704_2(unknown)   = AliasedDefinition        : 
#  704|     mu704_3(unknown)   = InitializeNonLocal       : 
#  704|     r704_4(glval<int>) = VariableAddress[x]       : 
#  704|     mu704_5(int)       = InitializeParameter[x]   : &:r704_4
#  704|     r704_6(glval<int>) = VariableAddress[y]       : 
#  704|     mu704_7(int)       = InitializeParameter[y]   : &:r704_6
#  705|     r705_1(glval<int>) = VariableAddress[#return] : 
#  705|     r705_2(glval<int>) = VariableAddress[x]       : 
#  705|     r705_3(int)        = Load[x]                  : &:r705_2, ~m?
#  705|     r705_4(glval<int>) = VariableAddress[y]       : 
#  705|     r705_5(int)        = Load[y]                  : &:r705_4, ~m?
#  705|     r705_6(bool)       = CompareLT                : r705_3, r705_5
#  705|     v705_7(void)       = ConditionalBranch        : r705_6
#-----|   False -> Block 3
#-----|   True -> Block 2

#  705|   Block 1
#  705|     r705_8(glval<int>) = VariableAddress[#temp705:10] : 
#  705|     r705_9(int)        = Load[#temp705:10]            : &:r705_8, ~m?
#  705|     mu705_10(int)      = Store[#return]               : &:r705_1, r705_9
#  704|     r704_8(glval<int>) = VariableAddress[#return]     : 
#  704|     v704_9(void)       = ReturnValue                  : &:r704_8, ~m?
#  704|     v704_10(void)      = AliasedUse                   : ~m?
#  704|     v704_11(void)      = ExitFunction                 : 

#  705|   Block 2
#  705|     r705_11(glval<int>) = VariableAddress[x]           : 
#  705|     r705_12(int)        = Load[x]                      : &:r705_11, ~m?
#  705|     r705_13(glval<int>) = VariableAddress[#temp705:10] : 
#  705|     mu705_14(int)       = Store[#temp705:10]           : &:r705_13, r705_12
#-----|   Goto -> Block 1

#  705|   Block 3
#  705|     r705_15(glval<int>) = VariableAddress[y]           : 
#  705|     r705_16(int)        = Load[y]                      : &:r705_15, ~m?
#  705|     r705_17(glval<int>) = VariableAddress[#temp705:10] : 
#  705|     mu705_18(int)       = Store[#temp705:10]           : &:r705_17, r705_16
#-----|   Goto -> Block 1

#  708| int CallMin(int, int)
#  708|   Block 0
#  708|     v708_1(void)           = EnterFunction            : 
#  708|     mu708_2(unknown)       = AliasedDefinition        : 
#  708|     mu708_3(unknown)       = InitializeNonLocal       : 
#  708|     r708_4(glval<int>)     = VariableAddress[x]       : 
#  708|     mu708_5(int)           = InitializeParameter[x]   : &:r708_4
#  708|     r708_6(glval<int>)     = VariableAddress[y]       : 
#  708|     mu708_7(int)           = InitializeParameter[y]   : &:r708_6
#  709|     r709_1(glval<int>)     = VariableAddress[#return] : 
#  709|     r709_2(glval<unknown>) = FunctionAddress[min]     : 
#  709|     r709_3(glval<int>)     = VariableAddress[x]       : 
#  709|     r709_4(int)            = Load[x]                  : &:r709_3, ~m?
#  709|     r709_5(glval<int>)     = VariableAddress[y]       : 
#  709|     r709_6(int)            = Load[y]                  : &:r709_5, ~m?
#  709|     r709_7(int)            = Call[min]                : func:r709_2, 0:r709_4, 1:r709_6
#  709|     mu709_8(unknown)       = ^CallSideEffect          : ~m?
#  709|     mu709_9(int)           = Store[#return]           : &:r709_1, r709_7
#  708|     r708_8(glval<int>)     = VariableAddress[#return] : 
#  708|     v708_9(void)           = ReturnValue              : &:r708_8, ~m?
#  708|     v708_10(void)          = AliasedUse               : ~m?
#  708|     v708_11(void)          = ExitFunction             : 

#  715| long Outer<long>::Func<void*, char>(void*, char)
#  715|   Block 0
#  715|     v715_1(void)          = EnterFunction                : 
#  715|     mu715_2(unknown)      = AliasedDefinition            : 
#  715|     mu715_3(unknown)      = InitializeNonLocal           : 
#  715|     r715_4(glval<void *>) = VariableAddress[x]           : 
#  715|     mu715_5(void *)       = InitializeParameter[x]       : &:r715_4
#  715|     r715_6(void *)        = Load[x]                      : &:r715_4, ~m?
#  715|     mu715_7(unknown)      = InitializeIndirection[x]     : &:r715_6
#  715|     r715_8(glval<char>)   = VariableAddress[y]           : 
#  715|     mu715_9(char)         = InitializeParameter[y]       : &:r715_8
#  716|     r716_1(glval<long>)   = VariableAddress[#return]     : 
#  716|     r716_2(glval<long>)   = VariableAddress[#temp716:12] : 
#  716|     r716_3(long)          = Constant[0]                  : 
#  716|     mu716_4(long)         = Store[#temp716:12]           : &:r716_2, r716_3
#  716|     r716_5(long)          = Load[#temp716:12]            : &:r716_2, ~m?
#  716|     mu716_6(long)         = Store[#return]               : &:r716_1, r716_5
#  715|     v715_10(void)         = ReturnIndirection[x]         : &:r715_6, ~m?
#  715|     r715_11(glval<long>)  = VariableAddress[#return]     : 
#  715|     v715_12(void)         = ReturnValue                  : &:r715_11, ~m?
#  715|     v715_13(void)         = AliasedUse                   : ~m?
#  715|     v715_14(void)         = ExitFunction                 : 

#  720| double CallNestedTemplateFunc()
#  720|   Block 0
#  720|     v720_1(void)           = EnterFunction                : 
#  720|     mu720_2(unknown)       = AliasedDefinition            : 
#  720|     mu720_3(unknown)       = InitializeNonLocal           : 
#  721|     r721_1(glval<double>)  = VariableAddress[#return]     : 
#  721|     r721_2(glval<unknown>) = FunctionAddress[Func]        : 
#  721|     r721_3(void *)         = Constant[0]                  : 
#  721|     r721_4(char)           = Constant[111]                : 
#  721|     r721_5(long)           = Call[Func]                   : func:r721_2, 0:r721_3, 1:r721_4
#  721|     mu721_6(unknown)       = ^CallSideEffect              : ~m?
#  721|     v721_7(void)           = ^BufferReadSideEffect[0]     : &:r721_3, ~m?
#  721|     mu721_8(unknown)       = ^BufferMayWriteSideEffect[0] : &:r721_3
#  721|     r721_9(double)         = Convert                      : r721_5
#  721|     mu721_10(double)       = Store[#return]               : &:r721_1, r721_9
#  720|     r720_4(glval<double>)  = VariableAddress[#return]     : 
#  720|     v720_5(void)           = ReturnValue                  : &:r720_4, ~m?
#  720|     v720_6(void)           = AliasedUse                   : ~m?
#  720|     v720_7(void)           = ExitFunction                 : 

#  724| void TryCatch(bool)
#  724|   Block 0
#  724|     v724_1(void)        = EnterFunction          : 
#  724|     mu724_2(unknown)    = AliasedDefinition      : 
#  724|     mu724_3(unknown)    = InitializeNonLocal     : 
#  724|     r724_4(glval<bool>) = VariableAddress[b]     : 
#  724|     mu724_5(bool)       = InitializeParameter[b] : &:r724_4
#  726|     r726_1(glval<int>)  = VariableAddress[x]     : 
#  726|     r726_2(int)         = Constant[5]            : 
#  726|     mu726_3(int)        = Store[x]               : &:r726_1, r726_2
#  727|     r727_1(glval<bool>) = VariableAddress[b]     : 
#  727|     r727_2(bool)        = Load[b]                : &:r727_1, ~m?
#  727|     v727_3(void)        = ConditionalBranch      : r727_2
#-----|   False -> Block 4
#-----|   True -> Block 3

#  724|   Block 1
#  724|     v724_6(void) = AliasedUse   : ~m?
#  724|     v724_7(void) = ExitFunction : 

#  724|   Block 2
#  724|     v724_8(void) = Unwind : 
#-----|   Goto -> Block 1

#  728|   Block 3
#  728|     r728_1(glval<char *>)   = VariableAddress[#throw728:7]     : 
#  728|     r728_2(glval<char[15]>) = StringConstant["string literal"] : 
#  728|     r728_3(char *)          = Convert                          : r728_2
#  728|     mu728_4(char *)         = Store[#throw728:7]               : &:r728_1, r728_3
#  728|     v728_5(void)            = ThrowValue                       : &:r728_1, ~m?
#-----|   Exception -> Block 9

#  730|   Block 4
#  730|     r730_1(glval<int>) = VariableAddress[x] : 
#  730|     r730_2(int)        = Load[x]            : &:r730_1, ~m?
#  730|     r730_3(int)        = Constant[2]        : 
#  730|     r730_4(bool)       = CompareLT          : r730_2, r730_3
#  730|     v730_5(void)       = ConditionalBranch  : r730_4
#-----|   False -> Block 8
#-----|   True -> Block 5

#  731|   Block 5
#  731|     r731_1(glval<bool>) = VariableAddress[b] : 
#  731|     r731_2(bool)        = Load[b]            : &:r731_1, ~m?
#  731|     v731_3(void)        = ConditionalBranch  : r731_2
#-----|   False -> Block 7
#-----|   True -> Block 6

#  731|   Block 6
#  731|     r731_4(int)        = Constant[7]                  : 
#  731|     r731_5(glval<int>) = VariableAddress[#temp731:11] : 
#  731|     mu731_6(int)       = Store[#temp731:11]           : &:r731_5, r731_4
#  731|     r731_7(glval<int>) = VariableAddress[#temp731:11] : 
#  731|     r731_8(int)        = Load[#temp731:11]            : &:r731_7, ~m?
#  731|     r731_9(glval<int>) = VariableAddress[x]           : 
#  731|     mu731_10(int)      = Store[x]                     : &:r731_9, r731_8
#-----|   Goto -> Block 8

#  731|   Block 7
#  731|     r731_11(glval<String>)   = VariableAddress[#throw731:19]   : 
#  731|     mu731_12(String)         = Uninitialized[#throw731:19]     : &:r731_11
#  731|     r731_13(glval<unknown>)  = FunctionAddress[String]         : 
#  731|     r731_14(glval<char[14]>) = StringConstant["String object"] : 
#  731|     r731_15(char *)          = Convert                         : r731_14
#  731|     v731_16(void)            = Call[String]                    : func:r731_13, this:r731_11, 0:r731_15
#  731|     mu731_17(unknown)        = ^CallSideEffect                 : ~m?
#  731|     v731_18(void)            = ^BufferReadSideEffect[0]        : &:r731_15, ~m?
#  731|     mu731_19(String)         = ^IndirectMayWriteSideEffect[-1] : &:r731_11
#  731|     v731_20(void)            = ThrowValue                      : &:r731_11, ~m?
#-----|   Exception -> Block 9

#  733|   Block 8
#  733|     r733_1(int)        = Constant[7]        : 
#  733|     r733_2(glval<int>) = VariableAddress[x] : 
#  733|     mu733_3(int)       = Store[x]           : &:r733_2, r733_1
#-----|   Goto -> Block 14

#  735|   Block 9
#  735|     v735_1(void) = CatchByType[const char *] : 
#-----|   Exception -> Block 11
#-----|   Goto -> Block 10

#  735|   Block 10
#  735|     r735_2(glval<char *>)  = VariableAddress[s]              : 
#  735|     mu735_3(char *)        = InitializeParameter[s]          : &:r735_2
#  735|     r735_4(char *)         = Load[s]                         : &:r735_2, ~m?
#  735|     mu735_5(unknown)       = InitializeIndirection[s]        : &:r735_4
#  736|     r736_1(glval<String>)  = VariableAddress[#throw736:5]    : 
#  736|     mu736_2(String)        = Uninitialized[#throw736:5]      : &:r736_1
#  736|     r736_3(glval<unknown>) = FunctionAddress[String]         : 
#  736|     r736_4(glval<char *>)  = VariableAddress[s]              : 
#  736|     r736_5(char *)         = Load[s]                         : &:r736_4, ~m?
#  736|     v736_6(void)           = Call[String]                    : func:r736_3, this:r736_1, 0:r736_5
#  736|     mu736_7(unknown)       = ^CallSideEffect                 : ~m?
#  736|     v736_8(void)           = ^BufferReadSideEffect[0]        : &:r736_5, ~m?
#  736|     mu736_9(String)        = ^IndirectMayWriteSideEffect[-1] : &:r736_1
#  736|     v736_10(void)          = ThrowValue                      : &:r736_1, ~m?
#-----|   Exception -> Block 2

#  738|   Block 11
#  738|     v738_1(void) = CatchByType[const String &] : 
#-----|   Exception -> Block 13
#-----|   Goto -> Block 12

#  738|   Block 12
#  738|     r738_2(glval<String &>) = VariableAddress[e]       : 
#  738|     mu738_3(String &)       = InitializeParameter[e]   : &:r738_2
#  738|     r738_4(String &)        = Load[e]                  : &:r738_2, ~m?
#  738|     mu738_5(unknown)        = InitializeIndirection[e] : &:r738_4
#  738|     v738_6(void)            = NoOp                     : 
#-----|   Goto -> Block 14

#  740|   Block 13
#  740|     v740_1(void) = CatchAny : 
#  741|     v741_1(void) = ReThrow  : 
#-----|   Exception -> Block 2

#  743|   Block 14
#  743|     v743_1(void) = NoOp       : 
#  724|     v724_9(void) = ReturnVoid : 
#-----|   Goto -> Block 1

#  745| Base& Base::operator=(Base const&)
#  745|   Block 0
#  745|     v745_1(void)            = EnterFunction                                : 
#  745|     mu745_2(unknown)        = AliasedDefinition                            : 
#  745|     mu745_3(unknown)        = InitializeNonLocal                           : 
#  745|     r745_4(glval<unknown>)  = VariableAddress[#this]                       : 
#  745|     mu745_5(glval<Base>)    = InitializeParameter[#this]                   : &:r745_4
#  745|     r745_6(glval<Base>)     = Load[#this]                                  : &:r745_4, ~m?
#  745|     mu745_7(Base)           = InitializeIndirection[#this]                 : &:r745_6
#-----|     r0_1(glval<Base &>)     = VariableAddress[(unnamed parameter 0)]       : 
#-----|     mu0_2(Base &)           = InitializeParameter[(unnamed parameter 0)]   : &:r0_1
#-----|     r0_3(Base &)            = Load[(unnamed parameter 0)]                  : &:r0_1, ~m?
#-----|     mu0_4(unknown)          = InitializeIndirection[(unnamed parameter 0)] : &:r0_3
#  745|     r745_8(glval<unknown>)  = VariableAddress[#this]                       : 
#  745|     r745_9(Base *)          = Load[#this]                                  : &:r745_8, ~m?
#  745|     r745_10(glval<String>)  = FieldAddress[base_s]                         : r745_9
#  745|     r745_11(String *)       = CopyValue                                    : r745_10
#  745|     r745_12(glval<unknown>) = FunctionAddress[operator=]                   : 
#  745|     r745_13(glval<Base &>)  = VariableAddress[(unnamed parameter 0)]       : 
#  745|     r745_14(Base &)         = Load[(unnamed parameter 0)]                  : &:r745_13, ~m?
#-----|     r0_5(glval<Base>)       = CopyValue                                    : r745_14
#  745|     r745_15(glval<String>)  = FieldAddress[base_s]                         : r0_5
#-----|     r0_6(String &)          = CopyValue                                    : r745_15
#  745|     r745_16(String &)       = Call[operator=]                              : func:r745_12, this:r745_11, 0:r0_6
#  745|     mu745_17(unknown)       = ^CallSideEffect                              : ~m?
#  745|     v745_18(void)           = ^IndirectReadSideEffect[-1]                  : &:r745_11, ~m?
#-----|     v0_7(void)              = ^BufferReadSideEffect[0]                     : &:r0_6, ~m?
#  745|     mu745_19(String)        = ^IndirectMayWriteSideEffect[-1]              : &:r745_11
#-----|     r0_8(glval<String>)     = CopyValue                                    : r745_16
#-----|     r0_9(glval<Base &>)     = VariableAddress[#return]                     : 
#-----|     r0_10(glval<unknown>)   = VariableAddress[#this]                       : 
#-----|     r0_11(Base *)           = Load[#this]                                  : &:r0_10, ~m?
#-----|     r0_12(glval<Base>)      = CopyValue                                    : r0_11
#-----|     r0_13(Base &)           = CopyValue                                    : r0_12
#-----|     mu0_14(Base &)          = Store[#return]                               : &:r0_9, r0_13
#  745|     v745_20(void)           = ReturnIndirection[#this]                     : &:r745_6, ~m?
#-----|     v0_15(void)             = ReturnIndirection[(unnamed parameter 0)]     : &:r0_3, ~m?
#  745|     r745_21(glval<Base &>)  = VariableAddress[#return]                     : 
#  745|     v745_22(void)           = ReturnValue                                  : &:r745_21, ~m?
#  745|     v745_23(void)           = AliasedUse                                   : ~m?
#  745|     v745_24(void)           = ExitFunction                                 : 

#  745| void Base::Base(Base const&)
#  745|   Block 0
#  745|     v745_1(void)           = EnterFunction                                : 
#  745|     mu745_2(unknown)       = AliasedDefinition                            : 
#  745|     mu745_3(unknown)       = InitializeNonLocal                           : 
#  745|     r745_4(glval<unknown>) = VariableAddress[#this]                       : 
#  745|     mu745_5(glval<Base>)   = InitializeParameter[#this]                   : &:r745_4
#  745|     r745_6(glval<Base>)    = Load[#this]                                  : &:r745_4, ~m?
#  745|     mu745_7(Base)          = InitializeIndirection[#this]                 : &:r745_6
#-----|     r0_1(glval<Base &>)    = VariableAddress[(unnamed parameter 0)]       : 
#-----|     mu0_2(Base &)          = InitializeParameter[(unnamed parameter 0)]   : &:r0_1
#-----|     r0_3(Base &)           = Load[(unnamed parameter 0)]                  : &:r0_1, ~m?
#-----|     mu0_4(unknown)         = InitializeIndirection[(unnamed parameter 0)] : &:r0_3
#  745|     r745_8(glval<String>)  = FieldAddress[base_s]                         : mu745_5
#  745|     r745_9(glval<unknown>) = FunctionAddress[String]                      : 
#  745|     v745_10(void)          = Call[String]                                 : func:r745_9, this:r745_8
#  745|     mu745_11(unknown)      = ^CallSideEffect                              : ~m?
#  745|     mu745_12(String)       = ^IndirectMayWriteSideEffect[-1]              : &:r745_8
#  745|     v745_13(void)          = NoOp                                         : 
#  745|     v745_14(void)          = ReturnIndirection[#this]                     : &:r745_6, ~m?
#-----|     v0_5(void)             = ReturnIndirection[(unnamed parameter 0)]     : &:r0_3, ~m?
#  745|     v745_15(void)          = ReturnVoid                                   : 
#  745|     v745_16(void)          = AliasedUse                                   : ~m?
#  745|     v745_17(void)          = ExitFunction                                 : 

#  748| void Base::Base()
#  748|   Block 0
#  748|     v748_1(void)           = EnterFunction                   : 
#  748|     mu748_2(unknown)       = AliasedDefinition               : 
#  748|     mu748_3(unknown)       = InitializeNonLocal              : 
#  748|     r748_4(glval<unknown>) = VariableAddress[#this]          : 
#  748|     mu748_5(glval<Base>)   = InitializeParameter[#this]      : &:r748_4
#  748|     r748_6(glval<Base>)    = Load[#this]                     : &:r748_4, ~m?
#  748|     mu748_7(Base)          = InitializeIndirection[#this]    : &:r748_6
#  748|     r748_8(glval<String>)  = FieldAddress[base_s]            : mu748_5
#  748|     r748_9(glval<unknown>) = FunctionAddress[String]         : 
#  748|     v748_10(void)          = Call[String]                    : func:r748_9, this:r748_8
#  748|     mu748_11(unknown)      = ^CallSideEffect                 : ~m?
#  748|     mu748_12(String)       = ^IndirectMayWriteSideEffect[-1] : &:r748_8
#  749|     v749_1(void)           = NoOp                            : 
#  748|     v748_13(void)          = ReturnIndirection[#this]        : &:r748_6, ~m?
#  748|     v748_14(void)          = ReturnVoid                      : 
#  748|     v748_15(void)          = AliasedUse                      : ~m?
#  748|     v748_16(void)          = ExitFunction                    : 

#  750| void Base::~Base()
#  750|   Block 0
#  750|     v750_1(void)           = EnterFunction                : 
#  750|     mu750_2(unknown)       = AliasedDefinition            : 
#  750|     mu750_3(unknown)       = InitializeNonLocal           : 
#  750|     r750_4(glval<unknown>) = VariableAddress[#this]       : 
#  750|     mu750_5(glval<Base>)   = InitializeParameter[#this]   : &:r750_4
#  750|     r750_6(glval<Base>)    = Load[#this]                  : &:r750_4, ~m?
#  750|     mu750_7(Base)          = InitializeIndirection[#this] : &:r750_6
#  751|     v751_1(void)           = NoOp                         : 
#  751|     r751_2(glval<String>)  = FieldAddress[base_s]         : mu750_5
#  751|     r751_3(glval<unknown>) = FunctionAddress[~String]     : 
#  751|     v751_4(void)           = Call[~String]                : func:r751_3, this:r751_2
#  751|     mu751_5(unknown)       = ^CallSideEffect              : ~m?
#  750|     v750_8(void)           = ReturnIndirection[#this]     : &:r750_6, ~m?
#  750|     v750_9(void)           = ReturnVoid                   : 
#  750|     v750_10(void)          = AliasedUse                   : ~m?
#  750|     v750_11(void)          = ExitFunction                 : 

#  754| Middle& Middle::operator=(Middle const&)
#  754|   Block 0
#  754|     v754_1(void)             = EnterFunction                                : 
#  754|     mu754_2(unknown)         = AliasedDefinition                            : 
#  754|     mu754_3(unknown)         = InitializeNonLocal                           : 
#  754|     r754_4(glval<unknown>)   = VariableAddress[#this]                       : 
#  754|     mu754_5(glval<Middle>)   = InitializeParameter[#this]                   : &:r754_4
#  754|     r754_6(glval<Middle>)    = Load[#this]                                  : &:r754_4, ~m?
#  754|     mu754_7(Middle)          = InitializeIndirection[#this]                 : &:r754_6
#-----|     r0_1(glval<Middle &>)    = VariableAddress[(unnamed parameter 0)]       : 
#-----|     mu0_2(Middle &)          = InitializeParameter[(unnamed parameter 0)]   : &:r0_1
#-----|     r0_3(Middle &)           = Load[(unnamed parameter 0)]                  : &:r0_1, ~m?
#-----|     mu0_4(unknown)           = InitializeIndirection[(unnamed parameter 0)] : &:r0_3
#  754|     r754_8(glval<unknown>)   = VariableAddress[#this]                       : 
#  754|     r754_9(Middle *)         = Load[#this]                                  : &:r754_8, ~m?
#-----|     r0_5(Base *)             = ConvertToNonVirtualBase[Middle : Base]       : r754_9
#  754|     r754_10(glval<unknown>)  = FunctionAddress[operator=]                   : 
#  754|     r754_11(glval<Middle &>) = VariableAddress[(unnamed parameter 0)]       : 
#  754|     r754_12(Middle &)        = Load[(unnamed parameter 0)]                  : &:r754_11, ~m?
#-----|     r0_6(glval<Middle>)      = CopyValue                                    : r754_12
#  754|     r754_13(Middle *)        = CopyValue                                    : r0_6
#-----|     r0_7(Base *)             = ConvertToNonVirtualBase[Middle : Base]       : r754_13
#  754|     r754_14(glval<Base>)     = CopyValue                                    : r0_7
#-----|     r0_8(Base &)             = CopyValue                                    : r754_14
#  754|     r754_15(Base &)          = Call[operator=]                              : func:r754_10, this:r0_5, 0:r0_8
#  754|     mu754_16(unknown)        = ^CallSideEffect                              : ~m?
#-----|     v0_9(void)               = ^IndirectReadSideEffect[-1]                  : &:r0_5, ~m?
#-----|     v0_10(void)              = ^BufferReadSideEffect[0]                     : &:r0_8, ~m?
#-----|     mu0_11(Base)             = ^IndirectMayWriteSideEffect[-1]              : &:r0_5
#-----|     r0_12(glval<Base>)       = CopyValue                                    : r754_15
#  754|     r754_17(glval<unknown>)  = VariableAddress[#this]                       : 
#  754|     r754_18(Middle *)        = Load[#this]                                  : &:r754_17, ~m?
#  754|     r754_19(glval<String>)   = FieldAddress[middle_s]                       : r754_18
#  754|     r754_20(String *)        = CopyValue                                    : r754_19
#  754|     r754_21(glval<unknown>)  = FunctionAddress[operator=]                   : 
#  754|     r754_22(glval<Middle &>) = VariableAddress[(unnamed parameter 0)]       : 
#  754|     r754_23(Middle &)        = Load[(unnamed parameter 0)]                  : &:r754_22, ~m?
#-----|     r0_13(glval<Middle>)     = CopyValue                                    : r754_23
#  754|     r754_24(glval<String>)   = FieldAddress[middle_s]                       : r0_13
#-----|     r0_14(String &)          = CopyValue                                    : r754_24
#  754|     r754_25(String &)        = Call[operator=]                              : func:r754_21, this:r754_20, 0:r0_14
#  754|     mu754_26(unknown)        = ^CallSideEffect                              : ~m?
#  754|     v754_27(void)            = ^IndirectReadSideEffect[-1]                  : &:r754_20, ~m?
#-----|     v0_15(void)              = ^BufferReadSideEffect[0]                     : &:r0_14, ~m?
#  754|     mu754_28(String)         = ^IndirectMayWriteSideEffect[-1]              : &:r754_20
#-----|     r0_16(glval<String>)     = CopyValue                                    : r754_25
#-----|     r0_17(glval<Middle &>)   = VariableAddress[#return]                     : 
#-----|     r0_18(glval<unknown>)    = VariableAddress[#this]                       : 
#-----|     r0_19(Middle *)          = Load[#this]                                  : &:r0_18, ~m?
#-----|     r0_20(glval<Middle>)     = CopyValue                                    : r0_19
#-----|     r0_21(Middle &)          = CopyValue                                    : r0_20
#-----|     mu0_22(Middle &)         = Store[#return]                               : &:r0_17, r0_21
#  754|     v754_29(void)            = ReturnIndirection[#this]                     : &:r754_6, ~m?
#-----|     v0_23(void)              = ReturnIndirection[(unnamed parameter 0)]     : &:r0_3, ~m?
#  754|     r754_30(glval<Middle &>) = VariableAddress[#return]                     : 
#  754|     v754_31(void)            = ReturnValue                                  : &:r754_30, ~m?
#  754|     v754_32(void)            = AliasedUse                                   : ~m?
#  754|     v754_33(void)            = ExitFunction                                 : 

#  757| void Middle::Middle()
#  757|   Block 0
#  757|     v757_1(void)            = EnterFunction                          : 
#  757|     mu757_2(unknown)        = AliasedDefinition                      : 
#  757|     mu757_3(unknown)        = InitializeNonLocal                     : 
#  757|     r757_4(glval<unknown>)  = VariableAddress[#this]                 : 
#  757|     mu757_5(glval<Middle>)  = InitializeParameter[#this]             : &:r757_4
#  757|     r757_6(glval<Middle>)   = Load[#this]                            : &:r757_4, ~m?
#  757|     mu757_7(Middle)         = InitializeIndirection[#this]           : &:r757_6
#  757|     r757_8(glval<Base>)     = ConvertToNonVirtualBase[Middle : Base] : mu757_5
#  757|     r757_9(glval<unknown>)  = FunctionAddress[Base]                  : 
#  757|     v757_10(void)           = Call[Base]                             : func:r757_9, this:r757_8
#  757|     mu757_11(unknown)       = ^CallSideEffect                        : ~m?
#  757|     mu757_12(Base)          = ^IndirectMayWriteSideEffect[-1]        : &:r757_8
#  757|     r757_13(glval<String>)  = FieldAddress[middle_s]                 : mu757_5
#  757|     r757_14(glval<unknown>) = FunctionAddress[String]                : 
#  757|     v757_15(void)           = Call[String]                           : func:r757_14, this:r757_13
#  757|     mu757_16(unknown)       = ^CallSideEffect                        : ~m?
#  757|     mu757_17(String)        = ^IndirectMayWriteSideEffect[-1]        : &:r757_13
#  758|     v758_1(void)            = NoOp                                   : 
#  757|     v757_18(void)           = ReturnIndirection[#this]               : &:r757_6, ~m?
#  757|     v757_19(void)           = ReturnVoid                             : 
#  757|     v757_20(void)           = AliasedUse                             : ~m?
#  757|     v757_21(void)           = ExitFunction                           : 

#  759| void Middle::~Middle()
#  759|   Block 0
#  759|     v759_1(void)           = EnterFunction                          : 
#  759|     mu759_2(unknown)       = AliasedDefinition                      : 
#  759|     mu759_3(unknown)       = InitializeNonLocal                     : 
#  759|     r759_4(glval<unknown>) = VariableAddress[#this]                 : 
#  759|     mu759_5(glval<Middle>) = InitializeParameter[#this]             : &:r759_4
#  759|     r759_6(glval<Middle>)  = Load[#this]                            : &:r759_4, ~m?
#  759|     mu759_7(Middle)        = InitializeIndirection[#this]           : &:r759_6
#  760|     v760_1(void)           = NoOp                                   : 
#  760|     r760_2(glval<String>)  = FieldAddress[middle_s]                 : mu759_5
#  760|     r760_3(glval<unknown>) = FunctionAddress[~String]               : 
#  760|     v760_4(void)           = Call[~String]                          : func:r760_3, this:r760_2
#  760|     mu760_5(unknown)       = ^CallSideEffect                        : ~m?
#  760|     r760_6(glval<Base>)    = ConvertToNonVirtualBase[Middle : Base] : mu759_5
#  760|     r760_7(glval<unknown>) = FunctionAddress[~Base]                 : 
#  760|     v760_8(void)           = Call[~Base]                            : func:r760_7, this:r760_6
#  760|     mu760_9(unknown)       = ^CallSideEffect                        : ~m?
#  759|     v759_8(void)           = ReturnIndirection[#this]               : &:r759_6, ~m?
#  759|     v759_9(void)           = ReturnVoid                             : 
#  759|     v759_10(void)          = AliasedUse                             : ~m?
#  759|     v759_11(void)          = ExitFunction                           : 

#  763| Derived& Derived::operator=(Derived const&)
#  763|   Block 0
#  763|     v763_1(void)              = EnterFunction                                : 
#  763|     mu763_2(unknown)          = AliasedDefinition                            : 
#  763|     mu763_3(unknown)          = InitializeNonLocal                           : 
#  763|     r763_4(glval<unknown>)    = VariableAddress[#this]                       : 
#  763|     mu763_5(glval<Derived>)   = InitializeParameter[#this]                   : &:r763_4
#  763|     r763_6(glval<Derived>)    = Load[#this]                                  : &:r763_4, ~m?
#  763|     mu763_7(Derived)          = InitializeIndirection[#this]                 : &:r763_6
#-----|     r0_1(glval<Derived &>)    = VariableAddress[(unnamed parameter 0)]       : 
#-----|     mu0_2(Derived &)          = InitializeParameter[(unnamed parameter 0)]   : &:r0_1
#-----|     r0_3(Derived &)           = Load[(unnamed parameter 0)]                  : &:r0_1, ~m?
#-----|     mu0_4(unknown)            = InitializeIndirection[(unnamed parameter 0)] : &:r0_3
#  763|     r763_8(glval<unknown>)    = VariableAddress[#this]                       : 
#  763|     r763_9(Derived *)         = Load[#this]                                  : &:r763_8, ~m?
#-----|     r0_5(Middle *)            = ConvertToNonVirtualBase[Derived : Middle]    : r763_9
#  763|     r763_10(glval<unknown>)   = FunctionAddress[operator=]                   : 
#  763|     r763_11(glval<Derived &>) = VariableAddress[(unnamed parameter 0)]       : 
#  763|     r763_12(Derived &)        = Load[(unnamed parameter 0)]                  : &:r763_11, ~m?
#-----|     r0_6(glval<Derived>)      = CopyValue                                    : r763_12
#  763|     r763_13(Derived *)        = CopyValue                                    : r0_6
#-----|     r0_7(Middle *)            = ConvertToNonVirtualBase[Derived : Middle]    : r763_13
#  763|     r763_14(glval<Middle>)    = CopyValue                                    : r0_7
#-----|     r0_8(Middle &)            = CopyValue                                    : r763_14
#  763|     r763_15(Middle &)         = Call[operator=]                              : func:r763_10, this:r0_5, 0:r0_8
#  763|     mu763_16(unknown)         = ^CallSideEffect                              : ~m?
#-----|     v0_9(void)                = ^IndirectReadSideEffect[-1]                  : &:r0_5, ~m?
#-----|     v0_10(void)               = ^BufferReadSideEffect[0]                     : &:r0_8, ~m?
#-----|     mu0_11(Middle)            = ^IndirectMayWriteSideEffect[-1]              : &:r0_5
#-----|     r0_12(glval<Middle>)      = CopyValue                                    : r763_15
#  763|     r763_17(glval<unknown>)   = VariableAddress[#this]                       : 
#  763|     r763_18(Derived *)        = Load[#this]                                  : &:r763_17, ~m?
#  763|     r763_19(glval<String>)    = FieldAddress[derived_s]                      : r763_18
#  763|     r763_20(String *)         = CopyValue                                    : r763_19
#  763|     r763_21(glval<unknown>)   = FunctionAddress[operator=]                   : 
#  763|     r763_22(glval<Derived &>) = VariableAddress[(unnamed parameter 0)]       : 
#  763|     r763_23(Derived &)        = Load[(unnamed parameter 0)]                  : &:r763_22, ~m?
#-----|     r0_13(glval<Derived>)     = CopyValue                                    : r763_23
#  763|     r763_24(glval<String>)    = FieldAddress[derived_s]                      : r0_13
#-----|     r0_14(String &)           = CopyValue                                    : r763_24
#  763|     r763_25(String &)         = Call[operator=]                              : func:r763_21, this:r763_20, 0:r0_14
#  763|     mu763_26(unknown)         = ^CallSideEffect                              : ~m?
#  763|     v763_27(void)             = ^IndirectReadSideEffect[-1]                  : &:r763_20, ~m?
#-----|     v0_15(void)               = ^BufferReadSideEffect[0]                     : &:r0_14, ~m?
#  763|     mu763_28(String)          = ^IndirectMayWriteSideEffect[-1]              : &:r763_20
#-----|     r0_16(glval<String>)      = CopyValue                                    : r763_25
#-----|     r0_17(glval<Derived &>)   = VariableAddress[#return]                     : 
#-----|     r0_18(glval<unknown>)     = VariableAddress[#this]                       : 
#-----|     r0_19(Derived *)          = Load[#this]                                  : &:r0_18, ~m?
#-----|     r0_20(glval<Derived>)     = CopyValue                                    : r0_19
#-----|     r0_21(Derived &)          = CopyValue                                    : r0_20
#-----|     mu0_22(Derived &)         = Store[#return]                               : &:r0_17, r0_21
#  763|     v763_29(void)             = ReturnIndirection[#this]                     : &:r763_6, ~m?
#-----|     v0_23(void)               = ReturnIndirection[(unnamed parameter 0)]     : &:r0_3, ~m?
#  763|     r763_30(glval<Derived &>) = VariableAddress[#return]                     : 
#  763|     v763_31(void)             = ReturnValue                                  : &:r763_30, ~m?
#  763|     v763_32(void)             = AliasedUse                                   : ~m?
#  763|     v763_33(void)             = ExitFunction                                 : 

#  766| void Derived::Derived()
#  766|   Block 0
#  766|     v766_1(void)            = EnterFunction                             : 
#  766|     mu766_2(unknown)        = AliasedDefinition                         : 
#  766|     mu766_3(unknown)        = InitializeNonLocal                        : 
#  766|     r766_4(glval<unknown>)  = VariableAddress[#this]                    : 
#  766|     mu766_5(glval<Derived>) = InitializeParameter[#this]                : &:r766_4
#  766|     r766_6(glval<Derived>)  = Load[#this]                               : &:r766_4, ~m?
#  766|     mu766_7(Derived)        = InitializeIndirection[#this]              : &:r766_6
#  766|     r766_8(glval<Middle>)   = ConvertToNonVirtualBase[Derived : Middle] : mu766_5
#  766|     r766_9(glval<unknown>)  = FunctionAddress[Middle]                   : 
#  766|     v766_10(void)           = Call[Middle]                              : func:r766_9, this:r766_8
#  766|     mu766_11(unknown)       = ^CallSideEffect                           : ~m?
#  766|     mu766_12(Middle)        = ^IndirectMayWriteSideEffect[-1]           : &:r766_8
#  766|     r766_13(glval<String>)  = FieldAddress[derived_s]                   : mu766_5
#  766|     r766_14(glval<unknown>) = FunctionAddress[String]                   : 
#  766|     v766_15(void)           = Call[String]                              : func:r766_14, this:r766_13
#  766|     mu766_16(unknown)       = ^CallSideEffect                           : ~m?
#  766|     mu766_17(String)        = ^IndirectMayWriteSideEffect[-1]           : &:r766_13
#  767|     v767_1(void)            = NoOp                                      : 
#  766|     v766_18(void)           = ReturnIndirection[#this]                  : &:r766_6, ~m?
#  766|     v766_19(void)           = ReturnVoid                                : 
#  766|     v766_20(void)           = AliasedUse                                : ~m?
#  766|     v766_21(void)           = ExitFunction                              : 

#  768| void Derived::~Derived()
#  768|   Block 0
#  768|     v768_1(void)            = EnterFunction                             : 
#  768|     mu768_2(unknown)        = AliasedDefinition                         : 
#  768|     mu768_3(unknown)        = InitializeNonLocal                        : 
#  768|     r768_4(glval<unknown>)  = VariableAddress[#this]                    : 
#  768|     mu768_5(glval<Derived>) = InitializeParameter[#this]                : &:r768_4
#  768|     r768_6(glval<Derived>)  = Load[#this]                               : &:r768_4, ~m?
#  768|     mu768_7(Derived)        = InitializeIndirection[#this]              : &:r768_6
#  769|     v769_1(void)            = NoOp                                      : 
#  769|     r769_2(glval<String>)   = FieldAddress[derived_s]                   : mu768_5
#  769|     r769_3(glval<unknown>)  = FunctionAddress[~String]                  : 
#  769|     v769_4(void)            = Call[~String]                             : func:r769_3, this:r769_2
#  769|     mu769_5(unknown)        = ^CallSideEffect                           : ~m?
#  769|     r769_6(glval<Middle>)   = ConvertToNonVirtualBase[Derived : Middle] : mu768_5
#  769|     r769_7(glval<unknown>)  = FunctionAddress[~Middle]                  : 
#  769|     v769_8(void)            = Call[~Middle]                             : func:r769_7, this:r769_6
#  769|     mu769_9(unknown)        = ^CallSideEffect                           : ~m?
#  768|     v768_8(void)            = ReturnIndirection[#this]                  : &:r768_6, ~m?
#  768|     v768_9(void)            = ReturnVoid                                : 
#  768|     v768_10(void)           = AliasedUse                                : ~m?
#  768|     v768_11(void)           = ExitFunction                              : 

#  775| void MiddleVB1::MiddleVB1()
#  775|   Block 0
#  775|     v775_1(void)              = EnterFunction                             : 
#  775|     mu775_2(unknown)          = AliasedDefinition                         : 
#  775|     mu775_3(unknown)          = InitializeNonLocal                        : 
#  775|     r775_4(glval<unknown>)    = VariableAddress[#this]                    : 
#  775|     mu775_5(glval<MiddleVB1>) = InitializeParameter[#this]                : &:r775_4
#  775|     r775_6(glval<MiddleVB1>)  = Load[#this]                               : &:r775_4, ~m?
#  775|     mu775_7(MiddleVB1)        = InitializeIndirection[#this]              : &:r775_6
#  775|     r775_8(glval<Base>)       = ConvertToNonVirtualBase[MiddleVB1 : Base] : mu775_5
#  775|     r775_9(glval<unknown>)    = FunctionAddress[Base]                     : 
#  775|     v775_10(void)             = Call[Base]                                : func:r775_9, this:r775_8
#  775|     mu775_11(unknown)         = ^CallSideEffect                           : ~m?
#  775|     mu775_12(Base)            = ^IndirectMayWriteSideEffect[-1]           : &:r775_8
#  775|     r775_13(glval<String>)    = FieldAddress[middlevb1_s]                 : mu775_5
#  775|     r775_14(glval<unknown>)   = FunctionAddress[String]                   : 
#  775|     v775_15(void)             = Call[String]                              : func:r775_14, this:r775_13
#  775|     mu775_16(unknown)         = ^CallSideEffect                           : ~m?
#  775|     mu775_17(String)          = ^IndirectMayWriteSideEffect[-1]           : &:r775_13
#  776|     v776_1(void)              = NoOp                                      : 
#  775|     v775_18(void)             = ReturnIndirection[#this]                  : &:r775_6, ~m?
#  775|     v775_19(void)             = ReturnVoid                                : 
#  775|     v775_20(void)             = AliasedUse                                : ~m?
#  775|     v775_21(void)             = ExitFunction                              : 

#  777| void MiddleVB1::~MiddleVB1()
#  777|   Block 0
#  777|     v777_1(void)              = EnterFunction                             : 
#  777|     mu777_2(unknown)          = AliasedDefinition                         : 
#  777|     mu777_3(unknown)          = InitializeNonLocal                        : 
#  777|     r777_4(glval<unknown>)    = VariableAddress[#this]                    : 
#  777|     mu777_5(glval<MiddleVB1>) = InitializeParameter[#this]                : &:r777_4
#  777|     r777_6(glval<MiddleVB1>)  = Load[#this]                               : &:r777_4, ~m?
#  777|     mu777_7(MiddleVB1)        = InitializeIndirection[#this]              : &:r777_6
#  778|     v778_1(void)              = NoOp                                      : 
#  778|     r778_2(glval<String>)     = FieldAddress[middlevb1_s]                 : mu777_5
#  778|     r778_3(glval<unknown>)    = FunctionAddress[~String]                  : 
#  778|     v778_4(void)              = Call[~String]                             : func:r778_3, this:r778_2
#  778|     mu778_5(unknown)          = ^CallSideEffect                           : ~m?
#  778|     r778_6(glval<Base>)       = ConvertToNonVirtualBase[MiddleVB1 : Base] : mu777_5
#  778|     r778_7(glval<unknown>)    = FunctionAddress[~Base]                    : 
#  778|     v778_8(void)              = Call[~Base]                               : func:r778_7, this:r778_6
#  778|     mu778_9(unknown)          = ^CallSideEffect                           : ~m?
#  777|     v777_8(void)              = ReturnIndirection[#this]                  : &:r777_6, ~m?
#  777|     v777_9(void)              = ReturnVoid                                : 
#  777|     v777_10(void)             = AliasedUse                                : ~m?
#  777|     v777_11(void)             = ExitFunction                              : 

#  784| void MiddleVB2::MiddleVB2()
#  784|   Block 0
#  784|     v784_1(void)              = EnterFunction                             : 
#  784|     mu784_2(unknown)          = AliasedDefinition                         : 
#  784|     mu784_3(unknown)          = InitializeNonLocal                        : 
#  784|     r784_4(glval<unknown>)    = VariableAddress[#this]                    : 
#  784|     mu784_5(glval<MiddleVB2>) = InitializeParameter[#this]                : &:r784_4
#  784|     r784_6(glval<MiddleVB2>)  = Load[#this]                               : &:r784_4, ~m?
#  784|     mu784_7(MiddleVB2)        = InitializeIndirection[#this]              : &:r784_6
#  784|     r784_8(glval<Base>)       = ConvertToNonVirtualBase[MiddleVB2 : Base] : mu784_5
#  784|     r784_9(glval<unknown>)    = FunctionAddress[Base]                     : 
#  784|     v784_10(void)             = Call[Base]                                : func:r784_9, this:r784_8
#  784|     mu784_11(unknown)         = ^CallSideEffect                           : ~m?
#  784|     mu784_12(Base)            = ^IndirectMayWriteSideEffect[-1]           : &:r784_8
#  784|     r784_13(glval<String>)    = FieldAddress[middlevb2_s]                 : mu784_5
#  784|     r784_14(glval<unknown>)   = FunctionAddress[String]                   : 
#  784|     v784_15(void)             = Call[String]                              : func:r784_14, this:r784_13
#  784|     mu784_16(unknown)         = ^CallSideEffect                           : ~m?
#  784|     mu784_17(String)          = ^IndirectMayWriteSideEffect[-1]           : &:r784_13
#  785|     v785_1(void)              = NoOp                                      : 
#  784|     v784_18(void)             = ReturnIndirection[#this]                  : &:r784_6, ~m?
#  784|     v784_19(void)             = ReturnVoid                                : 
#  784|     v784_20(void)             = AliasedUse                                : ~m?
#  784|     v784_21(void)             = ExitFunction                              : 

#  786| void MiddleVB2::~MiddleVB2()
#  786|   Block 0
#  786|     v786_1(void)              = EnterFunction                             : 
#  786|     mu786_2(unknown)          = AliasedDefinition                         : 
#  786|     mu786_3(unknown)          = InitializeNonLocal                        : 
#  786|     r786_4(glval<unknown>)    = VariableAddress[#this]                    : 
#  786|     mu786_5(glval<MiddleVB2>) = InitializeParameter[#this]                : &:r786_4
#  786|     r786_6(glval<MiddleVB2>)  = Load[#this]                               : &:r786_4, ~m?
#  786|     mu786_7(MiddleVB2)        = InitializeIndirection[#this]              : &:r786_6
#  787|     v787_1(void)              = NoOp                                      : 
#  787|     r787_2(glval<String>)     = FieldAddress[middlevb2_s]                 : mu786_5
#  787|     r787_3(glval<unknown>)    = FunctionAddress[~String]                  : 
#  787|     v787_4(void)              = Call[~String]                             : func:r787_3, this:r787_2
#  787|     mu787_5(unknown)          = ^CallSideEffect                           : ~m?
#  787|     r787_6(glval<Base>)       = ConvertToNonVirtualBase[MiddleVB2 : Base] : mu786_5
#  787|     r787_7(glval<unknown>)    = FunctionAddress[~Base]                    : 
#  787|     v787_8(void)              = Call[~Base]                               : func:r787_7, this:r787_6
#  787|     mu787_9(unknown)          = ^CallSideEffect                           : ~m?
#  786|     v786_8(void)              = ReturnIndirection[#this]                  : &:r786_6, ~m?
#  786|     v786_9(void)              = ReturnVoid                                : 
#  786|     v786_10(void)             = AliasedUse                                : ~m?
#  786|     v786_11(void)             = ExitFunction                              : 

#  793| void DerivedVB::DerivedVB()
#  793|   Block 0
#  793|     v793_1(void)              = EnterFunction                                  : 
#  793|     mu793_2(unknown)          = AliasedDefinition                              : 
#  793|     mu793_3(unknown)          = InitializeNonLocal                             : 
#  793|     r793_4(glval<unknown>)    = VariableAddress[#this]                         : 
#  793|     mu793_5(glval<DerivedVB>) = InitializeParameter[#this]                     : &:r793_4
#  793|     r793_6(glval<DerivedVB>)  = Load[#this]                                    : &:r793_4, ~m?
#  793|     mu793_7(DerivedVB)        = InitializeIndirection[#this]                   : &:r793_6
#  793|     r793_8(glval<Base>)       = ConvertToNonVirtualBase[DerivedVB : Base]      : mu793_5
#  793|     r793_9(glval<unknown>)    = FunctionAddress[Base]                          : 
#  793|     v793_10(void)             = Call[Base]                                     : func:r793_9, this:r793_8
#  793|     mu793_11(unknown)         = ^CallSideEffect                                : ~m?
#  793|     mu793_12(Base)            = ^IndirectMayWriteSideEffect[-1]                : &:r793_8
#  793|     r793_13(glval<MiddleVB1>) = ConvertToNonVirtualBase[DerivedVB : MiddleVB1] : mu793_5
#  793|     r793_14(glval<unknown>)   = FunctionAddress[MiddleVB1]                     : 
#  793|     v793_15(void)             = Call[MiddleVB1]                                : func:r793_14, this:r793_13
#  793|     mu793_16(unknown)         = ^CallSideEffect                                : ~m?
#  793|     mu793_17(MiddleVB1)       = ^IndirectMayWriteSideEffect[-1]                : &:r793_13
#  793|     r793_18(glval<MiddleVB2>) = ConvertToNonVirtualBase[DerivedVB : MiddleVB2] : mu793_5
#  793|     r793_19(glval<unknown>)   = FunctionAddress[MiddleVB2]                     : 
#  793|     v793_20(void)             = Call[MiddleVB2]                                : func:r793_19, this:r793_18
#  793|     mu793_21(unknown)         = ^CallSideEffect                                : ~m?
#  793|     mu793_22(MiddleVB2)       = ^IndirectMayWriteSideEffect[-1]                : &:r793_18
#  793|     r793_23(glval<String>)    = FieldAddress[derivedvb_s]                      : mu793_5
#  793|     r793_24(glval<unknown>)   = FunctionAddress[String]                        : 
#  793|     v793_25(void)             = Call[String]                                   : func:r793_24, this:r793_23
#  793|     mu793_26(unknown)         = ^CallSideEffect                                : ~m?
#  793|     mu793_27(String)          = ^IndirectMayWriteSideEffect[-1]                : &:r793_23
#  794|     v794_1(void)              = NoOp                                           : 
#  793|     v793_28(void)             = ReturnIndirection[#this]                       : &:r793_6, ~m?
#  793|     v793_29(void)             = ReturnVoid                                     : 
#  793|     v793_30(void)             = AliasedUse                                     : ~m?
#  793|     v793_31(void)             = ExitFunction                                   : 

#  795| void DerivedVB::~DerivedVB()
#  795|   Block 0
#  795|     v795_1(void)              = EnterFunction                                  : 
#  795|     mu795_2(unknown)          = AliasedDefinition                              : 
#  795|     mu795_3(unknown)          = InitializeNonLocal                             : 
#  795|     r795_4(glval<unknown>)    = VariableAddress[#this]                         : 
#  795|     mu795_5(glval<DerivedVB>) = InitializeParameter[#this]                     : &:r795_4
#  795|     r795_6(glval<DerivedVB>)  = Load[#this]                                    : &:r795_4, ~m?
#  795|     mu795_7(DerivedVB)        = InitializeIndirection[#this]                   : &:r795_6
#  796|     v796_1(void)              = NoOp                                           : 
#  796|     r796_2(glval<String>)     = FieldAddress[derivedvb_s]                      : mu795_5
#  796|     r796_3(glval<unknown>)    = FunctionAddress[~String]                       : 
#  796|     v796_4(void)              = Call[~String]                                  : func:r796_3, this:r796_2
#  796|     mu796_5(unknown)          = ^CallSideEffect                                : ~m?
#  796|     r796_6(glval<MiddleVB2>)  = ConvertToNonVirtualBase[DerivedVB : MiddleVB2] : mu795_5
#  796|     r796_7(glval<unknown>)    = FunctionAddress[~MiddleVB2]                    : 
#  796|     v796_8(void)              = Call[~MiddleVB2]                               : func:r796_7, this:r796_6
#  796|     mu796_9(unknown)          = ^CallSideEffect                                : ~m?
#  796|     r796_10(glval<MiddleVB1>) = ConvertToNonVirtualBase[DerivedVB : MiddleVB1] : mu795_5
#  796|     r796_11(glval<unknown>)   = FunctionAddress[~MiddleVB1]                    : 
#  796|     v796_12(void)             = Call[~MiddleVB1]                               : func:r796_11, this:r796_10
#  796|     mu796_13(unknown)         = ^CallSideEffect                                : ~m?
#  796|     r796_14(glval<Base>)      = ConvertToNonVirtualBase[DerivedVB : Base]      : mu795_5
#  796|     r796_15(glval<unknown>)   = FunctionAddress[~Base]                         : 
#  796|     v796_16(void)             = Call[~Base]                                    : func:r796_15, this:r796_14
#  796|     mu796_17(unknown)         = ^CallSideEffect                                : ~m?
#  795|     v795_8(void)              = ReturnIndirection[#this]                       : &:r795_6, ~m?
#  795|     v795_9(void)              = ReturnVoid                                     : 
#  795|     v795_10(void)             = AliasedUse                                     : ~m?
#  795|     v795_11(void)             = ExitFunction                                   : 

#  799| void HierarchyConversions()
#  799|   Block 0
#  799|     v799_1(void)               = EnterFunction                             : 
#  799|     mu799_2(unknown)           = AliasedDefinition                         : 
#  799|     mu799_3(unknown)           = InitializeNonLocal                        : 
#  800|     r800_1(glval<Base>)        = VariableAddress[b]                        : 
#  800|     mu800_2(Base)              = Uninitialized[b]                          : &:r800_1
#  800|     r800_3(glval<unknown>)     = FunctionAddress[Base]                     : 
#  800|     v800_4(void)               = Call[Base]                                : func:r800_3, this:r800_1
#  800|     mu800_5(unknown)           = ^CallSideEffect                           : ~m?
#  800|     mu800_6(Base)              = ^IndirectMayWriteSideEffect[-1]           : &:r800_1
#  801|     r801_1(glval<Middle>)      = VariableAddress[m]                        : 
#  801|     mu801_2(Middle)            = Uninitialized[m]                          : &:r801_1
#  801|     r801_3(glval<unknown>)     = FunctionAddress[Middle]                   : 
#  801|     v801_4(void)               = Call[Middle]                              : func:r801_3, this:r801_1
#  801|     mu801_5(unknown)           = ^CallSideEffect                           : ~m?
#  801|     mu801_6(Middle)            = ^IndirectMayWriteSideEffect[-1]           : &:r801_1
#  802|     r802_1(glval<Derived>)     = VariableAddress[d]                        : 
#  802|     mu802_2(Derived)           = Uninitialized[d]                          : &:r802_1
#  802|     r802_3(glval<unknown>)     = FunctionAddress[Derived]                  : 
#  802|     v802_4(void)               = Call[Derived]                             : func:r802_3, this:r802_1
#  802|     mu802_5(unknown)           = ^CallSideEffect                           : ~m?
#  802|     mu802_6(Derived)           = ^IndirectMayWriteSideEffect[-1]           : &:r802_1
#  804|     r804_1(glval<Base *>)      = VariableAddress[pb]                       : 
#  804|     r804_2(glval<Base>)        = VariableAddress[b]                        : 
#  804|     r804_3(Base *)             = CopyValue                                 : r804_2
#  804|     mu804_4(Base *)            = Store[pb]                                 : &:r804_1, r804_3
#  805|     r805_1(glval<Middle *>)    = VariableAddress[pm]                       : 
#  805|     r805_2(glval<Middle>)      = VariableAddress[m]                        : 
#  805|     r805_3(Middle *)           = CopyValue                                 : r805_2
#  805|     mu805_4(Middle *)          = Store[pm]                                 : &:r805_1, r805_3
#  806|     r806_1(glval<Derived *>)   = VariableAddress[pd]                       : 
#  806|     r806_2(glval<Derived>)     = VariableAddress[d]                        : 
#  806|     r806_3(Derived *)          = CopyValue                                 : r806_2
#  806|     mu806_4(Derived *)         = Store[pd]                                 : &:r806_1, r806_3
#  808|     r808_1(glval<Base>)        = VariableAddress[b]                        : 
#  808|     r808_2(glval<unknown>)     = FunctionAddress[operator=]                : 
#  808|     r808_3(glval<Middle>)      = VariableAddress[m]                        : 
#  808|     r808_4(glval<Base>)        = ConvertToNonVirtualBase[Middle : Base]    : r808_3
#  808|     r808_5(Base &)             = CopyValue                                 : r808_4
#  808|     r808_6(Base &)             = Call[operator=]                           : func:r808_2, this:r808_1, 0:r808_5
#  808|     mu808_7(unknown)           = ^CallSideEffect                           : ~m?
#  808|     v808_8(void)               = ^IndirectReadSideEffect[-1]               : &:r808_1, ~m?
#  808|     v808_9(void)               = ^BufferReadSideEffect[0]                  : &:r808_5, ~m?
#  808|     mu808_10(Base)             = ^IndirectMayWriteSideEffect[-1]           : &:r808_1
#  808|     r808_11(glval<Base>)       = CopyValue                                 : r808_6
#  809|     r809_1(glval<Base>)        = VariableAddress[b]                        : 
#  809|     r809_2(glval<unknown>)     = FunctionAddress[operator=]                : 
#  809|     r809_3(glval<Base>)        = VariableAddress[#temp809:7]               : 
#  809|     mu809_4(Base)              = Uninitialized[#temp809:7]                 : &:r809_3
#  809|     r809_5(glval<unknown>)     = FunctionAddress[Base]                     : 
#  809|     r809_6(glval<Middle>)      = VariableAddress[m]                        : 
#  809|     r809_7(glval<Base>)        = ConvertToNonVirtualBase[Middle : Base]    : r809_6
#  809|     r809_8(Base &)             = CopyValue                                 : r809_7
#  809|     v809_9(void)               = Call[Base]                                : func:r809_5, this:r809_3, 0:r809_8
#  809|     mu809_10(unknown)          = ^CallSideEffect                           : ~m?
#  809|     v809_11(void)              = ^BufferReadSideEffect[0]                  : &:r809_8, ~m?
#  809|     mu809_12(Base)             = ^IndirectMayWriteSideEffect[-1]           : &:r809_3
#  809|     r809_13(glval<Base>)       = Convert                                   : r809_3
#  809|     r809_14(Base &)            = CopyValue                                 : r809_13
#  809|     r809_15(Base &)            = Call[operator=]                           : func:r809_2, this:r809_1, 0:r809_14
#  809|     mu809_16(unknown)          = ^CallSideEffect                           : ~m?
#  809|     v809_17(void)              = ^IndirectReadSideEffect[-1]               : &:r809_1, ~m?
#  809|     v809_18(void)              = ^BufferReadSideEffect[0]                  : &:r809_14, ~m?
#  809|     mu809_19(Base)             = ^IndirectMayWriteSideEffect[-1]           : &:r809_1
#  809|     r809_20(glval<Base>)       = CopyValue                                 : r809_15
#  810|     r810_1(glval<Base>)        = VariableAddress[b]                        : 
#  810|     r810_2(glval<unknown>)     = FunctionAddress[operator=]                : 
#  810|     r810_3(glval<Base>)        = VariableAddress[#temp810:7]               : 
#  810|     mu810_4(Base)              = Uninitialized[#temp810:7]                 : &:r810_3
#  810|     r810_5(glval<unknown>)     = FunctionAddress[Base]                     : 
#  810|     r810_6(glval<Middle>)      = VariableAddress[m]                        : 
#  810|     r810_7(glval<Base>)        = ConvertToNonVirtualBase[Middle : Base]    : r810_6
#  810|     r810_8(Base &)             = CopyValue                                 : r810_7
#  810|     v810_9(void)               = Call[Base]                                : func:r810_5, this:r810_3, 0:r810_8
#  810|     mu810_10(unknown)          = ^CallSideEffect                           : ~m?
#  810|     v810_11(void)              = ^BufferReadSideEffect[0]                  : &:r810_8, ~m?
#  810|     mu810_12(Base)             = ^IndirectMayWriteSideEffect[-1]           : &:r810_3
#  810|     r810_13(glval<Base>)       = Convert                                   : r810_3
#  810|     r810_14(Base &)            = CopyValue                                 : r810_13
#  810|     r810_15(Base &)            = Call[operator=]                           : func:r810_2, this:r810_1, 0:r810_14
#  810|     mu810_16(unknown)          = ^CallSideEffect                           : ~m?
#  810|     v810_17(void)              = ^IndirectReadSideEffect[-1]               : &:r810_1, ~m?
#  810|     v810_18(void)              = ^BufferReadSideEffect[0]                  : &:r810_14, ~m?
#  810|     mu810_19(Base)             = ^IndirectMayWriteSideEffect[-1]           : &:r810_1
#  810|     r810_20(glval<Base>)       = CopyValue                                 : r810_15
#  811|     r811_1(glval<Middle *>)    = VariableAddress[pm]                       : 
#  811|     r811_2(Middle *)           = Load[pm]                                  : &:r811_1, ~m?
#  811|     r811_3(Base *)             = ConvertToNonVirtualBase[Middle : Base]    : r811_2
#  811|     r811_4(glval<Base *>)      = VariableAddress[pb]                       : 
#  811|     mu811_5(Base *)            = Store[pb]                                 : &:r811_4, r811_3
#  812|     r812_1(glval<Middle *>)    = VariableAddress[pm]                       : 
#  812|     r812_2(Middle *)           = Load[pm]                                  : &:r812_1, ~m?
#  812|     r812_3(Base *)             = ConvertToNonVirtualBase[Middle : Base]    : r812_2
#  812|     r812_4(glval<Base *>)      = VariableAddress[pb]                       : 
#  812|     mu812_5(Base *)            = Store[pb]                                 : &:r812_4, r812_3
#  813|     r813_1(glval<Middle *>)    = VariableAddress[pm]                       : 
#  813|     r813_2(Middle *)           = Load[pm]                                  : &:r813_1, ~m?
#  813|     r813_3(Base *)             = ConvertToNonVirtualBase[Middle : Base]    : r813_2
#  813|     r813_4(glval<Base *>)      = VariableAddress[pb]                       : 
#  813|     mu813_5(Base *)            = Store[pb]                                 : &:r813_4, r813_3
#  814|     r814_1(glval<Middle *>)    = VariableAddress[pm]                       : 
#  814|     r814_2(Middle *)           = Load[pm]                                  : &:r814_1, ~m?
#  814|     r814_3(Base *)             = Convert                                   : r814_2
#  814|     r814_4(glval<Base *>)      = VariableAddress[pb]                       : 
#  814|     mu814_5(Base *)            = Store[pb]                                 : &:r814_4, r814_3
#  816|     r816_1(glval<Middle>)      = VariableAddress[m]                        : 
#  816|     r816_2(glval<unknown>)     = FunctionAddress[operator=]                : 
#  816|     r816_3(glval<Base>)        = VariableAddress[b]                        : 
#  816|     r816_4(glval<Middle>)      = ConvertToDerived[Middle : Base]           : r816_3
#  816|     r816_5(glval<Middle>)      = Convert                                   : r816_4
#  816|     r816_6(Middle &)           = CopyValue                                 : r816_5
#  816|     r816_7(Middle &)           = Call[operator=]                           : func:r816_2, this:r816_1, 0:r816_6
#  816|     mu816_8(unknown)           = ^CallSideEffect                           : ~m?
#  816|     v816_9(void)               = ^IndirectReadSideEffect[-1]               : &:r816_1, ~m?
#  816|     v816_10(void)              = ^BufferReadSideEffect[0]                  : &:r816_6, ~m?
#  816|     mu816_11(Middle)           = ^IndirectMayWriteSideEffect[-1]           : &:r816_1
#  816|     r816_12(glval<Middle>)     = CopyValue                                 : r816_7
#  817|     r817_1(glval<Middle>)      = VariableAddress[m]                        : 
#  817|     r817_2(glval<unknown>)     = FunctionAddress[operator=]                : 
#  817|     r817_3(glval<Base>)        = VariableAddress[b]                        : 
#  817|     r817_4(glval<Middle>)      = ConvertToDerived[Middle : Base]           : r817_3
#  817|     r817_5(glval<Middle>)      = Convert                                   : r817_4
#  817|     r817_6(Middle &)           = CopyValue                                 : r817_5
#  817|     r817_7(Middle &)           = Call[operator=]                           : func:r817_2, this:r817_1, 0:r817_6
#  817|     mu817_8(unknown)           = ^CallSideEffect                           : ~m?
#  817|     v817_9(void)               = ^IndirectReadSideEffect[-1]               : &:r817_1, ~m?
#  817|     v817_10(void)              = ^BufferReadSideEffect[0]                  : &:r817_6, ~m?
#  817|     mu817_11(Middle)           = ^IndirectMayWriteSideEffect[-1]           : &:r817_1
#  817|     r817_12(glval<Middle>)     = CopyValue                                 : r817_7
#  818|     r818_1(glval<Base *>)      = VariableAddress[pb]                       : 
#  818|     r818_2(Base *)             = Load[pb]                                  : &:r818_1, ~m?
#  818|     r818_3(Middle *)           = ConvertToDerived[Middle : Base]           : r818_2
#  818|     r818_4(glval<Middle *>)    = VariableAddress[pm]                       : 
#  818|     mu818_5(Middle *)          = Store[pm]                                 : &:r818_4, r818_3
#  819|     r819_1(glval<Base *>)      = VariableAddress[pb]                       : 
#  819|     r819_2(Base *)             = Load[pb]                                  : &:r819_1, ~m?
#  819|     r819_3(Middle *)           = ConvertToDerived[Middle : Base]           : r819_2
#  819|     r819_4(glval<Middle *>)    = VariableAddress[pm]                       : 
#  819|     mu819_5(Middle *)          = Store[pm]                                 : &:r819_4, r819_3
#  820|     r820_1(glval<Base *>)      = VariableAddress[pb]                       : 
#  820|     r820_2(Base *)             = Load[pb]                                  : &:r820_1, ~m?
#  820|     r820_3(Middle *)           = Convert                                   : r820_2
#  820|     r820_4(glval<Middle *>)    = VariableAddress[pm]                       : 
#  820|     mu820_5(Middle *)          = Store[pm]                                 : &:r820_4, r820_3
#  822|     r822_1(glval<Base>)        = VariableAddress[b]                        : 
#  822|     r822_2(glval<unknown>)     = FunctionAddress[operator=]                : 
#  822|     r822_3(glval<Derived>)     = VariableAddress[d]                        : 
#  822|     r822_4(glval<Middle>)      = ConvertToNonVirtualBase[Derived : Middle] : r822_3
#  822|     r822_5(glval<Base>)        = ConvertToNonVirtualBase[Middle : Base]    : r822_4
#  822|     r822_6(Base &)             = CopyValue                                 : r822_5
#  822|     r822_7(Base &)             = Call[operator=]                           : func:r822_2, this:r822_1, 0:r822_6
#  822|     mu822_8(unknown)           = ^CallSideEffect                           : ~m?
#  822|     v822_9(void)               = ^IndirectReadSideEffect[-1]               : &:r822_1, ~m?
#  822|     v822_10(void)              = ^BufferReadSideEffect[0]                  : &:r822_6, ~m?
#  822|     mu822_11(Base)             = ^IndirectMayWriteSideEffect[-1]           : &:r822_1
#  822|     r822_12(glval<Base>)       = CopyValue                                 : r822_7
#  823|     r823_1(glval<Base>)        = VariableAddress[b]                        : 
#  823|     r823_2(glval<unknown>)     = FunctionAddress[operator=]                : 
#  823|     r823_3(glval<Base>)        = VariableAddress[#temp823:7]               : 
#  823|     mu823_4(Base)              = Uninitialized[#temp823:7]                 : &:r823_3
#  823|     r823_5(glval<unknown>)     = FunctionAddress[Base]                     : 
#  823|     r823_6(glval<Derived>)     = VariableAddress[d]                        : 
#  823|     r823_7(glval<Middle>)      = ConvertToNonVirtualBase[Derived : Middle] : r823_6
#  823|     r823_8(glval<Base>)        = ConvertToNonVirtualBase[Middle : Base]    : r823_7
#  823|     r823_9(Base &)             = CopyValue                                 : r823_8
#  823|     v823_10(void)              = Call[Base]                                : func:r823_5, this:r823_3, 0:r823_9
#  823|     mu823_11(unknown)          = ^CallSideEffect                           : ~m?
#  823|     v823_12(void)              = ^BufferReadSideEffect[0]                  : &:r823_9, ~m?
#  823|     mu823_13(Base)             = ^IndirectMayWriteSideEffect[-1]           : &:r823_3
#  823|     r823_14(glval<Base>)       = Convert                                   : r823_3
#  823|     r823_15(Base &)            = CopyValue                                 : r823_14
#  823|     r823_16(Base &)            = Call[operator=]                           : func:r823_2, this:r823_1, 0:r823_15
#  823|     mu823_17(unknown)          = ^CallSideEffect                           : ~m?
#  823|     v823_18(void)              = ^IndirectReadSideEffect[-1]               : &:r823_1, ~m?
#  823|     v823_19(void)              = ^BufferReadSideEffect[0]                  : &:r823_15, ~m?
#  823|     mu823_20(Base)             = ^IndirectMayWriteSideEffect[-1]           : &:r823_1
#  823|     r823_21(glval<Base>)       = CopyValue                                 : r823_16
#  824|     r824_1(glval<Base>)        = VariableAddress[b]                        : 
#  824|     r824_2(glval<unknown>)     = FunctionAddress[operator=]                : 
#  824|     r824_3(glval<Base>)        = VariableAddress[#temp824:7]               : 
#  824|     mu824_4(Base)              = Uninitialized[#temp824:7]                 : &:r824_3
#  824|     r824_5(glval<unknown>)     = FunctionAddress[Base]                     : 
#  824|     r824_6(glval<Derived>)     = VariableAddress[d]                        : 
#  824|     r824_7(glval<Middle>)      = ConvertToNonVirtualBase[Derived : Middle] : r824_6
#  824|     r824_8(glval<Base>)        = ConvertToNonVirtualBase[Middle : Base]    : r824_7
#  824|     r824_9(Base &)             = CopyValue                                 : r824_8
#  824|     v824_10(void)              = Call[Base]                                : func:r824_5, this:r824_3, 0:r824_9
#  824|     mu824_11(unknown)          = ^CallSideEffect                           : ~m?
#  824|     v824_12(void)              = ^BufferReadSideEffect[0]                  : &:r824_9, ~m?
#  824|     mu824_13(Base)             = ^IndirectMayWriteSideEffect[-1]           : &:r824_3
#  824|     r824_14(glval<Base>)       = Convert                                   : r824_3
#  824|     r824_15(Base &)            = CopyValue                                 : r824_14
#  824|     r824_16(Base &)            = Call[operator=]                           : func:r824_2, this:r824_1, 0:r824_15
#  824|     mu824_17(unknown)          = ^CallSideEffect                           : ~m?
#  824|     v824_18(void)              = ^IndirectReadSideEffect[-1]               : &:r824_1, ~m?
#  824|     v824_19(void)              = ^BufferReadSideEffect[0]                  : &:r824_15, ~m?
#  824|     mu824_20(Base)             = ^IndirectMayWriteSideEffect[-1]           : &:r824_1
#  824|     r824_21(glval<Base>)       = CopyValue                                 : r824_16
#  825|     r825_1(glval<Derived *>)   = VariableAddress[pd]                       : 
#  825|     r825_2(Derived *)          = Load[pd]                                  : &:r825_1, ~m?
#  825|     r825_3(Middle *)           = ConvertToNonVirtualBase[Derived : Middle] : r825_2
#  825|     r825_4(Base *)             = ConvertToNonVirtualBase[Middle : Base]    : r825_3
#  825|     r825_5(glval<Base *>)      = VariableAddress[pb]                       : 
#  825|     mu825_6(Base *)            = Store[pb]                                 : &:r825_5, r825_4
#  826|     r826_1(glval<Derived *>)   = VariableAddress[pd]                       : 
#  826|     r826_2(Derived *)          = Load[pd]                                  : &:r826_1, ~m?
#  826|     r826_3(Middle *)           = ConvertToNonVirtualBase[Derived : Middle] : r826_2
#  826|     r826_4(Base *)             = ConvertToNonVirtualBase[Middle : Base]    : r826_3
#  826|     r826_5(glval<Base *>)      = VariableAddress[pb]                       : 
#  826|     mu826_6(Base *)            = Store[pb]                                 : &:r826_5, r826_4
#  827|     r827_1(glval<Derived *>)   = VariableAddress[pd]                       : 
#  827|     r827_2(Derived *)          = Load[pd]                                  : &:r827_1, ~m?
#  827|     r827_3(Middle *)           = ConvertToNonVirtualBase[Derived : Middle] : r827_2
#  827|     r827_4(Base *)             = ConvertToNonVirtualBase[Middle : Base]    : r827_3
#  827|     r827_5(glval<Base *>)      = VariableAddress[pb]                       : 
#  827|     mu827_6(Base *)            = Store[pb]                                 : &:r827_5, r827_4
#  828|     r828_1(glval<Derived *>)   = VariableAddress[pd]                       : 
#  828|     r828_2(Derived *)          = Load[pd]                                  : &:r828_1, ~m?
#  828|     r828_3(Base *)             = Convert                                   : r828_2
#  828|     r828_4(glval<Base *>)      = VariableAddress[pb]                       : 
#  828|     mu828_5(Base *)            = Store[pb]                                 : &:r828_4, r828_3
#  830|     r830_1(glval<Derived>)     = VariableAddress[d]                        : 
#  830|     r830_2(glval<unknown>)     = FunctionAddress[operator=]                : 
#  830|     r830_3(glval<Base>)        = VariableAddress[b]                        : 
#  830|     r830_4(glval<Middle>)      = ConvertToDerived[Middle : Base]           : r830_3
#  830|     r830_5(glval<Derived>)     = ConvertToDerived[Derived : Middle]        : r830_4
#  830|     r830_6(glval<Derived>)     = Convert                                   : r830_5
#  830|     r830_7(Derived &)          = CopyValue                                 : r830_6
#  830|     r830_8(Derived &)          = Call[operator=]                           : func:r830_2, this:r830_1, 0:r830_7
#  830|     mu830_9(unknown)           = ^CallSideEffect                           : ~m?
#  830|     v830_10(void)              = ^IndirectReadSideEffect[-1]               : &:r830_1, ~m?
#  830|     v830_11(void)              = ^BufferReadSideEffect[0]                  : &:r830_7, ~m?
#  830|     mu830_12(Derived)          = ^IndirectMayWriteSideEffect[-1]           : &:r830_1
#  830|     r830_13(glval<Derived>)    = CopyValue                                 : r830_8
#  831|     r831_1(glval<Derived>)     = VariableAddress[d]                        : 
#  831|     r831_2(glval<unknown>)     = FunctionAddress[operator=]                : 
#  831|     r831_3(glval<Base>)        = VariableAddress[b]                        : 
#  831|     r831_4(glval<Middle>)      = ConvertToDerived[Middle : Base]           : r831_3
#  831|     r831_5(glval<Derived>)     = ConvertToDerived[Derived : Middle]        : r831_4
#  831|     r831_6(glval<Derived>)     = Convert                                   : r831_5
#  831|     r831_7(Derived &)          = CopyValue                                 : r831_6
#  831|     r831_8(Derived &)          = Call[operator=]                           : func:r831_2, this:r831_1, 0:r831_7
#  831|     mu831_9(unknown)           = ^CallSideEffect                           : ~m?
#  831|     v831_10(void)              = ^IndirectReadSideEffect[-1]               : &:r831_1, ~m?
#  831|     v831_11(void)              = ^BufferReadSideEffect[0]                  : &:r831_7, ~m?
#  831|     mu831_12(Derived)          = ^IndirectMayWriteSideEffect[-1]           : &:r831_1
#  831|     r831_13(glval<Derived>)    = CopyValue                                 : r831_8
#  832|     r832_1(glval<Base *>)      = VariableAddress[pb]                       : 
#  832|     r832_2(Base *)             = Load[pb]                                  : &:r832_1, ~m?
#  832|     r832_3(Middle *)           = ConvertToDerived[Middle : Base]           : r832_2
#  832|     r832_4(Derived *)          = ConvertToDerived[Derived : Middle]        : r832_3
#  832|     r832_5(glval<Derived *>)   = VariableAddress[pd]                       : 
#  832|     mu832_6(Derived *)         = Store[pd]                                 : &:r832_5, r832_4
#  833|     r833_1(glval<Base *>)      = VariableAddress[pb]                       : 
#  833|     r833_2(Base *)             = Load[pb]                                  : &:r833_1, ~m?
#  833|     r833_3(Middle *)           = ConvertToDerived[Middle : Base]           : r833_2
#  833|     r833_4(Derived *)          = ConvertToDerived[Derived : Middle]        : r833_3
#  833|     r833_5(glval<Derived *>)   = VariableAddress[pd]                       : 
#  833|     mu833_6(Derived *)         = Store[pd]                                 : &:r833_5, r833_4
#  834|     r834_1(glval<Base *>)      = VariableAddress[pb]                       : 
#  834|     r834_2(Base *)             = Load[pb]                                  : &:r834_1, ~m?
#  834|     r834_3(Derived *)          = Convert                                   : r834_2
#  834|     r834_4(glval<Derived *>)   = VariableAddress[pd]                       : 
#  834|     mu834_5(Derived *)         = Store[pd]                                 : &:r834_4, r834_3
#  836|     r836_1(glval<MiddleVB1 *>) = VariableAddress[pmv]                      : 
#  836|     r836_2(MiddleVB1 *)        = Constant[0]                               : 
#  836|     mu836_3(MiddleVB1 *)       = Store[pmv]                                : &:r836_1, r836_2
#  837|     r837_1(glval<DerivedVB *>) = VariableAddress[pdv]                      : 
#  837|     r837_2(DerivedVB *)        = Constant[0]                               : 
#  837|     mu837_3(DerivedVB *)       = Store[pdv]                                : &:r837_1, r837_2
#  838|     r838_1(glval<MiddleVB1 *>) = VariableAddress[pmv]                      : 
#  838|     r838_2(MiddleVB1 *)        = Load[pmv]                                 : &:r838_1, ~m?
#  838|     r838_3(Base *)             = ConvertToVirtualBase[MiddleVB1 : Base]    : r838_2
#  838|     r838_4(glval<Base *>)      = VariableAddress[pb]                       : 
#  838|     mu838_5(Base *)            = Store[pb]                                 : &:r838_4, r838_3
#  839|     r839_1(glval<DerivedVB *>) = VariableAddress[pdv]                      : 
#  839|     r839_2(DerivedVB *)        = Load[pdv]                                 : &:r839_1, ~m?
#  839|     r839_3(Base *)             = ConvertToVirtualBase[DerivedVB : Base]    : r839_2
#  839|     r839_4(glval<Base *>)      = VariableAddress[pb]                       : 
#  839|     mu839_5(Base *)            = Store[pb]                                 : &:r839_4, r839_3
#  840|     v840_1(void)               = NoOp                                      : 
#  840|     r840_2(glval<Derived>)     = VariableAddress[d]                        : 
#  840|     r840_3(glval<unknown>)     = FunctionAddress[~Derived]                 : 
#  840|     v840_4(void)               = Call[~Derived]                            : func:r840_3, this:r840_2
#  840|     mu840_5(unknown)           = ^CallSideEffect                           : ~m?
#  840|     v840_6(void)               = ^IndirectReadSideEffect[-1]               : &:r840_2, ~m?
#  840|     mu840_7(Derived)           = ^IndirectMayWriteSideEffect[-1]           : &:r840_2
#  840|     r840_8(glval<Middle>)      = VariableAddress[m]                        : 
#  840|     r840_9(glval<unknown>)     = FunctionAddress[~Middle]                  : 
#  840|     v840_10(void)              = Call[~Middle]                             : func:r840_9, this:r840_8
#  840|     mu840_11(unknown)          = ^CallSideEffect                           : ~m?
#  840|     v840_12(void)              = ^IndirectReadSideEffect[-1]               : &:r840_8, ~m?
#  840|     mu840_13(Middle)           = ^IndirectMayWriteSideEffect[-1]           : &:r840_8
#  840|     r840_14(glval<Base>)       = VariableAddress[b]                        : 
#  840|     r840_15(glval<unknown>)    = FunctionAddress[~Base]                    : 
#  840|     v840_16(void)              = Call[~Base]                               : func:r840_15, this:r840_14
#  840|     mu840_17(unknown)          = ^CallSideEffect                           : ~m?
#  840|     v840_18(void)              = ^IndirectReadSideEffect[-1]               : &:r840_14, ~m?
#  840|     mu840_19(Base)             = ^IndirectMayWriteSideEffect[-1]           : &:r840_14
#  799|     v799_4(void)               = ReturnVoid                                : 
#  799|     v799_5(void)               = AliasedUse                                : ~m?
#  799|     v799_6(void)               = ExitFunction                              : 

#  842| void PolymorphicBase::PolymorphicBase()
#  842|   Block 0
#  842|     v842_1(void)                    = EnterFunction                : 
#  842|     mu842_2(unknown)                = AliasedDefinition            : 
#  842|     mu842_3(unknown)                = InitializeNonLocal           : 
#  842|     r842_4(glval<unknown>)          = VariableAddress[#this]       : 
#  842|     mu842_5(glval<PolymorphicBase>) = InitializeParameter[#this]   : &:r842_4
#  842|     r842_6(glval<PolymorphicBase>)  = Load[#this]                  : &:r842_4, ~m?
#  842|     mu842_7(PolymorphicBase)        = InitializeIndirection[#this] : &:r842_6
#  842|     v842_8(void)                    = NoOp                         : 
#  842|     v842_9(void)                    = ReturnIndirection[#this]     : &:r842_6, ~m?
#  842|     v842_10(void)                   = ReturnVoid                   : 
#  842|     v842_11(void)                   = AliasedUse                   : ~m?
#  842|     v842_12(void)                   = ExitFunction                 : 

#  846| void PolymorphicDerived::PolymorphicDerived()
#  846|   Block 0
#  846|     v846_1(void)                       = EnterFunction                                                 : 
#  846|     mu846_2(unknown)                   = AliasedDefinition                                             : 
#  846|     mu846_3(unknown)                   = InitializeNonLocal                                            : 
#  846|     r846_4(glval<unknown>)             = VariableAddress[#this]                                        : 
#  846|     mu846_5(glval<PolymorphicDerived>) = InitializeParameter[#this]                                    : &:r846_4
#  846|     r846_6(glval<PolymorphicDerived>)  = Load[#this]                                                   : &:r846_4, ~m?
#  846|     mu846_7(PolymorphicDerived)        = InitializeIndirection[#this]                                  : &:r846_6
#  846|     r846_8(glval<PolymorphicBase>)     = ConvertToNonVirtualBase[PolymorphicDerived : PolymorphicBase] : mu846_5
#  846|     r846_9(glval<unknown>)             = FunctionAddress[PolymorphicBase]                              : 
#  846|     v846_10(void)                      = Call[PolymorphicBase]                                         : func:r846_9, this:r846_8
#  846|     mu846_11(unknown)                  = ^CallSideEffect                                               : ~m?
#  846|     mu846_12(PolymorphicBase)          = ^IndirectMayWriteSideEffect[-1]                               : &:r846_8
#  846|     v846_13(void)                      = NoOp                                                          : 
#  846|     v846_14(void)                      = ReturnIndirection[#this]                                      : &:r846_6, ~m?
#  846|     v846_15(void)                      = ReturnVoid                                                    : 
#  846|     v846_16(void)                      = AliasedUse                                                    : ~m?
#  846|     v846_17(void)                      = ExitFunction                                                  : 

#  846| void PolymorphicDerived::~PolymorphicDerived()
#  846|   Block 0
#  846|     v846_1(void)                       = EnterFunction                                                 : 
#  846|     mu846_2(unknown)                   = AliasedDefinition                                             : 
#  846|     mu846_3(unknown)                   = InitializeNonLocal                                            : 
#  846|     r846_4(glval<unknown>)             = VariableAddress[#this]                                        : 
#  846|     mu846_5(glval<PolymorphicDerived>) = InitializeParameter[#this]                                    : &:r846_4
#  846|     r846_6(glval<PolymorphicDerived>)  = Load[#this]                                                   : &:r846_4, ~m?
#  846|     mu846_7(PolymorphicDerived)        = InitializeIndirection[#this]                                  : &:r846_6
#-----|     v0_1(void)                         = NoOp                                                          : 
#  846|     r846_8(glval<PolymorphicBase>)     = ConvertToNonVirtualBase[PolymorphicDerived : PolymorphicBase] : mu846_5
#  846|     r846_9(glval<unknown>)             = FunctionAddress[~PolymorphicBase]                             : 
#  846|     v846_10(void)                      = Call[~PolymorphicBase]                                        : func:r846_9, this:r846_8
#  846|     mu846_11(unknown)                  = ^CallSideEffect                                               : ~m?
#  846|     v846_12(void)                      = ReturnIndirection[#this]                                      : &:r846_6, ~m?
#  846|     v846_13(void)                      = ReturnVoid                                                    : 
#  846|     v846_14(void)                      = AliasedUse                                                    : ~m?
#  846|     v846_15(void)                      = ExitFunction                                                  : 

#  849| void DynamicCast()
#  849|   Block 0
#  849|     v849_1(void)                        = EnterFunction                        : 
#  849|     mu849_2(unknown)                    = AliasedDefinition                    : 
#  849|     mu849_3(unknown)                    = InitializeNonLocal                   : 
#  850|     r850_1(glval<PolymorphicBase>)      = VariableAddress[b]                   : 
#  850|     mu850_2(PolymorphicBase)            = Uninitialized[b]                     : &:r850_1
#  850|     r850_3(glval<unknown>)              = FunctionAddress[PolymorphicBase]     : 
#  850|     v850_4(void)                        = Call[PolymorphicBase]                : func:r850_3, this:r850_1
#  850|     mu850_5(unknown)                    = ^CallSideEffect                      : ~m?
#  850|     mu850_6(PolymorphicBase)            = ^IndirectMayWriteSideEffect[-1]      : &:r850_1
#  851|     r851_1(glval<PolymorphicDerived>)   = VariableAddress[d]                   : 
#  851|     mu851_2(PolymorphicDerived)         = Uninitialized[d]                     : &:r851_1
#  851|     r851_3(glval<unknown>)              = FunctionAddress[PolymorphicDerived]  : 
#  851|     v851_4(void)                        = Call[PolymorphicDerived]             : func:r851_3, this:r851_1
#  851|     mu851_5(unknown)                    = ^CallSideEffect                      : ~m?
#  851|     mu851_6(PolymorphicDerived)         = ^IndirectMayWriteSideEffect[-1]      : &:r851_1
#  853|     r853_1(glval<PolymorphicBase *>)    = VariableAddress[pb]                  : 
#  853|     r853_2(glval<PolymorphicBase>)      = VariableAddress[b]                   : 
#  853|     r853_3(PolymorphicBase *)           = CopyValue                            : r853_2
#  853|     mu853_4(PolymorphicBase *)          = Store[pb]                            : &:r853_1, r853_3
#  854|     r854_1(glval<PolymorphicDerived *>) = VariableAddress[pd]                  : 
#  854|     r854_2(glval<PolymorphicDerived>)   = VariableAddress[d]                   : 
#  854|     r854_3(PolymorphicDerived *)        = CopyValue                            : r854_2
#  854|     mu854_4(PolymorphicDerived *)       = Store[pd]                            : &:r854_1, r854_3
#  857|     r857_1(glval<PolymorphicDerived *>) = VariableAddress[pd]                  : 
#  857|     r857_2(PolymorphicDerived *)        = Load[pd]                             : &:r857_1, ~m?
#  857|     r857_3(PolymorphicBase *)           = CheckedConvertOrNull                 : r857_2
#  857|     r857_4(glval<PolymorphicBase *>)    = VariableAddress[pb]                  : 
#  857|     mu857_5(PolymorphicBase *)          = Store[pb]                            : &:r857_4, r857_3
#  858|     r858_1(glval<PolymorphicBase &>)    = VariableAddress[rb]                  : 
#  858|     r858_2(glval<PolymorphicDerived>)   = VariableAddress[d]                   : 
#  858|     r858_3(glval<PolymorphicBase>)      = CheckedConvertOrThrow                : r858_2
#  858|     r858_4(PolymorphicBase &)           = CopyValue                            : r858_3
#  858|     mu858_5(PolymorphicBase &)          = Store[rb]                            : &:r858_1, r858_4
#  860|     r860_1(glval<PolymorphicBase *>)    = VariableAddress[pb]                  : 
#  860|     r860_2(PolymorphicBase *)           = Load[pb]                             : &:r860_1, ~m?
#  860|     r860_3(PolymorphicDerived *)        = CheckedConvertOrNull                 : r860_2
#  860|     r860_4(glval<PolymorphicDerived *>) = VariableAddress[pd]                  : 
#  860|     mu860_5(PolymorphicDerived *)       = Store[pd]                            : &:r860_4, r860_3
#  861|     r861_1(glval<PolymorphicDerived &>) = VariableAddress[rd]                  : 
#  861|     r861_2(glval<PolymorphicBase>)      = VariableAddress[b]                   : 
#  861|     r861_3(glval<PolymorphicDerived>)   = CheckedConvertOrThrow                : r861_2
#  861|     r861_4(PolymorphicDerived &)        = CopyValue                            : r861_3
#  861|     mu861_5(PolymorphicDerived &)       = Store[rd]                            : &:r861_1, r861_4
#  863|     r863_1(glval<void *>)               = VariableAddress[pv]                  : 
#  863|     r863_2(glval<PolymorphicBase *>)    = VariableAddress[pb]                  : 
#  863|     r863_3(PolymorphicBase *)           = Load[pb]                             : &:r863_2, ~m?
#  863|     r863_4(void *)                      = CompleteObjectAddress                : r863_3
#  863|     mu863_5(void *)                     = Store[pv]                            : &:r863_1, r863_4
#  864|     r864_1(glval<void *>)               = VariableAddress[pcv]                 : 
#  864|     r864_2(glval<PolymorphicDerived *>) = VariableAddress[pd]                  : 
#  864|     r864_3(PolymorphicDerived *)        = Load[pd]                             : &:r864_2, ~m?
#  864|     r864_4(void *)                      = CompleteObjectAddress                : r864_3
#  864|     mu864_5(void *)                     = Store[pcv]                           : &:r864_1, r864_4
#  865|     v865_1(void)                        = NoOp                                 : 
#  865|     r865_2(glval<PolymorphicDerived>)   = VariableAddress[d]                   : 
#  865|     r865_3(glval<unknown>)              = FunctionAddress[~PolymorphicDerived] : 
#  865|     v865_4(void)                        = Call[~PolymorphicDerived]            : func:r865_3, this:r865_2
#  865|     mu865_5(unknown)                    = ^CallSideEffect                      : ~m?
#  865|     v865_6(void)                        = ^IndirectReadSideEffect[-1]          : &:r865_2, ~m?
#  865|     mu865_7(PolymorphicDerived)         = ^IndirectMayWriteSideEffect[-1]      : &:r865_2
#  865|     r865_8(glval<PolymorphicBase>)      = VariableAddress[b]                   : 
#  865|     r865_9(glval<unknown>)              = FunctionAddress[~PolymorphicBase]    : 
#  865|     v865_10(void)                       = Call[~PolymorphicBase]               : func:r865_9, this:r865_8
#  865|     mu865_11(unknown)                   = ^CallSideEffect                      : ~m?
#  865|     v865_12(void)                       = ^IndirectReadSideEffect[-1]          : &:r865_8, ~m?
#  865|     mu865_13(PolymorphicBase)           = ^IndirectMayWriteSideEffect[-1]      : &:r865_8
#  849|     v849_4(void)                        = ReturnVoid                           : 
#  849|     v849_5(void)                        = AliasedUse                           : ~m?
#  849|     v849_6(void)                        = ExitFunction                         : 

#  867| void String::String()
#  867|   Block 0
#  867|     v867_1(void)           = EnterFunction                   : 
#  867|     mu867_2(unknown)       = AliasedDefinition               : 
#  867|     mu867_3(unknown)       = InitializeNonLocal              : 
#  867|     r867_4(glval<unknown>) = VariableAddress[#this]          : 
#  867|     mu867_5(glval<String>) = InitializeParameter[#this]      : &:r867_4
#  867|     r867_6(glval<String>)  = Load[#this]                     : &:r867_4, ~m?
#  867|     mu867_7(String)        = InitializeIndirection[#this]    : &:r867_6
#  868|     r868_1(glval<unknown>) = FunctionAddress[String]         : 
#  868|     r868_2(glval<char[1]>) = StringConstant[""]              : 
#  868|     r868_3(char *)         = Convert                         : r868_2
#  868|     v868_4(void)           = Call[String]                    : func:r868_1, this:mu867_5, 0:r868_3
#  868|     mu868_5(unknown)       = ^CallSideEffect                 : ~m?
#  868|     v868_6(void)           = ^BufferReadSideEffect[0]        : &:r868_3, ~m?
#  868|     mu868_7(String)        = ^IndirectMayWriteSideEffect[-1] : &:mu867_5
#  869|     v869_1(void)           = NoOp                            : 
#  867|     v867_8(void)           = ReturnIndirection[#this]        : &:r867_6, ~m?
#  867|     v867_9(void)           = ReturnVoid                      : 
#  867|     v867_10(void)          = AliasedUse                      : ~m?
#  867|     v867_11(void)          = ExitFunction                    : 

#  871| void ArrayConversions()
#  871|   Block 0
#  871|     v871_1(void)              = EnterFunction          : 
#  871|     mu871_2(unknown)          = AliasedDefinition      : 
#  871|     mu871_3(unknown)          = InitializeNonLocal     : 
#  872|     r872_1(glval<char[5]>)    = VariableAddress[a]     : 
#  872|     mu872_2(char[5])          = Uninitialized[a]       : &:r872_1
#  873|     r873_1(glval<char *>)     = VariableAddress[p]     : 
#  873|     r873_2(glval<char[5]>)    = VariableAddress[a]     : 
#  873|     r873_3(char *)            = Convert                : r873_2
#  873|     r873_4(char *)            = Convert                : r873_3
#  873|     mu873_5(char *)           = Store[p]               : &:r873_1, r873_4
#  874|     r874_1(glval<char[5]>)    = StringConstant["test"] : 
#  874|     r874_2(char *)            = Convert                : r874_1
#  874|     r874_3(glval<char *>)     = VariableAddress[p]     : 
#  874|     mu874_4(char *)           = Store[p]               : &:r874_3, r874_2
#  875|     r875_1(glval<char[5]>)    = VariableAddress[a]     : 
#  875|     r875_2(char *)            = Convert                : r875_1
#  875|     r875_3(int)               = Constant[0]            : 
#  875|     r875_4(glval<char>)       = PointerAdd[1]          : r875_2, r875_3
#  875|     r875_5(char *)            = CopyValue              : r875_4
#  875|     r875_6(char *)            = Convert                : r875_5
#  875|     r875_7(glval<char *>)     = VariableAddress[p]     : 
#  875|     mu875_8(char *)           = Store[p]               : &:r875_7, r875_6
#  876|     r876_1(glval<char[5]>)    = StringConstant["test"] : 
#  876|     r876_2(char *)            = Convert                : r876_1
#  876|     r876_3(int)               = Constant[0]            : 
#  876|     r876_4(glval<char>)       = PointerAdd[1]          : r876_2, r876_3
#  876|     r876_5(char *)            = CopyValue              : r876_4
#  876|     r876_6(glval<char *>)     = VariableAddress[p]     : 
#  876|     mu876_7(char *)           = Store[p]               : &:r876_6, r876_5
#  877|     r877_1(glval<char(&)[5]>) = VariableAddress[ra]    : 
#  877|     r877_2(glval<char[5]>)    = VariableAddress[a]     : 
#  877|     r877_3(char(&)[5])        = CopyValue              : r877_2
#  877|     mu877_4(char(&)[5])       = Store[ra]              : &:r877_1, r877_3
#  878|     r878_1(glval<char(&)[5]>) = VariableAddress[rs]    : 
#  878|     r878_2(glval<char[5]>)    = StringConstant["test"] : 
#  878|     r878_3(char(&)[5])        = CopyValue              : r878_2
#  878|     mu878_4(char(&)[5])       = Store[rs]              : &:r878_1, r878_3
#  879|     r879_1(glval<char(*)[5]>) = VariableAddress[pa]    : 
#  879|     r879_2(glval<char[5]>)    = VariableAddress[a]     : 
#  879|     r879_3(char(*)[5])        = CopyValue              : r879_2
#  879|     r879_4(char(*)[5])        = Convert                : r879_3
#  879|     mu879_5(char(*)[5])       = Store[pa]              : &:r879_1, r879_4
#  880|     r880_1(glval<char[5]>)    = StringConstant["test"] : 
#  880|     r880_2(char(*)[5])        = CopyValue              : r880_1
#  880|     r880_3(glval<char(*)[5]>) = VariableAddress[pa]    : 
#  880|     mu880_4(char(*)[5])       = Store[pa]              : &:r880_3, r880_2
#  881|     v881_1(void)              = NoOp                   : 
#  871|     v871_4(void)              = ReturnVoid             : 
#  871|     v871_5(void)              = AliasedUse             : ~m?
#  871|     v871_6(void)              = ExitFunction           : 

#  883| void FuncPtrConversions(int(*)(int), void*)
#  883|   Block 0
#  883|     v883_1(void)             = EnterFunction            : 
#  883|     mu883_2(unknown)         = AliasedDefinition        : 
#  883|     mu883_3(unknown)         = InitializeNonLocal       : 
#  883|     r883_4(glval<..(*)(..)>) = VariableAddress[pfn]     : 
#  883|     mu883_5(..(*)(..))       = InitializeParameter[pfn] : &:r883_4
#  883|     r883_6(glval<void *>)    = VariableAddress[p]       : 
#  883|     mu883_7(void *)          = InitializeParameter[p]   : &:r883_6
#  883|     r883_8(void *)           = Load[p]                  : &:r883_6, ~m?
#  883|     mu883_9(unknown)         = InitializeIndirection[p] : &:r883_8
#  884|     r884_1(glval<..(*)(..)>) = VariableAddress[pfn]     : 
#  884|     r884_2(..(*)(..))        = Load[pfn]                : &:r884_1, ~m?
#  884|     r884_3(void *)           = Convert                  : r884_2
#  884|     r884_4(glval<void *>)    = VariableAddress[p]       : 
#  884|     mu884_5(void *)          = Store[p]                 : &:r884_4, r884_3
#  885|     r885_1(glval<void *>)    = VariableAddress[p]       : 
#  885|     r885_2(void *)           = Load[p]                  : &:r885_1, ~m?
#  885|     r885_3(..(*)(..))        = Convert                  : r885_2
#  885|     r885_4(glval<..(*)(..)>) = VariableAddress[pfn]     : 
#  885|     mu885_5(..(*)(..))       = Store[pfn]               : &:r885_4, r885_3
#  886|     v886_1(void)             = NoOp                     : 
#  883|     v883_10(void)            = ReturnIndirection[p]     : &:r883_8, ~m?
#  883|     v883_11(void)            = ReturnVoid               : 
#  883|     v883_12(void)            = AliasedUse               : ~m?
#  883|     v883_13(void)            = ExitFunction             : 

#  888| void VAListUsage(int, __va_list_tag[1])
#  888|   Block 0
#  888|     v888_1(void)                    = EnterFunction               : 
#  888|     mu888_2(unknown)                = AliasedDefinition           : 
#  888|     mu888_3(unknown)                = InitializeNonLocal          : 
#  888|     r888_4(glval<int>)              = VariableAddress[x]          : 
#  888|     mu888_5(int)                    = InitializeParameter[x]      : &:r888_4
#  888|     r888_6(glval<__va_list_tag *>)  = VariableAddress[args]       : 
#  888|     mu888_7(__va_list_tag *)        = InitializeParameter[args]   : &:r888_6
#  888|     r888_8(__va_list_tag *)         = Load[args]                  : &:r888_6, ~m?
#  888|     mu888_9(unknown)                = InitializeIndirection[args] : &:r888_8
#  889|     r889_1(glval<__va_list_tag[1]>) = VariableAddress[args2]      : 
#  889|     mu889_2(__va_list_tag[1])       = Uninitialized[args2]        : &:r889_1
#  890|     r890_1(glval<__va_list_tag *>)  = VariableAddress[args]       : 
#  890|     r890_2(__va_list_tag *)         = Load[args]                  : &:r890_1, ~m?
#  890|     r890_3(__va_list_tag)           = Load[?]                     : &:r890_2, ~m?
#  890|     r890_4(glval<__va_list_tag[1]>) = VariableAddress[args2]      : 
#  890|     r890_5(__va_list_tag *)         = Convert                     : r890_4
#  890|     mu890_6(__va_list_tag)          = Store[?]                    : &:r890_5, r890_3
#  891|     r891_1(glval<double>)           = VariableAddress[d]          : 
#  891|     r891_2(glval<__va_list_tag *>)  = VariableAddress[args]       : 
#  891|     r891_3(__va_list_tag *)         = Load[args]                  : &:r891_2, ~m?
#  891|     r891_4(__va_list_tag)           = Load[?]                     : &:r891_3, ~m?
#  891|     r891_5(glval<double>)           = VarArg                      : r891_4
#  891|     r891_6(__va_list_tag)           = NextVarArg                  : r891_4
#  891|     mu891_7(__va_list_tag)          = Store[?]                    : &:r891_3, r891_6
#  891|     r891_8(double)                  = Load[?]                     : &:r891_5, ~m?
#  891|     mu891_9(double)                 = Store[d]                    : &:r891_1, r891_8
#  892|     r892_1(glval<float>)            = VariableAddress[f]          : 
#  892|     r892_2(glval<__va_list_tag *>)  = VariableAddress[args]       : 
#  892|     r892_3(__va_list_tag *)         = Load[args]                  : &:r892_2, ~m?
#  892|     r892_4(__va_list_tag)           = Load[?]                     : &:r892_3, ~m?
#  892|     r892_5(glval<int>)              = VarArg                      : r892_4
#  892|     r892_6(__va_list_tag)           = NextVarArg                  : r892_4
#  892|     mu892_7(__va_list_tag)          = Store[?]                    : &:r892_3, r892_6
#  892|     r892_8(int)                     = Load[?]                     : &:r892_5, ~m?
#  892|     r892_9(float)                   = Convert                     : r892_8
#  892|     mu892_10(float)                 = Store[f]                    : &:r892_1, r892_9
#  893|     r893_1(glval<__va_list_tag[1]>) = VariableAddress[args2]      : 
#  893|     r893_2(__va_list_tag *)         = Convert                     : r893_1
#  893|     v893_3(void)                    = VarArgsEnd                  : r893_2
#  894|     v894_1(void)                    = NoOp                        : 
#  888|     v888_10(void)                   = ReturnIndirection[args]     : &:r888_8, ~m?
#  888|     v888_11(void)                   = ReturnVoid                  : 
#  888|     v888_12(void)                   = AliasedUse                  : ~m?
#  888|     v888_13(void)                   = ExitFunction                : 

#  896| void VarArgUsage(int)
#  896|   Block 0
#  896|     v896_1(void)                    = EnterFunction                    : 
#  896|     mu896_2(unknown)                = AliasedDefinition                : 
#  896|     mu896_3(unknown)                = InitializeNonLocal               : 
#  896|     r896_4(glval<int>)              = VariableAddress[x]               : 
#  896|     mu896_5(int)                    = InitializeParameter[x]           : &:r896_4
#  896|     r896_6(glval<unknown>)          = VariableAddress[#ellipsis]       : 
#  896|     mu896_7(unknown[11])            = InitializeParameter[#ellipsis]   : &:r896_6
#  896|     r896_8(unknown[11])             = Load[#ellipsis]                  : &:r896_6, ~m?
#  896|     mu896_9(unknown)                = InitializeIndirection[#ellipsis] : &:r896_8
#  897|     r897_1(glval<__va_list_tag[1]>) = VariableAddress[args]            : 
#  897|     mu897_2(__va_list_tag[1])       = Uninitialized[args]              : &:r897_1
#  899|     r899_1(glval<unknown>)          = VariableAddress[#ellipsis]       : 
#  899|     r899_2(__va_list_tag)           = VarArgsStart                     : r899_1
#  899|     r899_3(glval<__va_list_tag[1]>) = VariableAddress[args]            : 
#  899|     r899_4(__va_list_tag *)         = Convert                          : r899_3
#  899|     mu899_5(__va_list_tag)          = Store[?]                         : &:r899_4, r899_2
#  900|     r900_1(glval<__va_list_tag[1]>) = VariableAddress[args2]           : 
#  900|     mu900_2(__va_list_tag[1])       = Uninitialized[args2]             : &:r900_1
#  901|     r901_1(glval<__va_list_tag[1]>) = VariableAddress[args]            : 
#  901|     r901_2(__va_list_tag *)         = Convert                          : r901_1
#  901|     r901_3(__va_list_tag)           = Load[?]                          : &:r901_2, ~m?
#  901|     r901_4(glval<__va_list_tag[1]>) = VariableAddress[args2]           : 
#  901|     r901_5(__va_list_tag *)         = Convert                          : r901_4
#  901|     mu901_6(__va_list_tag)          = Store[?]                         : &:r901_5, r901_3
#  902|     r902_1(glval<double>)           = VariableAddress[d]               : 
#  902|     r902_2(glval<__va_list_tag[1]>) = VariableAddress[args]            : 
#  902|     r902_3(__va_list_tag *)         = Convert                          : r902_2
#  902|     r902_4(__va_list_tag)           = Load[?]                          : &:r902_3, ~m?
#  902|     r902_5(glval<double>)           = VarArg                           : r902_4
#  902|     r902_6(__va_list_tag)           = NextVarArg                       : r902_4
#  902|     mu902_7(__va_list_tag)          = Store[?]                         : &:r902_3, r902_6
#  902|     r902_8(double)                  = Load[?]                          : &:r902_5, ~m?
#  902|     mu902_9(double)                 = Store[d]                         : &:r902_1, r902_8
#  903|     r903_1(glval<float>)            = VariableAddress[f]               : 
#  903|     r903_2(glval<__va_list_tag[1]>) = VariableAddress[args]            : 
#  903|     r903_3(__va_list_tag *)         = Convert                          : r903_2
#  903|     r903_4(__va_list_tag)           = Load[?]                          : &:r903_3, ~m?
#  903|     r903_5(glval<int>)              = VarArg                           : r903_4
#  903|     r903_6(__va_list_tag)           = NextVarArg                       : r903_4
#  903|     mu903_7(__va_list_tag)          = Store[?]                         : &:r903_3, r903_6
#  903|     r903_8(int)                     = Load[?]                          : &:r903_5, ~m?
#  903|     r903_9(float)                   = Convert                          : r903_8
#  903|     mu903_10(float)                 = Store[f]                         : &:r903_1, r903_9
#  904|     r904_1(glval<__va_list_tag[1]>) = VariableAddress[args]            : 
#  904|     r904_2(__va_list_tag *)         = Convert                          : r904_1
#  904|     v904_3(void)                    = VarArgsEnd                       : r904_2
#  905|     r905_1(glval<unknown>)          = FunctionAddress[VAListUsage]     : 
#  905|     r905_2(glval<int>)              = VariableAddress[x]               : 
#  905|     r905_3(int)                     = Load[x]                          : &:r905_2, ~m?
#  905|     r905_4(glval<__va_list_tag[1]>) = VariableAddress[args2]           : 
#  905|     r905_5(__va_list_tag *)         = Convert                          : r905_4
#  905|     v905_6(void)                    = Call[VAListUsage]                : func:r905_1, 0:r905_3, 1:r905_5
#  905|     mu905_7(unknown)                = ^CallSideEffect                  : ~m?
#  905|     v905_8(void)                    = ^BufferReadSideEffect[1]         : &:r905_5, ~m?
#  905|     mu905_9(unknown)                = ^BufferMayWriteSideEffect[1]     : &:r905_5
#  906|     r906_1(glval<__va_list_tag[1]>) = VariableAddress[args2]           : 
#  906|     r906_2(__va_list_tag *)         = Convert                          : r906_1
#  906|     v906_3(void)                    = VarArgsEnd                       : r906_2
#  907|     v907_1(void)                    = NoOp                             : 
#  896|     v896_10(void)                   = ReturnVoid                       : 
#  896|     v896_11(void)                   = AliasedUse                       : ~m?
#  896|     v896_12(void)                   = ExitFunction                     : 

#  909| void CastToVoid(int)
#  909|   Block 0
#  909|     v909_1(void)       = EnterFunction          : 
#  909|     mu909_2(unknown)   = AliasedDefinition      : 
#  909|     mu909_3(unknown)   = InitializeNonLocal     : 
#  909|     r909_4(glval<int>) = VariableAddress[x]     : 
#  909|     mu909_5(int)       = InitializeParameter[x] : &:r909_4
#  910|     r910_1(glval<int>) = VariableAddress[x]     : 
#  910|     v910_2(void)       = Convert                : r910_1
#  911|     v911_1(void)       = NoOp                   : 
#  909|     v909_6(void)       = ReturnVoid             : 
#  909|     v909_7(void)       = AliasedUse             : ~m?
#  909|     v909_8(void)       = ExitFunction           : 

#  913| void ConstantConditions(int)
#  913|   Block 0
#  913|     v913_1(void)        = EnterFunction          : 
#  913|     mu913_2(unknown)    = AliasedDefinition      : 
#  913|     mu913_3(unknown)    = InitializeNonLocal     : 
#  913|     r913_4(glval<int>)  = VariableAddress[x]     : 
#  913|     mu913_5(int)        = InitializeParameter[x] : &:r913_4
#  914|     r914_1(glval<bool>) = VariableAddress[a]     : 
#  914|     r914_2(bool)        = Constant[1]            : 
#  914|     mu914_3(bool)       = Store[a]               : &:r914_1, r914_2
#  915|     r915_1(glval<int>)  = VariableAddress[b]     : 
#  915|     r915_2(bool)        = Constant[1]            : 
#  915|     v915_3(void)        = ConditionalBranch      : r915_2
#-----|   False -> Block 3
#-----|   True -> Block 2

#  915|   Block 1
#  915|     r915_4(glval<int>) = VariableAddress[#temp915:11] : 
#  915|     r915_5(int)        = Load[#temp915:11]            : &:r915_4, ~m?
#  915|     mu915_6(int)       = Store[b]                     : &:r915_1, r915_5
#  916|     v916_1(void)       = NoOp                         : 
#  913|     v913_6(void)       = ReturnVoid                   : 
#  913|     v913_7(void)       = AliasedUse                   : ~m?
#  913|     v913_8(void)       = ExitFunction                 : 

#  915|   Block 2
#  915|     r915_7(glval<int>) = VariableAddress[x]           : 
#  915|     r915_8(int)        = Load[x]                      : &:r915_7, ~m?
#  915|     r915_9(glval<int>) = VariableAddress[#temp915:11] : 
#  915|     mu915_10(int)      = Store[#temp915:11]           : &:r915_9, r915_8
#-----|   Goto -> Block 1

#  915|   Block 3
#  915|     r915_11(glval<int>) = VariableAddress[x]           : 
#  915|     r915_12(int)        = Load[x]                      : &:r915_11, ~m?
#  915|     r915_13(glval<int>) = VariableAddress[#temp915:11] : 
#  915|     mu915_14(int)       = Store[#temp915:11]           : &:r915_13, r915_12
#-----|   Goto -> Block 1

#  949| void OperatorNew()
#  949|   Block 0
#  949|     v949_1(void)           = EnterFunction                   : 
#  949|     mu949_2(unknown)       = AliasedDefinition               : 
#  949|     mu949_3(unknown)       = InitializeNonLocal              : 
#  950|     r950_1(glval<unknown>) = FunctionAddress[operator new]   : 
#  950|     r950_2(unsigned long)  = Constant[4]                     : 
#  950|     r950_3(void *)         = Call[operator new]              : func:r950_1, 0:r950_2
#  950|     mu950_4(unknown)       = ^CallSideEffect                 : ~m?
#  950|     mu950_5(unknown)       = ^InitializeDynamicAllocation    : &:r950_3
#  950|     r950_6(int *)          = Convert                         : r950_3
#  951|     r951_1(glval<unknown>) = FunctionAddress[operator new]   : 
#  951|     r951_2(unsigned long)  = Constant[4]                     : 
#  951|     r951_3(float)          = Constant[1.0]                   : 
#  951|     r951_4(void *)         = Call[operator new]              : func:r951_1, 0:r951_2, 1:r951_3
#  951|     mu951_5(unknown)       = ^CallSideEffect                 : ~m?
#  951|     mu951_6(unknown)       = ^InitializeDynamicAllocation    : &:r951_4
#  951|     r951_7(int *)          = Convert                         : r951_4
#  952|     r952_1(glval<unknown>) = FunctionAddress[operator new]   : 
#  952|     r952_2(unsigned long)  = Constant[4]                     : 
#  952|     r952_3(void *)         = Call[operator new]              : func:r952_1, 0:r952_2
#  952|     mu952_4(unknown)       = ^CallSideEffect                 : ~m?
#  952|     mu952_5(unknown)       = ^InitializeDynamicAllocation    : &:r952_3
#  952|     r952_6(int *)          = Convert                         : r952_3
#  952|     r952_7(int)            = Constant[0]                     : 
#  952|     mu952_8(int)           = Store[?]                        : &:r952_6, r952_7
#  953|     r953_1(glval<unknown>) = FunctionAddress[operator new]   : 
#  953|     r953_2(unsigned long)  = Constant[8]                     : 
#  953|     r953_3(void *)         = Call[operator new]              : func:r953_1, 0:r953_2
#  953|     mu953_4(unknown)       = ^CallSideEffect                 : ~m?
#  953|     mu953_5(unknown)       = ^InitializeDynamicAllocation    : &:r953_3
#  953|     r953_6(String *)       = Convert                         : r953_3
#  953|     r953_7(glval<unknown>) = FunctionAddress[String]         : 
#  953|     v953_8(void)           = Call[String]                    : func:r953_7, this:r953_6
#  953|     mu953_9(unknown)       = ^CallSideEffect                 : ~m?
#  953|     mu953_10(String)       = ^IndirectMayWriteSideEffect[-1] : &:r953_6
#  954|     r954_1(glval<unknown>) = FunctionAddress[operator new]   : 
#  954|     r954_2(unsigned long)  = Constant[8]                     : 
#  954|     r954_3(float)          = Constant[1.0]                   : 
#  954|     r954_4(void *)         = Call[operator new]              : func:r954_1, 0:r954_2, 1:r954_3
#  954|     mu954_5(unknown)       = ^CallSideEffect                 : ~m?
#  954|     mu954_6(unknown)       = ^InitializeDynamicAllocation    : &:r954_4
#  954|     r954_7(String *)       = Convert                         : r954_4
#  954|     r954_8(glval<unknown>) = FunctionAddress[String]         : 
#  954|     r954_9(glval<char[6]>) = StringConstant["hello"]         : 
#  954|     r954_10(char *)        = Convert                         : r954_9
#  954|     v954_11(void)          = Call[String]                    : func:r954_8, this:r954_7, 0:r954_10
#  954|     mu954_12(unknown)      = ^CallSideEffect                 : ~m?
#  954|     v954_13(void)          = ^BufferReadSideEffect[0]        : &:r954_10, ~m?
#  954|     mu954_14(String)       = ^IndirectMayWriteSideEffect[-1] : &:r954_7
#  955|     r955_1(glval<unknown>) = FunctionAddress[operator new]   : 
#  955|     r955_2(unsigned long)  = Constant[256]                   : 
#  955|     r955_3(align_val_t)    = Constant[128]                   : 
#  955|     r955_4(void *)         = Call[operator new]              : func:r955_1, 0:r955_2, 1:r955_3
#  955|     mu955_5(unknown)       = ^CallSideEffect                 : ~m?
#  955|     mu955_6(unknown)       = ^InitializeDynamicAllocation    : &:r955_4
#  955|     r955_7(Overaligned *)  = Convert                         : r955_4
#  956|     r956_1(glval<unknown>) = FunctionAddress[operator new]   : 
#  956|     r956_2(unsigned long)  = Constant[256]                   : 
#  956|     r956_3(align_val_t)    = Constant[128]                   : 
#  956|     r956_4(float)          = Constant[1.0]                   : 
#  956|     r956_5(void *)         = Call[operator new]              : func:r956_1, 0:r956_2, 1:r956_3, 2:r956_4
#  956|     mu956_6(unknown)       = ^CallSideEffect                 : ~m?
#  956|     mu956_7(unknown)       = ^InitializeDynamicAllocation    : &:r956_5
#  956|     r956_8(Overaligned *)  = Convert                         : r956_5
#  956|     r956_9(Overaligned)    = Constant[0]                     : 
#  956|     mu956_10(Overaligned)  = Store[?]                        : &:r956_8, r956_9
#  957|     v957_1(void)           = NoOp                            : 
#  949|     v949_4(void)           = ReturnVoid                      : 
#  949|     v949_5(void)           = AliasedUse                      : ~m?
#  949|     v949_6(void)           = ExitFunction                    : 

#  959| void OperatorNewArray(int)
#  959|   Block 0
#  959|     v959_1(void)                           = EnterFunction                   : 
#  959|     mu959_2(unknown)                       = AliasedDefinition               : 
#  959|     mu959_3(unknown)                       = InitializeNonLocal              : 
#  959|     r959_4(glval<int>)                     = VariableAddress[n]              : 
#  959|     mu959_5(int)                           = InitializeParameter[n]          : &:r959_4
#  960|     r960_1(glval<unknown>)                 = FunctionAddress[operator new[]] : 
#  960|     r960_2(unsigned long)                  = Constant[40]                    : 
#  960|     r960_3(void *)                         = Call[operator new[]]            : func:r960_1, 0:r960_2
#  960|     mu960_4(unknown)                       = ^CallSideEffect                 : ~m?
#  960|     mu960_5(unknown)                       = ^InitializeDynamicAllocation    : &:r960_3
#  960|     r960_6(int *)                          = Convert                         : r960_3
#  961|     r961_1(glval<unknown>)                 = FunctionAddress[operator new[]] : 
#  961|     r961_2(glval<int>)                     = VariableAddress[n]              : 
#  961|     r961_3(int)                            = Load[n]                         : &:r961_2, ~m?
#  961|     r961_4(unsigned long)                  = Convert                         : r961_3
#  961|     r961_5(unsigned long)                  = Constant[4]                     : 
#  961|     r961_6(unsigned long)                  = Mul                             : r961_4, r961_5
#  961|     r961_7(void *)                         = Call[operator new[]]            : func:r961_1, 0:r961_6
#  961|     mu961_8(unknown)                       = ^CallSideEffect                 : ~m?
#  961|     mu961_9(unknown)                       = ^InitializeDynamicAllocation    : &:r961_7
#  961|     r961_10(int *)                         = Convert                         : r961_7
#  962|     r962_1(glval<unknown>)                 = FunctionAddress[operator new[]] : 
#  962|     r962_2(glval<int>)                     = VariableAddress[n]              : 
#  962|     r962_3(int)                            = Load[n]                         : &:r962_2, ~m?
#  962|     r962_4(unsigned long)                  = Convert                         : r962_3
#  962|     r962_5(unsigned long)                  = Constant[4]                     : 
#  962|     r962_6(unsigned long)                  = Mul                             : r962_4, r962_5
#  962|     r962_7(float)                          = Constant[1.0]                   : 
#  962|     r962_8(void *)                         = Call[operator new[]]            : func:r962_1, 0:r962_6, 1:r962_7
#  962|     mu962_9(unknown)                       = ^CallSideEffect                 : ~m?
#  962|     mu962_10(unknown)                      = ^InitializeDynamicAllocation    : &:r962_8
#  962|     r962_11(int *)                         = Convert                         : r962_8
#  963|     r963_1(glval<unknown>)                 = FunctionAddress[operator new[]] : 
#  963|     r963_2(glval<int>)                     = VariableAddress[n]              : 
#  963|     r963_3(int)                            = Load[n]                         : &:r963_2, ~m?
#  963|     r963_4(unsigned long)                  = Convert                         : r963_3
#  963|     r963_5(unsigned long)                  = Constant[8]                     : 
#  963|     r963_6(unsigned long)                  = Mul                             : r963_4, r963_5
#  963|     r963_7(void *)                         = Call[operator new[]]            : func:r963_1, 0:r963_6
#  963|     mu963_8(unknown)                       = ^CallSideEffect                 : ~m?
#  963|     mu963_9(unknown)                       = ^InitializeDynamicAllocation    : &:r963_7
#  963|     r963_10(String *)                      = Convert                         : r963_7
#  964|     r964_1(glval<unknown>)                 = FunctionAddress[operator new[]] : 
#  964|     r964_2(glval<int>)                     = VariableAddress[n]              : 
#  964|     r964_3(int)                            = Load[n]                         : &:r964_2, ~m?
#  964|     r964_4(unsigned long)                  = Convert                         : r964_3
#  964|     r964_5(unsigned long)                  = Constant[256]                   : 
#  964|     r964_6(unsigned long)                  = Mul                             : r964_4, r964_5
#  964|     r964_7(align_val_t)                    = Constant[128]                   : 
#  964|     r964_8(void *)                         = Call[operator new[]]            : func:r964_1, 0:r964_6, 1:r964_7
#  964|     mu964_9(unknown)                       = ^CallSideEffect                 : ~m?
#  964|     mu964_10(unknown)                      = ^InitializeDynamicAllocation    : &:r964_8
#  964|     r964_11(Overaligned *)                 = Convert                         : r964_8
#  965|     r965_1(glval<unknown>)                 = FunctionAddress[operator new[]] : 
#  965|     r965_2(unsigned long)                  = Constant[2560]                  : 
#  965|     r965_3(align_val_t)                    = Constant[128]                   : 
#  965|     r965_4(float)                          = Constant[1.0]                   : 
#  965|     r965_5(void *)                         = Call[operator new[]]            : func:r965_1, 0:r965_2, 1:r965_3, 2:r965_4
#  965|     mu965_6(unknown)                       = ^CallSideEffect                 : ~m?
#  965|     mu965_7(unknown)                       = ^InitializeDynamicAllocation    : &:r965_5
#  965|     r965_8(Overaligned *)                  = Convert                         : r965_5
#  966|     r966_1(glval<unknown>)                 = FunctionAddress[operator new[]] : 
#  966|     r966_2(glval<int>)                     = VariableAddress[n]              : 
#  966|     r966_3(int)                            = Load[n]                         : &:r966_2, ~m?
#  966|     r966_4(unsigned long)                  = Convert                         : r966_3
#  966|     r966_5(unsigned long)                  = Constant[1]                     : 
#  966|     r966_6(unsigned long)                  = Mul                             : r966_4, r966_5
#  966|     r966_7(void *)                         = Call[operator new[]]            : func:r966_1, 0:r966_6
#  966|     mu966_8(unknown)                       = ^CallSideEffect                 : ~m?
#  966|     mu966_9(unknown)                       = ^InitializeDynamicAllocation    : &:r966_7
#  966|     r966_10(DefaultCtorWithDefaultParam *) = Convert                         : r966_7
#  967|     r967_1(glval<unknown>)                 = FunctionAddress[operator new[]] : 
#  967|     r967_2(glval<int>)                     = VariableAddress[n]              : 
#  967|     r967_3(int)                            = Load[n]                         : &:r967_2, ~m?
#  967|     r967_4(unsigned long)                  = Convert                         : r967_3
#  967|     r967_5(unsigned long)                  = Constant[4]                     : 
#  967|     r967_6(unsigned long)                  = Mul                             : r967_4, r967_5
#  967|     r967_7(void *)                         = Call[operator new[]]            : func:r967_1, 0:r967_6
#  967|     mu967_8(unknown)                       = ^CallSideEffect                 : ~m?
#  967|     mu967_9(unknown)                       = ^InitializeDynamicAllocation    : &:r967_7
#  967|     r967_10(int *)                         = Convert                         : r967_7
#  968|     v968_1(void)                           = NoOp                            : 
#  959|     v959_6(void)                           = ReturnVoid                      : 
#  959|     v959_7(void)                           = AliasedUse                      : ~m?
#  959|     v959_8(void)                           = ExitFunction                    : 

#  970| int designatedInit()
#  970|   Block 0
#  970|     v970_1(void)             = EnterFunction            : 
#  970|     mu970_2(unknown)         = AliasedDefinition        : 
#  970|     mu970_3(unknown)         = InitializeNonLocal       : 
#  971|     r971_1(glval<int[1000]>) = VariableAddress[a1]      : 
#  971|     mu971_2(int[1000])       = Uninitialized[a1]        : &:r971_1
#  971|     r971_3(int)              = Constant[0]              : 
#  971|     r971_4(glval<int>)       = PointerAdd[4]            : r971_1, r971_3
#  971|     r971_5(unknown[8])       = Constant[0]              : 
#  971|     mu971_6(unknown[8])      = Store[?]                 : &:r971_4, r971_5
#  971|     r971_7(int)              = Constant[2]              : 
#  971|     r971_8(glval<int>)       = PointerAdd[4]            : r971_1, r971_7
#  971|     r971_9(int)              = Constant[10002]          : 
#  971|     mu971_10(int)            = Store[?]                 : &:r971_8, r971_9
#  971|     r971_11(int)             = Constant[3]              : 
#  971|     r971_12(glval<int>)      = PointerAdd[4]            : r971_1, r971_11
#  971|     r971_13(unknown[3588])   = Constant[0]              : 
#  971|     mu971_14(unknown[3588])  = Store[?]                 : &:r971_12, r971_13
#  971|     r971_15(int)             = Constant[900]            : 
#  971|     r971_16(glval<int>)      = PointerAdd[4]            : r971_1, r971_15
#  971|     r971_17(int)             = Constant[10900]          : 
#  971|     mu971_18(int)            = Store[?]                 : &:r971_16, r971_17
#  971|     r971_19(int)             = Constant[901]            : 
#  971|     r971_20(glval<int>)      = PointerAdd[4]            : r971_1, r971_19
#  971|     r971_21(unknown[396])    = Constant[0]              : 
#  971|     mu971_22(unknown[396])   = Store[?]                 : &:r971_20, r971_21
#  972|     r972_1(glval<int>)       = VariableAddress[#return] : 
#  972|     r972_2(glval<int[1000]>) = VariableAddress[a1]      : 
#  972|     r972_3(int *)            = Convert                  : r972_2
#  972|     r972_4(int)              = Constant[900]            : 
#  972|     r972_5(glval<int>)       = PointerAdd[4]            : r972_3, r972_4
#  972|     r972_6(int)              = Load[?]                  : &:r972_5, ~m?
#  972|     mu972_7(int)             = Store[#return]           : &:r972_1, r972_6
#  970|     r970_4(glval<int>)       = VariableAddress[#return] : 
#  970|     v970_5(void)             = ReturnValue              : &:r970_4, ~m?
#  970|     v970_6(void)             = AliasedUse               : ~m?
#  970|     v970_7(void)             = ExitFunction             : 

#  975| void IfStmtWithDeclaration(int, int)
#  975|   Block 0
#  975|     v975_1(void)        = EnterFunction          : 
#  975|     mu975_2(unknown)    = AliasedDefinition      : 
#  975|     mu975_3(unknown)    = InitializeNonLocal     : 
#  975|     r975_4(glval<int>)  = VariableAddress[x]     : 
#  975|     mu975_5(int)        = InitializeParameter[x] : &:r975_4
#  975|     r975_6(glval<int>)  = VariableAddress[y]     : 
#  975|     mu975_7(int)        = InitializeParameter[y] : &:r975_6
#  976|     r976_1(glval<bool>) = VariableAddress[b]     : 
#  976|     r976_2(glval<int>)  = VariableAddress[x]     : 
#  976|     r976_3(int)         = Load[x]                : &:r976_2, ~m?
#  976|     r976_4(glval<int>)  = VariableAddress[y]     : 
#  976|     r976_5(int)         = Load[y]                : &:r976_4, ~m?
#  976|     r976_6(bool)        = CompareLT              : r976_3, r976_5
#  976|     mu976_7(bool)       = Store[b]               : &:r976_1, r976_6
#  976|     r976_8(glval<bool>) = VariableAddress[b]     : 
#  976|     r976_9(bool)        = Load[b]                : &:r976_8, ~m?
#  976|     r976_10(bool)       = CopyValue              : r976_9
#  976|     v976_11(void)       = ConditionalBranch      : r976_10
#-----|   False -> Block 2
#-----|   True -> Block 1

#  977|   Block 1
#  977|     r977_1(int)        = Constant[5]        : 
#  977|     r977_2(glval<int>) = VariableAddress[x] : 
#  977|     mu977_3(int)       = Store[x]           : &:r977_2, r977_1
#-----|   Goto -> Block 6

#  979|   Block 2
#  979|     r979_1(glval<int>) = VariableAddress[z] : 
#  979|     r979_2(glval<int>) = VariableAddress[x] : 
#  979|     r979_3(int)        = Load[x]            : &:r979_2, ~m?
#  979|     r979_4(glval<int>) = VariableAddress[y] : 
#  979|     r979_5(int)        = Load[y]            : &:r979_4, ~m?
#  979|     r979_6(int)        = Add                : r979_3, r979_5
#  979|     mu979_7(int)       = Store[z]           : &:r979_1, r979_6
#  979|     r979_8(glval<int>) = VariableAddress[z] : 
#  979|     r979_9(int)        = Load[z]            : &:r979_8, ~m?
#  979|     r979_10(int)       = Constant[0]        : 
#  979|     r979_11(bool)      = CompareNE          : r979_9, r979_10
#  979|     r979_12(bool)      = CopyValue          : r979_11
#  979|     v979_13(void)      = ConditionalBranch  : r979_12
#-----|   False -> Block 4
#-----|   True -> Block 3

#  980|   Block 3
#  980|     r980_1(int)        = Constant[7]        : 
#  980|     r980_2(glval<int>) = VariableAddress[y] : 
#  980|     mu980_3(int)       = Store[y]           : &:r980_2, r980_1
#-----|   Goto -> Block 6

#  982|   Block 4
#  982|     r982_1(glval<int *>) = VariableAddress[p] : 
#  982|     r982_2(glval<int>)   = VariableAddress[x] : 
#  982|     r982_3(int *)        = CopyValue          : r982_2
#  982|     mu982_4(int *)       = Store[p]           : &:r982_1, r982_3
#  982|     r982_5(glval<int *>) = VariableAddress[p] : 
#  982|     r982_6(int *)        = Load[p]            : &:r982_5, ~m?
#  982|     r982_7(int *)        = Constant[0]        : 
#  982|     r982_8(bool)         = CompareNE          : r982_6, r982_7
#  982|     r982_9(bool)         = CopyValue          : r982_8
#  982|     v982_10(void)        = ConditionalBranch  : r982_9
#-----|   False -> Block 6
#-----|   True -> Block 5

#  983|   Block 5
#  983|     r983_1(int)          = Constant[2]        : 
#  983|     r983_2(glval<int *>) = VariableAddress[p] : 
#  983|     r983_3(int *)        = Load[p]            : &:r983_2, ~m?
#  983|     r983_4(glval<int>)   = CopyValue          : r983_3
#  983|     mu983_5(int)         = Store[?]           : &:r983_4, r983_1
#-----|   Goto -> Block 6

#  985|   Block 6
#  985|     v985_1(void)  = NoOp         : 
#  975|     v975_8(void)  = ReturnVoid   : 
#  975|     v975_9(void)  = AliasedUse   : ~m?
#  975|     v975_10(void) = ExitFunction : 

#  987| void WhileStmtWithDeclaration(int, int)
#  987|   Block 0
#  987|     v987_1(void)       = EnterFunction          : 
#  987|     mu987_2(unknown)   = AliasedDefinition      : 
#  987|     mu987_3(unknown)   = InitializeNonLocal     : 
#  987|     r987_4(glval<int>) = VariableAddress[x]     : 
#  987|     mu987_5(int)       = InitializeParameter[x] : &:r987_4
#  987|     r987_6(glval<int>) = VariableAddress[y]     : 
#  987|     mu987_7(int)       = InitializeParameter[y] : &:r987_6
#-----|   Goto -> Block 1

#  988|   Block 1
#  988|     r988_1(glval<bool>) = VariableAddress[b] : 
#  988|     r988_2(glval<int>)  = VariableAddress[x] : 
#  988|     r988_3(int)         = Load[x]            : &:r988_2, ~m?
#  988|     r988_4(glval<int>)  = VariableAddress[y] : 
#  988|     r988_5(int)         = Load[y]            : &:r988_4, ~m?
#  988|     r988_6(bool)        = CompareLT          : r988_3, r988_5
#  988|     mu988_7(bool)       = Store[b]           : &:r988_1, r988_6
#  988|     r988_8(glval<bool>) = VariableAddress[b] : 
#  988|     r988_9(bool)        = Load[b]            : &:r988_8, ~m?
#  988|     r988_10(bool)       = CopyValue          : r988_9
#  988|     v988_11(void)       = ConditionalBranch  : r988_10
#-----|   False -> Block 3
#-----|   True -> Block 2

#  988|   Block 2
#  988|     v988_12(void) = NoOp : 
#-----|   Goto (back edge) -> Block 1

#  990|   Block 3
#  990|     r990_1(glval<int>) = VariableAddress[z] : 
#  990|     r990_2(glval<int>) = VariableAddress[x] : 
#  990|     r990_3(int)        = Load[x]            : &:r990_2, ~m?
#  990|     r990_4(glval<int>) = VariableAddress[y] : 
#  990|     r990_5(int)        = Load[y]            : &:r990_4, ~m?
#  990|     r990_6(int)        = Add                : r990_3, r990_5
#  990|     mu990_7(int)       = Store[z]           : &:r990_1, r990_6
#  990|     r990_8(glval<int>) = VariableAddress[z] : 
#  990|     r990_9(int)        = Load[z]            : &:r990_8, ~m?
#  990|     r990_10(int)       = Constant[0]        : 
#  990|     r990_11(bool)      = CompareNE          : r990_9, r990_10
#  990|     r990_12(bool)      = CopyValue          : r990_11
#  990|     v990_13(void)      = ConditionalBranch  : r990_12
#-----|   False -> Block 5
#-----|   True -> Block 4

#  990|   Block 4
#  990|     v990_14(void) = NoOp : 
#-----|   Goto (back edge) -> Block 3

#  992|   Block 5
#  992|     r992_1(glval<int *>) = VariableAddress[p] : 
#  992|     r992_2(glval<int>)   = VariableAddress[x] : 
#  992|     r992_3(int *)        = CopyValue          : r992_2
#  992|     mu992_4(int *)       = Store[p]           : &:r992_1, r992_3
#  992|     r992_5(glval<int *>) = VariableAddress[p] : 
#  992|     r992_6(int *)        = Load[p]            : &:r992_5, ~m?
#  992|     r992_7(int *)        = Constant[0]        : 
#  992|     r992_8(bool)         = CompareNE          : r992_6, r992_7
#  992|     r992_9(bool)         = CopyValue          : r992_8
#  992|     v992_10(void)        = ConditionalBranch  : r992_9
#-----|   False -> Block 7
#-----|   True -> Block 6

#  992|   Block 6
#  992|     v992_11(void) = NoOp : 
#-----|   Goto (back edge) -> Block 5

#  994|   Block 7
#  994|     v994_1(void)  = NoOp         : 
#  987|     v987_8(void)  = ReturnVoid   : 
#  987|     v987_9(void)  = AliasedUse   : ~m?
#  987|     v987_10(void) = ExitFunction : 

#  996| int PointerDecay(int[], int(float))
#  996|   Block 0
#  996|     v996_1(void)             = EnterFunction            : 
#  996|     mu996_2(unknown)         = AliasedDefinition        : 
#  996|     mu996_3(unknown)         = InitializeNonLocal       : 
#  996|     r996_4(glval<int *>)     = VariableAddress[a]       : 
#  996|     mu996_5(int *)           = InitializeParameter[a]   : &:r996_4
#  996|     r996_6(int *)            = Load[a]                  : &:r996_4, ~m?
#  996|     mu996_7(unknown)         = InitializeIndirection[a] : &:r996_6
#  996|     r996_8(glval<..(*)(..)>) = VariableAddress[fn]      : 
#  996|     mu996_9(..(*)(..))       = InitializeParameter[fn]  : &:r996_8
#  997|     r997_1(glval<int>)       = VariableAddress[#return] : 
#  997|     r997_2(glval<int *>)     = VariableAddress[a]       : 
#  997|     r997_3(int *)            = Load[a]                  : &:r997_2, ~m?
#  997|     r997_4(int)              = Constant[0]              : 
#  997|     r997_5(glval<int>)       = PointerAdd[4]            : r997_3, r997_4
#  997|     r997_6(int)              = Load[?]                  : &:r997_5, ~m?
#  997|     r997_7(glval<..(*)(..)>) = VariableAddress[fn]      : 
#  997|     r997_8(..(*)(..))        = Load[fn]                 : &:r997_7, ~m?
#  997|     r997_9(float)            = Constant[1.0]            : 
#  997|     r997_10(int)             = Call[?]                  : func:r997_8, 0:r997_9
#  997|     mu997_11(unknown)        = ^CallSideEffect          : ~m?
#  997|     r997_12(int)             = Add                      : r997_6, r997_10
#  997|     mu997_13(int)            = Store[#return]           : &:r997_1, r997_12
#  996|     v996_10(void)            = ReturnIndirection[a]     : &:r996_6, ~m?
#  996|     r996_11(glval<int>)      = VariableAddress[#return] : 
#  996|     v996_12(void)            = ReturnValue              : &:r996_11, ~m?
#  996|     v996_13(void)            = AliasedUse               : ~m?
#  996|     v996_14(void)            = ExitFunction             : 

# 1000| int StmtExpr(int, int, int)
# 1000|   Block 0
# 1000|     v1000_1(void)       = EnterFunction          : 
# 1000|     mu1000_2(unknown)   = AliasedDefinition      : 
# 1000|     mu1000_3(unknown)   = InitializeNonLocal     : 
# 1000|     r1000_4(glval<int>) = VariableAddress[b]     : 
# 1000|     mu1000_5(int)       = InitializeParameter[b] : &:r1000_4
# 1000|     r1000_6(glval<int>) = VariableAddress[y]     : 
# 1000|     mu1000_7(int)       = InitializeParameter[y] : &:r1000_6
# 1000|     r1000_8(glval<int>) = VariableAddress[z]     : 
# 1000|     mu1000_9(int)       = InitializeParameter[z] : &:r1000_8
# 1001|     r1001_1(glval<int>) = VariableAddress[x]     : 
# 1002|     r1002_1(glval<int>) = VariableAddress[w]     : 
# 1002|     mu1002_2(int)       = Uninitialized[w]       : &:r1002_1
# 1003|     r1003_1(glval<int>) = VariableAddress[b]     : 
# 1003|     r1003_2(int)        = Load[b]                : &:r1003_1, ~m?
# 1003|     r1003_3(int)        = Constant[0]            : 
# 1003|     r1003_4(bool)       = CompareNE              : r1003_2, r1003_3
# 1003|     v1003_5(void)       = ConditionalBranch      : r1003_4
#-----|   False -> Block 2
#-----|   True -> Block 1

# 1004|   Block 1
# 1004|     r1004_1(glval<int>) = VariableAddress[y] : 
# 1004|     r1004_2(int)        = Load[y]            : &:r1004_1, ~m?
# 1004|     r1004_3(glval<int>) = VariableAddress[w] : 
# 1004|     mu1004_4(int)       = Store[w]           : &:r1004_3, r1004_2
#-----|   Goto -> Block 3

# 1006|   Block 2
# 1006|     r1006_1(glval<int>) = VariableAddress[z] : 
# 1006|     r1006_2(int)        = Load[z]            : &:r1006_1, ~m?
# 1006|     r1006_3(glval<int>) = VariableAddress[w] : 
# 1006|     mu1006_4(int)       = Store[w]           : &:r1006_3, r1006_2
#-----|   Goto -> Block 3

# 1008|   Block 3
# 1008|     r1008_1(glval<int>)  = VariableAddress[w]       : 
# 1008|     r1008_2(int)         = Load[w]                  : &:r1008_1, ~m?
# 1001|     r1001_2(int)         = CopyValue                : r1008_2
# 1001|     mu1001_3(int)        = Store[x]                 : &:r1001_1, r1001_2
# 1011|     r1011_1(glval<int>)  = VariableAddress[#return] : 
# 1011|     r1011_2(glval<int>)  = VariableAddress[x]       : 
# 1011|     r1011_3(int)         = Load[x]                  : &:r1011_2, ~m?
# 1011|     r1011_4(int)         = CopyValue                : r1011_3
# 1011|     mu1011_5(int)        = Store[#return]           : &:r1011_1, r1011_4
# 1000|     r1000_10(glval<int>) = VariableAddress[#return] : 
# 1000|     v1000_11(void)       = ReturnValue              : &:r1000_10, ~m?
# 1000|     v1000_12(void)       = AliasedUse               : ~m?
# 1000|     v1000_13(void)       = ExitFunction             : 

# 1015| void OperatorDelete()
# 1015|   Block 0
# 1015|     v1015_1(void)              = EnterFunction                    : 
# 1015|     mu1015_2(unknown)          = AliasedDefinition                : 
# 1015|     mu1015_3(unknown)          = InitializeNonLocal               : 
# 1016|     r1016_1(glval<unknown>)    = FunctionAddress[operator delete] : 
# 1016|     r1016_2(int *)             = Constant[0]                      : 
# 1016|     v1016_3(void)              = Call[operator delete]            : func:r1016_1, 0:r1016_2
# 1016|     mu1016_4(unknown)          = ^CallSideEffect                  : ~m?
# 1017|     r1017_1(glval<unknown>)    = FunctionAddress[operator delete] : 
# 1017|     r1017_2(String *)          = Constant[0]                      : 
# 1017|     v1017_3(void)              = Call[operator delete]            : func:r1017_1, 0:r1017_2
# 1017|     mu1017_4(unknown)          = ^CallSideEffect                  : ~m?
# 1018|     r1018_1(glval<unknown>)    = FunctionAddress[operator delete] : 
# 1018|     r1018_2(SizedDealloc *)    = Constant[0]                      : 
# 1018|     v1018_3(void)              = Call[operator delete]            : func:r1018_1, 0:r1018_2
# 1018|     mu1018_4(unknown)          = ^CallSideEffect                  : ~m?
# 1019|     r1019_1(glval<unknown>)    = FunctionAddress[operator delete] : 
# 1019|     r1019_2(Overaligned *)     = Constant[0]                      : 
# 1019|     v1019_3(void)              = Call[operator delete]            : func:r1019_1, 0:r1019_2
# 1019|     mu1019_4(unknown)          = ^CallSideEffect                  : ~m?
# 1020|     r1020_1(glval<unknown>)    = VirtualDeleteFunctionAddress     : 
# 1020|     r1020_2(PolymorphicBase *) = Constant[0]                      : 
# 1020|     v1020_3(void)              = Call[?]                          : func:r1020_1, 0:r1020_2
# 1020|     mu1020_4(unknown)          = ^CallSideEffect                  : ~m?
# 1021|     v1021_1(void)              = NoOp                             : 
# 1015|     v1015_4(void)              = ReturnVoid                       : 
# 1015|     v1015_5(void)              = AliasedUse                       : ~m?
# 1015|     v1015_6(void)              = ExitFunction                     : 

# 1024| void OperatorDeleteArray()
# 1024|   Block 0
# 1024|     v1024_1(void)              = EnterFunction                      : 
# 1024|     mu1024_2(unknown)          = AliasedDefinition                  : 
# 1024|     mu1024_3(unknown)          = InitializeNonLocal                 : 
# 1025|     r1025_1(glval<unknown>)    = FunctionAddress[operator delete[]] : 
# 1025|     r1025_2(int *)             = Constant[0]                        : 
# 1025|     v1025_3(void)              = Call[operator delete[]]            : func:r1025_1, 0:r1025_2
# 1025|     mu1025_4(unknown)          = ^CallSideEffect                    : ~m?
# 1026|     r1026_1(glval<unknown>)    = FunctionAddress[operator delete[]] : 
# 1026|     r1026_2(String *)          = Constant[0]                        : 
# 1026|     v1026_3(void)              = Call[operator delete[]]            : func:r1026_1, 0:r1026_2
# 1026|     mu1026_4(unknown)          = ^CallSideEffect                    : ~m?
# 1027|     r1027_1(glval<unknown>)    = FunctionAddress[operator delete[]] : 
# 1027|     r1027_2(SizedDealloc *)    = Constant[0]                        : 
# 1027|     v1027_3(void)              = Call[operator delete[]]            : func:r1027_1, 0:r1027_2
# 1027|     mu1027_4(unknown)          = ^CallSideEffect                    : ~m?
# 1028|     r1028_1(glval<unknown>)    = FunctionAddress[operator delete[]] : 
# 1028|     r1028_2(Overaligned *)     = Constant[0]                        : 
# 1028|     v1028_3(void)              = Call[operator delete[]]            : func:r1028_1, 0:r1028_2
# 1028|     mu1028_4(unknown)          = ^CallSideEffect                    : ~m?
# 1029|     r1029_1(glval<unknown>)    = FunctionAddress[operator delete[]] : 
# 1029|     r1029_2(PolymorphicBase *) = Constant[0]                        : 
# 1029|     v1029_3(void)              = Call[operator delete[]]            : func:r1029_1, 0:r1029_2
# 1029|     mu1029_4(unknown)          = ^CallSideEffect                    : ~m?
# 1030|     v1030_1(void)              = NoOp                               : 
# 1024|     v1024_4(void)              = ReturnVoid                         : 
# 1024|     v1024_5(void)              = AliasedUse                         : ~m?
# 1024|     v1024_6(void)              = ExitFunction                       : 

# 1034| void EmptyStructInit()
# 1034|   Block 0
# 1034|     v1034_1(void)               = EnterFunction      : 
# 1034|     mu1034_2(unknown)           = AliasedDefinition  : 
# 1034|     mu1034_3(unknown)           = InitializeNonLocal : 
# 1035|     r1035_1(glval<EmptyStruct>) = VariableAddress[s] : 
# 1035|     mu1035_2(EmptyStruct)       = Uninitialized[s]   : &:r1035_1
# 1036|     v1036_1(void)               = NoOp               : 
# 1034|     v1034_4(void)               = ReturnVoid         : 
# 1034|     v1034_5(void)               = AliasedUse         : ~m?
# 1034|     v1034_6(void)               = ExitFunction       : 

# 1038| (lambda [] type at line 1038, col. 12) lam
# 1038|   Block 0
# 1038|     v1038_1(void)                             = EnterFunction                 : 
# 1038|     mu1038_2(unknown)                         = AliasedDefinition             : 
# 1038|     r1038_3(glval<decltype([...](...){...})>) = VariableAddress[lam]          : 
# 1038|     r1038_4(glval<decltype([...](...){...})>) = VariableAddress[#temp1038:12] : 
# 1038|     mu1038_5(decltype([...](...){...}))       = Uninitialized[#temp1038:12]   : &:r1038_4
# 1038|     r1038_6(decltype([...](...){...}))        = Load[#temp1038:12]            : &:r1038_4, ~m?
# 1038|     mu1038_7(decltype([...](...){...}))       = Store[lam]                    : &:r1038_3, r1038_6
# 1038|     v1038_8(void)                             = ReturnVoid                    : 
# 1038|     v1038_9(void)                             = AliasedUse                    : ~m?
# 1038|     v1038_10(void)                            = ExitFunction                  : 

# 1038| void (lambda [] type at line 1038, col. 12)::(unnamed constructor)((lambda [] type at line 1038, col. 12)&&)
# 1038|   Block 0
# 1038|     v1038_1(void)                                        = EnterFunction                                : 
# 1038|     mu1038_2(unknown)                                    = AliasedDefinition                            : 
# 1038|     mu1038_3(unknown)                                    = InitializeNonLocal                           : 
# 1038|     r1038_4(glval<unknown>)                              = VariableAddress[#this]                       : 
# 1038|     mu1038_5(glval<decltype([...](...){...})>)           = InitializeParameter[#this]                   : &:r1038_4
# 1038|     r1038_6(glval<decltype([...](...){...})>)            = Load[#this]                                  : &:r1038_4, ~m?
# 1038|     mu1038_7(decltype([...](...){...}))                  = InitializeIndirection[#this]                 : &:r1038_6
#-----|     r0_1(glval<lambda [] type at line 1038, col. 12 &&>) = VariableAddress[(unnamed parameter 0)]       : 
#-----|     mu0_2(lambda [] type at line 1038, col. 12 &&)       = InitializeParameter[(unnamed parameter 0)]   : &:r0_1
#-----|     r0_3(lambda [] type at line 1038, col. 12 &&)        = Load[(unnamed parameter 0)]                  : &:r0_1, ~m?
#-----|     mu0_4(unknown)                                       = InitializeIndirection[(unnamed parameter 0)] : &:r0_3
# 1038|     v1038_8(void)                                        = NoOp                                         : 
# 1038|     v1038_9(void)                                        = ReturnIndirection[#this]                     : &:r1038_6, ~m?
#-----|     v0_5(void)                                           = ReturnIndirection[(unnamed parameter 0)]     : &:r0_3, ~m?
# 1038|     v1038_10(void)                                       = ReturnVoid                                   : 
# 1038|     v1038_11(void)                                       = AliasedUse                                   : ~m?
# 1038|     v1038_12(void)                                       = ExitFunction                                 : 

# 1038| void (lambda [] type at line 1038, col. 12)::operator()() const
# 1038|   Block 0
# 1038|     v1038_1(void)                              = EnterFunction                : 
# 1038|     mu1038_2(unknown)                          = AliasedDefinition            : 
# 1038|     mu1038_3(unknown)                          = InitializeNonLocal           : 
# 1038|     r1038_4(glval<unknown>)                    = VariableAddress[#this]       : 
# 1038|     mu1038_5(glval<decltype([...](...){...})>) = InitializeParameter[#this]   : &:r1038_4
# 1038|     r1038_6(glval<decltype([...](...){...})>)  = Load[#this]                  : &:r1038_4, ~m?
# 1038|     mu1038_7(decltype([...](...){...}))        = InitializeIndirection[#this] : &:r1038_6
# 1038|     v1038_8(void)                              = NoOp                         : 
# 1038|     v1038_9(void)                              = ReturnIndirection[#this]     : &:r1038_6, ~m?
# 1038|     v1038_10(void)                             = ReturnVoid                   : 
# 1038|     v1038_11(void)                             = AliasedUse                   : ~m?
# 1038|     v1038_12(void)                             = ExitFunction                 : 

# 1038| void(* (lambda [] type at line 1038, col. 12)::operator void (*)()() const)()
# 1038|   Block 0
# 1038|     v1038_1(void)                              = EnterFunction                : 
# 1038|     mu1038_2(unknown)                          = AliasedDefinition            : 
# 1038|     mu1038_3(unknown)                          = InitializeNonLocal           : 
# 1038|     r1038_4(glval<unknown>)                    = VariableAddress[#this]       : 
# 1038|     mu1038_5(glval<decltype([...](...){...})>) = InitializeParameter[#this]   : &:r1038_4
# 1038|     r1038_6(glval<decltype([...](...){...})>)  = Load[#this]                  : &:r1038_4, ~m?
# 1038|     mu1038_7(decltype([...](...){...}))        = InitializeIndirection[#this] : &:r1038_6
# 1038|     r1038_8(glval<..(*)(..)>)                  = VariableAddress[#return]     : 
# 1038|     r1038_9(..(*)(..))                         = FunctionAddress[_FUN]        : 
# 1038|     mu1038_10(..(*)(..))                       = Store[#return]               : &:r1038_8, r1038_9
# 1038|     v1038_11(void)                             = ReturnIndirection[#this]     : &:r1038_6, ~m?
# 1038|     r1038_12(glval<..(*)(..)>)                 = VariableAddress[#return]     : 
# 1038|     v1038_13(void)                             = ReturnValue                  : &:r1038_12, ~m?
# 1038|     v1038_14(void)                             = AliasedUse                   : ~m?
# 1038|     v1038_15(void)                             = ExitFunction                 : 

# 1040| void Lambda(int, String const&)
# 1040|   Block 0
# 1040|     v1040_1(void)                             = EnterFunction                          : 
# 1040|     mu1040_2(unknown)                         = AliasedDefinition                      : 
# 1040|     mu1040_3(unknown)                         = InitializeNonLocal                     : 
# 1040|     r1040_4(glval<int>)                       = VariableAddress[x]                     : 
# 1040|     mu1040_5(int)                             = InitializeParameter[x]                 : &:r1040_4
# 1040|     r1040_6(glval<String &>)                  = VariableAddress[s]                     : 
# 1040|     mu1040_7(String &)                        = InitializeParameter[s]                 : &:r1040_6
# 1040|     r1040_8(String &)                         = Load[s]                                : &:r1040_6, ~m?
# 1040|     mu1040_9(unknown)                         = InitializeIndirection[s]               : &:r1040_8
# 1041|     r1041_1(glval<decltype([...](...){...})>) = VariableAddress[lambda_empty]          : 
# 1041|     r1041_2(glval<decltype([...](...){...})>) = VariableAddress[#temp1041:23]          : 
# 1041|     mu1041_3(decltype([...](...){...}))       = Uninitialized[#temp1041:23]            : &:r1041_2
# 1041|     r1041_4(decltype([...](...){...}))        = Load[#temp1041:23]                     : &:r1041_2, ~m?
# 1041|     mu1041_5(decltype([...](...){...}))       = Store[lambda_empty]                    : &:r1041_1, r1041_4
# 1042|     r1042_1(char)                             = Constant[65]                           : 
# 1043|     r1043_1(glval<decltype([...](...){...})>) = VariableAddress[lambda_ref]            : 
# 1043|     r1043_2(glval<decltype([...](...){...})>) = VariableAddress[#temp1043:20]          : 
# 1043|     mu1043_3(decltype([...](...){...}))       = Uninitialized[#temp1043:20]            : &:r1043_2
# 1043|     r1043_4(glval<String &>)                  = FieldAddress[s]                        : r1043_2
# 1043|     r1043_5(glval<String &>)                  = VariableAddress[s]                     : 
# 1043|     r1043_6(String &)                         = Load[s]                                : &:r1043_5, ~m?
# 1043|     r1043_7(glval<String>)                    = CopyValue                              : r1043_6
# 1043|     r1043_8(String &)                         = CopyValue                              : r1043_7
# 1043|     mu1043_9(String &)                        = Store[?]                               : &:r1043_4, r1043_8
# 1043|     r1043_10(glval<int &>)                    = FieldAddress[x]                        : r1043_2
# 1043|     r1043_11(glval<int>)                      = VariableAddress[x]                     : 
#-----|     r0_1(int &)                               = CopyValue                              : r1043_11
#-----|     mu0_2(int &)                              = Store[?]                               : &:r1043_10, r0_1
# 1043|     r1043_12(decltype([...](...){...}))       = Load[#temp1043:20]                     : &:r1043_2, ~m?
# 1043|     mu1043_13(decltype([...](...){...}))      = Store[lambda_ref]                      : &:r1043_1, r1043_12
# 1044|     r1044_1(glval<decltype([...](...){...})>) = VariableAddress[lambda_ref]            : 
# 1044|     r1044_2(glval<decltype([...](...){...})>) = Convert                                : r1044_1
# 1044|     r1044_3(glval<unknown>)                   = FunctionAddress[operator()]            : 
# 1044|     r1044_4(float)                            = Constant[1.0]                          : 
# 1044|     r1044_5(char)                             = Call[operator()]                       : func:r1044_3, this:r1044_2, 0:r1044_4
# 1044|     mu1044_6(unknown)                         = ^CallSideEffect                        : ~m?
# 1044|     v1044_7(void)                             = ^IndirectReadSideEffect[-1]            : &:r1044_2, ~m?
# 1045|     r1045_1(glval<decltype([...](...){...})>) = VariableAddress[lambda_val]            : 
# 1045|     r1045_2(glval<decltype([...](...){...})>) = VariableAddress[#temp1045:20]          : 
# 1045|     mu1045_3(decltype([...](...){...}))       = Uninitialized[#temp1045:20]            : &:r1045_2
# 1045|     r1045_4(glval<String>)                    = FieldAddress[s]                        : r1045_2
# 1045|     r1045_5(glval<unknown>)                   = FunctionAddress[String]                : 
# 1045|     v1045_6(void)                             = Call[String]                           : func:r1045_5, this:r1045_4
# 1045|     mu1045_7(unknown)                         = ^CallSideEffect                        : ~m?
# 1045|     mu1045_8(String)                          = ^IndirectMayWriteSideEffect[-1]        : &:r1045_4
# 1045|     r1045_9(glval<int>)                       = FieldAddress[x]                        : r1045_2
# 1045|     r1045_10(glval<int>)                      = VariableAddress[x]                     : 
# 1045|     r1045_11(int)                             = Load[x]                                : &:r1045_10, ~m?
# 1045|     mu1045_12(int)                            = Store[?]                               : &:r1045_9, r1045_11
# 1045|     r1045_13(decltype([...](...){...}))       = Load[#temp1045:20]                     : &:r1045_2, ~m?
# 1045|     mu1045_14(decltype([...](...){...}))      = Store[lambda_val]                      : &:r1045_1, r1045_13
# 1046|     r1046_1(glval<decltype([...](...){...})>) = VariableAddress[lambda_val]            : 
# 1046|     r1046_2(glval<decltype([...](...){...})>) = Convert                                : r1046_1
# 1046|     r1046_3(glval<unknown>)                   = FunctionAddress[operator()]            : 
# 1046|     r1046_4(float)                            = Constant[2.0]                          : 
# 1046|     r1046_5(char)                             = Call[operator()]                       : func:r1046_3, this:r1046_2, 0:r1046_4
# 1046|     mu1046_6(unknown)                         = ^CallSideEffect                        : ~m?
# 1046|     v1046_7(void)                             = ^IndirectReadSideEffect[-1]            : &:r1046_2, ~m?
# 1047|     r1047_1(glval<decltype([...](...){...})>) = VariableAddress[lambda_ref_explicit]   : 
# 1047|     r1047_2(glval<decltype([...](...){...})>) = VariableAddress[#temp1047:29]          : 
# 1047|     mu1047_3(decltype([...](...){...}))       = Uninitialized[#temp1047:29]            : &:r1047_2
# 1047|     r1047_4(glval<String &>)                  = FieldAddress[s]                        : r1047_2
# 1047|     r1047_5(glval<String &>)                  = VariableAddress[s]                     : 
# 1047|     r1047_6(String &)                         = Load[s]                                : &:r1047_5, ~m?
# 1047|     r1047_7(glval<String>)                    = CopyValue                              : r1047_6
# 1047|     r1047_8(String &)                         = CopyValue                              : r1047_7
# 1047|     mu1047_9(String &)                        = Store[?]                               : &:r1047_4, r1047_8
# 1047|     r1047_10(decltype([...](...){...}))       = Load[#temp1047:29]                     : &:r1047_2, ~m?
# 1047|     mu1047_11(decltype([...](...){...}))      = Store[lambda_ref_explicit]             : &:r1047_1, r1047_10
# 1048|     r1048_1(glval<decltype([...](...){...})>) = VariableAddress[lambda_ref_explicit]   : 
# 1048|     r1048_2(glval<decltype([...](...){...})>) = Convert                                : r1048_1
# 1048|     r1048_3(glval<unknown>)                   = FunctionAddress[operator()]            : 
# 1048|     r1048_4(float)                            = Constant[3.0]                          : 
# 1048|     r1048_5(char)                             = Call[operator()]                       : func:r1048_3, this:r1048_2, 0:r1048_4
# 1048|     mu1048_6(unknown)                         = ^CallSideEffect                        : ~m?
# 1048|     v1048_7(void)                             = ^IndirectReadSideEffect[-1]            : &:r1048_2, ~m?
# 1049|     r1049_1(glval<decltype([...](...){...})>) = VariableAddress[lambda_val_explicit]   : 
# 1049|     r1049_2(glval<decltype([...](...){...})>) = VariableAddress[#temp1049:29]          : 
# 1049|     mu1049_3(decltype([...](...){...}))       = Uninitialized[#temp1049:29]            : &:r1049_2
# 1049|     r1049_4(glval<String>)                    = FieldAddress[s]                        : r1049_2
# 1049|     r1049_5(glval<unknown>)                   = FunctionAddress[String]                : 
# 1049|     v1049_6(void)                             = Call[String]                           : func:r1049_5, this:r1049_4
# 1049|     mu1049_7(unknown)                         = ^CallSideEffect                        : ~m?
# 1049|     mu1049_8(String)                          = ^IndirectMayWriteSideEffect[-1]        : &:r1049_4
# 1049|     r1049_9(decltype([...](...){...}))        = Load[#temp1049:29]                     : &:r1049_2, ~m?
# 1049|     mu1049_10(decltype([...](...){...}))      = Store[lambda_val_explicit]             : &:r1049_1, r1049_9
# 1050|     r1050_1(glval<decltype([...](...){...})>) = VariableAddress[lambda_val_explicit]   : 
# 1050|     r1050_2(glval<decltype([...](...){...})>) = Convert                                : r1050_1
# 1050|     r1050_3(glval<unknown>)                   = FunctionAddress[operator()]            : 
# 1050|     r1050_4(float)                            = Constant[4.0]                          : 
# 1050|     r1050_5(char)                             = Call[operator()]                       : func:r1050_3, this:r1050_2, 0:r1050_4
# 1050|     mu1050_6(unknown)                         = ^CallSideEffect                        : ~m?
# 1050|     v1050_7(void)                             = ^IndirectReadSideEffect[-1]            : &:r1050_2, ~m?
# 1051|     r1051_1(glval<decltype([...](...){...})>) = VariableAddress[lambda_mixed_explicit] : 
# 1051|     r1051_2(glval<decltype([...](...){...})>) = VariableAddress[#temp1051:31]          : 
# 1051|     mu1051_3(decltype([...](...){...}))       = Uninitialized[#temp1051:31]            : &:r1051_2
# 1051|     r1051_4(glval<String &>)                  = FieldAddress[s]                        : r1051_2
# 1051|     r1051_5(glval<String &>)                  = VariableAddress[s]                     : 
# 1051|     r1051_6(String &)                         = Load[s]                                : &:r1051_5, ~m?
# 1051|     r1051_7(glval<String>)                    = CopyValue                              : r1051_6
# 1051|     r1051_8(String &)                         = CopyValue                              : r1051_7
# 1051|     mu1051_9(String &)                        = Store[?]                               : &:r1051_4, r1051_8
# 1051|     r1051_10(glval<int>)                      = FieldAddress[x]                        : r1051_2
# 1051|     r1051_11(glval<int>)                      = VariableAddress[x]                     : 
# 1051|     r1051_12(int)                             = Load[x]                                : &:r1051_11, ~m?
# 1051|     mu1051_13(int)                            = Store[?]                               : &:r1051_10, r1051_12
# 1051|     r1051_14(decltype([...](...){...}))       = Load[#temp1051:31]                     : &:r1051_2, ~m?
# 1051|     mu1051_15(decltype([...](...){...}))      = Store[lambda_mixed_explicit]           : &:r1051_1, r1051_14
# 1052|     r1052_1(glval<decltype([...](...){...})>) = VariableAddress[lambda_mixed_explicit] : 
# 1052|     r1052_2(glval<decltype([...](...){...})>) = Convert                                : r1052_1
# 1052|     r1052_3(glval<unknown>)                   = FunctionAddress[operator()]            : 
# 1052|     r1052_4(float)                            = Constant[5.0]                          : 
# 1052|     r1052_5(char)                             = Call[operator()]                       : func:r1052_3, this:r1052_2, 0:r1052_4
# 1052|     mu1052_6(unknown)                         = ^CallSideEffect                        : ~m?
# 1052|     v1052_7(void)                             = ^IndirectReadSideEffect[-1]            : &:r1052_2, ~m?
# 1053|     r1053_1(glval<int>)                       = VariableAddress[r]                     : 
# 1053|     r1053_2(glval<int>)                       = VariableAddress[x]                     : 
# 1053|     r1053_3(int)                              = Load[x]                                : &:r1053_2, ~m?
# 1053|     r1053_4(int)                              = Constant[1]                            : 
# 1053|     r1053_5(int)                              = Sub                                    : r1053_3, r1053_4
# 1053|     mu1053_6(int)                             = Store[r]                               : &:r1053_1, r1053_5
# 1054|     r1054_1(glval<decltype([...](...){...})>) = VariableAddress[lambda_inits]          : 
# 1054|     r1054_2(glval<decltype([...](...){...})>) = VariableAddress[#temp1054:22]          : 
# 1054|     mu1054_3(decltype([...](...){...}))       = Uninitialized[#temp1054:22]            : &:r1054_2
# 1054|     r1054_4(glval<String &>)                  = FieldAddress[s]                        : r1054_2
# 1054|     r1054_5(glval<String &>)                  = VariableAddress[s]                     : 
# 1054|     r1054_6(String &)                         = Load[s]                                : &:r1054_5, ~m?
# 1054|     r1054_7(glval<String>)                    = CopyValue                              : r1054_6
# 1054|     r1054_8(String &)                         = CopyValue                              : r1054_7
# 1054|     mu1054_9(String &)                        = Store[?]                               : &:r1054_4, r1054_8
# 1054|     r1054_10(glval<int>)                      = FieldAddress[x]                        : r1054_2
# 1054|     r1054_11(glval<int>)                      = VariableAddress[x]                     : 
# 1054|     r1054_12(int)                             = Load[x]                                : &:r1054_11, ~m?
# 1054|     mu1054_13(int)                            = Store[?]                               : &:r1054_10, r1054_12
# 1054|     r1054_14(glval<int>)                      = FieldAddress[i]                        : r1054_2
# 1054|     r1054_15(glval<int>)                      = VariableAddress[x]                     : 
# 1054|     r1054_16(int)                             = Load[x]                                : &:r1054_15, ~m?
# 1054|     r1054_17(int)                             = Constant[1]                            : 
# 1054|     r1054_18(int)                             = Add                                    : r1054_16, r1054_17
# 1054|     mu1054_19(int)                            = Store[?]                               : &:r1054_14, r1054_18
# 1054|     r1054_20(glval<int &>)                    = FieldAddress[j]                        : r1054_2
# 1054|     r1054_21(glval<int>)                      = VariableAddress[r]                     : 
# 1054|     r1054_22(int &)                           = CopyValue                              : r1054_21
# 1054|     mu1054_23(int &)                          = Store[?]                               : &:r1054_20, r1054_22
# 1054|     r1054_24(decltype([...](...){...}))       = Load[#temp1054:22]                     : &:r1054_2, ~m?
# 1054|     mu1054_25(decltype([...](...){...}))      = Store[lambda_inits]                    : &:r1054_1, r1054_24
# 1055|     r1055_1(glval<decltype([...](...){...})>) = VariableAddress[lambda_inits]          : 
# 1055|     r1055_2(glval<decltype([...](...){...})>) = Convert                                : r1055_1
# 1055|     r1055_3(glval<unknown>)                   = FunctionAddress[operator()]            : 
# 1055|     r1055_4(float)                            = Constant[6.0]                          : 
# 1055|     r1055_5(char)                             = Call[operator()]                       : func:r1055_3, this:r1055_2, 0:r1055_4
# 1055|     mu1055_6(unknown)                         = ^CallSideEffect                        : ~m?
# 1055|     v1055_7(void)                             = ^IndirectReadSideEffect[-1]            : &:r1055_2, ~m?
# 1056|     v1056_1(void)                             = NoOp                                   : 
# 1056|     r1056_2(glval<decltype([...](...){...})>) = VariableAddress[lambda_val_explicit]   : 
# 1056|     r1056_3(glval<unknown>)                   = FunctionAddress[~<unnamed>]            : 
# 1056|     v1056_4(void)                             = Call[~<unnamed>]                       : func:r1056_3, this:r1056_2
# 1056|     mu1056_5(unknown)                         = ^CallSideEffect                        : ~m?
# 1056|     v1056_6(void)                             = ^IndirectReadSideEffect[-1]            : &:r1056_2, ~m?
# 1056|     mu1056_7(decltype([...](...){...}))       = ^IndirectMayWriteSideEffect[-1]        : &:r1056_2
# 1056|     r1056_8(glval<decltype([...](...){...})>) = VariableAddress[lambda_val]            : 
# 1056|     r1056_9(glval<unknown>)                   = FunctionAddress[~<unnamed>]            : 
# 1056|     v1056_10(void)                            = Call[~<unnamed>]                       : func:r1056_9, this:r1056_8
# 1056|     mu1056_11(unknown)                        = ^CallSideEffect                        : ~m?
# 1056|     v1056_12(void)                            = ^IndirectReadSideEffect[-1]            : &:r1056_8, ~m?
# 1056|     mu1056_13(decltype([...](...){...}))      = ^IndirectMayWriteSideEffect[-1]        : &:r1056_8
# 1040|     v1040_10(void)                            = ReturnIndirection[s]                   : &:r1040_8, ~m?
# 1040|     v1040_11(void)                            = ReturnVoid                             : 
# 1040|     v1040_12(void)                            = AliasedUse                             : ~m?
# 1040|     v1040_13(void)                            = ExitFunction                           : 

# 1041| void (void Lambda(int, String const&))::(lambda [] type at line 1041, col. 23)::(unnamed constructor)((void Lambda(int, String const&))::(lambda [] type at line 1041, col. 23)&&)
# 1041|   Block 0
# 1041|     v1041_1(void)                                        = EnterFunction                                : 
# 1041|     mu1041_2(unknown)                                    = AliasedDefinition                            : 
# 1041|     mu1041_3(unknown)                                    = InitializeNonLocal                           : 
# 1041|     r1041_4(glval<unknown>)                              = VariableAddress[#this]                       : 
# 1041|     mu1041_5(glval<decltype([...](...){...})>)           = InitializeParameter[#this]                   : &:r1041_4
# 1041|     r1041_6(glval<decltype([...](...){...})>)            = Load[#this]                                  : &:r1041_4, ~m?
# 1041|     mu1041_7(decltype([...](...){...}))                  = InitializeIndirection[#this]                 : &:r1041_6
#-----|     r0_1(glval<lambda [] type at line 1041, col. 23 &&>) = VariableAddress[(unnamed parameter 0)]       : 
#-----|     mu0_2(lambda [] type at line 1041, col. 23 &&)       = InitializeParameter[(unnamed parameter 0)]   : &:r0_1
#-----|     r0_3(lambda [] type at line 1041, col. 23 &&)        = Load[(unnamed parameter 0)]                  : &:r0_1, ~m?
#-----|     mu0_4(unknown)                                       = InitializeIndirection[(unnamed parameter 0)] : &:r0_3
# 1041|     v1041_8(void)                                        = NoOp                                         : 
# 1041|     v1041_9(void)                                        = ReturnIndirection[#this]                     : &:r1041_6, ~m?
#-----|     v0_5(void)                                           = ReturnIndirection[(unnamed parameter 0)]     : &:r0_3, ~m?
# 1041|     v1041_10(void)                                       = ReturnVoid                                   : 
# 1041|     v1041_11(void)                                       = AliasedUse                                   : ~m?
# 1041|     v1041_12(void)                                       = ExitFunction                                 : 

# 1041| char (void Lambda(int, String const&))::(lambda [] type at line 1041, col. 23)::operator()(float) const
# 1041|   Block 0
# 1041|     v1041_1(void)                              = EnterFunction                : 
# 1041|     mu1041_2(unknown)                          = AliasedDefinition            : 
# 1041|     mu1041_3(unknown)                          = InitializeNonLocal           : 
# 1041|     r1041_4(glval<unknown>)                    = VariableAddress[#this]       : 
# 1041|     mu1041_5(glval<decltype([...](...){...})>) = InitializeParameter[#this]   : &:r1041_4
# 1041|     r1041_6(glval<decltype([...](...){...})>)  = Load[#this]                  : &:r1041_4, ~m?
# 1041|     mu1041_7(decltype([...](...){...}))        = InitializeIndirection[#this] : &:r1041_6
# 1041|     r1041_8(glval<float>)                      = VariableAddress[f]           : 
# 1041|     mu1041_9(float)                            = InitializeParameter[f]       : &:r1041_8
# 1041|     r1041_10(glval<char>)                      = VariableAddress[#return]     : 
# 1041|     r1041_11(char)                             = Constant[65]                 : 
# 1041|     mu1041_12(char)                            = Store[#return]               : &:r1041_10, r1041_11
# 1041|     v1041_13(void)                             = ReturnIndirection[#this]     : &:r1041_6, ~m?
# 1041|     r1041_14(glval<char>)                      = VariableAddress[#return]     : 
# 1041|     v1041_15(void)                             = ReturnValue                  : &:r1041_14, ~m?
# 1041|     v1041_16(void)                             = AliasedUse                   : ~m?
# 1041|     v1041_17(void)                             = ExitFunction                 : 

# 1041| char(* (void Lambda(int, String const&))::(lambda [] type at line 1041, col. 23)::operator char (*)(float)() const)(float)
# 1041|   Block 0
# 1041|     v1041_1(void)                              = EnterFunction                : 
# 1041|     mu1041_2(unknown)                          = AliasedDefinition            : 
# 1041|     mu1041_3(unknown)                          = InitializeNonLocal           : 
# 1041|     r1041_4(glval<unknown>)                    = VariableAddress[#this]       : 
# 1041|     mu1041_5(glval<decltype([...](...){...})>) = InitializeParameter[#this]   : &:r1041_4
# 1041|     r1041_6(glval<decltype([...](...){...})>)  = Load[#this]                  : &:r1041_4, ~m?
# 1041|     mu1041_7(decltype([...](...){...}))        = InitializeIndirection[#this] : &:r1041_6
# 1041|     r1041_8(glval<..(*)(..)>)                  = VariableAddress[#return]     : 
# 1041|     r1041_9(..(*)(..))                         = FunctionAddress[_FUN]        : 
# 1041|     mu1041_10(..(*)(..))                       = Store[#return]               : &:r1041_8, r1041_9
# 1041|     v1041_11(void)                             = ReturnIndirection[#this]     : &:r1041_6, ~m?
# 1041|     r1041_12(glval<..(*)(..)>)                 = VariableAddress[#return]     : 
# 1041|     v1041_13(void)                             = ReturnValue                  : &:r1041_12, ~m?
# 1041|     v1041_14(void)                             = AliasedUse                   : ~m?
# 1041|     v1041_15(void)                             = ExitFunction                 : 

# 1043| char (void Lambda(int, String const&))::(lambda [] type at line 1043, col. 21)::operator()(float) const
# 1043|   Block 0
# 1043|     v1043_1(void)                                    = EnterFunction                : 
# 1043|     mu1043_2(unknown)                                = AliasedDefinition            : 
# 1043|     mu1043_3(unknown)                                = InitializeNonLocal           : 
# 1043|     r1043_4(glval<unknown>)                          = VariableAddress[#this]       : 
# 1043|     mu1043_5(glval<decltype([...](...){...})>)       = InitializeParameter[#this]   : &:r1043_4
# 1043|     r1043_6(glval<decltype([...](...){...})>)        = Load[#this]                  : &:r1043_4, ~m?
# 1043|     mu1043_7(decltype([...](...){...}))              = InitializeIndirection[#this] : &:r1043_6
# 1043|     r1043_8(glval<float>)                            = VariableAddress[f]           : 
# 1043|     mu1043_9(float)                                  = InitializeParameter[f]       : &:r1043_8
# 1043|     r1043_10(glval<char>)                            = VariableAddress[#return]     : 
# 1043|     r1043_11(glval<unknown>)                         = VariableAddress[#this]       : 
# 1043|     r1043_12(lambda [] type at line 1043, col. 21 *) = Load[#this]                  : &:r1043_11, ~m?
# 1043|     r1043_13(glval<String &>)                        = FieldAddress[s]              : r1043_12
# 1043|     r1043_14(String &)                               = Load[?]                      : &:r1043_13, ~m?
# 1043|     r1043_15(glval<String>)                          = CopyValue                    : r1043_14
# 1043|     r1043_16(glval<unknown>)                         = FunctionAddress[c_str]       : 
# 1043|     r1043_17(char *)                                 = Call[c_str]                  : func:r1043_16, this:r1043_15
# 1043|     mu1043_18(unknown)                               = ^CallSideEffect              : ~m?
# 1043|     v1043_19(void)                                   = ^IndirectReadSideEffect[-1]  : &:r1043_15, ~m?
# 1043|     r1043_20(glval<unknown>)                         = VariableAddress[#this]       : 
# 1043|     r1043_21(lambda [] type at line 1043, col. 21 *) = Load[#this]                  : &:r1043_20, ~m?
# 1043|     r1043_22(glval<int &>)                           = FieldAddress[x]              : r1043_21
# 1043|     r1043_23(int &)                                  = Load[?]                      : &:r1043_22, ~m?
# 1043|     r1043_24(int)                                    = Load[?]                      : &:r1043_23, ~m?
# 1043|     r1043_25(glval<char>)                            = PointerAdd[1]                : r1043_17, r1043_24
# 1043|     r1043_26(char)                                   = Load[?]                      : &:r1043_25, ~m?
# 1043|     mu1043_27(char)                                  = Store[#return]               : &:r1043_10, r1043_26
# 1043|     v1043_28(void)                                   = ReturnIndirection[#this]     : &:r1043_6, ~m?
# 1043|     r1043_29(glval<char>)                            = VariableAddress[#return]     : 
# 1043|     v1043_30(void)                                   = ReturnValue                  : &:r1043_29, ~m?
# 1043|     v1043_31(void)                                   = AliasedUse                   : ~m?
# 1043|     v1043_32(void)                                   = ExitFunction                 : 

# 1045| void (void Lambda(int, String const&))::(lambda [] type at line 1045, col. 21)::~<unnamed>()
# 1045|   Block 0
# 1045|     v1045_1(void)                              = EnterFunction                : 
# 1045|     mu1045_2(unknown)                          = AliasedDefinition            : 
# 1045|     mu1045_3(unknown)                          = InitializeNonLocal           : 
# 1045|     r1045_4(glval<unknown>)                    = VariableAddress[#this]       : 
# 1045|     mu1045_5(glval<decltype([...](...){...})>) = InitializeParameter[#this]   : &:r1045_4
# 1045|     r1045_6(glval<decltype([...](...){...})>)  = Load[#this]                  : &:r1045_4, ~m?
# 1045|     mu1045_7(decltype([...](...){...}))        = InitializeIndirection[#this] : &:r1045_6
#-----|     v0_1(void)                                 = NoOp                         : 
# 1045|     r1045_8(glval<String>)                     = FieldAddress[s]              : mu1045_5
# 1045|     r1045_9(glval<unknown>)                    = FunctionAddress[~String]     : 
# 1045|     v1045_10(void)                             = Call[~String]                : func:r1045_9, this:r1045_8
# 1045|     mu1045_11(unknown)                         = ^CallSideEffect              : ~m?
# 1045|     v1045_12(void)                             = ReturnIndirection[#this]     : &:r1045_6, ~m?
# 1045|     v1045_13(void)                             = ReturnVoid                   : 
# 1045|     v1045_14(void)                             = AliasedUse                   : ~m?
# 1045|     v1045_15(void)                             = ExitFunction                 : 

# 1045| char (void Lambda(int, String const&))::(lambda [] type at line 1045, col. 21)::operator()(float) const
# 1045|   Block 0
# 1045|     v1045_1(void)                                    = EnterFunction                : 
# 1045|     mu1045_2(unknown)                                = AliasedDefinition            : 
# 1045|     mu1045_3(unknown)                                = InitializeNonLocal           : 
# 1045|     r1045_4(glval<unknown>)                          = VariableAddress[#this]       : 
# 1045|     mu1045_5(glval<decltype([...](...){...})>)       = InitializeParameter[#this]   : &:r1045_4
# 1045|     r1045_6(glval<decltype([...](...){...})>)        = Load[#this]                  : &:r1045_4, ~m?
# 1045|     mu1045_7(decltype([...](...){...}))              = InitializeIndirection[#this] : &:r1045_6
# 1045|     r1045_8(glval<float>)                            = VariableAddress[f]           : 
# 1045|     mu1045_9(float)                                  = InitializeParameter[f]       : &:r1045_8
# 1045|     r1045_10(glval<char>)                            = VariableAddress[#return]     : 
# 1045|     r1045_11(glval<unknown>)                         = VariableAddress[#this]       : 
# 1045|     r1045_12(lambda [] type at line 1045, col. 21 *) = Load[#this]                  : &:r1045_11, ~m?
# 1045|     r1045_13(glval<String>)                          = FieldAddress[s]              : r1045_12
# 1045|     r1045_14(glval<unknown>)                         = FunctionAddress[c_str]       : 
# 1045|     r1045_15(char *)                                 = Call[c_str]                  : func:r1045_14, this:r1045_13
# 1045|     mu1045_16(unknown)                               = ^CallSideEffect              : ~m?
# 1045|     v1045_17(void)                                   = ^IndirectReadSideEffect[-1]  : &:r1045_13, ~m?
# 1045|     r1045_18(glval<unknown>)                         = VariableAddress[#this]       : 
# 1045|     r1045_19(lambda [] type at line 1045, col. 21 *) = Load[#this]                  : &:r1045_18, ~m?
# 1045|     r1045_20(glval<int>)                             = FieldAddress[x]              : r1045_19
# 1045|     r1045_21(int)                                    = Load[?]                      : &:r1045_20, ~m?
# 1045|     r1045_22(glval<char>)                            = PointerAdd[1]                : r1045_15, r1045_21
# 1045|     r1045_23(char)                                   = Load[?]                      : &:r1045_22, ~m?
# 1045|     mu1045_24(char)                                  = Store[#return]               : &:r1045_10, r1045_23
# 1045|     v1045_25(void)                                   = ReturnIndirection[#this]     : &:r1045_6, ~m?
# 1045|     r1045_26(glval<char>)                            = VariableAddress[#return]     : 
# 1045|     v1045_27(void)                                   = ReturnValue                  : &:r1045_26, ~m?
# 1045|     v1045_28(void)                                   = AliasedUse                   : ~m?
# 1045|     v1045_29(void)                                   = ExitFunction                 : 

# 1047| char (void Lambda(int, String const&))::(lambda [] type at line 1047, col. 30)::operator()(float) const
# 1047|   Block 0
# 1047|     v1047_1(void)                                    = EnterFunction                : 
# 1047|     mu1047_2(unknown)                                = AliasedDefinition            : 
# 1047|     mu1047_3(unknown)                                = InitializeNonLocal           : 
# 1047|     r1047_4(glval<unknown>)                          = VariableAddress[#this]       : 
# 1047|     mu1047_5(glval<decltype([...](...){...})>)       = InitializeParameter[#this]   : &:r1047_4
# 1047|     r1047_6(glval<decltype([...](...){...})>)        = Load[#this]                  : &:r1047_4, ~m?
# 1047|     mu1047_7(decltype([...](...){...}))              = InitializeIndirection[#this] : &:r1047_6
# 1047|     r1047_8(glval<float>)                            = VariableAddress[f]           : 
# 1047|     mu1047_9(float)                                  = InitializeParameter[f]       : &:r1047_8
# 1047|     r1047_10(glval<char>)                            = VariableAddress[#return]     : 
# 1047|     r1047_11(glval<unknown>)                         = VariableAddress[#this]       : 
# 1047|     r1047_12(lambda [] type at line 1047, col. 30 *) = Load[#this]                  : &:r1047_11, ~m?
# 1047|     r1047_13(glval<String &>)                        = FieldAddress[s]              : r1047_12
# 1047|     r1047_14(String &)                               = Load[?]                      : &:r1047_13, ~m?
# 1047|     r1047_15(glval<String>)                          = CopyValue                    : r1047_14
# 1047|     r1047_16(glval<unknown>)                         = FunctionAddress[c_str]       : 
# 1047|     r1047_17(char *)                                 = Call[c_str]                  : func:r1047_16, this:r1047_15
# 1047|     mu1047_18(unknown)                               = ^CallSideEffect              : ~m?
# 1047|     v1047_19(void)                                   = ^IndirectReadSideEffect[-1]  : &:r1047_15, ~m?
# 1047|     r1047_20(int)                                    = Constant[0]                  : 
# 1047|     r1047_21(glval<char>)                            = PointerAdd[1]                : r1047_17, r1047_20
# 1047|     r1047_22(char)                                   = Load[?]                      : &:r1047_21, ~m?
# 1047|     mu1047_23(char)                                  = Store[#return]               : &:r1047_10, r1047_22
# 1047|     v1047_24(void)                                   = ReturnIndirection[#this]     : &:r1047_6, ~m?
# 1047|     r1047_25(glval<char>)                            = VariableAddress[#return]     : 
# 1047|     v1047_26(void)                                   = ReturnValue                  : &:r1047_25, ~m?
# 1047|     v1047_27(void)                                   = AliasedUse                   : ~m?
# 1047|     v1047_28(void)                                   = ExitFunction                 : 

# 1049| void (void Lambda(int, String const&))::(lambda [] type at line 1049, col. 30)::~<unnamed>()
# 1049|   Block 0
# 1049|     v1049_1(void)                              = EnterFunction                : 
# 1049|     mu1049_2(unknown)                          = AliasedDefinition            : 
# 1049|     mu1049_3(unknown)                          = InitializeNonLocal           : 
# 1049|     r1049_4(glval<unknown>)                    = VariableAddress[#this]       : 
# 1049|     mu1049_5(glval<decltype([...](...){...})>) = InitializeParameter[#this]   : &:r1049_4
# 1049|     r1049_6(glval<decltype([...](...){...})>)  = Load[#this]                  : &:r1049_4, ~m?
# 1049|     mu1049_7(decltype([...](...){...}))        = InitializeIndirection[#this] : &:r1049_6
#-----|     v0_1(void)                                 = NoOp                         : 
# 1049|     r1049_8(glval<String>)                     = FieldAddress[s]              : mu1049_5
# 1049|     r1049_9(glval<unknown>)                    = FunctionAddress[~String]     : 
# 1049|     v1049_10(void)                             = Call[~String]                : func:r1049_9, this:r1049_8
# 1049|     mu1049_11(unknown)                         = ^CallSideEffect              : ~m?
# 1049|     v1049_12(void)                             = ReturnIndirection[#this]     : &:r1049_6, ~m?
# 1049|     v1049_13(void)                             = ReturnVoid                   : 
# 1049|     v1049_14(void)                             = AliasedUse                   : ~m?
# 1049|     v1049_15(void)                             = ExitFunction                 : 

# 1049| char (void Lambda(int, String const&))::(lambda [] type at line 1049, col. 30)::operator()(float) const
# 1049|   Block 0
# 1049|     v1049_1(void)                                    = EnterFunction                : 
# 1049|     mu1049_2(unknown)                                = AliasedDefinition            : 
# 1049|     mu1049_3(unknown)                                = InitializeNonLocal           : 
# 1049|     r1049_4(glval<unknown>)                          = VariableAddress[#this]       : 
# 1049|     mu1049_5(glval<decltype([...](...){...})>)       = InitializeParameter[#this]   : &:r1049_4
# 1049|     r1049_6(glval<decltype([...](...){...})>)        = Load[#this]                  : &:r1049_4, ~m?
# 1049|     mu1049_7(decltype([...](...){...}))              = InitializeIndirection[#this] : &:r1049_6
# 1049|     r1049_8(glval<float>)                            = VariableAddress[f]           : 
# 1049|     mu1049_9(float)                                  = InitializeParameter[f]       : &:r1049_8
# 1049|     r1049_10(glval<char>)                            = VariableAddress[#return]     : 
# 1049|     r1049_11(glval<unknown>)                         = VariableAddress[#this]       : 
# 1049|     r1049_12(lambda [] type at line 1049, col. 30 *) = Load[#this]                  : &:r1049_11, ~m?
# 1049|     r1049_13(glval<String>)                          = FieldAddress[s]              : r1049_12
# 1049|     r1049_14(glval<unknown>)                         = FunctionAddress[c_str]       : 
# 1049|     r1049_15(char *)                                 = Call[c_str]                  : func:r1049_14, this:r1049_13
# 1049|     mu1049_16(unknown)                               = ^CallSideEffect              : ~m?
# 1049|     v1049_17(void)                                   = ^IndirectReadSideEffect[-1]  : &:r1049_13, ~m?
# 1049|     r1049_18(int)                                    = Constant[0]                  : 
# 1049|     r1049_19(glval<char>)                            = PointerAdd[1]                : r1049_15, r1049_18
# 1049|     r1049_20(char)                                   = Load[?]                      : &:r1049_19, ~m?
# 1049|     mu1049_21(char)                                  = Store[#return]               : &:r1049_10, r1049_20
# 1049|     v1049_22(void)                                   = ReturnIndirection[#this]     : &:r1049_6, ~m?
# 1049|     r1049_23(glval<char>)                            = VariableAddress[#return]     : 
# 1049|     v1049_24(void)                                   = ReturnValue                  : &:r1049_23, ~m?
# 1049|     v1049_25(void)                                   = AliasedUse                   : ~m?
# 1049|     v1049_26(void)                                   = ExitFunction                 : 

# 1051| char (void Lambda(int, String const&))::(lambda [] type at line 1051, col. 32)::operator()(float) const
# 1051|   Block 0
# 1051|     v1051_1(void)                                    = EnterFunction                : 
# 1051|     mu1051_2(unknown)                                = AliasedDefinition            : 
# 1051|     mu1051_3(unknown)                                = InitializeNonLocal           : 
# 1051|     r1051_4(glval<unknown>)                          = VariableAddress[#this]       : 
# 1051|     mu1051_5(glval<decltype([...](...){...})>)       = InitializeParameter[#this]   : &:r1051_4
# 1051|     r1051_6(glval<decltype([...](...){...})>)        = Load[#this]                  : &:r1051_4, ~m?
# 1051|     mu1051_7(decltype([...](...){...}))              = InitializeIndirection[#this] : &:r1051_6
# 1051|     r1051_8(glval<float>)                            = VariableAddress[f]           : 
# 1051|     mu1051_9(float)                                  = InitializeParameter[f]       : &:r1051_8
# 1051|     r1051_10(glval<char>)                            = VariableAddress[#return]     : 
# 1051|     r1051_11(glval<unknown>)                         = VariableAddress[#this]       : 
# 1051|     r1051_12(lambda [] type at line 1051, col. 32 *) = Load[#this]                  : &:r1051_11, ~m?
# 1051|     r1051_13(glval<String &>)                        = FieldAddress[s]              : r1051_12
# 1051|     r1051_14(String &)                               = Load[?]                      : &:r1051_13, ~m?
# 1051|     r1051_15(glval<String>)                          = CopyValue                    : r1051_14
# 1051|     r1051_16(glval<unknown>)                         = FunctionAddress[c_str]       : 
# 1051|     r1051_17(char *)                                 = Call[c_str]                  : func:r1051_16, this:r1051_15
# 1051|     mu1051_18(unknown)                               = ^CallSideEffect              : ~m?
# 1051|     v1051_19(void)                                   = ^IndirectReadSideEffect[-1]  : &:r1051_15, ~m?
# 1051|     r1051_20(glval<unknown>)                         = VariableAddress[#this]       : 
# 1051|     r1051_21(lambda [] type at line 1051, col. 32 *) = Load[#this]                  : &:r1051_20, ~m?
# 1051|     r1051_22(glval<int>)                             = FieldAddress[x]              : r1051_21
# 1051|     r1051_23(int)                                    = Load[?]                      : &:r1051_22, ~m?
# 1051|     r1051_24(glval<char>)                            = PointerAdd[1]                : r1051_17, r1051_23
# 1051|     r1051_25(char)                                   = Load[?]                      : &:r1051_24, ~m?
# 1051|     mu1051_26(char)                                  = Store[#return]               : &:r1051_10, r1051_25
# 1051|     v1051_27(void)                                   = ReturnIndirection[#this]     : &:r1051_6, ~m?
# 1051|     r1051_28(glval<char>)                            = VariableAddress[#return]     : 
# 1051|     v1051_29(void)                                   = ReturnValue                  : &:r1051_28, ~m?
# 1051|     v1051_30(void)                                   = AliasedUse                   : ~m?
# 1051|     v1051_31(void)                                   = ExitFunction                 : 

# 1054| char (void Lambda(int, String const&))::(lambda [] type at line 1054, col. 23)::operator()(float) const
# 1054|   Block 0
# 1054|     v1054_1(void)                                    = EnterFunction                : 
# 1054|     mu1054_2(unknown)                                = AliasedDefinition            : 
# 1054|     mu1054_3(unknown)                                = InitializeNonLocal           : 
# 1054|     r1054_4(glval<unknown>)                          = VariableAddress[#this]       : 
# 1054|     mu1054_5(glval<decltype([...](...){...})>)       = InitializeParameter[#this]   : &:r1054_4
# 1054|     r1054_6(glval<decltype([...](...){...})>)        = Load[#this]                  : &:r1054_4, ~m?
# 1054|     mu1054_7(decltype([...](...){...}))              = InitializeIndirection[#this] : &:r1054_6
# 1054|     r1054_8(glval<float>)                            = VariableAddress[f]           : 
# 1054|     mu1054_9(float)                                  = InitializeParameter[f]       : &:r1054_8
# 1054|     r1054_10(glval<char>)                            = VariableAddress[#return]     : 
# 1054|     r1054_11(glval<unknown>)                         = VariableAddress[#this]       : 
# 1054|     r1054_12(lambda [] type at line 1054, col. 23 *) = Load[#this]                  : &:r1054_11, ~m?
# 1054|     r1054_13(glval<String &>)                        = FieldAddress[s]              : r1054_12
# 1054|     r1054_14(String &)                               = Load[?]                      : &:r1054_13, ~m?
# 1054|     r1054_15(glval<String>)                          = CopyValue                    : r1054_14
# 1054|     r1054_16(glval<unknown>)                         = FunctionAddress[c_str]       : 
# 1054|     r1054_17(char *)                                 = Call[c_str]                  : func:r1054_16, this:r1054_15
# 1054|     mu1054_18(unknown)                               = ^CallSideEffect              : ~m?
# 1054|     v1054_19(void)                                   = ^IndirectReadSideEffect[-1]  : &:r1054_15, ~m?
# 1054|     r1054_20(glval<unknown>)                         = VariableAddress[#this]       : 
# 1054|     r1054_21(lambda [] type at line 1054, col. 23 *) = Load[#this]                  : &:r1054_20, ~m?
# 1054|     r1054_22(glval<int>)                             = FieldAddress[x]              : r1054_21
# 1054|     r1054_23(int)                                    = Load[?]                      : &:r1054_22, ~m?
# 1054|     r1054_24(glval<unknown>)                         = VariableAddress[#this]       : 
# 1054|     r1054_25(lambda [] type at line 1054, col. 23 *) = Load[#this]                  : &:r1054_24, ~m?
# 1054|     r1054_26(glval<int>)                             = FieldAddress[i]              : r1054_25
# 1054|     r1054_27(int)                                    = Load[?]                      : &:r1054_26, ~m?
# 1054|     r1054_28(int)                                    = Add                          : r1054_23, r1054_27
# 1054|     r1054_29(glval<unknown>)                         = VariableAddress[#this]       : 
# 1054|     r1054_30(lambda [] type at line 1054, col. 23 *) = Load[#this]                  : &:r1054_29, ~m?
# 1054|     r1054_31(glval<int &>)                           = FieldAddress[j]              : r1054_30
# 1054|     r1054_32(int &)                                  = Load[?]                      : &:r1054_31, ~m?
# 1054|     r1054_33(int)                                    = Load[?]                      : &:r1054_32, ~m?
# 1054|     r1054_34(int)                                    = Sub                          : r1054_28, r1054_33
# 1054|     r1054_35(glval<char>)                            = PointerAdd[1]                : r1054_17, r1054_34
# 1054|     r1054_36(char)                                   = Load[?]                      : &:r1054_35, ~m?
# 1054|     mu1054_37(char)                                  = Store[#return]               : &:r1054_10, r1054_36
# 1054|     v1054_38(void)                                   = ReturnIndirection[#this]     : &:r1054_6, ~m?
# 1054|     r1054_39(glval<char>)                            = VariableAddress[#return]     : 
# 1054|     v1054_40(void)                                   = ReturnValue                  : &:r1054_39, ~m?
# 1054|     v1054_41(void)                                   = AliasedUse                   : ~m?
# 1054|     v1054_42(void)                                   = ExitFunction                 : 

# 1126| void RangeBasedFor(std::vector<int> const&)
# 1126|   Block 0
# 1126|     v1126_1(void)                                                                       = EnterFunction               : 
# 1126|     mu1126_2(unknown)                                                                   = AliasedDefinition           : 
# 1126|     mu1126_3(unknown)                                                                   = InitializeNonLocal          : 
# 1126|     r1126_4(glval<vector<int> &>)                                                       = VariableAddress[v]          : 
# 1126|     mu1126_5(vector<int> &)                                                             = InitializeParameter[v]      : &:r1126_4
# 1126|     r1126_6(vector<int> &)                                                              = Load[v]                     : &:r1126_4, ~m?
# 1126|     mu1126_7(unknown)                                                                   = InitializeIndirection[v]    : &:r1126_6
# 1127|     r1127_1(glval<vector<int> &>)                                                       = VariableAddress[(__range)]  : 
# 1127|     r1127_2(glval<vector<int> &>)                                                       = VariableAddress[v]          : 
# 1127|     r1127_3(vector<int> &)                                                              = Load[v]                     : &:r1127_2, ~m?
# 1127|     r1127_4(glval<vector<int>>)                                                         = CopyValue                   : r1127_3
# 1127|     r1127_5(vector<int> &)                                                              = CopyValue                   : r1127_4
# 1127|     mu1127_6(vector<int> &)                                                             = Store[(__range)]            : &:r1127_1, r1127_5
# 1127|     r1127_7(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>)  = VariableAddress[(__begin)]  : 
# 1127|     r1127_8(glval<vector<int> &>)                                                       = VariableAddress[(__range)]  : 
# 1127|     r1127_9(vector<int> &)                                                              = Load[(__range)]             : &:r1127_8, ~m?
#-----|     r0_1(glval<vector<int>>)                                                            = CopyValue                   : r1127_9
# 1127|     r1127_10(glval<unknown>)                                                            = FunctionAddress[begin]      : 
# 1127|     r1127_11(iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)        = Call[begin]                 : func:r1127_10, this:r0_1
#-----|     v0_2(void)                                                                          = ^IndirectReadSideEffect[-1] : &:r0_1, ~m?
# 1127|     mu1127_12(iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)       = Store[(__begin)]            : &:r1127_7, r1127_11
# 1127|     r1127_13(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>) = VariableAddress[(__end)]    : 
# 1127|     r1127_14(glval<vector<int> &>)                                                      = VariableAddress[(__range)]  : 
# 1127|     r1127_15(vector<int> &)                                                             = Load[(__range)]             : &:r1127_14, ~m?
#-----|     r0_3(glval<vector<int>>)                                                            = CopyValue                   : r1127_15
# 1127|     r1127_16(glval<unknown>)                                                            = FunctionAddress[end]        : 
# 1127|     r1127_17(iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)        = Call[end]                   : func:r1127_16, this:r0_3
#-----|     v0_4(void)                                                                          = ^IndirectReadSideEffect[-1] : &:r0_3, ~m?
# 1127|     mu1127_18(iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)       = Store[(__end)]              : &:r1127_13, r1127_17
#-----|   Goto -> Block 1

# 1127|   Block 1
# 1127|     r1127_19(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>) = VariableAddress[(__begin)]      : 
#-----|     r0_5(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>)     = Convert                         : r1127_19
# 1127|     r1127_20(glval<unknown>)                                                            = FunctionAddress[operator!=]     : 
#-----|     r0_6(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>)     = VariableAddress[#temp0:0]       : 
#-----|     mu0_7(iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)           = Uninitialized[#temp0:0]         : &:r0_6
# 1127|     r1127_21(glval<unknown>)                                                            = FunctionAddress[iterator]       : 
# 1127|     r1127_22(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>) = VariableAddress[(__end)]        : 
#-----|     r0_8(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>)     = Convert                         : r1127_22
#-----|     r0_9(iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &> &)          = CopyValue                       : r0_8
# 1127|     v1127_23(void)                                                                      = Call[iterator]                  : func:r1127_21, this:r0_6, 0:r0_9
# 1127|     mu1127_24(unknown)                                                                  = ^CallSideEffect                 : ~m?
#-----|     v0_10(void)                                                                         = ^BufferReadSideEffect[0]        : &:r0_9, ~m?
# 1127|     mu1127_25(iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)       = ^IndirectMayWriteSideEffect[-1] : &:r0_6
#-----|     r0_11(iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)           = Load[#temp0:0]                  : &:r0_6, ~m?
# 1127|     r1127_26(bool)                                                                      = Call[operator!=]                : func:r1127_20, this:r0_5, 0:r0_11
# 1127|     mu1127_27(unknown)                                                                  = ^CallSideEffect                 : ~m?
#-----|     v0_12(void)                                                                         = ^IndirectReadSideEffect[-1]     : &:r0_5, ~m?
# 1127|     v1127_28(void)                                                                      = ConditionalBranch               : r1127_26
#-----|   False -> Block 5
#-----|   True -> Block 2

# 1127|   Block 2
# 1127|     r1127_29(glval<int>)                                                                = VariableAddress[e]          : 
# 1127|     r1127_30(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>) = VariableAddress[(__begin)]  : 
#-----|     r0_13(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>)    = Convert                     : r1127_30
# 1127|     r1127_31(glval<unknown>)                                                            = FunctionAddress[operator*]  : 
# 1127|     r1127_32(int &)                                                                     = Call[operator*]             : func:r1127_31, this:r0_13
# 1127|     mu1127_33(unknown)                                                                  = ^CallSideEffect             : ~m?
#-----|     v0_14(void)                                                                         = ^IndirectReadSideEffect[-1] : &:r0_13, ~m?
# 1127|     r1127_34(int)                                                                       = Load[?]                     : &:r1127_32, ~m?
# 1127|     mu1127_35(int)                                                                      = Store[e]                    : &:r1127_29, r1127_34
# 1128|     r1128_1(glval<int>)                                                                 = VariableAddress[e]          : 
# 1128|     r1128_2(int)                                                                        = Load[e]                     : &:r1128_1, ~m?
# 1128|     r1128_3(int)                                                                        = Constant[0]                 : 
# 1128|     r1128_4(bool)                                                                       = CompareGT                   : r1128_2, r1128_3
# 1128|     v1128_5(void)                                                                       = ConditionalBranch           : r1128_4
#-----|   False -> Block 4
#-----|   True -> Block 3

# 1129|   Block 3
# 1129|     v1129_1(void) = NoOp : 
#-----|   Goto -> Block 4

# 1127|   Block 4
# 1127|     v1127_36(void)                                                                      = NoOp                            : 
# 1127|     r1127_37(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>) = VariableAddress[(__begin)]      : 
# 1127|     r1127_38(glval<unknown>)                                                            = FunctionAddress[operator++]     : 
# 1127|     r1127_39(iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &> &)      = Call[operator++]                : func:r1127_38, this:r1127_37
# 1127|     mu1127_40(unknown)                                                                  = ^CallSideEffect                 : ~m?
# 1127|     v1127_41(void)                                                                      = ^IndirectReadSideEffect[-1]     : &:r1127_37, ~m?
# 1127|     mu1127_42(iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)       = ^IndirectMayWriteSideEffect[-1] : &:r1127_37
# 1127|     r1127_43(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>) = CopyValue                       : r1127_39
#-----|   Goto (back edge) -> Block 1

# 1133|   Block 5
# 1133|     r1133_1(glval<vector<int> &>)                                                       = VariableAddress[(__range)]  : 
# 1133|     r1133_2(glval<vector<int> &>)                                                       = VariableAddress[v]          : 
# 1133|     r1133_3(vector<int> &)                                                              = Load[v]                     : &:r1133_2, ~m?
# 1133|     r1133_4(glval<vector<int>>)                                                         = CopyValue                   : r1133_3
# 1133|     r1133_5(vector<int> &)                                                              = CopyValue                   : r1133_4
# 1133|     mu1133_6(vector<int> &)                                                             = Store[(__range)]            : &:r1133_1, r1133_5
# 1133|     r1133_7(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>)  = VariableAddress[(__begin)]  : 
# 1133|     r1133_8(glval<vector<int> &>)                                                       = VariableAddress[(__range)]  : 
# 1133|     r1133_9(vector<int> &)                                                              = Load[(__range)]             : &:r1133_8, ~m?
#-----|     r0_15(glval<vector<int>>)                                                           = CopyValue                   : r1133_9
# 1133|     r1133_10(glval<unknown>)                                                            = FunctionAddress[begin]      : 
# 1133|     r1133_11(iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)        = Call[begin]                 : func:r1133_10, this:r0_15
#-----|     v0_16(void)                                                                         = ^IndirectReadSideEffect[-1] : &:r0_15, ~m?
# 1133|     mu1133_12(iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)       = Store[(__begin)]            : &:r1133_7, r1133_11
# 1133|     r1133_13(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>) = VariableAddress[(__end)]    : 
# 1133|     r1133_14(glval<vector<int> &>)                                                      = VariableAddress[(__range)]  : 
# 1133|     r1133_15(vector<int> &)                                                             = Load[(__range)]             : &:r1133_14, ~m?
#-----|     r0_17(glval<vector<int>>)                                                           = CopyValue                   : r1133_15
# 1133|     r1133_16(glval<unknown>)                                                            = FunctionAddress[end]        : 
# 1133|     r1133_17(iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)        = Call[end]                   : func:r1133_16, this:r0_17
#-----|     v0_18(void)                                                                         = ^IndirectReadSideEffect[-1] : &:r0_17, ~m?
# 1133|     mu1133_18(iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)       = Store[(__end)]              : &:r1133_13, r1133_17
#-----|   Goto -> Block 6

# 1133|   Block 6
# 1133|     r1133_19(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>) = VariableAddress[(__begin)]      : 
#-----|     r0_19(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>)    = Convert                         : r1133_19
# 1133|     r1133_20(glval<unknown>)                                                            = FunctionAddress[operator!=]     : 
#-----|     r0_20(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>)    = VariableAddress[#temp0:0]       : 
#-----|     mu0_21(iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)          = Uninitialized[#temp0:0]         : &:r0_20
# 1133|     r1133_21(glval<unknown>)                                                            = FunctionAddress[iterator]       : 
# 1133|     r1133_22(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>) = VariableAddress[(__end)]        : 
#-----|     r0_22(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>)    = Convert                         : r1133_22
#-----|     r0_23(iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &> &)         = CopyValue                       : r0_22
# 1133|     v1133_23(void)                                                                      = Call[iterator]                  : func:r1133_21, this:r0_20, 0:r0_23
# 1133|     mu1133_24(unknown)                                                                  = ^CallSideEffect                 : ~m?
#-----|     v0_24(void)                                                                         = ^BufferReadSideEffect[0]        : &:r0_23, ~m?
# 1133|     mu1133_25(iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)       = ^IndirectMayWriteSideEffect[-1] : &:r0_20
#-----|     r0_25(iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)           = Load[#temp0:0]                  : &:r0_20, ~m?
# 1133|     r1133_26(bool)                                                                      = Call[operator!=]                : func:r1133_20, this:r0_19, 0:r0_25
# 1133|     mu1133_27(unknown)                                                                  = ^CallSideEffect                 : ~m?
#-----|     v0_26(void)                                                                         = ^IndirectReadSideEffect[-1]     : &:r0_19, ~m?
# 1133|     v1133_28(void)                                                                      = ConditionalBranch               : r1133_26
#-----|   False -> Block 10
#-----|   True -> Block 8

# 1133|   Block 7
# 1133|     r1133_29(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>) = VariableAddress[(__begin)]      : 
# 1133|     r1133_30(glval<unknown>)                                                            = FunctionAddress[operator++]     : 
# 1133|     r1133_31(iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &> &)      = Call[operator++]                : func:r1133_30, this:r1133_29
# 1133|     mu1133_32(unknown)                                                                  = ^CallSideEffect                 : ~m?
# 1133|     v1133_33(void)                                                                      = ^IndirectReadSideEffect[-1]     : &:r1133_29, ~m?
# 1133|     mu1133_34(iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)       = ^IndirectMayWriteSideEffect[-1] : &:r1133_29
# 1133|     r1133_35(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>) = CopyValue                       : r1133_31
#-----|   Goto (back edge) -> Block 6

# 1133|   Block 8
# 1133|     r1133_36(glval<int &>)                                                              = VariableAddress[e]          : 
# 1133|     r1133_37(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>) = VariableAddress[(__begin)]  : 
#-----|     r0_27(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>)    = Convert                     : r1133_37
# 1133|     r1133_38(glval<unknown>)                                                            = FunctionAddress[operator*]  : 
# 1133|     r1133_39(int &)                                                                     = Call[operator*]             : func:r1133_38, this:r0_27
# 1133|     mu1133_40(unknown)                                                                  = ^CallSideEffect             : ~m?
#-----|     v0_28(void)                                                                         = ^IndirectReadSideEffect[-1] : &:r0_27, ~m?
# 1133|     r1133_41(glval<int>)                                                                = CopyValue                   : r1133_39
# 1133|     r1133_42(glval<int>)                                                                = Convert                     : r1133_41
# 1133|     r1133_43(int &)                                                                     = CopyValue                   : r1133_42
# 1133|     mu1133_44(int &)                                                                    = Store[e]                    : &:r1133_36, r1133_43
# 1134|     r1134_1(glval<int &>)                                                               = VariableAddress[e]          : 
# 1134|     r1134_2(int &)                                                                      = Load[e]                     : &:r1134_1, ~m?
# 1134|     r1134_3(int)                                                                        = Load[?]                     : &:r1134_2, ~m?
# 1134|     r1134_4(int)                                                                        = Constant[5]                 : 
# 1134|     r1134_5(bool)                                                                       = CompareLT                   : r1134_3, r1134_4
# 1134|     v1134_6(void)                                                                       = ConditionalBranch           : r1134_5
#-----|   False -> Block 7
#-----|   True -> Block 9

# 1135|   Block 9
# 1135|     v1135_1(void) = NoOp : 
#-----|   Goto -> Block 10

# 1137|   Block 10
# 1137|     v1137_1(void)  = NoOp                 : 
# 1138|     v1138_1(void)  = NoOp                 : 
# 1126|     v1126_8(void)  = ReturnIndirection[v] : &:r1126_6, ~m?
# 1126|     v1126_9(void)  = ReturnVoid           : 
# 1126|     v1126_10(void) = AliasedUse           : ~m?
# 1126|     v1126_11(void) = ExitFunction         : 

# 1157| int AsmStmt(int)
# 1157|   Block 0
# 1157|     v1157_1(void)       = EnterFunction            : 
# 1157|     mu1157_2(unknown)   = AliasedDefinition        : 
# 1157|     mu1157_3(unknown)   = InitializeNonLocal       : 
# 1157|     r1157_4(glval<int>) = VariableAddress[x]       : 
# 1157|     mu1157_5(int)       = InitializeParameter[x]   : &:r1157_4
# 1158|     mu1158_1(unknown)   = InlineAsm                : ~m?
# 1159|     r1159_1(glval<int>) = VariableAddress[#return] : 
# 1159|     r1159_2(glval<int>) = VariableAddress[x]       : 
# 1159|     r1159_3(int)        = Load[x]                  : &:r1159_2, ~m?
# 1159|     mu1159_4(int)       = Store[#return]           : &:r1159_1, r1159_3
# 1157|     r1157_6(glval<int>) = VariableAddress[#return] : 
# 1157|     v1157_7(void)       = ReturnValue              : &:r1157_6, ~m?
# 1157|     v1157_8(void)       = AliasedUse               : ~m?
# 1157|     v1157_9(void)       = ExitFunction             : 

# 1162| void AsmStmtWithOutputs(unsigned int&, unsigned int, unsigned int&, unsigned int)
# 1162|   Block 0
# 1162|     v1162_1(void)                   = EnterFunction            : 
# 1162|     mu1162_2(unknown)               = AliasedDefinition        : 
# 1162|     mu1162_3(unknown)               = InitializeNonLocal       : 
# 1162|     r1162_4(glval<unsigned int &>)  = VariableAddress[a]       : 
# 1162|     mu1162_5(unsigned int &)        = InitializeParameter[a]   : &:r1162_4
# 1162|     r1162_6(unsigned int &)         = Load[a]                  : &:r1162_4, ~m?
# 1162|     mu1162_7(unknown)               = InitializeIndirection[a] : &:r1162_6
# 1162|     r1162_8(glval<unsigned int>)    = VariableAddress[b]       : 
# 1162|     mu1162_9(unsigned int)          = InitializeParameter[b]   : &:r1162_8
# 1162|     r1162_10(glval<unsigned int &>) = VariableAddress[c]       : 
# 1162|     mu1162_11(unsigned int &)       = InitializeParameter[c]   : &:r1162_10
# 1162|     r1162_12(unsigned int &)        = Load[c]                  : &:r1162_10, ~m?
# 1162|     mu1162_13(unknown)              = InitializeIndirection[c] : &:r1162_12
# 1162|     r1162_14(glval<unsigned int>)   = VariableAddress[d]       : 
# 1162|     mu1162_15(unsigned int)         = InitializeParameter[d]   : &:r1162_14
# 1167|     r1167_1(glval<unsigned int &>)  = VariableAddress[a]       : 
# 1167|     r1167_2(unsigned int &)         = Load[a]                  : &:r1167_1, ~m?
# 1167|     r1167_3(glval<unsigned int>)    = CopyValue                : r1167_2
# 1167|     r1167_4(glval<unsigned int>)    = VariableAddress[b]       : 
# 1167|     r1167_5(glval<unsigned int &>)  = VariableAddress[c]       : 
# 1167|     r1167_6(unsigned int &)         = Load[c]                  : &:r1167_5, ~m?
# 1167|     r1167_7(unsigned int)           = Load[?]                  : &:r1167_6, ~m?
# 1167|     r1167_8(glval<unsigned int>)    = VariableAddress[d]       : 
# 1167|     r1167_9(unsigned int)           = Load[d]                  : &:r1167_8, ~m?
# 1164|     mu1164_1(unknown)               = InlineAsm                : ~m?, 0:r1167_3, 1:r1167_4, 2:r1167_7, 3:r1167_9
# 1169|     v1169_1(void)                   = NoOp                     : 
# 1162|     v1162_16(void)                  = ReturnIndirection[a]     : &:r1162_6, ~m?
# 1162|     v1162_17(void)                  = ReturnIndirection[c]     : &:r1162_12, ~m?
# 1162|     v1162_18(void)                  = ReturnVoid               : 
# 1162|     v1162_19(void)                  = AliasedUse               : ~m?
# 1162|     v1162_20(void)                  = ExitFunction             : 

# 1171| void ExternDeclarations()
# 1171|   Block 0
# 1171|     v1171_1(void)       = EnterFunction      : 
# 1171|     mu1171_2(unknown)   = AliasedDefinition  : 
# 1171|     mu1171_3(unknown)   = InitializeNonLocal : 
# 1174|     r1174_1(glval<int>) = VariableAddress[x] : 
# 1174|     mu1174_2(int)       = Uninitialized[x]   : &:r1174_1
# 1175|     r1175_1(glval<int>) = VariableAddress[y] : 
# 1175|     mu1175_2(int)       = Uninitialized[y]   : &:r1175_1
# 1176|     r1176_1(glval<int>) = VariableAddress[h] : 
# 1176|     mu1176_2(int)       = Uninitialized[h]   : &:r1176_1
# 1178|     v1178_1(void)       = NoOp               : 
# 1171|     v1171_4(void)       = ReturnVoid         : 
# 1171|     v1171_5(void)       = AliasedUse         : ~m?
# 1171|     v1171_6(void)       = ExitFunction       : 

# 1186| void ExternDeclarationsInMacro()
# 1186|   Block 0
# 1186|     v1186_1(void)       = EnterFunction      : 
# 1186|     mu1186_2(unknown)   = AliasedDefinition  : 
# 1186|     mu1186_3(unknown)   = InitializeNonLocal : 
# 1188|     r1188_1(glval<int>) = VariableAddress[i] : 
# 1188|     r1188_2(int)        = Constant[0]        : 
# 1188|     mu1188_3(int)       = Store[i]           : &:r1188_1, r1188_2
#-----|   Goto -> Block 1

# 1188|   Block 1
# 1188|     r1188_4(glval<int>) = VariableAddress[i] : 
# 1188|     r1188_5(int)        = Load[i]            : &:r1188_4, ~m?
# 1188|     r1188_6(int)        = Constant[10]       : 
# 1188|     r1188_7(bool)       = CompareLT          : r1188_5, r1188_6
# 1188|     v1188_8(void)       = ConditionalBranch  : r1188_7
#-----|   False -> Block 3
#-----|   True -> Block 2

# 1188|   Block 2
# 1188|     r1188_9(glval<int>) = VariableAddress[i] : 
# 1188|     r1188_10(int)       = Load[i]            : &:r1188_9, ~m?
# 1188|     r1188_11(int)       = Constant[1]        : 
# 1188|     r1188_12(int)       = Add                : r1188_10, r1188_11
# 1188|     mu1188_13(int)      = Store[i]           : &:r1188_9, r1188_12
#-----|   Goto (back edge) -> Block 1

# 1188|   Block 3
# 1188|     v1188_14(void) = NoOp         : 
# 1189|     v1189_1(void)  = NoOp         : 
# 1186|     v1186_4(void)  = ReturnVoid   : 
# 1186|     v1186_5(void)  = AliasedUse   : ~m?
# 1186|     v1186_6(void)  = ExitFunction : 

# 1191| void TryCatchNoCatchAny(bool)
# 1191|   Block 0
# 1191|     v1191_1(void)        = EnterFunction          : 
# 1191|     mu1191_2(unknown)    = AliasedDefinition      : 
# 1191|     mu1191_3(unknown)    = InitializeNonLocal     : 
# 1191|     r1191_4(glval<bool>) = VariableAddress[b]     : 
# 1191|     mu1191_5(bool)       = InitializeParameter[b] : &:r1191_4
# 1193|     r1193_1(glval<int>)  = VariableAddress[x]     : 
# 1193|     r1193_2(int)         = Constant[5]            : 
# 1193|     mu1193_3(int)        = Store[x]               : &:r1193_1, r1193_2
# 1194|     r1194_1(glval<bool>) = VariableAddress[b]     : 
# 1194|     r1194_2(bool)        = Load[b]                : &:r1194_1, ~m?
# 1194|     v1194_3(void)        = ConditionalBranch      : r1194_2
#-----|   False -> Block 4
#-----|   True -> Block 3

# 1191|   Block 1
# 1191|     v1191_6(void) = AliasedUse   : ~m?
# 1191|     v1191_7(void) = ExitFunction : 

# 1191|   Block 2
# 1191|     v1191_8(void) = Unwind : 
#-----|   Goto -> Block 1

# 1195|   Block 3
# 1195|     r1195_1(glval<char *>)   = VariableAddress[#throw1195:7]    : 
# 1195|     r1195_2(glval<char[15]>) = StringConstant["string literal"] : 
# 1195|     r1195_3(char *)          = Convert                          : r1195_2
# 1195|     mu1195_4(char *)         = Store[#throw1195:7]              : &:r1195_1, r1195_3
# 1195|     v1195_5(void)            = ThrowValue                       : &:r1195_1, ~m?
#-----|   Exception -> Block 9

# 1197|   Block 4
# 1197|     r1197_1(glval<int>) = VariableAddress[x] : 
# 1197|     r1197_2(int)        = Load[x]            : &:r1197_1, ~m?
# 1197|     r1197_3(int)        = Constant[2]        : 
# 1197|     r1197_4(bool)       = CompareLT          : r1197_2, r1197_3
# 1197|     v1197_5(void)       = ConditionalBranch  : r1197_4
#-----|   False -> Block 8
#-----|   True -> Block 5

# 1198|   Block 5
# 1198|     r1198_1(glval<bool>) = VariableAddress[b] : 
# 1198|     r1198_2(bool)        = Load[b]            : &:r1198_1, ~m?
# 1198|     v1198_3(void)        = ConditionalBranch  : r1198_2
#-----|   False -> Block 7
#-----|   True -> Block 6

# 1198|   Block 6
# 1198|     r1198_4(int)        = Constant[7]                   : 
# 1198|     r1198_5(glval<int>) = VariableAddress[#temp1198:11] : 
# 1198|     mu1198_6(int)       = Store[#temp1198:11]           : &:r1198_5, r1198_4
# 1198|     r1198_7(glval<int>) = VariableAddress[#temp1198:11] : 
# 1198|     r1198_8(int)        = Load[#temp1198:11]            : &:r1198_7, ~m?
# 1198|     r1198_9(glval<int>) = VariableAddress[x]            : 
# 1198|     mu1198_10(int)      = Store[x]                      : &:r1198_9, r1198_8
#-----|   Goto -> Block 8

# 1198|   Block 7
# 1198|     r1198_11(glval<String>)   = VariableAddress[#throw1198:19]  : 
# 1198|     mu1198_12(String)         = Uninitialized[#throw1198:19]    : &:r1198_11
# 1198|     r1198_13(glval<unknown>)  = FunctionAddress[String]         : 
# 1198|     r1198_14(glval<char[14]>) = StringConstant["String object"] : 
# 1198|     r1198_15(char *)          = Convert                         : r1198_14
# 1198|     v1198_16(void)            = Call[String]                    : func:r1198_13, this:r1198_11, 0:r1198_15
# 1198|     mu1198_17(unknown)        = ^CallSideEffect                 : ~m?
# 1198|     v1198_18(void)            = ^BufferReadSideEffect[0]        : &:r1198_15, ~m?
# 1198|     mu1198_19(String)         = ^IndirectMayWriteSideEffect[-1] : &:r1198_11
# 1198|     v1198_20(void)            = ThrowValue                      : &:r1198_11, ~m?
#-----|   Exception -> Block 9

# 1200|   Block 8
# 1200|     r1200_1(int)        = Constant[7]        : 
# 1200|     r1200_2(glval<int>) = VariableAddress[x] : 
# 1200|     mu1200_3(int)       = Store[x]           : &:r1200_2, r1200_1
#-----|   Goto -> Block 13

# 1202|   Block 9
# 1202|     v1202_1(void) = CatchByType[const char *] : 
#-----|   Exception -> Block 11
#-----|   Goto -> Block 10

# 1202|   Block 10
# 1202|     r1202_2(glval<char *>)  = VariableAddress[s]              : 
# 1202|     mu1202_3(char *)        = InitializeParameter[s]          : &:r1202_2
# 1202|     r1202_4(char *)         = Load[s]                         : &:r1202_2, ~m?
# 1202|     mu1202_5(unknown)       = InitializeIndirection[s]        : &:r1202_4
# 1203|     r1203_1(glval<String>)  = VariableAddress[#throw1203:5]   : 
# 1203|     mu1203_2(String)        = Uninitialized[#throw1203:5]     : &:r1203_1
# 1203|     r1203_3(glval<unknown>) = FunctionAddress[String]         : 
# 1203|     r1203_4(glval<char *>)  = VariableAddress[s]              : 
# 1203|     r1203_5(char *)         = Load[s]                         : &:r1203_4, ~m?
# 1203|     v1203_6(void)           = Call[String]                    : func:r1203_3, this:r1203_1, 0:r1203_5
# 1203|     mu1203_7(unknown)       = ^CallSideEffect                 : ~m?
# 1203|     v1203_8(void)           = ^BufferReadSideEffect[0]        : &:r1203_5, ~m?
# 1203|     mu1203_9(String)        = ^IndirectMayWriteSideEffect[-1] : &:r1203_1
# 1203|     v1203_10(void)          = ThrowValue                      : &:r1203_1, ~m?
#-----|   Exception -> Block 2

# 1205|   Block 11
# 1205|     v1205_1(void) = CatchByType[const String &] : 
#-----|   Exception -> Block 2
#-----|   Goto -> Block 12

# 1205|   Block 12
# 1205|     r1205_2(glval<String &>) = VariableAddress[e]       : 
# 1205|     mu1205_3(String &)       = InitializeParameter[e]   : &:r1205_2
# 1205|     r1205_4(String &)        = Load[e]                  : &:r1205_2, ~m?
# 1205|     mu1205_5(unknown)        = InitializeIndirection[e] : &:r1205_4
# 1205|     v1205_6(void)            = NoOp                     : 
#-----|   Goto -> Block 13

# 1207|   Block 13
# 1207|     v1207_1(void) = NoOp       : 
# 1191|     v1191_9(void) = ReturnVoid : 
#-----|   Goto -> Block 1

# 1211| void VectorTypes(int)
# 1211|   Block 0
# 1211|     v1211_1(void)                                        = EnterFunction                    : 
# 1211|     mu1211_2(unknown)                                    = AliasedDefinition                : 
# 1211|     mu1211_3(unknown)                                    = InitializeNonLocal               : 
# 1211|     r1211_4(glval<int>)                                  = VariableAddress[i]               : 
# 1211|     mu1211_5(int)                                        = InitializeParameter[i]           : &:r1211_4
# 1212|     r1212_1(glval<__attribute((vector_size(16UL))) int>) = VariableAddress[vi4]             : 
# 1212|     mu1212_2(__attribute((vector_size(16UL))) int)       = Uninitialized[vi4]               : &:r1212_1
# 1212|     r1212_3(int)                                         = Constant[0]                      : 
# 1212|     r1212_4(glval<int>)                                  = PointerAdd[4]                    : r1212_1, r1212_3
# 1212|     r1212_5(int)                                         = Constant[0]                      : 
# 1212|     mu1212_6(int)                                        = Store[?]                         : &:r1212_4, r1212_5
# 1212|     r1212_7(int)                                         = Constant[1]                      : 
# 1212|     r1212_8(glval<int>)                                  = PointerAdd[4]                    : r1212_1, r1212_7
# 1212|     r1212_9(int)                                         = Constant[1]                      : 
# 1212|     mu1212_10(int)                                       = Store[?]                         : &:r1212_8, r1212_9
# 1212|     r1212_11(int)                                        = Constant[2]                      : 
# 1212|     r1212_12(glval<int>)                                 = PointerAdd[4]                    : r1212_1, r1212_11
# 1212|     r1212_13(int)                                        = Constant[2]                      : 
# 1212|     mu1212_14(int)                                       = Store[?]                         : &:r1212_12, r1212_13
# 1212|     r1212_15(int)                                        = Constant[3]                      : 
# 1212|     r1212_16(glval<int>)                                 = PointerAdd[4]                    : r1212_1, r1212_15
# 1212|     r1212_17(int)                                        = Constant[3]                      : 
# 1212|     mu1212_18(int)                                       = Store[?]                         : &:r1212_16, r1212_17
# 1213|     r1213_1(glval<int>)                                  = VariableAddress[x]               : 
# 1213|     r1213_2(glval<__attribute((vector_size(16UL))) int>) = VariableAddress[vi4]             : 
# 1213|     r1213_3(glval<int>)                                  = VariableAddress[i]               : 
# 1213|     r1213_4(int)                                         = Load[i]                          : &:r1213_3, ~m?
# 1213|     r1213_5(glval<int>)                                  = PointerAdd[4]                    : r1213_2, r1213_4
# 1213|     r1213_6(int)                                         = Load[?]                          : &:r1213_5, ~m?
# 1213|     mu1213_7(int)                                        = Store[x]                         : &:r1213_1, r1213_6
# 1214|     r1214_1(glval<int>)                                  = VariableAddress[x]               : 
# 1214|     r1214_2(int)                                         = Load[x]                          : &:r1214_1, ~m?
# 1214|     r1214_3(glval<__attribute((vector_size(16UL))) int>) = VariableAddress[vi4]             : 
# 1214|     r1214_4(glval<int>)                                  = VariableAddress[i]               : 
# 1214|     r1214_5(int)                                         = Load[i]                          : &:r1214_4, ~m?
# 1214|     r1214_6(glval<int>)                                  = PointerAdd[4]                    : r1214_3, r1214_5
# 1214|     mu1214_7(int)                                        = Store[?]                         : &:r1214_6, r1214_2
# 1215|     r1215_1(glval<__attribute((vector_size(16UL))) int>) = VariableAddress[vi4_shuffle]     : 
# 1215|     r1215_2(glval<__attribute((vector_size(16UL))) int>) = VariableAddress[vi4]             : 
# 1215|     r1215_3(__attribute((vector_size(16UL))) int)        = Load[vi4]                        : &:r1215_2, ~m?
# 1215|     r1215_4(glval<__attribute((vector_size(16UL))) int>) = VariableAddress[vi4]             : 
# 1215|     r1215_5(__attribute((vector_size(16UL))) int)        = Load[vi4]                        : &:r1215_4, ~m?
# 1215|     r1215_6(int)                                         = Constant[3]                      : 
# 1215|     r1215_7(int)                                         = Constant[2]                      : 
# 1215|     r1215_8(int)                                         = Constant[1]                      : 
# 1215|     r1215_9(int)                                         = Constant[0]                      : 
# 1215|     r1215_10(__attribute((vector_size(16))) int)         = BuiltIn[__builtin_shufflevector] : 0:r1215_3, 1:r1215_5, 2:r1215_6, 3:r1215_7, 4:r1215_8, 5:r1215_9
# 1215|     mu1215_11(__attribute((vector_size(16UL))) int)      = Store[vi4_shuffle]               : &:r1215_1, r1215_10
# 1216|     r1216_1(glval<__attribute((vector_size(16UL))) int>) = VariableAddress[vi4]             : 
# 1216|     r1216_2(__attribute((vector_size(16UL))) int)        = Load[vi4]                        : &:r1216_1, ~m?
# 1216|     r1216_3(glval<__attribute((vector_size(16UL))) int>) = VariableAddress[vi4_shuffle]     : 
# 1216|     r1216_4(__attribute((vector_size(16UL))) int)        = Load[vi4_shuffle]                : &:r1216_3, ~m?
# 1216|     r1216_5(__attribute((vector_size(16UL))) int)        = Add                              : r1216_2, r1216_4
# 1216|     r1216_6(glval<__attribute((vector_size(16UL))) int>) = VariableAddress[vi4]             : 
# 1216|     mu1216_7(__attribute((vector_size(16UL))) int)       = Store[vi4]                       : &:r1216_6, r1216_5
# 1217|     v1217_1(void)                                        = NoOp                             : 
# 1211|     v1211_6(void)                                        = ReturnVoid                       : 
# 1211|     v1211_7(void)                                        = AliasedUse                       : ~m?
# 1211|     v1211_8(void)                                        = ExitFunction                     : 

# 1221| int ModeledCallTarget(int)
# 1221|   Block 0
# 1221|     v1221_1(void)           = EnterFunction                      : 
# 1221|     mu1221_2(unknown)       = AliasedDefinition                  : 
# 1221|     mu1221_3(unknown)       = InitializeNonLocal                 : 
# 1221|     r1221_4(glval<int>)     = VariableAddress[x]                 : 
# 1221|     mu1221_5(int)           = InitializeParameter[x]             : &:r1221_4
# 1222|     r1222_1(glval<int>)     = VariableAddress[y]                 : 
# 1222|     mu1222_2(int)           = Uninitialized[y]                   : &:r1222_1
# 1223|     r1223_1(glval<unknown>) = FunctionAddress[memcpy]            : 
# 1223|     r1223_2(glval<int>)     = VariableAddress[y]                 : 
# 1223|     r1223_3(int *)          = CopyValue                          : r1223_2
# 1223|     r1223_4(void *)         = Convert                            : r1223_3
# 1223|     r1223_5(glval<int>)     = VariableAddress[x]                 : 
# 1223|     r1223_6(int *)          = CopyValue                          : r1223_5
# 1223|     r1223_7(void *)         = Convert                            : r1223_6
# 1223|     r1223_8(int)            = Constant[4]                        : 
# 1223|     r1223_9(void *)         = Call[memcpy]                       : func:r1223_1, 0:r1223_4, 1:r1223_7, 2:r1223_8
# 1223|     v1223_10(void)          = ^SizedBufferReadSideEffect[1]      : &:r1223_7, r1223_8, ~m?
# 1223|     mu1223_11(unknown)      = ^SizedBufferMustWriteSideEffect[0] : &:r1223_4, r1223_8
# 1224|     r1224_1(glval<int>)     = VariableAddress[#return]           : 
# 1224|     r1224_2(glval<int>)     = VariableAddress[y]                 : 
# 1224|     r1224_3(int)            = Load[y]                            : &:r1224_2, ~m?
# 1224|     mu1224_4(int)           = Store[#return]                     : &:r1224_1, r1224_3
# 1221|     r1221_6(glval<int>)     = VariableAddress[#return]           : 
# 1221|     v1221_7(void)           = ReturnValue                        : &:r1221_6, ~m?
# 1221|     v1221_8(void)           = AliasedUse                         : ~m?
# 1221|     v1221_9(void)           = ExitFunction                       : 

# 1227| String ReturnObjectImpl()
# 1227|   Block 0
# 1227|     v1227_1(void)           = EnterFunction                   : 
# 1227|     mu1227_2(unknown)       = AliasedDefinition               : 
# 1227|     mu1227_3(unknown)       = InitializeNonLocal              : 
# 1228|     r1228_1(glval<String>)  = VariableAddress[#return]        : 
# 1228|     mu1228_2(String)        = Uninitialized[#return]          : &:r1228_1
# 1228|     r1228_3(glval<unknown>) = FunctionAddress[String]         : 
# 1228|     r1228_4(glval<char[4]>) = StringConstant["foo"]           : 
# 1228|     r1228_5(char *)         = Convert                         : r1228_4
# 1228|     v1228_6(void)           = Call[String]                    : func:r1228_3, this:r1228_1, 0:r1228_5
# 1228|     mu1228_7(unknown)       = ^CallSideEffect                 : ~m?
# 1228|     v1228_8(void)           = ^BufferReadSideEffect[0]        : &:r1228_5, ~m?
# 1228|     mu1228_9(String)        = ^IndirectMayWriteSideEffect[-1] : &:r1228_1
# 1227|     r1227_4(glval<String>)  = VariableAddress[#return]        : 
# 1227|     v1227_5(void)           = ReturnValue                     : &:r1227_4, ~m?
# 1227|     v1227_6(void)           = AliasedUse                      : ~m?
# 1227|     v1227_7(void)           = ExitFunction                    : 

# 1231| void switch1Case(int)
# 1231|   Block 0
# 1231|     v1231_1(void)       = EnterFunction          : 
# 1231|     mu1231_2(unknown)   = AliasedDefinition      : 
# 1231|     mu1231_3(unknown)   = InitializeNonLocal     : 
# 1231|     r1231_4(glval<int>) = VariableAddress[x]     : 
# 1231|     mu1231_5(int)       = InitializeParameter[x] : &:r1231_4
# 1232|     r1232_1(glval<int>) = VariableAddress[y]     : 
# 1232|     r1232_2(int)        = Constant[0]            : 
# 1232|     mu1232_3(int)       = Store[y]               : &:r1232_1, r1232_2
# 1233|     r1233_1(glval<int>) = VariableAddress[x]     : 
# 1233|     r1233_2(int)        = Load[x]                : &:r1233_1, ~m?
# 1233|     v1233_3(void)       = Switch                 : r1233_2
#-----|   Case[1] -> Block 1
#-----|   Default -> Block 2

# 1234|   Block 1
# 1234|     v1234_1(void)       = NoOp               : 
# 1235|     r1235_1(int)        = Constant[2]        : 
# 1235|     r1235_2(glval<int>) = VariableAddress[y] : 
# 1235|     mu1235_3(int)       = Store[y]           : &:r1235_2, r1235_1
#-----|   Goto -> Block 2

# 1237|   Block 2
# 1237|     r1237_1(glval<int>) = VariableAddress[z] : 
# 1237|     r1237_2(glval<int>) = VariableAddress[y] : 
# 1237|     r1237_3(int)        = Load[y]            : &:r1237_2, ~m?
# 1237|     mu1237_4(int)       = Store[z]           : &:r1237_1, r1237_3
# 1238|     v1238_1(void)       = NoOp               : 
# 1231|     v1231_6(void)       = ReturnVoid         : 
# 1231|     v1231_7(void)       = AliasedUse         : ~m?
# 1231|     v1231_8(void)       = ExitFunction       : 

# 1240| void switch2Case_fallthrough(int)
# 1240|   Block 0
# 1240|     v1240_1(void)       = EnterFunction          : 
# 1240|     mu1240_2(unknown)   = AliasedDefinition      : 
# 1240|     mu1240_3(unknown)   = InitializeNonLocal     : 
# 1240|     r1240_4(glval<int>) = VariableAddress[x]     : 
# 1240|     mu1240_5(int)       = InitializeParameter[x] : &:r1240_4
# 1241|     r1241_1(glval<int>) = VariableAddress[y]     : 
# 1241|     r1241_2(int)        = Constant[0]            : 
# 1241|     mu1241_3(int)       = Store[y]               : &:r1241_1, r1241_2
# 1242|     r1242_1(glval<int>) = VariableAddress[x]     : 
# 1242|     r1242_2(int)        = Load[x]                : &:r1242_1, ~m?
# 1242|     v1242_3(void)       = Switch                 : r1242_2
#-----|   Case[1] -> Block 1
#-----|   Case[2] -> Block 2
#-----|   Default -> Block 3

# 1243|   Block 1
# 1243|     v1243_1(void)       = NoOp               : 
# 1244|     r1244_1(int)        = Constant[2]        : 
# 1244|     r1244_2(glval<int>) = VariableAddress[y] : 
# 1244|     mu1244_3(int)       = Store[y]           : &:r1244_2, r1244_1
#-----|   Goto -> Block 2

# 1245|   Block 2
# 1245|     v1245_1(void)       = NoOp               : 
# 1246|     r1246_1(int)        = Constant[3]        : 
# 1246|     r1246_2(glval<int>) = VariableAddress[y] : 
# 1246|     mu1246_3(int)       = Store[y]           : &:r1246_2, r1246_1
#-----|   Goto -> Block 3

# 1248|   Block 3
# 1248|     r1248_1(glval<int>) = VariableAddress[z] : 
# 1248|     r1248_2(glval<int>) = VariableAddress[y] : 
# 1248|     r1248_3(int)        = Load[y]            : &:r1248_2, ~m?
# 1248|     mu1248_4(int)       = Store[z]           : &:r1248_1, r1248_3
# 1249|     v1249_1(void)       = NoOp               : 
# 1240|     v1240_6(void)       = ReturnVoid         : 
# 1240|     v1240_7(void)       = AliasedUse         : ~m?
# 1240|     v1240_8(void)       = ExitFunction       : 

# 1251| void switch2Case(int)
# 1251|   Block 0
# 1251|     v1251_1(void)       = EnterFunction          : 
# 1251|     mu1251_2(unknown)   = AliasedDefinition      : 
# 1251|     mu1251_3(unknown)   = InitializeNonLocal     : 
# 1251|     r1251_4(glval<int>) = VariableAddress[x]     : 
# 1251|     mu1251_5(int)       = InitializeParameter[x] : &:r1251_4
# 1252|     r1252_1(glval<int>) = VariableAddress[y]     : 
# 1252|     r1252_2(int)        = Constant[0]            : 
# 1252|     mu1252_3(int)       = Store[y]               : &:r1252_1, r1252_2
# 1253|     r1253_1(glval<int>) = VariableAddress[x]     : 
# 1253|     r1253_2(int)        = Load[x]                : &:r1253_1, ~m?
# 1253|     v1253_3(void)       = Switch                 : r1253_2
#-----|   Case[1] -> Block 1
#-----|   Case[2] -> Block 2
#-----|   Default -> Block 3

# 1254|   Block 1
# 1254|     v1254_1(void)       = NoOp               : 
# 1255|     r1255_1(int)        = Constant[2]        : 
# 1255|     r1255_2(glval<int>) = VariableAddress[y] : 
# 1255|     mu1255_3(int)       = Store[y]           : &:r1255_2, r1255_1
# 1256|     v1256_1(void)       = NoOp               : 
#-----|   Goto -> Block 3

# 1257|   Block 2
# 1257|     v1257_1(void)       = NoOp               : 
# 1258|     r1258_1(int)        = Constant[3]        : 
# 1258|     r1258_2(glval<int>) = VariableAddress[y] : 
# 1258|     mu1258_3(int)       = Store[y]           : &:r1258_2, r1258_1
#-----|   Goto -> Block 3

# 1259|   Block 3
# 1259|     v1259_1(void)       = NoOp               : 
# 1260|     r1260_1(glval<int>) = VariableAddress[z] : 
# 1260|     r1260_2(glval<int>) = VariableAddress[y] : 
# 1260|     r1260_3(int)        = Load[y]            : &:r1260_2, ~m?
# 1260|     mu1260_4(int)       = Store[z]           : &:r1260_1, r1260_3
# 1261|     v1261_1(void)       = NoOp               : 
# 1251|     v1251_6(void)       = ReturnVoid         : 
# 1251|     v1251_7(void)       = AliasedUse         : ~m?
# 1251|     v1251_8(void)       = ExitFunction       : 

# 1263| void switch2Case_default(int)
# 1263|   Block 0
# 1263|     v1263_1(void)       = EnterFunction          : 
# 1263|     mu1263_2(unknown)   = AliasedDefinition      : 
# 1263|     mu1263_3(unknown)   = InitializeNonLocal     : 
# 1263|     r1263_4(glval<int>) = VariableAddress[x]     : 
# 1263|     mu1263_5(int)       = InitializeParameter[x] : &:r1263_4
# 1264|     r1264_1(glval<int>) = VariableAddress[y]     : 
# 1264|     r1264_2(int)        = Constant[0]            : 
# 1264|     mu1264_3(int)       = Store[y]               : &:r1264_1, r1264_2
# 1265|     r1265_1(glval<int>) = VariableAddress[x]     : 
# 1265|     r1265_2(int)        = Load[x]                : &:r1265_1, ~m?
# 1265|     v1265_3(void)       = Switch                 : r1265_2
#-----|   Case[1] -> Block 1
#-----|   Case[2] -> Block 2
#-----|   Default -> Block 3

# 1266|   Block 1
# 1266|     v1266_1(void)       = NoOp               : 
# 1267|     r1267_1(int)        = Constant[2]        : 
# 1267|     r1267_2(glval<int>) = VariableAddress[y] : 
# 1267|     mu1267_3(int)       = Store[y]           : &:r1267_2, r1267_1
# 1268|     v1268_1(void)       = NoOp               : 
#-----|   Goto -> Block 4

# 1270|   Block 2
# 1270|     v1270_1(void)       = NoOp               : 
# 1271|     r1271_1(int)        = Constant[3]        : 
# 1271|     r1271_2(glval<int>) = VariableAddress[y] : 
# 1271|     mu1271_3(int)       = Store[y]           : &:r1271_2, r1271_1
# 1272|     v1272_1(void)       = NoOp               : 
#-----|   Goto -> Block 4

# 1274|   Block 3
# 1274|     v1274_1(void)       = NoOp               : 
# 1275|     r1275_1(int)        = Constant[4]        : 
# 1275|     r1275_2(glval<int>) = VariableAddress[y] : 
# 1275|     mu1275_3(int)       = Store[y]           : &:r1275_2, r1275_1
#-----|   Goto -> Block 4

# 1276|   Block 4
# 1276|     v1276_1(void)       = NoOp               : 
# 1277|     r1277_1(glval<int>) = VariableAddress[z] : 
# 1277|     r1277_2(glval<int>) = VariableAddress[y] : 
# 1277|     r1277_3(int)        = Load[y]            : &:r1277_2, ~m?
# 1277|     mu1277_4(int)       = Store[z]           : &:r1277_1, r1277_3
# 1278|     v1278_1(void)       = NoOp               : 
# 1263|     v1263_6(void)       = ReturnVoid         : 
# 1263|     v1263_7(void)       = AliasedUse         : ~m?
# 1263|     v1263_8(void)       = ExitFunction       : 

# 1280| int staticLocalInit(int)
# 1280|   Block 0
# 1280|     v1280_1(void)        = EnterFunction           : 
# 1280|     mu1280_2(unknown)    = AliasedDefinition       : 
# 1280|     mu1280_3(unknown)    = InitializeNonLocal      : 
# 1280|     r1280_4(glval<int>)  = VariableAddress[x]      : 
# 1280|     mu1280_5(int)        = InitializeParameter[x]  : &:r1280_4
# 1283|     r1283_1(glval<bool>) = VariableAddress[c#init] : 
# 1283|     r1283_2(bool)        = Load[c#init]            : &:r1283_1, ~m?
# 1283|     v1283_3(void)        = ConditionalBranch       : r1283_2
#-----|   False -> Block 1
#-----|   True -> Block 2

# 1283|   Block 1
# 1283|     r1283_4(glval<int>) = VariableAddress[c] : 
# 1283|     r1283_5(glval<int>) = VariableAddress[x] : 
# 1283|     r1283_6(int)        = Load[x]            : &:r1283_5, ~m?
# 1283|     mu1283_7(int)       = Store[c]           : &:r1283_4, r1283_6
# 1283|     r1283_8(bool)       = Constant[1]        : 
# 1283|     mu1283_9(bool)      = Store[c#init]      : &:r1283_1, r1283_8
#-----|   Goto -> Block 2

# 1286|   Block 2
# 1286|     r1286_1(glval<int>)  = VariableAddress[#return] : 
# 1286|     r1286_2(glval<int>)  = VariableAddress[a]       : 
# 1286|     r1286_3(int)         = Load[a]                  : &:r1286_2, ~m?
# 1286|     r1286_4(glval<int>)  = VariableAddress[b]       : 
# 1286|     r1286_5(int)         = Load[b]                  : &:r1286_4, ~m?
# 1286|     r1286_6(int)         = Add                      : r1286_3, r1286_5
# 1286|     r1286_7(glval<int>)  = VariableAddress[c]       : 
# 1286|     r1286_8(int)         = Load[c]                  : &:r1286_7, ~m?
# 1286|     r1286_9(int)         = Add                      : r1286_6, r1286_8
# 1286|     r1286_10(glval<int>) = VariableAddress[d]       : 
# 1286|     r1286_11(int)        = Load[d]                  : &:r1286_10, ~m?
# 1286|     r1286_12(int)        = Add                      : r1286_9, r1286_11
# 1286|     mu1286_13(int)       = Store[#return]           : &:r1286_1, r1286_12
# 1280|     r1280_6(glval<int>)  = VariableAddress[#return] : 
# 1280|     v1280_7(void)        = ReturnValue              : &:r1280_6, ~m?
# 1280|     v1280_8(void)        = AliasedUse               : ~m?
# 1280|     v1280_9(void)        = ExitFunction             : 

# 1281| int a
# 1281|   Block 0
# 1281|     v1281_1(void)       = EnterFunction      : 
# 1281|     mu1281_2(unknown)   = AliasedDefinition  : 
# 1281|     r1281_3(glval<int>) = VariableAddress[a] : 
# 1281|     r1281_4(int)        = Constant[0]        : 
# 1281|     mu1281_5(int)       = Store[a]           : &:r1281_3, r1281_4
# 1281|     v1281_6(void)       = ReturnVoid         : 
# 1281|     v1281_7(void)       = AliasedUse         : ~m?
# 1281|     v1281_8(void)       = ExitFunction       : 

# 1282| int b
# 1282|   Block 0
# 1282|     v1282_1(void)       = EnterFunction      : 
# 1282|     mu1282_2(unknown)   = AliasedDefinition  : 
# 1282|     r1282_3(glval<int>) = VariableAddress[b] : 
# 1282|     r1282_4(int)        = Constant[4]        : 
# 1282|     mu1282_5(int)       = Store[b]           : &:r1282_3, r1282_4
# 1282|     v1282_6(void)       = ReturnVoid         : 
# 1282|     v1282_7(void)       = AliasedUse         : ~m?
# 1282|     v1282_8(void)       = ExitFunction       : 

# 1289| void staticLocalWithConstructor(char const*)
# 1289|   Block 0
# 1289|     v1289_1(void)          = EnterFunction                  : 
# 1289|     mu1289_2(unknown)      = AliasedDefinition              : 
# 1289|     mu1289_3(unknown)      = InitializeNonLocal             : 
# 1289|     r1289_4(glval<char *>) = VariableAddress[dynamic]       : 
# 1289|     mu1289_5(char *)       = InitializeParameter[dynamic]   : &:r1289_4
# 1289|     r1289_6(char *)        = Load[dynamic]                  : &:r1289_4, ~m?
# 1289|     mu1289_7(unknown)      = InitializeIndirection[dynamic] : &:r1289_6
# 1290|     r1290_1(glval<bool>)   = VariableAddress[a#init]        : 
# 1290|     r1290_2(bool)          = Load[a#init]                   : &:r1290_1, ~m?
# 1290|     v1290_3(void)          = ConditionalBranch              : r1290_2
#-----|   False -> Block 1
#-----|   True -> Block 2

# 1290|   Block 1
# 1290|     r1290_4(glval<String>) = VariableAddress[a]              : 
#-----|     r0_1(glval<unknown>)   = FunctionAddress[String]         : 
#-----|     v0_2(void)             = Call[String]                    : func:r0_1, this:r1290_4
#-----|     mu0_3(unknown)         = ^CallSideEffect                 : ~m?
#-----|     mu0_4(String)          = ^IndirectMayWriteSideEffect[-1] : &:r1290_4
# 1290|     r1290_5(bool)          = Constant[1]                     : 
# 1290|     mu1290_6(bool)         = Store[a#init]                   : &:r1290_1, r1290_5
#-----|   Goto -> Block 2

# 1291|   Block 2
# 1291|     r1291_1(glval<bool>) = VariableAddress[b#init] : 
# 1291|     r1291_2(bool)        = Load[b#init]            : &:r1291_1, ~m?
# 1291|     v1291_3(void)        = ConditionalBranch       : r1291_2
#-----|   False -> Block 3
#-----|   True -> Block 4

# 1291|   Block 3
# 1291|     r1291_4(glval<String>)  = VariableAddress[b]              : 
# 1291|     r1291_5(glval<unknown>) = FunctionAddress[String]         : 
# 1291|     r1291_6(glval<char[7]>) = StringConstant["static"]        : 
# 1291|     r1291_7(char *)         = Convert                         : r1291_6
# 1291|     v1291_8(void)           = Call[String]                    : func:r1291_5, this:r1291_4, 0:r1291_7
# 1291|     mu1291_9(unknown)       = ^CallSideEffect                 : ~m?
# 1291|     v1291_10(void)          = ^BufferReadSideEffect[0]        : &:r1291_7, ~m?
# 1291|     mu1291_11(String)       = ^IndirectMayWriteSideEffect[-1] : &:r1291_4
# 1291|     r1291_12(bool)          = Constant[1]                     : 
# 1291|     mu1291_13(bool)         = Store[b#init]                   : &:r1291_1, r1291_12
#-----|   Goto -> Block 4

# 1292|   Block 4
# 1292|     r1292_1(glval<bool>) = VariableAddress[c#init] : 
# 1292|     r1292_2(bool)        = Load[c#init]            : &:r1292_1, ~m?
# 1292|     v1292_3(void)        = ConditionalBranch       : r1292_2
#-----|   False -> Block 5
#-----|   True -> Block 6

# 1292|   Block 5
# 1292|     r1292_4(glval<String>)  = VariableAddress[c]              : 
# 1292|     r1292_5(glval<unknown>) = FunctionAddress[String]         : 
# 1292|     r1292_6(glval<char *>)  = VariableAddress[dynamic]        : 
# 1292|     r1292_7(char *)         = Load[dynamic]                   : &:r1292_6, ~m?
# 1292|     v1292_8(void)           = Call[String]                    : func:r1292_5, this:r1292_4, 0:r1292_7
# 1292|     mu1292_9(unknown)       = ^CallSideEffect                 : ~m?
# 1292|     v1292_10(void)          = ^BufferReadSideEffect[0]        : &:r1292_7, ~m?
# 1292|     mu1292_11(String)       = ^IndirectMayWriteSideEffect[-1] : &:r1292_4
# 1292|     r1292_12(bool)          = Constant[1]                     : 
# 1292|     mu1292_13(bool)         = Store[c#init]                   : &:r1292_1, r1292_12
#-----|   Goto -> Block 6

# 1293|   Block 6
# 1293|     v1293_1(void)  = NoOp                       : 
# 1289|     v1289_8(void)  = ReturnIndirection[dynamic] : &:r1289_6, ~m?
# 1289|     v1289_9(void)  = ReturnVoid                 : 
# 1289|     v1289_10(void) = AliasedUse                 : ~m?
# 1289|     v1289_11(void) = ExitFunction               : 

# 1300| void test_strings(char*, char*)
# 1300|   Block 0
# 1300|     v1300_1(void)              = EnterFunction                : 
# 1300|     mu1300_2(unknown)          = AliasedDefinition            : 
# 1300|     mu1300_3(unknown)          = InitializeNonLocal           : 
# 1300|     r1300_4(glval<char *>)     = VariableAddress[s1]          : 
# 1300|     mu1300_5(char *)           = InitializeParameter[s1]      : &:r1300_4
# 1300|     r1300_6(char *)            = Load[s1]                     : &:r1300_4, ~m?
# 1300|     mu1300_7(unknown)          = InitializeIndirection[s1]    : &:r1300_6
# 1300|     r1300_8(glval<char *>)     = VariableAddress[s2]          : 
# 1300|     mu1300_9(char *)           = InitializeParameter[s2]      : &:r1300_8
# 1300|     r1300_10(char *)           = Load[s2]                     : &:r1300_8, ~m?
# 1300|     mu1300_11(unknown)         = InitializeIndirection[s2]    : &:r1300_10
# 1301|     r1301_1(glval<char[1024]>) = VariableAddress[buffer]      : 
# 1301|     mu1301_2(char[1024])       = Uninitialized[buffer]        : &:r1301_1
# 1301|     r1301_3(int)               = Constant[0]                  : 
# 1301|     r1301_4(glval<char>)       = PointerAdd[1]                : r1301_1, r1301_3
# 1301|     r1301_5(char)              = Constant[0]                  : 
# 1301|     mu1301_6(char)             = Store[?]                     : &:r1301_4, r1301_5
# 1301|     r1301_7(int)               = Constant[1]                  : 
# 1301|     r1301_8(glval<char>)       = PointerAdd[1]                : r1301_1, r1301_7
# 1301|     r1301_9(unknown[1023])     = Constant[0]                  : 
# 1301|     mu1301_10(unknown[1023])   = Store[?]                     : &:r1301_8, r1301_9
# 1303|     r1303_1(glval<unknown>)    = FunctionAddress[strcpy]      : 
# 1303|     r1303_2(glval<char[1024]>) = VariableAddress[buffer]      : 
# 1303|     r1303_3(char *)            = Convert                      : r1303_2
# 1303|     r1303_4(glval<char *>)     = VariableAddress[s1]          : 
# 1303|     r1303_5(char *)            = Load[s1]                     : &:r1303_4, ~m?
# 1303|     r1303_6(char *)            = Convert                      : r1303_5
# 1303|     r1303_7(char *)            = Call[strcpy]                 : func:r1303_1, 0:r1303_3, 1:r1303_6
# 1303|     v1303_8(void)              = ^BufferReadSideEffect[1]     : &:r1303_6, ~m?
# 1303|     mu1303_9(unknown)          = ^BufferMayWriteSideEffect[0] : &:r1303_3
# 1304|     r1304_1(glval<unknown>)    = FunctionAddress[strcat]      : 
# 1304|     r1304_2(glval<char[1024]>) = VariableAddress[buffer]      : 
# 1304|     r1304_3(char *)            = Convert                      : r1304_2
# 1304|     r1304_4(glval<char *>)     = VariableAddress[s2]          : 
# 1304|     r1304_5(char *)            = Load[s2]                     : &:r1304_4, ~m?
# 1304|     r1304_6(char *)            = Convert                      : r1304_5
# 1304|     r1304_7(char *)            = Call[strcat]                 : func:r1304_1, 0:r1304_3, 1:r1304_6
# 1304|     v1304_8(void)              = ^BufferReadSideEffect[0]     : &:r1304_3, ~m?
# 1304|     v1304_9(void)              = ^BufferReadSideEffect[1]     : &:r1304_6, ~m?
# 1304|     mu1304_10(unknown)         = ^BufferMayWriteSideEffect[0] : &:r1304_3
# 1305|     v1305_1(void)              = NoOp                         : 
# 1300|     v1300_12(void)             = ReturnIndirection[s1]        : &:r1300_6, ~m?
# 1300|     v1300_13(void)             = ReturnIndirection[s2]        : &:r1300_10, ~m?
# 1300|     v1300_14(void)             = ReturnVoid                   : 
# 1300|     v1300_15(void)             = AliasedUse                   : ~m?
# 1300|     v1300_16(void)             = ExitFunction                 : 

# 1310| void A::static_member(A*, int)
# 1310|   Block 0
# 1310|     v1310_1(void)       = EnterFunction            : 
# 1310|     mu1310_2(unknown)   = AliasedDefinition        : 
# 1310|     mu1310_3(unknown)   = InitializeNonLocal       : 
# 1310|     r1310_4(glval<A *>) = VariableAddress[a]       : 
# 1310|     mu1310_5(A *)       = InitializeParameter[a]   : &:r1310_4
# 1310|     r1310_6(A *)        = Load[a]                  : &:r1310_4, ~m?
# 1310|     mu1310_7(unknown)   = InitializeIndirection[a] : &:r1310_6
# 1310|     r1310_8(glval<int>) = VariableAddress[x]       : 
# 1310|     mu1310_9(int)       = InitializeParameter[x]   : &:r1310_8
# 1311|     r1311_1(glval<int>) = VariableAddress[x]       : 
# 1311|     r1311_2(int)        = Load[x]                  : &:r1311_1, ~m?
# 1311|     r1311_3(glval<A *>) = VariableAddress[a]       : 
# 1311|     r1311_4(A *)        = Load[a]                  : &:r1311_3, ~m?
# 1311|     r1311_5(glval<int>) = FieldAddress[member]     : r1311_4
# 1311|     mu1311_6(int)       = Store[?]                 : &:r1311_5, r1311_2
# 1312|     v1312_1(void)       = NoOp                     : 
# 1310|     v1310_10(void)      = ReturnIndirection[a]     : &:r1310_6, ~m?
# 1310|     v1310_11(void)      = ReturnVoid               : 
# 1310|     v1310_12(void)      = AliasedUse               : ~m?
# 1310|     v1310_13(void)      = ExitFunction             : 

# 1319| void test_static_member_functions(int, A*)
# 1319|   Block 0
# 1319|     v1319_1(void)           = EnterFunction                              : 
# 1319|     mu1319_2(unknown)       = AliasedDefinition                          : 
# 1319|     mu1319_3(unknown)       = InitializeNonLocal                         : 
# 1319|     r1319_4(glval<int>)     = VariableAddress[int_arg]                   : 
# 1319|     mu1319_5(int)           = InitializeParameter[int_arg]               : &:r1319_4
# 1319|     r1319_6(glval<A *>)     = VariableAddress[a_arg]                     : 
# 1319|     mu1319_7(A *)           = InitializeParameter[a_arg]                 : &:r1319_6
# 1319|     r1319_8(A *)            = Load[a_arg]                                : &:r1319_6, ~m?
# 1319|     mu1319_9(unknown)       = InitializeIndirection[a_arg]               : &:r1319_8
# 1320|     r1320_1(glval<C>)       = VariableAddress[c]                         : 
# 1320|     mu1320_2(C)             = Uninitialized[c]                           : &:r1320_1
# 1320|     r1320_3(glval<unknown>) = FunctionAddress[C]                         : 
# 1320|     v1320_4(void)           = Call[C]                                    : func:r1320_3, this:r1320_1
# 1320|     mu1320_5(unknown)       = ^CallSideEffect                            : ~m?
# 1320|     mu1320_6(C)             = ^IndirectMayWriteSideEffect[-1]            : &:r1320_1
# 1321|     r1321_1(glval<C>)       = VariableAddress[c]                         : 
# 1321|     r1321_2(glval<unknown>) = FunctionAddress[StaticMemberFunction]      : 
# 1321|     r1321_3(int)            = Constant[10]                               : 
# 1321|     r1321_4(int)            = Call[StaticMemberFunction]                 : func:r1321_2, 0:r1321_3
# 1321|     mu1321_5(unknown)       = ^CallSideEffect                            : ~m?
# 1322|     r1322_1(glval<unknown>) = FunctionAddress[StaticMemberFunction]      : 
# 1322|     r1322_2(int)            = Constant[10]                               : 
# 1322|     r1322_3(int)            = Call[StaticMemberFunction]                 : func:r1322_1, 0:r1322_2
# 1322|     mu1322_4(unknown)       = ^CallSideEffect                            : ~m?
# 1324|     r1324_1(glval<A>)       = VariableAddress[a]                         : 
# 1324|     mu1324_2(A)             = Uninitialized[a]                           : &:r1324_1
# 1325|     r1325_1(glval<A>)       = VariableAddress[a]                         : 
# 1325|     r1325_2(glval<unknown>) = FunctionAddress[static_member]             : 
# 1325|     r1325_3(glval<A>)       = VariableAddress[a]                         : 
# 1325|     r1325_4(A *)            = CopyValue                                  : r1325_3
# 1325|     r1325_5(glval<int>)     = VariableAddress[int_arg]                   : 
# 1325|     r1325_6(int)            = Load[int_arg]                              : &:r1325_5, ~m?
# 1325|     v1325_7(void)           = Call[static_member]                        : func:r1325_2, 0:r1325_4, 1:r1325_6
# 1325|     mu1325_8(unknown)       = ^CallSideEffect                            : ~m?
# 1325|     v1325_9(void)           = ^BufferReadSideEffect[0]                   : &:r1325_4, ~m?
# 1325|     mu1325_10(unknown)      = ^BufferMayWriteSideEffect[0]               : &:r1325_4
# 1326|     r1326_1(glval<unknown>) = FunctionAddress[static_member]             : 
# 1326|     r1326_2(glval<A>)       = VariableAddress[a]                         : 
# 1326|     r1326_3(A *)            = CopyValue                                  : r1326_2
# 1326|     r1326_4(glval<int>)     = VariableAddress[int_arg]                   : 
# 1326|     r1326_5(int)            = Load[int_arg]                              : &:r1326_4, ~m?
# 1326|     v1326_6(void)           = Call[static_member]                        : func:r1326_1, 0:r1326_3, 1:r1326_5
# 1326|     mu1326_7(unknown)       = ^CallSideEffect                            : ~m?
# 1326|     v1326_8(void)           = ^BufferReadSideEffect[0]                   : &:r1326_3, ~m?
# 1326|     mu1326_9(unknown)       = ^BufferMayWriteSideEffect[0]               : &:r1326_3
# 1328|     r1328_1(glval<A>)       = VariableAddress[a]                         : 
# 1328|     r1328_2(A *)            = CopyValue                                  : r1328_1
# 1328|     r1328_3(glval<unknown>) = FunctionAddress[static_member]             : 
# 1328|     r1328_4(glval<A *>)     = VariableAddress[a_arg]                     : 
# 1328|     r1328_5(A *)            = Load[a_arg]                                : &:r1328_4, ~m?
# 1328|     r1328_6(glval<int>)     = VariableAddress[int_arg]                   : 
# 1328|     r1328_7(int)            = Load[int_arg]                              : &:r1328_6, ~m?
# 1328|     r1328_8(int)            = Constant[2]                                : 
# 1328|     r1328_9(int)            = Add                                        : r1328_7, r1328_8
# 1328|     v1328_10(void)          = Call[static_member]                        : func:r1328_3, 0:r1328_5, 1:r1328_9
# 1328|     mu1328_11(unknown)      = ^CallSideEffect                            : ~m?
# 1328|     v1328_12(void)          = ^BufferReadSideEffect[0]                   : &:r1328_5, ~m?
# 1328|     mu1328_13(unknown)      = ^BufferMayWriteSideEffect[0]               : &:r1328_5
# 1329|     r1329_1(glval<A *>)     = VariableAddress[a_arg]                     : 
# 1329|     r1329_2(A *)            = Load[a_arg]                                : &:r1329_1, ~m?
# 1329|     r1329_3(glval<A>)       = CopyValue                                  : r1329_2
# 1329|     r1329_4(glval<unknown>) = FunctionAddress[static_member]             : 
# 1329|     r1329_5(glval<A>)       = VariableAddress[a]                         : 
# 1329|     r1329_6(A *)            = CopyValue                                  : r1329_5
# 1329|     r1329_7(int)            = Constant[99]                               : 
# 1329|     v1329_8(void)           = Call[static_member]                        : func:r1329_4, 0:r1329_6, 1:r1329_7
# 1329|     mu1329_9(unknown)       = ^CallSideEffect                            : ~m?
# 1329|     v1329_10(void)          = ^BufferReadSideEffect[0]                   : &:r1329_6, ~m?
# 1329|     mu1329_11(unknown)      = ^BufferMayWriteSideEffect[0]               : &:r1329_6
# 1330|     r1330_1(glval<A *>)     = VariableAddress[a_arg]                     : 
# 1330|     r1330_2(A *)            = Load[a_arg]                                : &:r1330_1, ~m?
# 1330|     r1330_3(glval<unknown>) = FunctionAddress[static_member]             : 
# 1330|     r1330_4(glval<A *>)     = VariableAddress[a_arg]                     : 
# 1330|     r1330_5(A *)            = Load[a_arg]                                : &:r1330_4, ~m?
# 1330|     r1330_6(int)            = Constant[-1]                               : 
# 1330|     v1330_7(void)           = Call[static_member]                        : func:r1330_3, 0:r1330_5, 1:r1330_6
# 1330|     mu1330_8(unknown)       = ^CallSideEffect                            : ~m?
# 1330|     v1330_9(void)           = ^BufferReadSideEffect[0]                   : &:r1330_5, ~m?
# 1330|     mu1330_10(unknown)      = ^BufferMayWriteSideEffect[0]               : &:r1330_5
# 1332|     r1332_1(glval<A>)       = VariableAddress[a]                         : 
# 1332|     r1332_2(glval<unknown>) = FunctionAddress[static_member_without_def] : 
# 1332|     v1332_3(void)           = Call[static_member_without_def]            : func:r1332_2
# 1332|     mu1332_4(unknown)       = ^CallSideEffect                            : ~m?
# 1333|     r1333_1(glval<unknown>) = FunctionAddress[static_member_without_def] : 
# 1333|     v1333_2(void)           = Call[static_member_without_def]            : func:r1333_1
# 1333|     mu1333_3(unknown)       = ^CallSideEffect                            : ~m?
# 1335|     r1335_1(glval<unknown>) = FunctionAddress[getAnInstanceOfA]          : 
# 1335|     r1335_2(A *)            = Call[getAnInstanceOfA]                     : func:r1335_1
# 1335|     mu1335_3(unknown)       = ^CallSideEffect                            : ~m?
# 1335|     r1335_4(glval<unknown>) = FunctionAddress[static_member_without_def] : 
# 1335|     v1335_5(void)           = Call[static_member_without_def]            : func:r1335_4
# 1335|     mu1335_6(unknown)       = ^CallSideEffect                            : ~m?
# 1336|     v1336_1(void)           = NoOp                                       : 
# 1336|     r1336_2(glval<C>)       = VariableAddress[c]                         : 
# 1336|     r1336_3(glval<unknown>) = FunctionAddress[~C]                        : 
# 1336|     v1336_4(void)           = Call[~C]                                   : func:r1336_3, this:r1336_2
# 1336|     mu1336_5(unknown)       = ^CallSideEffect                            : ~m?
# 1336|     v1336_6(void)           = ^IndirectReadSideEffect[-1]                : &:r1336_2, ~m?
# 1336|     mu1336_7(C)             = ^IndirectMayWriteSideEffect[-1]            : &:r1336_2
# 1319|     v1319_10(void)          = ReturnIndirection[a_arg]                   : &:r1319_8, ~m?
# 1319|     v1319_11(void)          = ReturnVoid                                 : 
# 1319|     v1319_12(void)          = AliasedUse                                 : ~m?
# 1319|     v1319_13(void)          = ExitFunction                               : 

# 1338| int missingReturnValue(bool, int)
# 1338|   Block 0
# 1338|     v1338_1(void)        = EnterFunction          : 
# 1338|     mu1338_2(unknown)    = AliasedDefinition      : 
# 1338|     mu1338_3(unknown)    = InitializeNonLocal     : 
# 1338|     r1338_4(glval<bool>) = VariableAddress[b]     : 
# 1338|     mu1338_5(bool)       = InitializeParameter[b] : &:r1338_4
# 1338|     r1338_6(glval<int>)  = VariableAddress[x]     : 
# 1338|     mu1338_7(int)        = InitializeParameter[x] : &:r1338_6
# 1339|     r1339_1(glval<bool>) = VariableAddress[b]     : 
# 1339|     r1339_2(bool)        = Load[b]                : &:r1339_1, ~m?
# 1339|     v1339_3(void)        = ConditionalBranch      : r1339_2
#-----|   False -> Block 3
#-----|   True -> Block 2

# 1338|   Block 1
# 1338|     r1338_8(glval<int>) = VariableAddress[#return] : 
# 1338|     v1338_9(void)       = ReturnValue              : &:r1338_8, ~m?
# 1338|     v1338_10(void)      = AliasedUse               : ~m?
# 1338|     v1338_11(void)      = ExitFunction             : 

# 1340|   Block 2
# 1340|     r1340_1(glval<int>) = VariableAddress[#return] : 
# 1340|     r1340_2(glval<int>) = VariableAddress[x]       : 
# 1340|     r1340_3(int)        = Load[x]                  : &:r1340_2, ~m?
# 1340|     mu1340_4(int)       = Store[#return]           : &:r1340_1, r1340_3
#-----|   Goto -> Block 1

# 1342|   Block 3
# 1342|     r1342_1(glval<int>) = VariableAddress[#return] : 
# 1342|     mu1342_2(int)       = Uninitialized[#return]   : &:r1342_1
#-----|   Goto -> Block 1

# 1344| void returnVoid(int, int)
# 1344|   Block 0
# 1344|     v1344_1(void)           = EnterFunction               : 
# 1344|     mu1344_2(unknown)       = AliasedDefinition           : 
# 1344|     mu1344_3(unknown)       = InitializeNonLocal          : 
# 1344|     r1344_4(glval<int>)     = VariableAddress[x]          : 
# 1344|     mu1344_5(int)           = InitializeParameter[x]      : &:r1344_4
# 1344|     r1344_6(glval<int>)     = VariableAddress[y]          : 
# 1344|     mu1344_7(int)           = InitializeParameter[y]      : &:r1344_6
# 1345|     r1345_1(glval<unknown>) = FunctionAddress[IntegerOps] : 
# 1345|     r1345_2(glval<int>)     = VariableAddress[x]          : 
# 1345|     r1345_3(int)            = Load[x]                     : &:r1345_2, ~m?
# 1345|     r1345_4(glval<int>)     = VariableAddress[y]          : 
# 1345|     r1345_5(int)            = Load[y]                     : &:r1345_4, ~m?
# 1345|     v1345_6(void)           = Call[IntegerOps]            : func:r1345_1, 0:r1345_3, 1:r1345_5
# 1345|     mu1345_7(unknown)       = ^CallSideEffect             : ~m?
# 1345|     v1345_8(void)           = NoOp                        : 
# 1344|     v1344_8(void)           = ReturnVoid                  : 
# 1344|     v1344_9(void)           = AliasedUse                  : ~m?
# 1344|     v1344_10(void)          = ExitFunction                : 

# 1348| void gccBinaryConditional(bool, int, long)
# 1348|   Block 0
# 1348|     v1348_1(void)        = EnterFunction          : 
# 1348|     mu1348_2(unknown)    = AliasedDefinition      : 
# 1348|     mu1348_3(unknown)    = InitializeNonLocal     : 
# 1348|     r1348_4(glval<bool>) = VariableAddress[b]     : 
# 1348|     mu1348_5(bool)       = InitializeParameter[b] : &:r1348_4
# 1348|     r1348_6(glval<int>)  = VariableAddress[x]     : 
# 1348|     mu1348_7(int)        = InitializeParameter[x] : &:r1348_6
# 1348|     r1348_8(glval<long>) = VariableAddress[y]     : 
# 1348|     mu1348_9(long)       = InitializeParameter[y] : &:r1348_8
# 1349|     r1349_1(glval<int>)  = VariableAddress[z]     : 
# 1349|     r1349_2(glval<int>)  = VariableAddress[x]     : 
# 1349|     r1349_3(int)         = Load[x]                : &:r1349_2, ~m?
# 1349|     mu1349_4(int)        = Store[z]               : &:r1349_1, r1349_3
# 1350|     r1350_1(glval<bool>) = VariableAddress[b]     : 
# 1350|     r1350_2(bool)        = Load[b]                : &:r1350_1, ~m?
# 1350|     v1350_3(void)        = ConditionalBranch      : r1350_2
#-----|   False -> Block 3
#-----|   True -> Block 2

# 1350|   Block 1
# 1350|     r1350_4(glval<int>)  = VariableAddress[#temp1350:9] : 
# 1350|     r1350_5(int)         = Load[#temp1350:9]            : &:r1350_4, ~m?
# 1350|     r1350_6(glval<int>)  = VariableAddress[z]           : 
# 1350|     mu1350_7(int)        = Store[z]                     : &:r1350_6, r1350_5
# 1351|     r1351_1(glval<bool>) = VariableAddress[b]           : 
# 1351|     r1351_2(bool)        = Load[b]                      : &:r1351_1, ~m?
# 1351|     v1351_3(void)        = ConditionalBranch            : r1351_2
#-----|   False -> Block 6
#-----|   True -> Block 5

# 1350|   Block 2
# 1350|     r1350_8(glval<int>) = VariableAddress[#temp1350:9] : 
# 1350|     mu1350_9(int)       = Store[#temp1350:9]           : &:r1350_8, r1350_2
#-----|   Goto -> Block 1

# 1350|   Block 3
# 1350|     r1350_10(glval<int>) = VariableAddress[x]           : 
# 1350|     r1350_11(int)        = Load[x]                      : &:r1350_10, ~m?
# 1350|     r1350_12(glval<int>) = VariableAddress[#temp1350:9] : 
# 1350|     mu1350_13(int)       = Store[#temp1350:9]           : &:r1350_12, r1350_11
#-----|   Goto -> Block 1

# 1351|   Block 4
# 1351|     r1351_4(glval<long>) = VariableAddress[#temp1351:9] : 
# 1351|     r1351_5(long)        = Load[#temp1351:9]            : &:r1351_4, ~m?
# 1351|     r1351_6(int)         = Convert                      : r1351_5
# 1351|     r1351_7(glval<int>)  = VariableAddress[z]           : 
# 1351|     mu1351_8(int)        = Store[z]                     : &:r1351_7, r1351_6
# 1352|     r1352_1(glval<int>)  = VariableAddress[x]           : 
# 1352|     r1352_2(int)         = Load[x]                      : &:r1352_1, ~m?
# 1352|     r1352_3(int)         = Constant[0]                  : 
# 1352|     r1352_4(bool)        = CompareNE                    : r1352_2, r1352_3
# 1352|     v1352_5(void)        = ConditionalBranch            : r1352_4
#-----|   False -> Block 9
#-----|   True -> Block 8

# 1351|   Block 5
# 1351|     r1351_9(glval<long>) = VariableAddress[#temp1351:9] : 
# 1351|     mu1351_10(long)      = Store[#temp1351:9]           : &:r1351_9, r1351_2
#-----|   Goto -> Block 4

# 1351|   Block 6
# 1351|     r1351_11(glval<long>) = VariableAddress[y]           : 
# 1351|     r1351_12(long)        = Load[y]                      : &:r1351_11, ~m?
# 1351|     r1351_13(glval<long>) = VariableAddress[#temp1351:9] : 
# 1351|     mu1351_14(long)       = Store[#temp1351:9]           : &:r1351_13, r1351_12
#-----|   Goto -> Block 4

# 1352|   Block 7
# 1352|     r1352_6(glval<int>) = VariableAddress[#temp1352:9] : 
# 1352|     r1352_7(int)        = Load[#temp1352:9]            : &:r1352_6, ~m?
# 1352|     r1352_8(glval<int>) = VariableAddress[z]           : 
# 1352|     mu1352_9(int)       = Store[z]                     : &:r1352_8, r1352_7
# 1353|     r1353_1(glval<int>) = VariableAddress[x]           : 
# 1353|     r1353_2(int)        = Load[x]                      : &:r1353_1, ~m?
# 1353|     r1353_3(int)        = Constant[0]                  : 
# 1353|     r1353_4(bool)       = CompareNE                    : r1353_2, r1353_3
# 1353|     v1353_5(void)       = ConditionalBranch            : r1353_4
#-----|   False -> Block 12
#-----|   True -> Block 11

# 1352|   Block 8
# 1352|     r1352_10(glval<int>) = VariableAddress[#temp1352:9] : 
# 1352|     mu1352_11(int)       = Store[#temp1352:9]           : &:r1352_10, r1352_2
#-----|   Goto -> Block 7

# 1352|   Block 9
# 1352|     r1352_12(glval<int>) = VariableAddress[x]           : 
# 1352|     r1352_13(int)        = Load[x]                      : &:r1352_12, ~m?
# 1352|     r1352_14(glval<int>) = VariableAddress[#temp1352:9] : 
# 1352|     mu1352_15(int)       = Store[#temp1352:9]           : &:r1352_14, r1352_13
#-----|   Goto -> Block 7

# 1353|   Block 10
# 1353|     r1353_6(glval<long>) = VariableAddress[#temp1353:9] : 
# 1353|     r1353_7(long)        = Load[#temp1353:9]            : &:r1353_6, ~m?
# 1353|     r1353_8(int)         = Convert                      : r1353_7
# 1353|     r1353_9(glval<int>)  = VariableAddress[z]           : 
# 1353|     mu1353_10(int)       = Store[z]                     : &:r1353_9, r1353_8
# 1354|     r1354_1(glval<long>) = VariableAddress[y]           : 
# 1354|     r1354_2(long)        = Load[y]                      : &:r1354_1, ~m?
# 1354|     r1354_3(long)        = Constant[0]                  : 
# 1354|     r1354_4(bool)        = CompareNE                    : r1354_2, r1354_3
# 1354|     v1354_5(void)        = ConditionalBranch            : r1354_4
#-----|   False -> Block 15
#-----|   True -> Block 14

# 1353|   Block 11
# 1353|     r1353_11(glval<long>) = VariableAddress[#temp1353:9] : 
# 1353|     mu1353_12(long)       = Store[#temp1353:9]           : &:r1353_11, r1353_2
#-----|   Goto -> Block 10

# 1353|   Block 12
# 1353|     r1353_13(glval<long>) = VariableAddress[y]           : 
# 1353|     r1353_14(long)        = Load[y]                      : &:r1353_13, ~m?
# 1353|     r1353_15(glval<long>) = VariableAddress[#temp1353:9] : 
# 1353|     mu1353_16(long)       = Store[#temp1353:9]           : &:r1353_15, r1353_14
#-----|   Goto -> Block 10

# 1354|   Block 13
# 1354|     r1354_6(glval<long>) = VariableAddress[#temp1354:9] : 
# 1354|     r1354_7(long)        = Load[#temp1354:9]            : &:r1354_6, ~m?
# 1354|     r1354_8(int)         = Convert                      : r1354_7
# 1354|     r1354_9(glval<int>)  = VariableAddress[z]           : 
# 1354|     mu1354_10(int)       = Store[z]                     : &:r1354_9, r1354_8
# 1355|     r1355_1(glval<long>) = VariableAddress[y]           : 
# 1355|     r1355_2(long)        = Load[y]                      : &:r1355_1, ~m?
# 1355|     r1355_3(long)        = Constant[0]                  : 
# 1355|     r1355_4(bool)        = CompareNE                    : r1355_2, r1355_3
# 1355|     v1355_5(void)        = ConditionalBranch            : r1355_4
#-----|   False -> Block 18
#-----|   True -> Block 17

# 1354|   Block 14
# 1354|     r1354_11(glval<long>) = VariableAddress[#temp1354:9] : 
# 1354|     mu1354_12(long)       = Store[#temp1354:9]           : &:r1354_11, r1354_2
#-----|   Goto -> Block 13

# 1354|   Block 15
# 1354|     r1354_13(glval<int>)  = VariableAddress[x]           : 
# 1354|     r1354_14(int)         = Load[x]                      : &:r1354_13, ~m?
# 1354|     r1354_15(long)        = Convert                      : r1354_14
# 1354|     r1354_16(glval<long>) = VariableAddress[#temp1354:9] : 
# 1354|     mu1354_17(long)       = Store[#temp1354:9]           : &:r1354_16, r1354_15
#-----|   Goto -> Block 13

# 1355|   Block 16
# 1355|     r1355_6(glval<long>) = VariableAddress[#temp1355:9] : 
# 1355|     r1355_7(long)        = Load[#temp1355:9]            : &:r1355_6, ~m?
# 1355|     r1355_8(int)         = Convert                      : r1355_7
# 1355|     r1355_9(glval<int>)  = VariableAddress[z]           : 
# 1355|     mu1355_10(int)       = Store[z]                     : &:r1355_9, r1355_8
# 1357|     r1357_1(glval<int>)  = VariableAddress[x]           : 
# 1357|     r1357_2(int)         = Load[x]                      : &:r1357_1, ~m?
# 1357|     r1357_3(int)         = Constant[0]                  : 
# 1357|     r1357_4(bool)        = CompareNE                    : r1357_2, r1357_3
# 1357|     v1357_5(void)        = ConditionalBranch            : r1357_4
#-----|   False -> Block 25
#-----|   True -> Block 24

# 1355|   Block 17
# 1355|     r1355_11(glval<long>) = VariableAddress[#temp1355:9] : 
# 1355|     mu1355_12(long)       = Store[#temp1355:9]           : &:r1355_11, r1355_2
#-----|   Goto -> Block 16

# 1355|   Block 18
# 1355|     r1355_13(glval<long>) = VariableAddress[y]           : 
# 1355|     r1355_14(long)        = Load[y]                      : &:r1355_13, ~m?
# 1355|     r1355_15(glval<long>) = VariableAddress[#temp1355:9] : 
# 1355|     mu1355_16(long)       = Store[#temp1355:9]           : &:r1355_15, r1355_14
#-----|   Goto -> Block 16

# 1357|   Block 19
# 1357|     r1357_6(glval<int>) = VariableAddress[#temp1357:9] : 
# 1357|     r1357_7(int)        = Load[#temp1357:9]            : &:r1357_6, ~m?
# 1357|     r1357_8(glval<int>) = VariableAddress[z]           : 
# 1357|     mu1357_9(int)       = Store[z]                     : &:r1357_8, r1357_7
# 1358|     v1358_1(void)       = NoOp                         : 
# 1348|     v1348_10(void)      = ReturnVoid                   : 
# 1348|     v1348_11(void)      = AliasedUse                   : ~m?
# 1348|     v1348_12(void)      = ExitFunction                 : 

# 1357|   Block 20
# 1357|     r1357_10(glval<int>) = VariableAddress[#temp1357:9] : 
# 1357|     mu1357_11(int)       = Store[#temp1357:9]           : &:r1357_10, r1357_16
#-----|   Goto -> Block 19

# 1357|   Block 21
# 1357|     r1357_12(glval<bool>) = VariableAddress[#temp1357:10] : 
# 1357|     r1357_13(bool)        = Constant[0]                   : 
# 1357|     mu1357_14(bool)       = Store[#temp1357:10]           : &:r1357_12, r1357_13
#-----|   Goto -> Block 22

# 1357|   Block 22
# 1357|     r1357_15(glval<bool>) = VariableAddress[#temp1357:10] : 
# 1357|     r1357_16(bool)        = Load[#temp1357:10]            : &:r1357_15, ~m?
# 1357|     v1357_17(void)        = ConditionalBranch             : r1357_16
#-----|   False -> Block 26
#-----|   True -> Block 20

# 1357|   Block 23
# 1357|     r1357_18(glval<bool>) = VariableAddress[#temp1357:10] : 
# 1357|     r1357_19(bool)        = Constant[1]                   : 
# 1357|     mu1357_20(bool)       = Store[#temp1357:10]           : &:r1357_18, r1357_19
#-----|   Goto -> Block 22

# 1357|   Block 24
# 1357|     r1357_21(glval<bool>) = VariableAddress[b] : 
# 1357|     r1357_22(bool)        = Load[b]            : &:r1357_21, ~m?
# 1357|     v1357_23(void)        = ConditionalBranch  : r1357_22
#-----|   False -> Block 25
#-----|   True -> Block 23

# 1357|   Block 25
# 1357|     r1357_24(glval<long>) = VariableAddress[y] : 
# 1357|     r1357_25(long)        = Load[y]            : &:r1357_24, ~m?
# 1357|     r1357_26(long)        = Constant[0]        : 
# 1357|     r1357_27(bool)        = CompareNE          : r1357_25, r1357_26
# 1357|     v1357_28(void)        = ConditionalBranch  : r1357_27
#-----|   False -> Block 21
#-----|   True -> Block 23

# 1357|   Block 26
# 1357|     r1357_29(glval<int>) = VariableAddress[x]           : 
# 1357|     r1357_30(int)        = Load[x]                      : &:r1357_29, ~m?
# 1357|     r1357_31(glval<int>) = VariableAddress[#temp1357:9] : 
# 1357|     mu1357_32(int)       = Store[#temp1357:9]           : &:r1357_31, r1357_30
#-----|   Goto -> Block 19

# 1363| int shortCircuitConditional(int, int)
# 1363|   Block 0
# 1363|     v1363_1(void)           = EnterFunction               : 
# 1363|     mu1363_2(unknown)       = AliasedDefinition           : 
# 1363|     mu1363_3(unknown)       = InitializeNonLocal          : 
# 1363|     r1363_4(glval<int>)     = VariableAddress[x]          : 
# 1363|     mu1363_5(int)           = InitializeParameter[x]      : &:r1363_4
# 1363|     r1363_6(glval<int>)     = VariableAddress[y]          : 
# 1363|     mu1363_7(int)           = InitializeParameter[y]      : &:r1363_6
# 1364|     r1364_1(glval<int>)     = VariableAddress[#return]    : 
# 1364|     r1364_2(glval<unknown>) = FunctionAddress[predicateA] : 
# 1364|     r1364_3(bool)           = Call[predicateA]            : func:r1364_2
# 1364|     mu1364_4(unknown)       = ^CallSideEffect             : ~m?
# 1364|     v1364_5(void)           = ConditionalBranch           : r1364_3
#-----|   False -> Block 4
#-----|   True -> Block 2

# 1364|   Block 1
# 1364|     r1364_6(glval<int>) = VariableAddress[#temp1364:12] : 
# 1364|     r1364_7(int)        = Load[#temp1364:12]            : &:r1364_6, ~m?
# 1364|     mu1364_8(int)       = Store[#return]                : &:r1364_1, r1364_7
# 1363|     r1363_8(glval<int>) = VariableAddress[#return]      : 
# 1363|     v1363_9(void)       = ReturnValue                   : &:r1363_8, ~m?
# 1363|     v1363_10(void)      = AliasedUse                    : ~m?
# 1363|     v1363_11(void)      = ExitFunction                  : 

# 1364|   Block 2
# 1364|     r1364_9(glval<unknown>) = FunctionAddress[predicateB] : 
# 1364|     r1364_10(bool)          = Call[predicateB]            : func:r1364_9
# 1364|     mu1364_11(unknown)      = ^CallSideEffect             : ~m?
# 1364|     v1364_12(void)          = ConditionalBranch           : r1364_10
#-----|   False -> Block 4
#-----|   True -> Block 3

# 1364|   Block 3
# 1364|     r1364_13(glval<int>) = VariableAddress[x]            : 
# 1364|     r1364_14(int)        = Load[x]                       : &:r1364_13, ~m?
# 1364|     r1364_15(glval<int>) = VariableAddress[#temp1364:12] : 
# 1364|     mu1364_16(int)       = Store[#temp1364:12]           : &:r1364_15, r1364_14
#-----|   Goto -> Block 1

# 1364|   Block 4
# 1364|     r1364_17(glval<int>) = VariableAddress[y]            : 
# 1364|     r1364_18(int)        = Load[y]                       : &:r1364_17, ~m?
# 1364|     r1364_19(glval<int>) = VariableAddress[#temp1364:12] : 
# 1364|     mu1364_20(int)       = Store[#temp1364:12]           : &:r1364_19, r1364_18
#-----|   Goto -> Block 1

# 1369| void f(int*)
# 1369|   Block 0
# 1369|     v1369_1(void)           = EnterFunction                 : 
# 1369|     mu1369_2(unknown)       = AliasedDefinition             : 
# 1369|     mu1369_3(unknown)       = InitializeNonLocal            : 
# 1369|     r1369_4(glval<int *>)   = VariableAddress[p]            : 
# 1369|     mu1369_5(int *)         = InitializeParameter[p]        : &:r1369_4
# 1369|     r1369_6(int *)          = Load[p]                       : &:r1369_4, ~m?
# 1369|     mu1369_7(unknown)       = InitializeIndirection[p]      : &:r1369_6
# 1371|     r1371_1(glval<unknown>) = FunctionAddress[operator new] : 
# 1371|     r1371_2(unsigned long)  = Constant[4]                   : 
# 1371|     r1371_3(glval<int *>)   = VariableAddress[p]            : 
# 1371|     r1371_4(int *)          = Load[p]                       : &:r1371_3, ~m?
# 1371|     r1371_5(void *)         = Convert                       : r1371_4
# 1371|     r1371_6(void *)         = Call[operator new]            : func:r1371_1, 0:r1371_2, 1:r1371_5
# 1371|     mu1371_7(unknown)       = ^CallSideEffect               : ~m?
# 1371|     mu1371_8(unknown)       = ^InitializeDynamicAllocation  : &:r1371_6
# 1371|     r1371_9(int *)          = Convert                       : r1371_6
# 1372|     v1372_1(void)           = NoOp                          : 
# 1369|     v1369_8(void)           = ReturnIndirection[p]          : &:r1369_6, ~m?
# 1369|     v1369_9(void)           = ReturnVoid                    : 
# 1369|     v1369_10(void)          = AliasedUse                    : ~m?
# 1369|     v1369_11(void)          = ExitFunction                  : 

# 1375| Point defaultConstruct<Point>()
# 1375|   Block 0
# 1375|     v1375_1(void)         = EnterFunction            : 
# 1375|     mu1375_2(unknown)     = AliasedDefinition        : 
# 1375|     mu1375_3(unknown)     = InitializeNonLocal       : 
# 1376|     r1376_1(glval<Point>) = VariableAddress[#return] : 
# 1376|     r1376_2(Point)        = Constant[0]              : 
# 1376|     mu1376_3(Point)       = Store[#return]           : &:r1376_1, r1376_2
# 1375|     r1375_4(glval<Point>) = VariableAddress[#return] : 
# 1375|     v1375_5(void)         = ReturnValue              : &:r1375_4, ~m?
# 1375|     v1375_6(void)         = AliasedUse               : ~m?
# 1375|     v1375_7(void)         = ExitFunction             : 

# 1375| String defaultConstruct<String>()
# 1375|   Block 0
# 1375|     v1375_1(void)           = EnterFunction                   : 
# 1375|     mu1375_2(unknown)       = AliasedDefinition               : 
# 1375|     mu1375_3(unknown)       = InitializeNonLocal              : 
# 1376|     r1376_1(glval<String>)  = VariableAddress[#return]        : 
# 1376|     mu1376_2(String)        = Uninitialized[#return]          : &:r1376_1
# 1376|     r1376_3(glval<unknown>) = FunctionAddress[String]         : 
# 1376|     v1376_4(void)           = Call[String]                    : func:r1376_3, this:r1376_1
# 1376|     mu1376_5(unknown)       = ^CallSideEffect                 : ~m?
# 1376|     mu1376_6(String)        = ^IndirectMayWriteSideEffect[-1] : &:r1376_1
# 1375|     r1375_4(glval<String>)  = VariableAddress[#return]        : 
# 1375|     v1375_5(void)           = ReturnValue                     : &:r1375_4, ~m?
# 1375|     v1375_6(void)           = AliasedUse                      : ~m?
# 1375|     v1375_7(void)           = ExitFunction                    : 

# 1375| copy_constructor defaultConstruct<copy_constructor>()
# 1375|   Block 0
# 1375|     v1375_1(void)                    = EnterFunction                     : 
# 1375|     mu1375_2(unknown)                = AliasedDefinition                 : 
# 1375|     mu1375_3(unknown)                = InitializeNonLocal                : 
# 1376|     r1376_1(glval<copy_constructor>) = VariableAddress[#return]          : 
# 1376|     mu1376_2(copy_constructor)       = Uninitialized[#return]            : &:r1376_1
# 1376|     r1376_3(glval<unknown>)          = FunctionAddress[copy_constructor] : 
# 1376|     v1376_4(void)                    = Call[copy_constructor]            : func:r1376_3, this:r1376_1
# 1376|     mu1376_5(unknown)                = ^CallSideEffect                   : ~m?
# 1376|     mu1376_6(copy_constructor)       = ^IndirectMayWriteSideEffect[-1]   : &:r1376_1
# 1375|     r1375_4(glval<copy_constructor>) = VariableAddress[#return]          : 
# 1375|     v1375_5(void)                    = ReturnValue                       : &:r1375_4, ~m?
# 1375|     v1375_6(void)                    = AliasedUse                        : ~m?
# 1375|     v1375_7(void)                    = ExitFunction                      : 

# 1375| destructor_only defaultConstruct<destructor_only>()
# 1375|   Block 0
# 1375|     v1375_1(void)                   = EnterFunction            : 
# 1375|     mu1375_2(unknown)               = AliasedDefinition        : 
# 1375|     mu1375_3(unknown)               = InitializeNonLocal       : 
# 1376|     r1376_1(glval<destructor_only>) = VariableAddress[#return] : 
# 1376|     r1376_2(destructor_only)        = Constant[0]              : 
# 1376|     mu1376_3(destructor_only)       = Store[#return]           : &:r1376_1, r1376_2
# 1375|     r1375_4(glval<destructor_only>) = VariableAddress[#return] : 
# 1375|     v1375_5(void)                   = ReturnValue              : &:r1375_4, ~m?
# 1375|     v1375_6(void)                   = AliasedUse               : ~m?
# 1375|     v1375_7(void)                   = ExitFunction             : 

# 1414| void temporary_string()
# 1414|   Block 0
# 1414|     v1414_1(void)            = EnterFunction                     : 
# 1414|     mu1414_2(unknown)        = AliasedDefinition                 : 
# 1414|     mu1414_3(unknown)        = InitializeNonLocal                : 
# 1415|     r1415_1(glval<String>)   = VariableAddress[s]                : 
# 1415|     r1415_2(glval<unknown>)  = FunctionAddress[returnValue]      : 
# 1415|     r1415_3(String)          = Call[returnValue]                 : func:r1415_2
# 1415|     mu1415_4(unknown)        = ^CallSideEffect                   : ~m?
# 1415|     mu1415_5(String)         = Store[s]                          : &:r1415_1, r1415_3
# 1416|     r1416_1(glval<String &>) = VariableAddress[rs]               : 
# 1416|     r1416_2(glval<String>)   = VariableAddress[#temp1416:24]     : 
# 1416|     r1416_3(glval<unknown>)  = FunctionAddress[returnValue]      : 
# 1416|     r1416_4(String)          = Call[returnValue]                 : func:r1416_3
# 1416|     mu1416_5(unknown)        = ^CallSideEffect                   : ~m?
# 1416|     mu1416_6(String)         = Store[#temp1416:24]               : &:r1416_2, r1416_4
# 1416|     r1416_7(glval<String>)   = Convert                           : r1416_2
# 1416|     r1416_8(String &)        = CopyValue                         : r1416_7
# 1416|     mu1416_9(String &)       = Store[rs]                         : &:r1416_1, r1416_8
# 1418|     r1418_1(glval<unknown>)  = FunctionAddress[acceptRef]        : 
# 1418|     r1418_2(glval<String>)   = VariableAddress[s]                : 
# 1418|     r1418_3(glval<String>)   = Convert                           : r1418_2
# 1418|     r1418_4(String &)        = CopyValue                         : r1418_3
# 1418|     v1418_5(void)            = Call[acceptRef]                   : func:r1418_1, 0:r1418_4
# 1418|     mu1418_6(unknown)        = ^CallSideEffect                   : ~m?
# 1418|     v1418_7(void)            = ^BufferReadSideEffect[0]          : &:r1418_4, ~m?
# 1419|     r1419_1(glval<unknown>)  = FunctionAddress[acceptRef]        : 
# 1419|     r1419_2(glval<String>)   = VariableAddress[#temp1419:23]     : 
# 1419|     mu1419_3(String)         = Uninitialized[#temp1419:23]       : &:r1419_2
# 1419|     r1419_4(glval<unknown>)  = FunctionAddress[String]           : 
# 1419|     r1419_5(glval<char[4]>)  = StringConstant["foo"]             : 
# 1419|     r1419_6(char *)          = Convert                           : r1419_5
# 1419|     v1419_7(void)            = Call[String]                      : func:r1419_4, this:r1419_2, 0:r1419_6
# 1419|     mu1419_8(unknown)        = ^CallSideEffect                   : ~m?
# 1419|     v1419_9(void)            = ^BufferReadSideEffect[0]          : &:r1419_6, ~m?
# 1419|     mu1419_10(String)        = ^IndirectMayWriteSideEffect[-1]   : &:r1419_2
# 1419|     r1419_11(String &)       = CopyValue                         : r1419_2
# 1419|     v1419_12(void)           = Call[acceptRef]                   : func:r1419_1, 0:r1419_11
# 1419|     mu1419_13(unknown)       = ^CallSideEffect                   : ~m?
# 1419|     v1419_14(void)           = ^BufferReadSideEffect[0]          : &:r1419_11, ~m?
# 1420|     r1420_1(glval<unknown>)  = FunctionAddress[acceptValue]      : 
# 1420|     r1420_2(glval<String>)   = VariableAddress[#temp1420:17]     : 
# 1420|     mu1420_3(String)         = Uninitialized[#temp1420:17]       : &:r1420_2
# 1420|     r1420_4(glval<unknown>)  = FunctionAddress[String]           : 
# 1420|     r1420_5(glval<String>)   = VariableAddress[s]                : 
# 1420|     r1420_6(glval<String>)   = Convert                           : r1420_5
# 1420|     r1420_7(String &)        = CopyValue                         : r1420_6
# 1420|     v1420_8(void)            = Call[String]                      : func:r1420_4, this:r1420_2, 0:r1420_7
# 1420|     mu1420_9(unknown)        = ^CallSideEffect                   : ~m?
# 1420|     v1420_10(void)           = ^BufferReadSideEffect[0]          : &:r1420_7, ~m?
# 1420|     mu1420_11(String)        = ^IndirectMayWriteSideEffect[-1]   : &:r1420_2
# 1420|     r1420_12(String)         = Load[#temp1420:17]                : &:r1420_2, ~m?
# 1420|     v1420_13(void)           = Call[acceptValue]                 : func:r1420_1, 0:r1420_12
# 1420|     mu1420_14(unknown)       = ^CallSideEffect                   : ~m?
# 1421|     r1421_1(glval<unknown>)  = FunctionAddress[acceptValue]      : 
# 1421|     r1421_2(glval<String>)   = VariableAddress[#temp1421:25]     : 
# 1421|     mu1421_3(String)         = Uninitialized[#temp1421:25]       : &:r1421_2
# 1421|     r1421_4(glval<unknown>)  = FunctionAddress[String]           : 
# 1421|     r1421_5(glval<char[4]>)  = StringConstant["foo"]             : 
# 1421|     r1421_6(char *)          = Convert                           : r1421_5
# 1421|     v1421_7(void)            = Call[String]                      : func:r1421_4, this:r1421_2, 0:r1421_6
# 1421|     mu1421_8(unknown)        = ^CallSideEffect                   : ~m?
# 1421|     v1421_9(void)            = ^BufferReadSideEffect[0]          : &:r1421_6, ~m?
# 1421|     mu1421_10(String)        = ^IndirectMayWriteSideEffect[-1]   : &:r1421_2
# 1421|     r1421_11(String)         = Load[#temp1421:25]                : &:r1421_2, ~m?
# 1421|     v1421_12(void)           = Call[acceptValue]                 : func:r1421_1, 0:r1421_11
# 1421|     mu1421_13(unknown)       = ^CallSideEffect                   : ~m?
# 1422|     r1422_1(glval<String>)   = VariableAddress[#temp1422:5]      : 
# 1422|     mu1422_2(String)         = Uninitialized[#temp1422:5]        : &:r1422_1
# 1422|     r1422_3(glval<unknown>)  = FunctionAddress[String]           : 
# 1422|     v1422_4(void)            = Call[String]                      : func:r1422_3, this:r1422_1
# 1422|     mu1422_5(unknown)        = ^CallSideEffect                   : ~m?
# 1422|     mu1422_6(String)         = ^IndirectMayWriteSideEffect[-1]   : &:r1422_1
# 1422|     r1422_7(glval<String>)   = Convert                           : r1422_1
# 1422|     r1422_8(glval<unknown>)  = FunctionAddress[c_str]            : 
# 1422|     r1422_9(char *)          = Call[c_str]                       : func:r1422_8, this:r1422_7
# 1422|     mu1422_10(unknown)       = ^CallSideEffect                   : ~m?
# 1422|     v1422_11(void)           = ^IndirectReadSideEffect[-1]       : &:r1422_7, ~m?
# 1423|     r1423_1(glval<String>)   = VariableAddress[#temp1423:5]      : 
# 1423|     r1423_2(glval<unknown>)  = FunctionAddress[returnValue]      : 
# 1423|     r1423_3(String)          = Call[returnValue]                 : func:r1423_2
# 1423|     mu1423_4(unknown)        = ^CallSideEffect                   : ~m?
# 1423|     mu1423_5(String)         = Store[#temp1423:5]                : &:r1423_1, r1423_3
# 1423|     r1423_6(glval<String>)   = Convert                           : r1423_1
# 1423|     r1423_7(glval<unknown>)  = FunctionAddress[c_str]            : 
# 1423|     r1423_8(char *)          = Call[c_str]                       : func:r1423_7, this:r1423_6
# 1423|     mu1423_9(unknown)        = ^CallSideEffect                   : ~m?
# 1423|     v1423_10(void)           = ^IndirectReadSideEffect[-1]       : &:r1423_6, ~m?
# 1425|     r1425_1(glval<String>)   = VariableAddress[#temp1425:5]      : 
# 1425|     r1425_2(glval<unknown>)  = FunctionAddress[defaultConstruct] : 
# 1425|     r1425_3(String)          = Call[defaultConstruct]            : func:r1425_2
# 1425|     mu1425_4(unknown)        = ^CallSideEffect                   : ~m?
# 1425|     mu1425_5(String)         = Store[#temp1425:5]                : &:r1425_1, r1425_3
# 1426|     v1426_1(void)            = NoOp                              : 
# 1426|     r1426_2(glval<String>)   = CopyValue                         : r1416_2
# 1426|     r1426_3(glval<unknown>)  = FunctionAddress[~String]          : 
# 1426|     v1426_4(void)            = Call[~String]                     : func:r1426_3, this:r1426_2
# 1426|     mu1426_5(unknown)        = ^CallSideEffect                   : ~m?
# 1426|     v1426_6(void)            = ^IndirectReadSideEffect[-1]       : &:r1426_2, ~m?
# 1426|     mu1426_7(String)         = ^IndirectMayWriteSideEffect[-1]   : &:r1426_2
# 1426|     r1426_8(glval<String>)   = VariableAddress[s]                : 
# 1426|     r1426_9(glval<unknown>)  = FunctionAddress[~String]          : 
# 1426|     v1426_10(void)           = Call[~String]                     : func:r1426_9, this:r1426_8
# 1426|     mu1426_11(unknown)       = ^CallSideEffect                   : ~m?
# 1426|     v1426_12(void)           = ^IndirectReadSideEffect[-1]       : &:r1426_8, ~m?
# 1426|     mu1426_13(String)        = ^IndirectMayWriteSideEffect[-1]   : &:r1426_8
# 1414|     v1414_4(void)            = ReturnVoid                        : 
# 1414|     v1414_5(void)            = AliasedUse                        : ~m?
# 1414|     v1414_6(void)            = ExitFunction                      : 

# 1428| void temporary_destructor_only()
# 1428|   Block 0
# 1428|     v1428_1(void)                     = EnterFunction                     : 
# 1428|     mu1428_2(unknown)                 = AliasedDefinition                 : 
# 1428|     mu1428_3(unknown)                 = InitializeNonLocal                : 
# 1429|     r1429_1(glval<destructor_only>)   = VariableAddress[d]                : 
# 1429|     r1429_2(glval<unknown>)           = FunctionAddress[returnValue]      : 
# 1429|     r1429_3(destructor_only)          = Call[returnValue]                 : func:r1429_2
# 1429|     mu1429_4(unknown)                 = ^CallSideEffect                   : ~m?
# 1429|     mu1429_5(destructor_only)         = Store[d]                          : &:r1429_1, r1429_3
# 1430|     r1430_1(glval<destructor_only &>) = VariableAddress[rd]               : 
# 1430|     r1430_2(glval<destructor_only>)   = VariableAddress[#temp1430:33]     : 
# 1430|     r1430_3(glval<unknown>)           = FunctionAddress[returnValue]      : 
# 1430|     r1430_4(destructor_only)          = Call[returnValue]                 : func:r1430_3
# 1430|     mu1430_5(unknown)                 = ^CallSideEffect                   : ~m?
# 1430|     mu1430_6(destructor_only)         = Store[#temp1430:33]               : &:r1430_2, r1430_4
# 1430|     r1430_7(glval<destructor_only>)   = Convert                           : r1430_2
# 1430|     r1430_8(destructor_only &)        = CopyValue                         : r1430_7
# 1430|     mu1430_9(destructor_only &)       = Store[rd]                         : &:r1430_1, r1430_8
# 1431|     r1431_1(glval<destructor_only>)   = VariableAddress[d2]               : 
# 1431|     mu1431_2(destructor_only)         = Uninitialized[d2]                 : &:r1431_1
# 1432|     r1432_1(glval<unknown>)           = FunctionAddress[acceptRef]        : 
# 1432|     r1432_2(glval<destructor_only>)   = VariableAddress[d]                : 
# 1432|     r1432_3(glval<destructor_only>)   = Convert                           : r1432_2
# 1432|     r1432_4(destructor_only &)        = CopyValue                         : r1432_3
# 1432|     v1432_5(void)                     = Call[acceptRef]                   : func:r1432_1, 0:r1432_4
# 1432|     mu1432_6(unknown)                 = ^CallSideEffect                   : ~m?
# 1432|     v1432_7(void)                     = ^BufferReadSideEffect[0]          : &:r1432_4, ~m?
# 1433|     r1433_1(glval<unknown>)           = FunctionAddress[acceptValue]      : 
# 1433|     r1433_2(glval<destructor_only>)   = VariableAddress[#temp1433:17]     : 
# 1433|     r1433_3(glval<destructor_only>)   = VariableAddress[d]                : 
# 1433|     r1433_4(destructor_only)          = Load[d]                           : &:r1433_3, ~m?
# 1433|     mu1433_5(destructor_only)         = Store[#temp1433:17]               : &:r1433_2, r1433_4
# 1433|     r1433_6(destructor_only)          = Load[#temp1433:17]                : &:r1433_2, ~m?
# 1433|     v1433_7(void)                     = Call[acceptValue]                 : func:r1433_1, 0:r1433_6
# 1433|     mu1433_8(unknown)                 = ^CallSideEffect                   : ~m?
# 1434|     r1434_1(glval<destructor_only>)   = VariableAddress[#temp1434:5]      : 
# 1434|     r1434_2(destructor_only)          = Constant[0]                       : 
# 1434|     mu1434_3(destructor_only)         = Store[#temp1434:5]                : &:r1434_1, r1434_2
# 1434|     r1434_4(glval<unknown>)           = FunctionAddress[method]           : 
# 1434|     v1434_5(void)                     = Call[method]                      : func:r1434_4, this:r1434_1
# 1434|     mu1434_6(unknown)                 = ^CallSideEffect                   : ~m?
# 1434|     v1434_7(void)                     = ^IndirectReadSideEffect[-1]       : &:r1434_1, ~m?
# 1434|     mu1434_8(destructor_only)         = ^IndirectMayWriteSideEffect[-1]   : &:r1434_1
# 1435|     r1435_1(glval<destructor_only>)   = VariableAddress[#temp1435:5]      : 
# 1435|     r1435_2(glval<unknown>)           = FunctionAddress[returnValue]      : 
# 1435|     r1435_3(destructor_only)          = Call[returnValue]                 : func:r1435_2
# 1435|     mu1435_4(unknown)                 = ^CallSideEffect                   : ~m?
# 1435|     mu1435_5(destructor_only)         = Store[#temp1435:5]                : &:r1435_1, r1435_3
# 1435|     r1435_6(glval<unknown>)           = FunctionAddress[method]           : 
# 1435|     v1435_7(void)                     = Call[method]                      : func:r1435_6, this:r1435_1
# 1435|     mu1435_8(unknown)                 = ^CallSideEffect                   : ~m?
# 1435|     v1435_9(void)                     = ^IndirectReadSideEffect[-1]       : &:r1435_1, ~m?
# 1435|     mu1435_10(destructor_only)        = ^IndirectMayWriteSideEffect[-1]   : &:r1435_1
# 1437|     r1437_1(glval<destructor_only>)   = VariableAddress[#temp1437:5]      : 
# 1437|     r1437_2(glval<unknown>)           = FunctionAddress[defaultConstruct] : 
# 1437|     r1437_3(destructor_only)          = Call[defaultConstruct]            : func:r1437_2
# 1437|     mu1437_4(unknown)                 = ^CallSideEffect                   : ~m?
# 1437|     mu1437_5(destructor_only)         = Store[#temp1437:5]                : &:r1437_1, r1437_3
# 1438|     v1438_1(void)                     = NoOp                              : 
# 1438|     r1438_2(glval<destructor_only>)   = VariableAddress[d2]               : 
# 1438|     r1438_3(glval<unknown>)           = FunctionAddress[~destructor_only] : 
# 1438|     v1438_4(void)                     = Call[~destructor_only]            : func:r1438_3, this:r1438_2
# 1438|     mu1438_5(unknown)                 = ^CallSideEffect                   : ~m?
# 1438|     v1438_6(void)                     = ^IndirectReadSideEffect[-1]       : &:r1438_2, ~m?
# 1438|     mu1438_7(destructor_only)         = ^IndirectMayWriteSideEffect[-1]   : &:r1438_2
# 1438|     r1438_8(glval<destructor_only>)   = CopyValue                         : r1430_2
# 1438|     r1438_9(glval<unknown>)           = FunctionAddress[~destructor_only] : 
# 1438|     v1438_10(void)                    = Call[~destructor_only]            : func:r1438_9, this:r1438_8
# 1438|     mu1438_11(unknown)                = ^CallSideEffect                   : ~m?
# 1438|     v1438_12(void)                    = ^IndirectReadSideEffect[-1]       : &:r1438_8, ~m?
# 1438|     mu1438_13(destructor_only)        = ^IndirectMayWriteSideEffect[-1]   : &:r1438_8
# 1438|     r1438_14(glval<destructor_only>)  = VariableAddress[d]                : 
# 1438|     r1438_15(glval<unknown>)          = FunctionAddress[~destructor_only] : 
# 1438|     v1438_16(void)                    = Call[~destructor_only]            : func:r1438_15, this:r1438_14
# 1438|     mu1438_17(unknown)                = ^CallSideEffect                   : ~m?
# 1438|     v1438_18(void)                    = ^IndirectReadSideEffect[-1]       : &:r1438_14, ~m?
# 1438|     mu1438_19(destructor_only)        = ^IndirectMayWriteSideEffect[-1]   : &:r1438_14
# 1428|     v1428_4(void)                     = ReturnVoid                        : 
# 1428|     v1428_5(void)                     = AliasedUse                        : ~m?
# 1428|     v1428_6(void)                     = ExitFunction                      : 

# 1440| void temporary_copy_constructor()
# 1440|   Block 0
# 1440|     v1440_1(void)                      = EnterFunction                     : 
# 1440|     mu1440_2(unknown)                  = AliasedDefinition                 : 
# 1440|     mu1440_3(unknown)                  = InitializeNonLocal                : 
# 1441|     r1441_1(glval<copy_constructor>)   = VariableAddress[d]                : 
# 1441|     r1441_2(glval<unknown>)            = FunctionAddress[returnValue]      : 
# 1441|     r1441_3(copy_constructor)          = Call[returnValue]                 : func:r1441_2
# 1441|     mu1441_4(unknown)                  = ^CallSideEffect                   : ~m?
# 1441|     mu1441_5(copy_constructor)         = Store[d]                          : &:r1441_1, r1441_3
# 1442|     r1442_1(glval<copy_constructor &>) = VariableAddress[rd]               : 
# 1442|     r1442_2(glval<copy_constructor>)   = VariableAddress[#temp1442:34]     : 
# 1442|     r1442_3(glval<unknown>)            = FunctionAddress[returnValue]      : 
# 1442|     r1442_4(copy_constructor)          = Call[returnValue]                 : func:r1442_3
# 1442|     mu1442_5(unknown)                  = ^CallSideEffect                   : ~m?
# 1442|     mu1442_6(copy_constructor)         = Store[#temp1442:34]               : &:r1442_2, r1442_4
# 1442|     r1442_7(glval<copy_constructor>)   = Convert                           : r1442_2
# 1442|     r1442_8(copy_constructor &)        = CopyValue                         : r1442_7
# 1442|     mu1442_9(copy_constructor &)       = Store[rd]                         : &:r1442_1, r1442_8
# 1443|     r1443_1(glval<copy_constructor>)   = VariableAddress[d2]               : 
# 1443|     mu1443_2(copy_constructor)         = Uninitialized[d2]                 : &:r1443_1
# 1443|     r1443_3(glval<unknown>)            = FunctionAddress[copy_constructor] : 
# 1443|     v1443_4(void)                      = Call[copy_constructor]            : func:r1443_3, this:r1443_1
# 1443|     mu1443_5(unknown)                  = ^CallSideEffect                   : ~m?
# 1443|     mu1443_6(copy_constructor)         = ^IndirectMayWriteSideEffect[-1]   : &:r1443_1
# 1444|     r1444_1(glval<unknown>)            = FunctionAddress[acceptRef]        : 
# 1444|     r1444_2(glval<copy_constructor>)   = VariableAddress[d]                : 
# 1444|     r1444_3(glval<copy_constructor>)   = Convert                           : r1444_2
# 1444|     r1444_4(copy_constructor &)        = CopyValue                         : r1444_3
# 1444|     v1444_5(void)                      = Call[acceptRef]                   : func:r1444_1, 0:r1444_4
# 1444|     mu1444_6(unknown)                  = ^CallSideEffect                   : ~m?
# 1444|     v1444_7(void)                      = ^BufferReadSideEffect[0]          : &:r1444_4, ~m?
# 1445|     r1445_1(glval<unknown>)            = FunctionAddress[acceptValue]      : 
# 1445|     r1445_2(glval<copy_constructor>)   = VariableAddress[#temp1445:17]     : 
# 1445|     mu1445_3(copy_constructor)         = Uninitialized[#temp1445:17]       : &:r1445_2
# 1445|     r1445_4(glval<unknown>)            = FunctionAddress[copy_constructor] : 
# 1445|     r1445_5(glval<copy_constructor>)   = VariableAddress[d]                : 
# 1445|     r1445_6(glval<copy_constructor>)   = Convert                           : r1445_5
# 1445|     r1445_7(copy_constructor &)        = CopyValue                         : r1445_6
# 1445|     v1445_8(void)                      = Call[copy_constructor]            : func:r1445_4, this:r1445_2, 0:r1445_7
# 1445|     mu1445_9(unknown)                  = ^CallSideEffect                   : ~m?
# 1445|     v1445_10(void)                     = ^BufferReadSideEffect[0]          : &:r1445_7, ~m?
# 1445|     mu1445_11(copy_constructor)        = ^IndirectMayWriteSideEffect[-1]   : &:r1445_2
# 1445|     r1445_12(copy_constructor)         = Load[#temp1445:17]                : &:r1445_2, ~m?
# 1445|     v1445_13(void)                     = Call[acceptValue]                 : func:r1445_1, 0:r1445_12
# 1445|     mu1445_14(unknown)                 = ^CallSideEffect                   : ~m?
# 1446|     r1446_1(glval<copy_constructor>)   = VariableAddress[#temp1446:5]      : 
# 1446|     mu1446_2(copy_constructor)         = Uninitialized[#temp1446:5]        : &:r1446_1
# 1446|     r1446_3(glval<unknown>)            = FunctionAddress[copy_constructor] : 
# 1446|     v1446_4(void)                      = Call[copy_constructor]            : func:r1446_3, this:r1446_1
# 1446|     mu1446_5(unknown)                  = ^CallSideEffect                   : ~m?
# 1446|     mu1446_6(copy_constructor)         = ^IndirectMayWriteSideEffect[-1]   : &:r1446_1
# 1446|     r1446_7(glval<unknown>)            = FunctionAddress[method]           : 
# 1446|     v1446_8(void)                      = Call[method]                      : func:r1446_7, this:r1446_1
# 1446|     mu1446_9(unknown)                  = ^CallSideEffect                   : ~m?
# 1446|     v1446_10(void)                     = ^IndirectReadSideEffect[-1]       : &:r1446_1, ~m?
# 1446|     mu1446_11(copy_constructor)        = ^IndirectMayWriteSideEffect[-1]   : &:r1446_1
# 1447|     r1447_1(glval<copy_constructor>)   = VariableAddress[#temp1447:5]      : 
# 1447|     r1447_2(glval<unknown>)            = FunctionAddress[returnValue]      : 
# 1447|     r1447_3(copy_constructor)          = Call[returnValue]                 : func:r1447_2
# 1447|     mu1447_4(unknown)                  = ^CallSideEffect                   : ~m?
# 1447|     mu1447_5(copy_constructor)         = Store[#temp1447:5]                : &:r1447_1, r1447_3
# 1447|     r1447_6(glval<unknown>)            = FunctionAddress[method]           : 
# 1447|     v1447_7(void)                      = Call[method]                      : func:r1447_6, this:r1447_1
# 1447|     mu1447_8(unknown)                  = ^CallSideEffect                   : ~m?
# 1447|     v1447_9(void)                      = ^IndirectReadSideEffect[-1]       : &:r1447_1, ~m?
# 1447|     mu1447_10(copy_constructor)        = ^IndirectMayWriteSideEffect[-1]   : &:r1447_1
# 1448|     r1448_1(glval<copy_constructor>)   = VariableAddress[#temp1448:5]      : 
# 1448|     r1448_2(glval<unknown>)            = FunctionAddress[defaultConstruct] : 
# 1448|     r1448_3(copy_constructor)          = Call[defaultConstruct]            : func:r1448_2
# 1448|     mu1448_4(unknown)                  = ^CallSideEffect                   : ~m?
# 1448|     mu1448_5(copy_constructor)         = Store[#temp1448:5]                : &:r1448_1, r1448_3
# 1450|     r1450_1(glval<int>)                = VariableAddress[y]                : 
# 1450|     r1450_2(glval<copy_constructor>)   = VariableAddress[#temp1450:13]     : 
# 1450|     r1450_3(glval<unknown>)            = FunctionAddress[returnValue]      : 
# 1450|     r1450_4(copy_constructor)          = Call[returnValue]                 : func:r1450_3
# 1450|     mu1450_5(unknown)                  = ^CallSideEffect                   : ~m?
# 1450|     mu1450_6(copy_constructor)         = Store[#temp1450:13]               : &:r1450_2, r1450_4
# 1450|     r1450_7(glval<int>)                = FieldAddress[y]                   : r1450_2
# 1450|     r1450_8(int)                       = Load[?]                           : &:r1450_7, ~m?
# 1450|     mu1450_9(int)                      = Store[y]                          : &:r1450_1, r1450_8
# 1451|     v1451_1(void)                      = NoOp                              : 
# 1440|     v1440_4(void)                      = ReturnVoid                        : 
# 1440|     v1440_5(void)                      = AliasedUse                        : ~m?
# 1440|     v1440_6(void)                      = ExitFunction                      : 

# 1453| void temporary_point()
# 1453|   Block 0
# 1453|     v1453_1(void)           = EnterFunction                     : 
# 1453|     mu1453_2(unknown)       = AliasedDefinition                 : 
# 1453|     mu1453_3(unknown)       = InitializeNonLocal                : 
# 1454|     r1454_1(glval<Point>)   = VariableAddress[p]                : 
# 1454|     r1454_2(glval<unknown>) = FunctionAddress[returnValue]      : 
# 1454|     r1454_3(Point)          = Call[returnValue]                 : func:r1454_2
# 1454|     mu1454_4(unknown)       = ^CallSideEffect                   : ~m?
# 1454|     mu1454_5(Point)         = Store[p]                          : &:r1454_1, r1454_3
# 1455|     r1455_1(glval<Point &>) = VariableAddress[rp]               : 
# 1455|     r1455_2(glval<Point>)   = VariableAddress[#temp1455:23]     : 
# 1455|     r1455_3(glval<unknown>) = FunctionAddress[returnValue]      : 
# 1455|     r1455_4(Point)          = Call[returnValue]                 : func:r1455_3
# 1455|     mu1455_5(unknown)       = ^CallSideEffect                   : ~m?
# 1455|     mu1455_6(Point)         = Store[#temp1455:23]               : &:r1455_2, r1455_4
# 1455|     r1455_7(glval<Point>)   = Convert                           : r1455_2
# 1455|     r1455_8(Point &)        = CopyValue                         : r1455_7
# 1455|     mu1455_9(Point &)       = Store[rp]                         : &:r1455_1, r1455_8
# 1457|     r1457_1(glval<unknown>) = FunctionAddress[acceptRef]        : 
# 1457|     r1457_2(glval<Point>)   = VariableAddress[p]                : 
# 1457|     r1457_3(glval<Point>)   = Convert                           : r1457_2
# 1457|     r1457_4(Point &)        = CopyValue                         : r1457_3
# 1457|     v1457_5(void)           = Call[acceptRef]                   : func:r1457_1, 0:r1457_4
# 1457|     mu1457_6(unknown)       = ^CallSideEffect                   : ~m?
# 1457|     v1457_7(void)           = ^BufferReadSideEffect[0]          : &:r1457_4, ~m?
# 1458|     r1458_1(glval<unknown>) = FunctionAddress[acceptValue]      : 
# 1458|     r1458_2(glval<Point>)   = VariableAddress[p]                : 
# 1458|     r1458_3(Point)          = Load[p]                           : &:r1458_2, ~m?
# 1458|     v1458_4(void)           = Call[acceptValue]                 : func:r1458_1, 0:r1458_3
# 1458|     mu1458_5(unknown)       = ^CallSideEffect                   : ~m?
# 1459|     r1459_1(int)            = Constant[0]                       : 
# 1460|     r1460_1(glval<int>)     = VariableAddress[y]                : 
# 1460|     r1460_2(glval<unknown>) = FunctionAddress[returnValue]      : 
# 1460|     r1460_3(Point)          = Call[returnValue]                 : func:r1460_2
# 1460|     mu1460_4(unknown)       = ^CallSideEffect                   : ~m?
# 1460|     r1460_5(glval<Point>)   = VariableAddress[#temp1460:13]     : 
# 1460|     mu1460_6(Point)         = Store[#temp1460:13]               : &:r1460_5, r1460_3
# 1460|     r1460_7(glval<int>)     = FieldAddress[y]                   : r1460_5
# 1460|     r1460_8(int)            = Load[?]                           : &:r1460_7, ~m?
# 1460|     mu1460_9(int)           = Store[y]                          : &:r1460_1, r1460_8
# 1462|     r1462_1(glval<unknown>) = FunctionAddress[defaultConstruct] : 
# 1462|     r1462_2(Point)          = Call[defaultConstruct]            : func:r1462_1
# 1462|     mu1462_3(unknown)       = ^CallSideEffect                   : ~m?
# 1463|     v1463_1(void)           = NoOp                              : 
# 1453|     v1453_4(void)           = ReturnVoid                        : 
# 1453|     v1453_5(void)           = AliasedUse                        : ~m?
# 1453|     v1453_6(void)           = ExitFunction                      : 

# 1470| void temporary_unusual_fields()
# 1470|   Block 0
# 1470|     v1470_1(void)                 = EnterFunction                 : 
# 1470|     mu1470_2(unknown)             = AliasedDefinition             : 
# 1470|     mu1470_3(unknown)             = InitializeNonLocal            : 
# 1471|     r1471_1(glval<int &>)         = VariableAddress[rx]           : 
# 1471|     r1471_2(glval<unknown>)       = FunctionAddress[returnValue]  : 
# 1471|     r1471_3(UnusualFields)        = Call[returnValue]             : func:r1471_2
# 1471|     mu1471_4(unknown)             = ^CallSideEffect               : ~m?
# 1471|     r1471_5(glval<UnusualFields>) = VariableAddress[#temp1471:21] : 
# 1471|     mu1471_6(UnusualFields)       = Store[#temp1471:21]           : &:r1471_5, r1471_3
# 1471|     r1471_7(glval<int &>)         = FieldAddress[r]               : r1471_5
# 1471|     r1471_8(int &)                = Load[?]                       : &:r1471_7, ~m?
# 1471|     r1471_9(glval<int>)           = CopyValue                     : r1471_8
# 1471|     r1471_10(glval<int>)          = Convert                       : r1471_9
# 1471|     r1471_11(int &)               = CopyValue                     : r1471_10
# 1471|     mu1471_12(int &)              = Store[rx]                     : &:r1471_1, r1471_11
# 1472|     r1472_1(glval<int>)           = VariableAddress[x]            : 
# 1472|     r1472_2(glval<unknown>)       = FunctionAddress[returnValue]  : 
# 1472|     r1472_3(UnusualFields)        = Call[returnValue]             : func:r1472_2
# 1472|     mu1472_4(unknown)             = ^CallSideEffect               : ~m?
# 1472|     r1472_5(glval<UnusualFields>) = VariableAddress[#temp1472:13] : 
# 1472|     mu1472_6(UnusualFields)       = Store[#temp1472:13]           : &:r1472_5, r1472_3
# 1472|     r1472_7(glval<int &>)         = FieldAddress[r]               : r1472_5
# 1472|     r1472_8(int &)                = Load[?]                       : &:r1472_7, ~m?
# 1472|     r1472_9(int)                  = Load[?]                       : &:r1472_8, ~m?
# 1472|     mu1472_10(int)                = Store[x]                      : &:r1472_1, r1472_9
# 1474|     r1474_1(glval<float &>)       = VariableAddress[rf]           : 
# 1474|     r1474_2(glval<unknown>)       = FunctionAddress[returnValue]  : 
# 1474|     r1474_3(UnusualFields)        = Call[returnValue]             : func:r1474_2
# 1474|     mu1474_4(unknown)             = ^CallSideEffect               : ~m?
# 1474|     r1474_5(glval<UnusualFields>) = VariableAddress[#temp1474:23] : 
# 1474|     mu1474_6(UnusualFields)       = Store[#temp1474:23]           : &:r1474_5, r1474_3
# 1474|     r1474_7(glval<float[10]>)     = FieldAddress[a]               : r1474_5
# 1474|     r1474_8(float *)              = Convert                       : r1474_7
# 1474|     r1474_9(int)                  = Constant[3]                   : 
# 1474|     r1474_10(glval<float>)        = PointerAdd[4]                 : r1474_8, r1474_9
# 1474|     r1474_11(glval<float>)        = Convert                       : r1474_10
# 1474|     r1474_12(float &)             = CopyValue                     : r1474_11
# 1474|     mu1474_13(float &)            = Store[rf]                     : &:r1474_1, r1474_12
# 1475|     r1475_1(glval<float>)         = VariableAddress[f]            : 
# 1475|     r1475_2(glval<unknown>)       = FunctionAddress[returnValue]  : 
# 1475|     r1475_3(UnusualFields)        = Call[returnValue]             : func:r1475_2
# 1475|     mu1475_4(unknown)             = ^CallSideEffect               : ~m?
# 1475|     r1475_5(glval<UnusualFields>) = VariableAddress[#temp1475:15] : 
# 1475|     mu1475_6(UnusualFields)       = Store[#temp1475:15]           : &:r1475_5, r1475_3
# 1475|     r1475_7(glval<float[10]>)     = FieldAddress[a]               : r1475_5
# 1475|     r1475_8(float *)              = Convert                       : r1475_7
# 1475|     r1475_9(int)                  = Constant[5]                   : 
# 1475|     r1475_10(glval<float>)        = PointerAdd[4]                 : r1475_8, r1475_9
# 1475|     r1475_11(float)               = Load[?]                       : &:r1475_10, ~m?
# 1475|     mu1475_12(float)              = Store[f]                      : &:r1475_1, r1475_11
# 1476|     v1476_1(void)                 = NoOp                          : 
# 1470|     v1470_4(void)                 = ReturnVoid                    : 
# 1470|     v1470_5(void)                 = AliasedUse                    : ~m?
# 1470|     v1470_6(void)                 = ExitFunction                  : 

# 1492| void temporary_hierarchy()
# 1492|   Block 0
# 1492|     v1492_1(void)               = EnterFunction                                     : 
# 1492|     mu1492_2(unknown)           = AliasedDefinition                                 : 
# 1492|     mu1492_3(unknown)           = InitializeNonLocal                                : 
# 1493|     r1493_1(glval<POD_Base>)    = VariableAddress[b]                                : 
#-----|     r0_1(glval<POD_Middle>)     = VariableAddress[#temp0:0]                         : 
# 1493|     r1493_2(glval<unknown>)     = FunctionAddress[returnValue]                      : 
# 1493|     r1493_3(POD_Middle)         = Call[returnValue]                                 : func:r1493_2
# 1493|     mu1493_4(unknown)           = ^CallSideEffect                                   : ~m?
# 1493|     mu1493_5(POD_Middle)        = Store[#temp0:0]                                   : &:r0_1, r1493_3
#-----|     r0_2(glval<POD_Base>)       = ConvertToNonVirtualBase[POD_Middle : POD_Base]    : r0_1
#-----|     r0_3(POD_Base)              = Load[?]                                           : &:r0_2, ~m?
#-----|     mu0_4(POD_Base)             = Store[b]                                          : &:r1493_1, r0_3
# 1494|     r1494_1(glval<POD_Derived>) = VariableAddress[#temp1494:9]                      : 
# 1494|     r1494_2(glval<unknown>)     = FunctionAddress[returnValue]                      : 
# 1494|     r1494_3(POD_Derived)        = Call[returnValue]                                 : func:r1494_2
# 1494|     mu1494_4(unknown)           = ^CallSideEffect                                   : ~m?
# 1494|     mu1494_5(POD_Derived)       = Store[#temp1494:9]                                : &:r1494_1, r1494_3
# 1494|     r1494_6(glval<POD_Middle>)  = ConvertToNonVirtualBase[POD_Derived : POD_Middle] : r1494_1
# 1494|     r1494_7(glval<POD_Base>)    = ConvertToNonVirtualBase[POD_Middle : POD_Base]    : r1494_6
# 1494|     r1494_8(POD_Base)           = Load[?]                                           : &:r1494_7, ~m?
# 1494|     r1494_9(glval<POD_Base>)    = VariableAddress[b]                                : 
# 1494|     mu1494_10(POD_Base)         = Store[b]                                          : &:r1494_9, r1494_8
# 1495|     r1495_1(glval<int>)         = VariableAddress[x]                                : 
#-----|     r0_5(glval<POD_Derived>)    = VariableAddress[#temp0:0]                         : 
# 1495|     r1495_2(glval<unknown>)     = FunctionAddress[returnValue]                      : 
# 1495|     r1495_3(POD_Derived)        = Call[returnValue]                                 : func:r1495_2
# 1495|     mu1495_4(unknown)           = ^CallSideEffect                                   : ~m?
# 1495|     mu1495_5(POD_Derived)       = Store[#temp0:0]                                   : &:r0_5, r1495_3
#-----|     r0_6(glval<POD_Middle>)     = ConvertToNonVirtualBase[POD_Derived : POD_Middle] : r0_5
#-----|     r0_7(glval<POD_Base>)       = ConvertToNonVirtualBase[POD_Middle : POD_Base]    : r0_6
# 1495|     r1495_6(glval<int>)         = FieldAddress[x]                                   : r0_7
# 1495|     r1495_7(int)                = Load[?]                                           : &:r1495_6, ~m?
# 1495|     mu1495_8(int)               = Store[x]                                          : &:r1495_1, r1495_7
# 1496|     r1496_1(glval<float>)       = VariableAddress[f]                                : 
#-----|     r0_8(glval<POD_Derived>)    = VariableAddress[#temp0:0]                         : 
# 1496|     r1496_2(glval<unknown>)     = FunctionAddress[returnValue]                      : 
# 1496|     r1496_3(POD_Derived)        = Call[returnValue]                                 : func:r1496_2
# 1496|     mu1496_4(unknown)           = ^CallSideEffect                                   : ~m?
# 1496|     mu1496_5(POD_Derived)       = Store[#temp0:0]                                   : &:r0_8, r1496_3
#-----|     r0_9(glval<POD_Middle>)     = ConvertToNonVirtualBase[POD_Derived : POD_Middle] : r0_8
#-----|     r0_10(glval<POD_Base>)      = ConvertToNonVirtualBase[POD_Middle : POD_Base]    : r0_9
#-----|     r0_11(glval<POD_Base>)      = Convert                                           : r0_10
# 1496|     r1496_6(glval<unknown>)     = FunctionAddress[f]                                : 
# 1496|     r1496_7(float)              = Call[f]                                           : func:r1496_6, this:r0_11
# 1496|     mu1496_8(unknown)           = ^CallSideEffect                                   : ~m?
#-----|     v0_12(void)                 = ^IndirectReadSideEffect[-1]                       : &:r0_11, ~m?
# 1496|     mu1496_9(float)             = Store[f]                                          : &:r1496_1, r1496_7
# 1497|     v1497_1(void)               = NoOp                                              : 
# 1492|     v1492_4(void)               = ReturnVoid                                        : 
# 1492|     v1492_5(void)               = AliasedUse                                        : ~m?
# 1492|     v1492_6(void)               = ExitFunction                                      : 

# 1500| void Inheritance_Test_B::~Inheritance_Test_B()
# 1500|   Block 0
# 1500|     v1500_1(void)                       = EnterFunction                : 
# 1500|     mu1500_2(unknown)                   = AliasedDefinition            : 
# 1500|     mu1500_3(unknown)                   = InitializeNonLocal           : 
# 1500|     r1500_4(glval<unknown>)             = VariableAddress[#this]       : 
# 1500|     mu1500_5(glval<Inheritance_Test_B>) = InitializeParameter[#this]   : &:r1500_4
# 1500|     r1500_6(glval<Inheritance_Test_B>)  = Load[#this]                  : &:r1500_4, ~m?
# 1500|     mu1500_7(Inheritance_Test_B)        = InitializeIndirection[#this] : &:r1500_6
# 1500|     v1500_8(void)                       = NoOp                         : 
# 1500|     v1500_9(void)                       = ReturnIndirection[#this]     : &:r1500_6, ~m?
# 1500|     v1500_10(void)                      = ReturnVoid                   : 
# 1500|     v1500_11(void)                      = AliasedUse                   : ~m?
# 1500|     v1500_12(void)                      = ExitFunction                 : 

# 1506| void Inheritance_Test_A::Inheritance_Test_A()
# 1506|   Block 0
# 1506|     v1506_1(void)                       = EnterFunction                : 
# 1506|     mu1506_2(unknown)                   = AliasedDefinition            : 
# 1506|     mu1506_3(unknown)                   = InitializeNonLocal           : 
# 1506|     r1506_4(glval<unknown>)             = VariableAddress[#this]       : 
# 1506|     mu1506_5(glval<Inheritance_Test_A>) = InitializeParameter[#this]   : &:r1506_4
# 1506|     r1506_6(glval<Inheritance_Test_A>)  = Load[#this]                  : &:r1506_4, ~m?
# 1506|     mu1506_7(Inheritance_Test_A)        = InitializeIndirection[#this] : &:r1506_6
# 1506|     r1506_8(glval<int>)                 = FieldAddress[x]              : mu1506_5
# 1506|     r1506_9(int)                        = Constant[42]                 : 
# 1506|     mu1506_10(int)                      = Store[?]                     : &:r1506_8, r1506_9
# 1507|     r1507_1(int)                        = Constant[3]                  : 
# 1507|     r1507_2(glval<unknown>)             = VariableAddress[#this]       : 
# 1507|     r1507_3(Inheritance_Test_A *)       = Load[#this]                  : &:r1507_2, ~m?
# 1507|     r1507_4(glval<int>)                 = FieldAddress[y]              : r1507_3
# 1507|     mu1507_5(int)                       = Store[?]                     : &:r1507_4, r1507_1
# 1508|     v1508_1(void)                       = NoOp                         : 
# 1506|     v1506_11(void)                      = ReturnIndirection[#this]     : &:r1506_6, ~m?
# 1506|     v1506_12(void)                      = ReturnVoid                   : 
# 1506|     v1506_13(void)                      = AliasedUse                   : ~m?
# 1506|     v1506_14(void)                      = ExitFunction                 : 

# 1511| void array_structured_binding()
# 1511|   Block 0
# 1511|     v1511_1(void)             = EnterFunction                             : 
# 1511|     mu1511_2(unknown)         = AliasedDefinition                         : 
# 1511|     mu1511_3(unknown)         = InitializeNonLocal                        : 
# 1512|     r1512_1(glval<int[2]>)    = VariableAddress[xs]                       : 
# 1512|     mu1512_2(int[2])          = Uninitialized[xs]                         : &:r1512_1
# 1512|     r1512_3(int)              = Constant[0]                               : 
# 1512|     r1512_4(glval<int>)       = PointerAdd[4]                             : r1512_1, r1512_3
# 1512|     r1512_5(int)              = Constant[1]                               : 
# 1512|     mu1512_6(int)             = Store[?]                                  : &:r1512_4, r1512_5
# 1512|     r1512_7(int)              = Constant[1]                               : 
# 1512|     r1512_8(glval<int>)       = PointerAdd[4]                             : r1512_1, r1512_7
# 1512|     r1512_9(int)              = Constant[2]                               : 
# 1512|     mu1512_10(int)            = Store[?]                                  : &:r1512_8, r1512_9
# 1515|     r1515_1(glval<int(&)[2]>) = VariableAddress[(unnamed local variable)] : 
# 1515|     r1515_2(glval<int[2]>)    = VariableAddress[xs]                       : 
# 1515|     r1515_3(int(&)[2])        = CopyValue                                 : r1515_2
# 1515|     mu1515_4(int(&)[2])       = Store[(unnamed local variable)]           : &:r1515_1, r1515_3
# 1515|     r1515_5(glval<int &>)     = VariableAddress[x0]                       : 
#-----|     r0_1(glval<int(&)[2]>)    = VariableAddress[(unnamed local variable)] : 
#-----|     r0_2(int(&)[2])           = Load[(unnamed local variable)]            : &:r0_1, ~m?
#-----|     r0_3(glval<int[2]>)       = CopyValue                                 : r0_2
#-----|     r0_4(int *)               = Convert                                   : r0_3
#-----|     r0_5(unsigned long)       = Constant[0]                               : 
#-----|     r0_6(glval<int>)          = PointerAdd[4]                             : r0_4, r0_5
#-----|     mu0_7(int &)              = Store[x0]                                 : &:r1515_5, r0_6
# 1515|     r1515_6(glval<int &>)     = VariableAddress[x1]                       : 
#-----|     r0_8(glval<int(&)[2]>)    = VariableAddress[(unnamed local variable)] : 
#-----|     r0_9(int(&)[2])           = Load[(unnamed local variable)]            : &:r0_8, ~m?
#-----|     r0_10(glval<int[2]>)      = CopyValue                                 : r0_9
#-----|     r0_11(int *)              = Convert                                   : r0_10
#-----|     r0_12(unsigned long)      = Constant[1]                               : 
#-----|     r0_13(glval<int>)         = PointerAdd[4]                             : r0_11, r0_12
#-----|     mu0_14(int &)             = Store[x1]                                 : &:r1515_6, r0_13
# 1516|     r1516_1(int)              = Constant[3]                               : 
# 1516|     r1516_2(glval<int &>)     = VariableAddress[x1]                       : 
# 1516|     r1516_3(int &)            = Load[x1]                                  : &:r1516_2, ~m?
# 1516|     mu1516_4(int)             = Store[?]                                  : &:r1516_3, r1516_1
# 1517|     r1517_1(glval<int &>)     = VariableAddress[rx1]                      : 
# 1517|     r1517_2(glval<int &>)     = VariableAddress[x1]                       : 
# 1517|     r1517_3(int &)            = Load[x1]                                  : &:r1517_2, ~m?
# 1517|     r1517_4(int &)            = CopyValue                                 : r1517_3
# 1517|     mu1517_5(int &)           = Store[rx1]                                : &:r1517_1, r1517_4
# 1518|     r1518_1(glval<int>)       = VariableAddress[x]                        : 
# 1518|     r1518_2(glval<int &>)     = VariableAddress[x1]                       : 
# 1518|     r1518_3(int &)            = Load[x1]                                  : &:r1518_2, ~m?
# 1518|     r1518_4(int)              = Load[?]                                   : &:r1518_3, ~m?
# 1518|     mu1518_5(int)             = Store[x]                                  : &:r1518_1, r1518_4
# 1522|     r1522_1(glval<int(&)[2]>) = VariableAddress[unnamed_local_variable]   : 
# 1522|     r1522_2(glval<int[2]>)    = VariableAddress[xs]                       : 
# 1522|     r1522_3(int(&)[2])        = CopyValue                                 : r1522_2
# 1522|     mu1522_4(int(&)[2])       = Store[unnamed_local_variable]             : &:r1522_1, r1522_3
# 1523|     r1523_1(glval<int &>)     = VariableAddress[x0]                       : 
# 1523|     r1523_2(glval<int(&)[2]>) = VariableAddress[unnamed_local_variable]   : 
# 1523|     r1523_3(int(&)[2])        = Load[unnamed_local_variable]              : &:r1523_2, ~m?
# 1523|     r1523_4(glval<int[2]>)    = CopyValue                                 : r1523_3
# 1523|     r1523_5(int *)            = Convert                                   : r1523_4
# 1523|     r1523_6(int)              = Constant[0]                               : 
# 1523|     r1523_7(glval<int>)       = PointerAdd[4]                             : r1523_5, r1523_6
# 1523|     r1523_8(int &)            = CopyValue                                 : r1523_7
# 1523|     mu1523_9(int &)           = Store[x0]                                 : &:r1523_1, r1523_8
# 1524|     r1524_1(glval<int &>)     = VariableAddress[x1]                       : 
# 1524|     r1524_2(glval<int(&)[2]>) = VariableAddress[unnamed_local_variable]   : 
# 1524|     r1524_3(int(&)[2])        = Load[unnamed_local_variable]              : &:r1524_2, ~m?
# 1524|     r1524_4(glval<int[2]>)    = CopyValue                                 : r1524_3
# 1524|     r1524_5(int *)            = Convert                                   : r1524_4
# 1524|     r1524_6(int)              = Constant[1]                               : 
# 1524|     r1524_7(glval<int>)       = PointerAdd[4]                             : r1524_5, r1524_6
# 1524|     r1524_8(int &)            = CopyValue                                 : r1524_7
# 1524|     mu1524_9(int &)           = Store[x1]                                 : &:r1524_1, r1524_8
# 1525|     r1525_1(int)              = Constant[3]                               : 
# 1525|     r1525_2(glval<int &>)     = VariableAddress[x1]                       : 
# 1525|     r1525_3(int &)            = Load[x1]                                  : &:r1525_2, ~m?
# 1525|     r1525_4(glval<int>)       = CopyValue                                 : r1525_3
# 1525|     mu1525_5(int)             = Store[?]                                  : &:r1525_4, r1525_1
# 1526|     r1526_1(glval<int &>)     = VariableAddress[rx1]                      : 
# 1526|     r1526_2(glval<int &>)     = VariableAddress[x1]                       : 
# 1526|     r1526_3(int &)            = Load[x1]                                  : &:r1526_2, ~m?
# 1526|     r1526_4(glval<int>)       = CopyValue                                 : r1526_3
# 1526|     r1526_5(int &)            = CopyValue                                 : r1526_4
# 1526|     mu1526_6(int &)           = Store[rx1]                                : &:r1526_1, r1526_5
# 1527|     r1527_1(glval<int>)       = VariableAddress[x]                        : 
# 1527|     r1527_2(glval<int &>)     = VariableAddress[x1]                       : 
# 1527|     r1527_3(int &)            = Load[x1]                                  : &:r1527_2, ~m?
# 1527|     r1527_4(int)              = Load[?]                                   : &:r1527_3, ~m?
# 1527|     mu1527_5(int)             = Store[x]                                  : &:r1527_1, r1527_4
# 1529|     v1529_1(void)             = NoOp                                      : 
# 1511|     v1511_4(void)             = ReturnVoid                                : 
# 1511|     v1511_5(void)             = AliasedUse                                : ~m?
# 1511|     v1511_6(void)             = ExitFunction                              : 

# 1531| void StructuredBindingDataMemberMemberStruct::StructuredBindingDataMemberMemberStruct()
# 1531|   Block 0
# 1531|     v1531_1(void)                                            = EnterFunction                : 
# 1531|     mu1531_2(unknown)                                        = AliasedDefinition            : 
# 1531|     mu1531_3(unknown)                                        = InitializeNonLocal           : 
# 1531|     r1531_4(glval<unknown>)                                  = VariableAddress[#this]       : 
# 1531|     mu1531_5(glval<StructuredBindingDataMemberMemberStruct>) = InitializeParameter[#this]   : &:r1531_4
# 1531|     r1531_6(glval<StructuredBindingDataMemberMemberStruct>)  = Load[#this]                  : &:r1531_4, ~m?
# 1531|     mu1531_7(StructuredBindingDataMemberMemberStruct)        = InitializeIndirection[#this] : &:r1531_6
# 1531|     v1531_8(void)                                            = NoOp                         : 
# 1531|     v1531_9(void)                                            = ReturnIndirection[#this]     : &:r1531_6, ~m?
# 1531|     v1531_10(void)                                           = ReturnVoid                   : 
# 1531|     v1531_11(void)                                           = AliasedUse                   : ~m?
# 1531|     v1531_12(void)                                           = ExitFunction                 : 

# 1535| void StructuredBindingDataMemberStruct::StructuredBindingDataMemberStruct()
# 1535|   Block 0
# 1535|     v1535_1(void)                                      = EnterFunction                : 
# 1535|     mu1535_2(unknown)                                  = AliasedDefinition            : 
# 1535|     mu1535_3(unknown)                                  = InitializeNonLocal           : 
# 1535|     r1535_4(glval<unknown>)                            = VariableAddress[#this]       : 
# 1535|     mu1535_5(glval<StructuredBindingDataMemberStruct>) = InitializeParameter[#this]   : &:r1535_4
# 1535|     r1535_6(glval<StructuredBindingDataMemberStruct>)  = Load[#this]                  : &:r1535_4, ~m?
# 1535|     mu1535_7(StructuredBindingDataMemberStruct)        = InitializeIndirection[#this] : &:r1535_6
#-----|   Goto -> Block 2

# 1535|   Block 1
# 1535|     r1535_8(glval<StructuredBindingDataMemberMemberStruct>) = FieldAddress[m]                                          : mu1535_5
# 1535|     r1535_9(glval<unknown>)                                 = FunctionAddress[StructuredBindingDataMemberMemberStruct] : 
# 1535|     v1535_10(void)                                          = Call[StructuredBindingDataMemberMemberStruct]            : func:r1535_9, this:r1535_8
# 1535|     mu1535_11(unknown)                                      = ^CallSideEffect                                          : ~m?
# 1535|     mu1535_12(StructuredBindingDataMemberMemberStruct)      = ^IndirectMayWriteSideEffect[-1]                          : &:r1535_8
#-----|   Goto -> Block 2

# 1535|   Block 2
# 1535|     v1535_13(void) = NoOp                     : 
# 1535|     v1535_14(void) = ReturnIndirection[#this] : &:r1535_6, ~m?
# 1535|     v1535_15(void) = ReturnVoid               : 
# 1535|     v1535_16(void) = AliasedUse               : ~m?
# 1535|     v1535_17(void) = ExitFunction             : 

# 1535| void StructuredBindingDataMemberStruct::StructuredBindingDataMemberStruct(StructuredBindingDataMemberStruct const&)
# 1535|   Block 0
# 1535|     v1535_1(void)                                            = EnterFunction                                : 
# 1535|     mu1535_2(unknown)                                        = AliasedDefinition                            : 
# 1535|     mu1535_3(unknown)                                        = InitializeNonLocal                           : 
# 1535|     r1535_4(glval<unknown>)                                  = VariableAddress[#this]                       : 
# 1535|     mu1535_5(glval<StructuredBindingDataMemberStruct>)       = InitializeParameter[#this]                   : &:r1535_4
# 1535|     r1535_6(glval<StructuredBindingDataMemberStruct>)        = Load[#this]                                  : &:r1535_4, ~m?
# 1535|     mu1535_7(StructuredBindingDataMemberStruct)              = InitializeIndirection[#this]                 : &:r1535_6
#-----|     r0_1(glval<StructuredBindingDataMemberStruct &>)         = VariableAddress[(unnamed parameter 0)]       : 
#-----|     mu0_2(StructuredBindingDataMemberStruct &)               = InitializeParameter[(unnamed parameter 0)]   : &:r0_1
#-----|     r0_3(StructuredBindingDataMemberStruct &)                = Load[(unnamed parameter 0)]                  : &:r0_1, ~m?
#-----|     mu0_4(unknown)                                           = InitializeIndirection[(unnamed parameter 0)] : &:r0_3
# 1535|     r1535_8(glval<int>)                                      = FieldAddress[i]                              : mu1535_5
# 1535|     r1535_9(glval<StructuredBindingDataMemberStruct &>)      = VariableAddress[(unnamed parameter 0)]       : 
# 1535|     r1535_10(StructuredBindingDataMemberStruct &)            = Load[(unnamed parameter 0)]                  : &:r1535_9, ~m?
# 1535|     r1535_11(glval<StructuredBindingDataMemberStruct>)       = CopyValue                                    : r1535_10
# 1535|     r1535_12(glval<int>)                                     = FieldAddress[i]                              : r1535_11
# 1535|     r1535_13(int)                                            = Load[?]                                      : &:r1535_12, ~m?
# 1535|     mu1535_14(int)                                           = Store[?]                                     : &:r1535_8, r1535_13
# 1535|     r1535_15(glval<double>)                                  = FieldAddress[d]                              : mu1535_5
# 1535|     r1535_16(glval<StructuredBindingDataMemberStruct &>)     = VariableAddress[(unnamed parameter 0)]       : 
# 1535|     r1535_17(StructuredBindingDataMemberStruct &)            = Load[(unnamed parameter 0)]                  : &:r1535_16, ~m?
# 1535|     r1535_18(glval<StructuredBindingDataMemberStruct>)       = CopyValue                                    : r1535_17
# 1535|     r1535_19(glval<double>)                                  = FieldAddress[d]                              : r1535_18
# 1535|     r1535_20(double)                                         = Load[?]                                      : &:r1535_19, ~m?
# 1535|     mu1535_21(double)                                        = Store[?]                                     : &:r1535_15, r1535_20
# 1535|     r1535_22(glval<unsigned int>)                            = FieldAddress[b]                              : mu1535_5
# 1535|     r1535_23(glval<StructuredBindingDataMemberStruct &>)     = VariableAddress[(unnamed parameter 0)]       : 
# 1535|     r1535_24(StructuredBindingDataMemberStruct &)            = Load[(unnamed parameter 0)]                  : &:r1535_23, ~m?
# 1535|     r1535_25(glval<StructuredBindingDataMemberStruct>)       = CopyValue                                    : r1535_24
# 1535|     r1535_26(glval<unsigned int>)                            = FieldAddress[b]                              : r1535_25
# 1535|     r1535_27(unsigned int)                                   = Load[?]                                      : &:r1535_26, ~m?
# 1535|     mu1535_28(unsigned int)                                  = Store[?]                                     : &:r1535_22, r1535_27
# 1535|     r1535_29(glval<int &>)                                   = FieldAddress[r]                              : mu1535_5
# 1535|     r1535_30(glval<StructuredBindingDataMemberStruct &>)     = VariableAddress[(unnamed parameter 0)]       : 
# 1535|     r1535_31(StructuredBindingDataMemberStruct &)            = Load[(unnamed parameter 0)]                  : &:r1535_30, ~m?
# 1535|     r1535_32(glval<StructuredBindingDataMemberStruct>)       = CopyValue                                    : r1535_31
# 1535|     r1535_33(glval<int &>)                                   = FieldAddress[r]                              : r1535_32
# 1535|     r1535_34(int &)                                          = Load[?]                                      : &:r1535_33, ~m?
# 1535|     mu1535_35(int &)                                         = Store[?]                                     : &:r1535_29, r1535_34
# 1535|     r1535_36(glval<int *>)                                   = FieldAddress[p]                              : mu1535_5
# 1535|     r1535_37(glval<StructuredBindingDataMemberStruct &>)     = VariableAddress[(unnamed parameter 0)]       : 
# 1535|     r1535_38(StructuredBindingDataMemberStruct &)            = Load[(unnamed parameter 0)]                  : &:r1535_37, ~m?
# 1535|     r1535_39(glval<StructuredBindingDataMemberStruct>)       = CopyValue                                    : r1535_38
# 1535|     r1535_40(glval<int *>)                                   = FieldAddress[p]                              : r1535_39
# 1535|     r1535_41(int *)                                          = Load[?]                                      : &:r1535_40, ~m?
# 1535|     mu1535_42(int *)                                         = Store[?]                                     : &:r1535_36, r1535_41
# 1535|     r1535_43(glval<int[2]>)                                  = FieldAddress[xs]                             : mu1535_5
# 1535|     r1535_44(glval<StructuredBindingDataMemberStruct &>)     = VariableAddress[(unnamed parameter 0)]       : 
# 1535|     r1535_45(StructuredBindingDataMemberStruct &)            = Load[(unnamed parameter 0)]                  : &:r1535_44, ~m?
# 1535|     r1535_46(glval<StructuredBindingDataMemberStruct>)       = CopyValue                                    : r1535_45
# 1535|     r1535_47(glval<int[2]>)                                  = FieldAddress[xs]                             : r1535_46
# 1535|     r1535_48(int[2])                                         = Load[?]                                      : &:r1535_47, ~m?
# 1535|     mu1535_49(int[2])                                        = Store[?]                                     : &:r1535_43, r1535_48
# 1535|     r1535_50(glval<int &>)                                   = FieldAddress[r_alt]                          : mu1535_5
# 1535|     r1535_51(glval<StructuredBindingDataMemberStruct &>)     = VariableAddress[(unnamed parameter 0)]       : 
# 1535|     r1535_52(StructuredBindingDataMemberStruct &)            = Load[(unnamed parameter 0)]                  : &:r1535_51, ~m?
# 1535|     r1535_53(glval<StructuredBindingDataMemberStruct>)       = CopyValue                                    : r1535_52
# 1535|     r1535_54(glval<int &>)                                   = FieldAddress[r_alt]                          : r1535_53
# 1535|     r1535_55(int &)                                          = Load[?]                                      : &:r1535_54, ~m?
# 1535|     mu1535_56(int &)                                         = Store[?]                                     : &:r1535_50, r1535_55
# 1535|     r1535_57(glval<StructuredBindingDataMemberMemberStruct>) = FieldAddress[m]                              : mu1535_5
# 1535|     r1535_58(glval<StructuredBindingDataMemberStruct &>)     = VariableAddress[(unnamed parameter 0)]       : 
# 1535|     r1535_59(StructuredBindingDataMemberStruct &)            = Load[(unnamed parameter 0)]                  : &:r1535_58, ~m?
# 1535|     r1535_60(glval<StructuredBindingDataMemberStruct>)       = CopyValue                                    : r1535_59
# 1535|     r1535_61(glval<StructuredBindingDataMemberMemberStruct>) = FieldAddress[m]                              : r1535_60
# 1535|     r1535_62(StructuredBindingDataMemberMemberStruct)        = Load[?]                                      : &:r1535_61, ~m?
# 1535|     mu1535_63(StructuredBindingDataMemberMemberStruct)       = Store[?]                                     : &:r1535_57, r1535_62
# 1535|     v1535_64(void)                                           = NoOp                                         : 
# 1535|     v1535_65(void)                                           = ReturnIndirection[#this]                     : &:r1535_6, ~m?
#-----|     v0_5(void)                                               = ReturnIndirection[(unnamed parameter 0)]     : &:r0_3, ~m?
# 1535|     v1535_66(void)                                           = ReturnVoid                                   : 
# 1535|     v1535_67(void)                                           = AliasedUse                                   : ~m?
# 1535|     v1535_68(void)                                           = ExitFunction                                 : 

# 1548| void data_member_structured_binding()
# 1548|   Block 0
# 1548|     v1548_1(void)                                              = EnterFunction                                      : 
# 1548|     mu1548_2(unknown)                                          = AliasedDefinition                                  : 
# 1548|     mu1548_3(unknown)                                          = InitializeNonLocal                                 : 
# 1549|     r1549_1(glval<StructuredBindingDataMemberStruct>)          = VariableAddress[s]                                 : 
# 1549|     mu1549_2(StructuredBindingDataMemberStruct)                = Uninitialized[s]                                   : &:r1549_1
# 1549|     r1549_3(glval<unknown>)                                    = FunctionAddress[StructuredBindingDataMemberStruct] : 
# 1549|     v1549_4(void)                                              = Call[StructuredBindingDataMemberStruct]            : func:r1549_3, this:r1549_1
# 1549|     mu1549_5(unknown)                                          = ^CallSideEffect                                    : ~m?
# 1549|     mu1549_6(StructuredBindingDataMemberStruct)                = ^IndirectMayWriteSideEffect[-1]                    : &:r1549_1
# 1552|     r1552_1(glval<StructuredBindingDataMemberStruct>)          = VariableAddress[(unnamed local variable)]          : 
# 1552|     r1552_2(glval<StructuredBindingDataMemberStruct>)          = VariableAddress[s]                                 : 
# 1552|     r1552_3(StructuredBindingDataMemberStruct)                 = Load[s]                                            : &:r1552_2, ~m?
# 1552|     mu1552_4(StructuredBindingDataMemberStruct)                = Store[(unnamed local variable)]                    : &:r1552_1, r1552_3
# 1552|     r1552_5(glval<int &>)                                      = VariableAddress[i]                                 : 
# 1552|     r1552_6(glval<StructuredBindingDataMemberStruct>)          = VariableAddress[(unnamed local variable)]          : 
# 1552|     r1552_7(glval<int>)                                        = FieldAddress[i]                                    : r1552_6
# 1552|     mu1552_8(int &)                                            = Store[i]                                           : &:r1552_5, r1552_7
# 1552|     r1552_9(glval<double &>)                                   = VariableAddress[d]                                 : 
# 1552|     r1552_10(glval<StructuredBindingDataMemberStruct>)         = VariableAddress[(unnamed local variable)]          : 
# 1552|     r1552_11(glval<double>)                                    = FieldAddress[d]                                    : r1552_10
# 1552|     mu1552_12(double &)                                        = Store[d]                                           : &:r1552_9, r1552_11
# 1552|     r1552_13(glval<unsigned int &>)                            = VariableAddress[b]                                 : 
# 1552|     r1552_14(glval<StructuredBindingDataMemberStruct>)         = VariableAddress[(unnamed local variable)]          : 
# 1552|     r1552_15(glval<unsigned int>)                              = FieldAddress[b]                                    : r1552_14
# 1552|     mu1552_16(unsigned int &)                                  = Store[b]                                           : &:r1552_13, r1552_15
# 1552|     r1552_17(glval<int &>)                                     = VariableAddress[r]                                 : 
# 1552|     r1552_18(glval<StructuredBindingDataMemberStruct>)         = VariableAddress[(unnamed local variable)]          : 
# 1552|     r1552_19(glval<int &>)                                     = FieldAddress[r]                                    : r1552_18
# 1552|     r1552_20(int &)                                            = Load[?]                                            : &:r1552_19, ~m?
# 1552|     r1552_21(glval<int>)                                       = CopyValue                                          : r1552_20
# 1552|     mu1552_22(int &)                                           = Store[r]                                           : &:r1552_17, r1552_21
# 1552|     r1552_23(glval<int *&>)                                    = VariableAddress[p]                                 : 
# 1552|     r1552_24(glval<StructuredBindingDataMemberStruct>)         = VariableAddress[(unnamed local variable)]          : 
# 1552|     r1552_25(glval<int *>)                                     = FieldAddress[p]                                    : r1552_24
# 1552|     mu1552_26(int *&)                                          = Store[p]                                           : &:r1552_23, r1552_25
# 1552|     r1552_27(glval<int(&)[2]>)                                 = VariableAddress[xs]                                : 
# 1552|     r1552_28(glval<StructuredBindingDataMemberStruct>)         = VariableAddress[(unnamed local variable)]          : 
# 1552|     r1552_29(glval<int[2]>)                                    = FieldAddress[xs]                                   : r1552_28
# 1552|     mu1552_30(int(&)[2])                                       = Store[xs]                                          : &:r1552_27, r1552_29
# 1552|     r1552_31(glval<int &>)                                     = VariableAddress[r_alt]                             : 
# 1552|     r1552_32(glval<StructuredBindingDataMemberStruct>)         = VariableAddress[(unnamed local variable)]          : 
# 1552|     r1552_33(glval<int &>)                                     = FieldAddress[r_alt]                                : r1552_32
# 1552|     r1552_34(int &)                                            = Load[?]                                            : &:r1552_33, ~m?
# 1552|     r1552_35(glval<int>)                                       = CopyValue                                          : r1552_34
# 1552|     mu1552_36(int &)                                           = Store[r_alt]                                       : &:r1552_31, r1552_35
# 1552|     r1552_37(glval<StructuredBindingDataMemberMemberStruct &>) = VariableAddress[m]                                 : 
# 1552|     r1552_38(glval<StructuredBindingDataMemberStruct>)         = VariableAddress[(unnamed local variable)]          : 
# 1552|     r1552_39(glval<StructuredBindingDataMemberMemberStruct>)   = FieldAddress[m]                                    : r1552_38
# 1552|     mu1552_40(StructuredBindingDataMemberMemberStruct &)       = Store[m]                                           : &:r1552_37, r1552_39
# 1553|     r1553_1(double)                                            = Constant[4.0]                                      : 
# 1553|     r1553_2(glval<double &>)                                   = VariableAddress[d]                                 : 
# 1553|     r1553_3(double &)                                          = Load[d]                                            : &:r1553_2, ~m?
# 1553|     mu1553_4(double)                                           = Store[?]                                           : &:r1553_3, r1553_1
# 1554|     r1554_1(glval<double &>)                                   = VariableAddress[rd]                                : 
# 1554|     r1554_2(glval<double &>)                                   = VariableAddress[d]                                 : 
# 1554|     r1554_3(double &)                                          = Load[d]                                            : &:r1554_2, ~m?
# 1554|     r1554_4(double &)                                          = CopyValue                                          : r1554_3
# 1554|     mu1554_5(double &)                                         = Store[rd]                                          : &:r1554_1, r1554_4
# 1555|     r1555_1(glval<int>)                                        = VariableAddress[v]                                 : 
# 1555|     r1555_2(glval<int &>)                                      = VariableAddress[i]                                 : 
# 1555|     r1555_3(int &)                                             = Load[i]                                            : &:r1555_2, ~m?
# 1555|     r1555_4(int)                                               = Load[?]                                            : &:r1555_3, ~m?
# 1555|     mu1555_5(int)                                              = Store[v]                                           : &:r1555_1, r1555_4
# 1556|     r1556_1(int)                                               = Constant[5]                                        : 
# 1556|     r1556_2(glval<int &>)                                      = VariableAddress[r]                                 : 
# 1556|     r1556_3(int &)                                             = Load[r]                                            : &:r1556_2, ~m?
# 1556|     mu1556_4(int)                                              = Store[?]                                           : &:r1556_3, r1556_1
# 1557|     r1557_1(int)                                               = Constant[6]                                        : 
# 1557|     r1557_2(glval<int *&>)                                     = VariableAddress[p]                                 : 
# 1557|     r1557_3(int *&)                                            = Load[p]                                            : &:r1557_2, ~m?
# 1557|     r1557_4(int *)                                             = Load[?]                                            : &:r1557_3, ~m?
# 1557|     r1557_5(glval<int>)                                        = CopyValue                                          : r1557_4
# 1557|     mu1557_6(int)                                              = Store[?]                                           : &:r1557_5, r1557_1
# 1558|     r1558_1(glval<int &>)                                      = VariableAddress[rr]                                : 
# 1558|     r1558_2(glval<int &>)                                      = VariableAddress[r]                                 : 
# 1558|     r1558_3(int &)                                             = Load[r]                                            : &:r1558_2, ~m?
# 1558|     r1558_4(int &)                                             = CopyValue                                          : r1558_3
# 1558|     mu1558_5(int &)                                            = Store[rr]                                          : &:r1558_1, r1558_4
# 1559|     r1559_1(glval<int *>)                                      = VariableAddress[pr]                                : 
# 1559|     r1559_2(glval<int &>)                                      = VariableAddress[r]                                 : 
# 1559|     r1559_3(int &)                                             = Load[r]                                            : &:r1559_2, ~m?
# 1559|     r1559_4(int *)                                             = CopyValue                                          : r1559_3
# 1559|     mu1559_5(int *)                                            = Store[pr]                                          : &:r1559_1, r1559_4
# 1560|     r1560_1(glval<int>)                                        = VariableAddress[w]                                 : 
# 1560|     r1560_2(glval<int &>)                                      = VariableAddress[r]                                 : 
# 1560|     r1560_3(int &)                                             = Load[r]                                            : &:r1560_2, ~m?
# 1560|     r1560_4(int)                                               = Load[?]                                            : &:r1560_3, ~m?
# 1560|     mu1560_5(int)                                              = Store[w]                                           : &:r1560_1, r1560_4
# 1564|     r1564_1(glval<StructuredBindingDataMemberStruct>)          = VariableAddress[unnamed_local_variable]            : 
# 1564|     r1564_2(glval<StructuredBindingDataMemberStruct>)          = VariableAddress[s]                                 : 
# 1564|     r1564_3(StructuredBindingDataMemberStruct)                 = Load[s]                                            : &:r1564_2, ~m?
# 1564|     mu1564_4(StructuredBindingDataMemberStruct)                = Store[unnamed_local_variable]                      : &:r1564_1, r1564_3
# 1565|     r1565_1(glval<int &>)                                      = VariableAddress[i]                                 : 
# 1565|     r1565_2(glval<StructuredBindingDataMemberStruct>)          = VariableAddress[unnamed_local_variable]            : 
# 1565|     r1565_3(glval<int>)                                        = FieldAddress[i]                                    : r1565_2
# 1565|     r1565_4(int &)                                             = CopyValue                                          : r1565_3
# 1565|     mu1565_5(int &)                                            = Store[i]                                           : &:r1565_1, r1565_4
# 1566|     r1566_1(glval<double &>)                                   = VariableAddress[d]                                 : 
# 1566|     r1566_2(glval<StructuredBindingDataMemberStruct>)          = VariableAddress[unnamed_local_variable]            : 
# 1566|     r1566_3(glval<double>)                                     = FieldAddress[d]                                    : r1566_2
# 1566|     r1566_4(double &)                                          = CopyValue                                          : r1566_3
# 1566|     mu1566_5(double &)                                         = Store[d]                                           : &:r1566_1, r1566_4
# 1568|     r1568_1(glval<int &>)                                      = VariableAddress[r]                                 : 
# 1568|     r1568_2(glval<StructuredBindingDataMemberStruct>)          = VariableAddress[unnamed_local_variable]            : 
# 1568|     r1568_3(glval<int &>)                                      = FieldAddress[r]                                    : r1568_2
# 1568|     r1568_4(int &)                                             = Load[?]                                            : &:r1568_3, ~m?
# 1568|     r1568_5(glval<int>)                                        = CopyValue                                          : r1568_4
# 1568|     r1568_6(int &)                                             = CopyValue                                          : r1568_5
# 1568|     mu1568_7(int &)                                            = Store[r]                                           : &:r1568_1, r1568_6
# 1569|     r1569_1(glval<int *&>)                                     = VariableAddress[p]                                 : 
# 1569|     r1569_2(glval<StructuredBindingDataMemberStruct>)          = VariableAddress[unnamed_local_variable]            : 
# 1569|     r1569_3(glval<int *>)                                      = FieldAddress[p]                                    : r1569_2
# 1569|     r1569_4(int *&)                                            = CopyValue                                          : r1569_3
# 1569|     mu1569_5(int *&)                                           = Store[p]                                           : &:r1569_1, r1569_4
# 1570|     r1570_1(double)                                            = Constant[4.0]                                      : 
# 1570|     r1570_2(glval<double &>)                                   = VariableAddress[d]                                 : 
# 1570|     r1570_3(double &)                                          = Load[d]                                            : &:r1570_2, ~m?
# 1570|     r1570_4(glval<double>)                                     = CopyValue                                          : r1570_3
# 1570|     mu1570_5(double)                                           = Store[?]                                           : &:r1570_4, r1570_1
# 1571|     r1571_1(glval<double &>)                                   = VariableAddress[rd]                                : 
# 1571|     r1571_2(glval<double &>)                                   = VariableAddress[d]                                 : 
# 1571|     r1571_3(double &)                                          = Load[d]                                            : &:r1571_2, ~m?
# 1571|     r1571_4(glval<double>)                                     = CopyValue                                          : r1571_3
# 1571|     r1571_5(double &)                                          = CopyValue                                          : r1571_4
# 1571|     mu1571_6(double &)                                         = Store[rd]                                          : &:r1571_1, r1571_5
# 1572|     r1572_1(glval<int>)                                        = VariableAddress[v]                                 : 
# 1572|     r1572_2(glval<int &>)                                      = VariableAddress[i]                                 : 
# 1572|     r1572_3(int &)                                             = Load[i]                                            : &:r1572_2, ~m?
# 1572|     r1572_4(int)                                               = Load[?]                                            : &:r1572_3, ~m?
# 1572|     mu1572_5(int)                                              = Store[v]                                           : &:r1572_1, r1572_4
# 1573|     r1573_1(int)                                               = Constant[5]                                        : 
# 1573|     r1573_2(glval<int &>)                                      = VariableAddress[r]                                 : 
# 1573|     r1573_3(int &)                                             = Load[r]                                            : &:r1573_2, ~m?
# 1573|     r1573_4(glval<int>)                                        = CopyValue                                          : r1573_3
# 1573|     mu1573_5(int)                                              = Store[?]                                           : &:r1573_4, r1573_1
# 1574|     r1574_1(int)                                               = Constant[6]                                        : 
# 1574|     r1574_2(glval<int *&>)                                     = VariableAddress[p]                                 : 
# 1574|     r1574_3(int *&)                                            = Load[p]                                            : &:r1574_2, ~m?
# 1574|     r1574_4(int *)                                             = Load[?]                                            : &:r1574_3, ~m?
# 1574|     r1574_5(glval<int>)                                        = CopyValue                                          : r1574_4
# 1574|     mu1574_6(int)                                              = Store[?]                                           : &:r1574_5, r1574_1
# 1575|     r1575_1(glval<int &>)                                      = VariableAddress[rr]                                : 
# 1575|     r1575_2(glval<int &>)                                      = VariableAddress[r]                                 : 
# 1575|     r1575_3(int &)                                             = Load[r]                                            : &:r1575_2, ~m?
# 1575|     r1575_4(glval<int>)                                        = CopyValue                                          : r1575_3
# 1575|     r1575_5(int &)                                             = CopyValue                                          : r1575_4
# 1575|     mu1575_6(int &)                                            = Store[rr]                                          : &:r1575_1, r1575_5
# 1576|     r1576_1(glval<int *>)                                      = VariableAddress[pr]                                : 
# 1576|     r1576_2(glval<int &>)                                      = VariableAddress[r]                                 : 
# 1576|     r1576_3(int &)                                             = Load[r]                                            : &:r1576_2, ~m?
# 1576|     r1576_4(glval<int>)                                        = CopyValue                                          : r1576_3
# 1576|     r1576_5(int *)                                             = CopyValue                                          : r1576_4
# 1576|     mu1576_6(int *)                                            = Store[pr]                                          : &:r1576_1, r1576_5
# 1577|     r1577_1(glval<int>)                                        = VariableAddress[w]                                 : 
# 1577|     r1577_2(glval<int &>)                                      = VariableAddress[r]                                 : 
# 1577|     r1577_3(int &)                                             = Load[r]                                            : &:r1577_2, ~m?
# 1577|     r1577_4(int)                                               = Load[?]                                            : &:r1577_3, ~m?
# 1577|     mu1577_5(int)                                              = Store[w]                                           : &:r1577_1, r1577_4
# 1579|     v1579_1(void)                                              = NoOp                                               : 
# 1548|     v1548_4(void)                                              = ReturnVoid                                         : 
# 1548|     v1548_5(void)                                              = AliasedUse                                         : ~m?
# 1548|     v1548_6(void)                                              = ExitFunction                                       : 

# 1588| void StructuredBindingTupleRefGet::StructuredBindingTupleRefGet()
# 1588|   Block 0
# 1588|     v1588_1(void)                                 = EnterFunction                : 
# 1588|     mu1588_2(unknown)                             = AliasedDefinition            : 
# 1588|     mu1588_3(unknown)                             = InitializeNonLocal           : 
# 1588|     r1588_4(glval<unknown>)                       = VariableAddress[#this]       : 
# 1588|     mu1588_5(glval<StructuredBindingTupleRefGet>) = InitializeParameter[#this]   : &:r1588_4
# 1588|     r1588_6(glval<StructuredBindingTupleRefGet>)  = Load[#this]                  : &:r1588_4, ~m?
# 1588|     mu1588_7(StructuredBindingTupleRefGet)        = InitializeIndirection[#this] : &:r1588_6
# 1588|     v1588_8(void)                                 = NoOp                         : 
# 1588|     v1588_9(void)                                 = ReturnIndirection[#this]     : &:r1588_6, ~m?
# 1588|     v1588_10(void)                                = ReturnVoid                   : 
# 1588|     v1588_11(void)                                = AliasedUse                   : ~m?
# 1588|     v1588_12(void)                                = ExitFunction                 : 

# 1588| void StructuredBindingTupleRefGet::StructuredBindingTupleRefGet(StructuredBindingTupleRefGet const&)
# 1588|   Block 0
# 1588|     v1588_1(void)                                   = EnterFunction                                : 
# 1588|     mu1588_2(unknown)                               = AliasedDefinition                            : 
# 1588|     mu1588_3(unknown)                               = InitializeNonLocal                           : 
# 1588|     r1588_4(glval<unknown>)                         = VariableAddress[#this]                       : 
# 1588|     mu1588_5(glval<StructuredBindingTupleRefGet>)   = InitializeParameter[#this]                   : &:r1588_4
# 1588|     r1588_6(glval<StructuredBindingTupleRefGet>)    = Load[#this]                                  : &:r1588_4, ~m?
# 1588|     mu1588_7(StructuredBindingTupleRefGet)          = InitializeIndirection[#this]                 : &:r1588_6
#-----|     r0_1(glval<StructuredBindingTupleRefGet &>)     = VariableAddress[(unnamed parameter 0)]       : 
#-----|     mu0_2(StructuredBindingTupleRefGet &)           = InitializeParameter[(unnamed parameter 0)]   : &:r0_1
#-----|     r0_3(StructuredBindingTupleRefGet &)            = Load[(unnamed parameter 0)]                  : &:r0_1, ~m?
#-----|     mu0_4(unknown)                                  = InitializeIndirection[(unnamed parameter 0)] : &:r0_3
# 1588|     r1588_8(glval<int>)                             = FieldAddress[i]                              : mu1588_5
# 1588|     r1588_9(glval<StructuredBindingTupleRefGet &>)  = VariableAddress[(unnamed parameter 0)]       : 
# 1588|     r1588_10(StructuredBindingTupleRefGet &)        = Load[(unnamed parameter 0)]                  : &:r1588_9, ~m?
# 1588|     r1588_11(glval<StructuredBindingTupleRefGet>)   = CopyValue                                    : r1588_10
# 1588|     r1588_12(glval<int>)                            = FieldAddress[i]                              : r1588_11
# 1588|     r1588_13(int)                                   = Load[?]                                      : &:r1588_12, ~m?
# 1588|     mu1588_14(int)                                  = Store[?]                                     : &:r1588_8, r1588_13
# 1588|     r1588_15(glval<double>)                         = FieldAddress[d]                              : mu1588_5
# 1588|     r1588_16(glval<StructuredBindingTupleRefGet &>) = VariableAddress[(unnamed parameter 0)]       : 
# 1588|     r1588_17(StructuredBindingTupleRefGet &)        = Load[(unnamed parameter 0)]                  : &:r1588_16, ~m?
# 1588|     r1588_18(glval<StructuredBindingTupleRefGet>)   = CopyValue                                    : r1588_17
# 1588|     r1588_19(glval<double>)                         = FieldAddress[d]                              : r1588_18
# 1588|     r1588_20(double)                                = Load[?]                                      : &:r1588_19, ~m?
# 1588|     mu1588_21(double)                               = Store[?]                                     : &:r1588_15, r1588_20
# 1588|     r1588_22(glval<int &>)                          = FieldAddress[r]                              : mu1588_5
# 1588|     r1588_23(glval<StructuredBindingTupleRefGet &>) = VariableAddress[(unnamed parameter 0)]       : 
# 1588|     r1588_24(StructuredBindingTupleRefGet &)        = Load[(unnamed parameter 0)]                  : &:r1588_23, ~m?
# 1588|     r1588_25(glval<StructuredBindingTupleRefGet>)   = CopyValue                                    : r1588_24
# 1588|     r1588_26(glval<int &>)                          = FieldAddress[r]                              : r1588_25
# 1588|     r1588_27(int &)                                 = Load[?]                                      : &:r1588_26, ~m?
# 1588|     mu1588_28(int &)                                = Store[?]                                     : &:r1588_22, r1588_27
# 1588|     v1588_29(void)                                  = NoOp                                         : 
# 1588|     v1588_30(void)                                  = ReturnIndirection[#this]                     : &:r1588_6, ~m?
#-----|     v0_5(void)                                      = ReturnIndirection[(unnamed parameter 0)]     : &:r0_3, ~m?
# 1588|     v1588_31(void)                                  = ReturnVoid                                   : 
# 1588|     v1588_32(void)                                  = AliasedUse                                   : ~m?
# 1588|     v1588_33(void)                                  = ExitFunction                                 : 

# 1616| std::tuple_element<int 0, StructuredBindingTupleRefGet>::type& StructuredBindingTupleRefGet::get<int 0>()
# 1616|   Block 0
# 1616|     v1616_1(void)                                 = EnterFunction                : 
# 1616|     mu1616_2(unknown)                             = AliasedDefinition            : 
# 1616|     mu1616_3(unknown)                             = InitializeNonLocal           : 
# 1616|     r1616_4(glval<unknown>)                       = VariableAddress[#this]       : 
# 1616|     mu1616_5(glval<StructuredBindingTupleRefGet>) = InitializeParameter[#this]   : &:r1616_4
# 1616|     r1616_6(glval<StructuredBindingTupleRefGet>)  = Load[#this]                  : &:r1616_4, ~m?
# 1616|     mu1616_7(StructuredBindingTupleRefGet)        = InitializeIndirection[#this] : &:r1616_6
# 1617|     r1617_1(glval<int &>)                         = VariableAddress[#return]     : 
# 1617|     r1617_2(glval<unknown>)                       = VariableAddress[#this]       : 
# 1617|     r1617_3(StructuredBindingTupleRefGet *)       = Load[#this]                  : &:r1617_2, ~m?
# 1617|     r1617_4(glval<int>)                           = FieldAddress[i]              : r1617_3
#-----|     r0_1(int &)                                   = CopyValue                    : r1617_4
#-----|     mu0_2(int &)                                  = Store[#return]               : &:r1617_1, r0_1
# 1616|     v1616_8(void)                                 = ReturnIndirection[#this]     : &:r1616_6, ~m?
# 1616|     r1616_9(glval<int &>)                         = VariableAddress[#return]     : 
# 1616|     v1616_10(void)                                = ReturnValue                  : &:r1616_9, ~m?
# 1616|     v1616_11(void)                                = AliasedUse                   : ~m?
# 1616|     v1616_12(void)                                = ExitFunction                 : 

# 1620| std::tuple_element<int 1, StructuredBindingTupleRefGet>::type& StructuredBindingTupleRefGet::get<int 1>()
# 1620|   Block 0
# 1620|     v1620_1(void)                                 = EnterFunction                : 
# 1620|     mu1620_2(unknown)                             = AliasedDefinition            : 
# 1620|     mu1620_3(unknown)                             = InitializeNonLocal           : 
# 1620|     r1620_4(glval<unknown>)                       = VariableAddress[#this]       : 
# 1620|     mu1620_5(glval<StructuredBindingTupleRefGet>) = InitializeParameter[#this]   : &:r1620_4
# 1620|     r1620_6(glval<StructuredBindingTupleRefGet>)  = Load[#this]                  : &:r1620_4, ~m?
# 1620|     mu1620_7(StructuredBindingTupleRefGet)        = InitializeIndirection[#this] : &:r1620_6
# 1621|     r1621_1(glval<double &>)                      = VariableAddress[#return]     : 
# 1621|     r1621_2(glval<unknown>)                       = VariableAddress[#this]       : 
# 1621|     r1621_3(StructuredBindingTupleRefGet *)       = Load[#this]                  : &:r1621_2, ~m?
# 1621|     r1621_4(glval<double>)                        = FieldAddress[d]              : r1621_3
#-----|     r0_1(double &)                                = CopyValue                    : r1621_4
#-----|     mu0_2(double &)                               = Store[#return]               : &:r1621_1, r0_1
# 1620|     v1620_8(void)                                 = ReturnIndirection[#this]     : &:r1620_6, ~m?
# 1620|     r1620_9(glval<double &>)                      = VariableAddress[#return]     : 
# 1620|     v1620_10(void)                                = ReturnValue                  : &:r1620_9, ~m?
# 1620|     v1620_11(void)                                = AliasedUse                   : ~m?
# 1620|     v1620_12(void)                                = ExitFunction                 : 

# 1624| std::tuple_element<int 2, StructuredBindingTupleRefGet>::type StructuredBindingTupleRefGet::get<int 2>()
# 1624|   Block 0
# 1624|     v1624_1(void)                                 = EnterFunction                : 
# 1624|     mu1624_2(unknown)                             = AliasedDefinition            : 
# 1624|     mu1624_3(unknown)                             = InitializeNonLocal           : 
# 1624|     r1624_4(glval<unknown>)                       = VariableAddress[#this]       : 
# 1624|     mu1624_5(glval<StructuredBindingTupleRefGet>) = InitializeParameter[#this]   : &:r1624_4
# 1624|     r1624_6(glval<StructuredBindingTupleRefGet>)  = Load[#this]                  : &:r1624_4, ~m?
# 1624|     mu1624_7(StructuredBindingTupleRefGet)        = InitializeIndirection[#this] : &:r1624_6
# 1625|     r1625_1(glval<int &>)                         = VariableAddress[#return]     : 
# 1625|     r1625_2(glval<unknown>)                       = VariableAddress[#this]       : 
# 1625|     r1625_3(StructuredBindingTupleRefGet *)       = Load[#this]                  : &:r1625_2, ~m?
# 1625|     r1625_4(glval<int &>)                         = FieldAddress[r]              : r1625_3
# 1625|     r1625_5(int &)                                = Load[?]                      : &:r1625_4, ~m?
# 1625|     r1625_6(glval<int>)                           = CopyValue                    : r1625_5
# 1625|     r1625_7(int &)                                = CopyValue                    : r1625_6
# 1625|     mu1625_8(int &)                               = Store[#return]               : &:r1625_1, r1625_7
# 1624|     v1624_8(void)                                 = ReturnIndirection[#this]     : &:r1624_6, ~m?
# 1624|     r1624_9(glval<int &>)                         = VariableAddress[#return]     : 
# 1624|     v1624_10(void)                                = ReturnValue                  : &:r1624_9, ~m?
# 1624|     v1624_11(void)                                = AliasedUse                   : ~m?
# 1624|     v1624_12(void)                                = ExitFunction                 : 

# 1628| void tuple_structured_binding_ref_get()
# 1628|   Block 0
# 1628|     v1628_1(void)                                 = EnterFunction                                 : 
# 1628|     mu1628_2(unknown)                             = AliasedDefinition                             : 
# 1628|     mu1628_3(unknown)                             = InitializeNonLocal                            : 
# 1629|     r1629_1(glval<StructuredBindingTupleRefGet>)  = VariableAddress[t]                            : 
# 1629|     mu1629_2(StructuredBindingTupleRefGet)        = Uninitialized[t]                              : &:r1629_1
# 1629|     r1629_3(glval<unknown>)                       = FunctionAddress[StructuredBindingTupleRefGet] : 
# 1629|     v1629_4(void)                                 = Call[StructuredBindingTupleRefGet]            : func:r1629_3, this:r1629_1
# 1629|     mu1629_5(unknown)                             = ^CallSideEffect                               : ~m?
# 1629|     mu1629_6(StructuredBindingTupleRefGet)        = ^IndirectMayWriteSideEffect[-1]               : &:r1629_1
# 1632|     r1632_1(glval<StructuredBindingTupleRefGet>)  = VariableAddress[(unnamed local variable)]     : 
# 1632|     r1632_2(glval<StructuredBindingTupleRefGet>)  = VariableAddress[t]                            : 
# 1632|     r1632_3(StructuredBindingTupleRefGet)         = Load[t]                                       : &:r1632_2, ~m?
# 1632|     mu1632_4(StructuredBindingTupleRefGet)        = Store[(unnamed local variable)]               : &:r1632_1, r1632_3
# 1632|     r1632_5(glval<int &>)                         = VariableAddress[i]                            : 
# 1632|     r1632_6(glval<StructuredBindingTupleRefGet>)  = VariableAddress[(unnamed local variable)]     : 
# 1632|     r1632_7(glval<unknown>)                       = FunctionAddress[get]                          : 
# 1632|     r1632_8(int &)                                = Call[get]                                     : func:r1632_7, this:r1632_6
# 1632|     mu1632_9(unknown)                             = ^CallSideEffect                               : ~m?
# 1632|     v1632_10(void)                                = ^IndirectReadSideEffect[-1]                   : &:r1632_6, ~m?
# 1632|     mu1632_11(StructuredBindingTupleRefGet)       = ^IndirectMayWriteSideEffect[-1]               : &:r1632_6
# 1632|     r1632_12(glval<int>)                          = CopyValue                                     : r1632_8
# 1632|     r1632_13(int &)                               = CopyValue                                     : r1632_12
# 1632|     mu1632_14(int &)                              = Store[i]                                      : &:r1632_5, r1632_13
# 1632|     r1632_15(glval<double &>)                     = VariableAddress[d]                            : 
# 1632|     r1632_16(glval<StructuredBindingTupleRefGet>) = VariableAddress[(unnamed local variable)]     : 
# 1632|     r1632_17(glval<unknown>)                      = FunctionAddress[get]                          : 
# 1632|     r1632_18(double &)                            = Call[get]                                     : func:r1632_17, this:r1632_16
# 1632|     mu1632_19(unknown)                            = ^CallSideEffect                               : ~m?
# 1632|     v1632_20(void)                                = ^IndirectReadSideEffect[-1]                   : &:r1632_16, ~m?
# 1632|     mu1632_21(StructuredBindingTupleRefGet)       = ^IndirectMayWriteSideEffect[-1]               : &:r1632_16
# 1632|     r1632_22(glval<double>)                       = CopyValue                                     : r1632_18
# 1632|     r1632_23(double &)                            = CopyValue                                     : r1632_22
# 1632|     mu1632_24(double &)                           = Store[d]                                      : &:r1632_15, r1632_23
# 1632|     r1632_25(glval<int &>)                        = VariableAddress[r]                            : 
# 1632|     r1632_26(glval<StructuredBindingTupleRefGet>) = VariableAddress[(unnamed local variable)]     : 
# 1632|     r1632_27(glval<unknown>)                      = FunctionAddress[get]                          : 
# 1632|     r1632_28(int &)                               = Call[get]                                     : func:r1632_27, this:r1632_26
# 1632|     mu1632_29(unknown)                            = ^CallSideEffect                               : ~m?
# 1632|     v1632_30(void)                                = ^IndirectReadSideEffect[-1]                   : &:r1632_26, ~m?
# 1632|     mu1632_31(StructuredBindingTupleRefGet)       = ^IndirectMayWriteSideEffect[-1]               : &:r1632_26
# 1632|     r1632_32(glval<int>)                          = CopyValue                                     : r1632_28
# 1632|     r1632_33(int &)                               = CopyValue                                     : r1632_32
# 1632|     mu1632_34(int &)                              = Store[r]                                      : &:r1632_25, r1632_33
# 1633|     r1633_1(double)                               = Constant[4.0]                                 : 
# 1633|     r1633_2(glval<double &>)                      = VariableAddress[d]                            : 
# 1633|     r1633_3(double &)                             = Load[d]                                       : &:r1633_2, ~m?
# 1633|     r1633_4(glval<double>)                        = CopyValue                                     : r1633_3
# 1633|     mu1633_5(double)                              = Store[?]                                      : &:r1633_4, r1633_1
# 1634|     r1634_1(glval<double &>)                      = VariableAddress[rd]                           : 
# 1634|     r1634_2(glval<double &>)                      = VariableAddress[d]                            : 
# 1634|     r1634_3(double &)                             = Load[d]                                       : &:r1634_2, ~m?
# 1634|     r1634_4(glval<double>)                        = CopyValue                                     : r1634_3
# 1634|     r1634_5(double &)                             = CopyValue                                     : r1634_4
# 1634|     mu1634_6(double &)                            = Store[rd]                                     : &:r1634_1, r1634_5
# 1635|     r1635_1(glval<int>)                           = VariableAddress[v]                            : 
# 1635|     r1635_2(glval<int &>)                         = VariableAddress[i]                            : 
# 1635|     r1635_3(int &)                                = Load[i]                                       : &:r1635_2, ~m?
# 1635|     r1635_4(int)                                  = Load[?]                                       : &:r1635_3, ~m?
# 1635|     mu1635_5(int)                                 = Store[v]                                      : &:r1635_1, r1635_4
# 1636|     r1636_1(int)                                  = Constant[5]                                   : 
# 1636|     r1636_2(glval<int &>)                         = VariableAddress[r]                            : 
# 1636|     r1636_3(int &)                                = Load[r]                                       : &:r1636_2, ~m?
# 1636|     r1636_4(glval<int>)                           = CopyValue                                     : r1636_3
# 1636|     mu1636_5(int)                                 = Store[?]                                      : &:r1636_4, r1636_1
# 1637|     r1637_1(glval<int &>)                         = VariableAddress[rr]                           : 
# 1637|     r1637_2(glval<int &>)                         = VariableAddress[r]                            : 
# 1637|     r1637_3(int &)                                = Load[r]                                       : &:r1637_2, ~m?
# 1637|     r1637_4(glval<int>)                           = CopyValue                                     : r1637_3
# 1637|     r1637_5(int &)                                = CopyValue                                     : r1637_4
# 1637|     mu1637_6(int &)                               = Store[rr]                                     : &:r1637_1, r1637_5
# 1638|     r1638_1(glval<int>)                           = VariableAddress[w]                            : 
# 1638|     r1638_2(glval<int &>)                         = VariableAddress[r]                            : 
# 1638|     r1638_3(int &)                                = Load[r]                                       : &:r1638_2, ~m?
# 1638|     r1638_4(int)                                  = Load[?]                                       : &:r1638_3, ~m?
# 1638|     mu1638_5(int)                                 = Store[w]                                      : &:r1638_1, r1638_4
# 1642|     r1642_1(glval<StructuredBindingTupleRefGet>)  = VariableAddress[unnamed_local_variable]       : 
# 1642|     r1642_2(glval<StructuredBindingTupleRefGet>)  = VariableAddress[t]                            : 
# 1642|     r1642_3(StructuredBindingTupleRefGet)         = Load[t]                                       : &:r1642_2, ~m?
# 1642|     mu1642_4(StructuredBindingTupleRefGet)        = Store[unnamed_local_variable]                 : &:r1642_1, r1642_3
# 1643|     r1643_1(glval<int &>)                         = VariableAddress[i]                            : 
# 1643|     r1643_2(glval<StructuredBindingTupleRefGet>)  = VariableAddress[unnamed_local_variable]       : 
# 1643|     r1643_3(glval<unknown>)                       = FunctionAddress[get]                          : 
# 1643|     r1643_4(int &)                                = Call[get]                                     : func:r1643_3, this:r1643_2
# 1643|     mu1643_5(unknown)                             = ^CallSideEffect                               : ~m?
# 1643|     v1643_6(void)                                 = ^IndirectReadSideEffect[-1]                   : &:r1643_2, ~m?
# 1643|     mu1643_7(StructuredBindingTupleRefGet)        = ^IndirectMayWriteSideEffect[-1]               : &:r1643_2
# 1643|     r1643_8(glval<int>)                           = CopyValue                                     : r1643_4
# 1643|     r1643_9(int &)                                = CopyValue                                     : r1643_8
# 1643|     mu1643_10(int &)                              = Store[i]                                      : &:r1643_1, r1643_9
# 1644|     r1644_1(glval<double &>)                      = VariableAddress[d]                            : 
# 1644|     r1644_2(glval<StructuredBindingTupleRefGet>)  = VariableAddress[unnamed_local_variable]       : 
# 1644|     r1644_3(glval<unknown>)                       = FunctionAddress[get]                          : 
# 1644|     r1644_4(double &)                             = Call[get]                                     : func:r1644_3, this:r1644_2
# 1644|     mu1644_5(unknown)                             = ^CallSideEffect                               : ~m?
# 1644|     v1644_6(void)                                 = ^IndirectReadSideEffect[-1]                   : &:r1644_2, ~m?
# 1644|     mu1644_7(StructuredBindingTupleRefGet)        = ^IndirectMayWriteSideEffect[-1]               : &:r1644_2
# 1644|     r1644_8(glval<double>)                        = CopyValue                                     : r1644_4
# 1644|     r1644_9(double &)                             = CopyValue                                     : r1644_8
# 1644|     mu1644_10(double &)                           = Store[d]                                      : &:r1644_1, r1644_9
# 1645|     r1645_1(glval<int &>)                         = VariableAddress[r]                            : 
# 1645|     r1645_2(glval<StructuredBindingTupleRefGet>)  = VariableAddress[unnamed_local_variable]       : 
# 1645|     r1645_3(glval<unknown>)                       = FunctionAddress[get]                          : 
# 1645|     r1645_4(int &)                                = Call[get]                                     : func:r1645_3, this:r1645_2
# 1645|     mu1645_5(unknown)                             = ^CallSideEffect                               : ~m?
# 1645|     v1645_6(void)                                 = ^IndirectReadSideEffect[-1]                   : &:r1645_2, ~m?
# 1645|     mu1645_7(StructuredBindingTupleRefGet)        = ^IndirectMayWriteSideEffect[-1]               : &:r1645_2
# 1645|     r1645_8(glval<int>)                           = CopyValue                                     : r1645_4
# 1645|     r1645_9(int &)                                = CopyValue                                     : r1645_8
# 1645|     mu1645_10(int &)                              = Store[r]                                      : &:r1645_1, r1645_9
# 1646|     r1646_1(double)                               = Constant[4.0]                                 : 
# 1646|     r1646_2(glval<double &>)                      = VariableAddress[d]                            : 
# 1646|     r1646_3(double &)                             = Load[d]                                       : &:r1646_2, ~m?
# 1646|     r1646_4(glval<double>)                        = CopyValue                                     : r1646_3
# 1646|     mu1646_5(double)                              = Store[?]                                      : &:r1646_4, r1646_1
# 1647|     r1647_1(glval<double &>)                      = VariableAddress[rd]                           : 
# 1647|     r1647_2(glval<double &>)                      = VariableAddress[d]                            : 
# 1647|     r1647_3(double &)                             = Load[d]                                       : &:r1647_2, ~m?
# 1647|     r1647_4(glval<double>)                        = CopyValue                                     : r1647_3
# 1647|     r1647_5(double &)                             = CopyValue                                     : r1647_4
# 1647|     mu1647_6(double &)                            = Store[rd]                                     : &:r1647_1, r1647_5
# 1648|     r1648_1(glval<int>)                           = VariableAddress[v]                            : 
# 1648|     r1648_2(glval<int &>)                         = VariableAddress[i]                            : 
# 1648|     r1648_3(int &)                                = Load[i]                                       : &:r1648_2, ~m?
# 1648|     r1648_4(int)                                  = Load[?]                                       : &:r1648_3, ~m?
# 1648|     mu1648_5(int)                                 = Store[v]                                      : &:r1648_1, r1648_4
# 1649|     r1649_1(int)                                  = Constant[5]                                   : 
# 1649|     r1649_2(glval<int &>)                         = VariableAddress[r]                            : 
# 1649|     r1649_3(int &)                                = Load[r]                                       : &:r1649_2, ~m?
# 1649|     r1649_4(glval<int>)                           = CopyValue                                     : r1649_3
# 1649|     mu1649_5(int)                                 = Store[?]                                      : &:r1649_4, r1649_1
# 1650|     r1650_1(glval<int &>)                         = VariableAddress[rr]                           : 
# 1650|     r1650_2(glval<int &>)                         = VariableAddress[r]                            : 
# 1650|     r1650_3(int &)                                = Load[r]                                       : &:r1650_2, ~m?
# 1650|     r1650_4(glval<int>)                           = CopyValue                                     : r1650_3
# 1650|     r1650_5(int &)                                = CopyValue                                     : r1650_4
# 1650|     mu1650_6(int &)                               = Store[rr]                                     : &:r1650_1, r1650_5
# 1651|     r1651_1(glval<int>)                           = VariableAddress[w]                            : 
# 1651|     r1651_2(glval<int &>)                         = VariableAddress[r]                            : 
# 1651|     r1651_3(int &)                                = Load[r]                                       : &:r1651_2, ~m?
# 1651|     r1651_4(int)                                  = Load[?]                                       : &:r1651_3, ~m?
# 1651|     mu1651_5(int)                                 = Store[w]                                      : &:r1651_1, r1651_4
# 1653|     v1653_1(void)                                 = NoOp                                          : 
# 1628|     v1628_4(void)                                 = ReturnVoid                                    : 
# 1628|     v1628_5(void)                                 = AliasedUse                                    : ~m?
# 1628|     v1628_6(void)                                 = ExitFunction                                  : 

# 1655| void StructuredBindingTupleNoRefGet::StructuredBindingTupleNoRefGet()
# 1655|   Block 0
# 1655|     v1655_1(void)                                   = EnterFunction                : 
# 1655|     mu1655_2(unknown)                               = AliasedDefinition            : 
# 1655|     mu1655_3(unknown)                               = InitializeNonLocal           : 
# 1655|     r1655_4(glval<unknown>)                         = VariableAddress[#this]       : 
# 1655|     mu1655_5(glval<StructuredBindingTupleNoRefGet>) = InitializeParameter[#this]   : &:r1655_4
# 1655|     r1655_6(glval<StructuredBindingTupleNoRefGet>)  = Load[#this]                  : &:r1655_4, ~m?
# 1655|     mu1655_7(StructuredBindingTupleNoRefGet)        = InitializeIndirection[#this] : &:r1655_6
# 1655|     v1655_8(void)                                   = NoOp                         : 
# 1655|     v1655_9(void)                                   = ReturnIndirection[#this]     : &:r1655_6, ~m?
# 1655|     v1655_10(void)                                  = ReturnVoid                   : 
# 1655|     v1655_11(void)                                  = AliasedUse                   : ~m?
# 1655|     v1655_12(void)                                  = ExitFunction                 : 

# 1682| std::tuple_element<int 0, StructuredBindingTupleNoRefGet>::type StructuredBindingTupleNoRefGet::get<int 0>()
# 1682|   Block 0
# 1682|     v1682_1(void)                                   = EnterFunction                : 
# 1682|     mu1682_2(unknown)                               = AliasedDefinition            : 
# 1682|     mu1682_3(unknown)                               = InitializeNonLocal           : 
# 1682|     r1682_4(glval<unknown>)                         = VariableAddress[#this]       : 
# 1682|     mu1682_5(glval<StructuredBindingTupleNoRefGet>) = InitializeParameter[#this]   : &:r1682_4
# 1682|     r1682_6(glval<StructuredBindingTupleNoRefGet>)  = Load[#this]                  : &:r1682_4, ~m?
# 1682|     mu1682_7(StructuredBindingTupleNoRefGet)        = InitializeIndirection[#this] : &:r1682_6
# 1683|     r1683_1(glval<int>)                             = VariableAddress[#return]     : 
# 1683|     r1683_2(glval<unknown>)                         = VariableAddress[#this]       : 
# 1683|     r1683_3(StructuredBindingTupleNoRefGet *)       = Load[#this]                  : &:r1683_2, ~m?
# 1683|     r1683_4(glval<int>)                             = FieldAddress[i]              : r1683_3
# 1683|     r1683_5(int)                                    = Load[?]                      : &:r1683_4, ~m?
# 1683|     mu1683_6(int)                                   = Store[#return]               : &:r1683_1, r1683_5
# 1682|     v1682_8(void)                                   = ReturnIndirection[#this]     : &:r1682_6, ~m?
# 1682|     r1682_9(glval<int>)                             = VariableAddress[#return]     : 
# 1682|     v1682_10(void)                                  = ReturnValue                  : &:r1682_9, ~m?
# 1682|     v1682_11(void)                                  = AliasedUse                   : ~m?
# 1682|     v1682_12(void)                                  = ExitFunction                 : 

# 1686| std::tuple_element<int 1, StructuredBindingTupleNoRefGet>::type StructuredBindingTupleNoRefGet::get<int 1>()
# 1686|   Block 0
# 1686|     v1686_1(void)                                   = EnterFunction                : 
# 1686|     mu1686_2(unknown)                               = AliasedDefinition            : 
# 1686|     mu1686_3(unknown)                               = InitializeNonLocal           : 
# 1686|     r1686_4(glval<unknown>)                         = VariableAddress[#this]       : 
# 1686|     mu1686_5(glval<StructuredBindingTupleNoRefGet>) = InitializeParameter[#this]   : &:r1686_4
# 1686|     r1686_6(glval<StructuredBindingTupleNoRefGet>)  = Load[#this]                  : &:r1686_4, ~m?
# 1686|     mu1686_7(StructuredBindingTupleNoRefGet)        = InitializeIndirection[#this] : &:r1686_6
# 1687|     r1687_1(glval<int &>)                           = VariableAddress[#return]     : 
# 1687|     r1687_2(glval<unknown>)                         = VariableAddress[#this]       : 
# 1687|     r1687_3(StructuredBindingTupleNoRefGet *)       = Load[#this]                  : &:r1687_2, ~m?
# 1687|     r1687_4(glval<int &>)                           = FieldAddress[r]              : r1687_3
# 1687|     r1687_5(int &)                                  = Load[?]                      : &:r1687_4, ~m?
# 1687|     r1687_6(glval<int>)                             = CopyValue                    : r1687_5
# 1687|     r1687_7(int &)                                  = CopyValue                    : r1687_6
# 1687|     mu1687_8(int &)                                 = Store[#return]               : &:r1687_1, r1687_7
# 1686|     v1686_8(void)                                   = ReturnIndirection[#this]     : &:r1686_6, ~m?
# 1686|     r1686_9(glval<int &>)                           = VariableAddress[#return]     : 
# 1686|     v1686_10(void)                                  = ReturnValue                  : &:r1686_9, ~m?
# 1686|     v1686_11(void)                                  = AliasedUse                   : ~m?
# 1686|     v1686_12(void)                                  = ExitFunction                 : 

# 1690| std::tuple_element<int 2, StructuredBindingTupleNoRefGet>::type StructuredBindingTupleNoRefGet::get<int 2>()
# 1690|   Block 0
# 1690|     v1690_1(void)                                   = EnterFunction                 : 
# 1690|     mu1690_2(unknown)                               = AliasedDefinition             : 
# 1690|     mu1690_3(unknown)                               = InitializeNonLocal            : 
# 1690|     r1690_4(glval<unknown>)                         = VariableAddress[#this]        : 
# 1690|     mu1690_5(glval<StructuredBindingTupleNoRefGet>) = InitializeParameter[#this]    : &:r1690_4
# 1690|     r1690_6(glval<StructuredBindingTupleNoRefGet>)  = Load[#this]                   : &:r1690_4, ~m?
# 1690|     mu1690_7(StructuredBindingTupleNoRefGet)        = InitializeIndirection[#this]  : &:r1690_6
# 1691|     r1691_1(glval<int &&>)                          = VariableAddress[#return]      : 
# 1691|     r1691_2(glval<int>)                             = VariableAddress[#temp1691:12] : 
# 1691|     r1691_3(int)                                    = Constant[5]                   : 
# 1691|     mu1691_4(int)                                   = Store[#temp1691:12]           : &:r1691_2, r1691_3
# 1691|     r1691_5(int &)                                  = CopyValue                     : r1691_2
# 1691|     mu1691_6(int &&)                                = Store[#return]                : &:r1691_1, r1691_5
# 1690|     v1690_8(void)                                   = ReturnIndirection[#this]      : &:r1690_6, ~m?
# 1690|     r1690_9(glval<int &&>)                          = VariableAddress[#return]      : 
# 1690|     v1690_10(void)                                  = ReturnValue                   : &:r1690_9, ~m?
# 1690|     v1690_11(void)                                  = AliasedUse                    : ~m?
# 1690|     v1690_12(void)                                  = ExitFunction                  : 

# 1694| void tuple_structured_binding_no_ref_get()
# 1694|   Block 0
# 1694|     v1694_1(void)                                     = EnterFunction                                   : 
# 1694|     mu1694_2(unknown)                                 = AliasedDefinition                               : 
# 1694|     mu1694_3(unknown)                                 = InitializeNonLocal                              : 
# 1695|     r1695_1(glval<StructuredBindingTupleNoRefGet>)    = VariableAddress[t]                              : 
# 1695|     mu1695_2(StructuredBindingTupleNoRefGet)          = Uninitialized[t]                                : &:r1695_1
# 1695|     r1695_3(glval<unknown>)                           = FunctionAddress[StructuredBindingTupleNoRefGet] : 
# 1695|     v1695_4(void)                                     = Call[StructuredBindingTupleNoRefGet]            : func:r1695_3, this:r1695_1
# 1695|     mu1695_5(unknown)                                 = ^CallSideEffect                                 : ~m?
# 1695|     mu1695_6(StructuredBindingTupleNoRefGet)          = ^IndirectMayWriteSideEffect[-1]                 : &:r1695_1
# 1698|     r1698_1(glval<StructuredBindingTupleNoRefGet &>)  = VariableAddress[(unnamed local variable)]       : 
# 1698|     r1698_2(glval<StructuredBindingTupleNoRefGet>)    = VariableAddress[t]                              : 
# 1698|     r1698_3(StructuredBindingTupleNoRefGet &)         = CopyValue                                       : r1698_2
# 1698|     mu1698_4(StructuredBindingTupleNoRefGet &)        = Store[(unnamed local variable)]                 : &:r1698_1, r1698_3
# 1698|     r1698_5(glval<int &&>)                            = VariableAddress[i]                              : 
# 1698|     r1698_6(glval<int>)                               = VariableAddress[#temp1698:16]                   : 
# 1698|     r1698_7(glval<StructuredBindingTupleNoRefGet &>)  = VariableAddress[(unnamed local variable)]       : 
# 1698|     r1698_8(StructuredBindingTupleNoRefGet &)         = Load[(unnamed local variable)]                  : &:r1698_7, ~m?
# 1698|     r1698_9(glval<StructuredBindingTupleNoRefGet>)    = CopyValue                                       : r1698_8
# 1698|     r1698_10(glval<unknown>)                          = FunctionAddress[get]                            : 
# 1698|     r1698_11(int)                                     = Call[get]                                       : func:r1698_10, this:r1698_9
# 1698|     mu1698_12(unknown)                                = ^CallSideEffect                                 : ~m?
# 1698|     v1698_13(void)                                    = ^IndirectReadSideEffect[-1]                     : &:r1698_9, ~m?
# 1698|     mu1698_14(StructuredBindingTupleNoRefGet)         = ^IndirectMayWriteSideEffect[-1]                 : &:r1698_9
# 1698|     mu1698_15(int)                                    = Store[#temp1698:16]                             : &:r1698_6, r1698_11
# 1698|     r1698_16(int &)                                   = CopyValue                                       : r1698_6
# 1698|     mu1698_17(int &&)                                 = Store[i]                                        : &:r1698_5, r1698_16
# 1698|     r1698_18(glval<int &>)                            = VariableAddress[r]                              : 
# 1698|     r1698_19(glval<StructuredBindingTupleNoRefGet &>) = VariableAddress[(unnamed local variable)]       : 
# 1698|     r1698_20(StructuredBindingTupleNoRefGet &)        = Load[(unnamed local variable)]                  : &:r1698_19, ~m?
# 1698|     r1698_21(glval<StructuredBindingTupleNoRefGet>)   = CopyValue                                       : r1698_20
# 1698|     r1698_22(glval<unknown>)                          = FunctionAddress[get]                            : 
# 1698|     r1698_23(int &)                                   = Call[get]                                       : func:r1698_22, this:r1698_21
# 1698|     mu1698_24(unknown)                                = ^CallSideEffect                                 : ~m?
# 1698|     v1698_25(void)                                    = ^IndirectReadSideEffect[-1]                     : &:r1698_21, ~m?
# 1698|     mu1698_26(StructuredBindingTupleNoRefGet)         = ^IndirectMayWriteSideEffect[-1]                 : &:r1698_21
# 1698|     r1698_27(glval<int>)                              = CopyValue                                       : r1698_23
# 1698|     r1698_28(int &)                                   = CopyValue                                       : r1698_27
# 1698|     mu1698_29(int &)                                  = Store[r]                                        : &:r1698_18, r1698_28
# 1698|     r1698_30(glval<int &&>)                           = VariableAddress[rv]                             : 
# 1698|     r1698_31(glval<StructuredBindingTupleNoRefGet &>) = VariableAddress[(unnamed local variable)]       : 
# 1698|     r1698_32(StructuredBindingTupleNoRefGet &)        = Load[(unnamed local variable)]                  : &:r1698_31, ~m?
# 1698|     r1698_33(glval<StructuredBindingTupleNoRefGet>)   = CopyValue                                       : r1698_32
# 1698|     r1698_34(glval<unknown>)                          = FunctionAddress[get]                            : 
# 1698|     r1698_35(int &&)                                  = Call[get]                                       : func:r1698_34, this:r1698_33
# 1698|     mu1698_36(unknown)                                = ^CallSideEffect                                 : ~m?
# 1698|     v1698_37(void)                                    = ^IndirectReadSideEffect[-1]                     : &:r1698_33, ~m?
# 1698|     mu1698_38(StructuredBindingTupleNoRefGet)         = ^IndirectMayWriteSideEffect[-1]                 : &:r1698_33
# 1698|     r1698_39(glval<int>)                              = CopyValue                                       : r1698_35
# 1698|     r1698_40(int &)                                   = CopyValue                                       : r1698_39
# 1698|     mu1698_41(int &&)                                 = Store[rv]                                       : &:r1698_30, r1698_40
# 1699|     r1699_1(int)                                      = Constant[4]                                     : 
# 1699|     r1699_2(glval<int &&>)                            = VariableAddress[i]                              : 
# 1699|     r1699_3(int &&)                                   = Load[i]                                         : &:r1699_2, ~m?
# 1699|     r1699_4(glval<int>)                               = CopyValue                                       : r1699_3
# 1699|     mu1699_5(int)                                     = Store[?]                                        : &:r1699_4, r1699_1
# 1700|     r1700_1(glval<int &>)                             = VariableAddress[ri]                             : 
# 1700|     r1700_2(glval<int &&>)                            = VariableAddress[i]                              : 
# 1700|     r1700_3(int &&)                                   = Load[i]                                         : &:r1700_2, ~m?
# 1700|     r1700_4(glval<int>)                               = CopyValue                                       : r1700_3
# 1700|     r1700_5(int &)                                    = CopyValue                                       : r1700_4
# 1700|     mu1700_6(int &)                                   = Store[ri]                                       : &:r1700_1, r1700_5
# 1701|     r1701_1(glval<int>)                               = VariableAddress[v]                              : 
# 1701|     r1701_2(glval<int &&>)                            = VariableAddress[i]                              : 
# 1701|     r1701_3(int &&)                                   = Load[i]                                         : &:r1701_2, ~m?
# 1701|     r1701_4(int)                                      = Load[?]                                         : &:r1701_3, ~m?
# 1701|     mu1701_5(int)                                     = Store[v]                                        : &:r1701_1, r1701_4
# 1702|     r1702_1(int)                                      = Constant[5]                                     : 
# 1702|     r1702_2(glval<int &>)                             = VariableAddress[r]                              : 
# 1702|     r1702_3(int &)                                    = Load[r]                                         : &:r1702_2, ~m?
# 1702|     r1702_4(glval<int>)                               = CopyValue                                       : r1702_3
# 1702|     mu1702_5(int)                                     = Store[?]                                        : &:r1702_4, r1702_1
# 1703|     r1703_1(glval<int &>)                             = VariableAddress[rr]                             : 
# 1703|     r1703_2(glval<int &>)                             = VariableAddress[r]                              : 
# 1703|     r1703_3(int &)                                    = Load[r]                                         : &:r1703_2, ~m?
# 1703|     r1703_4(glval<int>)                               = CopyValue                                       : r1703_3
# 1703|     r1703_5(int &)                                    = CopyValue                                       : r1703_4
# 1703|     mu1703_6(int &)                                   = Store[rr]                                       : &:r1703_1, r1703_5
# 1704|     r1704_1(glval<int>)                               = VariableAddress[w]                              : 
# 1704|     r1704_2(glval<int &>)                             = VariableAddress[r]                              : 
# 1704|     r1704_3(int &)                                    = Load[r]                                         : &:r1704_2, ~m?
# 1704|     r1704_4(int)                                      = Load[?]                                         : &:r1704_3, ~m?
# 1704|     mu1704_5(int)                                     = Store[w]                                        : &:r1704_1, r1704_4
# 1708|     r1708_1(glval<StructuredBindingTupleNoRefGet &>)  = VariableAddress[unnamed_local_variable]         : 
# 1708|     r1708_2(glval<StructuredBindingTupleNoRefGet>)    = VariableAddress[t]                              : 
# 1708|     r1708_3(StructuredBindingTupleNoRefGet &)         = CopyValue                                       : r1708_2
# 1708|     mu1708_4(StructuredBindingTupleNoRefGet &)        = Store[unnamed_local_variable]                   : &:r1708_1, r1708_3
# 1709|     r1709_1(glval<int &&>)                            = VariableAddress[i]                              : 
# 1709|     r1709_2(glval<int>)                               = VariableAddress[#temp1709:20]                   : 
# 1709|     r1709_3(glval<StructuredBindingTupleNoRefGet &>)  = VariableAddress[unnamed_local_variable]         : 
# 1709|     r1709_4(StructuredBindingTupleNoRefGet &)         = Load[unnamed_local_variable]                    : &:r1709_3, ~m?
# 1709|     r1709_5(glval<StructuredBindingTupleNoRefGet>)    = CopyValue                                       : r1709_4
# 1709|     r1709_6(glval<unknown>)                           = FunctionAddress[get]                            : 
# 1709|     r1709_7(int)                                      = Call[get]                                       : func:r1709_6, this:r1709_5
# 1709|     mu1709_8(unknown)                                 = ^CallSideEffect                                 : ~m?
# 1709|     v1709_9(void)                                     = ^IndirectReadSideEffect[-1]                     : &:r1709_5, ~m?
# 1709|     mu1709_10(StructuredBindingTupleNoRefGet)         = ^IndirectMayWriteSideEffect[-1]                 : &:r1709_5
# 1709|     mu1709_11(int)                                    = Store[#temp1709:20]                             : &:r1709_2, r1709_7
# 1709|     r1709_12(int &)                                   = CopyValue                                       : r1709_2
# 1709|     mu1709_13(int &&)                                 = Store[i]                                        : &:r1709_1, r1709_12
# 1710|     r1710_1(glval<int &>)                             = VariableAddress[r]                              : 
# 1710|     r1710_2(glval<StructuredBindingTupleNoRefGet &>)  = VariableAddress[unnamed_local_variable]         : 
# 1710|     r1710_3(StructuredBindingTupleNoRefGet &)         = Load[unnamed_local_variable]                    : &:r1710_2, ~m?
# 1710|     r1710_4(glval<StructuredBindingTupleNoRefGet>)    = CopyValue                                       : r1710_3
# 1710|     r1710_5(glval<unknown>)                           = FunctionAddress[get]                            : 
# 1710|     r1710_6(int &)                                    = Call[get]                                       : func:r1710_5, this:r1710_4
# 1710|     mu1710_7(unknown)                                 = ^CallSideEffect                                 : ~m?
# 1710|     v1710_8(void)                                     = ^IndirectReadSideEffect[-1]                     : &:r1710_4, ~m?
# 1710|     mu1710_9(StructuredBindingTupleNoRefGet)          = ^IndirectMayWriteSideEffect[-1]                 : &:r1710_4
# 1710|     r1710_10(glval<int>)                              = CopyValue                                       : r1710_6
# 1710|     r1710_11(int &)                                   = CopyValue                                       : r1710_10
# 1710|     mu1710_12(int &)                                  = Store[r]                                        : &:r1710_1, r1710_11
# 1711|     r1711_1(glval<int &&>)                            = VariableAddress[rv]                             : 
# 1711|     r1711_2(glval<StructuredBindingTupleNoRefGet &>)  = VariableAddress[unnamed_local_variable]         : 
# 1711|     r1711_3(StructuredBindingTupleNoRefGet &)         = Load[unnamed_local_variable]                    : &:r1711_2, ~m?
# 1711|     r1711_4(glval<StructuredBindingTupleNoRefGet>)    = CopyValue                                       : r1711_3
# 1711|     r1711_5(glval<unknown>)                           = FunctionAddress[get]                            : 
# 1711|     r1711_6(int &&)                                   = Call[get]                                       : func:r1711_5, this:r1711_4
# 1711|     mu1711_7(unknown)                                 = ^CallSideEffect                                 : ~m?
# 1711|     v1711_8(void)                                     = ^IndirectReadSideEffect[-1]                     : &:r1711_4, ~m?
# 1711|     mu1711_9(StructuredBindingTupleNoRefGet)          = ^IndirectMayWriteSideEffect[-1]                 : &:r1711_4
# 1711|     r1711_10(glval<int>)                              = CopyValue                                       : r1711_6
# 1711|     r1711_11(int &)                                   = CopyValue                                       : r1711_10
# 1711|     mu1711_12(int &&)                                 = Store[rv]                                       : &:r1711_1, r1711_11
# 1712|     r1712_1(int)                                      = Constant[4]                                     : 
# 1712|     r1712_2(glval<int &&>)                            = VariableAddress[i]                              : 
# 1712|     r1712_3(int &&)                                   = Load[i]                                         : &:r1712_2, ~m?
# 1712|     r1712_4(glval<int>)                               = CopyValue                                       : r1712_3
# 1712|     mu1712_5(int)                                     = Store[?]                                        : &:r1712_4, r1712_1
# 1713|     r1713_1(glval<int &>)                             = VariableAddress[ri]                             : 
# 1713|     r1713_2(glval<int &&>)                            = VariableAddress[i]                              : 
# 1713|     r1713_3(int &&)                                   = Load[i]                                         : &:r1713_2, ~m?
# 1713|     r1713_4(glval<int>)                               = CopyValue                                       : r1713_3
# 1713|     r1713_5(int &)                                    = CopyValue                                       : r1713_4
# 1713|     mu1713_6(int &)                                   = Store[ri]                                       : &:r1713_1, r1713_5
# 1714|     r1714_1(glval<int>)                               = VariableAddress[v]                              : 
# 1714|     r1714_2(glval<int &&>)                            = VariableAddress[i]                              : 
# 1714|     r1714_3(int &&)                                   = Load[i]                                         : &:r1714_2, ~m?
# 1714|     r1714_4(int)                                      = Load[?]                                         : &:r1714_3, ~m?
# 1714|     mu1714_5(int)                                     = Store[v]                                        : &:r1714_1, r1714_4
# 1715|     r1715_1(int)                                      = Constant[5]                                     : 
# 1715|     r1715_2(glval<int &>)                             = VariableAddress[r]                              : 
# 1715|     r1715_3(int &)                                    = Load[r]                                         : &:r1715_2, ~m?
# 1715|     r1715_4(glval<int>)                               = CopyValue                                       : r1715_3
# 1715|     mu1715_5(int)                                     = Store[?]                                        : &:r1715_4, r1715_1
# 1716|     r1716_1(glval<int &>)                             = VariableAddress[rr]                             : 
# 1716|     r1716_2(glval<int &>)                             = VariableAddress[r]                              : 
# 1716|     r1716_3(int &)                                    = Load[r]                                         : &:r1716_2, ~m?
# 1716|     r1716_4(glval<int>)                               = CopyValue                                       : r1716_3
# 1716|     r1716_5(int &)                                    = CopyValue                                       : r1716_4
# 1716|     mu1716_6(int &)                                   = Store[rr]                                       : &:r1716_1, r1716_5
# 1717|     r1717_1(glval<int>)                               = VariableAddress[w]                              : 
# 1717|     r1717_2(glval<int &>)                             = VariableAddress[r]                              : 
# 1717|     r1717_3(int &)                                    = Load[r]                                         : &:r1717_2, ~m?
# 1717|     r1717_4(int)                                      = Load[?]                                         : &:r1717_3, ~m?
# 1717|     mu1717_5(int)                                     = Store[w]                                        : &:r1717_1, r1717_4
# 1719|     v1719_1(void)                                     = NoOp                                            : 
# 1694|     v1694_4(void)                                     = ReturnVoid                                      : 
# 1694|     v1694_5(void)                                     = AliasedUse                                      : ~m?
# 1694|     v1694_6(void)                                     = ExitFunction                                    : 

# 1721| void array_structured_binding_non_ref_init()
# 1721|   Block 0
# 1721|     v1721_1(void)          = EnterFunction                             : 
# 1721|     mu1721_2(unknown)      = AliasedDefinition                         : 
# 1721|     mu1721_3(unknown)      = InitializeNonLocal                        : 
# 1722|     r1722_1(glval<int[2]>) = VariableAddress[xs]                       : 
# 1722|     mu1722_2(int[2])       = Uninitialized[xs]                         : &:r1722_1
# 1722|     r1722_3(int)           = Constant[0]                               : 
# 1722|     r1722_4(glval<int>)    = PointerAdd[4]                             : r1722_1, r1722_3
# 1722|     r1722_5(int)           = Constant[1]                               : 
# 1722|     mu1722_6(int)          = Store[?]                                  : &:r1722_4, r1722_5
# 1722|     r1722_7(int)           = Constant[1]                               : 
# 1722|     r1722_8(glval<int>)    = PointerAdd[4]                             : r1722_1, r1722_7
# 1722|     r1722_9(int)           = Constant[2]                               : 
# 1722|     mu1722_10(int)         = Store[?]                                  : &:r1722_8, r1722_9
# 1723|     r1723_1(glval<int[2]>) = VariableAddress[(unnamed local variable)] : 
# 1723|     r1723_2(glval<int[2]>) = VariableAddress[xs]                       : 
# 1723|     r1723_3(int[2])        = Load[xs]                                  : &:r1723_2, ~m?
# 1723|     mu1723_4(int[2])       = Store[(unnamed local variable)]           : &:r1723_1, r1723_3
# 1723|     r1723_5(glval<int &>)  = VariableAddress[x0]                       : 
#-----|     r0_1(glval<int[2]>)    = VariableAddress[(unnamed local variable)] : 
#-----|     r0_2(int *)            = Convert                                   : r0_1
#-----|     r0_3(unsigned long)    = Constant[0]                               : 
#-----|     r0_4(glval<int>)       = PointerAdd[4]                             : r0_2, r0_3
#-----|     mu0_5(int &)           = Store[x0]                                 : &:r1723_5, r0_4
# 1723|     r1723_6(glval<int &>)  = VariableAddress[x1]                       : 
#-----|     r0_6(glval<int[2]>)    = VariableAddress[(unnamed local variable)] : 
#-----|     r0_7(int *)            = Convert                                   : r0_6
#-----|     r0_8(unsigned long)    = Constant[1]                               : 
#-----|     r0_9(glval<int>)       = PointerAdd[4]                             : r0_7, r0_8
#-----|     mu0_10(int &)          = Store[x1]                                 : &:r1723_6, r0_9
# 1724|     v1724_1(void)          = NoOp                                      : 
# 1721|     v1721_4(void)          = ReturnVoid                                : 
# 1721|     v1721_5(void)          = AliasedUse                                : ~m?
# 1721|     v1721_6(void)          = ExitFunction                              : 

# 1729| void CapturedLambdaMyObj::CapturedLambdaMyObj()
# 1729|   Block 0
# 1729|     v1729_1(void)                        = EnterFunction                : 
# 1729|     mu1729_2(unknown)                    = AliasedDefinition            : 
# 1729|     mu1729_3(unknown)                    = InitializeNonLocal           : 
# 1729|     r1729_4(glval<unknown>)              = VariableAddress[#this]       : 
# 1729|     mu1729_5(glval<CapturedLambdaMyObj>) = InitializeParameter[#this]   : &:r1729_4
# 1729|     r1729_6(glval<CapturedLambdaMyObj>)  = Load[#this]                  : &:r1729_4, ~m?
# 1729|     mu1729_7(CapturedLambdaMyObj)        = InitializeIndirection[#this] : &:r1729_6
# 1729|     v1729_8(void)                        = NoOp                         : 
# 1729|     v1729_9(void)                        = ReturnIndirection[#this]     : &:r1729_6, ~m?
# 1729|     v1729_10(void)                       = ReturnVoid                   : 
# 1729|     v1729_11(void)                       = AliasedUse                   : ~m?
# 1729|     v1729_12(void)                       = ExitFunction                 : 

# 1732| void captured_lambda(int, int&, int&&)
# 1732|   Block 0
# 1732|     v1732_1(void)                             = EnterFunction                        : 
# 1732|     mu1732_2(unknown)                         = AliasedDefinition                    : 
# 1732|     mu1732_3(unknown)                         = InitializeNonLocal                   : 
# 1732|     r1732_4(glval<int>)                       = VariableAddress[x]                   : 
# 1732|     mu1732_5(int)                             = InitializeParameter[x]               : &:r1732_4
# 1732|     r1732_6(glval<int &>)                     = VariableAddress[y]                   : 
# 1732|     mu1732_7(int &)                           = InitializeParameter[y]               : &:r1732_6
# 1732|     r1732_8(int &)                            = Load[y]                              : &:r1732_6, ~m?
# 1732|     mu1732_9(unknown)                         = InitializeIndirection[y]             : &:r1732_8
# 1732|     r1732_10(glval<int &&>)                   = VariableAddress[z]                   : 
# 1732|     mu1732_11(int &&)                         = InitializeParameter[z]               : &:r1732_10
# 1732|     r1732_12(int &&)                          = Load[z]                              : &:r1732_10, ~m?
# 1732|     mu1732_13(unknown)                        = InitializeIndirection[z]             : &:r1732_12
# 1734|     r1734_1(glval<CapturedLambdaMyObj &>)     = VariableAddress[obj1]                : 
# 1734|     r1734_2(glval<CapturedLambdaMyObj>)       = VariableAddress[#temp1734:24]        : 
# 1734|     mu1734_3(CapturedLambdaMyObj)             = Uninitialized[#temp1734:24]          : &:r1734_2
# 1734|     r1734_4(glval<unknown>)                   = FunctionAddress[CapturedLambdaMyObj] : 
# 1734|     v1734_5(void)                             = Call[CapturedLambdaMyObj]            : func:r1734_4, this:r1734_2
# 1734|     mu1734_6(unknown)                         = ^CallSideEffect                      : ~m?
# 1734|     mu1734_7(CapturedLambdaMyObj)             = ^IndirectMayWriteSideEffect[-1]      : &:r1734_2
# 1734|     r1734_8(glval<CapturedLambdaMyObj>)       = Convert                              : r1734_2
# 1734|     r1734_9(CapturedLambdaMyObj &)            = CopyValue                            : r1734_8
# 1734|     mu1734_10(CapturedLambdaMyObj &)          = Store[obj1]                          : &:r1734_1, r1734_9
# 1735|     r1735_1(glval<CapturedLambdaMyObj>)       = VariableAddress[obj2]                : 
# 1735|     mu1735_2(CapturedLambdaMyObj)             = Uninitialized[obj2]                  : &:r1735_1
# 1735|     r1735_3(glval<unknown>)                   = FunctionAddress[CapturedLambdaMyObj] : 
# 1735|     v1735_4(void)                             = Call[CapturedLambdaMyObj]            : func:r1735_3, this:r1735_1
# 1735|     mu1735_5(unknown)                         = ^CallSideEffect                      : ~m?
# 1735|     mu1735_6(CapturedLambdaMyObj)             = ^IndirectMayWriteSideEffect[-1]      : &:r1735_1
# 1737|     r1737_1(glval<decltype([...](...){...})>) = VariableAddress[lambda_outer]        : 
# 1737|     r1737_2(glval<decltype([...](...){...})>) = VariableAddress[#temp1737:24]        : 
# 1737|     mu1737_3(decltype([...](...){...}))       = Uninitialized[#temp1737:24]          : &:r1737_2
# 1737|     r1737_4(glval<CapturedLambdaMyObj>)       = FieldAddress[obj1]                   : r1737_2
# 1737|     r1737_5(glval<CapturedLambdaMyObj &>)     = VariableAddress[obj1]                : 
# 1737|     r1737_6(CapturedLambdaMyObj &)            = Load[obj1]                           : &:r1737_5, ~m?
#-----|     r0_1(CapturedLambdaMyObj)                 = Load[?]                              : &:r1737_6, ~m?
#-----|     mu0_2(CapturedLambdaMyObj)                = Store[?]                             : &:r1737_4, r0_1
# 1737|     r1737_7(glval<CapturedLambdaMyObj>)       = FieldAddress[obj2]                   : r1737_2
# 1737|     r1737_8(glval<CapturedLambdaMyObj>)       = VariableAddress[obj2]                : 
# 1737|     r1737_9(CapturedLambdaMyObj)              = Load[obj2]                           : &:r1737_8, ~m?
# 1737|     mu1737_10(CapturedLambdaMyObj)            = Store[?]                             : &:r1737_7, r1737_9
# 1737|     r1737_11(glval<int>)                      = FieldAddress[x]                      : r1737_2
# 1737|     r1737_12(glval<int>)                      = VariableAddress[x]                   : 
# 1737|     r1737_13(int)                             = Load[x]                              : &:r1737_12, ~m?
# 1737|     mu1737_14(int)                            = Store[?]                             : &:r1737_11, r1737_13
# 1737|     r1737_15(glval<int>)                      = FieldAddress[y]                      : r1737_2
# 1737|     r1737_16(glval<int &>)                    = VariableAddress[y]                   : 
# 1737|     r1737_17(int &)                           = Load[y]                              : &:r1737_16, ~m?
# 1739|     r1739_1(int)                              = Load[?]                              : &:r1737_17, ~m?
# 1739|     mu1739_2(int)                             = Store[?]                             : &:r1737_15, r1739_1
# 1737|     r1737_18(glval<int>)                      = FieldAddress[z]                      : r1737_2
# 1737|     r1737_19(glval<int &&>)                   = VariableAddress[z]                   : 
# 1737|     r1737_20(int &&)                          = Load[z]                              : &:r1737_19, ~m?
# 1739|     r1739_3(int)                              = Load[?]                              : &:r1737_20, ~m?
# 1739|     mu1739_4(int)                             = Store[?]                             : &:r1737_18, r1739_3
# 1737|     r1737_21(decltype([...](...){...}))       = Load[#temp1737:24]                   : &:r1737_2, ~m?
# 1737|     mu1737_22(decltype([...](...){...}))      = Store[lambda_outer]                  : &:r1737_1, r1737_21
# 1740|     v1740_1(void)                             = NoOp                                 : 
# 1732|     v1732_14(void)                            = ReturnIndirection[y]                 : &:r1732_8, ~m?
# 1732|     v1732_15(void)                            = ReturnIndirection[z]                 : &:r1732_12, ~m?
# 1732|     v1732_16(void)                            = ReturnVoid                           : 
# 1732|     v1732_17(void)                            = AliasedUse                           : ~m?
# 1732|     v1732_18(void)                            = ExitFunction                         : 

# 1737| void (void captured_lambda(int, int&, int&&))::(lambda [] type at line 1737, col. 25)::operator()() const
# 1737|   Block 0
# 1737|     v1737_1(void)                                    = EnterFunction                 : 
# 1737|     mu1737_2(unknown)                                = AliasedDefinition             : 
# 1737|     mu1737_3(unknown)                                = InitializeNonLocal            : 
# 1737|     r1737_4(glval<unknown>)                          = VariableAddress[#this]        : 
# 1737|     mu1737_5(glval<decltype([...](...){...})>)       = InitializeParameter[#this]    : &:r1737_4
# 1737|     r1737_6(glval<decltype([...](...){...})>)        = Load[#this]                   : &:r1737_4, ~m?
# 1737|     mu1737_7(decltype([...](...){...}))              = InitializeIndirection[#this]  : &:r1737_6
# 1738|     r1738_1(glval<decltype([...](...){...})>)        = VariableAddress[lambda_inner] : 
# 1738|     r1738_2(glval<decltype([...](...){...})>)        = VariableAddress[#temp1738:28] : 
# 1738|     mu1738_3(decltype([...](...){...}))              = Uninitialized[#temp1738:28]   : &:r1738_2
# 1738|     r1738_4(glval<CapturedLambdaMyObj>)              = FieldAddress[obj1]            : r1738_2
# 1738|     r1738_5(glval<unknown>)                          = VariableAddress[#this]        : 
# 1738|     r1738_6(lambda [] type at line 1738, col. 29 *)  = Load[#this]                   : &:r1738_5, ~m?
# 1738|     r1738_7(glval<CapturedLambdaMyObj>)              = FieldAddress[obj1]            : r1738_6
# 1738|     r1738_8(CapturedLambdaMyObj)                     = Load[?]                       : &:r1738_7, ~m?
# 1738|     mu1738_9(CapturedLambdaMyObj)                    = Store[?]                      : &:r1738_4, r1738_8
# 1738|     r1738_10(glval<CapturedLambdaMyObj>)             = FieldAddress[obj2]            : r1738_2
# 1738|     r1738_11(glval<unknown>)                         = VariableAddress[#this]        : 
# 1738|     r1738_12(lambda [] type at line 1738, col. 29 *) = Load[#this]                   : &:r1738_11, ~m?
# 1738|     r1738_13(glval<CapturedLambdaMyObj>)             = FieldAddress[obj2]            : r1738_12
# 1738|     r1738_14(CapturedLambdaMyObj)                    = Load[?]                       : &:r1738_13, ~m?
# 1738|     mu1738_15(CapturedLambdaMyObj)                   = Store[?]                      : &:r1738_10, r1738_14
# 1738|     r1738_16(glval<int>)                             = FieldAddress[x]               : r1738_2
# 1738|     r1738_17(glval<unknown>)                         = VariableAddress[#this]        : 
# 1738|     r1738_18(lambda [] type at line 1737, col. 25 *) = Load[#this]                   : &:r1738_17, ~m?
# 1738|     r1738_19(glval<int>)                             = FieldAddress[x]               : r1738_18
# 1738|     r1738_20(int)                                    = Load[?]                       : &:r1738_19, ~m?
# 1738|     mu1738_21(int)                                   = Store[?]                      : &:r1738_16, r1738_20
# 1738|     r1738_22(glval<int>)                             = FieldAddress[y]               : r1738_2
# 1738|     r1738_23(glval<unknown>)                         = VariableAddress[#this]        : 
# 1738|     r1738_24(lambda [] type at line 1737, col. 25 *) = Load[#this]                   : &:r1738_23, ~m?
# 1738|     r1738_25(glval<int>)                             = FieldAddress[y]               : r1738_24
# 1738|     r1738_26(int)                                    = Load[?]                       : &:r1738_25, ~m?
# 1738|     mu1738_27(int)                                   = Store[?]                      : &:r1738_22, r1738_26
# 1738|     r1738_28(glval<int>)                             = FieldAddress[z]               : r1738_2
# 1738|     r1738_29(glval<unknown>)                         = VariableAddress[#this]        : 
# 1738|     r1738_30(lambda [] type at line 1737, col. 25 *) = Load[#this]                   : &:r1738_29, ~m?
# 1738|     r1738_31(glval<int>)                             = FieldAddress[z]               : r1738_30
# 1738|     r1738_32(int)                                    = Load[?]                       : &:r1738_31, ~m?
# 1738|     mu1738_33(int)                                   = Store[?]                      : &:r1738_28, r1738_32
# 1738|     r1738_34(decltype([...](...){...}))              = Load[#temp1738:28]            : &:r1738_2, ~m?
# 1738|     mu1738_35(decltype([...](...){...}))             = Store[lambda_inner]           : &:r1738_1, r1738_34
# 1739|     v1739_1(void)                                    = NoOp                          : 
# 1737|     v1737_8(void)                                    = ReturnIndirection[#this]      : &:r1737_6, ~m?
# 1737|     v1737_9(void)                                    = ReturnVoid                    : 
# 1737|     v1737_10(void)                                   = AliasedUse                    : ~m?
# 1737|     v1737_11(void)                                   = ExitFunction                  : 

# 1738| void (void (void captured_lambda(int, int&, int&&))::(lambda [] type at line 1737, col. 25)::operator()() const)::(lambda [] type at line 1738, col. 29)::operator()() const
# 1738|   Block 0
# 1738|     v1738_1(void)                              = EnterFunction                : 
# 1738|     mu1738_2(unknown)                          = AliasedDefinition            : 
# 1738|     mu1738_3(unknown)                          = InitializeNonLocal           : 
# 1738|     r1738_4(glval<unknown>)                    = VariableAddress[#this]       : 
# 1738|     mu1738_5(glval<decltype([...](...){...})>) = InitializeParameter[#this]   : &:r1738_4
# 1738|     r1738_6(glval<decltype([...](...){...})>)  = Load[#this]                  : &:r1738_4, ~m?
# 1738|     mu1738_7(decltype([...](...){...}))        = InitializeIndirection[#this] : &:r1738_6
# 1738|     v1738_8(void)                              = NoOp                         : 
# 1738|     v1738_9(void)                              = NoOp                         : 
# 1738|     v1738_10(void)                             = ReturnIndirection[#this]     : &:r1738_6, ~m?
# 1738|     v1738_11(void)                             = ReturnVoid                   : 
# 1738|     v1738_12(void)                             = AliasedUse                   : ~m?
# 1738|     v1738_13(void)                             = ExitFunction                 : 

# 1742| int goto_on_same_line()
# 1742|   Block 0
# 1742|     v1742_1(void)       = EnterFunction            : 
# 1742|     mu1742_2(unknown)   = AliasedDefinition        : 
# 1742|     mu1742_3(unknown)   = InitializeNonLocal       : 
# 1743|     r1743_1(glval<int>) = VariableAddress[x]       : 
# 1743|     r1743_2(int)        = Constant[42]             : 
# 1743|     mu1743_3(int)       = Store[x]                 : &:r1743_1, r1743_2
# 1744|     v1744_1(void)       = NoOp                     : 
# 1744|     v1744_2(void)       = NoOp                     : 
# 1745|     r1745_1(glval<int>) = VariableAddress[#return] : 
# 1745|     r1745_2(glval<int>) = VariableAddress[x]       : 
# 1745|     r1745_3(int)        = Load[x]                  : &:r1745_2, ~m?
# 1745|     mu1745_4(int)       = Store[#return]           : &:r1745_1, r1745_3
# 1742|     r1742_4(glval<int>) = VariableAddress[#return] : 
# 1742|     v1742_5(void)       = ReturnValue              : &:r1742_4, ~m?
# 1742|     v1742_6(void)       = AliasedUse               : ~m?
# 1742|     v1742_7(void)       = ExitFunction             : 

# 1750| void TrivialLambdaClass::m() const
# 1750|   Block 0
# 1750|     v1750_1(void)                             = EnterFunction                 : 
# 1750|     mu1750_2(unknown)                         = AliasedDefinition             : 
# 1750|     mu1750_3(unknown)                         = InitializeNonLocal            : 
# 1750|     r1750_4(glval<unknown>)                   = VariableAddress[#this]        : 
# 1750|     mu1750_5(glval<TrivialLambdaClass>)       = InitializeParameter[#this]    : &:r1750_4
# 1750|     r1750_6(glval<TrivialLambdaClass>)        = Load[#this]                   : &:r1750_4, ~m?
# 1750|     mu1750_7(TrivialLambdaClass)              = InitializeIndirection[#this]  : &:r1750_6
# 1751|     r1751_1(glval<decltype([...](...){...})>) = VariableAddress[l_m_outer]    : 
# 1751|     r1751_2(glval<decltype([...](...){...})>) = VariableAddress[#temp1751:25] : 
# 1751|     mu1751_3(decltype([...](...){...}))       = Uninitialized[#temp1751:25]   : &:r1751_2
# 1751|     r1751_4(glval<TrivialLambdaClass>)        = FieldAddress[(captured this)] : r1751_2
# 1751|     r1751_5(glval<unknown>)                   = VariableAddress[#this]        : 
# 1751|     r1751_6(TrivialLambdaClass *)             = Load[#this]                   : &:r1751_5, ~m?
# 1751|     r1751_7(TrivialLambdaClass)               = Load[?]                       : &:r1751_6, ~m?
# 1751|     mu1751_8(TrivialLambdaClass)              = Store[?]                      : &:r1751_4, r1751_7
# 1751|     r1751_9(decltype([...](...){...}))        = Load[#temp1751:25]            : &:r1751_2, ~m?
# 1751|     mu1751_10(decltype([...](...){...}))      = Store[l_m_outer]              : &:r1751_1, r1751_9
# 1758|     v1758_1(void)                             = NoOp                          : 
# 1750|     v1750_8(void)                             = ReturnIndirection[#this]      : &:r1750_6, ~m?
# 1750|     v1750_9(void)                             = ReturnVoid                    : 
# 1750|     v1750_10(void)                            = AliasedUse                    : ~m?
# 1750|     v1750_11(void)                            = ExitFunction                  : 

# 1751| void (void TrivialLambdaClass::m() const)::(lambda [] type at line 1751, col. 26)::operator()() const
# 1751|   Block 0
# 1751|     v1751_1(void)                                   = EnterFunction                 : 
# 1751|     mu1751_2(unknown)                               = AliasedDefinition             : 
# 1751|     mu1751_3(unknown)                               = InitializeNonLocal            : 
# 1751|     r1751_4(glval<unknown>)                         = VariableAddress[#this]        : 
# 1751|     mu1751_5(glval<decltype([...](...){...})>)      = InitializeParameter[#this]    : &:r1751_4
# 1751|     r1751_6(glval<decltype([...](...){...})>)       = Load[#this]                   : &:r1751_4, ~m?
# 1751|     mu1751_7(decltype([...](...){...}))             = InitializeIndirection[#this]  : &:r1751_6
# 1752|     r1752_1(glval<unknown>)                         = VariableAddress[#this]        : 
# 1752|     r1752_2(lambda [] type at line 1751, col. 26 *) = Load[#this]                   : &:r1752_1, ~m?
# 1752|     r1752_3(glval<TrivialLambdaClass>)              = FieldAddress[(captured this)] : r1752_2
# 1752|     r1752_4(TrivialLambdaClass *)                   = CopyValue                     : r1752_3
# 1752|     r1752_5(glval<unknown>)                         = FunctionAddress[m]            : 
# 1752|     v1752_6(void)                                   = Call[m]                       : func:r1752_5, this:r1752_4
# 1752|     mu1752_7(unknown)                               = ^CallSideEffect               : ~m?
# 1752|     v1752_8(void)                                   = ^IndirectReadSideEffect[-1]   : &:r1752_4, ~m?
# 1754|     r1754_1(glval<decltype([...](...){...})>)       = VariableAddress[l_m_inner]    : 
# 1754|     r1754_2(glval<decltype([...](...){...})>)       = VariableAddress[#temp1754:29] : 
# 1754|     mu1754_3(decltype([...](...){...}))             = Uninitialized[#temp1754:29]   : &:r1754_2
# 1754|     r1754_4(glval<TrivialLambdaClass>)              = FieldAddress[(captured this)] : r1754_2
# 1754|     r1754_5(glval<unknown>)                         = VariableAddress[#this]        : 
# 1754|     r1754_6(lambda [] type at line 1754, col. 30 *) = Load[#this]                   : &:r1754_5, ~m?
# 1754|     r1754_7(glval<TrivialLambdaClass>)              = FieldAddress[(captured this)] : r1754_6
# 1754|     r1754_8(TrivialLambdaClass)                     = Load[?]                       : &:r1754_7, ~m?
# 1754|     mu1754_9(TrivialLambdaClass)                    = Store[?]                      : &:r1754_4, r1754_8
# 1754|     r1754_10(decltype([...](...){...}))             = Load[#temp1754:29]            : &:r1754_2, ~m?
# 1754|     mu1754_11(decltype([...](...){...}))            = Store[l_m_inner]              : &:r1754_1, r1754_10
# 1757|     v1757_1(void)                                   = NoOp                          : 
# 1751|     v1751_8(void)                                   = ReturnIndirection[#this]      : &:r1751_6, ~m?
# 1751|     v1751_9(void)                                   = ReturnVoid                    : 
# 1751|     v1751_10(void)                                  = AliasedUse                    : ~m?
# 1751|     v1751_11(void)                                  = ExitFunction                  : 

# 1754| void (void (void TrivialLambdaClass::m() const)::(lambda [] type at line 1751, col. 26)::operator()() const)::(lambda [] type at line 1754, col. 30)::operator()() const
# 1754|   Block 0
# 1754|     v1754_1(void)                                   = EnterFunction                 : 
# 1754|     mu1754_2(unknown)                               = AliasedDefinition             : 
# 1754|     mu1754_3(unknown)                               = InitializeNonLocal            : 
# 1754|     r1754_4(glval<unknown>)                         = VariableAddress[#this]        : 
# 1754|     mu1754_5(glval<decltype([...](...){...})>)      = InitializeParameter[#this]    : &:r1754_4
# 1754|     r1754_6(glval<decltype([...](...){...})>)       = Load[#this]                   : &:r1754_4, ~m?
# 1754|     mu1754_7(decltype([...](...){...}))             = InitializeIndirection[#this]  : &:r1754_6
# 1755|     r1755_1(glval<unknown>)                         = VariableAddress[#this]        : 
# 1755|     r1755_2(lambda [] type at line 1754, col. 30 *) = Load[#this]                   : &:r1755_1, ~m?
# 1755|     r1755_3(glval<TrivialLambdaClass>)              = FieldAddress[(captured this)] : r1755_2
# 1755|     r1755_4(TrivialLambdaClass *)                   = CopyValue                     : r1755_3
# 1755|     r1755_5(glval<unknown>)                         = FunctionAddress[m]            : 
# 1755|     v1755_6(void)                                   = Call[m]                       : func:r1755_5, this:r1755_4
# 1755|     mu1755_7(unknown)                               = ^CallSideEffect               : ~m?
# 1755|     v1755_8(void)                                   = ^IndirectReadSideEffect[-1]   : &:r1755_4, ~m?
# 1756|     v1756_1(void)                                   = NoOp                          : 
# 1754|     v1754_8(void)                                   = ReturnIndirection[#this]      : &:r1754_6, ~m?
# 1754|     v1754_9(void)                                   = ReturnVoid                    : 
# 1754|     v1754_10(void)                                  = AliasedUse                    : ~m?
# 1754|     v1754_11(void)                                  = ExitFunction                  : 

# 1761| void captured_lambda2(TrivialLambdaClass, TrivialLambdaClass&, TrivialLambdaClass&&)
# 1761|   Block 0
# 1761|     v1761_1(void)                             = EnterFunction                 : 
# 1761|     mu1761_2(unknown)                         = AliasedDefinition             : 
# 1761|     mu1761_3(unknown)                         = InitializeNonLocal            : 
# 1761|     r1761_4(glval<TrivialLambdaClass>)        = VariableAddress[p1]           : 
# 1761|     mu1761_5(TrivialLambdaClass)              = InitializeParameter[p1]       : &:r1761_4
# 1761|     r1761_6(glval<TrivialLambdaClass &>)      = VariableAddress[p2]           : 
# 1761|     mu1761_7(TrivialLambdaClass &)            = InitializeParameter[p2]       : &:r1761_6
# 1761|     r1761_8(TrivialLambdaClass &)             = Load[p2]                      : &:r1761_6, ~m?
# 1761|     mu1761_9(unknown)                         = InitializeIndirection[p2]     : &:r1761_8
# 1761|     r1761_10(glval<TrivialLambdaClass &&>)    = VariableAddress[p3]           : 
# 1761|     mu1761_11(TrivialLambdaClass &&)          = InitializeParameter[p3]       : &:r1761_10
# 1761|     r1761_12(TrivialLambdaClass &&)           = Load[p3]                      : &:r1761_10, ~m?
# 1761|     mu1761_13(unknown)                        = InitializeIndirection[p3]     : &:r1761_12
# 1762|     r1762_1(glval<TrivialLambdaClass>)        = VariableAddress[l1]           : 
# 1762|     mu1762_2(TrivialLambdaClass)              = Uninitialized[l1]             : &:r1762_1
# 1763|     r1763_1(glval<TrivialLambdaClass &>)      = VariableAddress[l2]           : 
# 1763|     r1763_2(glval<TrivialLambdaClass>)        = VariableAddress[#temp1763:36] : 
# 1763|     r1763_3(TrivialLambdaClass)               = Constant[0]                   : 
# 1763|     mu1763_4(TrivialLambdaClass)              = Store[#temp1763:36]           : &:r1763_2, r1763_3
# 1763|     r1763_5(glval<TrivialLambdaClass>)        = Convert                       : r1763_2
# 1763|     r1763_6(TrivialLambdaClass &)             = CopyValue                     : r1763_5
# 1763|     mu1763_7(TrivialLambdaClass &)            = Store[l2]                     : &:r1763_1, r1763_6
# 1765|     r1765_1(glval<decltype([...](...){...})>) = VariableAddress[l_outer1]     : 
# 1765|     r1765_2(glval<decltype([...](...){...})>) = VariableAddress[#temp1765:20] : 
# 1765|     mu1765_3(decltype([...](...){...}))       = Uninitialized[#temp1765:20]   : &:r1765_2
# 1765|     r1765_4(glval<TrivialLambdaClass>)        = FieldAddress[p1]              : r1765_2
# 1765|     r1765_5(glval<TrivialLambdaClass>)        = VariableAddress[p1]           : 
# 1765|     r1765_6(TrivialLambdaClass)               = Load[p1]                      : &:r1765_5, ~m?
# 1765|     mu1765_7(TrivialLambdaClass)              = Store[?]                      : &:r1765_4, r1765_6
# 1765|     r1765_8(glval<TrivialLambdaClass>)        = FieldAddress[p2]              : r1765_2
# 1765|     r1765_9(glval<TrivialLambdaClass &>)      = VariableAddress[p2]           : 
# 1765|     r1765_10(TrivialLambdaClass &)            = Load[p2]                      : &:r1765_9, ~m?
#-----|     r0_1(TrivialLambdaClass)                  = Load[?]                       : &:r1765_10, ~m?
#-----|     mu0_2(TrivialLambdaClass)                 = Store[?]                      : &:r1765_8, r0_1
# 1765|     r1765_11(glval<TrivialLambdaClass>)       = FieldAddress[p3]              : r1765_2
# 1765|     r1765_12(glval<TrivialLambdaClass &&>)    = VariableAddress[p3]           : 
# 1765|     r1765_13(TrivialLambdaClass &&)           = Load[p3]                      : &:r1765_12, ~m?
#-----|     r0_3(TrivialLambdaClass)                  = Load[?]                       : &:r1765_13, ~m?
#-----|     mu0_4(TrivialLambdaClass)                 = Store[?]                      : &:r1765_11, r0_3
# 1765|     r1765_14(glval<TrivialLambdaClass>)       = FieldAddress[l1]              : r1765_2
# 1765|     r1765_15(glval<TrivialLambdaClass>)       = VariableAddress[l1]           : 
# 1765|     r1765_16(TrivialLambdaClass)              = Load[l1]                      : &:r1765_15, ~m?
# 1765|     mu1765_17(TrivialLambdaClass)             = Store[?]                      : &:r1765_14, r1765_16
# 1765|     r1765_18(glval<TrivialLambdaClass>)       = FieldAddress[l2]              : r1765_2
# 1765|     r1765_19(glval<TrivialLambdaClass &>)     = VariableAddress[l2]           : 
# 1765|     r1765_20(TrivialLambdaClass &)            = Load[l2]                      : &:r1765_19, ~m?
#-----|     r0_5(TrivialLambdaClass)                  = Load[?]                       : &:r1765_20, ~m?
#-----|     mu0_6(TrivialLambdaClass)                 = Store[?]                      : &:r1765_18, r0_5
# 1765|     r1765_21(decltype([...](...){...}))       = Load[#temp1765:20]            : &:r1765_2, ~m?
# 1765|     mu1765_22(decltype([...](...){...}))      = Store[l_outer1]               : &:r1765_1, r1765_21
# 1768|     v1768_1(void)                             = NoOp                          : 
# 1761|     v1761_14(void)                            = ReturnIndirection[p2]         : &:r1761_8, ~m?
# 1761|     v1761_15(void)                            = ReturnIndirection[p3]         : &:r1761_12, ~m?
# 1761|     v1761_16(void)                            = ReturnVoid                    : 
# 1761|     v1761_17(void)                            = AliasedUse                    : ~m?
# 1761|     v1761_18(void)                            = ExitFunction                  : 

# 1765| void (void captured_lambda2(TrivialLambdaClass, TrivialLambdaClass&, TrivialLambdaClass&&))::(lambda [] type at line 1765, col. 21)::operator()() const
# 1765|   Block 0
# 1765|     v1765_1(void)                                   = EnterFunction                 : 
# 1765|     mu1765_2(unknown)                               = AliasedDefinition             : 
# 1765|     mu1765_3(unknown)                               = InitializeNonLocal            : 
# 1765|     r1765_4(glval<unknown>)                         = VariableAddress[#this]        : 
# 1765|     mu1765_5(glval<decltype([...](...){...})>)      = InitializeParameter[#this]    : &:r1765_4
# 1765|     r1765_6(glval<decltype([...](...){...})>)       = Load[#this]                   : &:r1765_4, ~m?
# 1765|     mu1765_7(decltype([...](...){...}))             = InitializeIndirection[#this]  : &:r1765_6
# 1766|     r1766_1(glval<decltype([...](...){...})>)       = VariableAddress[l_inner1]     : 
# 1766|     r1766_2(glval<decltype([...](...){...})>)       = VariableAddress[#temp1766:24] : 
# 1766|     mu1766_3(decltype([...](...){...}))             = Uninitialized[#temp1766:24]   : &:r1766_2
# 1766|     r1766_4(glval<TrivialLambdaClass>)              = FieldAddress[p1]              : r1766_2
# 1766|     r1766_5(glval<unknown>)                         = VariableAddress[#this]        : 
# 1766|     r1766_6(lambda [] type at line 1766, col. 25 *) = Load[#this]                   : &:r1766_5, ~m?
# 1766|     r1766_7(glval<TrivialLambdaClass>)              = FieldAddress[p1]              : r1766_6
# 1766|     r1766_8(TrivialLambdaClass)                     = Load[?]                       : &:r1766_7, ~m?
# 1766|     mu1766_9(TrivialLambdaClass)                    = Store[?]                      : &:r1766_4, r1766_8
# 1766|     r1766_10(decltype([...](...){...}))             = Load[#temp1766:24]            : &:r1766_2, ~m?
# 1766|     mu1766_11(decltype([...](...){...}))            = Store[l_inner1]               : &:r1766_1, r1766_10
# 1767|     v1767_1(void)                                   = NoOp                          : 
# 1765|     v1765_8(void)                                   = ReturnIndirection[#this]      : &:r1765_6, ~m?
# 1765|     v1765_9(void)                                   = ReturnVoid                    : 
# 1765|     v1765_10(void)                                  = AliasedUse                    : ~m?
# 1765|     v1765_11(void)                                  = ExitFunction                  : 

# 1766| void (void (void captured_lambda2(TrivialLambdaClass, TrivialLambdaClass&, TrivialLambdaClass&&))::(lambda [] type at line 1765, col. 21)::operator()() const)::(lambda [] type at line 1766, col. 25)::operator()() const
# 1766|   Block 0
# 1766|     v1766_1(void)                              = EnterFunction                : 
# 1766|     mu1766_2(unknown)                          = AliasedDefinition            : 
# 1766|     mu1766_3(unknown)                          = InitializeNonLocal           : 
# 1766|     r1766_4(glval<unknown>)                    = VariableAddress[#this]       : 
# 1766|     mu1766_5(glval<decltype([...](...){...})>) = InitializeParameter[#this]   : &:r1766_4
# 1766|     r1766_6(glval<decltype([...](...){...})>)  = Load[#this]                  : &:r1766_4, ~m?
# 1766|     mu1766_7(decltype([...](...){...}))        = InitializeIndirection[#this] : &:r1766_6
# 1766|     v1766_8(void)                              = NoOp                         : 
# 1766|     v1766_9(void)                              = ReturnIndirection[#this]     : &:r1766_6, ~m?
# 1766|     v1766_10(void)                             = ReturnVoid                   : 
# 1766|     v1766_11(void)                             = AliasedUse                   : ~m?
# 1766|     v1766_12(void)                             = ExitFunction                 : 

# 1773| void CopyConstructorWithImplicitArgumentClass::CopyConstructorWithImplicitArgumentClass()
# 1773|   Block 0
# 1773|     v1773_1(void)                                             = EnterFunction                : 
# 1773|     mu1773_2(unknown)                                         = AliasedDefinition            : 
# 1773|     mu1773_3(unknown)                                         = InitializeNonLocal           : 
# 1773|     r1773_4(glval<unknown>)                                   = VariableAddress[#this]       : 
# 1773|     mu1773_5(glval<CopyConstructorWithImplicitArgumentClass>) = InitializeParameter[#this]   : &:r1773_4
# 1773|     r1773_6(glval<CopyConstructorWithImplicitArgumentClass>)  = Load[#this]                  : &:r1773_4, ~m?
# 1773|     mu1773_7(CopyConstructorWithImplicitArgumentClass)        = InitializeIndirection[#this] : &:r1773_6
# 1773|     v1773_8(void)                                             = NoOp                         : 
# 1773|     v1773_9(void)                                             = ReturnIndirection[#this]     : &:r1773_6, ~m?
# 1773|     v1773_10(void)                                            = ReturnVoid                   : 
# 1773|     v1773_11(void)                                            = AliasedUse                   : ~m?
# 1773|     v1773_12(void)                                            = ExitFunction                 : 

# 1774| void CopyConstructorWithImplicitArgumentClass::CopyConstructorWithImplicitArgumentClass(CopyConstructorWithImplicitArgumentClass const&)
# 1774|   Block 0
# 1774|     v1774_1(void)                                              = EnterFunction                : 
# 1774|     mu1774_2(unknown)                                          = AliasedDefinition            : 
# 1774|     mu1774_3(unknown)                                          = InitializeNonLocal           : 
# 1774|     r1774_4(glval<unknown>)                                    = VariableAddress[#this]       : 
# 1774|     mu1774_5(glval<CopyConstructorWithImplicitArgumentClass>)  = InitializeParameter[#this]   : &:r1774_4
# 1774|     r1774_6(glval<CopyConstructorWithImplicitArgumentClass>)   = Load[#this]                  : &:r1774_4, ~m?
# 1774|     mu1774_7(CopyConstructorWithImplicitArgumentClass)         = InitializeIndirection[#this] : &:r1774_6
# 1774|     r1774_8(glval<CopyConstructorWithImplicitArgumentClass &>) = VariableAddress[c]           : 
# 1774|     mu1774_9(CopyConstructorWithImplicitArgumentClass &)       = InitializeParameter[c]       : &:r1774_8
# 1774|     r1774_10(CopyConstructorWithImplicitArgumentClass &)       = Load[c]                      : &:r1774_8, ~m?
# 1774|     mu1774_11(unknown)                                         = InitializeIndirection[c]     : &:r1774_10
# 1775|     r1775_1(glval<CopyConstructorWithImplicitArgumentClass &>) = VariableAddress[c]           : 
# 1775|     r1775_2(CopyConstructorWithImplicitArgumentClass &)        = Load[c]                      : &:r1775_1, ~m?
# 1775|     r1775_3(glval<CopyConstructorWithImplicitArgumentClass>)   = CopyValue                    : r1775_2
# 1775|     r1775_4(glval<int>)                                        = FieldAddress[x]              : r1775_3
# 1775|     r1775_5(int)                                               = Load[?]                      : &:r1775_4, ~m?
# 1775|     r1775_6(glval<unknown>)                                    = VariableAddress[#this]       : 
# 1775|     r1775_7(CopyConstructorWithImplicitArgumentClass *)        = Load[#this]                  : &:r1775_6, ~m?
# 1775|     r1775_8(glval<int>)                                        = FieldAddress[x]              : r1775_7
# 1775|     mu1775_9(int)                                              = Store[?]                     : &:r1775_8, r1775_5
# 1776|     v1776_1(void)                                              = NoOp                         : 
# 1774|     v1774_12(void)                                             = ReturnIndirection[#this]     : &:r1774_6, ~m?
# 1774|     v1774_13(void)                                             = ReturnIndirection[c]         : &:r1774_10, ~m?
# 1774|     v1774_14(void)                                             = ReturnVoid                   : 
# 1774|     v1774_15(void)                                             = AliasedUse                   : ~m?
# 1774|     v1774_16(void)                                             = ExitFunction                 : 

# 1782| void CopyConstructorWithBitwiseCopyClass::CopyConstructorWithBitwiseCopyClass()
# 1782|   Block 0
# 1782|     v1782_1(void)                                        = EnterFunction                : 
# 1782|     mu1782_2(unknown)                                    = AliasedDefinition            : 
# 1782|     mu1782_3(unknown)                                    = InitializeNonLocal           : 
# 1782|     r1782_4(glval<unknown>)                              = VariableAddress[#this]       : 
# 1782|     mu1782_5(glval<CopyConstructorWithBitwiseCopyClass>) = InitializeParameter[#this]   : &:r1782_4
# 1782|     r1782_6(glval<CopyConstructorWithBitwiseCopyClass>)  = Load[#this]                  : &:r1782_4, ~m?
# 1782|     mu1782_7(CopyConstructorWithBitwiseCopyClass)        = InitializeIndirection[#this] : &:r1782_6
# 1782|     v1782_8(void)                                        = NoOp                         : 
# 1782|     v1782_9(void)                                        = ReturnIndirection[#this]     : &:r1782_6, ~m?
# 1782|     v1782_10(void)                                       = ReturnVoid                   : 
# 1782|     v1782_11(void)                                       = AliasedUse                   : ~m?
# 1782|     v1782_12(void)                                       = ExitFunction                 : 

# 1785| void CopyConstructorTestNonVirtualClass::CopyConstructorTestNonVirtualClass(CopyConstructorTestNonVirtualClass const&)
# 1785|   Block 0
# 1785|     v1785_1(void)                                             = EnterFunction                                                                                          : 
# 1785|     mu1785_2(unknown)                                         = AliasedDefinition                                                                                      : 
# 1785|     mu1785_3(unknown)                                         = InitializeNonLocal                                                                                     : 
# 1785|     r1785_4(glval<unknown>)                                   = VariableAddress[#this]                                                                                 : 
# 1785|     mu1785_5(glval<CopyConstructorTestNonVirtualClass>)       = InitializeParameter[#this]                                                                             : &:r1785_4
# 1785|     r1785_6(glval<CopyConstructorTestNonVirtualClass>)        = Load[#this]                                                                                            : &:r1785_4, ~m?
# 1785|     mu1785_7(CopyConstructorTestNonVirtualClass)              = InitializeIndirection[#this]                                                                           : &:r1785_6
#-----|     r0_1(glval<CopyConstructorTestNonVirtualClass &>)         = VariableAddress[(unnamed parameter 0)]                                                                 : 
#-----|     mu0_2(CopyConstructorTestNonVirtualClass &)               = InitializeParameter[(unnamed parameter 0)]                                                             : &:r0_1
#-----|     r0_3(CopyConstructorTestNonVirtualClass &)                = Load[(unnamed parameter 0)]                                                                            : &:r0_1, ~m?
#-----|     mu0_4(unknown)                                            = InitializeIndirection[(unnamed parameter 0)]                                                           : &:r0_3
# 1785|     r1785_8(glval<CopyConstructorWithImplicitArgumentClass>)  = ConvertToNonVirtualBase[CopyConstructorTestNonVirtualClass : CopyConstructorWithImplicitArgumentClass] : mu1785_5
# 1785|     r1785_9(glval<unknown>)                                   = FunctionAddress[CopyConstructorWithImplicitArgumentClass]                                              : 
# 1785|     r1785_10(glval<CopyConstructorTestNonVirtualClass &>)     = VariableAddress[(unnamed parameter 0)]                                                                 : 
# 1785|     r1785_11(CopyConstructorTestNonVirtualClass &)            = Load[(unnamed parameter 0)]                                                                            : &:r1785_10, ~m?
# 1785|     r1785_12(glval<CopyConstructorTestNonVirtualClass>)       = CopyValue                                                                                              : r1785_11
# 1785|     r1785_13(glval<CopyConstructorWithImplicitArgumentClass>) = ConvertToNonVirtualBase[CopyConstructorTestNonVirtualClass : CopyConstructorWithImplicitArgumentClass] : r1785_12
# 1785|     r1785_14(CopyConstructorWithImplicitArgumentClass &)      = CopyValue                                                                                              : r1785_13
# 1785|     v1785_15(void)                                            = Call[CopyConstructorWithImplicitArgumentClass]                                                         : func:r1785_9, this:r1785_8, 0:r1785_14
# 1785|     mu1785_16(unknown)                                        = ^CallSideEffect                                                                                        : ~m?
# 1785|     v1785_17(void)                                            = ^BufferReadSideEffect[0]                                                                               : &:r1785_14, ~m?
# 1785|     mu1785_18(CopyConstructorWithImplicitArgumentClass)       = ^IndirectMayWriteSideEffect[-1]                                                                        : &:r1785_8
# 1785|     v1785_19(void)                                            = NoOp                                                                                                   : 
# 1785|     v1785_20(void)                                            = ReturnIndirection[#this]                                                                               : &:r1785_6, ~m?
#-----|     v0_5(void)                                                = ReturnIndirection[(unnamed parameter 0)]                                                               : &:r0_3, ~m?
# 1785|     v1785_21(void)                                            = ReturnVoid                                                                                             : 
# 1785|     v1785_22(void)                                            = AliasedUse                                                                                             : ~m?
# 1785|     v1785_23(void)                                            = ExitFunction                                                                                           : 

# 1789| void CopyConstructorTestNonVirtualClass::CopyConstructorTestNonVirtualClass()
# 1789|   Block 0
# 1789|     v1789_1(void)                                            = EnterFunction                                                                                          : 
# 1789|     mu1789_2(unknown)                                        = AliasedDefinition                                                                                      : 
# 1789|     mu1789_3(unknown)                                        = InitializeNonLocal                                                                                     : 
# 1789|     r1789_4(glval<unknown>)                                  = VariableAddress[#this]                                                                                 : 
# 1789|     mu1789_5(glval<CopyConstructorTestNonVirtualClass>)      = InitializeParameter[#this]                                                                             : &:r1789_4
# 1789|     r1789_6(glval<CopyConstructorTestNonVirtualClass>)       = Load[#this]                                                                                            : &:r1789_4, ~m?
# 1789|     mu1789_7(CopyConstructorTestNonVirtualClass)             = InitializeIndirection[#this]                                                                           : &:r1789_6
# 1789|     r1789_8(glval<CopyConstructorWithImplicitArgumentClass>) = ConvertToNonVirtualBase[CopyConstructorTestNonVirtualClass : CopyConstructorWithImplicitArgumentClass] : mu1789_5
# 1789|     r1789_9(glval<unknown>)                                  = FunctionAddress[CopyConstructorWithImplicitArgumentClass]                                              : 
# 1789|     v1789_10(void)                                           = Call[CopyConstructorWithImplicitArgumentClass]                                                         : func:r1789_9, this:r1789_8
# 1789|     mu1789_11(unknown)                                       = ^CallSideEffect                                                                                        : ~m?
# 1789|     mu1789_12(CopyConstructorWithImplicitArgumentClass)      = ^IndirectMayWriteSideEffect[-1]                                                                        : &:r1789_8
# 1789|     r1789_13(glval<CopyConstructorWithBitwiseCopyClass>)     = ConvertToNonVirtualBase[CopyConstructorTestNonVirtualClass : CopyConstructorWithBitwiseCopyClass]      : mu1789_5
# 1789|     r1789_14(glval<unknown>)                                 = FunctionAddress[CopyConstructorWithBitwiseCopyClass]                                                   : 
# 1789|     v1789_15(void)                                           = Call[CopyConstructorWithBitwiseCopyClass]                                                              : func:r1789_14, this:r1789_13
# 1789|     mu1789_16(unknown)                                       = ^CallSideEffect                                                                                        : ~m?
# 1789|     mu1789_17(CopyConstructorWithBitwiseCopyClass)           = ^IndirectMayWriteSideEffect[-1]                                                                        : &:r1789_13
# 1789|     v1789_18(void)                                           = NoOp                                                                                                   : 
# 1789|     v1789_19(void)                                           = ReturnIndirection[#this]                                                                               : &:r1789_6, ~m?
# 1789|     v1789_20(void)                                           = ReturnVoid                                                                                             : 
# 1789|     v1789_21(void)                                           = AliasedUse                                                                                             : ~m?
# 1789|     v1789_22(void)                                           = ExitFunction                                                                                           : 

# 1792| void CopyConstructorTestVirtualClass::CopyConstructorTestVirtualClass(CopyConstructorTestVirtualClass const&)
# 1792|   Block 0
# 1792|     v1792_1(void)                                             = EnterFunction                                                                                       : 
# 1792|     mu1792_2(unknown)                                         = AliasedDefinition                                                                                   : 
# 1792|     mu1792_3(unknown)                                         = InitializeNonLocal                                                                                  : 
# 1792|     r1792_4(glval<unknown>)                                   = VariableAddress[#this]                                                                              : 
# 1792|     mu1792_5(glval<CopyConstructorTestVirtualClass>)          = InitializeParameter[#this]                                                                          : &:r1792_4
# 1792|     r1792_6(glval<CopyConstructorTestVirtualClass>)           = Load[#this]                                                                                         : &:r1792_4, ~m?
# 1792|     mu1792_7(CopyConstructorTestVirtualClass)                 = InitializeIndirection[#this]                                                                        : &:r1792_6
#-----|     r0_1(glval<CopyConstructorTestVirtualClass &>)            = VariableAddress[(unnamed parameter 0)]                                                              : 
#-----|     mu0_2(CopyConstructorTestVirtualClass &)                  = InitializeParameter[(unnamed parameter 0)]                                                          : &:r0_1
#-----|     r0_3(CopyConstructorTestVirtualClass &)                   = Load[(unnamed parameter 0)]                                                                         : &:r0_1, ~m?
#-----|     mu0_4(unknown)                                            = InitializeIndirection[(unnamed parameter 0)]                                                        : &:r0_3
# 1792|     r1792_8(glval<CopyConstructorWithImplicitArgumentClass>)  = ConvertToNonVirtualBase[CopyConstructorTestVirtualClass : CopyConstructorWithImplicitArgumentClass] : mu1792_5
# 1792|     r1792_9(glval<unknown>)                                   = FunctionAddress[CopyConstructorWithImplicitArgumentClass]                                           : 
# 1792|     r1792_10(glval<CopyConstructorTestVirtualClass &>)        = VariableAddress[(unnamed parameter 0)]                                                              : 
# 1792|     r1792_11(CopyConstructorTestVirtualClass &)               = Load[(unnamed parameter 0)]                                                                         : &:r1792_10, ~m?
# 1792|     r1792_12(glval<CopyConstructorTestVirtualClass>)          = CopyValue                                                                                           : r1792_11
# 1792|     r1792_13(glval<CopyConstructorWithImplicitArgumentClass>) = ConvertToVirtualBase[CopyConstructorTestVirtualClass : CopyConstructorWithImplicitArgumentClass]    : r1792_12
# 1792|     r1792_14(CopyConstructorWithImplicitArgumentClass &)      = CopyValue                                                                                           : r1792_13
# 1792|     v1792_15(void)                                            = Call[CopyConstructorWithImplicitArgumentClass]                                                      : func:r1792_9, this:r1792_8, 0:r1792_14
# 1792|     mu1792_16(unknown)                                        = ^CallSideEffect                                                                                     : ~m?
# 1792|     v1792_17(void)                                            = ^BufferReadSideEffect[0]                                                                            : &:r1792_14, ~m?
# 1792|     mu1792_18(CopyConstructorWithImplicitArgumentClass)       = ^IndirectMayWriteSideEffect[-1]                                                                     : &:r1792_8
# 1792|     v1792_19(void)                                            = NoOp                                                                                                : 
# 1792|     v1792_20(void)                                            = ReturnIndirection[#this]                                                                            : &:r1792_6, ~m?
#-----|     v0_5(void)                                                = ReturnIndirection[(unnamed parameter 0)]                                                            : &:r0_3, ~m?
# 1792|     v1792_21(void)                                            = ReturnVoid                                                                                          : 
# 1792|     v1792_22(void)                                            = AliasedUse                                                                                          : ~m?
# 1792|     v1792_23(void)                                            = ExitFunction                                                                                        : 

# 1796| void CopyConstructorTestVirtualClass::CopyConstructorTestVirtualClass()
# 1796|   Block 0
# 1796|     v1796_1(void)                                            = EnterFunction                                                                                       : 
# 1796|     mu1796_2(unknown)                                        = AliasedDefinition                                                                                   : 
# 1796|     mu1796_3(unknown)                                        = InitializeNonLocal                                                                                  : 
# 1796|     r1796_4(glval<unknown>)                                  = VariableAddress[#this]                                                                              : 
# 1796|     mu1796_5(glval<CopyConstructorTestVirtualClass>)         = InitializeParameter[#this]                                                                          : &:r1796_4
# 1796|     r1796_6(glval<CopyConstructorTestVirtualClass>)          = Load[#this]                                                                                         : &:r1796_4, ~m?
# 1796|     mu1796_7(CopyConstructorTestVirtualClass)                = InitializeIndirection[#this]                                                                        : &:r1796_6
# 1796|     r1796_8(glval<CopyConstructorWithImplicitArgumentClass>) = ConvertToNonVirtualBase[CopyConstructorTestVirtualClass : CopyConstructorWithImplicitArgumentClass] : mu1796_5
# 1796|     r1796_9(glval<unknown>)                                  = FunctionAddress[CopyConstructorWithImplicitArgumentClass]                                           : 
# 1796|     v1796_10(void)                                           = Call[CopyConstructorWithImplicitArgumentClass]                                                      : func:r1796_9, this:r1796_8
# 1796|     mu1796_11(unknown)                                       = ^CallSideEffect                                                                                     : ~m?
# 1796|     mu1796_12(CopyConstructorWithImplicitArgumentClass)      = ^IndirectMayWriteSideEffect[-1]                                                                     : &:r1796_8
# 1796|     r1796_13(glval<CopyConstructorWithBitwiseCopyClass>)     = ConvertToNonVirtualBase[CopyConstructorTestVirtualClass : CopyConstructorWithBitwiseCopyClass]      : mu1796_5
# 1796|     r1796_14(glval<unknown>)                                 = FunctionAddress[CopyConstructorWithBitwiseCopyClass]                                                : 
# 1796|     v1796_15(void)                                           = Call[CopyConstructorWithBitwiseCopyClass]                                                           : func:r1796_14, this:r1796_13
# 1796|     mu1796_16(unknown)                                       = ^CallSideEffect                                                                                     : ~m?
# 1796|     mu1796_17(CopyConstructorWithBitwiseCopyClass)           = ^IndirectMayWriteSideEffect[-1]                                                                     : &:r1796_13
# 1796|     v1796_18(void)                                           = NoOp                                                                                                : 
# 1796|     v1796_19(void)                                           = ReturnIndirection[#this]                                                                            : &:r1796_6, ~m?
# 1796|     v1796_20(void)                                           = ReturnVoid                                                                                          : 
# 1796|     v1796_21(void)                                           = AliasedUse                                                                                          : ~m?
# 1796|     v1796_22(void)                                           = ExitFunction                                                                                        : 

# 1799| int implicit_copy_constructor_test(CopyConstructorTestNonVirtualClass const&, CopyConstructorTestVirtualClass const&)
# 1799|   Block 0
# 1799|     v1799_1(void)                                        = EnterFunction                                       : 
# 1799|     mu1799_2(unknown)                                    = AliasedDefinition                                   : 
# 1799|     mu1799_3(unknown)                                    = InitializeNonLocal                                  : 
# 1800|     r1800_1(glval<CopyConstructorTestNonVirtualClass &>) = VariableAddress[x]                                  : 
# 1800|     mu1800_2(CopyConstructorTestNonVirtualClass &)       = InitializeParameter[x]                              : &:r1800_1
# 1800|     r1800_3(CopyConstructorTestNonVirtualClass &)        = Load[x]                                             : &:r1800_1, ~m?
# 1800|     mu1800_4(unknown)                                    = InitializeIndirection[x]                            : &:r1800_3
# 1801|     r1801_1(glval<CopyConstructorTestVirtualClass &>)    = VariableAddress[y]                                  : 
# 1801|     mu1801_2(CopyConstructorTestVirtualClass &)          = InitializeParameter[y]                              : &:r1801_1
# 1801|     r1801_3(CopyConstructorTestVirtualClass &)           = Load[y]                                             : &:r1801_1, ~m?
# 1801|     mu1801_4(unknown)                                    = InitializeIndirection[y]                            : &:r1801_3
# 1802|     r1802_1(glval<CopyConstructorTestNonVirtualClass>)   = VariableAddress[cx]                                 : 
# 1802|     mu1802_2(CopyConstructorTestNonVirtualClass)         = Uninitialized[cx]                                   : &:r1802_1
# 1802|     r1802_3(glval<unknown>)                              = FunctionAddress[CopyConstructorTestNonVirtualClass] : 
# 1802|     r1802_4(glval<CopyConstructorTestNonVirtualClass &>) = VariableAddress[x]                                  : 
# 1802|     r1802_5(CopyConstructorTestNonVirtualClass &)        = Load[x]                                             : &:r1802_4, ~m?
# 1802|     r1802_6(glval<CopyConstructorTestNonVirtualClass>)   = CopyValue                                           : r1802_5
# 1802|     r1802_7(CopyConstructorTestNonVirtualClass &)        = CopyValue                                           : r1802_6
# 1802|     v1802_8(void)                                        = Call[CopyConstructorTestNonVirtualClass]            : func:r1802_3, this:r1802_1, 0:r1802_7
# 1802|     mu1802_9(unknown)                                    = ^CallSideEffect                                     : ~m?
# 1802|     v1802_10(void)                                       = ^BufferReadSideEffect[0]                            : &:r1802_7, ~m?
# 1802|     mu1802_11(CopyConstructorTestNonVirtualClass)        = ^IndirectMayWriteSideEffect[-1]                     : &:r1802_1
# 1803|     r1803_1(glval<CopyConstructorTestVirtualClass>)      = VariableAddress[cy]                                 : 
# 1803|     mu1803_2(CopyConstructorTestVirtualClass)            = Uninitialized[cy]                                   : &:r1803_1
# 1803|     r1803_3(glval<unknown>)                              = FunctionAddress[CopyConstructorTestVirtualClass]    : 
# 1803|     r1803_4(glval<CopyConstructorTestVirtualClass &>)    = VariableAddress[y]                                  : 
# 1803|     r1803_5(CopyConstructorTestVirtualClass &)           = Load[y]                                             : &:r1803_4, ~m?
# 1803|     r1803_6(glval<CopyConstructorTestVirtualClass>)      = CopyValue                                           : r1803_5
# 1803|     r1803_7(CopyConstructorTestVirtualClass &)           = CopyValue                                           : r1803_6
# 1803|     v1803_8(void)                                        = Call[CopyConstructorTestVirtualClass]               : func:r1803_3, this:r1803_1, 0:r1803_7
# 1803|     mu1803_9(unknown)                                    = ^CallSideEffect                                     : ~m?
# 1803|     v1803_10(void)                                       = ^BufferReadSideEffect[0]                            : &:r1803_7, ~m?
# 1803|     mu1803_11(CopyConstructorTestVirtualClass)           = ^IndirectMayWriteSideEffect[-1]                     : &:r1803_1
# 1804|     r1804_1(glval<int>)                                  = VariableAddress[#return]                            : 
# 1804|     mu1804_2(int)                                        = Uninitialized[#return]                              : &:r1804_1
# 1800|     v1800_5(void)                                        = ReturnIndirection[x]                                : &:r1800_3, ~m?
# 1801|     v1801_5(void)                                        = ReturnIndirection[y]                                : &:r1801_3, ~m?
# 1799|     r1799_4(glval<int>)                                  = VariableAddress[#return]                            : 
# 1799|     v1799_5(void)                                        = ReturnValue                                         : &:r1799_4, ~m?
# 1799|     v1799_6(void)                                        = AliasedUse                                          : ~m?
# 1799|     v1799_7(void)                                        = ExitFunction                                        : 

# 1806| void if_initialization(int)
# 1806|   Block 0
# 1806|     v1806_1(void)       = EnterFunction          : 
# 1806|     mu1806_2(unknown)   = AliasedDefinition      : 
# 1806|     mu1806_3(unknown)   = InitializeNonLocal     : 
# 1806|     r1806_4(glval<int>) = VariableAddress[x]     : 
# 1806|     mu1806_5(int)       = InitializeParameter[x] : &:r1806_4
# 1807|     r1807_1(glval<int>) = VariableAddress[y]     : 
# 1807|     r1807_2(glval<int>) = VariableAddress[x]     : 
# 1807|     r1807_3(int)        = Load[x]                : &:r1807_2, ~m?
# 1807|     mu1807_4(int)       = Store[y]               : &:r1807_1, r1807_3
# 1807|     r1807_5(glval<int>) = VariableAddress[x]     : 
# 1807|     r1807_6(int)        = Load[x]                : &:r1807_5, ~m?
# 1807|     r1807_7(int)        = Constant[1]            : 
# 1807|     r1807_8(int)        = Add                    : r1807_6, r1807_7
# 1807|     r1807_9(int)        = Constant[0]            : 
# 1807|     r1807_10(bool)      = CompareNE              : r1807_8, r1807_9
# 1807|     v1807_11(void)      = ConditionalBranch      : r1807_10
#-----|   False -> Block 2
#-----|   True -> Block 1

# 1808|   Block 1
# 1808|     r1808_1(glval<int>) = VariableAddress[x] : 
# 1808|     r1808_2(int)        = Load[x]            : &:r1808_1, ~m?
# 1808|     r1808_3(glval<int>) = VariableAddress[y] : 
# 1808|     r1808_4(int)        = Load[y]            : &:r1808_3, ~m?
# 1808|     r1808_5(int)        = Add                : r1808_2, r1808_4
# 1808|     r1808_6(glval<int>) = VariableAddress[x] : 
# 1808|     mu1808_7(int)       = Store[x]           : &:r1808_6, r1808_5
#-----|   Goto -> Block 2

# 1811|   Block 2
# 1811|     r1811_1(glval<int>) = VariableAddress[w] : 
# 1811|     mu1811_2(int)       = Uninitialized[w]   : &:r1811_1
# 1812|     r1812_1(glval<int>) = VariableAddress[x] : 
# 1812|     r1812_2(int)        = Load[x]            : &:r1812_1, ~m?
# 1812|     r1812_3(glval<int>) = VariableAddress[w] : 
# 1812|     mu1812_4(int)       = Store[w]           : &:r1812_3, r1812_2
# 1812|     r1812_5(glval<int>) = VariableAddress[x] : 
# 1812|     r1812_6(int)        = Load[x]            : &:r1812_5, ~m?
# 1812|     r1812_7(int)        = Constant[1]        : 
# 1812|     r1812_8(int)        = Add                : r1812_6, r1812_7
# 1812|     r1812_9(int)        = Constant[0]        : 
# 1812|     r1812_10(bool)      = CompareNE          : r1812_8, r1812_9
# 1812|     v1812_11(void)      = ConditionalBranch  : r1812_10
#-----|   False -> Block 4
#-----|   True -> Block 3

# 1813|   Block 3
# 1813|     r1813_1(glval<int>) = VariableAddress[x] : 
# 1813|     r1813_2(int)        = Load[x]            : &:r1813_1, ~m?
# 1813|     r1813_3(glval<int>) = VariableAddress[w] : 
# 1813|     r1813_4(int)        = Load[w]            : &:r1813_3, ~m?
# 1813|     r1813_5(int)        = Add                : r1813_2, r1813_4
# 1813|     r1813_6(glval<int>) = VariableAddress[x] : 
# 1813|     mu1813_7(int)       = Store[x]           : &:r1813_6, r1813_5
#-----|   Goto -> Block 4

# 1816|   Block 4
# 1816|     r1816_1(glval<int>) = VariableAddress[x]  : 
# 1816|     r1816_2(int)        = Load[x]             : &:r1816_1, ~m?
# 1816|     r1816_3(glval<int>) = VariableAddress[w]  : 
# 1816|     mu1816_4(int)       = Store[w]            : &:r1816_3, r1816_2
# 1816|     r1816_5(glval<int>) = VariableAddress[w2] : 
# 1816|     r1816_6(glval<int>) = VariableAddress[w]  : 
# 1816|     r1816_7(int)        = Load[w]             : &:r1816_6, ~m?
# 1816|     mu1816_8(int)       = Store[w2]           : &:r1816_5, r1816_7
# 1816|     r1816_9(glval<int>) = VariableAddress[w2] : 
# 1816|     r1816_10(int)       = Load[w2]            : &:r1816_9, ~m?
# 1816|     r1816_11(int)       = Constant[0]         : 
# 1816|     r1816_12(bool)      = CompareNE           : r1816_10, r1816_11
# 1816|     r1816_13(bool)      = CopyValue           : r1816_12
# 1816|     v1816_14(void)      = ConditionalBranch   : r1816_13
#-----|   False -> Block 6
#-----|   True -> Block 5

# 1817|   Block 5
# 1817|     r1817_1(glval<int>) = VariableAddress[x] : 
# 1817|     r1817_2(int)        = Load[x]            : &:r1817_1, ~m?
# 1817|     r1817_3(glval<int>) = VariableAddress[w] : 
# 1817|     r1817_4(int)        = Load[w]            : &:r1817_3, ~m?
# 1817|     r1817_5(int)        = Add                : r1817_2, r1817_4
# 1817|     r1817_6(glval<int>) = VariableAddress[x] : 
# 1817|     mu1817_7(int)       = Store[x]           : &:r1817_6, r1817_5
#-----|   Goto -> Block 6

# 1820|   Block 6
# 1820|     r1820_1(glval<int>) = VariableAddress[v]  : 
# 1820|     r1820_2(glval<int>) = VariableAddress[x]  : 
# 1820|     r1820_3(int)        = Load[x]             : &:r1820_2, ~m?
# 1820|     mu1820_4(int)       = Store[v]            : &:r1820_1, r1820_3
# 1820|     r1820_5(glval<int>) = VariableAddress[v2] : 
# 1820|     r1820_6(glval<int>) = VariableAddress[v]  : 
# 1820|     r1820_7(int)        = Load[v]             : &:r1820_6, ~m?
# 1820|     mu1820_8(int)       = Store[v2]           : &:r1820_5, r1820_7
# 1820|     r1820_9(glval<int>) = VariableAddress[v2] : 
# 1820|     r1820_10(int)       = Load[v2]            : &:r1820_9, ~m?
# 1820|     r1820_11(int)       = Constant[0]         : 
# 1820|     r1820_12(bool)      = CompareNE           : r1820_10, r1820_11
# 1820|     r1820_13(bool)      = CopyValue           : r1820_12
# 1820|     v1820_14(void)      = ConditionalBranch   : r1820_13
#-----|   False -> Block 8
#-----|   True -> Block 7

# 1821|   Block 7
# 1821|     r1821_1(glval<int>) = VariableAddress[x] : 
# 1821|     r1821_2(int)        = Load[x]            : &:r1821_1, ~m?
# 1821|     r1821_3(glval<int>) = VariableAddress[v] : 
# 1821|     r1821_4(int)        = Load[v]            : &:r1821_3, ~m?
# 1821|     r1821_5(int)        = Add                : r1821_2, r1821_4
# 1821|     r1821_6(glval<int>) = VariableAddress[x] : 
# 1821|     mu1821_7(int)       = Store[x]           : &:r1821_6, r1821_5
#-----|   Goto -> Block 8

# 1824|   Block 8
# 1824|     r1824_1(glval<int>) = VariableAddress[z] : 
# 1824|     r1824_2(glval<int>) = VariableAddress[x] : 
# 1824|     r1824_3(int)        = Load[x]            : &:r1824_2, ~m?
# 1824|     mu1824_4(int)       = Store[z]           : &:r1824_1, r1824_3
# 1825|     r1825_1(glval<int>) = VariableAddress[z] : 
# 1825|     r1825_2(int)        = Load[z]            : &:r1825_1, ~m?
# 1825|     r1825_3(int)        = Constant[0]        : 
# 1825|     r1825_4(bool)       = CompareNE          : r1825_2, r1825_3
# 1825|     v1825_5(void)       = ConditionalBranch  : r1825_4
#-----|   False -> Block 10
#-----|   True -> Block 9

# 1826|   Block 9
# 1826|     r1826_1(glval<int>) = VariableAddress[x] : 
# 1826|     r1826_2(int)        = Load[x]            : &:r1826_1, ~m?
# 1826|     r1826_3(glval<int>) = VariableAddress[z] : 
# 1826|     r1826_4(int)        = Load[z]            : &:r1826_3, ~m?
# 1826|     r1826_5(int)        = Add                : r1826_2, r1826_4
# 1826|     r1826_6(glval<int>) = VariableAddress[x] : 
# 1826|     mu1826_7(int)       = Store[x]           : &:r1826_6, r1826_5
#-----|   Goto -> Block 10

# 1829|   Block 10
# 1829|     r1829_1(glval<int>) = VariableAddress[z2] : 
# 1829|     r1829_2(glval<int>) = VariableAddress[z]  : 
# 1829|     r1829_3(int)        = Load[z]             : &:r1829_2, ~m?
# 1829|     mu1829_4(int)       = Store[z2]           : &:r1829_1, r1829_3
# 1829|     r1829_5(glval<int>) = VariableAddress[z2] : 
# 1829|     r1829_6(int)        = Load[z2]            : &:r1829_5, ~m?
# 1829|     r1829_7(int)        = Constant[0]         : 
# 1829|     r1829_8(bool)       = CompareNE           : r1829_6, r1829_7
# 1829|     r1829_9(bool)       = CopyValue           : r1829_8
# 1829|     v1829_10(void)      = ConditionalBranch   : r1829_9
#-----|   False -> Block 12
#-----|   True -> Block 11

# 1830|   Block 11
# 1830|     r1830_1(glval<int>) = VariableAddress[z2] : 
# 1830|     r1830_2(int)        = Load[z2]            : &:r1830_1, ~m?
# 1830|     r1830_3(glval<int>) = VariableAddress[x]  : 
# 1830|     r1830_4(int)        = Load[x]             : &:r1830_3, ~m?
# 1830|     r1830_5(int)        = Add                 : r1830_4, r1830_2
# 1830|     mu1830_6(int)       = Store[x]            : &:r1830_3, r1830_5
#-----|   Goto -> Block 12

# 1832|   Block 12
# 1832|     v1832_1(void) = NoOp         : 
# 1806|     v1806_6(void) = ReturnVoid   : 
# 1806|     v1806_7(void) = AliasedUse   : ~m?
# 1806|     v1806_8(void) = ExitFunction : 

# 1834| void switch_initialization(int)
# 1834|   Block 0
# 1834|     v1834_1(void)       = EnterFunction          : 
# 1834|     mu1834_2(unknown)   = AliasedDefinition      : 
# 1834|     mu1834_3(unknown)   = InitializeNonLocal     : 
# 1834|     r1834_4(glval<int>) = VariableAddress[x]     : 
# 1834|     mu1834_5(int)       = InitializeParameter[x] : &:r1834_4
# 1835|     r1835_1(glval<int>) = VariableAddress[y]     : 
# 1835|     r1835_2(glval<int>) = VariableAddress[x]     : 
# 1835|     r1835_3(int)        = Load[x]                : &:r1835_2, ~m?
# 1835|     mu1835_4(int)       = Store[y]               : &:r1835_1, r1835_3
# 1835|     r1835_5(glval<int>) = VariableAddress[x]     : 
# 1835|     r1835_6(int)        = Load[x]                : &:r1835_5, ~m?
# 1835|     r1835_7(int)        = Constant[1]            : 
# 1835|     r1835_8(int)        = Add                    : r1835_6, r1835_7
# 1835|     v1835_9(void)       = Switch                 : r1835_8
#-----|   Default -> Block 1

# 1836|   Block 1
# 1836|     v1836_1(void)       = NoOp               : 
# 1837|     r1837_1(glval<int>) = VariableAddress[x] : 
# 1837|     r1837_2(int)        = Load[x]            : &:r1837_1, ~m?
# 1837|     r1837_3(glval<int>) = VariableAddress[y] : 
# 1837|     r1837_4(int)        = Load[y]            : &:r1837_3, ~m?
# 1837|     r1837_5(int)        = Add                : r1837_2, r1837_4
# 1837|     r1837_6(glval<int>) = VariableAddress[x] : 
# 1837|     mu1837_7(int)       = Store[x]           : &:r1837_6, r1837_5
# 1840|     r1840_1(glval<int>) = VariableAddress[w] : 
# 1840|     mu1840_2(int)       = Uninitialized[w]   : &:r1840_1
# 1841|     r1841_1(glval<int>) = VariableAddress[x] : 
# 1841|     r1841_2(int)        = Load[x]            : &:r1841_1, ~m?
# 1841|     r1841_3(glval<int>) = VariableAddress[w] : 
# 1841|     mu1841_4(int)       = Store[w]           : &:r1841_3, r1841_2
# 1841|     r1841_5(glval<int>) = VariableAddress[x] : 
# 1841|     r1841_6(int)        = Load[x]            : &:r1841_5, ~m?
# 1841|     r1841_7(int)        = Constant[1]        : 
# 1841|     r1841_8(int)        = Add                : r1841_6, r1841_7
# 1841|     v1841_9(void)       = Switch             : r1841_8
#-----|   Default -> Block 2

# 1842|   Block 2
# 1842|     v1842_1(void)       = NoOp                : 
# 1843|     r1843_1(glval<int>) = VariableAddress[x]  : 
# 1843|     r1843_2(int)        = Load[x]             : &:r1843_1, ~m?
# 1843|     r1843_3(glval<int>) = VariableAddress[w]  : 
# 1843|     r1843_4(int)        = Load[w]             : &:r1843_3, ~m?
# 1843|     r1843_5(int)        = Add                 : r1843_2, r1843_4
# 1843|     r1843_6(glval<int>) = VariableAddress[x]  : 
# 1843|     mu1843_7(int)       = Store[x]            : &:r1843_6, r1843_5
# 1846|     r1846_1(glval<int>) = VariableAddress[x]  : 
# 1846|     r1846_2(int)        = Load[x]             : &:r1846_1, ~m?
# 1846|     r1846_3(glval<int>) = VariableAddress[w]  : 
# 1846|     mu1846_4(int)       = Store[w]            : &:r1846_3, r1846_2
# 1846|     r1846_5(glval<int>) = VariableAddress[w2] : 
# 1846|     r1846_6(glval<int>) = VariableAddress[w]  : 
# 1846|     r1846_7(int)        = Load[w]             : &:r1846_6, ~m?
# 1846|     mu1846_8(int)       = Store[w2]           : &:r1846_5, r1846_7
# 1846|     r1846_9(glval<int>) = VariableAddress[w2] : 
# 1846|     r1846_10(int)       = Load[w2]            : &:r1846_9, ~m?
# 1846|     r1846_11(int)       = CopyValue           : r1846_10
# 1846|     v1846_12(void)      = Switch              : r1846_11
#-----|   Default -> Block 3

# 1847|   Block 3
# 1847|     v1847_1(void)       = NoOp                : 
# 1848|     r1848_1(glval<int>) = VariableAddress[x]  : 
# 1848|     r1848_2(int)        = Load[x]             : &:r1848_1, ~m?
# 1848|     r1848_3(glval<int>) = VariableAddress[w]  : 
# 1848|     r1848_4(int)        = Load[w]             : &:r1848_3, ~m?
# 1848|     r1848_5(int)        = Add                 : r1848_2, r1848_4
# 1848|     r1848_6(glval<int>) = VariableAddress[x]  : 
# 1848|     mu1848_7(int)       = Store[x]            : &:r1848_6, r1848_5
# 1851|     r1851_1(glval<int>) = VariableAddress[v]  : 
# 1851|     r1851_2(glval<int>) = VariableAddress[x]  : 
# 1851|     r1851_3(int)        = Load[x]             : &:r1851_2, ~m?
# 1851|     mu1851_4(int)       = Store[v]            : &:r1851_1, r1851_3
# 1851|     r1851_5(glval<int>) = VariableAddress[v2] : 
# 1851|     r1851_6(glval<int>) = VariableAddress[v]  : 
# 1851|     r1851_7(int)        = Load[v]             : &:r1851_6, ~m?
# 1851|     mu1851_8(int)       = Store[v2]           : &:r1851_5, r1851_7
# 1851|     r1851_9(glval<int>) = VariableAddress[v2] : 
# 1851|     r1851_10(int)       = Load[v2]            : &:r1851_9, ~m?
# 1851|     r1851_11(int)       = CopyValue           : r1851_10
# 1851|     v1851_12(void)      = Switch              : r1851_11
#-----|   Default -> Block 4

# 1852|   Block 4
# 1852|     v1852_1(void)       = NoOp               : 
# 1853|     r1853_1(glval<int>) = VariableAddress[x] : 
# 1853|     r1853_2(int)        = Load[x]            : &:r1853_1, ~m?
# 1853|     r1853_3(glval<int>) = VariableAddress[v] : 
# 1853|     r1853_4(int)        = Load[v]            : &:r1853_3, ~m?
# 1853|     r1853_5(int)        = Add                : r1853_2, r1853_4
# 1853|     r1853_6(glval<int>) = VariableAddress[x] : 
# 1853|     mu1853_7(int)       = Store[x]           : &:r1853_6, r1853_5
# 1856|     r1856_1(glval<int>) = VariableAddress[z] : 
# 1856|     r1856_2(glval<int>) = VariableAddress[x] : 
# 1856|     r1856_3(int)        = Load[x]            : &:r1856_2, ~m?
# 1856|     mu1856_4(int)       = Store[z]           : &:r1856_1, r1856_3
# 1857|     r1857_1(glval<int>) = VariableAddress[z] : 
# 1857|     r1857_2(int)        = Load[z]            : &:r1857_1, ~m?
# 1857|     v1857_3(void)       = Switch             : r1857_2
#-----|   Default -> Block 5

# 1858|   Block 5
# 1858|     v1858_1(void)       = NoOp                : 
# 1859|     r1859_1(glval<int>) = VariableAddress[x]  : 
# 1859|     r1859_2(int)        = Load[x]             : &:r1859_1, ~m?
# 1859|     r1859_3(glval<int>) = VariableAddress[z]  : 
# 1859|     r1859_4(int)        = Load[z]             : &:r1859_3, ~m?
# 1859|     r1859_5(int)        = Add                 : r1859_2, r1859_4
# 1859|     r1859_6(glval<int>) = VariableAddress[x]  : 
# 1859|     mu1859_7(int)       = Store[x]            : &:r1859_6, r1859_5
# 1862|     r1862_1(glval<int>) = VariableAddress[z2] : 
# 1862|     r1862_2(glval<int>) = VariableAddress[z]  : 
# 1862|     r1862_3(int)        = Load[z]             : &:r1862_2, ~m?
# 1862|     mu1862_4(int)       = Store[z2]           : &:r1862_1, r1862_3
# 1862|     r1862_5(glval<int>) = VariableAddress[z2] : 
# 1862|     r1862_6(int)        = Load[z2]            : &:r1862_5, ~m?
# 1862|     r1862_7(int)        = CopyValue           : r1862_6
# 1862|     v1862_8(void)       = Switch              : r1862_7
#-----|   Default -> Block 6

# 1863|   Block 6
# 1863|     v1863_1(void)       = NoOp                : 
# 1864|     r1864_1(glval<int>) = VariableAddress[z2] : 
# 1864|     r1864_2(int)        = Load[z2]            : &:r1864_1, ~m?
# 1864|     r1864_3(glval<int>) = VariableAddress[x]  : 
# 1864|     r1864_4(int)        = Load[x]             : &:r1864_3, ~m?
# 1864|     r1864_5(int)        = Add                 : r1864_4, r1864_2
# 1864|     mu1864_6(int)       = Store[x]            : &:r1864_3, r1864_5
# 1866|     v1866_1(void)       = NoOp                : 
# 1834|     v1834_6(void)       = ReturnVoid          : 
# 1834|     v1834_7(void)       = AliasedUse          : ~m?
# 1834|     v1834_8(void)       = ExitFunction        : 

# 1870| int global_2
# 1870|   Block 0
# 1870|     v1870_1(void)       = EnterFunction             : 
# 1870|     mu1870_2(unknown)   = AliasedDefinition         : 
# 1870|     r1870_3(glval<int>) = VariableAddress[global_2] : 
# 1870|     r1870_4(int)        = Constant[1]               : 
# 1870|     mu1870_5(int)       = Store[global_2]           : &:r1870_3, r1870_4
# 1870|     v1870_6(void)       = ReturnVoid                : 
# 1870|     v1870_7(void)       = AliasedUse                : ~m?
# 1870|     v1870_8(void)       = ExitFunction              : 

# 1874| constructor_only global_4
# 1874|   Block 0
# 1874|     v1874_1(void)                    = EnterFunction                     : 
# 1874|     mu1874_2(unknown)                = AliasedDefinition                 : 
# 1874|     r1874_3(glval<constructor_only>) = VariableAddress[global_4]         : 
# 1874|     r1874_4(glval<unknown>)          = FunctionAddress[constructor_only] : 
# 1874|     r1874_5(int)                     = Constant[1]                       : 
# 1874|     v1874_6(void)                    = Call[constructor_only]            : func:r1874_4, this:r1874_3, 0:r1874_5
# 1874|     mu1874_7(unknown)                = ^CallSideEffect                   : ~m?
# 1874|     mu1874_8(constructor_only)       = ^IndirectMayWriteSideEffect[-1]   : &:r1874_3
# 1874|     v1874_9(void)                    = ReturnVoid                        : 
# 1874|     v1874_10(void)                   = AliasedUse                        : ~m?
# 1874|     v1874_11(void)                   = ExitFunction                      : 

# 1876| constructor_only global_5
# 1876|   Block 0
# 1876|     v1876_1(void)                    = EnterFunction                     : 
# 1876|     mu1876_2(unknown)                = AliasedDefinition                 : 
# 1876|     r1876_3(glval<constructor_only>) = VariableAddress[global_5]         : 
# 1876|     r1876_4(glval<unknown>)          = FunctionAddress[constructor_only] : 
# 1876|     r1876_5(int)                     = Constant[2]                       : 
# 1876|     v1876_6(void)                    = Call[constructor_only]            : func:r1876_4, this:r1876_3, 0:r1876_5
# 1876|     mu1876_7(unknown)                = ^CallSideEffect                   : ~m?
# 1876|     mu1876_8(constructor_only)       = ^IndirectMayWriteSideEffect[-1]   : &:r1876_3
# 1876|     v1876_9(void)                    = ReturnVoid                        : 
# 1876|     v1876_10(void)                   = AliasedUse                        : ~m?
# 1876|     v1876_11(void)                   = ExitFunction                      : 

# 1878| char* global_string
# 1878|   Block 0
# 1878|     v1878_1(void)            = EnterFunction                   : 
# 1878|     mu1878_2(unknown)        = AliasedDefinition               : 
# 1878|     r1878_3(glval<char *>)   = VariableAddress[global_string]  : 
# 1878|     r1878_4(glval<char[14]>) = StringConstant["global string"] : 
# 1878|     r1878_5(char *)          = Convert                         : r1878_4
# 1878|     r1878_6(char *)          = Convert                         : r1878_5
# 1878|     mu1878_7(char *)         = Store[global_string]            : &:r1878_3, r1878_6
# 1878|     v1878_8(void)            = ReturnVoid                      : 
# 1878|     v1878_9(void)            = AliasedUse                      : ~m?
# 1878|     v1878_10(void)           = ExitFunction                    : 

# 1880| int global_6
# 1880|   Block 0
# 1880|     v1880_1(void)       = EnterFunction             : 
# 1880|     mu1880_2(unknown)   = AliasedDefinition         : 
# 1880|     r1880_3(glval<int>) = VariableAddress[global_6] : 
# 1880|     r1880_4(glval<int>) = VariableAddress[global_2] : 
# 1880|     r1880_5(int)        = Load[global_2]            : &:r1880_4, ~m?
# 1880|     mu1880_6(int)       = Store[global_6]           : &:r1880_3, r1880_5
# 1880|     v1880_7(void)       = ReturnVoid                : 
# 1880|     v1880_8(void)       = AliasedUse                : ~m?
# 1880|     v1880_9(void)       = ExitFunction              : 

# 1883| block_assignment::A& block_assignment::A::operator=(block_assignment::A&&)
# 1883|   Block 0
# 1883|     v1883_1(void)                   = EnterFunction                                : 
# 1883|     mu1883_2(unknown)               = AliasedDefinition                            : 
# 1883|     mu1883_3(unknown)               = InitializeNonLocal                           : 
# 1883|     r1883_4(glval<unknown>)         = VariableAddress[#this]                       : 
# 1883|     mu1883_5(glval<A>)              = InitializeParameter[#this]                   : &:r1883_4
# 1883|     r1883_6(glval<A>)               = Load[#this]                                  : &:r1883_4, ~m?
# 1883|     mu1883_7(A)                     = InitializeIndirection[#this]                 : &:r1883_6
#-----|     r0_1(glval<A &&>)               = VariableAddress[(unnamed parameter 0)]       : 
#-----|     mu0_2(A &&)                     = InitializeParameter[(unnamed parameter 0)]   : &:r0_1
#-----|     r0_3(A &&)                      = Load[(unnamed parameter 0)]                  : &:r0_1, ~m?
#-----|     mu0_4(unknown)                  = InitializeIndirection[(unnamed parameter 0)] : &:r0_3
#-----|     r0_5(glval<unknown>)            = VariableAddress[#this]                       : 
#-----|     r0_6(A *)                       = Load[#this]                                  : &:r0_5, ~m?
#-----|     r0_7(glval<enum <unnamed>[1]>)  = FieldAddress[e]                              : r0_6
#-----|     r0_8(glval<A &&>)               = VariableAddress[(unnamed parameter 0)]       : 
#-----|     r0_9(A &&)                      = Load[(unnamed parameter 0)]                  : &:r0_8, ~m?
#-----|     r0_10(glval<A>)                 = CopyValue                                    : r0_9
#-----|     r0_11(glval<enum <unnamed>[1]>) = FieldAddress[e]                              : r0_10
#-----|     r0_12(enum <unnamed>[1])        = Load[?]                                      : &:r0_11, ~m?
#-----|     mu0_13(enum <unnamed>[1])       = Store[?]                                     : &:r0_7, r0_12
#-----|     r0_14(glval<A &>)               = VariableAddress[#return]                     : 
#-----|     r0_15(glval<unknown>)           = VariableAddress[#this]                       : 
#-----|     r0_16(A *)                      = Load[#this]                                  : &:r0_15, ~m?
#-----|     r0_17(glval<A>)                 = CopyValue                                    : r0_16
#-----|     r0_18(A &)                      = CopyValue                                    : r0_17
#-----|     mu0_19(A &)                     = Store[#return]                               : &:r0_14, r0_18
# 1883|     v1883_8(void)                   = ReturnIndirection[#this]                     : &:r1883_6, ~m?
#-----|     v0_20(void)                     = ReturnIndirection[(unnamed parameter 0)]     : &:r0_3, ~m?
# 1883|     r1883_9(glval<A &>)             = VariableAddress[#return]                     : 
# 1883|     v1883_10(void)                  = ReturnValue                                  : &:r1883_9, ~m?
# 1883|     v1883_11(void)                  = AliasedUse                                   : ~m?
# 1883|     v1883_12(void)                  = ExitFunction                                 : 

# 1888| block_assignment::B& block_assignment::B::operator=(block_assignment::B&&)
# 1888|   Block 0
# 1888|     v1888_1(void)            = EnterFunction                                : 
# 1888|     mu1888_2(unknown)        = AliasedDefinition                            : 
# 1888|     mu1888_3(unknown)        = InitializeNonLocal                           : 
# 1888|     r1888_4(glval<unknown>)  = VariableAddress[#this]                       : 
# 1888|     mu1888_5(glval<B>)       = InitializeParameter[#this]                   : &:r1888_4
# 1888|     r1888_6(glval<B>)        = Load[#this]                                  : &:r1888_4, ~m?
# 1888|     mu1888_7(B)              = InitializeIndirection[#this]                 : &:r1888_6
#-----|     r0_1(glval<B &&>)        = VariableAddress[(unnamed parameter 0)]       : 
#-----|     mu0_2(B &&)              = InitializeParameter[(unnamed parameter 0)]   : &:r0_1
#-----|     r0_3(B &&)               = Load[(unnamed parameter 0)]                  : &:r0_1, ~m?
#-----|     mu0_4(unknown)           = InitializeIndirection[(unnamed parameter 0)] : &:r0_3
# 1888|     r1888_8(glval<unknown>)  = VariableAddress[#this]                       : 
# 1888|     r1888_9(B *)             = Load[#this]                                  : &:r1888_8, ~m?
#-----|     r0_5(A *)                = ConvertToNonVirtualBase[B : A]               : r1888_9
# 1888|     r1888_10(glval<unknown>) = FunctionAddress[operator=]                   : 
# 1888|     r1888_11(glval<B &&>)    = VariableAddress[(unnamed parameter 0)]       : 
# 1888|     r1888_12(B &&)           = Load[(unnamed parameter 0)]                  : &:r1888_11, ~m?
#-----|     r0_6(glval<B>)           = CopyValue                                    : r1888_12
# 1888|     r1888_13(B *)            = CopyValue                                    : r0_6
#-----|     r0_7(A *)                = ConvertToNonVirtualBase[B : A]               : r1888_13
# 1888|     r1888_14(glval<A>)       = CopyValue                                    : r0_7
#-----|     r0_8(A &)                = CopyValue                                    : r1888_14
# 1888|     r1888_15(A &)            = Call[operator=]                              : func:r1888_10, this:r0_5, 0:r0_8
# 1888|     mu1888_16(unknown)       = ^CallSideEffect                              : ~m?
#-----|     v0_9(void)               = ^IndirectReadSideEffect[-1]                  : &:r0_5, ~m?
#-----|     v0_10(void)              = ^BufferReadSideEffect[0]                     : &:r0_8, ~m?
#-----|     mu0_11(A)                = ^IndirectMayWriteSideEffect[-1]              : &:r0_5
#-----|     mu0_12(unknown)          = ^BufferMayWriteSideEffect[0]                 : &:r0_8
#-----|     r0_13(glval<A>)          = CopyValue                                    : r1888_15
#-----|     r0_14(glval<B &>)        = VariableAddress[#return]                     : 
#-----|     r0_15(glval<unknown>)    = VariableAddress[#this]                       : 
#-----|     r0_16(B *)               = Load[#this]                                  : &:r0_15, ~m?
#-----|     r0_17(glval<B>)          = CopyValue                                    : r0_16
#-----|     r0_18(B &)               = CopyValue                                    : r0_17
#-----|     mu0_19(B &)              = Store[#return]                               : &:r0_14, r0_18
# 1888|     v1888_17(void)           = ReturnIndirection[#this]                     : &:r1888_6, ~m?
#-----|     v0_20(void)              = ReturnIndirection[(unnamed parameter 0)]     : &:r0_3, ~m?
# 1888|     r1888_18(glval<B &>)     = VariableAddress[#return]                     : 
# 1888|     v1888_19(void)           = ReturnValue                                  : &:r1888_18, ~m?
# 1888|     v1888_20(void)           = AliasedUse                                   : ~m?
# 1888|     v1888_21(void)           = ExitFunction                                 : 

# 1892| void block_assignment::foo()
# 1892|   Block 0
# 1892|     v1892_1(void)           = EnterFunction                   : 
# 1892|     mu1892_2(unknown)       = AliasedDefinition               : 
# 1892|     mu1892_3(unknown)       = InitializeNonLocal              : 
# 1893|     r1893_1(glval<B>)       = VariableAddress[v]              : 
# 1893|     mu1893_2(B)             = Uninitialized[v]                : &:r1893_1
# 1893|     r1893_3(glval<unknown>) = FunctionAddress[B]              : 
# 1893|     r1893_4(A *)            = Constant[0]                     : 
# 1893|     v1893_5(void)           = Call[B]                         : func:r1893_3, this:r1893_1, 0:r1893_4
# 1893|     mu1893_6(unknown)       = ^CallSideEffect                 : ~m?
# 1893|     v1893_7(void)           = ^BufferReadSideEffect[0]        : &:r1893_4, ~m?
# 1893|     mu1893_8(B)             = ^IndirectMayWriteSideEffect[-1] : &:r1893_1
# 1893|     mu1893_9(unknown)       = ^BufferMayWriteSideEffect[0]    : &:r1893_4
# 1894|     r1894_1(glval<B>)       = VariableAddress[v]              : 
# 1894|     r1894_2(glval<unknown>) = FunctionAddress[operator=]      : 
# 1894|     r1894_3(glval<B>)       = VariableAddress[#temp1894:13]   : 
# 1894|     mu1894_4(B)             = Uninitialized[#temp1894:13]     : &:r1894_3
# 1894|     r1894_5(glval<unknown>) = FunctionAddress[B]              : 
# 1894|     r1894_6(A *)            = Constant[0]                     : 
# 1894|     v1894_7(void)           = Call[B]                         : func:r1894_5, this:r1894_3, 0:r1894_6
# 1894|     mu1894_8(unknown)       = ^CallSideEffect                 : ~m?
# 1894|     v1894_9(void)           = ^BufferReadSideEffect[0]        : &:r1894_6, ~m?
# 1894|     mu1894_10(B)            = ^IndirectMayWriteSideEffect[-1] : &:r1894_3
# 1894|     mu1894_11(unknown)      = ^BufferMayWriteSideEffect[0]    : &:r1894_6
# 1894|     r1894_12(B &)           = CopyValue                       : r1894_3
# 1894|     r1894_13(B &)           = Call[operator=]                 : func:r1894_2, this:r1894_1, 0:r1894_12
# 1894|     mu1894_14(unknown)      = ^CallSideEffect                 : ~m?
# 1894|     v1894_15(void)          = ^IndirectReadSideEffect[-1]     : &:r1894_1, ~m?
# 1894|     v1894_16(void)          = ^BufferReadSideEffect[0]        : &:r1894_12, ~m?
# 1894|     mu1894_17(B)            = ^IndirectMayWriteSideEffect[-1] : &:r1894_1
# 1894|     mu1894_18(unknown)      = ^BufferMayWriteSideEffect[0]    : &:r1894_12
# 1894|     r1894_19(glval<B>)      = CopyValue                       : r1894_13
# 1895|     v1895_1(void)           = NoOp                            : 
# 1892|     v1892_4(void)           = ReturnVoid                      : 
# 1892|     v1892_5(void)           = AliasedUse                      : ~m?
# 1892|     v1892_6(void)           = ExitFunction                    : 

# 1898| void magicvars()
# 1898|   Block 0
# 1898|     v1898_1(void)            = EnterFunction                        : 
# 1898|     mu1898_2(unknown)        = AliasedDefinition                    : 
# 1898|     mu1898_3(unknown)        = InitializeNonLocal                   : 
# 1899|     r1899_1(glval<char *>)   = VariableAddress[pf]                  : 
# 1899|     r1899_2(glval<char[17]>) = VariableAddress[__PRETTY_FUNCTION__] : 
# 1899|     r1899_3(char *)          = Convert                              : r1899_2
# 1899|     mu1899_4(char *)         = Store[pf]                            : &:r1899_1, r1899_3
# 1900|     r1900_1(glval<char *>)   = VariableAddress[strfunc]             : 
# 1900|     r1900_2(glval<char[10]>) = VariableAddress[__func__]            : 
# 1900|     r1900_3(char *)          = Convert                              : r1900_2
# 1900|     mu1900_4(char *)         = Store[strfunc]                       : &:r1900_1, r1900_3
# 1901|     v1901_1(void)            = NoOp                                 : 
# 1898|     v1898_4(void)            = ReturnVoid                           : 
# 1898|     v1898_5(void)            = AliasedUse                           : ~m?
# 1898|     v1898_6(void)            = ExitFunction                         : 

# 1911| void* missing_declaration_entries::Bar1<int>::missing_type_decl_entry(missing_declaration_entries::Bar1<int>::pointer)
# 1911|   Block 0
# 1911|     v1911_1(void)              = EnterFunction                : 
# 1911|     mu1911_2(unknown)          = AliasedDefinition            : 
# 1911|     mu1911_3(unknown)          = InitializeNonLocal           : 
# 1911|     r1911_4(glval<unknown>)    = VariableAddress[#this]       : 
# 1911|     mu1911_5(glval<Bar1<int>>) = InitializeParameter[#this]   : &:r1911_4
# 1911|     r1911_6(glval<Bar1<int>>)  = Load[#this]                  : &:r1911_4, ~m?
# 1911|     mu1911_7(Bar1<int>)        = InitializeIndirection[#this] : &:r1911_6
# 1911|     r1911_8(glval<S *>)        = VariableAddress[p]           : 
# 1911|     mu1911_9(S *)              = InitializeParameter[p]       : &:r1911_8
# 1911|     r1911_10(S *)              = Load[p]                      : &:r1911_8, ~m?
# 1911|     mu1911_11(unknown)         = InitializeIndirection[p]     : &:r1911_10
# 1913|     r1913_1(glval<void *>)     = VariableAddress[#return]     : 
# 1913|     r1913_2(glval<S *>)        = VariableAddress[p]           : 
# 1913|     r1913_3(S *)               = Load[p]                      : &:r1913_2, ~m?
# 1913|     r1913_4(void *)            = Convert                      : r1913_3
# 1913|     mu1913_5(void *)           = Store[#return]               : &:r1913_1, r1913_4
# 1911|     v1911_12(void)             = ReturnIndirection[#this]     : &:r1911_6, ~m?
# 1911|     v1911_13(void)             = ReturnIndirection[p]         : &:r1911_10, ~m?
# 1911|     r1911_14(glval<void *>)    = VariableAddress[#return]     : 
# 1911|     v1911_15(void)             = ReturnValue                  : &:r1911_14, ~m?
# 1911|     v1911_16(void)             = AliasedUse                   : ~m?
# 1911|     v1911_17(void)             = ExitFunction                 : 

# 1917| void missing_declaration_entries::test1()
# 1917|   Block 0
# 1917|     v1917_1(void)             = EnterFunction                            : 
# 1917|     mu1917_2(unknown)         = AliasedDefinition                        : 
# 1917|     mu1917_3(unknown)         = InitializeNonLocal                       : 
# 1918|     r1918_1(glval<Bar1<int>>) = VariableAddress[b]                       : 
# 1918|     mu1918_2(Bar1<int>)       = Uninitialized[b]                         : &:r1918_1
# 1919|     r1919_1(glval<Bar1<int>>) = VariableAddress[b]                       : 
# 1919|     r1919_2(glval<unknown>)   = FunctionAddress[missing_type_decl_entry] : 
# 1919|     r1919_3(S *)              = Constant[0]                              : 
# 1919|     r1919_4(void *)           = Call[missing_type_decl_entry]            : func:r1919_2, this:r1919_1, 0:r1919_3
# 1919|     mu1919_5(unknown)         = ^CallSideEffect                          : ~m?
# 1919|     v1919_6(void)             = ^IndirectReadSideEffect[-1]              : &:r1919_1, ~m?
# 1919|     v1919_7(void)             = ^BufferReadSideEffect[0]                 : &:r1919_3, ~m?
# 1919|     mu1919_8(Bar1<int>)       = ^IndirectMayWriteSideEffect[-1]          : &:r1919_1
# 1919|     mu1919_9(unknown)         = ^BufferMayWriteSideEffect[0]             : &:r1919_3
# 1920|     v1920_1(void)             = NoOp                                     : 
# 1917|     v1917_4(void)             = ReturnVoid                               : 
# 1917|     v1917_5(void)             = AliasedUse                               : ~m?
# 1917|     v1917_6(void)             = ExitFunction                             : 

# 1924| int missing_declaration_entries::Bar2<int>::two_missing_variable_declaration_entries()
# 1924|   Block 0
# 1924|     v1924_1(void)              = EnterFunction                : 
# 1924|     mu1924_2(unknown)          = AliasedDefinition            : 
# 1924|     mu1924_3(unknown)          = InitializeNonLocal           : 
# 1924|     r1924_4(glval<unknown>)    = VariableAddress[#this]       : 
# 1924|     mu1924_5(glval<Bar2<int>>) = InitializeParameter[#this]   : &:r1924_4
# 1924|     r1924_6(glval<Bar2<int>>)  = Load[#this]                  : &:r1924_4, ~m?
# 1924|     mu1924_7(Bar2<int>)        = InitializeIndirection[#this] : &:r1924_6
# 1925|     r1925_1(glval<int[10]>)    = VariableAddress[x]           : 
# 1925|     mu1925_2(int[10])          = Uninitialized[x]             : &:r1925_1
# 1925|     r1925_3(glval<int[10]>)    = VariableAddress[y]           : 
# 1925|     mu1925_4(int[10])          = Uninitialized[y]             : &:r1925_3
# 1926|     r1926_1(int)               = Constant[10]                 : 
# 1926|     r1926_2(glval<int[10]>)    = VariableAddress[x]           : 
# 1926|     r1926_3(int *)             = Convert                      : r1926_2
# 1926|     r1926_4(glval<int>)        = CopyValue                    : r1926_3
# 1926|     mu1926_5(int)              = Store[?]                     : &:r1926_4, r1926_1
# 1927|     r1927_1(int)               = Constant[10]                 : 
# 1927|     r1927_2(glval<int[10]>)    = VariableAddress[y]           : 
# 1927|     r1927_3(int *)             = Convert                      : r1927_2
# 1927|     r1927_4(glval<int>)        = CopyValue                    : r1927_3
# 1927|     mu1927_5(int)              = Store[?]                     : &:r1927_4, r1927_1
# 1928|     r1928_1(glval<int>)        = VariableAddress[#return]     : 
# 1928|     r1928_2(glval<int[10]>)    = VariableAddress[x]           : 
# 1928|     r1928_3(int *)             = Convert                      : r1928_2
# 1928|     r1928_4(int)               = Load[?]                      : &:r1928_3, ~m?
# 1928|     r1928_5(glval<int[10]>)    = VariableAddress[y]           : 
# 1928|     r1928_6(int *)             = Convert                      : r1928_5
# 1928|     r1928_7(int)               = Load[?]                      : &:r1928_6, ~m?
# 1928|     r1928_8(int)               = Add                          : r1928_4, r1928_7
# 1928|     mu1928_9(int)              = Store[#return]               : &:r1928_1, r1928_8
# 1924|     v1924_8(void)              = ReturnIndirection[#this]     : &:r1924_6, ~m?
# 1924|     r1924_9(glval<int>)        = VariableAddress[#return]     : 
# 1924|     v1924_10(void)             = ReturnValue                  : &:r1924_9, ~m?
# 1924|     v1924_11(void)             = AliasedUse                   : ~m?
# 1924|     v1924_12(void)             = ExitFunction                 : 

# 1932| void missing_declaration_entries::test2()
# 1932|   Block 0
# 1932|     v1932_1(void)             = EnterFunction                                             : 
# 1932|     mu1932_2(unknown)         = AliasedDefinition                                         : 
# 1932|     mu1932_3(unknown)         = InitializeNonLocal                                        : 
# 1933|     r1933_1(glval<Bar2<int>>) = VariableAddress[b]                                        : 
# 1933|     mu1933_2(Bar2<int>)       = Uninitialized[b]                                          : &:r1933_1
# 1934|     r1934_1(glval<Bar2<int>>) = VariableAddress[b]                                        : 
# 1934|     r1934_2(glval<unknown>)   = FunctionAddress[two_missing_variable_declaration_entries] : 
# 1934|     r1934_3(int)              = Call[two_missing_variable_declaration_entries]            : func:r1934_2, this:r1934_1
# 1934|     mu1934_4(unknown)         = ^CallSideEffect                                           : ~m?
# 1934|     v1934_5(void)             = ^IndirectReadSideEffect[-1]                               : &:r1934_1, ~m?
# 1934|     mu1934_6(Bar2<int>)       = ^IndirectMayWriteSideEffect[-1]                           : &:r1934_1
# 1935|     v1935_1(void)             = NoOp                                                      : 
# 1932|     v1932_4(void)             = ReturnVoid                                                : 
# 1932|     v1932_5(void)             = AliasedUse                                                : ~m?
# 1932|     v1932_6(void)             = ExitFunction                                              : 

# 1938| char global_template<char>
# 1938|   Block 0
# 1938|     v1938_1(void)        = EnterFunction                    : 
# 1938|     mu1938_2(unknown)    = AliasedDefinition                : 
# 1938|     r1938_3(glval<char>) = VariableAddress[global_template] : 
# 1938|     r1938_4(char)        = Constant[42]                     : 
# 1938|     mu1938_5(char)       = Store[global_template]           : &:r1938_3, r1938_4
# 1938|     v1938_6(void)        = ReturnVoid                       : 
# 1938|     v1938_7(void)        = AliasedUse                       : ~m?
# 1938|     v1938_8(void)        = ExitFunction                     : 

# 1938| int global_template<int>
# 1938|   Block 0
# 1938|     v1938_1(void)       = EnterFunction                    : 
# 1938|     mu1938_2(unknown)   = AliasedDefinition                : 
# 1938|     r1938_3(glval<int>) = VariableAddress[global_template] : 
# 1938|     r1938_4(int)        = Constant[42]                     : 
# 1938|     mu1938_5(int)       = Store[global_template]           : &:r1938_3, r1938_4
# 1938|     v1938_6(void)       = ReturnVoid                       : 
# 1938|     v1938_7(void)       = AliasedUse                       : ~m?
# 1938|     v1938_8(void)       = ExitFunction                     : 

# 1940| int test_global_template_int()
# 1940|   Block 0
# 1940|     v1940_1(void)        = EnterFunction                    : 
# 1940|     mu1940_2(unknown)    = AliasedDefinition                : 
# 1940|     mu1940_3(unknown)    = InitializeNonLocal               : 
# 1941|     r1941_1(glval<int>)  = VariableAddress[local_int]       : 
# 1941|     r1941_2(glval<int>)  = VariableAddress[global_template] : 
# 1941|     r1941_3(int)         = Load[global_template]            : &:r1941_2, ~m?
# 1941|     mu1941_4(int)        = Store[local_int]                 : &:r1941_1, r1941_3
# 1942|     r1942_1(glval<char>) = VariableAddress[local_char]      : 
# 1942|     r1942_2(glval<char>) = VariableAddress[global_template] : 
# 1942|     r1942_3(char)        = Load[global_template]            : &:r1942_2, ~m?
# 1942|     mu1942_4(char)       = Store[local_char]                : &:r1942_1, r1942_3
# 1943|     r1943_1(glval<int>)  = VariableAddress[#return]         : 
# 1943|     r1943_2(glval<int>)  = VariableAddress[local_int]       : 
# 1943|     r1943_3(int)         = Load[local_int]                  : &:r1943_2, ~m?
# 1943|     r1943_4(glval<char>) = VariableAddress[local_char]      : 
# 1943|     r1943_5(char)        = Load[local_char]                 : &:r1943_4, ~m?
# 1943|     r1943_6(int)         = Convert                          : r1943_5
# 1943|     r1943_7(int)         = Add                              : r1943_3, r1943_6
# 1943|     mu1943_8(int)        = Store[#return]                   : &:r1943_1, r1943_7
# 1940|     r1940_4(glval<int>)  = VariableAddress[#return]         : 
# 1940|     v1940_5(void)        = ReturnValue                      : &:r1940_4, ~m?
# 1940|     v1940_6(void)        = AliasedUse                       : ~m?
# 1940|     v1940_7(void)        = ExitFunction                     : 

# 1948| int noreturnTest(int)
# 1948|   Block 0
# 1948|     v1948_1(void)       = EnterFunction          : 
# 1948|     mu1948_2(unknown)   = AliasedDefinition      : 
# 1948|     mu1948_3(unknown)   = InitializeNonLocal     : 
# 1948|     r1948_4(glval<int>) = VariableAddress[x]     : 
# 1948|     mu1948_5(int)       = InitializeParameter[x] : &:r1948_4
# 1949|     r1949_1(glval<int>) = VariableAddress[x]     : 
# 1949|     r1949_2(int)        = Load[x]                : &:r1949_1, ~m?
# 1949|     r1949_3(int)        = Constant[10]           : 
# 1949|     r1949_4(bool)       = CompareLT              : r1949_2, r1949_3
# 1949|     v1949_5(void)       = ConditionalBranch      : r1949_4
#-----|   False -> Block 3
#-----|   True -> Block 2

# 1948|   Block 1
# 1948|     r1948_6(glval<int>) = VariableAddress[#return] : 
# 1948|     v1948_7(void)       = ReturnValue              : &:r1948_6, ~m?
# 1948|     v1948_8(void)       = AliasedUse               : ~m?
# 1948|     v1948_9(void)       = ExitFunction             : 

# 1950|   Block 2
# 1950|     r1950_1(glval<int>) = VariableAddress[#return] : 
# 1950|     r1950_2(glval<int>) = VariableAddress[x]       : 
# 1950|     r1950_3(int)        = Load[x]                  : &:r1950_2, ~m?
# 1950|     mu1950_4(int)       = Store[#return]           : &:r1950_1, r1950_3
#-----|   Goto -> Block 1

# 1952|   Block 3
# 1952|     r1952_1(glval<unknown>) = FunctionAddress[noreturnFunc] : 
# 1952|     v1952_2(void)           = Call[noreturnFunc]            : func:r1952_1
# 1952|     mu1952_3(unknown)       = ^CallSideEffect               : ~m?
# 1948|     v1948_10(void)          = Unreached                     : 

# 1954|   Block 4
# 1954|     r1954_1(glval<int>) = VariableAddress[#return] : 
# 1954|     mu1954_2(int)       = Uninitialized[#return]   : &:r1954_1
#-----|   Goto -> Block 1

# 1956| int noreturnTest2(int)
# 1956|   Block 0
# 1956|     v1956_1(void)       = EnterFunction          : 
# 1956|     mu1956_2(unknown)   = AliasedDefinition      : 
# 1956|     mu1956_3(unknown)   = InitializeNonLocal     : 
# 1956|     r1956_4(glval<int>) = VariableAddress[x]     : 
# 1956|     mu1956_5(int)       = InitializeParameter[x] : &:r1956_4
# 1957|     r1957_1(glval<int>) = VariableAddress[x]     : 
# 1957|     r1957_2(int)        = Load[x]                : &:r1957_1, ~m?
# 1957|     r1957_3(int)        = Constant[10]           : 
# 1957|     r1957_4(bool)       = CompareLT              : r1957_2, r1957_3
# 1957|     v1957_5(void)       = ConditionalBranch      : r1957_4
#-----|   False -> Block 2
#-----|   True -> Block 1

# 1958|   Block 1
# 1958|     r1958_1(glval<unknown>) = FunctionAddress[noreturnFunc] : 
# 1958|     v1958_2(void)           = Call[noreturnFunc]            : func:r1958_1
# 1958|     mu1958_3(unknown)       = ^CallSideEffect               : ~m?
# 1956|     v1956_6(void)           = Unreached                     : 

# 1960|   Block 2
# 1960|     r1960_1(glval<int>) = VariableAddress[#return] : 
# 1960|     r1960_2(glval<int>) = VariableAddress[x]       : 
# 1960|     r1960_3(int)        = Load[x]                  : &:r1960_2, ~m?
# 1960|     mu1960_4(int)       = Store[#return]           : &:r1960_1, r1960_3
# 1956|     r1956_7(glval<int>) = VariableAddress[#return] : 
# 1956|     v1956_8(void)       = ReturnValue              : &:r1956_7, ~m?
# 1956|     v1956_9(void)       = AliasedUse               : ~m?
# 1956|     v1956_10(void)      = ExitFunction             : 

# 1963| int static_function(int)
# 1963|   Block 0
# 1963|     v1963_1(void)       = EnterFunction            : 
# 1963|     mu1963_2(unknown)   = AliasedDefinition        : 
# 1963|     mu1963_3(unknown)   = InitializeNonLocal       : 
# 1963|     r1963_4(glval<int>) = VariableAddress[x]       : 
# 1963|     mu1963_5(int)       = InitializeParameter[x]   : &:r1963_4
# 1964|     r1964_1(glval<int>) = VariableAddress[#return] : 
# 1964|     r1964_2(glval<int>) = VariableAddress[x]       : 
# 1964|     r1964_3(int)        = Load[x]                  : &:r1964_2, ~m?
# 1964|     mu1964_4(int)       = Store[#return]           : &:r1964_1, r1964_3
# 1963|     r1963_6(glval<int>) = VariableAddress[#return] : 
# 1963|     v1963_7(void)       = ReturnValue              : &:r1963_6, ~m?
# 1963|     v1963_8(void)       = AliasedUse               : ~m?
# 1963|     v1963_9(void)       = ExitFunction             : 

# 1967| void test_static_functions_with_assignments()
# 1967|   Block 0
# 1967|     v1967_1(void)           = EnterFunction                         : 
# 1967|     mu1967_2(unknown)       = AliasedDefinition                     : 
# 1967|     mu1967_3(unknown)       = InitializeNonLocal                    : 
# 1968|     r1968_1(glval<C>)       = VariableAddress[c]                    : 
# 1968|     mu1968_2(C)             = Uninitialized[c]                      : &:r1968_1
# 1968|     r1968_3(glval<unknown>) = FunctionAddress[C]                    : 
# 1968|     v1968_4(void)           = Call[C]                               : func:r1968_3, this:r1968_1
# 1968|     mu1968_5(unknown)       = ^CallSideEffect                       : ~m?
# 1968|     mu1968_6(C)             = ^IndirectMayWriteSideEffect[-1]       : &:r1968_1
# 1969|     r1969_1(glval<int>)     = VariableAddress[x]                    : 
# 1969|     mu1969_2(int)           = Uninitialized[x]                      : &:r1969_1
# 1970|     r1970_1(glval<C>)       = VariableAddress[c]                    : 
# 1970|     r1970_2(glval<unknown>) = FunctionAddress[StaticMemberFunction] : 
# 1970|     r1970_3(int)            = Constant[10]                          : 
# 1970|     r1970_4(int)            = Call[StaticMemberFunction]            : func:r1970_2, 0:r1970_3
# 1970|     mu1970_5(unknown)       = ^CallSideEffect                       : ~m?
# 1970|     r1970_6(glval<int>)     = VariableAddress[x]                    : 
# 1970|     mu1970_7(int)           = Store[x]                              : &:r1970_6, r1970_4
# 1971|     r1971_1(glval<int>)     = VariableAddress[y]                    : 
# 1971|     mu1971_2(int)           = Uninitialized[y]                      : &:r1971_1
# 1972|     r1972_1(glval<unknown>) = FunctionAddress[StaticMemberFunction] : 
# 1972|     r1972_2(int)            = Constant[10]                          : 
# 1972|     r1972_3(int)            = Call[StaticMemberFunction]            : func:r1972_1, 0:r1972_2
# 1972|     mu1972_4(unknown)       = ^CallSideEffect                       : ~m?
# 1972|     r1972_5(glval<int>)     = VariableAddress[y]                    : 
# 1972|     mu1972_6(int)           = Store[y]                              : &:r1972_5, r1972_3
# 1973|     r1973_1(glval<int>)     = VariableAddress[z]                    : 
# 1973|     mu1973_2(int)           = Uninitialized[z]                      : &:r1973_1
# 1974|     r1974_1(glval<unknown>) = FunctionAddress[static_function]      : 
# 1974|     r1974_2(int)            = Constant[10]                          : 
# 1974|     r1974_3(int)            = Call[static_function]                 : func:r1974_1, 0:r1974_2
# 1974|     mu1974_4(unknown)       = ^CallSideEffect                       : ~m?
# 1974|     r1974_5(glval<int>)     = VariableAddress[z]                    : 
# 1974|     mu1974_6(int)           = Store[z]                              : &:r1974_5, r1974_3
# 1975|     v1975_1(void)           = NoOp                                  : 
# 1975|     r1975_2(glval<C>)       = VariableAddress[c]                    : 
# 1975|     r1975_3(glval<unknown>) = FunctionAddress[~C]                   : 
# 1975|     v1975_4(void)           = Call[~C]                              : func:r1975_3, this:r1975_2
# 1975|     mu1975_5(unknown)       = ^CallSideEffect                       : ~m?
# 1975|     v1975_6(void)           = ^IndirectReadSideEffect[-1]           : &:r1975_2, ~m?
# 1975|     mu1975_7(C)             = ^IndirectMayWriteSideEffect[-1]       : &:r1975_2
# 1967|     v1967_4(void)           = ReturnVoid                            : 
# 1967|     v1967_5(void)           = AliasedUse                            : ~m?
# 1967|     v1967_6(void)           = ExitFunction                          : 

# 1977| void test_double_assign()
# 1977|   Block 0
# 1977|     v1977_1(void)       = EnterFunction      : 
# 1977|     mu1977_2(unknown)   = AliasedDefinition  : 
# 1977|     mu1977_3(unknown)   = InitializeNonLocal : 
# 1978|     r1978_1(glval<int>) = VariableAddress[i] : 
# 1978|     mu1978_2(int)       = Uninitialized[i]   : &:r1978_1
# 1978|     r1978_3(glval<int>) = VariableAddress[j] : 
# 1978|     mu1978_4(int)       = Uninitialized[j]   : &:r1978_3
# 1979|     r1979_1(int)        = Constant[40]       : 
# 1979|     r1979_2(glval<int>) = VariableAddress[j] : 
# 1979|     mu1979_3(int)       = Store[j]           : &:r1979_2, r1979_1
# 1979|     r1979_4(int)        = Load[j]            : &:r1979_2, ~m?
# 1979|     r1979_5(glval<int>) = VariableAddress[i] : 
# 1979|     mu1979_6(int)       = Store[i]           : &:r1979_5, r1979_4
# 1980|     v1980_1(void)       = NoOp               : 
# 1977|     v1977_4(void)       = ReturnVoid         : 
# 1977|     v1977_5(void)       = AliasedUse         : ~m?
# 1977|     v1977_6(void)       = ExitFunction       : 

# 1982| void test_assign_with_assign_operation()
# 1982|   Block 0
# 1982|     v1982_1(void)       = EnterFunction      : 
# 1982|     mu1982_2(unknown)   = AliasedDefinition  : 
# 1982|     mu1982_3(unknown)   = InitializeNonLocal : 
# 1983|     r1983_1(glval<int>) = VariableAddress[i] : 
# 1983|     mu1983_2(int)       = Uninitialized[i]   : &:r1983_1
# 1983|     r1983_3(glval<int>) = VariableAddress[j] : 
# 1983|     r1983_4(int)        = Constant[0]        : 
# 1983|     mu1983_5(int)       = Store[j]           : &:r1983_3, r1983_4
# 1984|     r1984_1(int)        = Constant[40]       : 
# 1984|     r1984_2(glval<int>) = VariableAddress[j] : 
# 1984|     r1984_3(int)        = Load[j]            : &:r1984_2, ~m?
# 1984|     r1984_4(int)        = Add                : r1984_3, r1984_1
# 1984|     mu1984_5(int)       = Store[j]           : &:r1984_2, r1984_4
# 1984|     r1984_6(int)        = Load[j]            : &:r1984_2, ~m?
# 1984|     r1984_7(glval<int>) = VariableAddress[i] : 
# 1984|     mu1984_8(int)       = Store[i]           : &:r1984_7, r1984_6
# 1985|     v1985_1(void)       = NoOp               : 
# 1982|     v1982_4(void)       = ReturnVoid         : 
# 1982|     v1982_5(void)       = AliasedUse         : ~m?
# 1982|     v1982_6(void)       = ExitFunction       : 

# 1991| D& D::ReferenceStaticMemberFunction()
# 1991|   Block 0
# 1991|     v1991_1(void)       = EnterFunction            : 
# 1991|     mu1991_2(unknown)   = AliasedDefinition        : 
# 1991|     mu1991_3(unknown)   = InitializeNonLocal       : 
# 1992|     r1992_1(glval<D &>) = VariableAddress[#return] : 
# 1992|     r1992_2(glval<D>)   = VariableAddress[x]       : 
# 1992|     r1992_3(D &)        = CopyValue                : r1992_2
# 1992|     mu1992_4(D &)       = Store[#return]           : &:r1992_1, r1992_3
# 1991|     r1991_4(glval<D &>) = VariableAddress[#return] : 
# 1991|     v1991_5(void)       = ReturnValue              : &:r1991_4, ~m?
# 1991|     v1991_6(void)       = AliasedUse               : ~m?
# 1991|     v1991_7(void)       = ExitFunction             : 

# 1994| D D::ObjectStaticMemberFunction()
# 1994|   Block 0
# 1994|     v1994_1(void)     = EnterFunction            : 
# 1994|     mu1994_2(unknown) = AliasedDefinition        : 
# 1994|     mu1994_3(unknown) = InitializeNonLocal       : 
# 1995|     r1995_1(glval<D>) = VariableAddress[#return] : 
# 1995|     r1995_2(glval<D>) = VariableAddress[x]       : 
# 1995|     r1995_3(D)        = Load[x]                  : &:r1995_2, ~m?
# 1995|     mu1995_4(D)       = Store[#return]           : &:r1995_1, r1995_3
# 1994|     r1994_4(glval<D>) = VariableAddress[#return] : 
# 1994|     v1994_5(void)     = ReturnValue              : &:r1994_4, ~m?
# 1994|     v1994_6(void)     = AliasedUse               : ~m?
# 1994|     v1994_7(void)     = ExitFunction             : 

# 1999| void test_static_member_functions_with_reference_return()
# 1999|   Block 0
# 1999|     v1999_1(void)           = EnterFunction                                  : 
# 1999|     mu1999_2(unknown)       = AliasedDefinition                              : 
# 1999|     mu1999_3(unknown)       = InitializeNonLocal                             : 
# 2000|     r2000_1(glval<D>)       = VariableAddress[d]                             : 
# 2000|     mu2000_2(D)             = Uninitialized[d]                               : &:r2000_1
# 2002|     r2002_1(glval<D>)       = VariableAddress[d]                             : 
# 2002|     r2002_2(glval<unknown>) = FunctionAddress[ReferenceStaticMemberFunction] : 
# 2002|     r2002_3(D &)            = Call[ReferenceStaticMemberFunction]            : func:r2002_2
# 2002|     mu2002_4(unknown)       = ^CallSideEffect                                : ~m?
# 2002|     r2002_5(glval<D>)       = CopyValue                                      : r2002_3
# 2003|     r2003_1(glval<unknown>) = FunctionAddress[ReferenceStaticMemberFunction] : 
# 2003|     r2003_2(D &)            = Call[ReferenceStaticMemberFunction]            : func:r2003_1
# 2003|     mu2003_3(unknown)       = ^CallSideEffect                                : ~m?
# 2003|     r2003_4(glval<D>)       = CopyValue                                      : r2003_2
# 2004|     r2004_1(glval<D>)       = VariableAddress[d]                             : 
# 2004|     r2004_2(glval<unknown>) = FunctionAddress[ObjectStaticMemberFunction]    : 
# 2004|     r2004_3(D)              = Call[ObjectStaticMemberFunction]               : func:r2004_2
# 2004|     mu2004_4(unknown)       = ^CallSideEffect                                : ~m?
# 2005|     r2005_1(glval<unknown>) = FunctionAddress[ObjectStaticMemberFunction]    : 
# 2005|     r2005_2(D)              = Call[ObjectStaticMemberFunction]               : func:r2005_1
# 2005|     mu2005_3(unknown)       = ^CallSideEffect                                : ~m?
# 2007|     r2007_1(glval<D>)       = VariableAddress[x]                             : 
# 2007|     mu2007_2(D)             = Uninitialized[x]                               : &:r2007_1
# 2008|     r2008_1(glval<D>)       = VariableAddress[d]                             : 
# 2008|     r2008_2(glval<unknown>) = FunctionAddress[ReferenceStaticMemberFunction] : 
# 2008|     r2008_3(D &)            = Call[ReferenceStaticMemberFunction]            : func:r2008_2
# 2008|     mu2008_4(unknown)       = ^CallSideEffect                                : ~m?
# 2008|     r2008_5(D)              = Load[?]                                        : &:r2008_3, ~m?
# 2008|     r2008_6(glval<D>)       = VariableAddress[x]                             : 
# 2008|     mu2008_7(D)             = Store[x]                                       : &:r2008_6, r2008_5
# 2009|     r2009_1(glval<D>)       = VariableAddress[y]                             : 
# 2009|     mu2009_2(D)             = Uninitialized[y]                               : &:r2009_1
# 2010|     r2010_1(glval<unknown>) = FunctionAddress[ReferenceStaticMemberFunction] : 
# 2010|     r2010_2(D &)            = Call[ReferenceStaticMemberFunction]            : func:r2010_1
# 2010|     mu2010_3(unknown)       = ^CallSideEffect                                : ~m?
# 2010|     r2010_4(D)              = Load[?]                                        : &:r2010_2, ~m?
# 2010|     r2010_5(glval<D>)       = VariableAddress[y]                             : 
# 2010|     mu2010_6(D)             = Store[y]                                       : &:r2010_5, r2010_4
# 2011|     r2011_1(glval<D>)       = VariableAddress[j]                             : 
# 2011|     mu2011_2(D)             = Uninitialized[j]                               : &:r2011_1
# 2012|     r2012_1(glval<D>)       = VariableAddress[d]                             : 
# 2012|     r2012_2(glval<unknown>) = FunctionAddress[ObjectStaticMemberFunction]    : 
# 2012|     r2012_3(D)              = Call[ObjectStaticMemberFunction]               : func:r2012_2
# 2012|     mu2012_4(unknown)       = ^CallSideEffect                                : ~m?
# 2012|     r2012_5(glval<D>)       = VariableAddress[j]                             : 
# 2012|     mu2012_6(D)             = Store[j]                                       : &:r2012_5, r2012_3
# 2013|     r2013_1(glval<D>)       = VariableAddress[k]                             : 
# 2013|     mu2013_2(D)             = Uninitialized[k]                               : &:r2013_1
# 2014|     r2014_1(glval<unknown>) = FunctionAddress[ObjectStaticMemberFunction]    : 
# 2014|     r2014_2(D)              = Call[ObjectStaticMemberFunction]               : func:r2014_1
# 2014|     mu2014_3(unknown)       = ^CallSideEffect                                : ~m?
# 2014|     r2014_4(glval<D>)       = VariableAddress[k]                             : 
# 2014|     mu2014_5(D)             = Store[k]                                       : &:r2014_4, r2014_2
# 2015|     v2015_1(void)           = NoOp                                           : 
# 1999|     v1999_4(void)           = ReturnVoid                                     : 
# 1999|     v1999_5(void)           = AliasedUse                                     : ~m?
# 1999|     v1999_6(void)           = ExitFunction                                   : 

# 2017| void test_volatile()
# 2017|   Block 0
# 2017|     v2017_1(void)       = EnterFunction      : 
# 2017|     mu2017_2(unknown)   = AliasedDefinition  : 
# 2017|     mu2017_3(unknown)   = InitializeNonLocal : 
# 2018|     r2018_1(glval<int>) = VariableAddress[x] : 
# 2018|     mu2018_2(int)       = Uninitialized[x]   : &:r2018_1
# 2019|     r2019_1(glval<int>) = VariableAddress[x] : 
# 2019|     r2019_2(int)        = Load[x]            : &:r2019_1, ~m?
# 2020|     v2020_1(void)       = NoOp               : 
# 2017|     v2017_4(void)       = ReturnVoid         : 
# 2017|     v2017_5(void)       = AliasedUse         : ~m?
# 2017|     v2017_6(void)       = ExitFunction       : 

# 2028| void value_category_test()
# 2028|   Block 0
# 2028|     v2028_1(void)           = EnterFunction                : 
# 2028|     mu2028_2(unknown)       = AliasedDefinition            : 
# 2028|     mu2028_3(unknown)       = InitializeNonLocal           : 
# 2029|     r2029_1(glval<ValCat>)  = VariableAddress[c]           : 
# 2029|     mu2029_2(ValCat)        = Uninitialized[c]             : &:r2029_1
#-----|     r0_1(glval<ValCat>)     = VariableAddress[#temp0:0]    : 
#-----|     mu0_2(ValCat)           = Uninitialized[#temp0:0]      : &:r0_1
#-----|     r0_3(ValCat)            = Load[#temp0:0]               : &:r0_1, ~m?
# 2031|     r2031_1(glval<ValCat>)  = VariableAddress[c]           : 
# 2031|     r2031_2(glval<unknown>) = FunctionAddress[lvalue]      : 
# 2031|     r2031_3(ValCat &)       = Call[lvalue]                 : func:r2031_2
# 2031|     mu2031_4(unknown)       = ^CallSideEffect              : ~m?
# 2031|     r2031_5(glval<ValCat>)  = CopyValue                    : r2031_3
# 2031|     mu2031_6(ValCat)        = Store[?]                     : &:r2031_5, r0_3
#-----|     r0_4(glval<ValCat>)     = VariableAddress[#temp0:0]    : 
#-----|     mu0_5(ValCat)           = Uninitialized[#temp0:0]      : &:r0_4
#-----|     r0_6(ValCat)            = Load[#temp0:0]               : &:r0_4, ~m?
# 2032|     r2032_1(glval<ValCat>)  = VariableAddress[c]           : 
# 2032|     r2032_2(glval<unknown>) = FunctionAddress[xvalue]      : 
# 2032|     r2032_3(ValCat &&)      = Call[xvalue]                 : func:r2032_2
# 2032|     mu2032_4(unknown)       = ^CallSideEffect              : ~m?
# 2032|     r2032_5(glval<ValCat>)  = CopyValue                    : r2032_3
# 2032|     mu2032_6(ValCat)        = Store[?]                     : &:r2032_5, r0_6
#-----|     r0_7(glval<ValCat>)     = VariableAddress[#temp0:0]    : 
#-----|     mu0_8(ValCat)           = Uninitialized[#temp0:0]      : &:r0_7
#-----|     r0_9(ValCat)            = Load[#temp0:0]               : &:r0_7, ~m?
# 2033|     r2033_1(glval<ValCat>)  = VariableAddress[#temp2033:5] : 
# 2033|     r2033_2(glval<ValCat>)  = VariableAddress[c]           : 
# 2033|     r2033_3(glval<unknown>) = FunctionAddress[prvalue]     : 
# 2033|     r2033_4(ValCat)         = Call[prvalue]                : func:r2033_3
# 2033|     mu2033_5(unknown)       = ^CallSideEffect              : ~m?
# 2033|     mu2033_6(ValCat)        = Store[#temp2033:5]           : &:r2033_1, r2033_4
# 2033|     mu2033_7(ValCat)        = Store[#temp2033:5]           : &:r2033_1, r0_9
#-----|     r0_10(glval<ValCat>)    = VariableAddress[#temp0:0]    : 
#-----|     mu0_11(ValCat)          = Uninitialized[#temp0:0]      : &:r0_10
#-----|     r0_12(ValCat)           = Load[#temp0:0]               : &:r0_10, ~m?
# 2034|     r2034_1(glval<unknown>) = FunctionAddress[lvalue]      : 
# 2034|     r2034_2(ValCat &)       = Call[lvalue]                 : func:r2034_1
# 2034|     mu2034_3(unknown)       = ^CallSideEffect              : ~m?
# 2034|     r2034_4(glval<ValCat>)  = CopyValue                    : r2034_2
# 2034|     mu2034_5(ValCat)        = Store[?]                     : &:r2034_4, r0_12
#-----|     r0_13(glval<ValCat>)    = VariableAddress[#temp0:0]    : 
#-----|     mu0_14(ValCat)          = Uninitialized[#temp0:0]      : &:r0_13
#-----|     r0_15(ValCat)           = Load[#temp0:0]               : &:r0_13, ~m?
# 2035|     r2035_1(glval<unknown>) = FunctionAddress[xvalue]      : 
# 2035|     r2035_2(ValCat &&)      = Call[xvalue]                 : func:r2035_1
# 2035|     mu2035_3(unknown)       = ^CallSideEffect              : ~m?
# 2035|     r2035_4(glval<ValCat>)  = CopyValue                    : r2035_2
# 2035|     mu2035_5(ValCat)        = Store[?]                     : &:r2035_4, r0_15
#-----|     r0_16(glval<ValCat>)    = VariableAddress[#temp0:0]    : 
#-----|     mu0_17(ValCat)          = Uninitialized[#temp0:0]      : &:r0_16
#-----|     r0_18(ValCat)           = Load[#temp0:0]               : &:r0_16, ~m?
# 2036|     r2036_1(glval<ValCat>)  = VariableAddress[#temp2036:5] : 
# 2036|     r2036_2(glval<unknown>) = FunctionAddress[prvalue]     : 
# 2036|     r2036_3(ValCat)         = Call[prvalue]                : func:r2036_2
# 2036|     mu2036_4(unknown)       = ^CallSideEffect              : ~m?
# 2036|     mu2036_5(ValCat)        = Store[#temp2036:5]           : &:r2036_1, r2036_3
# 2036|     mu2036_6(ValCat)        = Store[#temp2036:5]           : &:r2036_1, r0_18
# 2037|     v2037_1(void)           = NoOp                         : 
# 2028|     v2028_4(void)           = ReturnVoid                   : 
# 2028|     v2028_5(void)           = AliasedUse                   : ~m?
# 2028|     v2028_6(void)           = ExitFunction                 : 

# 2039| void SetStaticFuncPtr()
# 2039|   Block 0
# 2039|     v2039_1(void)             = EnterFunction                         : 
# 2039|     mu2039_2(unknown)         = AliasedDefinition                     : 
# 2039|     mu2039_3(unknown)         = InitializeNonLocal                    : 
# 2040|     r2040_1(glval<C>)         = VariableAddress[c]                    : 
# 2040|     mu2040_2(C)               = Uninitialized[c]                      : &:r2040_1
# 2040|     r2040_3(glval<unknown>)   = FunctionAddress[C]                    : 
# 2040|     v2040_4(void)             = Call[C]                               : func:r2040_3, this:r2040_1
# 2040|     mu2040_5(unknown)         = ^CallSideEffect                       : ~m?
# 2040|     mu2040_6(C)               = ^IndirectMayWriteSideEffect[-1]       : &:r2040_1
# 2041|     r2041_1(glval<..(*)(..)>) = VariableAddress[pfn]                  : 
# 2041|     r2041_2(..(*)(..))        = FunctionAddress[StaticMemberFunction] : 
# 2041|     mu2041_3(..(*)(..))       = Store[pfn]                            : &:r2041_1, r2041_2
# 2042|     r2042_1(glval<C>)         = VariableAddress[c]                    : 
# 2042|     r2042_2(..(*)(..))        = FunctionAddress[StaticMemberFunction] : 
# 2042|     r2042_3(glval<..(*)(..)>) = VariableAddress[pfn]                  : 
# 2042|     mu2042_4(..(*)(..))       = Store[pfn]                            : &:r2042_3, r2042_2
# 2043|     v2043_1(void)             = NoOp                                  : 
# 2043|     r2043_2(glval<C>)         = VariableAddress[c]                    : 
# 2043|     r2043_3(glval<unknown>)   = FunctionAddress[~C]                   : 
# 2043|     v2043_4(void)             = Call[~C]                              : func:r2043_3, this:r2043_2
# 2043|     mu2043_5(unknown)         = ^CallSideEffect                       : ~m?
# 2043|     v2043_6(void)             = ^IndirectReadSideEffect[-1]           : &:r2043_2, ~m?
# 2043|     mu2043_7(C)               = ^IndirectMayWriteSideEffect[-1]       : &:r2043_2
# 2039|     v2039_4(void)             = ReturnVoid                            : 
# 2039|     v2039_5(void)             = AliasedUse                            : ~m?
# 2039|     v2039_6(void)             = ExitFunction                          : 

# 2045| void TernaryTestInt(bool, int, int, int)
# 2045|   Block 0
# 2045|     v2045_1(void)        = EnterFunction          : 
# 2045|     mu2045_2(unknown)    = AliasedDefinition      : 
# 2045|     mu2045_3(unknown)    = InitializeNonLocal     : 
# 2045|     r2045_4(glval<bool>) = VariableAddress[a]     : 
# 2045|     mu2045_5(bool)       = InitializeParameter[a] : &:r2045_4
# 2045|     r2045_6(glval<int>)  = VariableAddress[x]     : 
# 2045|     mu2045_7(int)        = InitializeParameter[x] : &:r2045_6
# 2045|     r2045_8(glval<int>)  = VariableAddress[y]     : 
# 2045|     mu2045_9(int)        = InitializeParameter[y] : &:r2045_8
# 2045|     r2045_10(glval<int>) = VariableAddress[z]     : 
# 2045|     mu2045_11(int)       = InitializeParameter[z] : &:r2045_10
# 2046|     r2046_1(glval<bool>) = VariableAddress[a]     : 
# 2046|     r2046_2(bool)        = Load[a]                : &:r2046_1, ~m?
# 2046|     v2046_3(void)        = ConditionalBranch      : r2046_2
#-----|   False -> Block 3
#-----|   True -> Block 2

# 2046|   Block 1
# 2046|     r2046_4(glval<int>)  = VariableAddress[#temp2046:9] : 
# 2046|     r2046_5(int)         = Load[#temp2046:9]            : &:r2046_4, ~m?
# 2046|     r2046_6(glval<int>)  = VariableAddress[z]           : 
# 2046|     mu2046_7(int)        = Store[z]                     : &:r2046_6, r2046_5
# 2047|     r2047_1(glval<bool>) = VariableAddress[a]           : 
# 2047|     r2047_2(bool)        = Load[a]                      : &:r2047_1, ~m?
# 2047|     v2047_3(void)        = ConditionalBranch            : r2047_2
#-----|   False -> Block 6
#-----|   True -> Block 5

# 2046|   Block 2
# 2046|     r2046_8(glval<int>)  = VariableAddress[x]           : 
# 2046|     r2046_9(int)         = Load[x]                      : &:r2046_8, ~m?
# 2046|     r2046_10(glval<int>) = VariableAddress[#temp2046:9] : 
# 2046|     mu2046_11(int)       = Store[#temp2046:9]           : &:r2046_10, r2046_9
#-----|   Goto -> Block 1

# 2046|   Block 3
# 2046|     r2046_12(glval<int>) = VariableAddress[y]           : 
# 2046|     r2046_13(int)        = Load[y]                      : &:r2046_12, ~m?
# 2046|     r2046_14(glval<int>) = VariableAddress[#temp2046:9] : 
# 2046|     mu2046_15(int)       = Store[#temp2046:9]           : &:r2046_14, r2046_13
#-----|   Goto -> Block 1

# 2047|   Block 4
# 2047|     r2047_4(glval<int>)  = VariableAddress[#temp2047:9] : 
# 2047|     r2047_5(int)         = Load[#temp2047:9]            : &:r2047_4, ~m?
# 2047|     r2047_6(glval<int>)  = VariableAddress[z]           : 
# 2047|     mu2047_7(int)        = Store[z]                     : &:r2047_6, r2047_5
# 2048|     r2048_1(glval<bool>) = VariableAddress[a]           : 
# 2048|     r2048_2(bool)        = Load[a]                      : &:r2048_1, ~m?
# 2048|     v2048_3(void)        = ConditionalBranch            : r2048_2
#-----|   False -> Block 9
#-----|   True -> Block 8

# 2047|   Block 5
# 2047|     r2047_8(glval<int>)  = VariableAddress[x]           : 
# 2047|     r2047_9(int)         = Load[x]                      : &:r2047_8, ~m?
# 2047|     r2047_10(glval<int>) = VariableAddress[#temp2047:9] : 
# 2047|     mu2047_11(int)       = Store[#temp2047:9]           : &:r2047_10, r2047_9
#-----|   Goto -> Block 4

# 2047|   Block 6
# 2047|     r2047_12(int)        = Constant[5]                  : 
# 2047|     r2047_13(glval<int>) = VariableAddress[#temp2047:9] : 
# 2047|     mu2047_14(int)       = Store[#temp2047:9]           : &:r2047_13, r2047_12
#-----|   Goto -> Block 4

# 2048|   Block 7
# 2048|     r2048_4(glval<int>)  = VariableAddress[#temp2048:9] : 
# 2048|     r2048_5(int)         = Load[#temp2048:9]            : &:r2048_4, ~m?
# 2048|     r2048_6(glval<int>)  = VariableAddress[z]           : 
# 2048|     mu2048_7(int)        = Store[z]                     : &:r2048_6, r2048_5
# 2049|     r2049_1(int)         = Constant[7]                  : 
# 2049|     r2049_2(glval<bool>) = VariableAddress[a]           : 
# 2049|     r2049_3(bool)        = Load[a]                      : &:r2049_2, ~m?
# 2049|     v2049_4(void)        = ConditionalBranch            : r2049_3
#-----|   False -> Block 12
#-----|   True -> Block 11

# 2048|   Block 8
# 2048|     r2048_8(int)        = Constant[3]                  : 
# 2048|     r2048_9(glval<int>) = VariableAddress[#temp2048:9] : 
# 2048|     mu2048_10(int)      = Store[#temp2048:9]           : &:r2048_9, r2048_8
#-----|   Goto -> Block 7

# 2048|   Block 9
# 2048|     r2048_11(int)        = Constant[5]                  : 
# 2048|     r2048_12(glval<int>) = VariableAddress[#temp2048:9] : 
# 2048|     mu2048_13(int)       = Store[#temp2048:9]           : &:r2048_12, r2048_11
#-----|   Goto -> Block 7

# 2049|   Block 10
# 2049|     r2049_5(glval<unknown>) = VariableAddress[#temp2049:6] : 
# 2049|     r2049_6(glval<int>)     = Load[#temp2049:6]            : &:r2049_5, ~m?
# 2049|     mu2049_7(int)           = Store[?]                     : &:r2049_6, r2049_1
# 2050|     v2050_1(void)           = NoOp                         : 
# 2045|     v2045_12(void)          = ReturnVoid                   : 
# 2045|     v2045_13(void)          = AliasedUse                   : ~m?
# 2045|     v2045_14(void)          = ExitFunction                 : 

# 2049|   Block 11
# 2049|     r2049_8(glval<int>)     = VariableAddress[x]           : 
# 2049|     r2049_9(glval<unknown>) = VariableAddress[#temp2049:6] : 
# 2049|     mu2049_10(glval<int>)   = Store[#temp2049:6]           : &:r2049_9, r2049_8
#-----|   Goto -> Block 10

# 2049|   Block 12
# 2049|     r2049_11(glval<int>)     = VariableAddress[y]           : 
# 2049|     r2049_12(glval<unknown>) = VariableAddress[#temp2049:6] : 
# 2049|     mu2049_13(glval<int>)    = Store[#temp2049:6]           : &:r2049_12, r2049_11
#-----|   Goto -> Block 10

# 2055| void TernaryTestPodObj(bool, TernaryPodObj, TernaryPodObj, TernaryPodObj)
# 2055|   Block 0
# 2055|     v2055_1(void)                  = EnterFunction          : 
# 2055|     mu2055_2(unknown)              = AliasedDefinition      : 
# 2055|     mu2055_3(unknown)              = InitializeNonLocal     : 
# 2055|     r2055_4(glval<bool>)           = VariableAddress[a]     : 
# 2055|     mu2055_5(bool)                 = InitializeParameter[a] : &:r2055_4
# 2055|     r2055_6(glval<TernaryPodObj>)  = VariableAddress[x]     : 
# 2055|     mu2055_7(TernaryPodObj)        = InitializeParameter[x] : &:r2055_6
# 2055|     r2055_8(glval<TernaryPodObj>)  = VariableAddress[y]     : 
# 2055|     mu2055_9(TernaryPodObj)        = InitializeParameter[y] : &:r2055_8
# 2055|     r2055_10(glval<TernaryPodObj>) = VariableAddress[z]     : 
# 2055|     mu2055_11(TernaryPodObj)       = InitializeParameter[z] : &:r2055_10
# 2056|     r2056_1(glval<bool>)           = VariableAddress[a]     : 
# 2056|     r2056_2(bool)                  = Load[a]                : &:r2056_1, ~m?
# 2056|     v2056_3(void)                  = ConditionalBranch      : r2056_2
#-----|   False -> Block 3
#-----|   True -> Block 2

# 2056|   Block 1
# 2056|     r2056_4(glval<TernaryPodObj>) = VariableAddress[#temp2056:9] : 
# 2056|     r2056_5(TernaryPodObj)        = Load[#temp2056:9]            : &:r2056_4, ~m?
# 2056|     r2056_6(glval<TernaryPodObj>) = VariableAddress[z]           : 
# 2056|     mu2056_7(TernaryPodObj)       = Store[z]                     : &:r2056_6, r2056_5
# 2057|     r2057_1(glval<TernaryPodObj>) = VariableAddress[#temp2057:9] : 
# 2057|     r2057_2(glval<bool>)          = VariableAddress[a]           : 
# 2057|     r2057_3(bool)                 = Load[a]                      : &:r2057_2, ~m?
# 2057|     v2057_4(void)                 = ConditionalBranch            : r2057_3
#-----|   False -> Block 6
#-----|   True -> Block 5

# 2056|   Block 2
# 2056|     r2056_8(glval<TernaryPodObj>)  = VariableAddress[x]           : 
# 2056|     r2056_9(TernaryPodObj)         = Load[x]                      : &:r2056_8, ~m?
# 2056|     r2056_10(glval<TernaryPodObj>) = VariableAddress[#temp2056:9] : 
# 2056|     mu2056_11(TernaryPodObj)       = Store[#temp2056:9]           : &:r2056_10, r2056_9
#-----|   Goto -> Block 1

# 2056|   Block 3
# 2056|     r2056_12(glval<TernaryPodObj>) = VariableAddress[y]           : 
# 2056|     r2056_13(TernaryPodObj)        = Load[y]                      : &:r2056_12, ~m?
# 2056|     r2056_14(glval<TernaryPodObj>) = VariableAddress[#temp2056:9] : 
# 2056|     mu2056_15(TernaryPodObj)       = Store[#temp2056:9]           : &:r2056_14, r2056_13
#-----|   Goto -> Block 1

# 2057|   Block 4
# 2057|     r2057_5(glval<TernaryPodObj>) = VariableAddress[#temp2057:9] : 
# 2057|     r2057_6(TernaryPodObj)        = Load[#temp2057:9]            : &:r2057_5, ~m?
# 2057|     mu2057_7(TernaryPodObj)       = Store[#temp2057:9]           : &:r2057_1, r2057_6
# 2057|     r2057_8(TernaryPodObj)        = Load[#temp2057:9]            : &:r2057_1, ~m?
# 2057|     r2057_9(glval<TernaryPodObj>) = VariableAddress[z]           : 
# 2057|     mu2057_10(TernaryPodObj)      = Store[z]                     : &:r2057_9, r2057_8
# 2058|     r2058_1(glval<TernaryPodObj>) = VariableAddress[#temp2058:9] : 
# 2058|     r2058_2(glval<bool>)          = VariableAddress[a]           : 
# 2058|     r2058_3(bool)                 = Load[a]                      : &:r2058_2, ~m?
# 2058|     v2058_4(void)                 = ConditionalBranch            : r2058_3
#-----|   False -> Block 9
#-----|   True -> Block 8

# 2057|   Block 5
# 2057|     r2057_11(glval<TernaryPodObj>) = VariableAddress[#temp2057:13] : 
# 2057|     r2057_12(glval<TernaryPodObj>) = VariableAddress[x]            : 
# 2057|     r2057_13(TernaryPodObj)        = Load[x]                       : &:r2057_12, ~m?
# 2057|     mu2057_14(TernaryPodObj)       = Store[#temp2057:13]           : &:r2057_11, r2057_13
# 2057|     r2057_15(TernaryPodObj)        = Load[#temp2057:13]            : &:r2057_11, ~m?
# 2057|     r2057_16(glval<TernaryPodObj>) = VariableAddress[#temp2057:9]  : 
# 2057|     mu2057_17(TernaryPodObj)       = Store[#temp2057:9]            : &:r2057_16, r2057_15
#-----|   Goto -> Block 4

# 2057|   Block 6
# 2057|     r2057_18(glval<TernaryPodObj>) = VariableAddress[#temp2057:17] : 
# 2057|     r2057_19(TernaryPodObj)        = Constant[0]                   : 
# 2057|     mu2057_20(TernaryPodObj)       = Store[#temp2057:17]           : &:r2057_18, r2057_19
# 2057|     r2057_21(TernaryPodObj)        = Load[#temp2057:17]            : &:r2057_18, ~m?
# 2057|     r2057_22(glval<TernaryPodObj>) = VariableAddress[#temp2057:9]  : 
# 2057|     mu2057_23(TernaryPodObj)       = Store[#temp2057:9]            : &:r2057_22, r2057_21
#-----|   Goto -> Block 4

# 2058|   Block 7
# 2058|     r2058_5(glval<TernaryPodObj>) = VariableAddress[#temp2058:9]  : 
# 2058|     r2058_6(TernaryPodObj)        = Load[#temp2058:9]             : &:r2058_5, ~m?
# 2058|     mu2058_7(TernaryPodObj)       = Store[#temp2058:9]            : &:r2058_1, r2058_6
# 2058|     r2058_8(TernaryPodObj)        = Load[#temp2058:9]             : &:r2058_1, ~m?
# 2058|     r2058_9(glval<TernaryPodObj>) = VariableAddress[z]            : 
# 2058|     mu2058_10(TernaryPodObj)      = Store[z]                      : &:r2058_9, r2058_8
# 2059|     r2059_1(glval<TernaryPodObj>) = VariableAddress[#temp2059:23] : 
# 2059|     r2059_2(TernaryPodObj)        = Constant[0]                   : 
# 2059|     mu2059_3(TernaryPodObj)       = Store[#temp2059:23]           : &:r2059_1, r2059_2
# 2059|     r2059_4(TernaryPodObj)        = Load[#temp2059:23]            : &:r2059_1, ~m?
# 2059|     r2059_5(glval<bool>)          = VariableAddress[a]            : 
# 2059|     r2059_6(bool)                 = Load[a]                       : &:r2059_5, ~m?
# 2059|     v2059_7(void)                 = ConditionalBranch             : r2059_6
#-----|   False -> Block 12
#-----|   True -> Block 11

# 2058|   Block 8
# 2058|     r2058_11(glval<TernaryPodObj>) = VariableAddress[#temp2058:13] : 
# 2058|     r2058_12(TernaryPodObj)        = Constant[0]                   : 
# 2058|     mu2058_13(TernaryPodObj)       = Store[#temp2058:13]           : &:r2058_11, r2058_12
# 2058|     r2058_14(TernaryPodObj)        = Load[#temp2058:13]            : &:r2058_11, ~m?
# 2058|     r2058_15(glval<TernaryPodObj>) = VariableAddress[#temp2058:9]  : 
# 2058|     mu2058_16(TernaryPodObj)       = Store[#temp2058:9]            : &:r2058_15, r2058_14
#-----|   Goto -> Block 7

# 2058|   Block 9
# 2058|     r2058_17(glval<TernaryPodObj>) = VariableAddress[#temp2058:31] : 
# 2058|     r2058_18(TernaryPodObj)        = Constant[0]                   : 
# 2058|     mu2058_19(TernaryPodObj)       = Store[#temp2058:31]           : &:r2058_17, r2058_18
# 2058|     r2058_20(TernaryPodObj)        = Load[#temp2058:31]            : &:r2058_17, ~m?
# 2058|     r2058_21(glval<TernaryPodObj>) = VariableAddress[#temp2058:9]  : 
# 2058|     mu2058_22(TernaryPodObj)       = Store[#temp2058:9]            : &:r2058_21, r2058_20
#-----|   Goto -> Block 7

# 2059|   Block 10
# 2059|     r2059_8(glval<TernaryPodObj>)  = VariableAddress[#temp2059:10] : 
# 2059|     r2059_9(TernaryPodObj)         = Load[#temp2059:10]            : &:r2059_8, ~m?
# 2059|     r2059_10(glval<TernaryPodObj>) = VariableAddress[z]            : 
# 2059|     mu2059_11(TernaryPodObj)       = Store[z]                      : &:r2059_10, r2059_9
# 2059|     r2059_12(glval<TernaryPodObj>) = CopyValue                     : r2059_10
# 2059|     mu2059_13(TernaryPodObj)       = Store[?]                      : &:r2059_12, r2059_4
# 2060|     v2060_1(void)                  = NoOp                          : 
# 2055|     v2055_12(void)                 = ReturnVoid                    : 
# 2055|     v2055_13(void)                 = AliasedUse                    : ~m?
# 2055|     v2055_14(void)                 = ExitFunction                  : 

# 2059|   Block 11
# 2059|     r2059_14(glval<TernaryPodObj>) = VariableAddress[x]            : 
# 2059|     r2059_15(TernaryPodObj)        = Load[x]                       : &:r2059_14, ~m?
# 2059|     r2059_16(glval<TernaryPodObj>) = VariableAddress[#temp2059:10] : 
# 2059|     mu2059_17(TernaryPodObj)       = Store[#temp2059:10]           : &:r2059_16, r2059_15
#-----|   Goto -> Block 10

# 2059|   Block 12
# 2059|     r2059_18(glval<TernaryPodObj>) = VariableAddress[y]            : 
# 2059|     r2059_19(TernaryPodObj)        = Load[y]                       : &:r2059_18, ~m?
# 2059|     r2059_20(glval<TernaryPodObj>) = VariableAddress[#temp2059:10] : 
# 2059|     mu2059_21(TernaryPodObj)       = Store[#temp2059:10]           : &:r2059_20, r2059_19
#-----|   Goto -> Block 10

# 2062| TernaryNonPodObj& TernaryNonPodObj::operator=(TernaryNonPodObj const&)
# 2062|   Block 0
# 2062|     v2062_1(void)                      = EnterFunction                                : 
# 2062|     mu2062_2(unknown)                  = AliasedDefinition                            : 
# 2062|     mu2062_3(unknown)                  = InitializeNonLocal                           : 
# 2062|     r2062_4(glval<unknown>)            = VariableAddress[#this]                       : 
# 2062|     mu2062_5(glval<TernaryNonPodObj>)  = InitializeParameter[#this]                   : &:r2062_4
# 2062|     r2062_6(glval<TernaryNonPodObj>)   = Load[#this]                                  : &:r2062_4, ~m?
# 2062|     mu2062_7(TernaryNonPodObj)         = InitializeIndirection[#this]                 : &:r2062_6
#-----|     r0_1(glval<TernaryNonPodObj &>)    = VariableAddress[(unnamed parameter 0)]       : 
#-----|     mu0_2(TernaryNonPodObj &)          = InitializeParameter[(unnamed parameter 0)]   : &:r0_1
#-----|     r0_3(TernaryNonPodObj &)           = Load[(unnamed parameter 0)]                  : &:r0_1, ~m?
#-----|     mu0_4(unknown)                     = InitializeIndirection[(unnamed parameter 0)] : &:r0_3
#-----|     r0_5(glval<TernaryNonPodObj &>)    = VariableAddress[#return]                     : 
#-----|     r0_6(glval<unknown>)               = VariableAddress[#this]                       : 
#-----|     r0_7(TernaryNonPodObj *)           = Load[#this]                                  : &:r0_6, ~m?
#-----|     r0_8(glval<TernaryNonPodObj>)      = CopyValue                                    : r0_7
#-----|     r0_9(TernaryNonPodObj &)           = CopyValue                                    : r0_8
#-----|     mu0_10(TernaryNonPodObj &)         = Store[#return]                               : &:r0_5, r0_9
# 2062|     v2062_8(void)                      = ReturnIndirection[#this]                     : &:r2062_6, ~m?
#-----|     v0_11(void)                        = ReturnIndirection[(unnamed parameter 0)]     : &:r0_3, ~m?
# 2062|     r2062_9(glval<TernaryNonPodObj &>) = VariableAddress[#return]                     : 
# 2062|     v2062_10(void)                     = ReturnValue                                  : &:r2062_9, ~m?
# 2062|     v2062_11(void)                     = AliasedUse                                   : ~m?
# 2062|     v2062_12(void)                     = ExitFunction                                 : 

# 2062| void TernaryNonPodObj::TernaryNonPodObj()
# 2062|   Block 0
# 2062|     v2062_1(void)                     = EnterFunction                : 
# 2062|     mu2062_2(unknown)                 = AliasedDefinition            : 
# 2062|     mu2062_3(unknown)                 = InitializeNonLocal           : 
# 2062|     r2062_4(glval<unknown>)           = VariableAddress[#this]       : 
# 2062|     mu2062_5(glval<TernaryNonPodObj>) = InitializeParameter[#this]   : &:r2062_4
# 2062|     r2062_6(glval<TernaryNonPodObj>)  = Load[#this]                  : &:r2062_4, ~m?
# 2062|     mu2062_7(TernaryNonPodObj)        = InitializeIndirection[#this] : &:r2062_6
# 2062|     v2062_8(void)                     = NoOp                         : 
# 2062|     v2062_9(void)                     = ReturnIndirection[#this]     : &:r2062_6, ~m?
# 2062|     v2062_10(void)                    = ReturnVoid                   : 
# 2062|     v2062_11(void)                    = AliasedUse                   : ~m?
# 2062|     v2062_12(void)                    = ExitFunction                 : 

# 2062| void TernaryNonPodObj::TernaryNonPodObj(TernaryNonPodObj const&)
# 2062|   Block 0
# 2062|     v2062_1(void)                     = EnterFunction                                : 
# 2062|     mu2062_2(unknown)                 = AliasedDefinition                            : 
# 2062|     mu2062_3(unknown)                 = InitializeNonLocal                           : 
# 2062|     r2062_4(glval<unknown>)           = VariableAddress[#this]                       : 
# 2062|     mu2062_5(glval<TernaryNonPodObj>) = InitializeParameter[#this]                   : &:r2062_4
# 2062|     r2062_6(glval<TernaryNonPodObj>)  = Load[#this]                                  : &:r2062_4, ~m?
# 2062|     mu2062_7(TernaryNonPodObj)        = InitializeIndirection[#this]                 : &:r2062_6
#-----|     r0_1(glval<TernaryNonPodObj &>)   = VariableAddress[(unnamed parameter 0)]       : 
#-----|     mu0_2(TernaryNonPodObj &)         = InitializeParameter[(unnamed parameter 0)]   : &:r0_1
#-----|     r0_3(TernaryNonPodObj &)          = Load[(unnamed parameter 0)]                  : &:r0_1, ~m?
#-----|     mu0_4(unknown)                    = InitializeIndirection[(unnamed parameter 0)] : &:r0_3
# 2062|     v2062_8(void)                     = NoOp                                         : 
# 2062|     v2062_9(void)                     = ReturnIndirection[#this]                     : &:r2062_6, ~m?
#-----|     v0_5(void)                        = ReturnIndirection[(unnamed parameter 0)]     : &:r0_3, ~m?
# 2062|     v2062_10(void)                    = ReturnVoid                                   : 
# 2062|     v2062_11(void)                    = AliasedUse                                   : ~m?
# 2062|     v2062_12(void)                    = ExitFunction                                 : 

# 2063| void TernaryNonPodObj::~TernaryNonPodObj()
# 2063|   Block 0
# 2063|     v2063_1(void)                     = EnterFunction                : 
# 2063|     mu2063_2(unknown)                 = AliasedDefinition            : 
# 2063|     mu2063_3(unknown)                 = InitializeNonLocal           : 
# 2063|     r2063_4(glval<unknown>)           = VariableAddress[#this]       : 
# 2063|     mu2063_5(glval<TernaryNonPodObj>) = InitializeParameter[#this]   : &:r2063_4
# 2063|     r2063_6(glval<TernaryNonPodObj>)  = Load[#this]                  : &:r2063_4, ~m?
# 2063|     mu2063_7(TernaryNonPodObj)        = InitializeIndirection[#this] : &:r2063_6
# 2063|     v2063_8(void)                     = NoOp                         : 
# 2063|     v2063_9(void)                     = ReturnIndirection[#this]     : &:r2063_6, ~m?
# 2063|     v2063_10(void)                    = ReturnVoid                   : 
# 2063|     v2063_11(void)                    = AliasedUse                   : ~m?
# 2063|     v2063_12(void)                    = ExitFunction                 : 

# 2066| void TernaryTestNonPodObj(bool, TernaryNonPodObj, TernaryNonPodObj, TernaryNonPodObj)
# 2066|   Block 0
# 2066|     v2066_1(void)                     = EnterFunction              : 
# 2066|     mu2066_2(unknown)                 = AliasedDefinition          : 
# 2066|     mu2066_3(unknown)                 = InitializeNonLocal         : 
# 2066|     r2066_4(glval<bool>)              = VariableAddress[a]         : 
# 2066|     mu2066_5(bool)                    = InitializeParameter[a]     : &:r2066_4
# 2066|     r2066_6(glval<TernaryNonPodObj>)  = VariableAddress[x]         : 
# 2066|     mu2066_7(TernaryNonPodObj)        = InitializeParameter[x]     : &:r2066_6
# 2066|     r2066_8(glval<TernaryNonPodObj>)  = VariableAddress[y]         : 
# 2066|     mu2066_9(TernaryNonPodObj)        = InitializeParameter[y]     : &:r2066_8
# 2066|     r2066_10(glval<TernaryNonPodObj>) = VariableAddress[z]         : 
# 2066|     mu2066_11(TernaryNonPodObj)       = InitializeParameter[z]     : &:r2066_10
# 2067|     r2067_1(glval<TernaryNonPodObj>)  = VariableAddress[z]         : 
# 2067|     r2067_2(glval<unknown>)           = FunctionAddress[operator=] : 
# 2067|     r2067_3(glval<bool>)              = VariableAddress[a]         : 
# 2067|     r2067_4(bool)                     = Load[a]                    : &:r2067_3, ~m?
# 2067|     v2067_5(void)                     = ConditionalBranch          : r2067_4
#-----|   False -> Block 3
#-----|   True -> Block 2

# 2067|   Block 1
# 2067|     r2067_6(glval<unknown>)           = VariableAddress[#temp2067:9]    : 
# 2067|     r2067_7(glval<TernaryNonPodObj>)  = Load[#temp2067:9]               : &:r2067_6, ~m?
# 2067|     r2067_8(glval<TernaryNonPodObj>)  = Convert                         : r2067_7
# 2067|     r2067_9(TernaryNonPodObj &)       = CopyValue                       : r2067_8
# 2067|     r2067_10(TernaryNonPodObj &)      = Call[operator=]                 : func:r2067_2, this:r2067_1, 0:r2067_9
# 2067|     mu2067_11(unknown)                = ^CallSideEffect                 : ~m?
# 2067|     v2067_12(void)                    = ^IndirectReadSideEffect[-1]     : &:r2067_1, ~m?
# 2067|     v2067_13(void)                    = ^BufferReadSideEffect[0]        : &:r2067_9, ~m?
# 2067|     mu2067_14(TernaryNonPodObj)       = ^IndirectMayWriteSideEffect[-1] : &:r2067_1
# 2067|     r2067_15(glval<TernaryNonPodObj>) = CopyValue                       : r2067_10
# 2068|     r2068_1(glval<TernaryNonPodObj>)  = VariableAddress[z]              : 
# 2068|     r2068_2(glval<unknown>)           = FunctionAddress[operator=]      : 
# 2068|     r2068_3(glval<TernaryNonPodObj>)  = VariableAddress[#temp2068:9]    : 
# 2068|     r2068_4(glval<bool>)              = VariableAddress[a]              : 
# 2068|     r2068_5(bool)                     = Load[a]                         : &:r2068_4, ~m?
# 2068|     v2068_6(void)                     = ConditionalBranch               : r2068_5
#-----|   False -> Block 6
#-----|   True -> Block 5

# 2067|   Block 2
# 2067|     r2067_16(glval<TernaryNonPodObj>)  = VariableAddress[x]           : 
# 2067|     r2067_17(glval<unknown>)           = VariableAddress[#temp2067:9] : 
# 2067|     mu2067_18(glval<TernaryNonPodObj>) = Store[#temp2067:9]           : &:r2067_17, r2067_16
#-----|   Goto -> Block 1

# 2067|   Block 3
# 2067|     r2067_19(glval<TernaryNonPodObj>)  = VariableAddress[y]           : 
# 2067|     r2067_20(glval<unknown>)           = VariableAddress[#temp2067:9] : 
# 2067|     mu2067_21(glval<TernaryNonPodObj>) = Store[#temp2067:9]           : &:r2067_20, r2067_19
#-----|   Goto -> Block 1

# 2068|   Block 4
# 2068|     r2068_7(glval<TernaryNonPodObj>)  = VariableAddress[#temp2068:9]    : 
# 2068|     r2068_8(TernaryNonPodObj)         = Load[#temp2068:9]               : &:r2068_7, ~m?
# 2068|     mu2068_9(TernaryNonPodObj)        = Store[#temp2068:9]              : &:r2068_3, r2068_8
# 2068|     r2068_10(glval<TernaryNonPodObj>) = Convert                         : r2068_3
# 2068|     r2068_11(TernaryNonPodObj &)      = CopyValue                       : r2068_10
# 2068|     r2068_12(TernaryNonPodObj &)      = Call[operator=]                 : func:r2068_2, this:r2068_1, 0:r2068_11
# 2068|     mu2068_13(unknown)                = ^CallSideEffect                 : ~m?
# 2068|     v2068_14(void)                    = ^IndirectReadSideEffect[-1]     : &:r2068_1, ~m?
# 2068|     v2068_15(void)                    = ^BufferReadSideEffect[0]        : &:r2068_11, ~m?
# 2068|     mu2068_16(TernaryNonPodObj)       = ^IndirectMayWriteSideEffect[-1] : &:r2068_1
# 2068|     r2068_17(glval<TernaryNonPodObj>) = CopyValue                       : r2068_12
# 2069|     r2069_1(glval<TernaryNonPodObj>)  = VariableAddress[z]              : 
# 2069|     r2069_2(glval<unknown>)           = FunctionAddress[operator=]      : 
# 2069|     r2069_3(glval<TernaryNonPodObj>)  = VariableAddress[#temp2069:9]    : 
# 2069|     r2069_4(glval<bool>)              = VariableAddress[a]              : 
# 2069|     r2069_5(bool)                     = Load[a]                         : &:r2069_4, ~m?
# 2069|     v2069_6(void)                     = ConditionalBranch               : r2069_5
#-----|   False -> Block 9
#-----|   True -> Block 8

# 2068|   Block 5
# 2068|     r2068_18(glval<TernaryNonPodObj>) = VariableAddress[#temp2068:13]     : 
# 2068|     mu2068_19(TernaryNonPodObj)       = Uninitialized[#temp2068:13]       : &:r2068_18
# 2068|     r2068_20(glval<unknown>)          = FunctionAddress[TernaryNonPodObj] : 
# 2068|     r2068_21(glval<TernaryNonPodObj>) = VariableAddress[x]                : 
# 2068|     r2068_22(glval<TernaryNonPodObj>) = Convert                           : r2068_21
# 2068|     r2068_23(TernaryNonPodObj &)      = CopyValue                         : r2068_22
# 2068|     v2068_24(void)                    = Call[TernaryNonPodObj]            : func:r2068_20, this:r2068_18, 0:r2068_23
# 2068|     mu2068_25(unknown)                = ^CallSideEffect                   : ~m?
# 2068|     v2068_26(void)                    = ^BufferReadSideEffect[0]          : &:r2068_23, ~m?
# 2068|     mu2068_27(TernaryNonPodObj)       = ^IndirectMayWriteSideEffect[-1]   : &:r2068_18
# 2068|     r2068_28(TernaryNonPodObj)        = Load[#temp2068:13]                : &:r2068_18, ~m?
# 2068|     r2068_29(glval<TernaryNonPodObj>) = VariableAddress[#temp2068:9]      : 
# 2068|     mu2068_30(TernaryNonPodObj)       = Store[#temp2068:9]                : &:r2068_29, r2068_28
#-----|   Goto -> Block 4

# 2068|   Block 6
# 2068|     r2068_31(glval<TernaryNonPodObj>) = VariableAddress[#temp2068:17]     : 
# 2068|     mu2068_32(TernaryNonPodObj)       = Uninitialized[#temp2068:17]       : &:r2068_31
# 2068|     r2068_33(glval<unknown>)          = FunctionAddress[TernaryNonPodObj] : 
# 2068|     v2068_34(void)                    = Call[TernaryNonPodObj]            : func:r2068_33, this:r2068_31
# 2068|     mu2068_35(unknown)                = ^CallSideEffect                   : ~m?
# 2068|     mu2068_36(TernaryNonPodObj)       = ^IndirectMayWriteSideEffect[-1]   : &:r2068_31
# 2068|     r2068_37(TernaryNonPodObj)        = Load[#temp2068:17]                : &:r2068_31, ~m?
# 2068|     r2068_38(glval<TernaryNonPodObj>) = VariableAddress[#temp2068:9]      : 
# 2068|     mu2068_39(TernaryNonPodObj)       = Store[#temp2068:9]                : &:r2068_38, r2068_37
#-----|   Goto -> Block 4

# 2069|   Block 7
# 2069|     r2069_7(glval<TernaryNonPodObj>)  = VariableAddress[#temp2069:9]    : 
# 2069|     r2069_8(TernaryNonPodObj)         = Load[#temp2069:9]               : &:r2069_7, ~m?
# 2069|     mu2069_9(TernaryNonPodObj)        = Store[#temp2069:9]              : &:r2069_3, r2069_8
# 2069|     r2069_10(glval<TernaryNonPodObj>) = Convert                         : r2069_3
# 2069|     r2069_11(TernaryNonPodObj &)      = CopyValue                       : r2069_10
# 2069|     r2069_12(TernaryNonPodObj &)      = Call[operator=]                 : func:r2069_2, this:r2069_1, 0:r2069_11
# 2069|     mu2069_13(unknown)                = ^CallSideEffect                 : ~m?
# 2069|     v2069_14(void)                    = ^IndirectReadSideEffect[-1]     : &:r2069_1, ~m?
# 2069|     v2069_15(void)                    = ^BufferReadSideEffect[0]        : &:r2069_11, ~m?
# 2069|     mu2069_16(TernaryNonPodObj)       = ^IndirectMayWriteSideEffect[-1] : &:r2069_1
# 2069|     r2069_17(glval<TernaryNonPodObj>) = CopyValue                       : r2069_12
# 2070|     r2070_1(glval<TernaryNonPodObj>)  = VariableAddress[z]              : 
# 2070|     r2070_2(glval<unknown>)           = FunctionAddress[operator=]      : 
# 2070|     r2070_3(glval<bool>)              = VariableAddress[a]              : 
# 2070|     r2070_4(bool)                     = Load[a]                         : &:r2070_3, ~m?
# 2070|     v2070_5(void)                     = ConditionalBranch               : r2070_4
#-----|   False -> Block 12
#-----|   True -> Block 11

# 2069|   Block 8
# 2069|     r2069_18(glval<TernaryNonPodObj>) = VariableAddress[#temp2069:13]     : 
# 2069|     mu2069_19(TernaryNonPodObj)       = Uninitialized[#temp2069:13]       : &:r2069_18
# 2069|     r2069_20(glval<unknown>)          = FunctionAddress[TernaryNonPodObj] : 
# 2069|     v2069_21(void)                    = Call[TernaryNonPodObj]            : func:r2069_20, this:r2069_18
# 2069|     mu2069_22(unknown)                = ^CallSideEffect                   : ~m?
# 2069|     mu2069_23(TernaryNonPodObj)       = ^IndirectMayWriteSideEffect[-1]   : &:r2069_18
# 2069|     r2069_24(TernaryNonPodObj)        = Load[#temp2069:13]                : &:r2069_18, ~m?
# 2069|     r2069_25(glval<TernaryNonPodObj>) = VariableAddress[#temp2069:9]      : 
# 2069|     mu2069_26(TernaryNonPodObj)       = Store[#temp2069:9]                : &:r2069_25, r2069_24
#-----|   Goto -> Block 7

# 2069|   Block 9
# 2069|     r2069_27(glval<TernaryNonPodObj>) = VariableAddress[#temp2069:34]     : 
# 2069|     mu2069_28(TernaryNonPodObj)       = Uninitialized[#temp2069:34]       : &:r2069_27
# 2069|     r2069_29(glval<unknown>)          = FunctionAddress[TernaryNonPodObj] : 
# 2069|     v2069_30(void)                    = Call[TernaryNonPodObj]            : func:r2069_29, this:r2069_27
# 2069|     mu2069_31(unknown)                = ^CallSideEffect                   : ~m?
# 2069|     mu2069_32(TernaryNonPodObj)       = ^IndirectMayWriteSideEffect[-1]   : &:r2069_27
# 2069|     r2069_33(TernaryNonPodObj)        = Load[#temp2069:34]                : &:r2069_27, ~m?
# 2069|     r2069_34(glval<TernaryNonPodObj>) = VariableAddress[#temp2069:9]      : 
# 2069|     mu2069_35(TernaryNonPodObj)       = Store[#temp2069:9]                : &:r2069_34, r2069_33
#-----|   Goto -> Block 7

# 2070|   Block 10
# 2070|     r2070_6(glval<unknown>)           = VariableAddress[#temp2070:10]     : 
# 2070|     r2070_7(glval<TernaryNonPodObj>)  = Load[#temp2070:10]                : &:r2070_6, ~m?
# 2070|     r2070_8(glval<TernaryNonPodObj>)  = Convert                           : r2070_7
# 2070|     r2070_9(TernaryNonPodObj &)       = CopyValue                         : r2070_8
# 2070|     r2070_10(TernaryNonPodObj &)      = Call[operator=]                   : func:r2070_2, this:r2070_1, 0:r2070_9
# 2070|     mu2070_11(unknown)                = ^CallSideEffect                   : ~m?
# 2070|     v2070_12(void)                    = ^IndirectReadSideEffect[-1]       : &:r2070_1, ~m?
# 2070|     v2070_13(void)                    = ^BufferReadSideEffect[0]          : &:r2070_9, ~m?
# 2070|     mu2070_14(TernaryNonPodObj)       = ^IndirectMayWriteSideEffect[-1]   : &:r2070_1
# 2070|     r2070_15(glval<TernaryNonPodObj>) = CopyValue                         : r2070_10
# 2070|     r2070_16(glval<unknown>)          = FunctionAddress[operator=]        : 
# 2070|     r2070_17(glval<TernaryNonPodObj>) = VariableAddress[#temp2070:23]     : 
# 2070|     mu2070_18(TernaryNonPodObj)       = Uninitialized[#temp2070:23]       : &:r2070_17
# 2070|     r2070_19(glval<unknown>)          = FunctionAddress[TernaryNonPodObj] : 
# 2070|     v2070_20(void)                    = Call[TernaryNonPodObj]            : func:r2070_19, this:r2070_17
# 2070|     mu2070_21(unknown)                = ^CallSideEffect                   : ~m?
# 2070|     mu2070_22(TernaryNonPodObj)       = ^IndirectMayWriteSideEffect[-1]   : &:r2070_17
# 2070|     r2070_23(glval<TernaryNonPodObj>) = Convert                           : r2070_17
# 2070|     r2070_24(TernaryNonPodObj &)      = CopyValue                         : r2070_23
# 2070|     r2070_25(TernaryNonPodObj &)      = Call[operator=]                   : func:r2070_16, this:r2070_15, 0:r2070_24
# 2070|     mu2070_26(unknown)                = ^CallSideEffect                   : ~m?
# 2070|     v2070_27(void)                    = ^IndirectReadSideEffect[-1]       : &:r2070_15, ~m?
# 2070|     v2070_28(void)                    = ^BufferReadSideEffect[0]          : &:r2070_24, ~m?
# 2070|     mu2070_29(TernaryNonPodObj)       = ^IndirectMayWriteSideEffect[-1]   : &:r2070_15
# 2070|     r2070_30(glval<TernaryNonPodObj>) = CopyValue                         : r2070_25
# 2071|     v2071_1(void)                     = NoOp                              : 
# 2066|     v2066_12(void)                    = ReturnVoid                        : 
# 2066|     v2066_13(void)                    = AliasedUse                        : ~m?
# 2066|     v2066_14(void)                    = ExitFunction                      : 

# 2070|   Block 11
# 2070|     r2070_31(glval<TernaryNonPodObj>)  = VariableAddress[x]            : 
# 2070|     r2070_32(glval<unknown>)           = VariableAddress[#temp2070:10] : 
# 2070|     mu2070_33(glval<TernaryNonPodObj>) = Store[#temp2070:10]           : &:r2070_32, r2070_31
#-----|   Goto -> Block 10

# 2070|   Block 12
# 2070|     r2070_34(glval<TernaryNonPodObj>)  = VariableAddress[y]            : 
# 2070|     r2070_35(glval<unknown>)           = VariableAddress[#temp2070:10] : 
# 2070|     mu2070_36(glval<TernaryNonPodObj>) = Store[#temp2070:10]           : &:r2070_35, r2070_34
#-----|   Goto -> Block 10

# 2075| unsigned int CommaTest(unsigned int)
# 2075|   Block 0
# 2075|     v2075_1(void)                = EnterFunction          : 
# 2075|     mu2075_2(unknown)            = AliasedDefinition      : 
# 2075|     mu2075_3(unknown)            = InitializeNonLocal     : 
# 2075|     r2075_4(glval<unsigned int>) = VariableAddress[x]     : 
# 2075|     mu2075_5(unsigned int)       = InitializeParameter[x] : &:r2075_4
# 2076|     r2076_1(glval<unsigned int>) = VariableAddress[y]     : 
# 2076|     mu2076_2(unsigned int)       = Uninitialized[y]       : &:r2076_1
# 2077|     r2077_1(glval<unsigned int>) = VariableAddress[x]     : 
# 2077|     r2077_2(unsigned int)        = Load[x]                : &:r2077_1, ~m?
# 2077|     r2077_3(unsigned int)        = Constant[100]          : 
# 2077|     r2077_4(bool)                = CompareLT              : r2077_2, r2077_3
# 2077|     v2077_5(void)                = ConditionalBranch      : r2077_4
#-----|   False -> Block 3
#-----|   True -> Block 2

# 2077|   Block 1
# 2077|     r2077_6(glval<unsigned int>) = VariableAddress[#temp2077:7] : 
# 2077|     r2077_7(unsigned int)        = Load[#temp2077:7]            : &:r2077_6, ~m?
# 2077|     r2077_8(glval<unsigned int>) = VariableAddress[y]           : 
# 2077|     mu2077_9(unsigned int)       = Store[y]                     : &:r2077_8, r2077_7
# 2080|     r2080_1(glval<unsigned int>) = VariableAddress[#return]     : 
# 2080|     mu2080_2(unsigned int)       = Uninitialized[#return]       : &:r2080_1
# 2075|     r2075_6(glval<unsigned int>) = VariableAddress[#return]     : 
# 2075|     v2075_7(void)                = ReturnValue                  : &:r2075_6, ~m?
# 2075|     v2075_8(void)                = AliasedUse                   : ~m?
# 2075|     v2075_9(void)                = ExitFunction                 : 

# 2078|   Block 2
# 2078|     r2078_1(glval<unknown>)       = FunctionAddress[CommaTestHelper] : 
# 2078|     r2078_2(glval<unsigned int>)  = VariableAddress[x]               : 
# 2078|     r2078_3(unsigned int)         = Load[x]                          : &:r2078_2, ~m?
# 2078|     v2078_4(void)                 = Call[CommaTestHelper]            : func:r2078_1, 0:r2078_3
# 2078|     mu2078_5(unknown)             = ^CallSideEffect                  : ~m?
# 2078|     r2078_6(glval<unsigned int>)  = VariableAddress[x]               : 
# 2078|     r2078_7(unsigned int)         = Load[x]                          : &:r2078_6, ~m?
# 2078|     r2078_8(unsigned int)         = CopyValue                        : r2078_7
# 2077|     r2077_10(glval<unsigned int>) = VariableAddress[#temp2077:7]     : 
# 2077|     mu2077_11(unsigned int)       = Store[#temp2077:7]               : &:r2077_10, r2078_8
#-----|   Goto -> Block 1

# 2079|   Block 3
# 2079|     r2079_1(glval<unknown>)       = FunctionAddress[CommaTestHelper] : 
# 2079|     r2079_2(glval<unsigned int>)  = VariableAddress[x]               : 
# 2079|     r2079_3(unsigned int)         = Load[x]                          : &:r2079_2, ~m?
# 2079|     v2079_4(void)                 = Call[CommaTestHelper]            : func:r2079_1, 0:r2079_3
# 2079|     mu2079_5(unknown)             = ^CallSideEffect                  : ~m?
# 2079|     r2079_6(int)                  = Constant[10]                     : 
# 2079|     r2079_7(int)                  = CopyValue                        : r2079_6
# 2079|     r2079_8(unsigned int)         = Convert                          : r2079_7
# 2077|     r2077_12(glval<unsigned int>) = VariableAddress[#temp2077:7]     : 
# 2077|     mu2077_13(unsigned int)       = Store[#temp2077:7]               : &:r2077_12, r2079_8
#-----|   Goto -> Block 1

# 2082| void NewDeleteMem()
# 2082|   Block 0
# 2082|     v2082_1(void)           = EnterFunction                    : 
# 2082|     mu2082_2(unknown)       = AliasedDefinition                : 
# 2082|     mu2082_3(unknown)       = InitializeNonLocal               : 
# 2083|     r2083_1(glval<int *>)   = VariableAddress[x]               : 
# 2083|     r2083_2(glval<unknown>) = FunctionAddress[operator new]    : 
# 2083|     r2083_3(unsigned long)  = Constant[4]                      : 
# 2083|     r2083_4(void *)         = Call[operator new]               : func:r2083_2, 0:r2083_3
# 2083|     mu2083_5(unknown)       = ^CallSideEffect                  : ~m?
# 2083|     mu2083_6(unknown)       = ^InitializeDynamicAllocation     : &:r2083_4
# 2083|     r2083_7(int *)          = Convert                          : r2083_4
# 2083|     mu2083_8(int *)         = Store[x]                         : &:r2083_1, r2083_7
# 2084|     r2084_1(int)            = Constant[6]                      : 
# 2084|     r2084_2(glval<int *>)   = VariableAddress[x]               : 
# 2084|     r2084_3(int *)          = Load[x]                          : &:r2084_2, ~m?
# 2084|     r2084_4(glval<int>)     = CopyValue                        : r2084_3
# 2084|     mu2084_5(int)           = Store[?]                         : &:r2084_4, r2084_1
# 2085|     r2085_1(glval<unknown>) = FunctionAddress[operator delete] : 
# 2085|     r2085_2(glval<int *>)   = VariableAddress[x]               : 
# 2085|     r2085_3(int *)          = Load[x]                          : &:r2085_2, ~m?
# 2085|     v2085_4(void)           = Call[operator delete]            : func:r2085_1, 0:r2085_3
# 2085|     mu2085_5(unknown)       = ^CallSideEffect                  : ~m?
# 2086|     v2086_1(void)           = NoOp                             : 
# 2082|     v2082_4(void)           = ReturnVoid                       : 
# 2082|     v2082_5(void)           = AliasedUse                       : ~m?
# 2082|     v2082_6(void)           = ExitFunction                     : 

# 2088| void Base2::Base2()
# 2088|   Block 0
# 2088|     v2088_1(void)           = EnterFunction                : 
# 2088|     mu2088_2(unknown)       = AliasedDefinition            : 
# 2088|     mu2088_3(unknown)       = InitializeNonLocal           : 
# 2088|     r2088_4(glval<unknown>) = VariableAddress[#this]       : 
# 2088|     mu2088_5(glval<Base2>)  = InitializeParameter[#this]   : &:r2088_4
# 2088|     r2088_6(glval<Base2>)   = Load[#this]                  : &:r2088_4, ~m?
# 2088|     mu2088_7(Base2)         = InitializeIndirection[#this] : &:r2088_6
# 2088|     v2088_8(void)           = NoOp                         : 
# 2088|     v2088_9(void)           = ReturnIndirection[#this]     : &:r2088_6, ~m?
# 2088|     v2088_10(void)          = ReturnVoid                   : 
# 2088|     v2088_11(void)          = AliasedUse                   : ~m?
# 2088|     v2088_12(void)          = ExitFunction                 : 

# 2090| void Base2::operator delete(void*)
# 2090|   Block 0
# 2090|     v2090_1(void)          = EnterFunction            : 
# 2090|     mu2090_2(unknown)      = AliasedDefinition        : 
# 2090|     mu2090_3(unknown)      = InitializeNonLocal       : 
# 2090|     r2090_4(glval<void *>) = VariableAddress[p]       : 
# 2090|     mu2090_5(void *)       = InitializeParameter[p]   : &:r2090_4
# 2090|     r2090_6(void *)        = Load[p]                  : &:r2090_4, ~m?
# 2090|     mu2090_7(unknown)      = InitializeIndirection[p] : &:r2090_6
# 2091|     v2091_1(void)          = NoOp                     : 
# 2090|     v2090_8(void)          = ReturnIndirection[p]     : &:r2090_6, ~m?
# 2090|     v2090_9(void)          = ReturnVoid               : 
# 2090|     v2090_10(void)         = AliasedUse               : ~m?
# 2090|     v2090_11(void)         = ExitFunction             : 

# 2092| void Base2::~Base2()
# 2092|   Block 0
# 2092|     v2092_1(void)           = EnterFunction                : 
# 2092|     mu2092_2(unknown)       = AliasedDefinition            : 
# 2092|     mu2092_3(unknown)       = InitializeNonLocal           : 
# 2092|     r2092_4(glval<unknown>) = VariableAddress[#this]       : 
# 2092|     mu2092_5(glval<Base2>)  = InitializeParameter[#this]   : &:r2092_4
# 2092|     r2092_6(glval<Base2>)   = Load[#this]                  : &:r2092_4, ~m?
# 2092|     mu2092_7(Base2)         = InitializeIndirection[#this] : &:r2092_6
# 2092|     v2092_8(void)           = NoOp                         : 
# 2092|     v2092_9(void)           = ReturnIndirection[#this]     : &:r2092_6, ~m?
# 2092|     v2092_10(void)          = ReturnVoid                   : 
# 2092|     v2092_11(void)          = AliasedUse                   : ~m?
# 2092|     v2092_12(void)          = ExitFunction                 : 

# 2095| void Derived2::Derived2()
# 2095|   Block 0
# 2095|     v2095_1(void)             = EnterFunction                             : 
# 2095|     mu2095_2(unknown)         = AliasedDefinition                         : 
# 2095|     mu2095_3(unknown)         = InitializeNonLocal                        : 
# 2095|     r2095_4(glval<unknown>)   = VariableAddress[#this]                    : 
# 2095|     mu2095_5(glval<Derived2>) = InitializeParameter[#this]                : &:r2095_4
# 2095|     r2095_6(glval<Derived2>)  = Load[#this]                               : &:r2095_4, ~m?
# 2095|     mu2095_7(Derived2)        = InitializeIndirection[#this]              : &:r2095_6
# 2095|     r2095_8(glval<Base2>)     = ConvertToNonVirtualBase[Derived2 : Base2] : mu2095_5
# 2095|     r2095_9(glval<unknown>)   = FunctionAddress[Base2]                    : 
# 2095|     v2095_10(void)            = Call[Base2]                               : func:r2095_9, this:r2095_8
# 2095|     mu2095_11(unknown)        = ^CallSideEffect                           : ~m?
# 2095|     mu2095_12(Base2)          = ^IndirectMayWriteSideEffect[-1]           : &:r2095_8
# 2095|     v2095_13(void)            = NoOp                                      : 
# 2095|     v2095_14(void)            = ReturnIndirection[#this]                  : &:r2095_6, ~m?
# 2095|     v2095_15(void)            = ReturnVoid                                : 
# 2095|     v2095_16(void)            = AliasedUse                                : ~m?
# 2095|     v2095_17(void)            = ExitFunction                              : 

# 2098| void Derived2::~Derived2()
# 2098|   Block 0
# 2098|     v2098_1(void)             = EnterFunction                             : 
# 2098|     mu2098_2(unknown)         = AliasedDefinition                         : 
# 2098|     mu2098_3(unknown)         = InitializeNonLocal                        : 
# 2098|     r2098_4(glval<unknown>)   = VariableAddress[#this]                    : 
# 2098|     mu2098_5(glval<Derived2>) = InitializeParameter[#this]                : &:r2098_4
# 2098|     r2098_6(glval<Derived2>)  = Load[#this]                               : &:r2098_4, ~m?
# 2098|     mu2098_7(Derived2)        = InitializeIndirection[#this]              : &:r2098_6
# 2098|     v2098_8(void)             = NoOp                                      : 
# 2098|     r2098_9(glval<Base2>)     = ConvertToNonVirtualBase[Derived2 : Base2] : mu2098_5
# 2098|     r2098_10(glval<unknown>)  = FunctionAddress[~Base2]                   : 
# 2098|     v2098_11(void)            = Call[~Base2]                              : func:r2098_10, this:r2098_9
# 2098|     mu2098_12(unknown)        = ^CallSideEffect                           : ~m?
# 2098|     v2098_13(void)            = ReturnIndirection[#this]                  : &:r2098_6, ~m?
# 2098|     v2098_14(void)            = ReturnVoid                                : 
# 2098|     v2098_15(void)            = AliasedUse                                : ~m?
# 2098|     v2098_16(void)            = ExitFunction                              : 

# 2100| void Derived2::operator delete(void*)
# 2100|   Block 0
# 2100|     v2100_1(void)          = EnterFunction            : 
# 2100|     mu2100_2(unknown)      = AliasedDefinition        : 
# 2100|     mu2100_3(unknown)      = InitializeNonLocal       : 
# 2100|     r2100_4(glval<void *>) = VariableAddress[p]       : 
# 2100|     mu2100_5(void *)       = InitializeParameter[p]   : &:r2100_4
# 2100|     r2100_6(void *)        = Load[p]                  : &:r2100_4, ~m?
# 2100|     mu2100_7(unknown)      = InitializeIndirection[p] : &:r2100_6
# 2101|     v2101_1(void)          = NoOp                     : 
# 2100|     v2100_8(void)          = ReturnIndirection[p]     : &:r2100_6, ~m?
# 2100|     v2100_9(void)          = ReturnVoid               : 
# 2100|     v2100_10(void)         = AliasedUse               : ~m?
# 2100|     v2100_11(void)         = ExitFunction             : 

# 2105| int virtual_delete()
# 2105|   Block 0
# 2105|     v2105_1(void)              = EnterFunction                             : 
# 2105|     mu2105_2(unknown)          = AliasedDefinition                         : 
# 2105|     mu2105_3(unknown)          = InitializeNonLocal                        : 
# 2107|     r2107_1(glval<Base2 *>)    = VariableAddress[b1]                       : 
# 2107|     r2107_2(glval<unknown>)    = FunctionAddress[operator new]             : 
# 2107|     r2107_3(unsigned long)     = Constant[8]                               : 
# 2107|     r2107_4(void *)            = Call[operator new]                        : func:r2107_2, 0:r2107_3
# 2107|     mu2107_5(unknown)          = ^CallSideEffect                           : ~m?
# 2107|     mu2107_6(unknown)          = ^InitializeDynamicAllocation              : &:r2107_4
# 2107|     r2107_7(Base2 *)           = Convert                                   : r2107_4
# 2107|     r2107_8(glval<unknown>)    = FunctionAddress[Base2]                    : 
# 2107|     v2107_9(void)              = Call[Base2]                               : func:r2107_8, this:r2107_7
# 2107|     mu2107_10(unknown)         = ^CallSideEffect                           : ~m?
# 2107|     mu2107_11(Base2)           = ^IndirectMayWriteSideEffect[-1]           : &:r2107_7
# 2107|     mu2107_12(Base2 *)         = Store[b1]                                 : &:r2107_1, r2107_7
# 2108|     r2108_1(glval<unknown>)    = VirtualDeleteFunctionAddress              : 
# 2108|     r2108_2(glval<Base2 *>)    = VariableAddress[b1]                       : 
# 2108|     r2108_3(Base2 *)           = Load[b1]                                  : &:r2108_2, ~m?
# 2108|     v2108_4(void)              = Call[?]                                   : func:r2108_1, 0:r2108_3
# 2108|     mu2108_5(unknown)          = ^CallSideEffect                           : ~m?
# 2110|     r2110_1(glval<Base2 *>)    = VariableAddress[b2]                       : 
# 2110|     r2110_2(glval<unknown>)    = FunctionAddress[operator new]             : 
# 2110|     r2110_3(unsigned long)     = Constant[16]                              : 
# 2110|     r2110_4(void *)            = Call[operator new]                        : func:r2110_2, 0:r2110_3
# 2110|     mu2110_5(unknown)          = ^CallSideEffect                           : ~m?
# 2110|     mu2110_6(unknown)          = ^InitializeDynamicAllocation              : &:r2110_4
# 2110|     r2110_7(Derived2 *)        = Convert                                   : r2110_4
# 2110|     r2110_8(glval<unknown>)    = FunctionAddress[Derived2]                 : 
# 2110|     v2110_9(void)              = Call[Derived2]                            : func:r2110_8, this:r2110_7
# 2110|     mu2110_10(unknown)         = ^CallSideEffect                           : ~m?
# 2110|     mu2110_11(Derived2)        = ^IndirectMayWriteSideEffect[-1]           : &:r2110_7
# 2110|     r2110_12(Base2 *)          = ConvertToNonVirtualBase[Derived2 : Base2] : r2110_7
# 2110|     mu2110_13(Base2 *)         = Store[b2]                                 : &:r2110_1, r2110_12
# 2111|     r2111_1(glval<unknown>)    = VirtualDeleteFunctionAddress              : 
# 2111|     r2111_2(glval<Base2 *>)    = VariableAddress[b2]                       : 
# 2111|     r2111_3(Base2 *)           = Load[b2]                                  : &:r2111_2, ~m?
# 2111|     v2111_4(void)              = Call[?]                                   : func:r2111_1, 0:r2111_3
# 2111|     mu2111_5(unknown)          = ^CallSideEffect                           : ~m?
# 2113|     r2113_1(glval<Derived2 *>) = VariableAddress[d]                        : 
# 2113|     r2113_2(glval<unknown>)    = FunctionAddress[operator new]             : 
# 2113|     r2113_3(unsigned long)     = Constant[16]                              : 
# 2113|     r2113_4(void *)            = Call[operator new]                        : func:r2113_2, 0:r2113_3
# 2113|     mu2113_5(unknown)          = ^CallSideEffect                           : ~m?
# 2113|     mu2113_6(unknown)          = ^InitializeDynamicAllocation              : &:r2113_4
# 2113|     r2113_7(Derived2 *)        = Convert                                   : r2113_4
# 2113|     r2113_8(glval<unknown>)    = FunctionAddress[Derived2]                 : 
# 2113|     v2113_9(void)              = Call[Derived2]                            : func:r2113_8, this:r2113_7
# 2113|     mu2113_10(unknown)         = ^CallSideEffect                           : ~m?
# 2113|     mu2113_11(Derived2)        = ^IndirectMayWriteSideEffect[-1]           : &:r2113_7
# 2113|     mu2113_12(Derived2 *)      = Store[d]                                  : &:r2113_1, r2113_7
# 2114|     r2114_1(glval<unknown>)    = VirtualDeleteFunctionAddress              : 
# 2114|     r2114_2(glval<Derived2 *>) = VariableAddress[d]                        : 
# 2114|     r2114_3(Derived2 *)        = Load[d]                                   : &:r2114_2, ~m?
# 2114|     v2114_4(void)              = Call[?]                                   : func:r2114_1, 0:r2114_3
# 2114|     mu2114_5(unknown)          = ^CallSideEffect                           : ~m?
# 2115|     r2115_1(glval<int>)        = VariableAddress[#return]                  : 
# 2115|     mu2115_2(int)              = Uninitialized[#return]                    : &:r2115_1
# 2105|     r2105_4(glval<int>)        = VariableAddress[#return]                  : 
# 2105|     v2105_5(void)              = ReturnValue                               : &:r2105_4, ~m?
# 2105|     v2105_6(void)              = AliasedUse                                : ~m?
# 2105|     v2105_7(void)              = ExitFunction                              : 

# 2119| void test_constant_folding()
# 2119|   Block 0
# 2119|     v2119_1(void)           = EnterFunction                              : 
# 2119|     mu2119_2(unknown)       = AliasedDefinition                          : 
# 2119|     mu2119_3(unknown)       = InitializeNonLocal                         : 
# 2120|     r2120_1(glval<int>)     = VariableAddress[x]                         : 
# 2120|     r2120_2(int)            = Constant[116]                              : 
# 2120|     mu2120_3(int)           = Store[x]                                   : &:r2120_1, r2120_2
# 2121|     r2121_1(glval<unknown>) = FunctionAddress[test_constant_folding_use] : 
# 2121|     r2121_2(int)            = Constant[116]                              : 
# 2121|     v2121_3(void)           = Call[test_constant_folding_use]            : func:r2121_1, 0:r2121_2
# 2121|     mu2121_4(unknown)       = ^CallSideEffect                            : ~m?
# 2122|     v2122_1(void)           = NoOp                                       : 
# 2119|     v2119_4(void)           = ReturnVoid                                 : 
# 2119|     v2119_5(void)           = AliasedUse                                 : ~m?
# 2119|     v2119_6(void)           = ExitFunction                               : 

# 2126| int NonExit()
# 2126|   Block 0
# 2126|     v2126_1(void)           = EnterFunction        : 
# 2126|     mu2126_2(unknown)       = AliasedDefinition    : 
# 2126|     mu2126_3(unknown)       = InitializeNonLocal   : 
# 2127|     r2127_1(glval<int>)     = VariableAddress[x]   : 
# 2127|     r2127_2(glval<unknown>) = FunctionAddress[Add] : 
# 2127|     r2127_3(int)            = Constant[3]          : 
# 2127|     r2127_4(int)            = Constant[4]          : 
# 2127|     r2127_5(int)            = Call[Add]            : func:r2127_2, 0:r2127_3, 1:r2127_4
# 2127|     mu2127_6(unknown)       = ^CallSideEffect      : ~m?
# 2127|     mu2127_7(int)           = Store[x]             : &:r2127_1, r2127_5
# 2128|     r2128_1(glval<int>)     = VariableAddress[x]   : 
# 2128|     r2128_2(int)            = Load[x]              : &:r2128_1, ~m?
# 2128|     r2128_3(int)            = Constant[7]          : 
# 2128|     r2128_4(bool)           = CompareEQ            : r2128_2, r2128_3
# 2128|     v2128_5(void)           = ConditionalBranch    : r2128_4
#-----|   False -> Block 2
#-----|   True -> Block 1

# 2129|   Block 1
# 2129|     r2129_1(glval<unknown>) = FunctionAddress[exit] : 
# 2129|     r2129_2(int)            = Constant[3]           : 
# 2129|     v2129_3(void)           = Call[exit]            : func:r2129_1, 0:r2129_2
# 2129|     mu2129_4(unknown)       = ^CallSideEffect       : ~m?
# 2126|     v2126_4(void)           = Unreached             : 

# 2130|   Block 2
# 2130|     r2130_1(glval<unknown>) = FunctionAddress[VoidFunc] : 
# 2130|     v2130_2(void)           = Call[VoidFunc]            : func:r2130_1
# 2130|     mu2130_3(unknown)       = ^CallSideEffect           : ~m?
# 2131|     r2131_1(glval<int>)     = VariableAddress[#return]  : 
# 2131|     r2131_2(glval<int>)     = VariableAddress[x]        : 
# 2131|     r2131_3(int)            = Load[x]                   : &:r2131_2, ~m?
# 2131|     mu2131_4(int)           = Store[#return]            : &:r2131_1, r2131_3
# 2126|     r2126_5(glval<int>)     = VariableAddress[#return]  : 
# 2126|     v2126_6(void)           = ReturnValue               : &:r2126_5, ~m?
# 2126|     v2126_7(void)           = AliasedUse                : ~m?
# 2126|     v2126_8(void)           = ExitFunction              : 

# 2134| void CallsNonExit()
# 2134|   Block 0
# 2134|     v2134_1(void)           = EnterFunction             : 
# 2134|     mu2134_2(unknown)       = AliasedDefinition         : 
# 2134|     mu2134_3(unknown)       = InitializeNonLocal        : 
# 2135|     r2135_1(glval<unknown>) = FunctionAddress[VoidFunc] : 
# 2135|     v2135_2(void)           = Call[VoidFunc]            : func:r2135_1
# 2135|     mu2135_3(unknown)       = ^CallSideEffect           : ~m?
# 2136|     r2136_1(glval<unknown>) = FunctionAddress[exit]     : 
# 2136|     r2136_2(int)            = Constant[3]               : 
# 2136|     v2136_3(void)           = Call[exit]                : func:r2136_1, 0:r2136_2
# 2136|     mu2136_4(unknown)       = ^CallSideEffect           : ~m?
# 2134|     v2134_4(void)           = Unreached                 : 

# 2137|   Block 1
# 2137|     v2137_1(void) = NoOp         : 
# 2134|     v2134_5(void) = ReturnVoid   : 
# 2134|     v2134_6(void) = AliasedUse   : ~m?
# 2134|     v2134_7(void) = ExitFunction : 

# 2139| int TransNonExit()
# 2139|   Block 0
# 2139|     v2139_1(void)           = EnterFunction        : 
# 2139|     mu2139_2(unknown)       = AliasedDefinition    : 
# 2139|     mu2139_3(unknown)       = InitializeNonLocal   : 
# 2140|     r2140_1(glval<int>)     = VariableAddress[x]   : 
# 2140|     r2140_2(glval<unknown>) = FunctionAddress[Add] : 
# 2140|     r2140_3(int)            = Constant[3]          : 
# 2140|     r2140_4(int)            = Constant[4]          : 
# 2140|     r2140_5(int)            = Call[Add]            : func:r2140_2, 0:r2140_3, 1:r2140_4
# 2140|     mu2140_6(unknown)       = ^CallSideEffect      : ~m?
# 2140|     mu2140_7(int)           = Store[x]             : &:r2140_1, r2140_5
# 2141|     r2141_1(glval<int>)     = VariableAddress[x]   : 
# 2141|     r2141_2(int)            = Load[x]              : &:r2141_1, ~m?
# 2141|     r2141_3(int)            = Constant[7]          : 
# 2141|     r2141_4(bool)           = CompareEQ            : r2141_2, r2141_3
# 2141|     v2141_5(void)           = ConditionalBranch    : r2141_4
#-----|   False -> Block 2
#-----|   True -> Block 1

# 2142|   Block 1
# 2142|     r2142_1(glval<unknown>) = FunctionAddress[CallsNonExit] : 
# 2142|     v2142_2(void)           = Call[CallsNonExit]            : func:r2142_1
# 2142|     mu2142_3(unknown)       = ^CallSideEffect               : ~m?
#-----|   Goto -> Block 2

# 2143|   Block 2
# 2143|     r2143_1(glval<unknown>) = FunctionAddress[VoidFunc] : 
# 2143|     v2143_2(void)           = Call[VoidFunc]            : func:r2143_1
# 2143|     mu2143_3(unknown)       = ^CallSideEffect           : ~m?
# 2144|     r2144_1(glval<int>)     = VariableAddress[#return]  : 
# 2144|     r2144_2(glval<int>)     = VariableAddress[x]        : 
# 2144|     r2144_3(int)            = Load[x]                   : &:r2144_2, ~m?
# 2144|     mu2144_4(int)           = Store[#return]            : &:r2144_1, r2144_3
# 2139|     r2139_4(glval<int>)     = VariableAddress[#return]  : 
# 2139|     v2139_5(void)           = ReturnValue               : &:r2139_4, ~m?
# 2139|     v2139_6(void)           = AliasedUse                : ~m?
# 2139|     v2139_7(void)           = ExitFunction              : 

# 2147| void newArrayCorrectType(size_t)
# 2147|   Block 0
# 2147|     v2147_1(void)                          = EnterFunction                   : 
# 2147|     mu2147_2(unknown)                      = AliasedDefinition               : 
# 2147|     mu2147_3(unknown)                      = InitializeNonLocal              : 
# 2147|     r2147_4(glval<unsigned long>)          = VariableAddress[n]              : 
# 2147|     mu2147_5(unsigned long)                = InitializeParameter[n]          : &:r2147_4
# 2148|     r2148_1(glval<unknown>)                = FunctionAddress[operator new[]] : 
# 2148|     r2148_2(glval<unsigned long>)          = VariableAddress[n]              : 
# 2148|     r2148_3(unsigned long)                 = Load[n]                         : &:r2148_2, ~m?
# 2148|     r2148_4(unsigned long)                 = Constant[4]                     : 
# 2148|     r2148_5(unsigned long)                 = Mul                             : r2148_3, r2148_4
# 2148|     r2148_6(void *)                        = Call[operator new[]]            : func:r2148_1, 0:r2148_5
# 2148|     mu2148_7(unknown)                      = ^CallSideEffect                 : ~m?
# 2148|     mu2148_8(unknown)                      = ^InitializeDynamicAllocation    : &:r2148_6
# 2148|     r2148_9(int *)                         = Convert                         : r2148_6
# 2149|     r2149_1(glval<unknown>)                = FunctionAddress[operator new[]] : 
# 2149|     r2149_2(glval<unsigned long>)          = VariableAddress[n]              : 
# 2149|     r2149_3(unsigned long)                 = Load[n]                         : &:r2149_2, ~m?
# 2149|     r2149_4(unsigned long)                 = Constant[4]                     : 
# 2149|     r2149_5(unsigned long)                 = Mul                             : r2149_3, r2149_4
# 2149|     r2149_6(float)                         = Constant[1.0]                   : 
# 2149|     r2149_7(void *)                        = Call[operator new[]]            : func:r2149_1, 0:r2149_5, 1:r2149_6
# 2149|     mu2149_8(unknown)                      = ^CallSideEffect                 : ~m?
# 2149|     mu2149_9(unknown)                      = ^InitializeDynamicAllocation    : &:r2149_7
# 2149|     r2149_10(int *)                        = Convert                         : r2149_7
# 2150|     r2150_1(glval<unknown>)                = FunctionAddress[operator new[]] : 
# 2150|     r2150_2(glval<unsigned long>)          = VariableAddress[n]              : 
# 2150|     r2150_3(unsigned long)                 = Load[n]                         : &:r2150_2, ~m?
# 2150|     r2150_4(unsigned long)                 = Constant[8]                     : 
# 2150|     r2150_5(unsigned long)                 = Mul                             : r2150_3, r2150_4
# 2150|     r2150_6(void *)                        = Call[operator new[]]            : func:r2150_1, 0:r2150_5
# 2150|     mu2150_7(unknown)                      = ^CallSideEffect                 : ~m?
# 2150|     mu2150_8(unknown)                      = ^InitializeDynamicAllocation    : &:r2150_6
# 2150|     r2150_9(String *)                      = Convert                         : r2150_6
# 2151|     r2151_1(glval<unknown>)                = FunctionAddress[operator new[]] : 
# 2151|     r2151_2(glval<unsigned long>)          = VariableAddress[n]              : 
# 2151|     r2151_3(unsigned long)                 = Load[n]                         : &:r2151_2, ~m?
# 2151|     r2151_4(unsigned long)                 = Constant[256]                   : 
# 2151|     r2151_5(unsigned long)                 = Mul                             : r2151_3, r2151_4
# 2151|     r2151_6(align_val_t)                   = Constant[128]                   : 
# 2151|     r2151_7(void *)                        = Call[operator new[]]            : func:r2151_1, 0:r2151_5, 1:r2151_6
# 2151|     mu2151_8(unknown)                      = ^CallSideEffect                 : ~m?
# 2151|     mu2151_9(unknown)                      = ^InitializeDynamicAllocation    : &:r2151_7
# 2151|     r2151_10(Overaligned *)                = Convert                         : r2151_7
# 2152|     r2152_1(glval<unknown>)                = FunctionAddress[operator new[]] : 
# 2152|     r2152_2(glval<unsigned long>)          = VariableAddress[n]              : 
# 2152|     r2152_3(unsigned long)                 = Load[n]                         : &:r2152_2, ~m?
# 2152|     r2152_4(unsigned long)                 = Constant[1]                     : 
# 2152|     r2152_5(unsigned long)                 = Mul                             : r2152_3, r2152_4
# 2152|     r2152_6(void *)                        = Call[operator new[]]            : func:r2152_1, 0:r2152_5
# 2152|     mu2152_7(unknown)                      = ^CallSideEffect                 : ~m?
# 2152|     mu2152_8(unknown)                      = ^InitializeDynamicAllocation    : &:r2152_6
# 2152|     r2152_9(DefaultCtorWithDefaultParam *) = Convert                         : r2152_6
# 2153|     r2153_1(glval<unknown>)                = FunctionAddress[operator new[]] : 
# 2153|     r2153_2(glval<unsigned long>)          = VariableAddress[n]              : 
# 2153|     r2153_3(unsigned long)                 = Load[n]                         : &:r2153_2, ~m?
# 2153|     r2153_4(unsigned long)                 = Constant[4]                     : 
# 2153|     r2153_5(unsigned long)                 = Mul                             : r2153_3, r2153_4
# 2153|     r2153_6(void *)                        = Call[operator new[]]            : func:r2153_1, 0:r2153_5
# 2153|     mu2153_7(unknown)                      = ^CallSideEffect                 : ~m?
# 2153|     mu2153_8(unknown)                      = ^InitializeDynamicAllocation    : &:r2153_6
# 2153|     r2153_9(int *)                         = Convert                         : r2153_6
# 2154|     v2154_1(void)                          = NoOp                            : 
# 2147|     v2147_6(void)                          = ReturnVoid                      : 
# 2147|     v2147_7(void)                          = AliasedUse                      : ~m?
# 2147|     v2147_8(void)                          = ExitFunction                    : 

# 2158| char* test_strtod(char*)
# 2158|   Block 0
# 2158|     v2158_1(void)           = EnterFunction                  : 
# 2158|     mu2158_2(unknown)       = AliasedDefinition              : 
# 2158|     mu2158_3(unknown)       = InitializeNonLocal             : 
# 2158|     r2158_4(glval<char *>)  = VariableAddress[s]             : 
# 2158|     mu2158_5(char *)        = InitializeParameter[s]         : &:r2158_4
# 2158|     r2158_6(char *)         = Load[s]                        : &:r2158_4, ~m?
# 2158|     mu2158_7(unknown)       = InitializeIndirection[s]       : &:r2158_6
# 2159|     r2159_1(glval<char *>)  = VariableAddress[end]           : 
# 2159|     mu2159_2(char *)        = Uninitialized[end]             : &:r2159_1
# 2160|     r2160_1(glval<double>)  = VariableAddress[d]             : 
# 2160|     r2160_2(glval<unknown>) = FunctionAddress[strtod]        : 
# 2160|     r2160_3(glval<char *>)  = VariableAddress[s]             : 
# 2160|     r2160_4(char *)         = Load[s]                        : &:r2160_3, ~m?
# 2160|     r2160_5(char *)         = Convert                        : r2160_4
# 2160|     r2160_6(glval<char *>)  = VariableAddress[end]           : 
# 2160|     r2160_7(char **)        = CopyValue                      : r2160_6
# 2160|     r2160_8(double)         = Call[strtod]                   : func:r2160_2, 0:r2160_5, 1:r2160_7
# 2160|     v2160_9(void)           = ^BufferReadSideEffect[0]       : &:r2160_5, ~m?
# 2160|     mu2160_10(char *)       = ^IndirectMayWriteSideEffect[1] : &:r2160_7
# 2160|     mu2160_11(double)       = Store[d]                       : &:r2160_1, r2160_8
# 2161|     r2161_1(glval<char *>)  = VariableAddress[#return]       : 
# 2161|     r2161_2(glval<char *>)  = VariableAddress[end]           : 
# 2161|     r2161_3(char *)         = Load[end]                      : &:r2161_2, ~m?
# 2161|     mu2161_4(char *)        = Store[#return]                 : &:r2161_1, r2161_3
# 2158|     v2158_8(void)           = ReturnIndirection[s]           : &:r2158_6, ~m?
# 2158|     r2158_9(glval<char *>)  = VariableAddress[#return]       : 
# 2158|     v2158_10(void)          = ReturnValue                    : &:r2158_9, ~m?
# 2158|     v2158_11(void)          = AliasedUse                     : ~m?
# 2158|     v2158_12(void)          = ExitFunction                   : 

# 2168| void call_as_child_of_ConditionDeclExpr()
# 2168|   Block 0
# 2168|     v2168_1(void)                   = EnterFunction                   : 
# 2168|     mu2168_2(unknown)               = AliasedDefinition               : 
# 2168|     mu2168_3(unknown)               = InitializeNonLocal              : 
# 2169|     r2169_1(glval<HasOperatorBool>) = VariableAddress[b]              : 
# 2169|     r2169_2(HasOperatorBool)        = Constant[0]                     : 
# 2169|     mu2169_3(HasOperatorBool)       = Store[b]                        : &:r2169_1, r2169_2
# 2169|     r2169_4(glval<HasOperatorBool>) = VariableAddress[b]              : 
# 2169|     r2169_5(glval<unknown>)         = FunctionAddress[operator bool]  : 
# 2169|     r2169_6(bool)                   = Call[operator bool]             : func:r2169_5, this:r2169_4
# 2169|     mu2169_7(unknown)               = ^CallSideEffect                 : ~m?
# 2169|     v2169_8(void)                   = ^IndirectReadSideEffect[-1]     : &:r2169_4, ~m?
# 2169|     mu2169_9(HasOperatorBool)       = ^IndirectMayWriteSideEffect[-1] : &:r2169_4
# 2169|     r2169_10(bool)                  = CopyValue                       : r2169_6
# 2169|     v2169_11(void)                  = ConditionalBranch               : r2169_10
#-----|   False -> Block 2
#-----|   True -> Block 1

# 2169|   Block 1
# 2169|     v2169_12(void) = NoOp : 
#-----|   Goto -> Block 2

# 2170|   Block 2
# 2170|     v2170_1(void) = NoOp         : 
# 2168|     v2168_4(void) = ReturnVoid   : 
# 2168|     v2168_5(void) = AliasedUse   : ~m?
# 2168|     v2168_6(void) = ExitFunction : 

# 2172| void ClassWithDestructor::ClassWithDestructor(ClassWithDestructor const&)
# 2172|   Block 0
# 2172|     v2172_1(void)                         = EnterFunction                                : 
# 2172|     mu2172_2(unknown)                     = AliasedDefinition                            : 
# 2172|     mu2172_3(unknown)                     = InitializeNonLocal                           : 
# 2172|     r2172_4(glval<unknown>)               = VariableAddress[#this]                       : 
# 2172|     mu2172_5(glval<ClassWithDestructor>)  = InitializeParameter[#this]                   : &:r2172_4
# 2172|     r2172_6(glval<ClassWithDestructor>)   = Load[#this]                                  : &:r2172_4, ~m?
# 2172|     mu2172_7(ClassWithDestructor)         = InitializeIndirection[#this]                 : &:r2172_6
#-----|     r0_1(glval<ClassWithDestructor &>)    = VariableAddress[(unnamed parameter 0)]       : 
#-----|     mu0_2(ClassWithDestructor &)          = InitializeParameter[(unnamed parameter 0)]   : &:r0_1
#-----|     r0_3(ClassWithDestructor &)           = Load[(unnamed parameter 0)]                  : &:r0_1, ~m?
#-----|     mu0_4(unknown)                        = InitializeIndirection[(unnamed parameter 0)] : &:r0_3
# 2172|     r2172_8(glval<char *>)                = FieldAddress[x]                              : mu2172_5
# 2172|     r2172_9(glval<ClassWithDestructor &>) = VariableAddress[(unnamed parameter 0)]       : 
# 2172|     r2172_10(ClassWithDestructor &)       = Load[(unnamed parameter 0)]                  : &:r2172_9, ~m?
# 2172|     r2172_11(glval<ClassWithDestructor>)  = CopyValue                                    : r2172_10
# 2172|     r2172_12(glval<char *>)               = FieldAddress[x]                              : r2172_11
# 2172|     r2172_13(char *)                      = Load[?]                                      : &:r2172_12, ~m?
# 2172|     mu2172_14(char *)                     = Store[?]                                     : &:r2172_8, r2172_13
# 2172|     v2172_15(void)                        = NoOp                                         : 
# 2172|     v2172_16(void)                        = ReturnIndirection[#this]                     : &:r2172_6, ~m?
#-----|     v0_5(void)                            = ReturnIndirection[(unnamed parameter 0)]     : &:r0_3, ~m?
# 2172|     v2172_17(void)                        = ReturnVoid                                   : 
# 2172|     v2172_18(void)                        = AliasedUse                                   : ~m?
# 2172|     v2172_19(void)                        = ExitFunction                                 : 

# 2175| void ClassWithDestructor::ClassWithDestructor()
# 2175|   Block 0
# 2175|     v2175_1(void)                        = EnterFunction                 : 
# 2175|     mu2175_2(unknown)                    = AliasedDefinition             : 
# 2175|     mu2175_3(unknown)                    = InitializeNonLocal            : 
# 2175|     r2175_4(glval<unknown>)              = VariableAddress[#this]        : 
# 2175|     mu2175_5(glval<ClassWithDestructor>) = InitializeParameter[#this]    : &:r2175_4
# 2175|     r2175_6(glval<ClassWithDestructor>)  = Load[#this]                   : &:r2175_4, ~m?
# 2175|     mu2175_7(ClassWithDestructor)        = InitializeIndirection[#this]  : &:r2175_6
# 2175|     r2175_8(glval<unknown>)              = FunctionAddress[operator new] : 
# 2175|     r2175_9(unsigned long)               = Constant[1]                   : 
# 2175|     r2175_10(void *)                     = Call[operator new]            : func:r2175_8, 0:r2175_9
# 2175|     mu2175_11(unknown)                   = ^CallSideEffect               : ~m?
# 2175|     mu2175_12(unknown)                   = ^InitializeDynamicAllocation  : &:r2175_10
# 2175|     r2175_13(char *)                     = Convert                       : r2175_10
# 2175|     r2175_14(glval<unknown>)             = VariableAddress[#this]        : 
# 2175|     r2175_15(ClassWithDestructor *)      = Load[#this]                   : &:r2175_14, ~m?
# 2175|     r2175_16(glval<char *>)              = FieldAddress[x]               : r2175_15
# 2175|     mu2175_17(char *)                    = Store[?]                      : &:r2175_16, r2175_13
# 2175|     v2175_18(void)                       = NoOp                          : 
# 2175|     v2175_19(void)                       = ReturnIndirection[#this]      : &:r2175_6, ~m?
# 2175|     v2175_20(void)                       = ReturnVoid                    : 
# 2175|     v2175_21(void)                       = AliasedUse                    : ~m?
# 2175|     v2175_22(void)                       = ExitFunction                  : 

# 2176| void ClassWithDestructor::~ClassWithDestructor()
# 2176|   Block 0
# 2176|     v2176_1(void)                        = EnterFunction                    : 
# 2176|     mu2176_2(unknown)                    = AliasedDefinition                : 
# 2176|     mu2176_3(unknown)                    = InitializeNonLocal               : 
# 2176|     r2176_4(glval<unknown>)              = VariableAddress[#this]           : 
# 2176|     mu2176_5(glval<ClassWithDestructor>) = InitializeParameter[#this]       : &:r2176_4
# 2176|     r2176_6(glval<ClassWithDestructor>)  = Load[#this]                      : &:r2176_4, ~m?
# 2176|     mu2176_7(ClassWithDestructor)        = InitializeIndirection[#this]     : &:r2176_6
# 2176|     r2176_8(glval<unknown>)              = FunctionAddress[operator delete] : 
# 2176|     r2176_9(glval<unknown>)              = VariableAddress[#this]           : 
# 2176|     r2176_10(ClassWithDestructor *)      = Load[#this]                      : &:r2176_9, ~m?
# 2176|     r2176_11(glval<char *>)              = FieldAddress[x]                  : r2176_10
# 2176|     r2176_12(char *)                     = Load[?]                          : &:r2176_11, ~m?
# 2176|     v2176_13(void)                       = Call[operator delete]            : func:r2176_8, 0:r2176_12
# 2176|     mu2176_14(unknown)                   = ^CallSideEffect                  : ~m?
# 2176|     v2176_15(void)                       = NoOp                             : 
# 2176|     v2176_16(void)                       = ReturnIndirection[#this]         : &:r2176_6, ~m?
# 2176|     v2176_17(void)                       = ReturnVoid                       : 
# 2176|     v2176_18(void)                       = AliasedUse                       : ~m?
# 2176|     v2176_19(void)                       = ExitFunction                     : 

# 2178| void ClassWithDestructor::set_x(char)
# 2178|   Block 0
# 2178|     v2178_1(void)                        = EnterFunction                : 
# 2178|     mu2178_2(unknown)                    = AliasedDefinition            : 
# 2178|     mu2178_3(unknown)                    = InitializeNonLocal           : 
# 2178|     r2178_4(glval<unknown>)              = VariableAddress[#this]       : 
# 2178|     mu2178_5(glval<ClassWithDestructor>) = InitializeParameter[#this]   : &:r2178_4
# 2178|     r2178_6(glval<ClassWithDestructor>)  = Load[#this]                  : &:r2178_4, ~m?
# 2178|     mu2178_7(ClassWithDestructor)        = InitializeIndirection[#this] : &:r2178_6
# 2178|     r2178_8(glval<char>)                 = VariableAddress[y]           : 
# 2178|     mu2178_9(char)                       = InitializeParameter[y]       : &:r2178_8
# 2178|     r2178_10(glval<char>)                = VariableAddress[y]           : 
# 2178|     r2178_11(char)                       = Load[y]                      : &:r2178_10, ~m?
# 2178|     r2178_12(glval<unknown>)             = VariableAddress[#this]       : 
# 2178|     r2178_13(ClassWithDestructor *)      = Load[#this]                  : &:r2178_12, ~m?
# 2178|     r2178_14(glval<char *>)              = FieldAddress[x]              : r2178_13
# 2178|     r2178_15(char *)                     = Load[?]                      : &:r2178_14, ~m?
# 2178|     r2178_16(glval<char>)                = CopyValue                    : r2178_15
# 2178|     mu2178_17(char)                      = Store[?]                     : &:r2178_16, r2178_11
# 2178|     v2178_18(void)                       = NoOp                         : 
# 2178|     v2178_19(void)                       = ReturnIndirection[#this]     : &:r2178_6, ~m?
# 2178|     v2178_20(void)                       = ReturnVoid                   : 
# 2178|     v2178_21(void)                       = AliasedUse                   : ~m?
# 2178|     v2178_22(void)                       = ExitFunction                 : 

# 2179| char ClassWithDestructor::get_x()
# 2179|   Block 0
# 2179|     v2179_1(void)                        = EnterFunction                : 
# 2179|     mu2179_2(unknown)                    = AliasedDefinition            : 
# 2179|     mu2179_3(unknown)                    = InitializeNonLocal           : 
# 2179|     r2179_4(glval<unknown>)              = VariableAddress[#this]       : 
# 2179|     mu2179_5(glval<ClassWithDestructor>) = InitializeParameter[#this]   : &:r2179_4
# 2179|     r2179_6(glval<ClassWithDestructor>)  = Load[#this]                  : &:r2179_4, ~m?
# 2179|     mu2179_7(ClassWithDestructor)        = InitializeIndirection[#this] : &:r2179_6
# 2179|     r2179_8(glval<char>)                 = VariableAddress[#return]     : 
# 2179|     r2179_9(glval<unknown>)              = VariableAddress[#this]       : 
# 2179|     r2179_10(ClassWithDestructor *)      = Load[#this]                  : &:r2179_9, ~m?
# 2179|     r2179_11(glval<char *>)              = FieldAddress[x]              : r2179_10
# 2179|     r2179_12(char *)                     = Load[?]                      : &:r2179_11, ~m?
# 2179|     r2179_13(char)                       = Load[?]                      : &:r2179_12, ~m?
# 2179|     mu2179_14(char)                      = Store[#return]               : &:r2179_8, r2179_13
# 2179|     v2179_15(void)                       = ReturnIndirection[#this]     : &:r2179_6, ~m?
# 2179|     r2179_16(glval<char>)                = VariableAddress[#return]     : 
# 2179|     v2179_17(void)                       = ReturnValue                  : &:r2179_16, ~m?
# 2179|     v2179_18(void)                       = AliasedUse                   : ~m?
# 2179|     v2179_19(void)                       = ExitFunction                 : 

# 2182| bool initialization_with_destructor_bool
# 2182|   Block 0
# 2182|     v2182_1(void)        = EnterFunction                                        : 
# 2182|     mu2182_2(unknown)    = AliasedDefinition                                    : 
# 2182|     r2182_3(glval<bool>) = VariableAddress[initialization_with_destructor_bool] : 
# 2182|     r2182_4(bool)        = Constant[1]                                          : 
# 2182|     mu2182_5(bool)       = Store[initialization_with_destructor_bool]           : &:r2182_3, r2182_4
# 2182|     v2182_6(void)        = ReturnVoid                                           : 
# 2182|     v2182_7(void)        = AliasedUse                                           : ~m?
# 2182|     v2182_8(void)        = ExitFunction                                         : 

# 2184| void initialization_with_destructor(bool, char)
# 2184|   Block 0
# 2184|     v2184_1(void)                       = EnterFunction                        : 
# 2184|     mu2184_2(unknown)                   = AliasedDefinition                    : 
# 2184|     mu2184_3(unknown)                   = InitializeNonLocal                   : 
# 2184|     r2184_4(glval<bool>)                = VariableAddress[b]                   : 
# 2184|     mu2184_5(bool)                      = InitializeParameter[b]               : &:r2184_4
# 2184|     r2184_6(glval<char>)                = VariableAddress[c]                   : 
# 2184|     mu2184_7(char)                      = InitializeParameter[c]               : &:r2184_6
# 2185|     r2185_1(glval<ClassWithDestructor>) = VariableAddress[x]                   : 
# 2185|     mu2185_2(ClassWithDestructor)       = Uninitialized[x]                     : &:r2185_1
# 2185|     r2185_3(glval<unknown>)             = FunctionAddress[ClassWithDestructor] : 
# 2185|     v2185_4(void)                       = Call[ClassWithDestructor]            : func:r2185_3, this:r2185_1
# 2185|     mu2185_5(unknown)                   = ^CallSideEffect                      : ~m?
# 2185|     mu2185_6(ClassWithDestructor)       = ^IndirectMayWriteSideEffect[-1]      : &:r2185_1
# 2185|     r2185_7(glval<bool>)                = VariableAddress[b]                   : 
# 2185|     r2185_8(bool)                       = Load[b]                              : &:r2185_7, ~m?
# 2185|     v2185_9(void)                       = ConditionalBranch                    : r2185_8
#-----|   False -> Block 3
#-----|   True -> Block 2

# 2184|   Block 1
# 2184|     v2184_8(void)  = ReturnVoid   : 
# 2184|     v2184_9(void)  = AliasedUse   : ~m?
# 2184|     v2184_10(void) = ExitFunction : 

# 2186|   Block 2
# 2186|     r2186_1(glval<ClassWithDestructor>) = VariableAddress[x]                    : 
# 2186|     r2186_2(glval<unknown>)             = FunctionAddress[set_x]                : 
# 2186|     r2186_3(char)                       = Constant[97]                          : 
# 2186|     v2186_4(void)                       = Call[set_x]                           : func:r2186_2, this:r2186_1, 0:r2186_3
# 2186|     mu2186_5(unknown)                   = ^CallSideEffect                       : ~m?
# 2186|     v2186_6(void)                       = ^IndirectReadSideEffect[-1]           : &:r2186_1, ~m?
# 2186|     mu2186_7(ClassWithDestructor)       = ^IndirectMayWriteSideEffect[-1]       : &:r2186_1
# 2186|     r2186_8(glval<ClassWithDestructor>) = VariableAddress[x]                    : 
# 2186|     r2186_9(glval<unknown>)             = FunctionAddress[~ClassWithDestructor] : 
# 2186|     v2186_10(void)                      = Call[~ClassWithDestructor]            : func:r2186_9, this:r2186_8
# 2186|     mu2186_11(unknown)                  = ^CallSideEffect                       : ~m?
# 2186|     v2186_12(void)                      = ^IndirectReadSideEffect[-1]           : &:r2186_8, ~m?
# 2186|     mu2186_13(ClassWithDestructor)      = ^IndirectMayWriteSideEffect[-1]       : &:r2186_8
#-----|   Goto -> Block 3

# 2188|   Block 3
# 2188|     r2188_1(glval<ClassWithDestructor>) = VariableAddress[x]                   : 
# 2188|     mu2188_2(ClassWithDestructor)       = Uninitialized[x]                     : &:r2188_1
# 2188|     r2188_3(glval<unknown>)             = FunctionAddress[ClassWithDestructor] : 
# 2188|     v2188_4(void)                       = Call[ClassWithDestructor]            : func:r2188_3, this:r2188_1
# 2188|     mu2188_5(unknown)                   = ^CallSideEffect                      : ~m?
# 2188|     mu2188_6(ClassWithDestructor)       = ^IndirectMayWriteSideEffect[-1]      : &:r2188_1
# 2188|     r2188_7(bool)                       = Constant[1]                          : 
# 2188|     v2188_8(void)                       = ConditionalBranch                    : r2188_7
#-----|   False -> Block 6
#-----|   True -> Block 4

# 2189|   Block 4
# 2189|     r2189_1(glval<ClassWithDestructor>) = VariableAddress[x]              : 
# 2189|     r2189_2(glval<unknown>)             = FunctionAddress[set_x]          : 
# 2189|     r2189_3(char)                       = Constant[97]                    : 
# 2189|     v2189_4(void)                       = Call[set_x]                     : func:r2189_2, this:r2189_1, 0:r2189_3
# 2189|     mu2189_5(unknown)                   = ^CallSideEffect                 : ~m?
# 2189|     v2189_6(void)                       = ^IndirectReadSideEffect[-1]     : &:r2189_1, ~m?
# 2189|     mu2189_7(ClassWithDestructor)       = ^IndirectMayWriteSideEffect[-1] : &:r2189_1
#-----|   Goto -> Block 6

# 2189|   Block 5
# 2189|     r2189_8(glval<ClassWithDestructor>) = VariableAddress[x]                    : 
# 2189|     r2189_9(glval<unknown>)             = FunctionAddress[~ClassWithDestructor] : 
# 2189|     v2189_10(void)                      = Call[~ClassWithDestructor]            : func:r2189_9, this:r2189_8
# 2189|     mu2189_11(unknown)                  = ^CallSideEffect                       : ~m?
# 2189|     v2189_12(void)                      = ^IndirectReadSideEffect[-1]           : &:r2189_8, ~m?
# 2189|     mu2189_13(ClassWithDestructor)      = ^IndirectMayWriteSideEffect[-1]       : &:r2189_8
#-----|   Goto -> Block 6

# 2191|   Block 6
# 2191|     r2191_1(glval<ClassWithDestructor>) = VariableAddress[x]                   : 
# 2191|     mu2191_2(ClassWithDestructor)       = Uninitialized[x]                     : &:r2191_1
# 2191|     r2191_3(glval<unknown>)             = FunctionAddress[ClassWithDestructor] : 
# 2191|     v2191_4(void)                       = Call[ClassWithDestructor]            : func:r2191_3, this:r2191_1
# 2191|     mu2191_5(unknown)                   = ^CallSideEffect                      : ~m?
# 2191|     mu2191_6(ClassWithDestructor)       = ^IndirectMayWriteSideEffect[-1]      : &:r2191_1
# 2191|     r2191_7(glval<char>)                = VariableAddress[c]                   : 
# 2191|     r2191_8(char)                       = Load[c]                              : &:r2191_7, ~m?
# 2191|     r2191_9(int)                        = Convert                              : r2191_8
# 2191|     v2191_10(void)                      = Switch                               : r2191_9
#-----|   Case[97] -> Block 7
#-----|   Default -> Block 8

# 2192|   Block 7
# 2192|     v2192_1(void)                       = NoOp                            : 
# 2193|     r2193_1(glval<ClassWithDestructor>) = VariableAddress[x]              : 
# 2193|     r2193_2(glval<unknown>)             = FunctionAddress[set_x]          : 
# 2193|     r2193_3(char)                       = Constant[97]                    : 
# 2193|     v2193_4(void)                       = Call[set_x]                     : func:r2193_2, this:r2193_1, 0:r2193_3
# 2193|     mu2193_5(unknown)                   = ^CallSideEffect                 : ~m?
# 2193|     v2193_6(void)                       = ^IndirectReadSideEffect[-1]     : &:r2193_1, ~m?
# 2193|     mu2193_7(ClassWithDestructor)       = ^IndirectMayWriteSideEffect[-1] : &:r2193_1
# 2194|     v2194_1(void)                       = NoOp                            : 
#-----|   Goto -> Block 10

# 2195|   Block 8
# 2195|     v2195_1(void)                       = NoOp                            : 
# 2196|     r2196_1(glval<ClassWithDestructor>) = VariableAddress[x]              : 
# 2196|     r2196_2(glval<unknown>)             = FunctionAddress[set_x]          : 
# 2196|     r2196_3(char)                       = Constant[98]                    : 
# 2196|     v2196_4(void)                       = Call[set_x]                     : func:r2196_2, this:r2196_1, 0:r2196_3
# 2196|     mu2196_5(unknown)                   = ^CallSideEffect                 : ~m?
# 2196|     v2196_6(void)                       = ^IndirectReadSideEffect[-1]     : &:r2196_1, ~m?
# 2196|     mu2196_7(ClassWithDestructor)       = ^IndirectMayWriteSideEffect[-1] : &:r2196_1
# 2197|     v2197_1(void)                       = NoOp                            : 
#-----|   Goto -> Block 10

# 2198|   Block 9
# 2198|     r2198_1(glval<ClassWithDestructor>) = VariableAddress[x]                    : 
# 2198|     r2198_2(glval<unknown>)             = FunctionAddress[~ClassWithDestructor] : 
# 2198|     v2198_3(void)                       = Call[~ClassWithDestructor]            : func:r2198_2, this:r2198_1
# 2198|     mu2198_4(unknown)                   = ^CallSideEffect                       : ~m?
# 2198|     v2198_5(void)                       = ^IndirectReadSideEffect[-1]           : &:r2198_1, ~m?
# 2198|     mu2198_6(ClassWithDestructor)       = ^IndirectMayWriteSideEffect[-1]       : &:r2198_1
#-----|   Goto -> Block 10

# 2198|   Block 10
# 2198|     v2198_7(void)                                                                                                                       = NoOp                                 : 
# 2200|     r2200_1(glval<ClassWithDestructor>)                                                                                                 = VariableAddress[x]                   : 
# 2200|     mu2200_2(ClassWithDestructor)                                                                                                       = Uninitialized[x]                     : &:r2200_1
# 2200|     r2200_3(glval<unknown>)                                                                                                             = FunctionAddress[ClassWithDestructor] : 
# 2200|     v2200_4(void)                                                                                                                       = Call[ClassWithDestructor]            : func:r2200_3, this:r2200_1
# 2200|     mu2200_5(unknown)                                                                                                                   = ^CallSideEffect                      : ~m?
# 2200|     mu2200_6(ClassWithDestructor)                                                                                                       = ^IndirectMayWriteSideEffect[-1]      : &:r2200_1
# 2201|     r2201_1(glval<vector<ClassWithDestructor>>)                                                                                         = VariableAddress[ys]                  : 
# 2201|     mu2201_2(vector<ClassWithDestructor>)                                                                                               = Uninitialized[ys]                    : &:r2201_1
# 2201|     r2201_3(glval<unknown>)                                                                                                             = FunctionAddress[vector]              : 
# 2201|     r2201_4(glval<ClassWithDestructor>)                                                                                                 = VariableAddress[#temp2201:45]        : 
# 2201|     r2201_5(glval<ClassWithDestructor>)                                                                                                 = VariableAddress[x]                   : 
# 2201|     r2201_6(ClassWithDestructor)                                                                                                        = Load[x]                              : &:r2201_5, ~m?
# 2201|     mu2201_7(ClassWithDestructor)                                                                                                       = Store[#temp2201:45]                  : &:r2201_4, r2201_6
# 2201|     r2201_8(ClassWithDestructor)                                                                                                        = Load[#temp2201:45]                   : &:r2201_4, ~m?
# 2201|     v2201_9(void)                                                                                                                       = Call[vector]                         : func:r2201_3, this:r2201_1, 0:r2201_8
# 2201|     mu2201_10(unknown)                                                                                                                  = ^CallSideEffect                      : ~m?
# 2201|     mu2201_11(vector<ClassWithDestructor>)                                                                                              = ^IndirectMayWriteSideEffect[-1]      : &:r2201_1
# 2201|     r2201_12(glval<vector<ClassWithDestructor> &>)                                                                                      = VariableAddress[(__range)]           : 
# 2201|     r2201_13(glval<vector<ClassWithDestructor>>)                                                                                        = VariableAddress[ys]                  : 
# 2201|     r2201_14(vector<ClassWithDestructor> &)                                                                                             = CopyValue                            : r2201_13
# 2201|     mu2201_15(vector<ClassWithDestructor> &)                                                                                            = Store[(__range)]                     : &:r2201_12, r2201_14
# 2201|     r2201_16(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>) = VariableAddress[(__begin)]           : 
# 2201|     r2201_17(glval<vector<ClassWithDestructor> &>)                                                                                      = VariableAddress[(__range)]           : 
# 2201|     r2201_18(vector<ClassWithDestructor> &)                                                                                             = Load[(__range)]                      : &:r2201_17, ~m?
#-----|     r0_1(glval<vector<ClassWithDestructor>>)                                                                                            = CopyValue                            : r2201_18
#-----|     r0_2(glval<vector<ClassWithDestructor>>)                                                                                            = Convert                              : r0_1
# 2201|     r2201_19(glval<unknown>)                                                                                                            = FunctionAddress[begin]               : 
# 2201|     r2201_20(iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)        = Call[begin]                          : func:r2201_19, this:r0_2
#-----|     v0_3(void)                                                                                                                          = ^IndirectReadSideEffect[-1]          : &:r0_2, ~m?
# 2201|     mu2201_21(iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)       = Store[(__begin)]                     : &:r2201_16, r2201_20
# 2201|     r2201_22(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>) = VariableAddress[(__end)]             : 
# 2201|     r2201_23(glval<vector<ClassWithDestructor> &>)                                                                                      = VariableAddress[(__range)]           : 
# 2201|     r2201_24(vector<ClassWithDestructor> &)                                                                                             = Load[(__range)]                      : &:r2201_23, ~m?
#-----|     r0_4(glval<vector<ClassWithDestructor>>)                                                                                            = CopyValue                            : r2201_24
#-----|     r0_5(glval<vector<ClassWithDestructor>>)                                                                                            = Convert                              : r0_4
# 2201|     r2201_25(glval<unknown>)                                                                                                            = FunctionAddress[end]                 : 
# 2201|     r2201_26(iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)        = Call[end]                            : func:r2201_25, this:r0_5
#-----|     v0_6(void)                                                                                                                          = ^IndirectReadSideEffect[-1]          : &:r0_5, ~m?
# 2201|     mu2201_27(iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)       = Store[(__end)]                       : &:r2201_22, r2201_26
#-----|   Goto -> Block 11

# 2201|   Block 11
# 2201|     r2201_28(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>) = VariableAddress[(__begin)]      : 
#-----|     r0_7(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>)     = Convert                         : r2201_28
# 2201|     r2201_29(glval<unknown>)                                                                                                            = FunctionAddress[operator!=]     : 
#-----|     r0_8(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>)     = VariableAddress[#temp0:0]       : 
#-----|     mu0_9(iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)           = Uninitialized[#temp0:0]         : &:r0_8
# 2201|     r2201_30(glval<unknown>)                                                                                                            = FunctionAddress[iterator]       : 
# 2201|     r2201_31(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>) = VariableAddress[(__end)]        : 
#-----|     r0_10(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>)    = Convert                         : r2201_31
#-----|     r0_11(iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &> &)         = CopyValue                       : r0_10
# 2201|     v2201_32(void)                                                                                                                      = Call[iterator]                  : func:r2201_30, this:r0_8, 0:r0_11
# 2201|     mu2201_33(unknown)                                                                                                                  = ^CallSideEffect                 : ~m?
#-----|     v0_12(void)                                                                                                                         = ^BufferReadSideEffect[0]        : &:r0_11, ~m?
# 2201|     mu2201_34(iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)       = ^IndirectMayWriteSideEffect[-1] : &:r0_8
#-----|     r0_13(iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)           = Load[#temp0:0]                  : &:r0_8, ~m?
# 2201|     r2201_35(bool)                                                                                                                      = Call[operator!=]                : func:r2201_29, this:r0_7, 0:r0_13
# 2201|     mu2201_36(unknown)                                                                                                                  = ^CallSideEffect                 : ~m?
#-----|     v0_14(void)                                                                                                                         = ^IndirectReadSideEffect[-1]     : &:r0_7, ~m?
# 2201|     v2201_37(void)                                                                                                                      = ConditionalBranch               : r2201_35
#-----|   False -> Block 14
#-----|   True -> Block 12

# 2201|   Block 12
# 2201|     r2201_38(glval<ClassWithDestructor>)                                                                                                = VariableAddress[y]                    : 
# 2201|     r2201_39(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>) = VariableAddress[(__begin)]            : 
#-----|     r0_15(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>)    = Convert                               : r2201_39
# 2201|     r2201_40(glval<unknown>)                                                                                                            = FunctionAddress[operator*]            : 
# 2201|     r2201_41(ClassWithDestructor &)                                                                                                     = Call[operator*]                       : func:r2201_40, this:r0_15
# 2201|     mu2201_42(unknown)                                                                                                                  = ^CallSideEffect                       : ~m?
#-----|     v0_16(void)                                                                                                                         = ^IndirectReadSideEffect[-1]           : &:r0_15, ~m?
# 2201|     r2201_43(ClassWithDestructor)                                                                                                       = Load[?]                               : &:r2201_41, ~m?
# 2201|     mu2201_44(ClassWithDestructor)                                                                                                      = Store[y]                              : &:r2201_38, r2201_43
# 2202|     r2202_1(glval<ClassWithDestructor>)                                                                                                 = VariableAddress[y]                    : 
# 2202|     r2202_2(glval<unknown>)                                                                                                             = FunctionAddress[set_x]                : 
# 2202|     r2202_3(char)                                                                                                                       = Constant[97]                          : 
# 2202|     v2202_4(void)                                                                                                                       = Call[set_x]                           : func:r2202_2, this:r2202_1, 0:r2202_3
# 2202|     mu2202_5(unknown)                                                                                                                   = ^CallSideEffect                       : ~m?
# 2202|     v2202_6(void)                                                                                                                       = ^IndirectReadSideEffect[-1]           : &:r2202_1, ~m?
# 2202|     mu2202_7(ClassWithDestructor)                                                                                                       = ^IndirectMayWriteSideEffect[-1]       : &:r2202_1
# 2201|     r2201_45(glval<ClassWithDestructor>)                                                                                                = VariableAddress[y]                    : 
# 2201|     r2201_46(glval<unknown>)                                                                                                            = FunctionAddress[~ClassWithDestructor] : 
# 2201|     v2201_47(void)                                                                                                                      = Call[~ClassWithDestructor]            : func:r2201_46, this:r2201_45
# 2201|     mu2201_48(unknown)                                                                                                                  = ^CallSideEffect                       : ~m?
# 2201|     v2201_49(void)                                                                                                                      = ^IndirectReadSideEffect[-1]           : &:r2201_45, ~m?
# 2201|     mu2201_50(ClassWithDestructor)                                                                                                      = ^IndirectMayWriteSideEffect[-1]       : &:r2201_45
# 2201|     r2201_51(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>) = VariableAddress[(__begin)]            : 
# 2201|     r2201_52(glval<unknown>)                                                                                                            = FunctionAddress[operator++]           : 
# 2201|     r2201_53(iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &> &)      = Call[operator++]                      : func:r2201_52, this:r2201_51
# 2201|     mu2201_54(unknown)                                                                                                                  = ^CallSideEffect                       : ~m?
# 2201|     v2201_55(void)                                                                                                                      = ^IndirectReadSideEffect[-1]           : &:r2201_51, ~m?
# 2201|     mu2201_56(iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)       = ^IndirectMayWriteSideEffect[-1]       : &:r2201_51
# 2201|     r2201_57(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>) = CopyValue                             : r2201_53
#-----|   Goto (back edge) -> Block 11

# 2201|   Block 13
# 2201|     r2201_58(glval<vector<ClassWithDestructor>>) = VariableAddress[ys]             : 
# 2201|     r2201_59(glval<unknown>)                     = FunctionAddress[~vector]        : 
# 2201|     v2201_60(void)                               = Call[~vector]                   : func:r2201_59, this:r2201_58
# 2201|     mu2201_61(unknown)                           = ^CallSideEffect                 : ~m?
# 2201|     v2201_62(void)                               = ^IndirectReadSideEffect[-1]     : &:r2201_58, ~m?
# 2201|     mu2201_63(vector<ClassWithDestructor>)       = ^IndirectMayWriteSideEffect[-1] : &:r2201_58
#-----|   Goto -> Block 14

# 2204|   Block 14
# 2204|     r2204_1(glval<vector<ClassWithDestructor>>)                                                                                         = VariableAddress[ys]             : 
# 2204|     mu2204_2(vector<ClassWithDestructor>)                                                                                               = Uninitialized[ys]               : &:r2204_1
# 2204|     r2204_3(glval<unknown>)                                                                                                             = FunctionAddress[vector]         : 
# 2204|     r2204_4(glval<ClassWithDestructor>)                                                                                                 = VariableAddress[#temp2204:45]   : 
# 2204|     r2204_5(glval<ClassWithDestructor>)                                                                                                 = VariableAddress[x]              : 
# 2204|     r2204_6(ClassWithDestructor)                                                                                                        = Load[x]                         : &:r2204_5, ~m?
# 2204|     mu2204_7(ClassWithDestructor)                                                                                                       = Store[#temp2204:45]             : &:r2204_4, r2204_6
# 2204|     r2204_8(ClassWithDestructor)                                                                                                        = Load[#temp2204:45]              : &:r2204_4, ~m?
# 2204|     v2204_9(void)                                                                                                                       = Call[vector]                    : func:r2204_3, this:r2204_1, 0:r2204_8
# 2204|     mu2204_10(unknown)                                                                                                                  = ^CallSideEffect                 : ~m?
# 2204|     mu2204_11(vector<ClassWithDestructor>)                                                                                              = ^IndirectMayWriteSideEffect[-1] : &:r2204_1
# 2204|     r2204_12(glval<vector<ClassWithDestructor> &>)                                                                                      = VariableAddress[(__range)]      : 
# 2204|     r2204_13(glval<vector<ClassWithDestructor>>)                                                                                        = VariableAddress[ys]             : 
# 2204|     r2204_14(vector<ClassWithDestructor> &)                                                                                             = CopyValue                       : r2204_13
# 2204|     mu2204_15(vector<ClassWithDestructor> &)                                                                                            = Store[(__range)]                : &:r2204_12, r2204_14
# 2204|     r2204_16(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>) = VariableAddress[(__begin)]      : 
# 2204|     r2204_17(glval<vector<ClassWithDestructor> &>)                                                                                      = VariableAddress[(__range)]      : 
# 2204|     r2204_18(vector<ClassWithDestructor> &)                                                                                             = Load[(__range)]                 : &:r2204_17, ~m?
#-----|     r0_17(glval<vector<ClassWithDestructor>>)                                                                                           = CopyValue                       : r2204_18
#-----|     r0_18(glval<vector<ClassWithDestructor>>)                                                                                           = Convert                         : r0_17
# 2204|     r2204_19(glval<unknown>)                                                                                                            = FunctionAddress[begin]          : 
# 2204|     r2204_20(iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)        = Call[begin]                     : func:r2204_19, this:r0_18
#-----|     v0_19(void)                                                                                                                         = ^IndirectReadSideEffect[-1]     : &:r0_18, ~m?
# 2204|     mu2204_21(iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)       = Store[(__begin)]                : &:r2204_16, r2204_20
# 2204|     r2204_22(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>) = VariableAddress[(__end)]        : 
# 2204|     r2204_23(glval<vector<ClassWithDestructor> &>)                                                                                      = VariableAddress[(__range)]      : 
# 2204|     r2204_24(vector<ClassWithDestructor> &)                                                                                             = Load[(__range)]                 : &:r2204_23, ~m?
#-----|     r0_20(glval<vector<ClassWithDestructor>>)                                                                                           = CopyValue                       : r2204_24
#-----|     r0_21(glval<vector<ClassWithDestructor>>)                                                                                           = Convert                         : r0_20
# 2204|     r2204_25(glval<unknown>)                                                                                                            = FunctionAddress[end]            : 
# 2204|     r2204_26(iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)        = Call[end]                       : func:r2204_25, this:r0_21
#-----|     v0_22(void)                                                                                                                         = ^IndirectReadSideEffect[-1]     : &:r0_21, ~m?
# 2204|     mu2204_27(iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)       = Store[(__end)]                  : &:r2204_22, r2204_26
#-----|   Goto -> Block 15

# 2204|   Block 15
# 2204|     r2204_28(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>) = VariableAddress[(__begin)]      : 
#-----|     r0_23(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>)    = Convert                         : r2204_28
# 2204|     r2204_29(glval<unknown>)                                                                                                            = FunctionAddress[operator!=]     : 
#-----|     r0_24(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>)    = VariableAddress[#temp0:0]       : 
#-----|     mu0_25(iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)          = Uninitialized[#temp0:0]         : &:r0_24
# 2204|     r2204_30(glval<unknown>)                                                                                                            = FunctionAddress[iterator]       : 
# 2204|     r2204_31(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>) = VariableAddress[(__end)]        : 
#-----|     r0_26(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>)    = Convert                         : r2204_31
#-----|     r0_27(iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &> &)         = CopyValue                       : r0_26
# 2204|     v2204_32(void)                                                                                                                      = Call[iterator]                  : func:r2204_30, this:r0_24, 0:r0_27
# 2204|     mu2204_33(unknown)                                                                                                                  = ^CallSideEffect                 : ~m?
#-----|     v0_28(void)                                                                                                                         = ^BufferReadSideEffect[0]        : &:r0_27, ~m?
# 2204|     mu2204_34(iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)       = ^IndirectMayWriteSideEffect[-1] : &:r0_24
#-----|     r0_29(iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)           = Load[#temp0:0]                  : &:r0_24, ~m?
# 2204|     r2204_35(bool)                                                                                                                      = Call[operator!=]                : func:r2204_29, this:r0_23, 0:r0_29
# 2204|     mu2204_36(unknown)                                                                                                                  = ^CallSideEffect                 : ~m?
#-----|     v0_30(void)                                                                                                                         = ^IndirectReadSideEffect[-1]     : &:r0_23, ~m?
# 2204|     v2204_37(void)                                                                                                                      = ConditionalBranch               : r2204_35
#-----|   False -> Block 20
#-----|   True -> Block 16

# 2204|   Block 16
# 2204|     r2204_38(glval<ClassWithDestructor>)                                                                                                = VariableAddress[y]              : 
# 2204|     r2204_39(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>) = VariableAddress[(__begin)]      : 
#-----|     r0_31(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>)    = Convert                         : r2204_39
# 2204|     r2204_40(glval<unknown>)                                                                                                            = FunctionAddress[operator*]      : 
# 2204|     r2204_41(ClassWithDestructor &)                                                                                                     = Call[operator*]                 : func:r2204_40, this:r0_31
# 2204|     mu2204_42(unknown)                                                                                                                  = ^CallSideEffect                 : ~m?
#-----|     v0_32(void)                                                                                                                         = ^IndirectReadSideEffect[-1]     : &:r0_31, ~m?
# 2204|     r2204_43(ClassWithDestructor)                                                                                                       = Load[?]                         : &:r2204_41, ~m?
# 2204|     mu2204_44(ClassWithDestructor)                                                                                                      = Store[y]                        : &:r2204_38, r2204_43
# 2205|     r2205_1(glval<ClassWithDestructor>)                                                                                                 = VariableAddress[y]              : 
# 2205|     r2205_2(glval<unknown>)                                                                                                             = FunctionAddress[set_x]          : 
# 2205|     r2205_3(char)                                                                                                                       = Constant[97]                    : 
# 2205|     v2205_4(void)                                                                                                                       = Call[set_x]                     : func:r2205_2, this:r2205_1, 0:r2205_3
# 2205|     mu2205_5(unknown)                                                                                                                   = ^CallSideEffect                 : ~m?
# 2205|     v2205_6(void)                                                                                                                       = ^IndirectReadSideEffect[-1]     : &:r2205_1, ~m?
# 2205|     mu2205_7(ClassWithDestructor)                                                                                                       = ^IndirectMayWriteSideEffect[-1] : &:r2205_1
# 2206|     r2206_1(glval<ClassWithDestructor>)                                                                                                 = VariableAddress[y]              : 
# 2206|     r2206_2(glval<unknown>)                                                                                                             = FunctionAddress[get_x]          : 
# 2206|     r2206_3(char)                                                                                                                       = Call[get_x]                     : func:r2206_2, this:r2206_1
# 2206|     mu2206_4(unknown)                                                                                                                   = ^CallSideEffect                 : ~m?
# 2206|     v2206_5(void)                                                                                                                       = ^IndirectReadSideEffect[-1]     : &:r2206_1, ~m?
# 2206|     mu2206_6(ClassWithDestructor)                                                                                                       = ^IndirectMayWriteSideEffect[-1] : &:r2206_1
# 2206|     r2206_7(int)                                                                                                                        = Convert                         : r2206_3
# 2206|     r2206_8(int)                                                                                                                        = Constant[98]                    : 
# 2206|     r2206_9(bool)                                                                                                                       = CompareEQ                       : r2206_7, r2206_8
# 2206|     v2206_10(void)                                                                                                                      = ConditionalBranch               : r2206_9
#-----|   False -> Block 18
#-----|   True -> Block 17

# 2207|   Block 17
# 2207|     v2207_1(void)                                = NoOp                                  : 
# 2204|     r2204_45(glval<ClassWithDestructor>)         = VariableAddress[y]                    : 
# 2204|     r2204_46(glval<unknown>)                     = FunctionAddress[~ClassWithDestructor] : 
# 2204|     v2204_47(void)                               = Call[~ClassWithDestructor]            : func:r2204_46, this:r2204_45
# 2204|     mu2204_48(unknown)                           = ^CallSideEffect                       : ~m?
# 2204|     v2204_49(void)                               = ^IndirectReadSideEffect[-1]           : &:r2204_45, ~m?
# 2204|     mu2204_50(ClassWithDestructor)               = ^IndirectMayWriteSideEffect[-1]       : &:r2204_45
# 2204|     r2204_51(glval<vector<ClassWithDestructor>>) = VariableAddress[ys]                   : 
# 2204|     r2204_52(glval<unknown>)                     = FunctionAddress[~vector]              : 
# 2204|     v2204_53(void)                               = Call[~vector]                         : func:r2204_52, this:r2204_51
# 2204|     mu2204_54(unknown)                           = ^CallSideEffect                       : ~m?
# 2204|     v2204_55(void)                               = ^IndirectReadSideEffect[-1]           : &:r2204_51, ~m?
# 2204|     mu2204_56(vector<ClassWithDestructor>)       = ^IndirectMayWriteSideEffect[-1]       : &:r2204_51
# 2219|     r2219_1(glval<ClassWithDestructor>)          = VariableAddress[x]                    : 
# 2219|     r2219_2(glval<unknown>)                      = FunctionAddress[~ClassWithDestructor] : 
# 2219|     v2219_3(void)                                = Call[~ClassWithDestructor]            : func:r2219_2, this:r2219_1
# 2219|     mu2219_4(unknown)                            = ^CallSideEffect                       : ~m?
# 2219|     v2219_5(void)                                = ^IndirectReadSideEffect[-1]           : &:r2219_1, ~m?
# 2219|     mu2219_6(ClassWithDestructor)                = ^IndirectMayWriteSideEffect[-1]       : &:r2219_1
#-----|   Goto -> Block 1

# 2204|   Block 18
# 2204|     r2204_57(glval<ClassWithDestructor>)                                                                                                = VariableAddress[y]                    : 
# 2204|     r2204_58(glval<unknown>)                                                                                                            = FunctionAddress[~ClassWithDestructor] : 
# 2204|     v2204_59(void)                                                                                                                      = Call[~ClassWithDestructor]            : func:r2204_58, this:r2204_57
# 2204|     mu2204_60(unknown)                                                                                                                  = ^CallSideEffect                       : ~m?
# 2204|     v2204_61(void)                                                                                                                      = ^IndirectReadSideEffect[-1]           : &:r2204_57, ~m?
# 2204|     mu2204_62(ClassWithDestructor)                                                                                                      = ^IndirectMayWriteSideEffect[-1]       : &:r2204_57
# 2204|     r2204_63(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>) = VariableAddress[(__begin)]            : 
# 2204|     r2204_64(glval<unknown>)                                                                                                            = FunctionAddress[operator++]           : 
# 2204|     r2204_65(iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &> &)      = Call[operator++]                      : func:r2204_64, this:r2204_63
# 2204|     mu2204_66(unknown)                                                                                                                  = ^CallSideEffect                       : ~m?
# 2204|     v2204_67(void)                                                                                                                      = ^IndirectReadSideEffect[-1]           : &:r2204_63, ~m?
# 2204|     mu2204_68(iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)       = ^IndirectMayWriteSideEffect[-1]       : &:r2204_63
# 2204|     r2204_69(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>) = CopyValue                             : r2204_65
#-----|   Goto (back edge) -> Block 15

# 2204|   Block 19
# 2204|     r2204_70(glval<vector<ClassWithDestructor>>) = VariableAddress[ys]             : 
# 2204|     r2204_71(glval<unknown>)                     = FunctionAddress[~vector]        : 
# 2204|     v2204_72(void)                               = Call[~vector]                   : func:r2204_71, this:r2204_70
# 2204|     mu2204_73(unknown)                           = ^CallSideEffect                 : ~m?
# 2204|     v2204_74(void)                               = ^IndirectReadSideEffect[-1]     : &:r2204_70, ~m?
# 2204|     mu2204_75(vector<ClassWithDestructor>)       = ^IndirectMayWriteSideEffect[-1] : &:r2204_70
#-----|   Goto -> Block 20

# 2210|   Block 20
# 2210|     r2210_1(glval<vector<int>>)                                                         = VariableAddress[ys]             : 
# 2210|     mu2210_2(vector<int>)                                                               = Uninitialized[ys]               : &:r2210_1
# 2210|     r2210_3(glval<unknown>)                                                             = FunctionAddress[vector]         : 
# 2210|     r2210_4(int)                                                                        = Constant[1]                     : 
# 2210|     v2210_5(void)                                                                       = Call[vector]                    : func:r2210_3, this:r2210_1, 0:r2210_4
# 2210|     mu2210_6(unknown)                                                                   = ^CallSideEffect                 : ~m?
# 2210|     mu2210_7(vector<int>)                                                               = ^IndirectMayWriteSideEffect[-1] : &:r2210_1
# 2210|     r2210_8(glval<vector<int> &>)                                                       = VariableAddress[(__range)]      : 
# 2210|     r2210_9(glval<vector<int>>)                                                         = VariableAddress[ys]             : 
# 2210|     r2210_10(vector<int> &)                                                             = CopyValue                       : r2210_9
# 2210|     mu2210_11(vector<int> &)                                                            = Store[(__range)]                : &:r2210_8, r2210_10
# 2210|     r2210_12(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>) = VariableAddress[(__begin)]      : 
# 2210|     r2210_13(glval<vector<int> &>)                                                      = VariableAddress[(__range)]      : 
# 2210|     r2210_14(vector<int> &)                                                             = Load[(__range)]                 : &:r2210_13, ~m?
#-----|     r0_33(glval<vector<int>>)                                                           = CopyValue                       : r2210_14
#-----|     r0_34(glval<vector<int>>)                                                           = Convert                         : r0_33
# 2210|     r2210_15(glval<unknown>)                                                            = FunctionAddress[begin]          : 
# 2210|     r2210_16(iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)        = Call[begin]                     : func:r2210_15, this:r0_34
#-----|     v0_35(void)                                                                         = ^IndirectReadSideEffect[-1]     : &:r0_34, ~m?
# 2210|     mu2210_17(iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)       = Store[(__begin)]                : &:r2210_12, r2210_16
# 2210|     r2210_18(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>) = VariableAddress[(__end)]        : 
# 2210|     r2210_19(glval<vector<int> &>)                                                      = VariableAddress[(__range)]      : 
# 2210|     r2210_20(vector<int> &)                                                             = Load[(__range)]                 : &:r2210_19, ~m?
#-----|     r0_36(glval<vector<int>>)                                                           = CopyValue                       : r2210_20
#-----|     r0_37(glval<vector<int>>)                                                           = Convert                         : r0_36
# 2210|     r2210_21(glval<unknown>)                                                            = FunctionAddress[end]            : 
# 2210|     r2210_22(iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)        = Call[end]                       : func:r2210_21, this:r0_37
#-----|     v0_38(void)                                                                         = ^IndirectReadSideEffect[-1]     : &:r0_37, ~m?
# 2210|     mu2210_23(iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)       = Store[(__end)]                  : &:r2210_18, r2210_22
#-----|   Goto -> Block 21

# 2210|   Block 21
# 2210|     r2210_24(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>) = VariableAddress[(__begin)]      : 
#-----|     r0_39(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>)    = Convert                         : r2210_24
# 2210|     r2210_25(glval<unknown>)                                                            = FunctionAddress[operator!=]     : 
#-----|     r0_40(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>)    = VariableAddress[#temp0:0]       : 
#-----|     mu0_41(iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)          = Uninitialized[#temp0:0]         : &:r0_40
# 2210|     r2210_26(glval<unknown>)                                                            = FunctionAddress[iterator]       : 
# 2210|     r2210_27(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>) = VariableAddress[(__end)]        : 
#-----|     r0_42(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>)    = Convert                         : r2210_27
#-----|     r0_43(iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &> &)         = CopyValue                       : r0_42
# 2210|     v2210_28(void)                                                                      = Call[iterator]                  : func:r2210_26, this:r0_40, 0:r0_43
# 2210|     mu2210_29(unknown)                                                                  = ^CallSideEffect                 : ~m?
#-----|     v0_44(void)                                                                         = ^BufferReadSideEffect[0]        : &:r0_43, ~m?
# 2210|     mu2210_30(iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)       = ^IndirectMayWriteSideEffect[-1] : &:r0_40
#-----|     r0_45(iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)           = Load[#temp0:0]                  : &:r0_40, ~m?
# 2210|     r2210_31(bool)                                                                      = Call[operator!=]                : func:r2210_25, this:r0_39, 0:r0_45
# 2210|     mu2210_32(unknown)                                                                  = ^CallSideEffect                 : ~m?
#-----|     v0_46(void)                                                                         = ^IndirectReadSideEffect[-1]     : &:r0_39, ~m?
# 2210|     v2210_33(void)                                                                      = ConditionalBranch               : r2210_31
#-----|   False -> Block 26
#-----|   True -> Block 23

# 2210|   Block 22
# 2210|     r2210_34(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>) = VariableAddress[(__begin)]      : 
# 2210|     r2210_35(glval<unknown>)                                                            = FunctionAddress[operator++]     : 
# 2210|     r2210_36(iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &> &)      = Call[operator++]                : func:r2210_35, this:r2210_34
# 2210|     mu2210_37(unknown)                                                                  = ^CallSideEffect                 : ~m?
# 2210|     v2210_38(void)                                                                      = ^IndirectReadSideEffect[-1]     : &:r2210_34, ~m?
# 2210|     mu2210_39(iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>)       = ^IndirectMayWriteSideEffect[-1] : &:r2210_34
# 2210|     r2210_40(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>) = CopyValue                       : r2210_36
#-----|   Goto (back edge) -> Block 21

# 2210|   Block 23
# 2210|     r2210_41(glval<int>)                                                                = VariableAddress[y]          : 
# 2210|     r2210_42(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>) = VariableAddress[(__begin)]  : 
#-----|     r0_47(glval<iterator<random_access_iterator_tag, int, ptrdiff_t, int *, int &>>)    = Convert                     : r2210_42
# 2210|     r2210_43(glval<unknown>)                                                            = FunctionAddress[operator*]  : 
# 2210|     r2210_44(int &)                                                                     = Call[operator*]             : func:r2210_43, this:r0_47
# 2210|     mu2210_45(unknown)                                                                  = ^CallSideEffect             : ~m?
#-----|     v0_48(void)                                                                         = ^IndirectReadSideEffect[-1] : &:r0_47, ~m?
# 2210|     r2210_46(int)                                                                       = Load[?]                     : &:r2210_44, ~m?
# 2210|     mu2210_47(int)                                                                      = Store[y]                    : &:r2210_41, r2210_46
# 2211|     r2211_1(glval<int>)                                                                 = VariableAddress[y]          : 
# 2211|     r2211_2(int)                                                                        = Load[y]                     : &:r2211_1, ~m?
# 2211|     r2211_3(int)                                                                        = Constant[1]                 : 
# 2211|     r2211_4(bool)                                                                       = CompareEQ                   : r2211_2, r2211_3
# 2211|     v2211_5(void)                                                                       = ConditionalBranch           : r2211_4
#-----|   False -> Block 22
#-----|   True -> Block 24

# 2212|   Block 24
# 2212|     v2212_1(void)                       = NoOp                                  : 
# 2210|     r2210_48(glval<vector<int>>)        = VariableAddress[ys]                   : 
# 2210|     r2210_49(glval<unknown>)            = FunctionAddress[~vector]              : 
# 2210|     v2210_50(void)                      = Call[~vector]                         : func:r2210_49, this:r2210_48
# 2210|     mu2210_51(unknown)                  = ^CallSideEffect                       : ~m?
# 2210|     v2210_52(void)                      = ^IndirectReadSideEffect[-1]           : &:r2210_48, ~m?
# 2210|     mu2210_53(vector<int>)              = ^IndirectMayWriteSideEffect[-1]       : &:r2210_48
# 2219|     r2219_7(glval<ClassWithDestructor>) = VariableAddress[x]                    : 
# 2219|     r2219_8(glval<unknown>)             = FunctionAddress[~ClassWithDestructor] : 
# 2219|     v2219_9(void)                       = Call[~ClassWithDestructor]            : func:r2219_8, this:r2219_7
# 2219|     mu2219_10(unknown)                  = ^CallSideEffect                       : ~m?
# 2219|     v2219_11(void)                      = ^IndirectReadSideEffect[-1]           : &:r2219_7, ~m?
# 2219|     mu2219_12(ClassWithDestructor)      = ^IndirectMayWriteSideEffect[-1]       : &:r2219_7
#-----|   Goto -> Block 1

# 2210|   Block 25
# 2210|     r2210_54(glval<vector<int>>) = VariableAddress[ys]             : 
# 2210|     r2210_55(glval<unknown>)     = FunctionAddress[~vector]        : 
# 2210|     v2210_56(void)               = Call[~vector]                   : func:r2210_55, this:r2210_54
# 2210|     mu2210_57(unknown)           = ^CallSideEffect                 : ~m?
# 2210|     v2210_58(void)               = ^IndirectReadSideEffect[-1]     : &:r2210_54, ~m?
# 2210|     mu2210_59(vector<int>)       = ^IndirectMayWriteSideEffect[-1] : &:r2210_54
#-----|   Goto -> Block 26

# 2215|   Block 26
# 2215|     r2215_1(glval<vector<ClassWithDestructor>>)                                                                                         = VariableAddress[ys]             : 
# 2215|     mu2215_2(vector<ClassWithDestructor>)                                                                                               = Uninitialized[ys]               : &:r2215_1
# 2215|     r2215_3(glval<unknown>)                                                                                                             = FunctionAddress[vector]         : 
# 2215|     r2215_4(glval<ClassWithDestructor>)                                                                                                 = VariableAddress[#temp2215:45]   : 
# 2215|     r2215_5(glval<ClassWithDestructor>)                                                                                                 = VariableAddress[x]              : 
# 2215|     r2215_6(ClassWithDestructor)                                                                                                        = Load[x]                         : &:r2215_5, ~m?
# 2215|     mu2215_7(ClassWithDestructor)                                                                                                       = Store[#temp2215:45]             : &:r2215_4, r2215_6
# 2215|     r2215_8(ClassWithDestructor)                                                                                                        = Load[#temp2215:45]              : &:r2215_4, ~m?
# 2215|     v2215_9(void)                                                                                                                       = Call[vector]                    : func:r2215_3, this:r2215_1, 0:r2215_8
# 2215|     mu2215_10(unknown)                                                                                                                  = ^CallSideEffect                 : ~m?
# 2215|     mu2215_11(vector<ClassWithDestructor>)                                                                                              = ^IndirectMayWriteSideEffect[-1] : &:r2215_1
# 2215|     r2215_12(glval<vector<ClassWithDestructor> &>)                                                                                      = VariableAddress[(__range)]      : 
# 2215|     r2215_13(glval<vector<ClassWithDestructor>>)                                                                                        = VariableAddress[ys]             : 
# 2215|     r2215_14(vector<ClassWithDestructor> &)                                                                                             = CopyValue                       : r2215_13
# 2215|     mu2215_15(vector<ClassWithDestructor> &)                                                                                            = Store[(__range)]                : &:r2215_12, r2215_14
# 2215|     r2215_16(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>) = VariableAddress[(__begin)]      : 
# 2215|     r2215_17(glval<vector<ClassWithDestructor> &>)                                                                                      = VariableAddress[(__range)]      : 
# 2215|     r2215_18(vector<ClassWithDestructor> &)                                                                                             = Load[(__range)]                 : &:r2215_17, ~m?
#-----|     r0_49(glval<vector<ClassWithDestructor>>)                                                                                           = CopyValue                       : r2215_18
#-----|     r0_50(glval<vector<ClassWithDestructor>>)                                                                                           = Convert                         : r0_49
# 2215|     r2215_19(glval<unknown>)                                                                                                            = FunctionAddress[begin]          : 
# 2215|     r2215_20(iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)        = Call[begin]                     : func:r2215_19, this:r0_50
#-----|     v0_51(void)                                                                                                                         = ^IndirectReadSideEffect[-1]     : &:r0_50, ~m?
# 2215|     mu2215_21(iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)       = Store[(__begin)]                : &:r2215_16, r2215_20
# 2215|     r2215_22(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>) = VariableAddress[(__end)]        : 
# 2215|     r2215_23(glval<vector<ClassWithDestructor> &>)                                                                                      = VariableAddress[(__range)]      : 
# 2215|     r2215_24(vector<ClassWithDestructor> &)                                                                                             = Load[(__range)]                 : &:r2215_23, ~m?
#-----|     r0_52(glval<vector<ClassWithDestructor>>)                                                                                           = CopyValue                       : r2215_24
#-----|     r0_53(glval<vector<ClassWithDestructor>>)                                                                                           = Convert                         : r0_52
# 2215|     r2215_25(glval<unknown>)                                                                                                            = FunctionAddress[end]            : 
# 2215|     r2215_26(iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)        = Call[end]                       : func:r2215_25, this:r0_53
#-----|     v0_54(void)                                                                                                                         = ^IndirectReadSideEffect[-1]     : &:r0_53, ~m?
# 2215|     mu2215_27(iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)       = Store[(__end)]                  : &:r2215_22, r2215_26
#-----|   Goto -> Block 27

# 2215|   Block 27
# 2215|     r2215_28(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>) = VariableAddress[(__begin)]      : 
#-----|     r0_55(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>)    = Convert                         : r2215_28
# 2215|     r2215_29(glval<unknown>)                                                                                                            = FunctionAddress[operator!=]     : 
#-----|     r0_56(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>)    = VariableAddress[#temp0:0]       : 
#-----|     mu0_57(iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)          = Uninitialized[#temp0:0]         : &:r0_56
# 2215|     r2215_30(glval<unknown>)                                                                                                            = FunctionAddress[iterator]       : 
# 2215|     r2215_31(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>) = VariableAddress[(__end)]        : 
#-----|     r0_58(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>)    = Convert                         : r2215_31
#-----|     r0_59(iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &> &)         = CopyValue                       : r0_58
# 2215|     v2215_32(void)                                                                                                                      = Call[iterator]                  : func:r2215_30, this:r0_56, 0:r0_59
# 2215|     mu2215_33(unknown)                                                                                                                  = ^CallSideEffect                 : ~m?
#-----|     v0_60(void)                                                                                                                         = ^BufferReadSideEffect[0]        : &:r0_59, ~m?
# 2215|     mu2215_34(iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)       = ^IndirectMayWriteSideEffect[-1] : &:r0_56
#-----|     r0_61(iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)           = Load[#temp0:0]                  : &:r0_56, ~m?
# 2215|     r2215_35(bool)                                                                                                                      = Call[operator!=]                : func:r2215_29, this:r0_55, 0:r0_61
# 2215|     mu2215_36(unknown)                                                                                                                  = ^CallSideEffect                 : ~m?
#-----|     v0_62(void)                                                                                                                         = ^IndirectReadSideEffect[-1]     : &:r0_55, ~m?
# 2215|     v2215_37(void)                                                                                                                      = ConditionalBranch               : r2215_35
#-----|   False -> Block 30
#-----|   True -> Block 28

# 2215|   Block 28
# 2215|     r2215_38(glval<ClassWithDestructor>)                                                                                                = VariableAddress[y]                    : 
# 2215|     r2215_39(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>) = VariableAddress[(__begin)]            : 
#-----|     r0_63(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>)    = Convert                               : r2215_39
# 2215|     r2215_40(glval<unknown>)                                                                                                            = FunctionAddress[operator*]            : 
# 2215|     r2215_41(ClassWithDestructor &)                                                                                                     = Call[operator*]                       : func:r2215_40, this:r0_63
# 2215|     mu2215_42(unknown)                                                                                                                  = ^CallSideEffect                       : ~m?
#-----|     v0_64(void)                                                                                                                         = ^IndirectReadSideEffect[-1]           : &:r0_63, ~m?
# 2215|     r2215_43(ClassWithDestructor)                                                                                                       = Load[?]                               : &:r2215_41, ~m?
# 2215|     mu2215_44(ClassWithDestructor)                                                                                                      = Store[y]                              : &:r2215_38, r2215_43
# 2216|     r2216_1(glval<ClassWithDestructor>)                                                                                                 = VariableAddress[z1]                   : 
# 2216|     mu2216_2(ClassWithDestructor)                                                                                                       = Uninitialized[z1]                     : &:r2216_1
# 2216|     r2216_3(glval<unknown>)                                                                                                             = FunctionAddress[ClassWithDestructor]  : 
# 2216|     v2216_4(void)                                                                                                                       = Call[ClassWithDestructor]             : func:r2216_3, this:r2216_1
# 2216|     mu2216_5(unknown)                                                                                                                   = ^CallSideEffect                       : ~m?
# 2216|     mu2216_6(ClassWithDestructor)                                                                                                       = ^IndirectMayWriteSideEffect[-1]       : &:r2216_1
# 2217|     r2217_1(glval<ClassWithDestructor>)                                                                                                 = VariableAddress[z2]                   : 
# 2217|     mu2217_2(ClassWithDestructor)                                                                                                       = Uninitialized[z2]                     : &:r2217_1
# 2217|     r2217_3(glval<unknown>)                                                                                                             = FunctionAddress[ClassWithDestructor]  : 
# 2217|     v2217_4(void)                                                                                                                       = Call[ClassWithDestructor]             : func:r2217_3, this:r2217_1
# 2217|     mu2217_5(unknown)                                                                                                                   = ^CallSideEffect                       : ~m?
# 2217|     mu2217_6(ClassWithDestructor)                                                                                                       = ^IndirectMayWriteSideEffect[-1]       : &:r2217_1
# 2218|     r2218_1(glval<ClassWithDestructor>)                                                                                                 = VariableAddress[z2]                   : 
# 2218|     r2218_2(glval<unknown>)                                                                                                             = FunctionAddress[~ClassWithDestructor] : 
# 2218|     v2218_3(void)                                                                                                                       = Call[~ClassWithDestructor]            : func:r2218_2, this:r2218_1
# 2218|     mu2218_4(unknown)                                                                                                                   = ^CallSideEffect                       : ~m?
# 2218|     v2218_5(void)                                                                                                                       = ^IndirectReadSideEffect[-1]           : &:r2218_1, ~m?
# 2218|     mu2218_6(ClassWithDestructor)                                                                                                       = ^IndirectMayWriteSideEffect[-1]       : &:r2218_1
# 2218|     r2218_7(glval<ClassWithDestructor>)                                                                                                 = VariableAddress[z1]                   : 
# 2218|     r2218_8(glval<unknown>)                                                                                                             = FunctionAddress[~ClassWithDestructor] : 
# 2218|     v2218_9(void)                                                                                                                       = Call[~ClassWithDestructor]            : func:r2218_8, this:r2218_7
# 2218|     mu2218_10(unknown)                                                                                                                  = ^CallSideEffect                       : ~m?
# 2218|     v2218_11(void)                                                                                                                      = ^IndirectReadSideEffect[-1]           : &:r2218_7, ~m?
# 2218|     mu2218_12(ClassWithDestructor)                                                                                                      = ^IndirectMayWriteSideEffect[-1]       : &:r2218_7
# 2215|     r2215_45(glval<ClassWithDestructor>)                                                                                                = VariableAddress[y]                    : 
# 2215|     r2215_46(glval<unknown>)                                                                                                            = FunctionAddress[~ClassWithDestructor] : 
# 2215|     v2215_47(void)                                                                                                                      = Call[~ClassWithDestructor]            : func:r2215_46, this:r2215_45
# 2215|     mu2215_48(unknown)                                                                                                                  = ^CallSideEffect                       : ~m?
# 2215|     v2215_49(void)                                                                                                                      = ^IndirectReadSideEffect[-1]           : &:r2215_45, ~m?
# 2215|     mu2215_50(ClassWithDestructor)                                                                                                      = ^IndirectMayWriteSideEffect[-1]       : &:r2215_45
# 2215|     r2215_51(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>) = VariableAddress[(__begin)]            : 
# 2215|     r2215_52(glval<unknown>)                                                                                                            = FunctionAddress[operator++]           : 
# 2215|     r2215_53(iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &> &)      = Call[operator++]                      : func:r2215_52, this:r2215_51
# 2215|     mu2215_54(unknown)                                                                                                                  = ^CallSideEffect                       : ~m?
# 2215|     v2215_55(void)                                                                                                                      = ^IndirectReadSideEffect[-1]           : &:r2215_51, ~m?
# 2215|     mu2215_56(iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>)       = ^IndirectMayWriteSideEffect[-1]       : &:r2215_51
# 2215|     r2215_57(glval<iterator<random_access_iterator_tag, ClassWithDestructor, ptrdiff_t, ClassWithDestructor *, ClassWithDestructor &>>) = CopyValue                             : r2215_53
#-----|   Goto (back edge) -> Block 27

# 2215|   Block 29
# 2215|     r2215_58(glval<vector<ClassWithDestructor>>) = VariableAddress[ys]             : 
# 2215|     r2215_59(glval<unknown>)                     = FunctionAddress[~vector]        : 
# 2215|     v2215_60(void)                               = Call[~vector]                   : func:r2215_59, this:r2215_58
# 2215|     mu2215_61(unknown)                           = ^CallSideEffect                 : ~m?
# 2215|     v2215_62(void)                               = ^IndirectReadSideEffect[-1]     : &:r2215_58, ~m?
# 2215|     mu2215_63(vector<ClassWithDestructor>)       = ^IndirectMayWriteSideEffect[-1] : &:r2215_58
#-----|   Goto -> Block 30

# 2219|   Block 30
# 2219|     v2219_13(void)                       = NoOp                                  : 
# 2219|     r2219_14(glval<ClassWithDestructor>) = VariableAddress[x]                    : 
# 2219|     r2219_15(glval<unknown>)             = FunctionAddress[~ClassWithDestructor] : 
# 2219|     v2219_16(void)                       = Call[~ClassWithDestructor]            : func:r2219_15, this:r2219_14
# 2219|     mu2219_17(unknown)                   = ^CallSideEffect                       : ~m?
# 2219|     v2219_18(void)                       = ^IndirectReadSideEffect[-1]           : &:r2219_14, ~m?
# 2219|     mu2219_19(ClassWithDestructor)       = ^IndirectMayWriteSideEffect[-1]       : &:r2219_14
#-----|   Goto -> Block 1

# 2221| void static_variable_with_destructor_1()
# 2221|   Block 0
# 2221|     v2221_1(void)                       = EnterFunction                        : 
# 2221|     mu2221_2(unknown)                   = AliasedDefinition                    : 
# 2221|     mu2221_3(unknown)                   = InitializeNonLocal                   : 
# 2222|     r2222_1(glval<ClassWithDestructor>) = VariableAddress[a]                   : 
# 2222|     mu2222_2(ClassWithDestructor)       = Uninitialized[a]                     : &:r2222_1
# 2222|     r2222_3(glval<unknown>)             = FunctionAddress[ClassWithDestructor] : 
# 2222|     v2222_4(void)                       = Call[ClassWithDestructor]            : func:r2222_3, this:r2222_1
# 2222|     mu2222_5(unknown)                   = ^CallSideEffect                      : ~m?
# 2222|     mu2222_6(ClassWithDestructor)       = ^IndirectMayWriteSideEffect[-1]      : &:r2222_1
# 2223|     r2223_1(glval<bool>)                = VariableAddress[b#init]              : 
# 2223|     r2223_2(bool)                       = Load[b#init]                         : &:r2223_1, ~m?
# 2223|     v2223_3(void)                       = ConditionalBranch                    : r2223_2
#-----|   False -> Block 1
#-----|   True -> Block 2

# 2223|   Block 1
# 2223|     r2223_4(glval<ClassWithDestructor>) = VariableAddress[b]                   : 
#-----|     r0_1(glval<unknown>)                = FunctionAddress[ClassWithDestructor] : 
#-----|     v0_2(void)                          = Call[ClassWithDestructor]            : func:r0_1, this:r2223_4
#-----|     mu0_3(unknown)                      = ^CallSideEffect                      : ~m?
#-----|     mu0_4(ClassWithDestructor)          = ^IndirectMayWriteSideEffect[-1]      : &:r2223_4
# 2223|     r2223_5(bool)                       = Constant[1]                          : 
# 2223|     mu2223_6(bool)                      = Store[b#init]                        : &:r2223_1, r2223_5
#-----|   Goto -> Block 2

# 2224|   Block 2
# 2224|     v2224_1(void)                       = NoOp                                  : 
# 2224|     r2224_2(glval<ClassWithDestructor>) = VariableAddress[a]                    : 
# 2224|     r2224_3(glval<unknown>)             = FunctionAddress[~ClassWithDestructor] : 
# 2224|     v2224_4(void)                       = Call[~ClassWithDestructor]            : func:r2224_3, this:r2224_2
# 2224|     mu2224_5(unknown)                   = ^CallSideEffect                       : ~m?
# 2224|     v2224_6(void)                       = ^IndirectReadSideEffect[-1]           : &:r2224_2, ~m?
# 2224|     mu2224_7(ClassWithDestructor)       = ^IndirectMayWriteSideEffect[-1]       : &:r2224_2
# 2221|     v2221_4(void)                       = ReturnVoid                            : 
# 2221|     v2221_5(void)                       = AliasedUse                            : ~m?
# 2221|     v2221_6(void)                       = ExitFunction                          : 

# 2226| void static_variable_with_destructor_2()
# 2226|   Block 0
# 2226|     v2226_1(void)        = EnterFunction           : 
# 2226|     mu2226_2(unknown)    = AliasedDefinition       : 
# 2226|     mu2226_3(unknown)    = InitializeNonLocal      : 
# 2227|     r2227_1(glval<bool>) = VariableAddress[a#init] : 
# 2227|     r2227_2(bool)        = Load[a#init]            : &:r2227_1, ~m?
# 2227|     v2227_3(void)        = ConditionalBranch       : r2227_2
#-----|   False -> Block 1
#-----|   True -> Block 2

# 2227|   Block 1
# 2227|     r2227_4(glval<ClassWithDestructor>) = VariableAddress[a]                   : 
#-----|     r0_1(glval<unknown>)                = FunctionAddress[ClassWithDestructor] : 
#-----|     v0_2(void)                          = Call[ClassWithDestructor]            : func:r0_1, this:r2227_4
#-----|     mu0_3(unknown)                      = ^CallSideEffect                      : ~m?
#-----|     mu0_4(ClassWithDestructor)          = ^IndirectMayWriteSideEffect[-1]      : &:r2227_4
# 2227|     r2227_5(bool)                       = Constant[1]                          : 
# 2227|     mu2227_6(bool)                      = Store[a#init]                        : &:r2227_1, r2227_5
#-----|   Goto -> Block 2

# 2228|   Block 2
# 2228|     r2228_1(glval<ClassWithDestructor>) = VariableAddress[b]                    : 
# 2228|     mu2228_2(ClassWithDestructor)       = Uninitialized[b]                      : &:r2228_1
# 2228|     r2228_3(glval<unknown>)             = FunctionAddress[ClassWithDestructor]  : 
# 2228|     v2228_4(void)                       = Call[ClassWithDestructor]             : func:r2228_3, this:r2228_1
# 2228|     mu2228_5(unknown)                   = ^CallSideEffect                       : ~m?
# 2228|     mu2228_6(ClassWithDestructor)       = ^IndirectMayWriteSideEffect[-1]       : &:r2228_1
# 2229|     v2229_1(void)                       = NoOp                                  : 
# 2229|     r2229_2(glval<ClassWithDestructor>) = VariableAddress[b]                    : 
# 2229|     r2229_3(glval<unknown>)             = FunctionAddress[~ClassWithDestructor] : 
# 2229|     v2229_4(void)                       = Call[~ClassWithDestructor]            : func:r2229_3, this:r2229_2
# 2229|     mu2229_5(unknown)                   = ^CallSideEffect                       : ~m?
# 2229|     v2229_6(void)                       = ^IndirectReadSideEffect[-1]           : &:r2229_2, ~m?
# 2229|     mu2229_7(ClassWithDestructor)       = ^IndirectMayWriteSideEffect[-1]       : &:r2229_2
# 2226|     v2226_4(void)                       = ReturnVoid                            : 
# 2226|     v2226_5(void)                       = AliasedUse                            : ~m?
# 2226|     v2226_6(void)                       = ExitFunction                          : 

# 2231| void static_variable_with_destructor_3()
# 2231|   Block 0
# 2231|     v2231_1(void)                       = EnterFunction                        : 
# 2231|     mu2231_2(unknown)                   = AliasedDefinition                    : 
# 2231|     mu2231_3(unknown)                   = InitializeNonLocal                   : 
# 2232|     r2232_1(glval<ClassWithDestructor>) = VariableAddress[a]                   : 
# 2232|     mu2232_2(ClassWithDestructor)       = Uninitialized[a]                     : &:r2232_1
# 2232|     r2232_3(glval<unknown>)             = FunctionAddress[ClassWithDestructor] : 
# 2232|     v2232_4(void)                       = Call[ClassWithDestructor]            : func:r2232_3, this:r2232_1
# 2232|     mu2232_5(unknown)                   = ^CallSideEffect                      : ~m?
# 2232|     mu2232_6(ClassWithDestructor)       = ^IndirectMayWriteSideEffect[-1]      : &:r2232_1
# 2233|     r2233_1(glval<ClassWithDestructor>) = VariableAddress[b]                   : 
# 2233|     mu2233_2(ClassWithDestructor)       = Uninitialized[b]                     : &:r2233_1
# 2233|     r2233_3(glval<unknown>)             = FunctionAddress[ClassWithDestructor] : 
# 2233|     v2233_4(void)                       = Call[ClassWithDestructor]            : func:r2233_3, this:r2233_1
# 2233|     mu2233_5(unknown)                   = ^CallSideEffect                      : ~m?
# 2233|     mu2233_6(ClassWithDestructor)       = ^IndirectMayWriteSideEffect[-1]      : &:r2233_1
# 2234|     r2234_1(glval<bool>)                = VariableAddress[c#init]              : 
# 2234|     r2234_2(bool)                       = Load[c#init]                         : &:r2234_1, ~m?
# 2234|     v2234_3(void)                       = ConditionalBranch                    : r2234_2
#-----|   False -> Block 1
#-----|   True -> Block 2

# 2234|   Block 1
# 2234|     r2234_4(glval<ClassWithDestructor>) = VariableAddress[c]                   : 
#-----|     r0_1(glval<unknown>)                = FunctionAddress[ClassWithDestructor] : 
#-----|     v0_2(void)                          = Call[ClassWithDestructor]            : func:r0_1, this:r2234_4
#-----|     mu0_3(unknown)                      = ^CallSideEffect                      : ~m?
#-----|     mu0_4(ClassWithDestructor)          = ^IndirectMayWriteSideEffect[-1]      : &:r2234_4
# 2234|     r2234_5(bool)                       = Constant[1]                          : 
# 2234|     mu2234_6(bool)                      = Store[c#init]                        : &:r2234_1, r2234_5
#-----|   Goto -> Block 2

# 2235|   Block 2
# 2235|     v2235_1(void)                       = NoOp                                  : 
# 2235|     r2235_2(glval<ClassWithDestructor>) = VariableAddress[b]                    : 
# 2235|     r2235_3(glval<unknown>)             = FunctionAddress[~ClassWithDestructor] : 
# 2235|     v2235_4(void)                       = Call[~ClassWithDestructor]            : func:r2235_3, this:r2235_2
# 2235|     mu2235_5(unknown)                   = ^CallSideEffect                       : ~m?
# 2235|     v2235_6(void)                       = ^IndirectReadSideEffect[-1]           : &:r2235_2, ~m?
# 2235|     mu2235_7(ClassWithDestructor)       = ^IndirectMayWriteSideEffect[-1]       : &:r2235_2
# 2235|     r2235_8(glval<ClassWithDestructor>) = VariableAddress[a]                    : 
# 2235|     r2235_9(glval<unknown>)             = FunctionAddress[~ClassWithDestructor] : 
# 2235|     v2235_10(void)                      = Call[~ClassWithDestructor]            : func:r2235_9, this:r2235_8
# 2235|     mu2235_11(unknown)                  = ^CallSideEffect                       : ~m?
# 2235|     v2235_12(void)                      = ^IndirectReadSideEffect[-1]           : &:r2235_8, ~m?
# 2235|     mu2235_13(ClassWithDestructor)      = ^IndirectMayWriteSideEffect[-1]       : &:r2235_8
# 2231|     v2231_4(void)                       = ReturnVoid                            : 
# 2231|     v2231_5(void)                       = AliasedUse                            : ~m?
# 2231|     v2231_6(void)                       = ExitFunction                          : 

# 2237| ClassWithDestructor global_class_with_destructor
# 2237|   Block 0
# 2237|     v2237_1(void)                       = EnterFunction                                 : 
# 2237|     mu2237_2(unknown)                   = AliasedDefinition                             : 
# 2237|     r2237_3(glval<ClassWithDestructor>) = VariableAddress[global_class_with_destructor] : 
# 2237|     r2237_4(glval<unknown>)             = FunctionAddress[ClassWithDestructor]          : 
# 2237|     v2237_5(void)                       = Call[ClassWithDestructor]                     : func:r2237_4, this:r2237_3
# 2237|     mu2237_6(unknown)                   = ^CallSideEffect                               : ~m?
# 2237|     mu2237_7(ClassWithDestructor)       = ^IndirectMayWriteSideEffect[-1]               : &:r2237_3
# 2237|     v2237_8(void)                       = ReturnVoid                                    : 
# 2237|     v2237_9(void)                       = AliasedUse                                    : ~m?
# 2237|     v2237_10(void)                      = ExitFunction                                  : 

# 2241| ClassWithDestructor& vacuous_destructor_call::get<ClassWithDestructor>(ClassWithDestructor&)
# 2241|   Block 0
# 2241|     v2241_1(void)                          = EnterFunction            : 
# 2241|     mu2241_2(unknown)                      = AliasedDefinition        : 
# 2241|     mu2241_3(unknown)                      = InitializeNonLocal       : 
# 2241|     r2241_4(glval<ClassWithDestructor &>)  = VariableAddress[t]       : 
# 2241|     mu2241_5(ClassWithDestructor &)        = InitializeParameter[t]   : &:r2241_4
# 2241|     r2241_6(ClassWithDestructor &)         = Load[t]                  : &:r2241_4, ~m?
# 2241|     mu2241_7(unknown)                      = InitializeIndirection[t] : &:r2241_6
# 2241|     r2241_8(glval<ClassWithDestructor &>)  = VariableAddress[#return] : 
# 2241|     r2241_9(glval<ClassWithDestructor &>)  = VariableAddress[t]       : 
# 2241|     r2241_10(ClassWithDestructor &)        = Load[t]                  : &:r2241_9, ~m?
# 2241|     r2241_11(glval<ClassWithDestructor>)   = CopyValue                : r2241_10
# 2241|     r2241_12(ClassWithDestructor &)        = CopyValue                : r2241_11
# 2241|     mu2241_13(ClassWithDestructor &)       = Store[#return]           : &:r2241_8, r2241_12
# 2241|     v2241_14(void)                         = ReturnIndirection[t]     : &:r2241_6, ~m?
# 2241|     r2241_15(glval<ClassWithDestructor &>) = VariableAddress[#return] : 
# 2241|     v2241_16(void)                         = ReturnValue              : &:r2241_15, ~m?
# 2241|     v2241_17(void)                         = AliasedUse               : ~m?
# 2241|     v2241_18(void)                         = ExitFunction             : 

# 2241| int& vacuous_destructor_call::get<int>(int&)
# 2241|   Block 0
# 2241|     v2241_1(void)          = EnterFunction            : 
# 2241|     mu2241_2(unknown)      = AliasedDefinition        : 
# 2241|     mu2241_3(unknown)      = InitializeNonLocal       : 
# 2241|     r2241_4(glval<int &>)  = VariableAddress[t]       : 
# 2241|     mu2241_5(int &)        = InitializeParameter[t]   : &:r2241_4
# 2241|     r2241_6(int &)         = Load[t]                  : &:r2241_4, ~m?
# 2241|     mu2241_7(unknown)      = InitializeIndirection[t] : &:r2241_6
# 2241|     r2241_8(glval<int &>)  = VariableAddress[#return] : 
# 2241|     r2241_9(glval<int &>)  = VariableAddress[t]       : 
# 2241|     r2241_10(int &)        = Load[t]                  : &:r2241_9, ~m?
# 2241|     r2241_11(glval<int>)   = CopyValue                : r2241_10
# 2241|     r2241_12(int &)        = CopyValue                : r2241_11
# 2241|     mu2241_13(int &)       = Store[#return]           : &:r2241_8, r2241_12
# 2241|     v2241_14(void)         = ReturnIndirection[t]     : &:r2241_6, ~m?
# 2241|     r2241_15(glval<int &>) = VariableAddress[#return] : 
# 2241|     v2241_16(void)         = ReturnValue              : &:r2241_15, ~m?
# 2241|     v2241_17(void)         = AliasedUse               : ~m?
# 2241|     v2241_18(void)         = ExitFunction             : 

# 2244| void vacuous_destructor_call::call_destructor<ClassWithDestructor>(ClassWithDestructor&)
# 2244|   Block 0
# 2244|     v2244_1(void)                         = EnterFunction                         : 
# 2244|     mu2244_2(unknown)                     = AliasedDefinition                     : 
# 2244|     mu2244_3(unknown)                     = InitializeNonLocal                    : 
# 2244|     r2244_4(glval<ClassWithDestructor &>) = VariableAddress[t]                    : 
# 2244|     mu2244_5(ClassWithDestructor &)       = InitializeParameter[t]                : &:r2244_4
# 2244|     r2244_6(ClassWithDestructor &)        = Load[t]                               : &:r2244_4, ~m?
# 2244|     mu2244_7(unknown)                     = InitializeIndirection[t]              : &:r2244_6
# 2245|     r2245_1(glval<unknown>)               = FunctionAddress[get]                  : 
# 2245|     r2245_2(glval<ClassWithDestructor &>) = VariableAddress[t]                    : 
# 2245|     r2245_3(ClassWithDestructor &)        = Load[t]                               : &:r2245_2, ~m?
# 2245|     r2245_4(glval<ClassWithDestructor>)   = CopyValue                             : r2245_3
# 2245|     r2245_5(ClassWithDestructor &)        = CopyValue                             : r2245_4
# 2245|     r2245_6(ClassWithDestructor &)        = Call[get]                             : func:r2245_1, 0:r2245_5
# 2245|     mu2245_7(unknown)                     = ^CallSideEffect                       : ~m?
# 2245|     v2245_8(void)                         = ^BufferReadSideEffect[0]              : &:r2245_5, ~m?
# 2245|     mu2245_9(unknown)                     = ^BufferMayWriteSideEffect[0]          : &:r2245_5
# 2245|     r2245_10(glval<ClassWithDestructor>)  = CopyValue                             : r2245_6
# 2245|     r2245_11(glval<unknown>)              = FunctionAddress[~ClassWithDestructor] : 
# 2245|     v2245_12(void)                        = Call[~ClassWithDestructor]            : func:r2245_11
# 2245|     mu2245_13(unknown)                    = ^CallSideEffect                       : ~m?
# 2245|     v2245_14(void)                        = ^IndirectReadSideEffect[-1]           : &:r2245_10, ~m?
# 2245|     mu2245_15(ClassWithDestructor)        = ^IndirectMayWriteSideEffect[-1]       : &:r2245_10
# 2246|     v2246_1(void)                         = NoOp                                  : 
# 2244|     v2244_8(void)                         = ReturnIndirection[t]                  : &:r2244_6, ~m?
# 2244|     v2244_9(void)                         = ReturnVoid                            : 
# 2244|     v2244_10(void)                        = AliasedUse                            : ~m?
# 2244|     v2244_11(void)                        = ExitFunction                          : 

# 2244| void vacuous_destructor_call::call_destructor<int>(int&)
# 2244|   Block 0
# 2244|     v2244_1(void)           = EnterFunction                : 
# 2244|     mu2244_2(unknown)       = AliasedDefinition            : 
# 2244|     mu2244_3(unknown)       = InitializeNonLocal           : 
# 2244|     r2244_4(glval<int &>)   = VariableAddress[t]           : 
# 2244|     mu2244_5(int &)         = InitializeParameter[t]       : &:r2244_4
# 2244|     r2244_6(int &)          = Load[t]                      : &:r2244_4, ~m?
# 2244|     mu2244_7(unknown)       = InitializeIndirection[t]     : &:r2244_6
# 2245|     r2245_1(glval<unknown>) = FunctionAddress[get]         : 
# 2245|     r2245_2(glval<int &>)   = VariableAddress[t]           : 
# 2245|     r2245_3(int &)          = Load[t]                      : &:r2245_2, ~m?
# 2245|     r2245_4(glval<int>)     = CopyValue                    : r2245_3
# 2245|     r2245_5(int &)          = CopyValue                    : r2245_4
# 2245|     r2245_6(int &)          = Call[get]                    : func:r2245_1, 0:r2245_5
# 2245|     mu2245_7(unknown)       = ^CallSideEffect              : ~m?
# 2245|     v2245_8(void)           = ^BufferReadSideEffect[0]     : &:r2245_5, ~m?
# 2245|     mu2245_9(unknown)       = ^BufferMayWriteSideEffect[0] : &:r2245_5
# 2245|     r2245_10(glval<int>)    = CopyValue                    : r2245_6
# 2246|     v2246_1(void)           = NoOp                         : 
# 2244|     v2244_8(void)           = ReturnIndirection[t]         : &:r2244_6, ~m?
# 2244|     v2244_9(void)           = ReturnVoid                   : 
# 2244|     v2244_10(void)          = AliasedUse                   : ~m?
# 2244|     v2244_11(void)          = ExitFunction                 : 

# 2248| void vacuous_destructor_call::non_vacuous_destructor_call()
# 2248|   Block 0
# 2248|     v2248_1(void)                       = EnterFunction                         : 
# 2248|     mu2248_2(unknown)                   = AliasedDefinition                     : 
# 2248|     mu2248_3(unknown)                   = InitializeNonLocal                    : 
# 2249|     r2249_1(glval<ClassWithDestructor>) = VariableAddress[c]                    : 
# 2249|     mu2249_2(ClassWithDestructor)       = Uninitialized[c]                      : &:r2249_1
# 2249|     r2249_3(glval<unknown>)             = FunctionAddress[ClassWithDestructor]  : 
# 2249|     v2249_4(void)                       = Call[ClassWithDestructor]             : func:r2249_3, this:r2249_1
# 2249|     mu2249_5(unknown)                   = ^CallSideEffect                       : ~m?
# 2249|     mu2249_6(ClassWithDestructor)       = ^IndirectMayWriteSideEffect[-1]       : &:r2249_1
# 2250|     r2250_1(glval<unknown>)             = FunctionAddress[call_destructor]      : 
# 2250|     r2250_2(glval<ClassWithDestructor>) = VariableAddress[c]                    : 
# 2250|     r2250_3(ClassWithDestructor &)      = CopyValue                             : r2250_2
# 2250|     v2250_4(void)                       = Call[call_destructor]                 : func:r2250_1, 0:r2250_3
# 2250|     mu2250_5(unknown)                   = ^CallSideEffect                       : ~m?
# 2250|     v2250_6(void)                       = ^BufferReadSideEffect[0]              : &:r2250_3, ~m?
# 2250|     mu2250_7(unknown)                   = ^BufferMayWriteSideEffect[0]          : &:r2250_3
# 2251|     v2251_1(void)                       = NoOp                                  : 
# 2251|     r2251_2(glval<ClassWithDestructor>) = VariableAddress[c]                    : 
# 2251|     r2251_3(glval<unknown>)             = FunctionAddress[~ClassWithDestructor] : 
# 2251|     v2251_4(void)                       = Call[~ClassWithDestructor]            : func:r2251_3, this:r2251_2
# 2251|     mu2251_5(unknown)                   = ^CallSideEffect                       : ~m?
# 2251|     v2251_6(void)                       = ^IndirectReadSideEffect[-1]           : &:r2251_2, ~m?
# 2251|     mu2251_7(ClassWithDestructor)       = ^IndirectMayWriteSideEffect[-1]       : &:r2251_2
# 2248|     v2248_4(void)                       = ReturnVoid                            : 
# 2248|     v2248_5(void)                       = AliasedUse                            : ~m?
# 2248|     v2248_6(void)                       = ExitFunction                          : 

# 2253| void vacuous_destructor_call::vacuous_destructor_call()
# 2253|   Block 0
# 2253|     v2253_1(void)           = EnterFunction                    : 
# 2253|     mu2253_2(unknown)       = AliasedDefinition                : 
# 2253|     mu2253_3(unknown)       = InitializeNonLocal               : 
# 2254|     r2254_1(glval<int>)     = VariableAddress[i]               : 
# 2254|     mu2254_2(int)           = Uninitialized[i]                 : &:r2254_1
# 2255|     r2255_1(glval<unknown>) = FunctionAddress[call_destructor] : 
# 2255|     r2255_2(glval<int>)     = VariableAddress[i]               : 
# 2255|     r2255_3(int &)          = CopyValue                        : r2255_2
# 2255|     v2255_4(void)           = Call[call_destructor]            : func:r2255_1, 0:r2255_3
# 2255|     mu2255_5(unknown)       = ^CallSideEffect                  : ~m?
# 2255|     v2255_6(void)           = ^BufferReadSideEffect[0]         : &:r2255_3, ~m?
# 2255|     mu2255_7(unknown)       = ^BufferMayWriteSideEffect[0]     : &:r2255_3
# 2256|     v2256_1(void)           = NoOp                             : 
# 2253|     v2253_4(void)           = ReturnVoid                       : 
# 2253|     v2253_5(void)           = AliasedUse                       : ~m?
# 2253|     v2253_6(void)           = ExitFunction                     : 

# 2259| void TryCatchDestructors(bool)
# 2259|   Block 0
# 2259|     v2259_1(void)           = EnterFunction                   : 
# 2259|     mu2259_2(unknown)       = AliasedDefinition               : 
# 2259|     mu2259_3(unknown)       = InitializeNonLocal              : 
# 2259|     r2259_4(glval<bool>)    = VariableAddress[b]              : 
# 2259|     mu2259_5(bool)          = InitializeParameter[b]          : &:r2259_4
# 2261|     r2261_1(glval<String>)  = VariableAddress[s]              : 
# 2261|     mu2261_2(String)        = Uninitialized[s]                : &:r2261_1
# 2261|     r2261_3(glval<unknown>) = FunctionAddress[String]         : 
# 2261|     v2261_4(void)           = Call[String]                    : func:r2261_3, this:r2261_1
# 2261|     mu2261_5(unknown)       = ^CallSideEffect                 : ~m?
# 2261|     mu2261_6(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2261_1
# 2262|     r2262_1(glval<bool>)    = VariableAddress[b]              : 
# 2262|     r2262_2(bool)           = Load[b]                         : &:r2262_1, ~m?
# 2262|     v2262_3(void)           = ConditionalBranch               : r2262_2
#-----|   False -> Block 4
#-----|   True -> Block 3

# 2259|   Block 1
# 2259|     v2259_6(void) = AliasedUse   : ~m?
# 2259|     v2259_7(void) = ExitFunction : 

# 2259|   Block 2
# 2259|     v2259_8(void) = Unwind : 
#-----|   Goto -> Block 1

# 2263|   Block 3
# 2263|     r2263_1(glval<char *>)   = VariableAddress[#throw2263:7]    : 
# 2263|     r2263_2(glval<char[15]>) = StringConstant["string literal"] : 
# 2263|     r2263_3(char *)          = Convert                          : r2263_2
# 2263|     mu2263_4(char *)         = Store[#throw2263:7]              : &:r2263_1, r2263_3
# 2263|     v2263_5(void)            = ThrowValue                       : &:r2263_1, ~m?
#-----|   Exception -> Block 5

# 2265|   Block 4
# 2265|     r2265_1(glval<String>)  = VariableAddress[s2]             : 
# 2265|     mu2265_2(String)        = Uninitialized[s2]               : &:r2265_1
# 2265|     r2265_3(glval<unknown>) = FunctionAddress[String]         : 
# 2265|     v2265_4(void)           = Call[String]                    : func:r2265_3, this:r2265_1
# 2265|     mu2265_5(unknown)       = ^CallSideEffect                 : ~m?
# 2265|     mu2265_6(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2265_1
# 2266|     r2266_1(glval<String>)  = VariableAddress[s2]             : 
# 2266|     r2266_2(glval<unknown>) = FunctionAddress[~String]        : 
# 2266|     v2266_3(void)           = Call[~String]                   : func:r2266_2, this:r2266_1
# 2266|     mu2266_4(unknown)       = ^CallSideEffect                 : ~m?
# 2266|     v2266_5(void)           = ^IndirectReadSideEffect[-1]     : &:r2266_1, ~m?
# 2266|     mu2266_6(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2266_1
# 2266|     r2266_7(glval<String>)  = VariableAddress[s]              : 
# 2266|     r2266_8(glval<unknown>) = FunctionAddress[~String]        : 
# 2266|     v2266_9(void)           = Call[~String]                   : func:r2266_8, this:r2266_7
# 2266|     mu2266_10(unknown)      = ^CallSideEffect                 : ~m?
# 2266|     v2266_11(void)          = ^IndirectReadSideEffect[-1]     : &:r2266_7, ~m?
# 2266|     mu2266_12(String)       = ^IndirectMayWriteSideEffect[-1] : &:r2266_7
#-----|   Goto -> Block 10

# 2267|   Block 5
# 2267|     v2267_1(void) = CatchByType[const char *] : 
#-----|   Exception -> Block 7
#-----|   Goto -> Block 6

# 2267|   Block 6
# 2267|     r2267_2(glval<char *>)  = VariableAddress[s]              : 
# 2267|     mu2267_3(char *)        = InitializeParameter[s]          : &:r2267_2
# 2267|     r2267_4(char *)         = Load[s]                         : &:r2267_2, ~m?
# 2267|     mu2267_5(unknown)       = InitializeIndirection[s]        : &:r2267_4
# 2268|     r2268_1(glval<String>)  = VariableAddress[#throw2268:5]   : 
# 2268|     mu2268_2(String)        = Uninitialized[#throw2268:5]     : &:r2268_1
# 2268|     r2268_3(glval<unknown>) = FunctionAddress[String]         : 
# 2268|     r2268_4(glval<char *>)  = VariableAddress[s]              : 
# 2268|     r2268_5(char *)         = Load[s]                         : &:r2268_4, ~m?
# 2268|     v2268_6(void)           = Call[String]                    : func:r2268_3, this:r2268_1, 0:r2268_5
# 2268|     mu2268_7(unknown)       = ^CallSideEffect                 : ~m?
# 2268|     v2268_8(void)           = ^BufferReadSideEffect[0]        : &:r2268_5, ~m?
# 2268|     mu2268_9(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2268_1
# 2268|     v2268_10(void)          = ThrowValue                      : &:r2268_1, ~m?
#-----|   Exception -> Block 2

# 2270|   Block 7
# 2270|     v2270_1(void) = CatchByType[const String &] : 
#-----|   Exception -> Block 9
#-----|   Goto -> Block 8

# 2270|   Block 8
# 2270|     r2270_2(glval<String &>) = VariableAddress[e]       : 
# 2270|     mu2270_3(String &)       = InitializeParameter[e]   : &:r2270_2
# 2270|     r2270_4(String &)        = Load[e]                  : &:r2270_2, ~m?
# 2270|     mu2270_5(unknown)        = InitializeIndirection[e] : &:r2270_4
# 2270|     v2270_6(void)            = NoOp                     : 
#-----|   Goto -> Block 10

# 2272|   Block 9
# 2272|     v2272_1(void) = CatchAny : 
# 2273|     v2273_1(void) = ReThrow  : 
#-----|   Exception -> Block 2

# 2275|   Block 10
# 2275|     v2275_1(void) = NoOp       : 
# 2259|     v2259_9(void) = ReturnVoid : 
#-----|   Goto -> Block 1

# 2277| void IfDestructors(bool)
# 2277|   Block 0
# 2277|     v2277_1(void)           = EnterFunction                   : 
# 2277|     mu2277_2(unknown)       = AliasedDefinition               : 
# 2277|     mu2277_3(unknown)       = InitializeNonLocal              : 
# 2277|     r2277_4(glval<bool>)    = VariableAddress[b]              : 
# 2277|     mu2277_5(bool)          = InitializeParameter[b]          : &:r2277_4
# 2278|     r2278_1(glval<String>)  = VariableAddress[s1]             : 
# 2278|     mu2278_2(String)        = Uninitialized[s1]               : &:r2278_1
# 2278|     r2278_3(glval<unknown>) = FunctionAddress[String]         : 
# 2278|     v2278_4(void)           = Call[String]                    : func:r2278_3, this:r2278_1
# 2278|     mu2278_5(unknown)       = ^CallSideEffect                 : ~m?
# 2278|     mu2278_6(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2278_1
# 2279|     r2279_1(glval<bool>)    = VariableAddress[b]              : 
# 2279|     r2279_2(bool)           = Load[b]                         : &:r2279_1, ~m?
# 2279|     v2279_3(void)           = ConditionalBranch               : r2279_2
#-----|   False -> Block 2
#-----|   True -> Block 1

# 2280|   Block 1
# 2280|     r2280_1(glval<String>)  = VariableAddress[s2]             : 
# 2280|     mu2280_2(String)        = Uninitialized[s2]               : &:r2280_1
# 2280|     r2280_3(glval<unknown>) = FunctionAddress[String]         : 
# 2280|     v2280_4(void)           = Call[String]                    : func:r2280_3, this:r2280_1
# 2280|     mu2280_5(unknown)       = ^CallSideEffect                 : ~m?
# 2280|     mu2280_6(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2280_1
# 2281|     r2281_1(glval<String>)  = VariableAddress[s2]             : 
# 2281|     r2281_2(glval<unknown>) = FunctionAddress[~String]        : 
# 2281|     v2281_3(void)           = Call[~String]                   : func:r2281_2, this:r2281_1
# 2281|     mu2281_4(unknown)       = ^CallSideEffect                 : ~m?
# 2281|     v2281_5(void)           = ^IndirectReadSideEffect[-1]     : &:r2281_1, ~m?
# 2281|     mu2281_6(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2281_1
#-----|   Goto -> Block 3

# 2282|   Block 2
# 2282|     r2282_1(glval<String>)  = VariableAddress[s3]             : 
# 2282|     mu2282_2(String)        = Uninitialized[s3]               : &:r2282_1
# 2282|     r2282_3(glval<unknown>) = FunctionAddress[String]         : 
# 2282|     v2282_4(void)           = Call[String]                    : func:r2282_3, this:r2282_1
# 2282|     mu2282_5(unknown)       = ^CallSideEffect                 : ~m?
# 2282|     mu2282_6(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2282_1
# 2283|     r2283_1(glval<String>)  = VariableAddress[s3]             : 
# 2283|     r2283_2(glval<unknown>) = FunctionAddress[~String]        : 
# 2283|     v2283_3(void)           = Call[~String]                   : func:r2283_2, this:r2283_1
# 2283|     mu2283_4(unknown)       = ^CallSideEffect                 : ~m?
# 2283|     v2283_5(void)           = ^IndirectReadSideEffect[-1]     : &:r2283_1, ~m?
# 2283|     mu2283_6(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2283_1
#-----|   Goto -> Block 3

# 2284|   Block 3
# 2284|     r2284_1(glval<String>)  = VariableAddress[s4]             : 
# 2284|     mu2284_2(String)        = Uninitialized[s4]               : &:r2284_1
# 2284|     r2284_3(glval<unknown>) = FunctionAddress[String]         : 
# 2284|     v2284_4(void)           = Call[String]                    : func:r2284_3, this:r2284_1
# 2284|     mu2284_5(unknown)       = ^CallSideEffect                 : ~m?
# 2284|     mu2284_6(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2284_1
# 2285|     v2285_1(void)           = NoOp                            : 
# 2285|     r2285_2(glval<String>)  = VariableAddress[s4]             : 
# 2285|     r2285_3(glval<unknown>) = FunctionAddress[~String]        : 
# 2285|     v2285_4(void)           = Call[~String]                   : func:r2285_3, this:r2285_2
# 2285|     mu2285_5(unknown)       = ^CallSideEffect                 : ~m?
# 2285|     v2285_6(void)           = ^IndirectReadSideEffect[-1]     : &:r2285_2, ~m?
# 2285|     mu2285_7(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2285_2
# 2285|     r2285_8(glval<String>)  = VariableAddress[s1]             : 
# 2285|     r2285_9(glval<unknown>) = FunctionAddress[~String]        : 
# 2285|     v2285_10(void)          = Call[~String]                   : func:r2285_9, this:r2285_8
# 2285|     mu2285_11(unknown)      = ^CallSideEffect                 : ~m?
# 2285|     v2285_12(void)          = ^IndirectReadSideEffect[-1]     : &:r2285_8, ~m?
# 2285|     mu2285_13(String)       = ^IndirectMayWriteSideEffect[-1] : &:r2285_8
# 2277|     v2277_6(void)           = ReturnVoid                      : 
# 2277|     v2277_7(void)           = AliasedUse                      : ~m?
# 2277|     v2277_8(void)           = ExitFunction                    : 

# 2287| void ForDestructors()
# 2287|   Block 0
# 2287|     v2287_1(void)           = EnterFunction                   : 
# 2287|     mu2287_2(unknown)       = AliasedDefinition               : 
# 2287|     mu2287_3(unknown)       = InitializeNonLocal              : 
# 2288|     r2288_1(glval<char>)    = VariableAddress[c]              : 
# 2288|     r2288_2(char)           = Constant[97]                    : 
# 2288|     mu2288_3(char)          = Store[c]                        : &:r2288_1, r2288_2
# 2289|     r2289_1(glval<String>)  = VariableAddress[s]              : 
# 2289|     mu2289_2(String)        = Uninitialized[s]                : &:r2289_1
# 2289|     r2289_3(glval<unknown>) = FunctionAddress[String]         : 
# 2289|     r2289_4(glval<char[6]>) = StringConstant["hello"]         : 
# 2289|     r2289_5(char *)         = Convert                         : r2289_4
# 2289|     v2289_6(void)           = Call[String]                    : func:r2289_3, this:r2289_1, 0:r2289_5
# 2289|     mu2289_7(unknown)       = ^CallSideEffect                 : ~m?
# 2289|     v2289_8(void)           = ^BufferReadSideEffect[0]        : &:r2289_5, ~m?
# 2289|     mu2289_9(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2289_1
#-----|   Goto -> Block 1

# 2289|   Block 1
# 2289|     r2289_10(glval<char>) = VariableAddress[c] : 
# 2289|     r2289_11(char)        = Load[c]            : &:r2289_10, ~m?
# 2289|     r2289_12(int)         = Convert            : r2289_11
# 2289|     r2289_13(int)         = Constant[0]        : 
# 2289|     r2289_14(bool)        = CompareNE          : r2289_12, r2289_13
# 2289|     v2289_15(void)        = ConditionalBranch  : r2289_14
#-----|   False -> Block 3
#-----|   True -> Block 2

# 2290|   Block 2
# 2290|     r2290_1(glval<String>)   = VariableAddress[s2]             : 
# 2290|     mu2290_2(String)         = Uninitialized[s2]               : &:r2290_1
# 2290|     r2290_3(glval<unknown>)  = FunctionAddress[String]         : 
# 2290|     v2290_4(void)            = Call[String]                    : func:r2290_3, this:r2290_1
# 2290|     mu2290_5(unknown)        = ^CallSideEffect                 : ~m?
# 2290|     mu2290_6(String)         = ^IndirectMayWriteSideEffect[-1] : &:r2290_1
# 2291|     r2291_1(glval<String>)   = VariableAddress[s2]             : 
# 2291|     r2291_2(glval<unknown>)  = FunctionAddress[~String]        : 
# 2291|     v2291_3(void)            = Call[~String]                   : func:r2291_2, this:r2291_1
# 2291|     mu2291_4(unknown)        = ^CallSideEffect                 : ~m?
# 2291|     v2291_5(void)            = ^IndirectReadSideEffect[-1]     : &:r2291_1, ~m?
# 2291|     mu2291_6(String)         = ^IndirectMayWriteSideEffect[-1] : &:r2291_1
# 2289|     r2289_16(glval<String>)  = VariableAddress[s]              : 
# 2289|     r2289_17(glval<unknown>) = FunctionAddress[pop_back]       : 
# 2289|     r2289_18(char)           = Call[pop_back]                  : func:r2289_17, this:r2289_16
# 2289|     mu2289_19(unknown)       = ^CallSideEffect                 : ~m?
# 2289|     v2289_20(void)           = ^IndirectReadSideEffect[-1]     : &:r2289_16, ~m?
# 2289|     mu2289_21(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2289_16
# 2289|     r2289_22(glval<char>)    = VariableAddress[c]              : 
# 2289|     mu2289_23(char)          = Store[c]                        : &:r2289_22, r2289_18
#-----|   Goto (back edge) -> Block 1

# 2289|   Block 3
# 2289|     r2289_24(glval<String>)                                                                      = VariableAddress[s]              : 
# 2289|     r2289_25(glval<unknown>)                                                                     = FunctionAddress[~String]        : 
# 2289|     v2289_26(void)                                                                               = Call[~String]                   : func:r2289_25, this:r2289_24
# 2289|     mu2289_27(unknown)                                                                           = ^CallSideEffect                 : ~m?
# 2289|     v2289_28(void)                                                                               = ^IndirectReadSideEffect[-1]     : &:r2289_24, ~m?
# 2289|     mu2289_29(String)                                                                            = ^IndirectMayWriteSideEffect[-1] : &:r2289_24
# 2293|     r2293_1(glval<vector<String> &&>)                                                            = VariableAddress[(__range)]      : 
# 2293|     r2293_2(glval<vector<String>>)                                                               = VariableAddress[#temp2293:20]   : 
# 2293|     mu2293_3(vector<String>)                                                                     = Uninitialized[#temp2293:20]     : &:r2293_2
# 2293|     r2293_4(glval<unknown>)                                                                      = FunctionAddress[vector]         : 
# 2293|     r2293_5(glval<String>)                                                                       = VariableAddress[#temp2293:40]   : 
# 2293|     mu2293_6(String)                                                                             = Uninitialized[#temp2293:40]     : &:r2293_5
# 2293|     r2293_7(glval<unknown>)                                                                      = FunctionAddress[String]         : 
# 2293|     r2293_8(glval<char[6]>)                                                                      = StringConstant["hello"]         : 
# 2293|     r2293_9(char *)                                                                              = Convert                         : r2293_8
# 2293|     v2293_10(void)                                                                               = Call[String]                    : func:r2293_7, this:r2293_5, 0:r2293_9
# 2293|     mu2293_11(unknown)                                                                           = ^CallSideEffect                 : ~m?
# 2293|     v2293_12(void)                                                                               = ^BufferReadSideEffect[0]        : &:r2293_9, ~m?
# 2293|     mu2293_13(String)                                                                            = ^IndirectMayWriteSideEffect[-1] : &:r2293_5
# 2293|     r2293_14(String)                                                                             = Load[#temp2293:40]              : &:r2293_5, ~m?
# 2293|     v2293_15(void)                                                                               = Call[vector]                    : func:r2293_4, this:r2293_2, 0:r2293_14
# 2293|     mu2293_16(unknown)                                                                           = ^CallSideEffect                 : ~m?
# 2293|     mu2293_17(vector<String>)                                                                    = ^IndirectMayWriteSideEffect[-1] : &:r2293_2
# 2293|     r2293_18(vector<String> &)                                                                   = CopyValue                       : r2293_2
# 2293|     mu2293_19(vector<String> &&)                                                                 = Store[(__range)]                : &:r2293_1, r2293_18
# 2293|     r2293_20(glval<iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &>>) = VariableAddress[(__begin)]      : 
# 2293|     r2293_21(glval<vector<String> &&>)                                                           = VariableAddress[(__range)]      : 
# 2293|     r2293_22(vector<String> &&)                                                                  = Load[(__range)]                 : &:r2293_21, ~m?
#-----|     r0_1(glval<vector<String>>)                                                                  = CopyValue                       : r2293_22
#-----|     r0_2(glval<vector<String>>)                                                                  = Convert                         : r0_1
# 2293|     r2293_23(glval<unknown>)                                                                     = FunctionAddress[begin]          : 
# 2293|     r2293_24(iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &>)        = Call[begin]                     : func:r2293_23, this:r0_2
#-----|     v0_3(void)                                                                                   = ^IndirectReadSideEffect[-1]     : &:r0_2, ~m?
# 2293|     mu2293_25(iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &>)       = Store[(__begin)]                : &:r2293_20, r2293_24
# 2293|     r2293_26(glval<iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &>>) = VariableAddress[(__end)]        : 
# 2293|     r2293_27(glval<vector<String> &&>)                                                           = VariableAddress[(__range)]      : 
# 2293|     r2293_28(vector<String> &&)                                                                  = Load[(__range)]                 : &:r2293_27, ~m?
#-----|     r0_4(glval<vector<String>>)                                                                  = CopyValue                       : r2293_28
#-----|     r0_5(glval<vector<String>>)                                                                  = Convert                         : r0_4
# 2293|     r2293_29(glval<unknown>)                                                                     = FunctionAddress[end]            : 
# 2293|     r2293_30(iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &>)        = Call[end]                       : func:r2293_29, this:r0_5
#-----|     v0_6(void)                                                                                   = ^IndirectReadSideEffect[-1]     : &:r0_5, ~m?
# 2293|     mu2293_31(iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &>)       = Store[(__end)]                  : &:r2293_26, r2293_30
#-----|   Goto -> Block 4

# 2293|   Block 4
# 2293|     r2293_32(glval<iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &>>) = VariableAddress[(__begin)]      : 
#-----|     r0_7(glval<iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &>>)     = Convert                         : r2293_32
# 2293|     r2293_33(glval<unknown>)                                                                     = FunctionAddress[operator!=]     : 
#-----|     r0_8(glval<iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &>>)     = VariableAddress[#temp0:0]       : 
#-----|     mu0_9(iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &>)           = Uninitialized[#temp0:0]         : &:r0_8
# 2293|     r2293_34(glval<unknown>)                                                                     = FunctionAddress[iterator]       : 
# 2293|     r2293_35(glval<iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &>>) = VariableAddress[(__end)]        : 
#-----|     r0_10(glval<iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &>>)    = Convert                         : r2293_35
#-----|     r0_11(iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &> &)         = CopyValue                       : r0_10
# 2293|     v2293_36(void)                                                                               = Call[iterator]                  : func:r2293_34, this:r0_8, 0:r0_11
# 2293|     mu2293_37(unknown)                                                                           = ^CallSideEffect                 : ~m?
#-----|     v0_12(void)                                                                                  = ^BufferReadSideEffect[0]        : &:r0_11, ~m?
# 2293|     mu2293_38(iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &>)       = ^IndirectMayWriteSideEffect[-1] : &:r0_8
#-----|     r0_13(iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &>)           = Load[#temp0:0]                  : &:r0_8, ~m?
# 2293|     r2293_39(bool)                                                                               = Call[operator!=]                : func:r2293_33, this:r0_7, 0:r0_13
# 2293|     mu2293_40(unknown)                                                                           = ^CallSideEffect                 : ~m?
#-----|     v0_14(void)                                                                                  = ^IndirectReadSideEffect[-1]     : &:r0_7, ~m?
# 2293|     v2293_41(void)                                                                               = ConditionalBranch               : r2293_39
#-----|   False -> Block 6
#-----|   True -> Block 5

# 2293|   Block 5
# 2293|     r2293_42(glval<String>)                                                                      = VariableAddress[s]              : 
# 2293|     mu2293_43(String)                                                                            = Uninitialized[s]                : &:r2293_42
# 2293|     r2293_44(glval<unknown>)                                                                     = FunctionAddress[String]         : 
# 2293|     r2293_45(glval<iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &>>) = VariableAddress[(__begin)]      : 
#-----|     r0_15(glval<iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &>>)    = Convert                         : r2293_45
# 2293|     r2293_46(glval<unknown>)                                                                     = FunctionAddress[operator*]      : 
# 2293|     r2293_47(String &)                                                                           = Call[operator*]                 : func:r2293_46, this:r0_15
# 2293|     mu2293_48(unknown)                                                                           = ^CallSideEffect                 : ~m?
#-----|     v0_16(void)                                                                                  = ^IndirectReadSideEffect[-1]     : &:r0_15, ~m?
# 2293|     r2293_49(glval<String>)                                                                      = CopyValue                       : r2293_47
# 2293|     r2293_50(glval<String>)                                                                      = Convert                         : r2293_49
# 2293|     r2293_51(String &)                                                                           = CopyValue                       : r2293_50
# 2293|     v2293_52(void)                                                                               = Call[String]                    : func:r2293_44, this:r2293_42, 0:r2293_51
# 2293|     mu2293_53(unknown)                                                                           = ^CallSideEffect                 : ~m?
# 2293|     v2293_54(void)                                                                               = ^BufferReadSideEffect[0]        : &:r2293_51, ~m?
# 2293|     mu2293_55(String)                                                                            = ^IndirectMayWriteSideEffect[-1] : &:r2293_42
# 2294|     r2294_1(glval<String>)                                                                       = VariableAddress[s2]             : 
# 2294|     mu2294_2(String)                                                                             = Uninitialized[s2]               : &:r2294_1
# 2294|     r2294_3(glval<unknown>)                                                                      = FunctionAddress[String]         : 
# 2294|     v2294_4(void)                                                                                = Call[String]                    : func:r2294_3, this:r2294_1
# 2294|     mu2294_5(unknown)                                                                            = ^CallSideEffect                 : ~m?
# 2294|     mu2294_6(String)                                                                             = ^IndirectMayWriteSideEffect[-1] : &:r2294_1
# 2295|     r2295_1(glval<String>)                                                                       = VariableAddress[s2]             : 
# 2295|     r2295_2(glval<unknown>)                                                                      = FunctionAddress[~String]        : 
# 2295|     v2295_3(void)                                                                                = Call[~String]                   : func:r2295_2, this:r2295_1
# 2295|     mu2295_4(unknown)                                                                            = ^CallSideEffect                 : ~m?
# 2295|     v2295_5(void)                                                                                = ^IndirectReadSideEffect[-1]     : &:r2295_1, ~m?
# 2295|     mu2295_6(String)                                                                             = ^IndirectMayWriteSideEffect[-1] : &:r2295_1
# 2293|     r2293_56(glval<String>)                                                                      = VariableAddress[s]              : 
# 2293|     r2293_57(glval<unknown>)                                                                     = FunctionAddress[~String]        : 
# 2293|     v2293_58(void)                                                                               = Call[~String]                   : func:r2293_57, this:r2293_56
# 2293|     mu2293_59(unknown)                                                                           = ^CallSideEffect                 : ~m?
# 2293|     v2293_60(void)                                                                               = ^IndirectReadSideEffect[-1]     : &:r2293_56, ~m?
# 2293|     mu2293_61(String)                                                                            = ^IndirectMayWriteSideEffect[-1] : &:r2293_56
# 2293|     r2293_62(glval<iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &>>) = VariableAddress[(__begin)]      : 
# 2293|     r2293_63(glval<unknown>)                                                                     = FunctionAddress[operator++]     : 
# 2293|     r2293_64(iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &> &)      = Call[operator++]                : func:r2293_63, this:r2293_62
# 2293|     mu2293_65(unknown)                                                                           = ^CallSideEffect                 : ~m?
# 2293|     v2293_66(void)                                                                               = ^IndirectReadSideEffect[-1]     : &:r2293_62, ~m?
# 2293|     mu2293_67(iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &>)       = ^IndirectMayWriteSideEffect[-1] : &:r2293_62
# 2293|     r2293_68(glval<iterator<random_access_iterator_tag, String, ptrdiff_t, String *, String &>>) = CopyValue                       : r2293_64
#-----|   Goto (back edge) -> Block 4

# 2297|   Block 6
# 2297|     r2297_1(glval<String>)   = VariableAddress[s]              : 
# 2297|     mu2297_2(String)         = Uninitialized[s]                : &:r2297_1
# 2297|     r2297_3(glval<unknown>)  = FunctionAddress[String]         : 
# 2297|     r2297_4(glval<char[6]>)  = StringConstant["hello"]         : 
# 2297|     r2297_5(char *)          = Convert                         : r2297_4
# 2297|     v2297_6(void)            = Call[String]                    : func:r2297_3, this:r2297_1, 0:r2297_5
# 2297|     mu2297_7(unknown)        = ^CallSideEffect                 : ~m?
# 2297|     v2297_8(void)            = ^BufferReadSideEffect[0]        : &:r2297_5, ~m?
# 2297|     mu2297_9(String)         = ^IndirectMayWriteSideEffect[-1] : &:r2297_1
# 2297|     r2297_10(glval<String>)  = VariableAddress[s2]             : 
# 2297|     mu2297_11(String)        = Uninitialized[s2]               : &:r2297_10
# 2297|     r2297_12(glval<unknown>) = FunctionAddress[String]         : 
# 2297|     r2297_13(glval<char[6]>) = StringConstant["world"]         : 
# 2297|     r2297_14(char *)         = Convert                         : r2297_13
# 2297|     v2297_15(void)           = Call[String]                    : func:r2297_12, this:r2297_10, 0:r2297_14
# 2297|     mu2297_16(unknown)       = ^CallSideEffect                 : ~m?
# 2297|     v2297_17(void)           = ^BufferReadSideEffect[0]        : &:r2297_14, ~m?
# 2297|     mu2297_18(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2297_10
#-----|   Goto -> Block 7

# 2297|   Block 7
# 2297|     r2297_19(glval<char>) = VariableAddress[c] : 
# 2297|     r2297_20(char)        = Load[c]            : &:r2297_19, ~m?
# 2297|     r2297_21(int)         = Convert            : r2297_20
# 2297|     r2297_22(int)         = Constant[0]        : 
# 2297|     r2297_23(bool)        = CompareNE          : r2297_21, r2297_22
# 2297|     v2297_24(void)        = ConditionalBranch  : r2297_23
#-----|   False -> Block 9
#-----|   True -> Block 8

# 2298|   Block 8
# 2298|     r2298_1(char)            = Constant[0]                     : 
# 2298|     r2298_2(glval<char>)     = VariableAddress[c]              : 
# 2298|     mu2298_3(char)           = Store[c]                        : &:r2298_2, r2298_1
# 2297|     r2297_25(glval<String>)  = VariableAddress[s]              : 
# 2297|     r2297_26(glval<unknown>) = FunctionAddress[pop_back]       : 
# 2297|     r2297_27(char)           = Call[pop_back]                  : func:r2297_26, this:r2297_25
# 2297|     mu2297_28(unknown)       = ^CallSideEffect                 : ~m?
# 2297|     v2297_29(void)           = ^IndirectReadSideEffect[-1]     : &:r2297_25, ~m?
# 2297|     mu2297_30(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2297_25
# 2297|     r2297_31(glval<char>)    = VariableAddress[c]              : 
# 2297|     mu2297_32(char)          = Store[c]                        : &:r2297_31, r2297_27
#-----|   Goto (back edge) -> Block 7

# 2297|   Block 9
# 2297|     r2297_33(glval<String>)  = VariableAddress[s2]             : 
# 2297|     r2297_34(glval<unknown>) = FunctionAddress[~String]        : 
# 2297|     v2297_35(void)           = Call[~String]                   : func:r2297_34, this:r2297_33
# 2297|     mu2297_36(unknown)       = ^CallSideEffect                 : ~m?
# 2297|     v2297_37(void)           = ^IndirectReadSideEffect[-1]     : &:r2297_33, ~m?
# 2297|     mu2297_38(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2297_33
# 2297|     r2297_39(glval<String>)  = VariableAddress[s]              : 
# 2297|     r2297_40(glval<unknown>) = FunctionAddress[~String]        : 
# 2297|     v2297_41(void)           = Call[~String]                   : func:r2297_40, this:r2297_39
# 2297|     mu2297_42(unknown)       = ^CallSideEffect                 : ~m?
# 2297|     v2297_43(void)           = ^IndirectReadSideEffect[-1]     : &:r2297_39, ~m?
# 2297|     mu2297_44(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2297_39
# 2300|     v2300_1(void)            = NoOp                            : 
# 2287|     v2287_4(void)            = ReturnVoid                      : 
# 2287|     v2287_5(void)            = AliasedUse                      : ~m?
# 2287|     v2287_6(void)            = ExitFunction                    : 

# 2302| void IfDestructors2(bool)
# 2302|   Block 0
# 2302|     v2302_1(void)           = EnterFunction                   : 
# 2302|     mu2302_2(unknown)       = AliasedDefinition               : 
# 2302|     mu2302_3(unknown)       = InitializeNonLocal              : 
# 2302|     r2302_4(glval<bool>)    = VariableAddress[b]              : 
# 2302|     mu2302_5(bool)          = InitializeParameter[b]          : &:r2302_4
# 2303|     r2303_1(glval<String>)  = VariableAddress[s]              : 
# 2303|     mu2303_2(String)        = Uninitialized[s]                : &:r2303_1
# 2303|     r2303_3(glval<unknown>) = FunctionAddress[String]         : 
# 2303|     r2303_4(glval<char[6]>) = StringConstant["hello"]         : 
# 2303|     r2303_5(char *)         = Convert                         : r2303_4
# 2303|     v2303_6(void)           = Call[String]                    : func:r2303_3, this:r2303_1, 0:r2303_5
# 2303|     mu2303_7(unknown)       = ^CallSideEffect                 : ~m?
# 2303|     v2303_8(void)           = ^BufferReadSideEffect[0]        : &:r2303_5, ~m?
# 2303|     mu2303_9(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2303_1
# 2303|     r2303_10(glval<bool>)   = VariableAddress[b]              : 
# 2303|     r2303_11(bool)          = Load[b]                         : &:r2303_10, ~m?
# 2303|     v2303_12(void)          = ConditionalBranch               : r2303_11
#-----|   False -> Block 2
#-----|   True -> Block 1

# 2304|   Block 1
# 2304|     r2304_1(glval<int>) = VariableAddress[x] : 
# 2304|     r2304_2(int)        = Constant[0]        : 
# 2304|     mu2304_3(int)       = Store[x]           : &:r2304_1, r2304_2
#-----|   Goto -> Block 3

# 2306|   Block 2
# 2306|     r2306_1(glval<int>) = VariableAddress[y] : 
# 2306|     r2306_2(int)        = Constant[0]        : 
# 2306|     mu2306_3(int)       = Store[y]           : &:r2306_1, r2306_2
#-----|   Goto -> Block 3

# 2307|   Block 3
# 2307|     r2307_1(glval<String>)  = VariableAddress[s]              : 
# 2307|     r2307_2(glval<unknown>) = FunctionAddress[~String]        : 
# 2307|     v2307_3(void)           = Call[~String]                   : func:r2307_2, this:r2307_1
# 2307|     mu2307_4(unknown)       = ^CallSideEffect                 : ~m?
# 2307|     v2307_5(void)           = ^IndirectReadSideEffect[-1]     : &:r2307_1, ~m?
# 2307|     mu2307_6(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2307_1
# 2308|     v2308_1(void)           = NoOp                            : 
# 2302|     v2302_6(void)           = ReturnVoid                      : 
# 2302|     v2302_7(void)           = AliasedUse                      : ~m?
# 2302|     v2302_8(void)           = ExitFunction                    : 

# 2317| void IfDestructors3(bool)
# 2317|   Block 0
# 2317|     v2317_1(void)            = EnterFunction                   : 
# 2317|     mu2317_2(unknown)        = AliasedDefinition               : 
# 2317|     mu2317_3(unknown)        = InitializeNonLocal              : 
# 2317|     r2317_4(glval<bool>)     = VariableAddress[b]              : 
# 2317|     mu2317_5(bool)           = InitializeParameter[b]          : &:r2317_4
# 2318|     r2318_1(glval<Bool>)     = VariableAddress[B]              : 
# 2318|     mu2318_2(Bool)           = Uninitialized[B]                : &:r2318_1
# 2318|     r2318_3(glval<unknown>)  = FunctionAddress[Bool]           : 
# 2318|     r2318_4(glval<bool>)     = VariableAddress[b]              : 
# 2318|     r2318_5(bool)            = Load[b]                         : &:r2318_4, ~m?
# 2318|     v2318_6(void)            = Call[Bool]                      : func:r2318_3, this:r2318_1, 0:r2318_5
# 2318|     mu2318_7(unknown)        = ^CallSideEffect                 : ~m?
# 2318|     mu2318_8(Bool)           = ^IndirectMayWriteSideEffect[-1] : &:r2318_1
# 2318|     r2318_9(glval<Bool>)     = VariableAddress[B]              : 
# 2318|     r2318_10(glval<unknown>) = FunctionAddress[operator bool]  : 
# 2318|     r2318_11(bool)           = Call[operator bool]             : func:r2318_10, this:r2318_9
# 2318|     mu2318_12(unknown)       = ^CallSideEffect                 : ~m?
# 2318|     v2318_13(void)           = ^IndirectReadSideEffect[-1]     : &:r2318_9, ~m?
# 2318|     mu2318_14(Bool)          = ^IndirectMayWriteSideEffect[-1] : &:r2318_9
# 2318|     r2318_15(bool)           = CopyValue                       : r2318_11
# 2318|     v2318_16(void)           = ConditionalBranch               : r2318_15
#-----|   False -> Block 2
#-----|   True -> Block 1

# 2319|   Block 1
# 2319|     r2319_1(glval<String>)  = VariableAddress[s1]             : 
# 2319|     mu2319_2(String)        = Uninitialized[s1]               : &:r2319_1
# 2319|     r2319_3(glval<unknown>) = FunctionAddress[String]         : 
# 2319|     v2319_4(void)           = Call[String]                    : func:r2319_3, this:r2319_1
# 2319|     mu2319_5(unknown)       = ^CallSideEffect                 : ~m?
# 2319|     mu2319_6(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2319_1
# 2320|     r2320_1(glval<String>)  = VariableAddress[s1]             : 
# 2320|     r2320_2(glval<unknown>) = FunctionAddress[~String]        : 
# 2320|     v2320_3(void)           = Call[~String]                   : func:r2320_2, this:r2320_1
# 2320|     mu2320_4(unknown)       = ^CallSideEffect                 : ~m?
# 2320|     v2320_5(void)           = ^IndirectReadSideEffect[-1]     : &:r2320_1, ~m?
# 2320|     mu2320_6(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2320_1
#-----|   Goto -> Block 3

# 2321|   Block 2
# 2321|     r2321_1(glval<String>)  = VariableAddress[s2]             : 
# 2321|     mu2321_2(String)        = Uninitialized[s2]               : &:r2321_1
# 2321|     r2321_3(glval<unknown>) = FunctionAddress[String]         : 
# 2321|     v2321_4(void)           = Call[String]                    : func:r2321_3, this:r2321_1
# 2321|     mu2321_5(unknown)       = ^CallSideEffect                 : ~m?
# 2321|     mu2321_6(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2321_1
# 2322|     r2322_1(glval<String>)  = VariableAddress[s2]             : 
# 2322|     r2322_2(glval<unknown>) = FunctionAddress[~String]        : 
# 2322|     v2322_3(void)           = Call[~String]                   : func:r2322_2, this:r2322_1
# 2322|     mu2322_4(unknown)       = ^CallSideEffect                 : ~m?
# 2322|     v2322_5(void)           = ^IndirectReadSideEffect[-1]     : &:r2322_1, ~m?
# 2322|     mu2322_6(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2322_1
#-----|   Goto -> Block 3

# 2322|   Block 3
# 2322|     r2322_7(glval<Bool>)    = VariableAddress[B]              : 
# 2322|     r2322_8(glval<unknown>) = FunctionAddress[~Bool]          : 
# 2322|     v2322_9(void)           = Call[~Bool]                     : func:r2322_8, this:r2322_7
# 2322|     mu2322_10(unknown)      = ^CallSideEffect                 : ~m?
# 2322|     v2322_11(void)          = ^IndirectReadSideEffect[-1]     : &:r2322_7, ~m?
# 2322|     mu2322_12(Bool)         = ^IndirectMayWriteSideEffect[-1] : &:r2322_7
# 2323|     v2323_1(void)           = NoOp                            : 
# 2317|     v2317_6(void)           = ReturnVoid                      : 
# 2317|     v2317_7(void)           = AliasedUse                      : ~m?
# 2317|     v2317_8(void)           = ExitFunction                    : 

# 2325| void WhileLoopDestructors(bool)
# 2325|   Block 0
# 2325|     v2325_1(void)           = EnterFunction                   : 
# 2325|     mu2325_2(unknown)       = AliasedDefinition               : 
# 2325|     mu2325_3(unknown)       = InitializeNonLocal              : 
# 2325|     r2325_4(glval<bool>)    = VariableAddress[b]              : 
# 2325|     mu2325_5(bool)          = InitializeParameter[b]          : &:r2325_4
# 2327|     r2327_1(glval<String>)  = VariableAddress[s]              : 
# 2327|     mu2327_2(String)        = Uninitialized[s]                : &:r2327_1
# 2327|     r2327_3(glval<unknown>) = FunctionAddress[String]         : 
# 2327|     v2327_4(void)           = Call[String]                    : func:r2327_3, this:r2327_1
# 2327|     mu2327_5(unknown)       = ^CallSideEffect                 : ~m?
# 2327|     mu2327_6(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2327_1
#-----|   Goto -> Block 1

# 2328|   Block 1
# 2328|     r2328_1(glval<bool>) = VariableAddress[b] : 
# 2328|     r2328_2(bool)        = Load[b]            : &:r2328_1, ~m?
# 2328|     v2328_3(void)        = ConditionalBranch  : r2328_2
#-----|   False -> Block 3
#-----|   True -> Block 2

# 2329|   Block 2
# 2329|     r2329_1(bool)        = Constant[0]        : 
# 2329|     r2329_2(glval<bool>) = VariableAddress[b] : 
# 2329|     mu2329_3(bool)       = Store[b]           : &:r2329_2, r2329_1
#-----|   Goto (back edge) -> Block 1

# 2331|   Block 3
# 2331|     r2331_1(glval<String>)  = VariableAddress[s]              : 
# 2331|     r2331_2(glval<unknown>) = FunctionAddress[~String]        : 
# 2331|     v2331_3(void)           = Call[~String]                   : func:r2331_2, this:r2331_1
# 2331|     mu2331_4(unknown)       = ^CallSideEffect                 : ~m?
# 2331|     v2331_5(void)           = ^IndirectReadSideEffect[-1]     : &:r2331_1, ~m?
# 2331|     mu2331_6(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2331_1
#-----|   Goto -> Block 4

# 2334|   Block 4
# 2334|     r2334_1(glval<Bool>)     = VariableAddress[B]              : 
# 2334|     mu2334_2(Bool)           = Uninitialized[B]                : &:r2334_1
# 2334|     r2334_3(glval<unknown>)  = FunctionAddress[Bool]           : 
# 2334|     r2334_4(glval<bool>)     = VariableAddress[b]              : 
# 2334|     r2334_5(bool)            = Load[b]                         : &:r2334_4, ~m?
# 2334|     v2334_6(void)            = Call[Bool]                      : func:r2334_3, this:r2334_1, 0:r2334_5
# 2334|     mu2334_7(unknown)        = ^CallSideEffect                 : ~m?
# 2334|     mu2334_8(Bool)           = ^IndirectMayWriteSideEffect[-1] : &:r2334_1
# 2334|     r2334_9(glval<Bool>)     = VariableAddress[B]              : 
# 2334|     r2334_10(glval<unknown>) = FunctionAddress[operator bool]  : 
# 2334|     r2334_11(bool)           = Call[operator bool]             : func:r2334_10, this:r2334_9
# 2334|     mu2334_12(unknown)       = ^CallSideEffect                 : ~m?
# 2334|     v2334_13(void)           = ^IndirectReadSideEffect[-1]     : &:r2334_9, ~m?
# 2334|     mu2334_14(Bool)          = ^IndirectMayWriteSideEffect[-1] : &:r2334_9
# 2334|     r2334_15(bool)           = CopyValue                       : r2334_11
# 2334|     v2334_16(void)           = ConditionalBranch               : r2334_15
#-----|   False -> Block 6
#-----|   True -> Block 5

# 2335|   Block 5
# 2335|     r2335_1(bool)           = Constant[0]                     : 
# 2335|     r2335_2(glval<bool>)    = VariableAddress[b]              : 
# 2335|     mu2335_3(bool)          = Store[b]                        : &:r2335_2, r2335_1
# 2336|     r2336_1(glval<Bool>)    = VariableAddress[B]              : 
# 2336|     r2336_2(glval<unknown>) = FunctionAddress[~Bool]          : 
# 2336|     v2336_3(void)           = Call[~Bool]                     : func:r2336_2, this:r2336_1
# 2336|     mu2336_4(unknown)       = ^CallSideEffect                 : ~m?
# 2336|     v2336_5(void)           = ^IndirectReadSideEffect[-1]     : &:r2336_1, ~m?
# 2336|     mu2336_6(Bool)          = ^IndirectMayWriteSideEffect[-1] : &:r2336_1
#-----|   Goto (back edge) -> Block 4

# 2336|   Block 6
# 2336|     r2336_7(glval<Bool>)    = VariableAddress[B]              : 
# 2336|     r2336_8(glval<unknown>) = FunctionAddress[~Bool]          : 
# 2336|     v2336_9(void)           = Call[~Bool]                     : func:r2336_8, this:r2336_7
# 2336|     mu2336_10(unknown)      = ^CallSideEffect                 : ~m?
# 2336|     v2336_11(void)          = ^IndirectReadSideEffect[-1]     : &:r2336_7, ~m?
# 2336|     mu2336_12(Bool)         = ^IndirectMayWriteSideEffect[-1] : &:r2336_7
# 2338|     v2338_1(void)           = NoOp                            : 
# 2325|     v2325_6(void)           = ReturnVoid                      : 
# 2325|     v2325_7(void)           = AliasedUse                      : ~m?
# 2325|     v2325_8(void)           = ExitFunction                    : 

# 2340| void VoidFunc()
# 2340|   Block 0
# 2340|     v2340_1(void)     = EnterFunction      : 
# 2340|     mu2340_2(unknown) = AliasedDefinition  : 
# 2340|     mu2340_3(unknown) = InitializeNonLocal : 
# 2340|     v2340_4(void)     = NoOp               : 
# 2340|     v2340_5(void)     = ReturnVoid         : 
# 2340|     v2340_6(void)     = AliasedUse         : ~m?
# 2340|     v2340_7(void)     = ExitFunction       : 

# 2342| void IfReturnDestructors(bool)
# 2342|   Block 0
# 2342|     v2342_1(void)           = EnterFunction                   : 
# 2342|     mu2342_2(unknown)       = AliasedDefinition               : 
# 2342|     mu2342_3(unknown)       = InitializeNonLocal              : 
# 2342|     r2342_4(glval<bool>)    = VariableAddress[b]              : 
# 2342|     mu2342_5(bool)          = InitializeParameter[b]          : &:r2342_4
# 2343|     r2343_1(glval<String>)  = VariableAddress[s]              : 
# 2343|     mu2343_2(String)        = Uninitialized[s]                : &:r2343_1
# 2343|     r2343_3(glval<unknown>) = FunctionAddress[String]         : 
# 2343|     v2343_4(void)           = Call[String]                    : func:r2343_3, this:r2343_1
# 2343|     mu2343_5(unknown)       = ^CallSideEffect                 : ~m?
# 2343|     mu2343_6(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2343_1
# 2344|     r2344_1(glval<bool>)    = VariableAddress[b]              : 
# 2344|     r2344_2(bool)           = Load[b]                         : &:r2344_1, ~m?
# 2344|     v2344_3(void)           = ConditionalBranch               : r2344_2
#-----|   False -> Block 3
#-----|   True -> Block 2

# 2342|   Block 1
# 2342|     v2342_6(void) = ReturnVoid   : 
# 2342|     v2342_7(void) = AliasedUse   : ~m?
# 2342|     v2342_8(void) = ExitFunction : 

# 2345|   Block 2
# 2345|     v2345_1(void)           = NoOp                            : 
# 2351|     r2351_1(glval<String>)  = VariableAddress[s]              : 
# 2351|     r2351_2(glval<unknown>) = FunctionAddress[~String]        : 
# 2351|     v2351_3(void)           = Call[~String]                   : func:r2351_2, this:r2351_1
# 2351|     mu2351_4(unknown)       = ^CallSideEffect                 : ~m?
# 2351|     v2351_5(void)           = ^IndirectReadSideEffect[-1]     : &:r2351_1, ~m?
# 2351|     mu2351_6(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2351_1
#-----|   Goto -> Block 1

# 2347|   Block 3
# 2347|     r2347_1(glval<bool>) = VariableAddress[b] : 
# 2347|     r2347_2(bool)        = Load[b]            : &:r2347_1, ~m?
# 2347|     v2347_3(void)        = ConditionalBranch  : r2347_2
#-----|   False -> Block 5
#-----|   True -> Block 4

# 2348|   Block 4
# 2348|     r2348_1(glval<unknown>) = FunctionAddress[VoidFunc]       : 
# 2348|     v2348_2(void)           = Call[VoidFunc]                  : func:r2348_1
# 2348|     mu2348_3(unknown)       = ^CallSideEffect                 : ~m?
# 2348|     v2348_4(void)           = NoOp                            : 
# 2351|     r2351_7(glval<String>)  = VariableAddress[s]              : 
# 2351|     r2351_8(glval<unknown>) = FunctionAddress[~String]        : 
# 2351|     v2351_9(void)           = Call[~String]                   : func:r2351_8, this:r2351_7
# 2351|     mu2351_10(unknown)      = ^CallSideEffect                 : ~m?
# 2351|     v2351_11(void)          = ^IndirectReadSideEffect[-1]     : &:r2351_7, ~m?
# 2351|     mu2351_12(String)       = ^IndirectMayWriteSideEffect[-1] : &:r2351_7
#-----|   Goto -> Block 1

# 2350|   Block 5
# 2350|     r2350_1(glval<String>)   = VariableAddress[s]              : 
# 2351|     v2351_13(void)           = NoOp                            : 
# 2351|     r2351_14(glval<String>)  = VariableAddress[s]              : 
# 2351|     r2351_15(glval<unknown>) = FunctionAddress[~String]        : 
# 2351|     v2351_16(void)           = Call[~String]                   : func:r2351_15, this:r2351_14
# 2351|     mu2351_17(unknown)       = ^CallSideEffect                 : ~m?
# 2351|     v2351_18(void)           = ^IndirectReadSideEffect[-1]     : &:r2351_14, ~m?
# 2351|     mu2351_19(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2351_14
#-----|   Goto -> Block 1

# 2353| int IfReturnDestructors3(bool)
# 2353|   Block 0
# 2353|     v2353_1(void)           = EnterFunction                   : 
# 2353|     mu2353_2(unknown)       = AliasedDefinition               : 
# 2353|     mu2353_3(unknown)       = InitializeNonLocal              : 
# 2353|     r2353_4(glval<bool>)    = VariableAddress[b]              : 
# 2353|     mu2353_5(bool)          = InitializeParameter[b]          : &:r2353_4
# 2354|     r2354_1(glval<String>)  = VariableAddress[s]              : 
# 2354|     mu2354_2(String)        = Uninitialized[s]                : &:r2354_1
# 2354|     r2354_3(glval<unknown>) = FunctionAddress[String]         : 
# 2354|     v2354_4(void)           = Call[String]                    : func:r2354_3, this:r2354_1
# 2354|     mu2354_5(unknown)       = ^CallSideEffect                 : ~m?
# 2354|     mu2354_6(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2354_1
# 2355|     r2355_1(glval<bool>)    = VariableAddress[b]              : 
# 2355|     r2355_2(bool)           = Load[b]                         : &:r2355_1, ~m?
# 2355|     v2355_3(void)           = ConditionalBranch               : r2355_2
#-----|   False -> Block 3
#-----|   True -> Block 2

# 2353|   Block 1
# 2353|     r2353_6(glval<int>) = VariableAddress[#return] : 
# 2353|     v2353_7(void)       = ReturnValue              : &:r2353_6, ~m?
# 2353|     v2353_8(void)       = AliasedUse               : ~m?
# 2353|     v2353_9(void)       = ExitFunction             : 

# 2356|   Block 2
# 2356|     r2356_1(glval<int>)     = VariableAddress[#return]        : 
# 2356|     r2356_2(int)            = Constant[1]                     : 
# 2356|     mu2356_3(int)           = Store[#return]                  : &:r2356_1, r2356_2
# 2359|     r2359_1(glval<String>)  = VariableAddress[s]              : 
# 2359|     r2359_2(glval<unknown>) = FunctionAddress[~String]        : 
# 2359|     v2359_3(void)           = Call[~String]                   : func:r2359_2, this:r2359_1
# 2359|     mu2359_4(unknown)       = ^CallSideEffect                 : ~m?
# 2359|     v2359_5(void)           = ^IndirectReadSideEffect[-1]     : &:r2359_1, ~m?
# 2359|     mu2359_6(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2359_1
#-----|   Goto -> Block 1

# 2358|   Block 3
# 2358|     r2358_1(glval<int>)     = VariableAddress[#return]        : 
# 2358|     r2358_2(int)            = Constant[0]                     : 
# 2358|     mu2358_3(int)           = Store[#return]                  : &:r2358_1, r2358_2
# 2359|     r2359_7(glval<String>)  = VariableAddress[s]              : 
# 2359|     r2359_8(glval<unknown>) = FunctionAddress[~String]        : 
# 2359|     v2359_9(void)           = Call[~String]                   : func:r2359_8, this:r2359_7
# 2359|     mu2359_10(unknown)      = ^CallSideEffect                 : ~m?
# 2359|     v2359_11(void)          = ^IndirectReadSideEffect[-1]     : &:r2359_7, ~m?
# 2359|     mu2359_12(String)       = ^IndirectMayWriteSideEffect[-1] : &:r2359_7
#-----|   Goto -> Block 1

# 2361| void VoidReturnDestructors()
# 2361|   Block 0
# 2361|     v2361_1(void)           = EnterFunction                   : 
# 2361|     mu2361_2(unknown)       = AliasedDefinition               : 
# 2361|     mu2361_3(unknown)       = InitializeNonLocal              : 
# 2362|     r2362_1(glval<String>)  = VariableAddress[s]              : 
# 2362|     mu2362_2(String)        = Uninitialized[s]                : &:r2362_1
# 2362|     r2362_3(glval<unknown>) = FunctionAddress[String]         : 
# 2362|     v2362_4(void)           = Call[String]                    : func:r2362_3, this:r2362_1
# 2362|     mu2362_5(unknown)       = ^CallSideEffect                 : ~m?
# 2362|     mu2362_6(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2362_1
# 2363|     r2363_1(glval<unknown>) = FunctionAddress[VoidFunc]       : 
# 2363|     v2363_2(void)           = Call[VoidFunc]                  : func:r2363_1
# 2363|     mu2363_3(unknown)       = ^CallSideEffect                 : ~m?
# 2363|     v2363_4(void)           = NoOp                            : 
# 2364|     r2364_1(glval<String>)  = VariableAddress[s]              : 
# 2364|     r2364_2(glval<unknown>) = FunctionAddress[~String]        : 
# 2364|     v2364_3(void)           = Call[~String]                   : func:r2364_2, this:r2364_1
# 2364|     mu2364_4(unknown)       = ^CallSideEffect                 : ~m?
# 2364|     v2364_5(void)           = ^IndirectReadSideEffect[-1]     : &:r2364_1, ~m?
# 2364|     mu2364_6(String)        = ^IndirectMayWriteSideEffect[-1] : &:r2364_1
# 2361|     v2361_4(void)           = ReturnVoid                      : 
# 2361|     v2361_5(void)           = AliasedUse                      : ~m?
# 2361|     v2361_6(void)           = ExitFunction                    : 

# 2374| return_routine_type::VoidToIntMemberFunc return_routine_type::GetVoidToIntFunc()
# 2374|   Block 0
# 2374|     v2374_1(void)          = EnterFunction              : 
# 2374|     mu2374_2(unknown)      = AliasedDefinition          : 
# 2374|     mu2374_3(unknown)      = InitializeNonLocal         : 
# 2376|     r2376_1(glval<..:: *>) = VariableAddress[#return]   : 
# 2376|     r2376_2(..()(..))      = FunctionAddress[VoidToInt] : 
# 2376|     mu2376_3(..:: *)       = Store[#return]             : &:r2376_1, r2376_2
# 2374|     r2374_4(glval<..:: *>) = VariableAddress[#return]   : 
# 2374|     v2374_5(void)          = ReturnValue                : &:r2374_4, ~m?
# 2374|     v2374_6(void)          = AliasedUse                 : ~m?
# 2374|     v2374_7(void)          = ExitFunction               : 

perf-regression.cpp:
#    6| void Big::Big()
#    6|   Block 0
#    6|     v6_1(void)                    = EnterFunction                : 
#    6|     mu6_2(unknown)                = AliasedDefinition            : 
#    6|     mu6_3(unknown)                = InitializeNonLocal           : 
#    6|     r6_4(glval<unknown>)          = VariableAddress[#this]       : 
#    6|     mu6_5(glval<Big>)             = InitializeParameter[#this]   : &:r6_4
#    6|     r6_6(glval<Big>)              = Load[#this]                  : &:r6_4, ~m?
#    6|     mu6_7(Big)                    = InitializeIndirection[#this] : &:r6_6
#    6|     r6_8(glval<char[1073741824]>) = FieldAddress[buffer]         : mu6_5
#    6|     r6_9(int)                     = Constant[0]                  : 
#    6|     r6_10(glval<char>)            = PointerAdd[1]                : r6_8, r6_9
#    6|     r6_11(unknown[1073741824])    = Constant[0]                  : 
#    6|     mu6_12(unknown[1073741824])   = Store[?]                     : &:r6_10, r6_11
#    6|     v6_13(void)                   = NoOp                         : 
#    6|     v6_14(void)                   = ReturnIndirection[#this]     : &:r6_6, ~m?
#    6|     v6_15(void)                   = ReturnVoid                   : 
#    6|     v6_16(void)                   = AliasedUse                   : ~m?
#    6|     v6_17(void)                   = ExitFunction                 : 

#    9| int main()
#    9|   Block 0
#    9|     v9_1(void)            = EnterFunction                   : 
#    9|     mu9_2(unknown)        = AliasedDefinition               : 
#    9|     mu9_3(unknown)        = InitializeNonLocal              : 
#   10|     r10_1(glval<Big *>)   = VariableAddress[big]            : 
#   10|     r10_2(glval<unknown>) = FunctionAddress[operator new]   : 
#   10|     r10_3(unsigned long)  = Constant[1073741824]            : 
#   10|     r10_4(void *)         = Call[operator new]              : func:r10_2, 0:r10_3
#   10|     mu10_5(unknown)       = ^CallSideEffect                 : ~m?
#   10|     mu10_6(unknown)       = ^InitializeDynamicAllocation    : &:r10_4
#   10|     r10_7(Big *)          = Convert                         : r10_4
#   10|     r10_8(glval<unknown>) = FunctionAddress[Big]            : 
#   10|     v10_9(void)           = Call[Big]                       : func:r10_8, this:r10_7
#   10|     mu10_10(unknown)      = ^CallSideEffect                 : ~m?
#   10|     mu10_11(Big)          = ^IndirectMayWriteSideEffect[-1] : &:r10_7
#   10|     mu10_12(Big *)        = Store[big]                      : &:r10_1, r10_7
#   12|     r12_1(glval<int>)     = VariableAddress[#return]        : 
#   12|     r12_2(int)            = Constant[0]                     : 
#   12|     mu12_3(int)           = Store[#return]                  : &:r12_1, r12_2
#    9|     r9_4(glval<int>)      = VariableAddress[#return]        : 
#    9|     v9_5(void)            = ReturnValue                     : &:r9_4, ~m?
#    9|     v9_6(void)            = AliasedUse                      : ~m?
#    9|     v9_7(void)            = ExitFunction                    : 

smart_ptr.cpp:
#   10| void call_unique_ptr_arg(int*)
#   10|   Block 0
#   10|     v10_1(void)                                        = EnterFunction                    : 
#   10|     mu10_2(unknown)                                    = AliasedDefinition                : 
#   10|     mu10_3(unknown)                                    = InitializeNonLocal               : 
#   10|     r10_4(glval<int *>)                                = VariableAddress[p]               : 
#   10|     mu10_5(int *)                                      = InitializeParameter[p]           : &:r10_4
#   10|     r10_6(int *)                                       = Load[p]                          : &:r10_4, ~m?
#   10|     mu10_7(unknown)                                    = InitializeIndirection[p]         : &:r10_6
#   11|     r11_1(glval<unique_ptr<int, default_delete<int>>>) = VariableAddress[up]              : 
#   11|     mu11_2(unique_ptr<int, default_delete<int>>)       = Uninitialized[up]                : &:r11_1
#   11|     r11_3(glval<unknown>)                              = FunctionAddress[unique_ptr]      : 
#   11|     r11_4(glval<int *>)                                = VariableAddress[p]               : 
#   11|     r11_5(int *)                                       = Load[p]                          : &:r11_4, ~m?
#   11|     v11_6(void)                                        = Call[unique_ptr]                 : func:r11_3, this:r11_1, 0:r11_5
#   11|     mu11_7(unknown)                                    = ^CallSideEffect                  : ~m?
#   11|     mu11_8(unique_ptr<int, default_delete<int>>)       = ^IndirectMustWriteSideEffect[-1] : &:r11_1
#   12|     r12_1(glval<unknown>)                              = FunctionAddress[unique_ptr_arg]  : 
#   12|     r12_2(glval<unique_ptr<int, default_delete<int>>>) = VariableAddress[#temp12:20]      : 
#   12|     r12_3(glval<unknown>)                              = FunctionAddress[move]            : 
#   12|     r12_4(glval<unique_ptr<int, default_delete<int>>>) = VariableAddress[up]              : 
#   12|     r12_5(unique_ptr<int, default_delete<int>> &)      = CopyValue                        : r12_4
#   12|     r12_6(unique_ptr<int, default_delete<int>> &&)     = Call[move]                       : func:r12_3, 0:r12_5
#   12|     r12_7(unique_ptr<int, default_delete<int>>)        = Load[?]                          : &:r12_6, ~m?
#   12|     mu12_8(unique_ptr<int, default_delete<int>>)       = Store[#temp12:20]                : &:r12_2, r12_7
#   12|     r12_9(unique_ptr<int, default_delete<int>>)        = Load[#temp12:20]                 : &:r12_2, ~m?
#   12|     v12_10(void)                                       = Call[unique_ptr_arg]             : func:r12_1, 0:r12_9
#   12|     mu12_11(unknown)                                   = ^CallSideEffect                  : ~m?
#   12|     v12_12(void)                                       = ^BufferReadSideEffect[0]         : &:r12_9, ~m?
#   12|     mu12_13(unknown)                                   = ^BufferMayWriteSideEffect[0]     : &:r12_9
#   13|     v13_1(void)                                        = NoOp                             : 
#   13|     r13_2(glval<unique_ptr<int, default_delete<int>>>) = VariableAddress[up]              : 
#   13|     r13_3(glval<unknown>)                              = FunctionAddress[~unique_ptr]     : 
#   13|     v13_4(void)                                        = Call[~unique_ptr]                : func:r13_3, this:r13_2
#   13|     v13_5(void)                                        = ^IndirectReadSideEffect[-1]      : &:r13_2, ~m?
#   13|     mu13_6(unique_ptr<int, default_delete<int>>)       = ^IndirectMustWriteSideEffect[-1] : &:r13_2
#   10|     v10_8(void)                                        = ReturnIndirection[p]             : &:r10_6, ~m?
#   10|     v10_9(void)                                        = ReturnVoid                       : 
#   10|     v10_10(void)                                       = AliasedUse                       : ~m?
#   10|     v10_11(void)                                       = ExitFunction                     : 

#   17| void call_shared_ptr_arg(float*)
#   17|   Block 0
#   17|     v17_1(void)                     = EnterFunction                    : 
#   17|     mu17_2(unknown)                 = AliasedDefinition                : 
#   17|     mu17_3(unknown)                 = InitializeNonLocal               : 
#   17|     r17_4(glval<float *>)           = VariableAddress[p]               : 
#   17|     mu17_5(float *)                 = InitializeParameter[p]           : &:r17_4
#   17|     r17_6(float *)                  = Load[p]                          : &:r17_4, ~m?
#   17|     mu17_7(unknown)                 = InitializeIndirection[p]         : &:r17_6
#   18|     r18_1(glval<shared_ptr<float>>) = VariableAddress[sp]              : 
#   18|     mu18_2(shared_ptr<float>)       = Uninitialized[sp]                : &:r18_1
#   18|     r18_3(glval<unknown>)           = FunctionAddress[shared_ptr]      : 
#   18|     r18_4(glval<float *>)           = VariableAddress[p]               : 
#   18|     r18_5(float *)                  = Load[p]                          : &:r18_4, ~m?
#   18|     v18_6(void)                     = Call[shared_ptr]                 : func:r18_3, this:r18_1, 0:r18_5
#   18|     mu18_7(unknown)                 = ^CallSideEffect                  : ~m?
#   18|     mu18_8(shared_ptr<float>)       = ^IndirectMustWriteSideEffect[-1] : &:r18_1
#   19|     r19_1(glval<unknown>)           = FunctionAddress[shared_ptr_arg]  : 
#   19|     r19_2(glval<shared_ptr<float>>) = VariableAddress[#temp19:20]      : 
#   19|     mu19_3(shared_ptr<float>)       = Uninitialized[#temp19:20]        : &:r19_2
#   19|     r19_4(glval<unknown>)           = FunctionAddress[shared_ptr]      : 
#   19|     r19_5(glval<shared_ptr<float>>) = VariableAddress[sp]              : 
#   19|     r19_6(glval<shared_ptr<float>>) = Convert                          : r19_5
#   19|     r19_7(shared_ptr<float> &)      = CopyValue                        : r19_6
#   19|     v19_8(void)                     = Call[shared_ptr]                 : func:r19_4, this:r19_2, 0:r19_7
#   19|     mu19_9(unknown)                 = ^CallSideEffect                  : ~m?
#   19|     v19_10(void)                    = ^IndirectReadSideEffect[0]       : &:r19_7, ~m?
#   19|     mu19_11(shared_ptr<float>)      = ^IndirectMustWriteSideEffect[-1] : &:r19_2
#   19|     r19_12(shared_ptr<float>)       = Load[#temp19:20]                 : &:r19_2, ~m?
#   19|     v19_13(void)                    = Call[shared_ptr_arg]             : func:r19_1, 0:r19_12
#   19|     mu19_14(unknown)                = ^CallSideEffect                  : ~m?
#   19|     v19_15(void)                    = ^BufferReadSideEffect[0]         : &:r19_12, ~m?
#   19|     mu19_16(unknown)                = ^BufferMayWriteSideEffect[0]     : &:r19_12
#   20|     v20_1(void)                     = NoOp                             : 
#   20|     r20_2(glval<shared_ptr<float>>) = VariableAddress[sp]              : 
#   20|     r20_3(glval<unknown>)           = FunctionAddress[~shared_ptr]     : 
#   20|     v20_4(void)                     = Call[~shared_ptr]                : func:r20_3, this:r20_2
#   20|     v20_5(void)                     = ^IndirectReadSideEffect[-1]      : &:r20_2, ~m?
#   20|     mu20_6(shared_ptr<float>)       = ^IndirectMustWriteSideEffect[-1] : &:r20_2
#   17|     v17_8(void)                     = ReturnIndirection[p]             : &:r17_6, ~m?
#   17|     v17_9(void)                     = ReturnVoid                       : 
#   17|     v17_10(void)                    = AliasedUse                       : ~m?
#   17|     v17_11(void)                    = ExitFunction                     : 

#   28| void call_shared_ptr_consts()
#   28|   Block 0
#   28|     v28_1(void)                                           = EnterFunction                                          : 
#   28|     mu28_2(unknown)                                       = AliasedDefinition                                      : 
#   28|     mu28_3(unknown)                                       = InitializeNonLocal                                     : 
#   29|     r29_1(glval<shared_ptr<const int>>)                   = VariableAddress[sp_const_int]                          : 
#   29|     mu29_2(shared_ptr<const int>)                         = Uninitialized[sp_const_int]                            : &:r29_1
#   31|     r31_1(glval<unknown>)                                 = FunctionAddress[shared_ptr_const_int]                  : 
#   31|     r31_2(glval<shared_ptr<const int>>)                   = VariableAddress[#temp31:26]                            : 
#   31|     mu31_3(shared_ptr<const int>)                         = Uninitialized[#temp31:26]                              : &:r31_2
#   31|     r31_4(glval<unknown>)                                 = FunctionAddress[shared_ptr]                            : 
#   31|     r31_5(glval<shared_ptr<const int>>)                   = VariableAddress[sp_const_int]                          : 
#   31|     r31_6(glval<shared_ptr<const int>>)                   = Convert                                                : r31_5
#   31|     r31_7(shared_ptr<const int> &)                        = CopyValue                                              : r31_6
#   31|     v31_8(void)                                           = Call[shared_ptr]                                       : func:r31_4, this:r31_2, 0:r31_7
#   31|     mu31_9(unknown)                                       = ^CallSideEffect                                        : ~m?
#   31|     v31_10(void)                                          = ^IndirectReadSideEffect[0]                             : &:r31_7, ~m?
#   31|     mu31_11(shared_ptr<const int>)                        = ^IndirectMustWriteSideEffect[-1]                       : &:r31_2
#   31|     r31_12(shared_ptr<const int>)                         = Load[#temp31:26]                                       : &:r31_2, ~m?
#   31|     v31_13(void)                                          = Call[shared_ptr_const_int]                             : func:r31_1, 0:r31_12
#   31|     mu31_14(unknown)                                      = ^CallSideEffect                                        : ~m?
#   31|     v31_15(void)                                          = ^BufferReadSideEffect[0]                               : &:r31_12, ~m?
#   33|     r33_1(glval<shared_ptr<int *const>>)                  = VariableAddress[sp_const_int_pointer]                  : 
#   33|     mu33_2(shared_ptr<int *const>)                        = Uninitialized[sp_const_int_pointer]                    : &:r33_1
#   35|     r35_1(glval<unknown>)                                 = FunctionAddress[shared_ptr_const_int_ptr]              : 
#   35|     r35_2(glval<shared_ptr<int *const>>)                  = VariableAddress[#temp35:30]                            : 
#   35|     mu35_3(shared_ptr<int *const>)                        = Uninitialized[#temp35:30]                              : &:r35_2
#   35|     r35_4(glval<unknown>)                                 = FunctionAddress[shared_ptr]                            : 
#   35|     r35_5(glval<shared_ptr<int *const>>)                  = VariableAddress[sp_const_int_pointer]                  : 
#   35|     r35_6(glval<shared_ptr<int *const>>)                  = Convert                                                : r35_5
#   35|     r35_7(shared_ptr<int *const> &)                       = CopyValue                                              : r35_6
#   35|     v35_8(void)                                           = Call[shared_ptr]                                       : func:r35_4, this:r35_2, 0:r35_7
#   35|     mu35_9(unknown)                                       = ^CallSideEffect                                        : ~m?
#   35|     v35_10(void)                                          = ^IndirectReadSideEffect[0]                             : &:r35_7, ~m?
#   35|     mu35_11(shared_ptr<int *const>)                       = ^IndirectMustWriteSideEffect[-1]                       : &:r35_2
#   35|     r35_12(shared_ptr<int *const>)                        = Load[#temp35:30]                                       : &:r35_2, ~m?
#   35|     v35_13(void)                                          = Call[shared_ptr_const_int_ptr]                         : func:r35_1, 0:r35_12
#   35|     mu35_14(unknown)                                      = ^CallSideEffect                                        : ~m?
#   35|     v35_15(void)                                          = ^BufferReadSideEffect[0]                               : &:r35_12, ~m?
#   35|     mu35_16(unknown)                                      = ^BufferMayWriteSideEffect[0]                           : &:r35_12
#   37|     r37_1(glval<shared_ptr<shared_ptr<const int>>>)       = VariableAddress[sp_sp_const_int]                       : 
#   37|     mu37_2(shared_ptr<shared_ptr<const int>>)             = Uninitialized[sp_sp_const_int]                         : &:r37_1
#   39|     r39_1(glval<unknown>)                                 = FunctionAddress[shared_ptr_shared_ptr_const_int]       : 
#   39|     r39_2(glval<shared_ptr<shared_ptr<const int>>>)       = VariableAddress[#temp39:37]                            : 
#   39|     mu39_3(shared_ptr<shared_ptr<const int>>)             = Uninitialized[#temp39:37]                              : &:r39_2
#   39|     r39_4(glval<unknown>)                                 = FunctionAddress[shared_ptr]                            : 
#   39|     r39_5(glval<shared_ptr<shared_ptr<const int>>>)       = VariableAddress[sp_sp_const_int]                       : 
#   39|     r39_6(glval<shared_ptr<shared_ptr<const int>>>)       = Convert                                                : r39_5
#   39|     r39_7(shared_ptr<shared_ptr<const int>> &)            = CopyValue                                              : r39_6
#   39|     v39_8(void)                                           = Call[shared_ptr]                                       : func:r39_4, this:r39_2, 0:r39_7
#   39|     mu39_9(unknown)                                       = ^CallSideEffect                                        : ~m?
#   39|     v39_10(void)                                          = ^IndirectReadSideEffect[0]                             : &:r39_7, ~m?
#   39|     mu39_11(shared_ptr<shared_ptr<const int>>)            = ^IndirectMustWriteSideEffect[-1]                       : &:r39_2
#   39|     r39_12(shared_ptr<shared_ptr<const int>>)             = Load[#temp39:37]                                       : &:r39_2, ~m?
#   39|     v39_13(void)                                          = Call[shared_ptr_shared_ptr_const_int]                  : func:r39_1, 0:r39_12
#   39|     mu39_14(unknown)                                      = ^CallSideEffect                                        : ~m?
#   39|     v39_15(void)                                          = ^BufferReadSideEffect[0]                               : &:r39_12, ~m?
#   39|     mu39_16(unknown)                                      = ^BufferMayWriteSideEffect[0]                           : &:r39_12
#   41|     r41_1(glval<shared_ptr<const shared_ptr<int>>>)       = VariableAddress[sp_const_sp_int]                       : 
#   41|     mu41_2(shared_ptr<const shared_ptr<int>>)             = Uninitialized[sp_const_sp_int]                         : &:r41_1
#   43|     r43_1(glval<unknown>)                                 = FunctionAddress[shared_ptr_const_shared_ptr_int]       : 
#   43|     r43_2(glval<shared_ptr<const shared_ptr<int>>>)       = VariableAddress[#temp43:37]                            : 
#   43|     mu43_3(shared_ptr<const shared_ptr<int>>)             = Uninitialized[#temp43:37]                              : &:r43_2
#   43|     r43_4(glval<unknown>)                                 = FunctionAddress[shared_ptr]                            : 
#   43|     r43_5(glval<shared_ptr<const shared_ptr<int>>>)       = VariableAddress[sp_const_sp_int]                       : 
#   43|     r43_6(glval<shared_ptr<const shared_ptr<int>>>)       = Convert                                                : r43_5
#   43|     r43_7(shared_ptr<const shared_ptr<int>> &)            = CopyValue                                              : r43_6
#   43|     v43_8(void)                                           = Call[shared_ptr]                                       : func:r43_4, this:r43_2, 0:r43_7
#   43|     mu43_9(unknown)                                       = ^CallSideEffect                                        : ~m?
#   43|     v43_10(void)                                          = ^IndirectReadSideEffect[0]                             : &:r43_7, ~m?
#   43|     mu43_11(shared_ptr<const shared_ptr<int>>)            = ^IndirectMustWriteSideEffect[-1]                       : &:r43_2
#   43|     r43_12(shared_ptr<const shared_ptr<int>>)             = Load[#temp43:37]                                       : &:r43_2, ~m?
#   43|     v43_13(void)                                          = Call[shared_ptr_const_shared_ptr_int]                  : func:r43_1, 0:r43_12
#   43|     mu43_14(unknown)                                      = ^CallSideEffect                                        : ~m?
#   43|     v43_15(void)                                          = ^BufferReadSideEffect[0]                               : &:r43_12, ~m?
#   43|     mu43_16(unknown)                                      = ^BufferMayWriteSideEffect[0]                           : &:r43_12
#   45|     r45_1(glval<shared_ptr<const shared_ptr<const int>>>) = VariableAddress[sp_const_sp_const_int]                 : 
#   45|     mu45_2(shared_ptr<const shared_ptr<const int>>)       = Uninitialized[sp_const_sp_const_int]                   : &:r45_1
#   47|     r47_1(glval<unknown>)                                 = FunctionAddress[shared_ptr_const_shared_ptr_const_int] : 
#   47|     r47_2(glval<shared_ptr<const shared_ptr<const int>>>) = VariableAddress[#temp47:43]                            : 
#   47|     mu47_3(shared_ptr<const shared_ptr<const int>>)       = Uninitialized[#temp47:43]                              : &:r47_2
#   47|     r47_4(glval<unknown>)                                 = FunctionAddress[shared_ptr]                            : 
#   47|     r47_5(glval<shared_ptr<const shared_ptr<const int>>>) = VariableAddress[sp_const_sp_const_int]                 : 
#   47|     r47_6(glval<shared_ptr<const shared_ptr<const int>>>) = Convert                                                : r47_5
#   47|     r47_7(shared_ptr<const shared_ptr<const int>> &)      = CopyValue                                              : r47_6
#   47|     v47_8(void)                                           = Call[shared_ptr]                                       : func:r47_4, this:r47_2, 0:r47_7
#   47|     mu47_9(unknown)                                       = ^CallSideEffect                                        : ~m?
#   47|     v47_10(void)                                          = ^IndirectReadSideEffect[0]                             : &:r47_7, ~m?
#   47|     mu47_11(shared_ptr<const shared_ptr<const int>>)      = ^IndirectMustWriteSideEffect[-1]                       : &:r47_2
#   47|     r47_12(shared_ptr<const shared_ptr<const int>>)       = Load[#temp47:43]                                       : &:r47_2, ~m?
#   47|     v47_13(void)                                          = Call[shared_ptr_const_shared_ptr_const_int]            : func:r47_1, 0:r47_12
#   47|     mu47_14(unknown)                                      = ^CallSideEffect                                        : ~m?
#   47|     v47_15(void)                                          = ^BufferReadSideEffect[0]                               : &:r47_12, ~m?
#   48|     v48_1(void)                                           = NoOp                                                   : 
#   48|     r48_2(glval<shared_ptr<const shared_ptr<const int>>>) = VariableAddress[sp_const_sp_const_int]                 : 
#   48|     r48_3(glval<unknown>)                                 = FunctionAddress[~shared_ptr]                           : 
#   48|     v48_4(void)                                           = Call[~shared_ptr]                                      : func:r48_3, this:r48_2
#   48|     v48_5(void)                                           = ^IndirectReadSideEffect[-1]                            : &:r48_2, ~m?
#   48|     mu48_6(shared_ptr<const shared_ptr<const int>>)       = ^IndirectMustWriteSideEffect[-1]                       : &:r48_2
#   48|     r48_7(glval<shared_ptr<const shared_ptr<int>>>)       = VariableAddress[sp_const_sp_int]                       : 
#   48|     r48_8(glval<unknown>)                                 = FunctionAddress[~shared_ptr]                           : 
#   48|     v48_9(void)                                           = Call[~shared_ptr]                                      : func:r48_8, this:r48_7
#   48|     v48_10(void)                                          = ^IndirectReadSideEffect[-1]                            : &:r48_7, ~m?
#   48|     mu48_11(shared_ptr<const shared_ptr<int>>)            = ^IndirectMustWriteSideEffect[-1]                       : &:r48_7
#   48|     r48_12(glval<shared_ptr<shared_ptr<const int>>>)      = VariableAddress[sp_sp_const_int]                       : 
#   48|     r48_13(glval<unknown>)                                = FunctionAddress[~shared_ptr]                           : 
#   48|     v48_14(void)                                          = Call[~shared_ptr]                                      : func:r48_13, this:r48_12
#   48|     v48_15(void)                                          = ^IndirectReadSideEffect[-1]                            : &:r48_12, ~m?
#   48|     mu48_16(shared_ptr<shared_ptr<const int>>)            = ^IndirectMustWriteSideEffect[-1]                       : &:r48_12
#   48|     r48_17(glval<shared_ptr<int *const>>)                 = VariableAddress[sp_const_int_pointer]                  : 
#   48|     r48_18(glval<unknown>)                                = FunctionAddress[~shared_ptr]                           : 
#   48|     v48_19(void)                                          = Call[~shared_ptr]                                      : func:r48_18, this:r48_17
#   48|     v48_20(void)                                          = ^IndirectReadSideEffect[-1]                            : &:r48_17, ~m?
#   48|     mu48_21(shared_ptr<int *const>)                       = ^IndirectMustWriteSideEffect[-1]                       : &:r48_17
#   48|     r48_22(glval<shared_ptr<const int>>)                  = VariableAddress[sp_const_int]                          : 
#   48|     r48_23(glval<unknown>)                                = FunctionAddress[~shared_ptr]                           : 
#   48|     v48_24(void)                                          = Call[~shared_ptr]                                      : func:r48_23, this:r48_22
#   48|     v48_25(void)                                          = ^IndirectReadSideEffect[-1]                            : &:r48_22, ~m?
#   48|     mu48_26(shared_ptr<const int>)                        = ^IndirectMustWriteSideEffect[-1]                       : &:r48_22
#   28|     v28_4(void)                                           = ReturnVoid                                             : 
#   28|     v28_5(void)                                           = AliasedUse                                             : ~m?
#   28|     v28_6(void)                                           = ExitFunction                                           : 

struct_init.cpp:
#    9| Info infos_in_file[]
#    9|   Block 0
#    9|     v9_1(void)              = EnterFunction                  : 
#    9|     mu9_2(unknown)          = AliasedDefinition              : 
#    9|     r9_3(glval<Info[]>)     = VariableAddress[infos_in_file] : 
#    9|     r9_4(int)               = Constant[0]                    : 
#    9|     r9_5(glval<Info>)       = PointerAdd[16]                 : r9_3, r9_4
#   10|     r10_1(glval<char *>)    = FieldAddress[name]             : r9_5
#   10|     r10_2(glval<char[2]>)   = StringConstant["1"]            : 
#   10|     r10_3(char *)           = Convert                        : r10_2
#   10|     mu10_4(char *)          = Store[?]                       : &:r10_1, r10_3
#   10|     r10_5(glval<..(*)(..)>) = FieldAddress[handler]          : r9_5
#   10|     r10_6(..(*)(..))        = FunctionAddress[handler1]      : 
#   10|     mu10_7(..(*)(..))       = Store[?]                       : &:r10_5, r10_6
#    9|     r9_6(int)               = Constant[1]                    : 
#    9|     r9_7(glval<Info>)       = PointerAdd[16]                 : r9_3, r9_6
#   11|     r11_1(glval<char *>)    = FieldAddress[name]             : r9_7
#   11|     r11_2(glval<char[2]>)   = StringConstant["3"]            : 
#   11|     r11_3(char *)           = Convert                        : r11_2
#   11|     mu11_4(char *)          = Store[?]                       : &:r11_1, r11_3
#   11|     r11_5(glval<..(*)(..)>) = FieldAddress[handler]          : r9_7
#   11|     r11_6(glval<..()(..)>)  = FunctionAddress[handler2]      : 
#   11|     r11_7(..(*)(..))        = CopyValue                      : r11_6
#   11|     mu11_8(..(*)(..))       = Store[?]                       : &:r11_5, r11_7
#    9|     v9_8(void)              = ReturnVoid                     : 
#    9|     v9_9(void)              = AliasedUse                     : ~m?
#    9|     v9_10(void)             = ExitFunction                   : 

#   16| void let_info_escape(Info*)
#   16|   Block 0
#   16|     v16_1(void)          = EnterFunction                   : 
#   16|     mu16_2(unknown)      = AliasedDefinition               : 
#   16|     mu16_3(unknown)      = InitializeNonLocal              : 
#   16|     r16_4(glval<Info *>) = VariableAddress[info]           : 
#   16|     mu16_5(Info *)       = InitializeParameter[info]       : &:r16_4
#   16|     r16_6(Info *)        = Load[info]                      : &:r16_4, ~m?
#   16|     mu16_7(unknown)      = InitializeIndirection[info]     : &:r16_6
#   17|     r17_1(glval<Info *>) = VariableAddress[info]           : 
#   17|     r17_2(Info *)        = Load[info]                      : &:r17_1, ~m?
#   17|     r17_3(glval<Info *>) = VariableAddress[global_pointer] : 
#   17|     mu17_4(Info *)       = Store[global_pointer]           : &:r17_3, r17_2
#   18|     v18_1(void)          = NoOp                            : 
#   16|     v16_8(void)          = ReturnIndirection[info]         : &:r16_6, ~m?
#   16|     v16_9(void)          = ReturnVoid                      : 
#   16|     v16_10(void)         = AliasedUse                      : ~m?
#   16|     v16_11(void)         = ExitFunction                    : 

#   20| void declare_static_infos()
#   20|   Block 0
#   20|     v20_1(void)           = EnterFunction                    : 
#   20|     mu20_2(unknown)       = AliasedDefinition                : 
#   20|     mu20_3(unknown)       = InitializeNonLocal               : 
#   25|     r25_1(glval<unknown>) = FunctionAddress[let_info_escape] : 
#   25|     r25_2(glval<Info[2]>) = VariableAddress[static_infos]    : 
#   25|     r25_3(Info *)         = Convert                          : r25_2
#   25|     v25_4(void)           = Call[let_info_escape]            : func:r25_1, 0:r25_3
#   25|     mu25_5(unknown)       = ^CallSideEffect                  : ~m?
#   25|     v25_6(void)           = ^BufferReadSideEffect[0]         : &:r25_3, ~m?
#   25|     mu25_7(unknown)       = ^BufferMayWriteSideEffect[0]     : &:r25_3
#   26|     v26_1(void)           = NoOp                             : 
#   20|     v20_4(void)           = ReturnVoid                       : 
#   20|     v20_5(void)           = AliasedUse                       : ~m?
#   20|     v20_6(void)           = ExitFunction                     : 

#   21| Info[] static_infos
#   21|   Block 0
#   21|     v21_1(void)             = EnterFunction                 : 
#   21|     mu21_2(unknown)         = AliasedDefinition             : 
#   21|     r21_3(glval<Info[]>)    = VariableAddress[static_infos] : 
#   21|     r21_4(int)              = Constant[0]                   : 
#   21|     r21_5(glval<Info>)      = PointerAdd[16]                : r21_3, r21_4
#   22|     r22_1(glval<char *>)    = FieldAddress[name]            : r21_5
#   22|     r22_2(glval<char[2]>)   = StringConstant["1"]           : 
#   22|     r22_3(char *)           = Convert                       : r22_2
#   22|     mu22_4(char *)          = Store[?]                      : &:r22_1, r22_3
#   22|     r22_5(glval<..(*)(..)>) = FieldAddress[handler]         : r21_5
#   22|     r22_6(..(*)(..))        = FunctionAddress[handler1]     : 
#   22|     mu22_7(..(*)(..))       = Store[?]                      : &:r22_5, r22_6
#   21|     r21_6(int)              = Constant[1]                   : 
#   21|     r21_7(glval<Info>)      = PointerAdd[16]                : r21_3, r21_6
#   23|     r23_1(glval<char *>)    = FieldAddress[name]            : r21_7
#   23|     r23_2(glval<char[2]>)   = StringConstant["2"]           : 
#   23|     r23_3(char *)           = Convert                       : r23_2
#   23|     mu23_4(char *)          = Store[?]                      : &:r23_1, r23_3
#   23|     r23_5(glval<..(*)(..)>) = FieldAddress[handler]         : r21_7
#   23|     r23_6(glval<..()(..)>)  = FunctionAddress[handler2]     : 
#   23|     r23_7(..(*)(..))        = CopyValue                     : r23_6
#   23|     mu23_8(..(*)(..))       = Store[?]                      : &:r23_5, r23_7
#   21|     v21_8(void)             = ReturnVoid                    : 
#   21|     v21_9(void)             = AliasedUse                    : ~m?
#   21|     v21_10(void)            = ExitFunction                  : 

#   28| void declare_local_infos()
#   28|   Block 0
#   28|     v28_1(void)             = EnterFunction                    : 
#   28|     mu28_2(unknown)         = AliasedDefinition                : 
#   28|     mu28_3(unknown)         = InitializeNonLocal               : 
#   29|     r29_1(glval<Info[2]>)   = VariableAddress[local_infos]     : 
#   29|     mu29_2(Info[2])         = Uninitialized[local_infos]       : &:r29_1
#   29|     r29_3(int)              = Constant[0]                      : 
#   29|     r29_4(glval<Info>)      = PointerAdd[16]                   : r29_1, r29_3
#   30|     r30_1(glval<char *>)    = FieldAddress[name]               : r29_4
#   30|     r30_2(glval<char[2]>)   = StringConstant["1"]              : 
#   30|     r30_3(char *)           = Convert                          : r30_2
#   30|     mu30_4(char *)          = Store[?]                         : &:r30_1, r30_3
#   30|     r30_5(glval<..(*)(..)>) = FieldAddress[handler]            : r29_4
#   30|     r30_6(..(*)(..))        = FunctionAddress[handler1]        : 
#   30|     mu30_7(..(*)(..))       = Store[?]                         : &:r30_5, r30_6
#   29|     r29_5(int)              = Constant[1]                      : 
#   29|     r29_6(glval<Info>)      = PointerAdd[16]                   : r29_1, r29_5
#   31|     r31_1(glval<char *>)    = FieldAddress[name]               : r29_6
#   31|     r31_2(glval<char[2]>)   = StringConstant["2"]              : 
#   31|     r31_3(char *)           = Convert                          : r31_2
#   31|     mu31_4(char *)          = Store[?]                         : &:r31_1, r31_3
#   31|     r31_5(glval<..(*)(..)>) = FieldAddress[handler]            : r29_6
#   31|     r31_6(glval<..()(..)>)  = FunctionAddress[handler2]        : 
#   31|     r31_7(..(*)(..))        = CopyValue                        : r31_6
#   31|     mu31_8(..(*)(..))       = Store[?]                         : &:r31_5, r31_7
#   33|     r33_1(glval<unknown>)   = FunctionAddress[let_info_escape] : 
#   33|     r33_2(glval<Info[2]>)   = VariableAddress[local_infos]     : 
#   33|     r33_3(Info *)           = Convert                          : r33_2
#   33|     v33_4(void)             = Call[let_info_escape]            : func:r33_1, 0:r33_3
#   33|     mu33_5(unknown)         = ^CallSideEffect                  : ~m?
#   33|     v33_6(void)             = ^BufferReadSideEffect[0]         : &:r33_3, ~m?
#   33|     mu33_7(unknown)         = ^BufferMayWriteSideEffect[0]     : &:r33_3
#   34|     v34_1(void)             = NoOp                             : 
#   28|     v28_4(void)             = ReturnVoid                       : 
#   28|     v28_5(void)             = AliasedUse                       : ~m?
#   28|     v28_6(void)             = ExitFunction                     : 

#   36| void declare_static_runtime_infos(char const*)
#   36|   Block 0
#   36|     v36_1(void)          = EnterFunction                      : 
#   36|     mu36_2(unknown)      = AliasedDefinition                  : 
#   36|     mu36_3(unknown)      = InitializeNonLocal                 : 
#   36|     r36_4(glval<char *>) = VariableAddress[name1]             : 
#   36|     mu36_5(char *)       = InitializeParameter[name1]         : &:r36_4
#   36|     r36_6(char *)        = Load[name1]                        : &:r36_4, ~m?
#   36|     mu36_7(unknown)      = InitializeIndirection[name1]       : &:r36_6
#   37|     r37_1(glval<bool>)   = VariableAddress[static_infos#init] : 
#   37|     r37_2(bool)          = Load[static_infos#init]            : &:r37_1, ~m?
#   37|     v37_3(void)          = ConditionalBranch                  : r37_2
#-----|   False -> Block 1
#-----|   True -> Block 2

#   37|   Block 1
#   37|     r37_4(glval<Info[2]>)   = VariableAddress[static_infos] : 
#   37|     r37_5(int)              = Constant[0]                   : 
#   37|     r37_6(glval<Info>)      = PointerAdd[16]                : r37_4, r37_5
#   38|     r38_1(glval<char *>)    = FieldAddress[name]            : r37_6
#   38|     r38_2(glval<char *>)    = VariableAddress[name1]        : 
#   38|     r38_3(char *)           = Load[name1]                   : &:r38_2, ~m?
#   38|     mu38_4(char *)          = Store[?]                      : &:r38_1, r38_3
#   38|     r38_5(glval<..(*)(..)>) = FieldAddress[handler]         : r37_6
#   38|     r38_6(..(*)(..))        = FunctionAddress[handler1]     : 
#   38|     mu38_7(..(*)(..))       = Store[?]                      : &:r38_5, r38_6
#   37|     r37_7(int)              = Constant[1]                   : 
#   37|     r37_8(glval<Info>)      = PointerAdd[16]                : r37_4, r37_7
#   39|     r39_1(glval<char *>)    = FieldAddress[name]            : r37_8
#   39|     r39_2(glval<char[2]>)   = StringConstant["2"]           : 
#   39|     r39_3(char *)           = Convert                       : r39_2
#   39|     mu39_4(char *)          = Store[?]                      : &:r39_1, r39_3
#   39|     r39_5(glval<..(*)(..)>) = FieldAddress[handler]         : r37_8
#   39|     r39_6(glval<..()(..)>)  = FunctionAddress[handler2]     : 
#   39|     r39_7(..(*)(..))        = CopyValue                     : r39_6
#   39|     mu39_8(..(*)(..))       = Store[?]                      : &:r39_5, r39_7
#   37|     r37_9(bool)             = Constant[1]                   : 
#   37|     mu37_10(bool)           = Store[static_infos#init]      : &:r37_1, r37_9
#-----|   Goto -> Block 2

#   41|   Block 2
#   41|     r41_1(glval<unknown>) = FunctionAddress[let_info_escape] : 
#   41|     r41_2(glval<Info[2]>) = VariableAddress[static_infos]    : 
#   41|     r41_3(Info *)         = Convert                          : r41_2
#   41|     v41_4(void)           = Call[let_info_escape]            : func:r41_1, 0:r41_3
#   41|     mu41_5(unknown)       = ^CallSideEffect                  : ~m?
#   41|     v41_6(void)           = ^BufferReadSideEffect[0]         : &:r41_3, ~m?
#   41|     mu41_7(unknown)       = ^BufferMayWriteSideEffect[0]     : &:r41_3
#   42|     v42_1(void)           = NoOp                             : 
#   36|     v36_8(void)           = ReturnIndirection[name1]         : &:r36_6, ~m?
#   36|     v36_9(void)           = ReturnVoid                       : 
#   36|     v36_10(void)          = AliasedUse                       : ~m?
#   36|     v36_11(void)          = ExitFunction                     : 

try_except.c:
#    6| void f()
#    6|   Block 0
#    6|     v6_1(void)            = EnterFunction                  : 
#    6|     mu6_2(unknown)        = AliasedDefinition              : 
#    6|     mu6_3(unknown)        = InitializeNonLocal             : 
#    7|     r7_1(glval<int>)      = VariableAddress[x]             : 
#    7|     mu7_2(int)            = Uninitialized[x]               : &:r7_1
#    7|     r7_3(glval<int>)      = VariableAddress[y]             : 
#    7|     r7_4(int)             = Constant[0]                    : 
#    7|     mu7_5(int)            = Store[y]                       : &:r7_3, r7_4
#    9|     r9_1(glval<unknown>)  = FunctionAddress[ProbeFunction] : 
#    9|     r9_2(int)             = Constant[0]                    : 
#    9|     v9_3(void)            = Call[ProbeFunction]            : func:r9_1, 0:r9_2
#    9|     mu9_4(unknown)        = ^CallSideEffect                : ~m?
#   10|     r10_1(glval<int>)     = VariableAddress[y]             : 
#   10|     r10_2(int)            = Load[y]                        : &:r10_1, ~m?
#   10|     r10_3(glval<int>)     = VariableAddress[x]             : 
#   10|     mu10_4(int)           = Store[x]                       : &:r10_3, r10_2
#   11|     r11_1(glval<unknown>) = FunctionAddress[ProbeFunction] : 
#   11|     r11_2(int)            = Constant[0]                    : 
#   11|     v11_3(void)           = Call[ProbeFunction]            : func:r11_1, 0:r11_2
#   11|     mu11_4(unknown)       = ^CallSideEffect                : ~m?
#-----|   Goto -> Block 6

#   13|   Block 1
#   13|     r13_1(int)  = Constant[0]       : 
#   13|     r13_2(bool) = CompareEQ         : r13_8, r13_1
#   13|     v13_3(void) = ConditionalBranch : r13_2
#-----|   False -> Block 2
#-----|   True -> Block 3

#   13|   Block 2
#   13|     r13_4(int)  = Constant[1]       : 
#   13|     r13_5(bool) = CompareEQ         : r13_8, r13_4
#   13|     v13_6(void) = ConditionalBranch : r13_5
#-----|   True -> Block 5

#   13|   Block 3
#   13|     v13_7(void) = Unwind : 
#-----|   Goto -> Block 6

#   13|   Block 4
#   13|     r13_8(int)   = Constant[0]       : 
#   13|     r13_9(int)   = Constant[-1]      : 
#   13|     r13_10(bool) = CompareEQ         : r13_8, r13_9
#   13|     v13_11(void) = ConditionalBranch : r13_10
#-----|   False -> Block 1
#-----|   True -> Block 3

#   14|   Block 5
#   14|     r14_1(glval<unknown>) = FunctionAddress[sink] : 
#   14|     r14_2(glval<int>)     = VariableAddress[x]    : 
#   14|     r14_3(int)            = Load[x]               : &:r14_2, ~m?
#   14|     v14_4(void)           = Call[sink]            : func:r14_1, 0:r14_3
#   14|     mu14_5(unknown)       = ^CallSideEffect       : ~m?
#-----|   Goto -> Block 6

#   16|   Block 6
#   16|     v16_1(void) = NoOp         : 
#    6|     v6_4(void)  = ReturnVoid   : 
#    6|     v6_5(void)  = AliasedUse   : ~m?
#    6|     v6_6(void)  = ExitFunction : 

#   18| void g()
#   18|   Block 0
#   18|     v18_1(void)           = EnterFunction                  : 
#   18|     mu18_2(unknown)       = AliasedDefinition              : 
#   18|     mu18_3(unknown)       = InitializeNonLocal             : 
#   19|     r19_1(glval<int>)     = VariableAddress[x]             : 
#   19|     mu19_2(int)           = Uninitialized[x]               : &:r19_1
#   19|     r19_3(glval<int>)     = VariableAddress[y]             : 
#   19|     r19_4(int)            = Constant[0]                    : 
#   19|     mu19_5(int)           = Store[y]                       : &:r19_3, r19_4
#   21|     r21_1(glval<unknown>) = FunctionAddress[ProbeFunction] : 
#   21|     r21_2(int)            = Constant[0]                    : 
#   21|     v21_3(void)           = Call[ProbeFunction]            : func:r21_1, 0:r21_2
#   21|     mu21_4(unknown)       = ^CallSideEffect                : ~m?
#   22|     r22_1(glval<int>)     = VariableAddress[y]             : 
#   22|     r22_2(int)            = Load[y]                        : &:r22_1, ~m?
#   22|     r22_3(glval<int>)     = VariableAddress[x]             : 
#   22|     mu22_4(int)           = Store[x]                       : &:r22_3, r22_2
#   23|     r23_1(glval<unknown>) = FunctionAddress[ProbeFunction] : 
#   23|     r23_2(int)            = Constant[0]                    : 
#   23|     v23_3(void)           = Call[ProbeFunction]            : func:r23_1, 0:r23_2
#   23|     mu23_4(unknown)       = ^CallSideEffect                : ~m?
#   26|     r26_1(glval<unknown>) = FunctionAddress[sink]          : 
#   26|     r26_2(glval<int>)     = VariableAddress[x]             : 
#   26|     r26_3(int)            = Load[x]                        : &:r26_2, ~m?
#   26|     v26_4(void)           = Call[sink]                     : func:r26_1, 0:r26_3
#   26|     mu26_5(unknown)       = ^CallSideEffect                : ~m?
#   28|     v28_1(void)           = NoOp                           : 
#   18|     v18_4(void)           = ReturnVoid                     : 
#   18|     v18_5(void)           = AliasedUse                     : ~m?
#   18|     v18_6(void)           = ExitFunction                   : 

#   32| void h(int)
#   32|   Block 0
#   32|     v32_1(void)       = EnterFunction          : 
#   32|     mu32_2(unknown)   = AliasedDefinition      : 
#   32|     mu32_3(unknown)   = InitializeNonLocal     : 
#   32|     r32_4(glval<int>) = VariableAddress[b]     : 
#   32|     mu32_5(int)       = InitializeParameter[b] : &:r32_4
#   33|     r33_1(glval<int>) = VariableAddress[x]     : 
#   33|     r33_2(int)        = Constant[0]            : 
#   33|     mu33_3(int)       = Store[x]               : &:r33_1, r33_2
#   35|     r35_1(glval<int>) = VariableAddress[b]     : 
#   35|     r35_2(int)        = Load[b]                : &:r35_1, ~m?
#   35|     v35_3(void)       = ConditionalBranch      : r35_2
#-----|   False -> Block 7
#-----|   True -> Block 1

#   36|   Block 1
#   36|     r36_1(glval<unknown>) = FunctionAddress[AfxThrowMemoryException] : 
#   36|     v36_2(void)           = Call[AfxThrowMemoryException]            : func:r36_1
#   36|     mu36_3(unknown)       = ^CallSideEffect                          : ~m?
#-----|   Goto -> Block 7

#   39|   Block 2
#   39|     r39_1(int)  = Constant[0]       : 
#   39|     r39_2(bool) = CompareEQ         : r39_8, r39_1
#   39|     v39_3(void) = ConditionalBranch : r39_2
#-----|   False -> Block 3
#-----|   True -> Block 4

#   39|   Block 3
#   39|     r39_4(int)  = Constant[1]       : 
#   39|     r39_5(bool) = CompareEQ         : r39_8, r39_4
#   39|     v39_6(void) = ConditionalBranch : r39_5
#-----|   True -> Block 6

#   39|   Block 4
#   39|     v39_7(void) = Unwind : 
#-----|   Goto -> Block 7

#   39|   Block 5
#   39|     r39_8(int)   = Constant[1]       : 
#   39|     r39_9(int)   = Constant[-1]      : 
#   39|     r39_10(bool) = CompareEQ         : r39_8, r39_9
#   39|     v39_11(void) = ConditionalBranch : r39_10
#-----|   False -> Block 2
#-----|   True -> Block 4

#   40|   Block 6
#   40|     r40_1(glval<unknown>) = FunctionAddress[sink] : 
#   40|     r40_2(glval<int>)     = VariableAddress[x]    : 
#   40|     r40_3(int)            = Load[x]               : &:r40_2, ~m?
#   40|     v40_4(void)           = Call[sink]            : func:r40_1, 0:r40_3
#   40|     mu40_5(unknown)       = ^CallSideEffect       : ~m?
#-----|   Goto -> Block 7

#   42|   Block 7
#   42|     v42_1(void) = NoOp         : 
#   32|     v32_6(void) = ReturnVoid   : 
#   32|     v32_7(void) = AliasedUse   : ~m?
#   32|     v32_8(void) = ExitFunction : 

try_except.cpp:
#    6| void f_cpp()
#    6|   Block 0
#    6|     v6_1(void)            = EnterFunction                  : 
#    6|     mu6_2(unknown)        = AliasedDefinition              : 
#    6|     mu6_3(unknown)        = InitializeNonLocal             : 
#    7|     r7_1(glval<int>)      = VariableAddress[x]             : 
#    7|     mu7_2(int)            = Uninitialized[x]               : &:r7_1
#    7|     r7_3(glval<int>)      = VariableAddress[y]             : 
#    7|     r7_4(int)             = Constant[0]                    : 
#    7|     mu7_5(int)            = Store[y]                       : &:r7_3, r7_4
#    9|     r9_1(glval<unknown>)  = FunctionAddress[ProbeFunction] : 
#    9|     r9_2(int)             = Constant[0]                    : 
#    9|     v9_3(void)            = Call[ProbeFunction]            : func:r9_1, 0:r9_2
#    9|     mu9_4(unknown)        = ^CallSideEffect                : ~m?
#   10|     r10_1(glval<int>)     = VariableAddress[y]             : 
#   10|     r10_2(int)            = Load[y]                        : &:r10_1, ~m?
#   10|     r10_3(glval<int>)     = VariableAddress[x]             : 
#   10|     mu10_4(int)           = Store[x]                       : &:r10_3, r10_2
#   11|     r11_1(glval<unknown>) = FunctionAddress[ProbeFunction] : 
#   11|     r11_2(int)            = Constant[0]                    : 
#   11|     v11_3(void)           = Call[ProbeFunction]            : func:r11_1, 0:r11_2
#   11|     mu11_4(unknown)       = ^CallSideEffect                : ~m?
#-----|   Goto -> Block 6

#   13|   Block 1
#   13|     r13_1(int)  = Constant[0]       : 
#   13|     r13_2(bool) = CompareEQ         : r13_8, r13_1
#   13|     v13_3(void) = ConditionalBranch : r13_2
#-----|   False -> Block 2
#-----|   True -> Block 3

#   13|   Block 2
#   13|     r13_4(int)  = Constant[1]       : 
#   13|     r13_5(bool) = CompareEQ         : r13_8, r13_4
#   13|     v13_6(void) = ConditionalBranch : r13_5
#-----|   True -> Block 5

#   13|   Block 3
#   13|     v13_7(void) = Unwind : 
#-----|   Goto -> Block 6

#   13|   Block 4
#   13|     r13_8(int)   = Constant[0]       : 
#   13|     r13_9(int)   = Constant[-1]      : 
#   13|     r13_10(bool) = CompareEQ         : r13_8, r13_9
#   13|     v13_11(void) = ConditionalBranch : r13_10
#-----|   False -> Block 1
#-----|   True -> Block 3

#   14|   Block 5
#   14|     r14_1(glval<unknown>) = FunctionAddress[sink] : 
#   14|     r14_2(glval<int>)     = VariableAddress[x]    : 
#   14|     r14_3(int)            = Load[x]               : &:r14_2, ~m?
#   14|     v14_4(void)           = Call[sink]            : func:r14_1, 0:r14_3
#   14|     mu14_5(unknown)       = ^CallSideEffect       : ~m?
#-----|   Goto -> Block 6

#   16|   Block 6
#   16|     v16_1(void) = NoOp         : 
#    6|     v6_4(void)  = ReturnVoid   : 
#    6|     v6_5(void)  = AliasedUse   : ~m?
#    6|     v6_6(void)  = ExitFunction : 

#   18| void g_cpp()
#   18|   Block 0
#   18|     v18_1(void)           = EnterFunction                  : 
#   18|     mu18_2(unknown)       = AliasedDefinition              : 
#   18|     mu18_3(unknown)       = InitializeNonLocal             : 
#   19|     r19_1(glval<int>)     = VariableAddress[x]             : 
#   19|     mu19_2(int)           = Uninitialized[x]               : &:r19_1
#   19|     r19_3(glval<int>)     = VariableAddress[y]             : 
#   19|     r19_4(int)            = Constant[0]                    : 
#   19|     mu19_5(int)           = Store[y]                       : &:r19_3, r19_4
#   21|     r21_1(glval<unknown>) = FunctionAddress[ProbeFunction] : 
#   21|     r21_2(int)            = Constant[0]                    : 
#   21|     v21_3(void)           = Call[ProbeFunction]            : func:r21_1, 0:r21_2
#   21|     mu21_4(unknown)       = ^CallSideEffect                : ~m?
#   22|     r22_1(glval<int>)     = VariableAddress[y]             : 
#   22|     r22_2(int)            = Load[y]                        : &:r22_1, ~m?
#   22|     r22_3(glval<int>)     = VariableAddress[x]             : 
#   22|     mu22_4(int)           = Store[x]                       : &:r22_3, r22_2
#   23|     r23_1(glval<unknown>) = FunctionAddress[ProbeFunction] : 
#   23|     r23_2(int)            = Constant[0]                    : 
#   23|     v23_3(void)           = Call[ProbeFunction]            : func:r23_1, 0:r23_2
#   23|     mu23_4(unknown)       = ^CallSideEffect                : ~m?
#   26|     r26_1(glval<unknown>) = FunctionAddress[sink]          : 
#   26|     r26_2(glval<int>)     = VariableAddress[x]             : 
#   26|     r26_3(int)            = Load[x]                        : &:r26_2, ~m?
#   26|     v26_4(void)           = Call[sink]                     : func:r26_1, 0:r26_3
#   26|     mu26_5(unknown)       = ^CallSideEffect                : ~m?
#   28|     v28_1(void)           = NoOp                           : 
#   18|     v18_4(void)           = ReturnVoid                     : 
#   18|     v18_5(void)           = AliasedUse                     : ~m?
#   18|     v18_6(void)           = ExitFunction                   : 

#   32| void h_cpp(int)
#   32|   Block 0
#   32|     v32_1(void)       = EnterFunction          : 
#   32|     mu32_2(unknown)   = AliasedDefinition      : 
#   32|     mu32_3(unknown)   = InitializeNonLocal     : 
#   32|     r32_4(glval<int>) = VariableAddress[b]     : 
#   32|     mu32_5(int)       = InitializeParameter[b] : &:r32_4
#   33|     r33_1(glval<int>) = VariableAddress[x]     : 
#   33|     r33_2(int)        = Constant[0]            : 
#   33|     mu33_3(int)       = Store[x]               : &:r33_1, r33_2
#   35|     r35_1(glval<int>) = VariableAddress[b]     : 
#   35|     r35_2(int)        = Load[b]                : &:r35_1, ~m?
#   35|     r35_3(int)        = Constant[0]            : 
#   35|     r35_4(bool)       = CompareNE              : r35_2, r35_3
#   35|     v35_5(void)       = ConditionalBranch      : r35_4
#-----|   False -> Block 7
#-----|   True -> Block 1

#   36|   Block 1
#   36|     r36_1(glval<unknown>) = FunctionAddress[AfxThrowMemoryException] : 
#   36|     v36_2(void)           = Call[AfxThrowMemoryException]            : func:r36_1
#   36|     mu36_3(unknown)       = ^CallSideEffect                          : ~m?
#-----|   Goto -> Block 7

#   39|   Block 2
#   39|     r39_1(int)  = Constant[0]       : 
#   39|     r39_2(bool) = CompareEQ         : r39_8, r39_1
#   39|     v39_3(void) = ConditionalBranch : r39_2
#-----|   False -> Block 3
#-----|   True -> Block 4

#   39|   Block 3
#   39|     r39_4(int)  = Constant[1]       : 
#   39|     r39_5(bool) = CompareEQ         : r39_8, r39_4
#   39|     v39_6(void) = ConditionalBranch : r39_5
#-----|   True -> Block 6

#   39|   Block 4
#   39|     v39_7(void) = Unwind : 
#-----|   Goto -> Block 7

#   39|   Block 5
#   39|     r39_8(int)   = Constant[1]       : 
#   39|     r39_9(int)   = Constant[-1]      : 
#   39|     r39_10(bool) = CompareEQ         : r39_8, r39_9
#   39|     v39_11(void) = ConditionalBranch : r39_10
#-----|   False -> Block 2
#-----|   True -> Block 4

#   40|   Block 6
#   40|     r40_1(glval<unknown>) = FunctionAddress[sink] : 
#   40|     r40_2(glval<int>)     = VariableAddress[x]    : 
#   40|     r40_3(int)            = Load[x]               : &:r40_2, ~m?
#   40|     v40_4(void)           = Call[sink]            : func:r40_1, 0:r40_3
#   40|     mu40_5(unknown)       = ^CallSideEffect       : ~m?
#-----|   Goto -> Block 7

#   42|   Block 7
#   42|     v42_1(void) = NoOp         : 
#   32|     v32_6(void) = ReturnVoid   : 
#   32|     v32_7(void) = AliasedUse   : ~m?
#   32|     v32_8(void) = ExitFunction : 

#   44| void throw_cpp(int)
#   44|   Block 0
#   44|     v44_1(void)       = EnterFunction          : 
#   44|     mu44_2(unknown)   = AliasedDefinition      : 
#   44|     mu44_3(unknown)   = InitializeNonLocal     : 
#   44|     r44_4(glval<int>) = VariableAddress[b]     : 
#   44|     mu44_5(int)       = InitializeParameter[b] : &:r44_4
#   45|     r45_1(glval<int>) = VariableAddress[x]     : 
#   45|     r45_2(int)        = Constant[0]            : 
#   45|     mu45_3(int)       = Store[x]               : &:r45_1, r45_2
#   47|     r47_1(glval<int>) = VariableAddress[b]     : 
#   47|     r47_2(int)        = Load[b]                : &:r47_1, ~m?
#   47|     r47_3(int)        = Constant[0]            : 
#   47|     r47_4(bool)       = CompareNE              : r47_2, r47_3
#   47|     v47_5(void)       = ConditionalBranch      : r47_4
#-----|   False -> Block 9
#-----|   True -> Block 3

#   44|   Block 1
#   44|     v44_6(void) = AliasedUse   : ~m?
#   44|     v44_7(void) = ExitFunction : 

#   44|   Block 2
#   44|     v44_8(void) = Unwind : 
#-----|   Goto -> Block 1

#   48|   Block 3
#   48|     r48_1(glval<int>) = VariableAddress[#throw48:13] : 
#   48|     r48_2(int)        = Constant[1]                  : 
#   48|     mu48_3(int)       = Store[#throw48:13]           : &:r48_1, r48_2
#   48|     v48_4(void)       = ThrowValue                   : &:r48_1, ~m?
#-----|   Exception -> Block 7

#   51|   Block 4
#   51|     r51_1(int)  = Constant[0]       : 
#   51|     r51_2(bool) = CompareEQ         : r51_8, r51_1
#   51|     v51_3(void) = ConditionalBranch : r51_2
#-----|   False -> Block 5
#-----|   True -> Block 6

#   51|   Block 5
#   51|     r51_4(int)  = Constant[1]       : 
#   51|     r51_5(bool) = CompareEQ         : r51_8, r51_4
#   51|     v51_6(void) = ConditionalBranch : r51_5
#-----|   True -> Block 8

#   51|   Block 6
#   51|     v51_7(void) = Unwind : 
#-----|   Goto -> Block 9

#   51|   Block 7
#   51|     r51_8(int)   = Constant[1]       : 
#   51|     r51_9(int)   = Constant[-1]      : 
#   51|     r51_10(bool) = CompareEQ         : r51_8, r51_9
#   51|     v51_11(void) = ConditionalBranch : r51_10
#-----|   False -> Block 4
#-----|   True -> Block 6

#   52|   Block 8
#   52|     r52_1(glval<unknown>) = FunctionAddress[sink] : 
#   52|     r52_2(glval<int>)     = VariableAddress[x]    : 
#   52|     r52_3(int)            = Load[x]               : &:r52_2, ~m?
#   52|     v52_4(void)           = Call[sink]            : func:r52_1, 0:r52_3
#   52|     mu52_5(unknown)       = ^CallSideEffect       : ~m?
#-----|   Goto -> Block 9

#   54|   Block 9
#   54|     v54_1(void) = NoOp       : 
#   44|     v44_9(void) = ReturnVoid : 
#-----|   Goto -> Block 1
