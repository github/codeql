test.cpp:
#    1| int test00(int, int)
#    1|   Block 0
#    1|     v1_1(void)                 = EnterFunction            : 
#    1|     m1_2(unknown)              = AliasedDefinition        : 
#    1|         valnum = unique
#    1|     mu1_3(unknown)             = UnmodeledDefinition      : 
#    1|         valnum = unique
#    1|     r1_4(glval<int>)           = VariableAddress[p0]      : 
#    1|         valnum = r1_4
#    1|     m1_5(int)                  = InitializeParameter[p0]  : &:r1_4
#    1|         valnum = m1_5
#    1|     r1_6(glval<int>)           = VariableAddress[p1]      : 
#    1|         valnum = r1_6
#    1|     m1_7(int)                  = InitializeParameter[p1]  : &:r1_6
#    1|         valnum = m1_7
#    2|     r2_1(glval<int>)           = VariableAddress[x]       : 
#    2|         valnum = r2_1
#    2|     m2_2(int)                  = Uninitialized[x]         : &:r2_1
#    2|         valnum = unique
#    2|     r2_3(glval<int>)           = VariableAddress[y]       : 
#    2|         valnum = r2_3
#    2|     m2_4(int)                  = Uninitialized[y]         : &:r2_3
#    2|         valnum = unique
#    3|     r3_1(glval<unsigned char>) = VariableAddress[b]       : 
#    3|         valnum = unique
#    3|     m3_2(unsigned char)        = Uninitialized[b]         : &:r3_1
#    3|         valnum = unique
#    5|     r5_1(glval<int>)           = VariableAddress[p0]      : 
#    5|         valnum = r1_4
#    5|     r5_2(int)                  = Load                     : &:r5_1, m1_5
#    5|         valnum = m1_5
#    5|     r5_3(glval<int>)           = VariableAddress[p1]      : 
#    5|         valnum = r1_6
#    5|     r5_4(int)                  = Load                     : &:r5_3, m1_7
#    5|         valnum = m1_7
#    5|     r5_5(int)                  = Add                      : r5_2, r5_4
#    5|         valnum = r5_5
#    5|     r5_6(glval<int>)           = VariableAddress[x]       : 
#    5|         valnum = r2_1
#    5|     m5_7(int)                  = Store                    : &:r5_6, r5_5
#    5|         valnum = r5_5
#    6|     r6_1(glval<int>)           = VariableAddress[p0]      : 
#    6|         valnum = r1_4
#    6|     r6_2(int)                  = Load                     : &:r6_1, m1_5
#    6|         valnum = m1_5
#    6|     r6_3(glval<int>)           = VariableAddress[p1]      : 
#    6|         valnum = r1_6
#    6|     r6_4(int)                  = Load                     : &:r6_3, m1_7
#    6|         valnum = m1_7
#    6|     r6_5(int)                  = Add                      : r6_2, r6_4
#    6|         valnum = r5_5
#    6|     r6_6(glval<int>)           = VariableAddress[x]       : 
#    6|         valnum = r2_1
#    6|     m6_7(int)                  = Store                    : &:r6_6, r6_5
#    6|         valnum = r5_5
#    7|     r7_1(glval<int>)           = VariableAddress[x]       : 
#    7|         valnum = r2_1
#    7|     r7_2(int)                  = Load                     : &:r7_1, m6_7
#    7|         valnum = r5_5
#    7|     r7_3(glval<int>)           = VariableAddress[y]       : 
#    7|         valnum = r2_3
#    7|     m7_4(int)                  = Store                    : &:r7_3, r7_2
#    7|         valnum = r5_5
#    8|     v8_1(void)                 = NoOp                     : 
#    1|     r1_8(glval<int>)           = VariableAddress[#return] : 
#    1|         valnum = unique
#    1|     v1_9(void)                 = ReturnValue              : &:r1_8
#    1|     v1_10(void)                = UnmodeledUse             : mu*
#    1|     v1_11(void)                = AliasedUse               : ~m1_2
#    1|     v1_12(void)                = ExitFunction             : 

#   12| int test01(int, int)
#   12|   Block 0
#   12|     v12_1(void)                 = EnterFunction             : 
#   12|     m12_2(unknown)              = AliasedDefinition         : 
#   12|         valnum = unique
#   12|     mu12_3(unknown)             = UnmodeledDefinition       : 
#   12|         valnum = unique
#   12|     r12_4(glval<int>)           = VariableAddress[p0]       : 
#   12|         valnum = r12_4
#   12|     m12_5(int)                  = InitializeParameter[p0]   : &:r12_4
#   12|         valnum = m12_5
#   12|     r12_6(glval<int>)           = VariableAddress[p1]       : 
#   12|         valnum = r12_6
#   12|     m12_7(int)                  = InitializeParameter[p1]   : &:r12_6
#   12|         valnum = m12_7
#   13|     r13_1(glval<int>)           = VariableAddress[x]        : 
#   13|         valnum = r13_1
#   13|     m13_2(int)                  = Uninitialized[x]          : &:r13_1
#   13|         valnum = unique
#   13|     r13_3(glval<int>)           = VariableAddress[y]        : 
#   13|         valnum = r13_3
#   13|     m13_4(int)                  = Uninitialized[y]          : &:r13_3
#   13|         valnum = unique
#   14|     r14_1(glval<unsigned char>) = VariableAddress[b]        : 
#   14|         valnum = unique
#   14|     m14_2(unsigned char)        = Uninitialized[b]          : &:r14_1
#   14|         valnum = unique
#   16|     r16_1(glval<int>)           = VariableAddress[p0]       : 
#   16|         valnum = r12_4
#   16|     r16_2(int)                  = Load                      : &:r16_1, m12_5
#   16|         valnum = m12_5
#   16|     r16_3(glval<int>)           = VariableAddress[p1]       : 
#   16|         valnum = r12_6
#   16|     r16_4(int)                  = Load                      : &:r16_3, m12_7
#   16|         valnum = m12_7
#   16|     r16_5(int)                  = Add                       : r16_2, r16_4
#   16|         valnum = r16_5
#   16|     r16_6(glval<int>)           = VariableAddress[global01] : 
#   16|         valnum = r16_6
#   16|     r16_7(int)                  = Load                      : &:r16_6, ~m12_2
#   16|         valnum = unique
#   16|     r16_8(int)                  = Add                       : r16_5, r16_7
#   16|         valnum = r16_8
#   16|     r16_9(glval<int>)           = VariableAddress[x]        : 
#   16|         valnum = r13_1
#   16|     m16_10(int)                 = Store                     : &:r16_9, r16_8
#   16|         valnum = r16_8
#   17|     r17_1(glval<int>)           = VariableAddress[p0]       : 
#   17|         valnum = r12_4
#   17|     r17_2(int)                  = Load                      : &:r17_1, m12_5
#   17|         valnum = m12_5
#   17|     r17_3(glval<int>)           = VariableAddress[p1]       : 
#   17|         valnum = r12_6
#   17|     r17_4(int)                  = Load                      : &:r17_3, m12_7
#   17|         valnum = m12_7
#   17|     r17_5(int)                  = Add                       : r17_2, r17_4
#   17|         valnum = r16_5
#   17|     r17_6(glval<int>)           = VariableAddress[global01] : 
#   17|         valnum = r16_6
#   17|     r17_7(int)                  = Load                      : &:r17_6, ~m12_2
#   17|         valnum = unique
#   17|     r17_8(int)                  = Add                       : r17_5, r17_7
#   17|         valnum = r17_8
#   17|     r17_9(glval<int>)           = VariableAddress[x]        : 
#   17|         valnum = r13_1
#   17|     m17_10(int)                 = Store                     : &:r17_9, r17_8
#   17|         valnum = r17_8
#   18|     r18_1(glval<int>)           = VariableAddress[x]        : 
#   18|         valnum = r13_1
#   18|     r18_2(int)                  = Load                      : &:r18_1, m17_10
#   18|         valnum = r17_8
#   18|     r18_3(glval<int>)           = VariableAddress[y]        : 
#   18|         valnum = r13_3
#   18|     m18_4(int)                  = Store                     : &:r18_3, r18_2
#   18|         valnum = r17_8
#   19|     v19_1(void)                 = NoOp                      : 
#   12|     r12_8(glval<int>)           = VariableAddress[#return]  : 
#   12|         valnum = unique
#   12|     v12_9(void)                 = ReturnValue               : &:r12_8
#   12|     v12_10(void)                = UnmodeledUse              : mu*
#   12|     v12_11(void)                = AliasedUse                : ~m12_2
#   12|     v12_12(void)                = ExitFunction              : 

#   25| int test02(int, int)
#   25|   Block 0
#   25|     v25_1(void)                 = EnterFunction                    : 
#   25|     m25_2(unknown)              = AliasedDefinition                : 
#   25|         valnum = unique
#   25|     mu25_3(unknown)             = UnmodeledDefinition              : 
#   25|         valnum = unique
#   25|     r25_4(glval<int>)           = VariableAddress[p0]              : 
#   25|         valnum = r25_4
#   25|     m25_5(int)                  = InitializeParameter[p0]          : &:r25_4
#   25|         valnum = m25_5
#   25|     r25_6(glval<int>)           = VariableAddress[p1]              : 
#   25|         valnum = r25_6
#   25|     m25_7(int)                  = InitializeParameter[p1]          : &:r25_6
#   25|         valnum = m25_7
#   26|     r26_1(glval<int>)           = VariableAddress[x]               : 
#   26|         valnum = r26_1
#   26|     m26_2(int)                  = Uninitialized[x]                 : &:r26_1
#   26|         valnum = unique
#   26|     r26_3(glval<int>)           = VariableAddress[y]               : 
#   26|         valnum = r26_3
#   26|     m26_4(int)                  = Uninitialized[y]                 : &:r26_3
#   26|         valnum = unique
#   27|     r27_1(glval<unsigned char>) = VariableAddress[b]               : 
#   27|         valnum = unique
#   27|     m27_2(unsigned char)        = Uninitialized[b]                 : &:r27_1
#   27|         valnum = unique
#   29|     r29_1(glval<int>)           = VariableAddress[p0]              : 
#   29|         valnum = r25_4
#   29|     r29_2(int)                  = Load                             : &:r29_1, m25_5
#   29|         valnum = m25_5
#   29|     r29_3(glval<int>)           = VariableAddress[p1]              : 
#   29|         valnum = r25_6
#   29|     r29_4(int)                  = Load                             : &:r29_3, m25_7
#   29|         valnum = m25_7
#   29|     r29_5(int)                  = Add                              : r29_2, r29_4
#   29|         valnum = r29_5
#   29|     r29_6(glval<int>)           = VariableAddress[global02]        : 
#   29|         valnum = r29_6
#   29|     r29_7(int)                  = Load                             : &:r29_6, ~m25_2
#   29|         valnum = unique
#   29|     r29_8(int)                  = Add                              : r29_5, r29_7
#   29|         valnum = r29_8
#   29|     r29_9(glval<int>)           = VariableAddress[x]               : 
#   29|         valnum = r26_1
#   29|     m29_10(int)                 = Store                            : &:r29_9, r29_8
#   29|         valnum = r29_8
#   30|     r30_1(glval<unknown>)       = FunctionAddress[change_global02] : 
#   30|         valnum = unique
#   30|     v30_2(void)                 = Call                             : func:r30_1
#   30|     m30_3(unknown)              = ^CallSideEffect                  : ~m25_2
#   30|         valnum = unique
#   30|     m30_4(unknown)              = Chi                              : total:m25_2, partial:m30_3
#   30|         valnum = unique
#   31|     r31_1(glval<int>)           = VariableAddress[p0]              : 
#   31|         valnum = r25_4
#   31|     r31_2(int)                  = Load                             : &:r31_1, m25_5
#   31|         valnum = m25_5
#   31|     r31_3(glval<int>)           = VariableAddress[p1]              : 
#   31|         valnum = r25_6
#   31|     r31_4(int)                  = Load                             : &:r31_3, m25_7
#   31|         valnum = m25_7
#   31|     r31_5(int)                  = Add                              : r31_2, r31_4
#   31|         valnum = r29_5
#   31|     r31_6(glval<int>)           = VariableAddress[global02]        : 
#   31|         valnum = r29_6
#   31|     r31_7(int)                  = Load                             : &:r31_6, ~m30_4
#   31|         valnum = unique
#   31|     r31_8(int)                  = Add                              : r31_5, r31_7
#   31|         valnum = r31_8
#   31|     r31_9(glval<int>)           = VariableAddress[x]               : 
#   31|         valnum = r26_1
#   31|     m31_10(int)                 = Store                            : &:r31_9, r31_8
#   31|         valnum = r31_8
#   32|     r32_1(glval<int>)           = VariableAddress[x]               : 
#   32|         valnum = r26_1
#   32|     r32_2(int)                  = Load                             : &:r32_1, m31_10
#   32|         valnum = r31_8
#   32|     r32_3(glval<int>)           = VariableAddress[y]               : 
#   32|         valnum = r26_3
#   32|     m32_4(int)                  = Store                            : &:r32_3, r32_2
#   32|         valnum = r31_8
#   33|     v33_1(void)                 = NoOp                             : 
#   25|     r25_8(glval<int>)           = VariableAddress[#return]         : 
#   25|         valnum = unique
#   25|     v25_9(void)                 = ReturnValue                      : &:r25_8
#   25|     v25_10(void)                = UnmodeledUse                     : mu*
#   25|     v25_11(void)                = AliasedUse                       : ~m30_4
#   25|     v25_12(void)                = ExitFunction                     : 

#   39| int test03(int, int, int*)
#   39|   Block 0
#   39|     v39_1(void)                 = EnterFunction             : 
#   39|     m39_2(unknown)              = AliasedDefinition         : 
#   39|         valnum = unique
#   39|     mu39_3(unknown)             = UnmodeledDefinition       : 
#   39|         valnum = unique
#   39|     r39_4(glval<int>)           = VariableAddress[p0]       : 
#   39|         valnum = r39_4
#   39|     m39_5(int)                  = InitializeParameter[p0]   : &:r39_4
#   39|         valnum = m39_5
#   39|     r39_6(glval<int>)           = VariableAddress[p1]       : 
#   39|         valnum = r39_6
#   39|     m39_7(int)                  = InitializeParameter[p1]   : &:r39_6
#   39|         valnum = m39_7
#   39|     r39_8(glval<int *>)         = VariableAddress[p2]       : 
#   39|         valnum = r39_8
#   39|     m39_9(int *)                = InitializeParameter[p2]   : &:r39_8
#   39|         valnum = m39_9
#   40|     r40_1(glval<int>)           = VariableAddress[x]        : 
#   40|         valnum = r40_1
#   40|     m40_2(int)                  = Uninitialized[x]          : &:r40_1
#   40|         valnum = unique
#   40|     r40_3(glval<int>)           = VariableAddress[y]        : 
#   40|         valnum = r40_3
#   40|     m40_4(int)                  = Uninitialized[y]          : &:r40_3
#   40|         valnum = unique
#   41|     r41_1(glval<unsigned char>) = VariableAddress[b]        : 
#   41|         valnum = unique
#   41|     m41_2(unsigned char)        = Uninitialized[b]          : &:r41_1
#   41|         valnum = unique
#   43|     r43_1(glval<int>)           = VariableAddress[p0]       : 
#   43|         valnum = r39_4
#   43|     r43_2(int)                  = Load                      : &:r43_1, m39_5
#   43|         valnum = m39_5
#   43|     r43_3(glval<int>)           = VariableAddress[p1]       : 
#   43|         valnum = r39_6
#   43|     r43_4(int)                  = Load                      : &:r43_3, m39_7
#   43|         valnum = m39_7
#   43|     r43_5(int)                  = Add                       : r43_2, r43_4
#   43|         valnum = r43_5
#   43|     r43_6(glval<int>)           = VariableAddress[global03] : 
#   43|         valnum = r43_6
#   43|     r43_7(int)                  = Load                      : &:r43_6, ~m39_2
#   43|         valnum = unique
#   43|     r43_8(int)                  = Add                       : r43_5, r43_7
#   43|         valnum = r43_8
#   43|     r43_9(glval<int>)           = VariableAddress[x]        : 
#   43|         valnum = r40_1
#   43|     m43_10(int)                 = Store                     : &:r43_9, r43_8
#   43|         valnum = r43_8
#   44|     r44_1(int)                  = Constant[0]               : 
#   44|         valnum = r44_1
#   44|     r44_2(glval<int *>)         = VariableAddress[p2]       : 
#   44|         valnum = r39_8
#   44|     r44_3(int *)                = Load                      : &:r44_2, m39_9
#   44|         valnum = m39_9
#   44|     r44_4(glval<int>)           = CopyValue                 : r44_3
#   44|         valnum = m39_9
#   44|     m44_5(int)                  = Store                     : &:r44_4, r44_1
#   44|         valnum = r44_1
#   44|     m44_6(unknown)              = Chi                       : total:m39_2, partial:m44_5
#   44|         valnum = unique
#   45|     r45_1(glval<int>)           = VariableAddress[p0]       : 
#   45|         valnum = r39_4
#   45|     r45_2(int)                  = Load                      : &:r45_1, m39_5
#   45|         valnum = m39_5
#   45|     r45_3(glval<int>)           = VariableAddress[p1]       : 
#   45|         valnum = r39_6
#   45|     r45_4(int)                  = Load                      : &:r45_3, m39_7
#   45|         valnum = m39_7
#   45|     r45_5(int)                  = Add                       : r45_2, r45_4
#   45|         valnum = r43_5
#   45|     r45_6(glval<int>)           = VariableAddress[global03] : 
#   45|         valnum = r43_6
#   45|     r45_7(int)                  = Load                      : &:r45_6, ~m44_6
#   45|         valnum = unique
#   45|     r45_8(int)                  = Add                       : r45_5, r45_7
#   45|         valnum = r45_8
#   45|     r45_9(glval<int>)           = VariableAddress[x]        : 
#   45|         valnum = r40_1
#   45|     m45_10(int)                 = Store                     : &:r45_9, r45_8
#   45|         valnum = r45_8
#   46|     r46_1(glval<int>)           = VariableAddress[x]        : 
#   46|         valnum = r40_1
#   46|     r46_2(int)                  = Load                      : &:r46_1, m45_10
#   46|         valnum = r45_8
#   46|     r46_3(glval<int>)           = VariableAddress[y]        : 
#   46|         valnum = r40_3
#   46|     m46_4(int)                  = Store                     : &:r46_3, r46_2
#   46|         valnum = r45_8
#   47|     v47_1(void)                 = NoOp                      : 
#   39|     r39_10(glval<int>)          = VariableAddress[#return]  : 
#   39|         valnum = unique
#   39|     v39_11(void)                = ReturnValue               : &:r39_10
#   39|     v39_12(void)                = UnmodeledUse              : mu*
#   39|     v39_13(void)                = AliasedUse                : ~m44_6
#   39|     v39_14(void)                = ExitFunction              : 

#   49| unsigned int my_strspn(char const*, char const*)
#   49|   Block 0
#   49|     v49_1(void)                = EnterFunction              : 
#   49|     m49_2(unknown)             = AliasedDefinition          : 
#   49|         valnum = unique
#   49|     mu49_3(unknown)            = UnmodeledDefinition        : 
#   49|         valnum = unique
#   49|     r49_4(glval<char *>)       = VariableAddress[str]       : 
#   49|         valnum = r49_4
#   49|     m49_5(char *)              = InitializeParameter[str]   : &:r49_4
#   49|         valnum = m49_5
#   49|     r49_6(glval<char *>)       = VariableAddress[chars]     : 
#   49|         valnum = r49_6
#   49|     m49_7(char *)              = InitializeParameter[chars] : &:r49_6
#   49|         valnum = m49_7
#   50|     r50_1(glval<char *>)       = VariableAddress[ptr]       : 
#   50|         valnum = r50_1
#   50|     m50_2(char *)              = Uninitialized[ptr]         : &:r50_1
#   50|         valnum = unique
#   51|     r51_1(glval<unsigned int>) = VariableAddress[result]    : 
#   51|         valnum = r51_1
#   51|     r51_2(unsigned int)        = Constant[0]                : 
#   51|         valnum = r51_2
#   51|     m51_3(unsigned int)        = Store                      : &:r51_1, r51_2
#   51|         valnum = r51_2
#-----|   Goto -> Block 1

#   53|   Block 1
#   53|     m53_1(unsigned int)  = Phi                  : from 0:m51_3, from 8:m62_5
#   53|         valnum = m53_1
#   53|     r53_2(glval<char *>) = VariableAddress[str] : 
#   53|         valnum = r49_4
#   53|     r53_3(char *)        = Load                 : &:r53_2, m49_5
#   53|         valnum = m49_5
#   53|     r53_4(char)          = Load                 : &:r53_3, ~m49_2
#   53|         valnum = unique
#   53|     r53_5(int)           = Convert              : r53_4
#   53|         valnum = unique
#   53|     r53_6(int)           = Constant[0]          : 
#   53|         valnum = r53_6
#   53|     r53_7(bool)          = CompareNE            : r53_5, r53_6
#   53|         valnum = unique
#   53|     v53_8(void)          = ConditionalBranch    : r53_7
#-----|   False -> Block 9
#-----|   True -> Block 2

#   55|   Block 2
#   55|     r55_1(glval<char *>) = VariableAddress[chars] : 
#   55|         valnum = r49_6
#   55|     r55_2(char *)        = Load                   : &:r55_1, m49_7
#   55|         valnum = m49_7
#   55|     r55_3(glval<char *>) = VariableAddress[ptr]   : 
#   55|         valnum = r50_1
#   55|     m55_4(char *)        = Store                  : &:r55_3, r55_2
#   55|         valnum = m49_7
#-----|   Goto -> Block 3

#   56|   Block 3
#   56|     m56_1(decltype(nullptr)) = Phi                  : from 2:m55_4, from 5:m56_23
#   56|         valnum = m56_1
#   56|     r56_2(glval<char *>)     = VariableAddress[ptr] : 
#   56|         valnum = r50_1
#   56|     r56_3(char *)            = Load                 : &:r56_2, m56_1
#   56|         valnum = m56_1
#   56|     r56_4(char)              = Load                 : &:r56_3, ~m49_2
#   56|         valnum = unique
#   56|     r56_5(int)               = Convert              : r56_4
#   56|         valnum = unique
#   56|     r56_6(glval<char *>)     = VariableAddress[str] : 
#   56|         valnum = r49_4
#   56|     r56_7(char *)            = Load                 : &:r56_6, m49_5
#   56|         valnum = m49_5
#   56|     r56_8(char)              = Load                 : &:r56_7, ~m49_2
#   56|         valnum = unique
#   56|     r56_9(int)               = Convert              : r56_8
#   56|         valnum = unique
#   56|     r56_10(bool)             = CompareNE            : r56_5, r56_9
#   56|         valnum = unique
#   56|     v56_11(void)             = ConditionalBranch    : r56_10
#-----|   False -> Block 6
#-----|   True -> Block 4

#   56|   Block 4
#   56|     r56_12(glval<char *>) = VariableAddress[ptr] : 
#   56|         valnum = r50_1
#   56|     r56_13(char *)        = Load                 : &:r56_12, m56_1
#   56|         valnum = m56_1
#   56|     r56_14(char)          = Load                 : &:r56_13, ~m49_2
#   56|         valnum = unique
#   56|     r56_15(int)           = Convert              : r56_14
#   56|         valnum = unique
#   56|     r56_16(int)           = Constant[0]          : 
#   56|         valnum = r53_6
#   56|     r56_17(bool)          = CompareNE            : r56_15, r56_16
#   56|         valnum = unique
#   56|     v56_18(void)          = ConditionalBranch    : r56_17
#-----|   False -> Block 6
#-----|   True -> Block 5

#   56|   Block 5
#   56|     r56_19(glval<char *>) = VariableAddress[ptr] : 
#   56|         valnum = r50_1
#   56|     r56_20(char *)        = Load                 : &:r56_19, m56_1
#   56|         valnum = m56_1
#   56|     r56_21(int)           = Constant[1]          : 
#   56|         valnum = unique
#   56|     r56_22(char *)        = PointerAdd[1]        : r56_20, r56_21
#   56|         valnum = r56_22
#   56|     m56_23(char *)        = Store                : &:r56_19, r56_22
#   56|         valnum = r56_22
#-----|   Goto (back edge) -> Block 3

#   59|   Block 6
#   59|     r59_1(glval<char *>) = VariableAddress[ptr] : 
#   59|         valnum = r50_1
#   59|     r59_2(char *)        = Load                 : &:r59_1, m56_1
#   59|         valnum = m56_1
#   59|     r59_3(char)          = Load                 : &:r59_2, ~m49_2
#   59|         valnum = unique
#   59|     r59_4(int)           = Convert              : r59_3
#   59|         valnum = unique
#   59|     r59_5(int)           = Constant[0]          : 
#   59|         valnum = r53_6
#   59|     r59_6(bool)          = CompareEQ            : r59_4, r59_5
#   59|         valnum = unique
#   59|     v59_7(void)          = ConditionalBranch    : r59_6
#-----|   False -> Block 8
#-----|   True -> Block 7

#   60|   Block 7
#   60|     v60_1(void) = NoOp : 
#-----|   Goto -> Block 9

#   62|   Block 8
#   62|     r62_1(glval<unsigned int>) = VariableAddress[result] : 
#   62|         valnum = r51_1
#   62|     r62_2(unsigned int)        = Load                    : &:r62_1, m53_1
#   62|         valnum = m53_1
#   62|     r62_3(unsigned int)        = Constant[1]             : 
#   62|         valnum = unique
#   62|     r62_4(unsigned int)        = Add                     : r62_2, r62_3
#   62|         valnum = r62_4
#   62|     m62_5(unsigned int)        = Store                   : &:r62_1, r62_4
#   62|         valnum = r62_4
#-----|   Goto (back edge) -> Block 1

#   63|   Block 9
#   63|     v63_1(void)                = NoOp                     : 
#   65|     r65_1(glval<unsigned int>) = VariableAddress[#return] : 
#   65|         valnum = r65_1
#   65|     r65_2(glval<unsigned int>) = VariableAddress[result]  : 
#   65|         valnum = r51_1
#   65|     r65_3(unsigned int)        = Load                     : &:r65_2, m53_1
#   65|         valnum = m53_1
#   65|     m65_4(unsigned int)        = Store                    : &:r65_1, r65_3
#   65|         valnum = m53_1
#   49|     r49_8(glval<unsigned int>) = VariableAddress[#return] : 
#   49|         valnum = r65_1
#   49|     v49_9(void)                = ReturnValue              : &:r49_8, m65_4
#   49|     v49_10(void)               = UnmodeledUse             : mu*
#   49|     v49_11(void)               = AliasedUse               : ~m49_2
#   49|     v49_12(void)               = ExitFunction             : 

#   75| void test04(two_values*)
#   75|   Block 0
#   75|     v75_1(void)                 = EnterFunction              : 
#   75|     m75_2(unknown)              = AliasedDefinition          : 
#   75|         valnum = unique
#   75|     mu75_3(unknown)             = UnmodeledDefinition        : 
#   75|         valnum = unique
#   75|     r75_4(glval<two_values *>)  = VariableAddress[vals]      : 
#   75|         valnum = r75_4
#   75|     m75_5(two_values *)         = InitializeParameter[vals]  : &:r75_4
#   75|         valnum = m75_5
#   77|     r77_1(glval<signed short>)  = VariableAddress[v]         : 
#   77|         valnum = r77_1
#   77|     r77_2(glval<unknown>)       = FunctionAddress[getAValue] : 
#   77|         valnum = unique
#   77|     r77_3(int)                  = Call                       : func:r77_2
#   77|         valnum = unique
#   77|     m77_4(unknown)              = ^CallSideEffect            : ~m75_2
#   77|         valnum = unique
#   77|     m77_5(unknown)              = Chi                        : total:m75_2, partial:m77_4
#   77|         valnum = unique
#   77|     r77_6(signed short)         = Convert                    : r77_3
#   77|         valnum = r77_6
#   77|     m77_7(signed short)         = Store                      : &:r77_1, r77_6
#   77|         valnum = r77_6
#   79|     r79_1(glval<signed short>)  = VariableAddress[v]         : 
#   79|         valnum = r77_1
#   79|     r79_2(signed short)         = Load                       : &:r79_1, m77_7
#   79|         valnum = r77_6
#   79|     r79_3(int)                  = Convert                    : r79_2
#   79|         valnum = unique
#   79|     r79_4(glval<two_values *>)  = VariableAddress[vals]      : 
#   79|         valnum = r75_4
#   79|     r79_5(two_values *)         = Load                       : &:r79_4, m75_5
#   79|         valnum = m75_5
#   79|     r79_6(glval<signed short>)  = FieldAddress[val1]         : r79_5
#   79|         valnum = unique
#   79|     r79_7(signed short)         = Load                       : &:r79_6, ~m77_5
#   79|         valnum = unique
#   79|     r79_8(int)                  = Convert                    : r79_7
#   79|         valnum = unique
#   79|     r79_9(glval<two_values *>)  = VariableAddress[vals]      : 
#   79|         valnum = r75_4
#   79|     r79_10(two_values *)        = Load                       : &:r79_9, m75_5
#   79|         valnum = m75_5
#   79|     r79_11(glval<signed short>) = FieldAddress[val2]         : r79_10
#   79|         valnum = unique
#   79|     r79_12(signed short)        = Load                       : &:r79_11, ~m77_5
#   79|         valnum = unique
#   79|     r79_13(int)                 = Convert                    : r79_12
#   79|         valnum = unique
#   79|     r79_14(int)                 = Add                        : r79_8, r79_13
#   79|         valnum = unique
#   79|     r79_15(bool)                = CompareLT                  : r79_3, r79_14
#   79|         valnum = unique
#   79|     v79_16(void)                = ConditionalBranch          : r79_15
#-----|   False -> Block 2
#-----|   True -> Block 1

#   80|   Block 1
#   80|     r80_1(glval<unknown>)      = FunctionAddress[getAValue] : 
#   80|         valnum = unique
#   80|     r80_2(int)                 = Call                       : func:r80_1
#   80|         valnum = unique
#   80|     m80_3(unknown)             = ^CallSideEffect            : ~m77_5
#   80|         valnum = unique
#   80|     m80_4(unknown)             = Chi                        : total:m77_5, partial:m80_3
#   80|         valnum = unique
#   80|     r80_5(signed short)        = Convert                    : r80_2
#   80|         valnum = r80_5
#   80|     r80_6(glval<signed short>) = VariableAddress[v]         : 
#   80|         valnum = r77_1
#   80|     m80_7(signed short)        = Store                      : &:r80_6, r80_5
#   80|         valnum = r80_5
#-----|   Goto -> Block 2

#   82|   Block 2
#   82|     m82_1(unknown) = Phi          : from 0:~m77_5, from 1:~m80_4
#   82|         valnum = unique
#   82|     v82_2(void)    = NoOp         : 
#   75|     v75_6(void)    = ReturnVoid   : 
#   75|     v75_7(void)    = UnmodeledUse : mu*
#   75|     v75_8(void)    = AliasedUse   : ~m82_1
#   75|     v75_9(void)    = ExitFunction : 

#   84| void test05(int, int, void*)
#   84|   Block 0
#   84|     v84_1(void)          = EnterFunction          : 
#   84|     m84_2(unknown)       = AliasedDefinition      : 
#   84|         valnum = unique
#   84|     mu84_3(unknown)      = UnmodeledDefinition    : 
#   84|         valnum = unique
#   84|     r84_4(glval<int>)    = VariableAddress[x]     : 
#   84|         valnum = r84_4
#   84|     m84_5(int)           = InitializeParameter[x] : &:r84_4
#   84|         valnum = m84_5
#   84|     r84_6(glval<int>)    = VariableAddress[y]     : 
#   84|         valnum = r84_6
#   84|     m84_7(int)           = InitializeParameter[y] : &:r84_6
#   84|         valnum = m84_7
#   84|     r84_8(glval<void *>) = VariableAddress[p]     : 
#   84|         valnum = r84_8
#   84|     m84_9(void *)        = InitializeParameter[p] : &:r84_8
#   84|         valnum = m84_9
#   86|     r86_1(glval<int>)    = VariableAddress[v]     : 
#   86|         valnum = r86_1
#   86|     m86_2(int)           = Uninitialized[v]       : &:r86_1
#   86|         valnum = unique
#   88|     r88_1(glval<void *>) = VariableAddress[p]     : 
#   88|         valnum = r84_8
#   88|     r88_2(void *)        = Load                   : &:r88_1, m84_9
#   88|         valnum = m84_9
#   88|     r88_3(void *)        = Constant[0]            : 
#   88|         valnum = unique
#   88|     r88_4(bool)          = CompareNE              : r88_2, r88_3
#   88|         valnum = unique
#   88|     v88_5(void)          = ConditionalBranch      : r88_4
#-----|   False -> Block 2
#-----|   True -> Block 1

#   88|   Block 1
#   88|     r88_6(glval<int>) = VariableAddress[x]         : 
#   88|         valnum = r84_4
#   88|     r88_7(int)        = Load                       : &:r88_6, m84_5
#   88|         valnum = m84_5
#   88|     r88_8(glval<int>) = VariableAddress[#temp88:7] : 
#   88|         valnum = r88_8
#   88|     m88_9(int)        = Store                      : &:r88_8, r88_7
#   88|         valnum = m84_5
#-----|   Goto -> Block 3

#   88|   Block 2
#   88|     r88_10(glval<int>) = VariableAddress[y]         : 
#   88|         valnum = r84_6
#   88|     r88_11(int)        = Load                       : &:r88_10, m84_7
#   88|         valnum = m84_7
#   88|     r88_12(glval<int>) = VariableAddress[#temp88:7] : 
#   88|         valnum = r88_8
#   88|     m88_13(int)        = Store                      : &:r88_12, r88_11
#   88|         valnum = m84_7
#-----|   Goto -> Block 3

#   88|   Block 3
#   88|     m88_14(int)        = Phi                        : from 1:m88_9, from 2:m88_13
#   88|         valnum = m88_14
#   88|     r88_15(glval<int>) = VariableAddress[#temp88:7] : 
#   88|         valnum = r88_8
#   88|     r88_16(int)        = Load                       : &:r88_15, m88_14
#   88|         valnum = m88_14
#   88|     r88_17(glval<int>) = VariableAddress[v]         : 
#   88|         valnum = r86_1
#   88|     m88_18(int)        = Store                      : &:r88_17, r88_16
#   88|         valnum = m88_14
#   89|     v89_1(void)        = NoOp                       : 
#   84|     v84_10(void)       = ReturnVoid                 : 
#   84|     v84_11(void)       = UnmodeledUse               : mu*
#   84|     v84_12(void)       = AliasedUse                 : ~m84_2
#   84|     v84_13(void)       = ExitFunction               : 

#   91| int regression_test00()
#   91|   Block 0
#   91|     v91_1(void)       = EnterFunction            : 
#   91|     m91_2(unknown)    = AliasedDefinition        : 
#   91|         valnum = unique
#   91|     mu91_3(unknown)   = UnmodeledDefinition      : 
#   91|         valnum = unique
#   92|     r92_1(glval<int>) = VariableAddress[x]       : 
#   92|         valnum = r92_1
#   92|     r92_2(int)        = Constant[10]             : 
#   92|         valnum = r92_2
#   92|     r92_3(glval<int>) = VariableAddress[x]       : 
#   92|         valnum = r92_1
#   92|     m92_4(int)        = Store                    : &:r92_3, r92_2
#   92|         valnum = r92_2
#   92|     r92_5(int)        = CopyValue                : r92_2
#   92|         valnum = r92_2
#   92|     m92_6(int)        = Store                    : &:r92_1, r92_5
#   92|         valnum = r92_2
#   93|     r93_1(glval<int>) = VariableAddress[#return] : 
#   93|         valnum = r93_1
#   93|     r93_2(glval<int>) = VariableAddress[x]       : 
#   93|         valnum = r92_1
#   93|     r93_3(int)        = Load                     : &:r93_2, m92_6
#   93|         valnum = r92_2
#   93|     m93_4(int)        = Store                    : &:r93_1, r93_3
#   93|         valnum = r92_2
#   91|     r91_4(glval<int>) = VariableAddress[#return] : 
#   91|         valnum = r93_1
#   91|     v91_5(void)       = ReturnValue              : &:r91_4, m93_4
#   91|     v91_6(void)       = UnmodeledUse             : mu*
#   91|     v91_7(void)       = AliasedUse               : ~m91_2
#   91|     v91_8(void)       = ExitFunction             : 

#  104| int inheritanceConversions(Derived*)
#  104|   Block 0
#  104|     v104_1(void)             = EnterFunction                           : 
#  104|     m104_2(unknown)          = AliasedDefinition                       : 
#  104|         valnum = unique
#  104|     mu104_3(unknown)         = UnmodeledDefinition                     : 
#  104|         valnum = unique
#  104|     r104_4(glval<Derived *>) = VariableAddress[pd]                     : 
#  104|         valnum = r104_4
#  104|     m104_5(Derived *)        = InitializeParameter[pd]                 : &:r104_4
#  104|         valnum = m104_5
#  105|     r105_1(glval<int>)       = VariableAddress[x]                      : 
#  105|         valnum = unique
#  105|     r105_2(glval<Derived *>) = VariableAddress[pd]                     : 
#  105|         valnum = r104_4
#  105|     r105_3(Derived *)        = Load                                    : &:r105_2, m104_5
#  105|         valnum = m104_5
#  105|     r105_4(Base *)           = ConvertToNonVirtualBase[Derived : Base] : r105_3
#  105|         valnum = r105_4
#  105|     r105_5(glval<int>)       = FieldAddress[b]                         : r105_4
#  105|         valnum = r105_5
#  105|     r105_6(int)              = Load                                    : &:r105_5, ~m104_2
#  105|         valnum = r105_6
#  105|     m105_7(int)              = Store                                   : &:r105_1, r105_6
#  105|         valnum = r105_6
#  106|     r106_1(glval<Base *>)    = VariableAddress[pb]                     : 
#  106|         valnum = r106_1
#  106|     r106_2(glval<Derived *>) = VariableAddress[pd]                     : 
#  106|         valnum = r104_4
#  106|     r106_3(Derived *)        = Load                                    : &:r106_2, m104_5
#  106|         valnum = m104_5
#  106|     r106_4(Base *)           = ConvertToNonVirtualBase[Derived : Base] : r106_3
#  106|         valnum = r105_4
#  106|     m106_5(Base *)           = Store                                   : &:r106_1, r106_4
#  106|         valnum = r105_4
#  107|     r107_1(glval<int>)       = VariableAddress[y]                      : 
#  107|         valnum = r107_1
#  107|     r107_2(glval<Base *>)    = VariableAddress[pb]                     : 
#  107|         valnum = r106_1
#  107|     r107_3(Base *)           = Load                                    : &:r107_2, m106_5
#  107|         valnum = r105_4
#  107|     r107_4(glval<int>)       = FieldAddress[b]                         : r107_3
#  107|         valnum = r105_5
#  107|     r107_5(int)              = Load                                    : &:r107_4, ~m104_2
#  107|         valnum = r107_5
#  107|     m107_6(int)              = Store                                   : &:r107_1, r107_5
#  107|         valnum = r107_5
#  109|     r109_1(glval<int>)       = VariableAddress[#return]                : 
#  109|         valnum = r109_1
#  109|     r109_2(glval<int>)       = VariableAddress[y]                      : 
#  109|         valnum = r107_1
#  109|     r109_3(int)              = Load                                    : &:r109_2, m107_6
#  109|         valnum = r107_5
#  109|     m109_4(int)              = Store                                   : &:r109_1, r109_3
#  109|         valnum = r107_5
#  104|     r104_6(glval<int>)       = VariableAddress[#return]                : 
#  104|         valnum = r109_1
#  104|     v104_7(void)             = ReturnValue                             : &:r104_6, m109_4
#  104|     v104_8(void)             = UnmodeledUse                            : mu*
#  104|     v104_9(void)             = AliasedUse                              : ~m104_2
#  104|     v104_10(void)            = ExitFunction                            : 

#  112| void test06()
#  112|   Block 0
#  112|     v112_1(void)           = EnterFunction       : 
#  112|     m112_2(unknown)        = AliasedDefinition   : 
#  112|         valnum = unique
#  112|     mu112_3(unknown)       = UnmodeledDefinition : 
#  112|         valnum = unique
#  113|     r113_1(glval<char[2]>) = StringConstant["a"] : 
#  113|         valnum = r113_1
#  114|     r114_1(glval<char[2]>) = StringConstant["b"] : 
#  114|         valnum = unique
#  115|     r115_1(glval<char[2]>) = StringConstant["a"] : 
#  115|         valnum = r113_1
#  116|     r116_1(glval<char[2]>) = StringConstant["c"] : 
#  116|         valnum = unique
#  117|     v117_1(void)           = NoOp                : 
#  112|     v112_4(void)           = ReturnVoid          : 
#  112|     v112_5(void)           = UnmodeledUse        : mu*
#  112|     v112_6(void)           = AliasedUse          : ~m112_2
#  112|     v112_7(void)           = ExitFunction        : 
