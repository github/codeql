// Code generated by depstubber. DO NOT EDIT.
// This is a simple stub for github.com/kataras/iris/v12/middleware/jwt, strictly for use in testing.

// See the LICENSE file for information about the licensing of the original library.
// Source: github.com/kataras/iris/v12/middleware/jwt (exports: Signer,Verifier; functions: NewSigner,NewVerifier)

// Package jwt is a stub of github.com/kataras/iris/v12/middleware/jwt, generated by depstubber.
package jwt

import (
	time "time"
)

type Blocklist interface {
	Count() (int64, error)
	Del(_ string) error
	Has(_ string) (bool, error)
	InvalidateToken(_ []byte, _ interface{}) error
	ValidateToken(_ []byte, _ interface{}, _ error) error
}

func NewSigner(_ interface{}, _ interface{}, _ time.Duration) *Signer {
	return nil
}

func NewVerifier(_ interface{}, _ interface{}, _ ...interface{}) *Verifier {
	return nil
}

type Signer struct {
	Alg     interface{}
	Key     interface{}
	MaxAge  time.Duration
	Options []interface{}
	Encrypt func([]byte) ([]byte, error)
}

func (_ *Signer) NewTokenPair(_ interface{}, _ interface{}, _ time.Duration, _ ...interface{}) (interface{}, error) {
	return nil, nil
}

func (_ *Signer) Sign(_ interface{}, _ ...interface{}) ([]byte, error) {
	return nil, nil
}

func (_ *Signer) WithEncryption(_ []byte, _ []byte) *Signer {
	return nil
}

type TokenExtractor func(interface{}) string

type Verifier struct {
	Alg                interface{}
	Key                interface{}
	Decrypt            func([]byte) ([]byte, error)
	Extractors         []TokenExtractor
	Blocklist          Blocklist
	Validators         []interface{}
	ErrorHandler       func(interface{}, error)
	DisableContextUser bool
}

func (_ *Verifier) RequestToken(_ interface{}) string {
	return ""
}

func (_ *Verifier) Verify(_ func() interface{}, _ ...interface{}) interface{} {
	return nil
}

func (_ *Verifier) VerifyToken(_ []byte, _ ...interface{}) (interface{}, error) {
	return nil, nil
}

func (_ *Verifier) WithDecryption(_ []byte, _ []byte) *Verifier {
	return nil
}

func (_ *Verifier) WithDefaultBlocklist() *Verifier {
	return nil
}
