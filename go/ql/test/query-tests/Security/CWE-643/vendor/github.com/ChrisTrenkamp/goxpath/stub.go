// Code generated by depstubber. DO NOT EDIT.
// This is a simple stub for github.com/ChrisTrenkamp/goxpath, strictly for use in testing.

// See the LICENSE file for information about the licensing of the original library.
// Source: github.com/ChrisTrenkamp/goxpath (exports: Opts,FuncOpts,XPathExec; functions: Parse,MustParse,ParseExec)

// Package goxpath is a stub of github.com/ChrisTrenkamp/goxpath, generated by depstubber.
package goxpath

import (
	xml "encoding/xml"
)

type FuncOpts func(*Opts)

func MustParse(_ string) XPathExec {
	return XPathExec{}
}

type Opts struct {
	NS    map[string]string
	Funcs map[xml.Name]interface{}
	Vars  map[string]interface{}
}

func Parse(_ string) (XPathExec, error) {
	return XPathExec{}, nil
}

func ParseExec(_ string, _ interface{}, _ ...FuncOpts) (interface{}, error) {
	return nil, nil
}

type XPathExec struct{}

func (_ XPathExec) Exec(_ interface{}, _ ...FuncOpts) (interface{}, error) {
	return nil, nil
}

func (_ XPathExec) ExecBool(_ interface{}, _ ...FuncOpts) (bool, error) {
	return false, nil
}

func (_ XPathExec) ExecNode(_ interface{}, _ ...FuncOpts) (interface{}, error) {
	return nil, nil
}

func (_ XPathExec) ExecNum(_ interface{}, _ ...FuncOpts) (float64, error) {
	return 0, nil
}

func (_ XPathExec) MustExec(_ interface{}, _ ...FuncOpts) interface{} {
	return nil
}
