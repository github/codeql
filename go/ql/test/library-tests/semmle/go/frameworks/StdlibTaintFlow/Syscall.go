// Code generated by https://github.com/gagliardetto/codebox. DO NOT EDIT.

package main

import "syscall"

func TaintStepTest_SyscallBytePtrFromString_B0I0O0(sourceCQL interface{}) interface{} {
	fromString656 := sourceCQL.(string)
	intoByte414, _ := syscall.BytePtrFromString(fromString656)
	return intoByte414
}

func TaintStepTest_SyscallByteSliceFromString_B0I0O0(sourceCQL interface{}) interface{} {
	fromString518 := sourceCQL.(string)
	intoByte650, _ := syscall.ByteSliceFromString(fromString518)
	return intoByte650
}

func TaintStepTest_SyscallStringBytePtr_B0I0O0(sourceCQL interface{}) interface{} {
	fromString784 := sourceCQL.(string)
	intoByte957 := syscall.StringBytePtr(fromString784)
	return intoByte957
}

func TaintStepTest_SyscallStringByteSlice_B0I0O0(sourceCQL interface{}) interface{} {
	fromString520 := sourceCQL.(string)
	intoByte443 := syscall.StringByteSlice(fromString520)
	return intoByte443
}

func TaintStepTest_SyscallRawConnRead_B0I0O0(sourceCQL interface{}) interface{} {
	fromRawConn989 := sourceCQL.(syscall.RawConn)
	var intoFuncfdUintptrdoneBool982 func(uintptr) bool
	fromRawConn989.Read(intoFuncfdUintptrdoneBool982)
	return intoFuncfdUintptrdoneBool982
}

func TaintStepTest_SyscallConnSyscallConn_B0I0O0(sourceCQL interface{}) interface{} {
	fromConn417 := sourceCQL.(syscall.Conn)
	intoRawConn584, _ := fromConn417.SyscallConn()
	return intoRawConn584
}

func TaintStepTest_SyscallConnSyscallConn_B1I0O0(sourceCQL interface{}) interface{} {
	fromRawConn991 := sourceCQL.(syscall.RawConn)
	var intoConn881 syscall.Conn
	intermediateCQL, _ := intoConn881.SyscallConn()
	link(fromRawConn991, intermediateCQL)
	return intoConn881
}

func TaintStepTest_SyscallRawConnWrite_B0I0O0(sourceCQL interface{}) interface{} {
	fromFuncfdUintptrdoneBool186 := sourceCQL.(func(uintptr) bool)
	var intoRawConn284 syscall.RawConn
	intoRawConn284.Write(fromFuncfdUintptrdoneBool186)
	return intoRawConn284
}

func RunAllTaints_Syscall() {
	{
		source := newSource(0)
		out := TaintStepTest_SyscallBytePtrFromString_B0I0O0(source)
		sink(0, out)
	}
	{
		source := newSource(1)
		out := TaintStepTest_SyscallByteSliceFromString_B0I0O0(source)
		sink(1, out)
	}
	{
		source := newSource(2)
		out := TaintStepTest_SyscallStringBytePtr_B0I0O0(source)
		sink(2, out)
	}
	{
		source := newSource(3)
		out := TaintStepTest_SyscallStringByteSlice_B0I0O0(source)
		sink(3, out)
	}
	{
		source := newSource(5)
		out := TaintStepTest_SyscallRawConnRead_B0I0O0(source)
		sink(5, out)
	}
	{
		source := newSource(6)
		out := TaintStepTest_SyscallConnSyscallConn_B0I0O0(source)
		sink(6, out)
	}
	{
		source := newSource(7)
		out := TaintStepTest_SyscallConnSyscallConn_B1I0O0(source)
		sink(7, out)
	}
	{
		source := newSource(8)
		out := TaintStepTest_SyscallRawConnWrite_B0I0O0(source)
		sink(8, out)
	}
}
