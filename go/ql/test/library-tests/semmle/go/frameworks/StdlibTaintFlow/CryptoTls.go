// Code generated by https://github.com/gagliardetto/codebox. DO NOT EDIT.

package main

import (
	"crypto/tls"
	"net"
)

func TaintStepTest_CryptoTlsClient_B0I0O0(sourceCQL interface{}) interface{} {
	fromConn656 := sourceCQL.(net.Conn)
	intoConn414 := tls.Client(fromConn656, nil)
	return intoConn414
}

func TaintStepTest_CryptoTlsClient_B1I0O0(sourceCQL interface{}) interface{} {
	fromConn518 := sourceCQL.(*tls.Conn)
	var intoConn650 net.Conn
	intermediateCQL := tls.Client(intoConn650, nil)
	link(fromConn518, intermediateCQL)
	return intoConn650
}

func TaintStepTest_CryptoTlsNewListener_B0I0O0(sourceCQL interface{}) interface{} {
	fromListener784 := sourceCQL.(net.Listener)
	intoListener957 := tls.NewListener(fromListener784, nil)
	return intoListener957
}

func TaintStepTest_CryptoTlsServer_B0I0O0(sourceCQL interface{}) interface{} {
	fromConn520 := sourceCQL.(net.Conn)
	intoConn443 := tls.Server(fromConn520, nil)
	return intoConn443
}

func TaintStepTest_CryptoTlsServer_B1I0O0(sourceCQL interface{}) interface{} {
	fromConn127 := sourceCQL.(*tls.Conn)
	var intoConn483 net.Conn
	intermediateCQL := tls.Server(intoConn483, nil)
	link(fromConn127, intermediateCQL)
	return intoConn483
}

func TaintStepTest_CryptoTlsConnRead_B0I0O0(sourceCQL interface{}) interface{} {
	fromConn989 := sourceCQL.(tls.Conn)
	var intoByte982 []byte
	fromConn989.Read(intoByte982)
	return intoByte982
}

func TaintStepTest_CryptoTlsConnWrite_B0I0O0(sourceCQL interface{}) interface{} {
	fromByte417 := sourceCQL.([]byte)
	var intoConn584 tls.Conn
	intoConn584.Write(fromByte417)
	return intoConn584
}

func RunAllTaints_CryptoTls() {
	{
		source := newSource(0)
		out := TaintStepTest_CryptoTlsClient_B0I0O0(source)
		sink(0, out)
	}
	{
		source := newSource(1)
		out := TaintStepTest_CryptoTlsClient_B1I0O0(source)
		sink(1, out)
	}
	{
		source := newSource(2)
		out := TaintStepTest_CryptoTlsNewListener_B0I0O0(source)
		sink(2, out)
	}
	{
		source := newSource(3)
		out := TaintStepTest_CryptoTlsServer_B0I0O0(source)
		sink(3, out)
	}
	{
		source := newSource(4)
		out := TaintStepTest_CryptoTlsServer_B1I0O0(source)
		sink(4, out)
	}
	{
		source := newSource(5)
		out := TaintStepTest_CryptoTlsConnRead_B0I0O0(source)
		sink(5, out)
	}
	{
		source := newSource(6)
		out := TaintStepTest_CryptoTlsConnWrite_B0I0O0(source)
		sink(6, out)
	}
}
