// Code generated by depstubber. DO NOT EDIT.
// This is a simple stub for golang.org/x/net/context, strictly for use in testing.

// See the LICENSE file for information about the licensing of the original library.
// Source: golang.org/x/net/context (exports: Context; functions: WithCancel,WithDeadline,WithTimeout,WithValue)

// Package context is a stub of golang.org/x/net/context, generated by depstubber.
package context

import (
	context "context"
	time "time"
)

type Context interface {
	Deadline() (time.Time, bool)
	Done() <-chan struct{}
	Err() error
	Value(_ interface{}) interface{}
}

func WithCancel(_ context.Context) (context.Context, context.CancelFunc) {
	return nil, nil
}

func WithDeadline(_ context.Context, _ time.Time) (context.Context, context.CancelFunc) {
	return nil, nil
}

func WithTimeout(_ context.Context, _ time.Duration) (context.Context, context.CancelFunc) {
	return nil, nil
}

func WithValue(_ context.Context, _ interface{}, _ interface{}) context.Context {
	return nil
}
