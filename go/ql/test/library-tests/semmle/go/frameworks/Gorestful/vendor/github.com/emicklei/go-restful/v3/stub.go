// Code generated by depstubber. DO NOT EDIT.
// This is a simple stub for github.com/emicklei/go-restful/v3, strictly for use in testing.

// See the LICENSE file for information about the licensing of the original library.
// Source: github.com/emicklei/go-restful/v3 (exports: Request,Response; functions: )

// Package gopkg is a stub of github.com/emicklei/go-restful/v3, generated by depstubber.
package gopkg

import (
	bufio "bufio"
	net "net"
	http "net/http"
)

type EntityReaderWriter interface {
	Read(_ *Request, _ interface{}) error
	Write(_ *Response, _ int, _ interface{}) error
}

type Request struct {
	Request *http.Request
}

func (_ Request) Attribute(_ string) interface{} {
	return nil
}

func (_ Request) SelectedRoutePath() string {
	return ""
}

func (_ *Request) BodyParameter(_ string) (string, error) {
	return "", nil
}

func (_ *Request) HeaderParameter(_ string) string {
	return ""
}

func (_ *Request) PathParameter(_ string) string {
	return ""
}

func (_ *Request) PathParameters() map[string]string {
	return nil
}

func (_ *Request) QueryParameter(_ string) string {
	return ""
}

func (_ *Request) QueryParameters(_ string) []string {
	return nil
}

func (_ *Request) ReadEntity(_ interface{}) error {
	return nil
}

func (_ *Request) SetAttribute(_ string, _ interface{}) {}

type Response struct {
	ResponseWriter http.ResponseWriter
}

func (_ Response) AddHeader(_ string, _ string) Response {
	return Response{}
}

func (_ Response) CloseNotify() <-chan bool {
	return nil
}

func (_ Response) ContentLength() int {
	return 0
}

func (_ Response) Error() error {
	return nil
}

func (_ Response) Header() http.Header {
	return nil
}

func (_ Response) InternalServerError() Response {
	return Response{}
}

func (_ Response) StatusCode() int {
	return 0
}

func (_ *Response) EntityWriter() (EntityReaderWriter, bool) {
	return nil, false
}

func (_ *Response) Flush() {}

func (_ *Response) Hijack() (net.Conn, *bufio.ReadWriter, error) {
	return nil, nil, nil
}

func (_ *Response) PrettyPrint(_ bool) {}

func (_ *Response) SetRequestAccepts(_ string) {}

func (_ *Response) Write(_ []byte) (int, error) {
	return 0, nil
}

func (_ *Response) WriteAsJson(_ interface{}) error {
	return nil
}

func (_ *Response) WriteAsXml(_ interface{}) error {
	return nil
}

func (_ *Response) WriteEntity(_ interface{}) error {
	return nil
}

func (_ *Response) WriteError(_ int, _ error) error {
	return nil
}

func (_ *Response) WriteErrorString(_ int, _ string) error {
	return nil
}

func (_ *Response) WriteHeader(_ int) {}

func (_ *Response) WriteHeaderAndEntity(_ int, _ interface{}) error {
	return nil
}

func (_ *Response) WriteHeaderAndJson(_ int, _ interface{}, _ string) error {
	return nil
}

func (_ *Response) WriteHeaderAndXml(_ int, _ interface{}) error {
	return nil
}

func (_ *Response) WriteJson(_ interface{}, _ string) error {
	return nil
}

func (_ *Response) WriteServiceError(_ int, _ ServiceError) error {
	return nil
}

type ServiceError struct {
	Code    int
	Message string
	Header  http.Header
}

func (_ ServiceError) Error() string {
	return ""
}
