// Code generated by depstubber. DO NOT EDIT.
// This is a simple stub for gopkg.in/macaron.v1, strictly for use in testing.

// See the LICENSE file for information about the licensing of the original library.
// Source: gopkg.in/macaron.v1 (exports: Context; functions: )

// Package macaron is a stub of gopkg.in/macaron.v1, generated by depstubber.
package macaron

import (
	context "context"
	io "io"
	multipart "mime/multipart"
	http "net/http"
	reflect "reflect"
)

type BeforeFunc func(ResponseWriter)

type ComboRouter struct{}

func (_ *ComboRouter) Delete(_ ...Handler) *ComboRouter {
	return nil
}

func (_ *ComboRouter) Get(_ ...Handler) *ComboRouter {
	return nil
}

func (_ *ComboRouter) Head(_ ...Handler) *ComboRouter {
	return nil
}

func (_ *ComboRouter) Name(_ string) {}

func (_ *ComboRouter) Options(_ ...Handler) *ComboRouter {
	return nil
}

func (_ *ComboRouter) Patch(_ ...Handler) *ComboRouter {
	return nil
}

func (_ *ComboRouter) Post(_ ...Handler) *ComboRouter {
	return nil
}

func (_ *ComboRouter) Put(_ ...Handler) *ComboRouter {
	return nil
}

type Context struct {
	Injector interface{}
	Router   *Router
	Req      Request
	Resp     ResponseWriter
	Render   Render
	Locale   Locale
	Data     map[string]interface{}
}

func (_ Context) Any(_ string, _ ...Handler) *Route {
	return nil
}

func (_ Context) Apply(_ interface{}) interface {
	Error() string
} {
	return nil
}

func (_ Context) Combo(_ string, _ ...Handler) *ComboRouter {
	return nil
}

func (_ Context) Delete(_ string, _ ...Handler) *Route {
	return nil
}

func (_ Context) Error(_ int, _ ...string) {}

func (_ Context) Get(_ string, _ ...Handler) *Route {
	return nil
}

func (_ Context) GetVal(_ reflect.Type) reflect.Value {
	return reflect.Value{}
}

func (_ Context) Group(_ string, _ func(), _ ...Handler) {}

func (_ Context) HTMLBytes(_ string, _ interface{}, _ ...HTMLOptions) ([]uint8, interface {
	Error() string
}) {
	return nil, nil
}

func (_ Context) HTMLSetBytes(_ string, _ string, _ interface{}, _ ...HTMLOptions) ([]uint8, interface {
	Error() string
}) {
	return nil, nil
}

func (_ Context) HTMLSetString(_ string, _ string, _ interface{}, _ ...HTMLOptions) (string, interface {
	Error() string
}) {
	return "", nil
}

func (_ Context) HTMLString(_ string, _ interface{}, _ ...HTMLOptions) (string, interface {
	Error() string
}) {
	return "", nil
}

func (_ Context) Handle(_ string, _ string, _ []Handler) *Route {
	return nil
}

func (_ Context) HasTemplateSet(_ string) bool {
	return false
}

func (_ Context) Head(_ string, _ ...Handler) *Route {
	return nil
}

func (_ Context) Header() http.Header {
	return nil
}

func (_ Context) InternalServerError(_ ...Handler) {}

func (_ Context) Invoke(_ interface{}) ([]reflect.Value, interface {
	Error() string
}) {
	return nil, nil
}

func (_ Context) JSON(_ int, _ interface{}) {}

func (_ Context) JSONString(_ interface{}) (string, interface {
	Error() string
}) {
	return "", nil
}

func (_ Context) Language() string {
	return ""
}

func (_ Context) Map(_ interface{}) interface{} {
	return nil
}

func (_ Context) MapTo(_ interface{}, _ interface{}) interface{} {
	return nil
}

func (_ Context) NotFound(_ ...Handler) {}

func (_ Context) Options(_ string, _ ...Handler) *Route {
	return nil
}

func (_ Context) Patch(_ string, _ ...Handler) *Route {
	return nil
}

func (_ Context) PlainText(_ int, _ []uint8) {}

func (_ Context) Post(_ string, _ ...Handler) *Route {
	return nil
}

func (_ Context) Put(_ string, _ ...Handler) *Route {
	return nil
}

func (_ Context) RawData(_ int, _ []uint8) {}

func (_ Context) Route(_ string, _ string, _ ...Handler) *Route {
	return nil
}

func (_ Context) ServeHTTP(_ http.ResponseWriter, _ *http.Request) {}

func (_ Context) Set(_ reflect.Type, _ reflect.Value) interface{} {
	return nil
}

func (_ Context) SetAutoHead(_ bool) {}

func (_ Context) SetHandlerWrapper(_ func(Handler) Handler) {}

func (_ Context) SetParent(_ interface{}) {}

func (_ Context) SetResponseWriter(_ http.ResponseWriter) {}

func (_ Context) SetTemplatePath(_ string, _ string) {}

func (_ Context) Status(_ int) {}

func (_ Context) Tr(_ string, _ ...interface{}) string {
	return ""
}

func (_ Context) URLFor(_ string, _ ...string) string {
	return ""
}

func (_ Context) Write(_ []uint8) (int, interface {
	Error() string
}) {
	return 0, nil
}

func (_ Context) WriteHeader(_ int) {}

func (_ Context) XML(_ int, _ interface{}) {}

func (_ *Context) ChangeStaticPath(_ string, _ string) {}

func (_ *Context) GetCookie(_ string) string {
	return ""
}

func (_ *Context) GetCookieFloat64(_ string) float64 {
	return 0
}

func (_ *Context) GetCookieInt(_ string) int {
	return 0
}

func (_ *Context) GetCookieInt64(_ string) int64 {
	return 0
}

func (_ *Context) GetFile(_ string) (multipart.File, *multipart.FileHeader, interface {
	Error() string
}) {
	return nil, nil, nil
}

func (_ *Context) GetSecureCookie(_ string) (string, bool) {
	return "", false
}

func (_ *Context) GetSuperSecureCookie(_ string, _ string) (string, bool) {
	return "", false
}

func (_ *Context) HTML(_ int, _ string, _ ...interface{}) {}

func (_ *Context) HTMLSet(_ int, _ string, _ string, _ ...interface{}) {}

func (_ *Context) Next() {}

func (_ *Context) Params(_ string) string {
	return ""
}

func (_ *Context) ParamsEscape(_ string) string {
	return ""
}

func (_ *Context) ParamsFloat64(_ string) float64 {
	return 0
}

func (_ *Context) ParamsInt(_ string) int {
	return 0
}

func (_ *Context) ParamsInt64(_ string) int64 {
	return 0
}

func (_ *Context) Query(_ string) string {
	return ""
}

func (_ *Context) QueryBool(_ string) bool {
	return false
}

func (_ *Context) QueryEscape(_ string) string {
	return ""
}

func (_ *Context) QueryFloat64(_ string) float64 {
	return 0
}

func (_ *Context) QueryInt(_ string) int {
	return 0
}

func (_ *Context) QueryInt64(_ string) int64 {
	return 0
}

func (_ *Context) QueryStrings(_ string) []string {
	return nil
}

func (_ *Context) QueryTrim(_ string) string {
	return ""
}

func (_ *Context) Redirect(_ string, _ ...int) {}

func (_ *Context) RemoteAddr() string {
	return ""
}

func (_ *Context) ReplaceAllParams(_ Params) {}

func (_ *Context) SaveToFile(_ string, _ string) interface {
	Error() string
} {
	return nil
}

func (_ *Context) ServeContent(_ string, _ io.ReadSeeker, _ ...interface{}) {}

func (_ *Context) ServeFile(_ string, _ ...string) {}

func (_ *Context) ServeFileContent(_ string, _ ...string) {}

func (_ *Context) SetCookie(_ string, _ string, _ ...interface{}) {}

func (_ *Context) SetParams(_ string, _ string) {}

func (_ *Context) SetSecureCookie(_ string, _ string, _ ...interface{}) {}

func (_ *Context) SetSuperSecureCookie(_ string, _ string, _ string, _ ...interface{}) {}

func (_ *Context) Written() bool {
	return false
}

type HTMLOptions struct {
	Layout string
}

type Handler interface{}

type Locale interface {
	Language() string
	Tr(_ string, _ ...interface{}) string
}

type Params map[string]string

type Render interface {
	Error(_ int, _ ...string)
	HTML(_ int, _ string, _ interface{}, _ ...HTMLOptions)
	HTMLBytes(_ string, _ interface{}, _ ...HTMLOptions) ([]uint8, interface {
		Error() string
	})
	HTMLSet(_ int, _ string, _ string, _ interface{}, _ ...HTMLOptions)
	HTMLSetBytes(_ string, _ string, _ interface{}, _ ...HTMLOptions) ([]uint8, interface {
		Error() string
	})
	HTMLSetString(_ string, _ string, _ interface{}, _ ...HTMLOptions) (string, interface {
		Error() string
	})
	HTMLString(_ string, _ interface{}, _ ...HTMLOptions) (string, interface {
		Error() string
	})
	HasTemplateSet(_ string) bool
	Header() http.Header
	JSON(_ int, _ interface{})
	JSONString(_ interface{}) (string, interface {
		Error() string
	})
	PlainText(_ int, _ []uint8)
	RawData(_ int, _ []uint8)
	SetResponseWriter(_ http.ResponseWriter)
	SetTemplatePath(_ string, _ string)
	Status(_ int)
	Write(_ []uint8) (int, interface {
		Error() string
	})
	WriteHeader(_ int)
	XML(_ int, _ interface{})
}

type Request struct {
	Request *http.Request
}

func (_ Request) AddCookie(_ *http.Cookie) {}

func (_ Request) BasicAuth() (string, string, bool) {
	return "", "", false
}

func (_ Request) Clone(_ context.Context) *http.Request {
	return nil
}

func (_ Request) Context() context.Context {
	return nil
}

func (_ Request) Cookie(_ string) (*http.Cookie, interface {
	Error() string
}) {
	return nil, nil
}

func (_ Request) Cookies() []*http.Cookie {
	return nil
}

func (_ Request) FormFile(_ string) (multipart.File, *multipart.FileHeader, interface {
	Error() string
}) {
	return nil, nil, nil
}

func (_ Request) FormValue(_ string) string {
	return ""
}

func (_ Request) MultipartReader() (*multipart.Reader, interface {
	Error() string
}) {
	return nil, nil
}

func (_ Request) ParseForm() interface {
	Error() string
} {
	return nil
}

func (_ Request) ParseMultipartForm(_ int64) interface {
	Error() string
} {
	return nil
}

func (_ Request) PostFormValue(_ string) string {
	return ""
}

func (_ Request) ProtoAtLeast(_ int, _ int) bool {
	return false
}

func (_ Request) Referer() string {
	return ""
}

func (_ Request) SetBasicAuth(_ string, _ string) {}

func (_ Request) UserAgent() string {
	return ""
}

func (_ Request) WithContext(_ context.Context) *http.Request {
	return nil
}

func (_ Request) Write(_ io.Writer) interface {
	Error() string
} {
	return nil
}

func (_ Request) WriteProxy(_ io.Writer) interface {
	Error() string
} {
	return nil
}

func (_ *Request) Body() *RequestBody {
	return nil
}

type RequestBody struct{}

func (_ *RequestBody) Bytes() ([]uint8, interface {
	Error() string
}) {
	return nil, nil
}

func (_ *RequestBody) ReadCloser() io.ReadCloser {
	return nil
}

func (_ *RequestBody) String() (string, interface {
	Error() string
}) {
	return "", nil
}

type ResponseWriter interface {
	Before(_ BeforeFunc)
	Flush()
	Header() http.Header
	Size() int
	Status() int
	Write(_ []uint8) (int, interface {
		Error() string
	})
	WriteHeader(_ int)
	Written() bool
}

type Route struct{}

func (_ *Route) Name(_ string) {}

type Router struct{}

func (_ *Router) Any(_ string, _ ...Handler) *Route {
	return nil
}

func (_ *Router) Combo(_ string, _ ...Handler) *ComboRouter {
	return nil
}

func (_ *Router) Delete(_ string, _ ...Handler) *Route {
	return nil
}

func (_ *Router) Get(_ string, _ ...Handler) *Route {
	return nil
}

func (_ *Router) Group(_ string, _ func(), _ ...Handler) {}

func (_ *Router) Handle(_ string, _ string, _ []Handler) *Route {
	return nil
}

func (_ *Router) Head(_ string, _ ...Handler) *Route {
	return nil
}

func (_ *Router) InternalServerError(_ ...Handler) {}

func (_ *Router) NotFound(_ ...Handler) {}

func (_ *Router) Options(_ string, _ ...Handler) *Route {
	return nil
}

func (_ *Router) Patch(_ string, _ ...Handler) *Route {
	return nil
}

func (_ *Router) Post(_ string, _ ...Handler) *Route {
	return nil
}

func (_ *Router) Put(_ string, _ ...Handler) *Route {
	return nil
}

func (_ *Router) Route(_ string, _ string, _ ...Handler) *Route {
	return nil
}

func (_ *Router) ServeHTTP(_ http.ResponseWriter, _ *http.Request) {}

func (_ *Router) SetAutoHead(_ bool) {}

func (_ *Router) SetHandlerWrapper(_ func(Handler) Handler) {}

func (_ *Router) URLFor(_ string, _ ...string) string {
	return ""
}
