// Code generated by depstubber. DO NOT EDIT.
// This is a simple stub for github.com/uptrace/bun, strictly for use in testing.

// See the LICENSE file for information about the licensing of the original library.
// Source: github.com/uptrace/bun (exports: DB; functions: NewDB,NewRawQuery)

// Package bun is a stub of github.com/uptrace/bun, generated by depstubber.
package bun

import (
	context "context"
	sql "database/sql"
	driver "database/sql/driver"
	reflect "reflect"
	time "time"
)

type AddColumnQuery struct{}

func (_ *AddColumnQuery) AppendNamedArg(_ interface{}, _ []byte, _ string) ([]byte, bool) {
	return nil, false
}

func (_ *AddColumnQuery) AppendQuery(_ interface{}, _ []byte) ([]byte, error) {
	return nil, nil
}

func (_ *AddColumnQuery) Apply(_ func(*AddColumnQuery) *AddColumnQuery) *AddColumnQuery {
	return nil
}

func (_ *AddColumnQuery) ColumnExpr(_ string, _ ...interface{}) *AddColumnQuery {
	return nil
}

func (_ *AddColumnQuery) Conn(_ IConn) *AddColumnQuery {
	return nil
}

func (_ *AddColumnQuery) DB() *DB {
	return nil
}

func (_ *AddColumnQuery) Dialect() interface{} {
	return nil
}

func (_ *AddColumnQuery) Err(_ error) *AddColumnQuery {
	return nil
}

func (_ *AddColumnQuery) Exec(_ context.Context, _ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *AddColumnQuery) GetConn() IConn {
	return nil
}

func (_ *AddColumnQuery) GetModel() interface{} {
	return nil
}

func (_ *AddColumnQuery) GetTableName() string {
	return ""
}

func (_ *AddColumnQuery) IfNotExists() *AddColumnQuery {
	return nil
}

func (_ *AddColumnQuery) Model(_ interface{}) *AddColumnQuery {
	return nil
}

func (_ *AddColumnQuery) ModelTableExpr(_ string, _ ...interface{}) *AddColumnQuery {
	return nil
}

func (_ *AddColumnQuery) NewAddColumn() *AddColumnQuery {
	return nil
}

func (_ *AddColumnQuery) NewCreateIndex() *CreateIndexQuery {
	return nil
}

func (_ *AddColumnQuery) NewCreateTable() *CreateTableQuery {
	return nil
}

func (_ *AddColumnQuery) NewDelete() *DeleteQuery {
	return nil
}

func (_ *AddColumnQuery) NewDropColumn() *DropColumnQuery {
	return nil
}

func (_ *AddColumnQuery) NewDropIndex() *DropIndexQuery {
	return nil
}

func (_ *AddColumnQuery) NewDropTable() *DropTableQuery {
	return nil
}

func (_ *AddColumnQuery) NewInsert() *InsertQuery {
	return nil
}

func (_ *AddColumnQuery) NewRaw(_ string, _ ...interface{}) *RawQuery {
	return nil
}

func (_ *AddColumnQuery) NewSelect() *SelectQuery {
	return nil
}

func (_ *AddColumnQuery) NewTruncateTable() *TruncateTableQuery {
	return nil
}

func (_ *AddColumnQuery) NewUpdate() *UpdateQuery {
	return nil
}

func (_ *AddColumnQuery) NewValues(_ interface{}) *ValuesQuery {
	return nil
}

func (_ *AddColumnQuery) Operation() string {
	return ""
}

func (_ *AddColumnQuery) Table(_ ...string) *AddColumnQuery {
	return nil
}

func (_ *AddColumnQuery) TableExpr(_ string, _ ...interface{}) *AddColumnQuery {
	return nil
}

type Conn struct {
	Conn *sql.Conn
}

func (_ Conn) BeginTx(_ context.Context, _ *sql.TxOptions) (Tx, error) {
	return Tx{}, nil
}

func (_ Conn) Close() error {
	return nil
}

func (_ Conn) Dialect() interface{} {
	return nil
}

func (_ Conn) ExecContext(_ context.Context, _ string, _ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ Conn) NewAddColumn() *AddColumnQuery {
	return nil
}

func (_ Conn) NewCreateIndex() *CreateIndexQuery {
	return nil
}

func (_ Conn) NewCreateTable() *CreateTableQuery {
	return nil
}

func (_ Conn) NewDelete() *DeleteQuery {
	return nil
}

func (_ Conn) NewDropColumn() *DropColumnQuery {
	return nil
}

func (_ Conn) NewDropIndex() *DropIndexQuery {
	return nil
}

func (_ Conn) NewDropTable() *DropTableQuery {
	return nil
}

func (_ Conn) NewInsert() *InsertQuery {
	return nil
}

func (_ Conn) NewMerge() *MergeQuery {
	return nil
}

func (_ Conn) NewRaw(_ string, _ ...interface{}) *RawQuery {
	return nil
}

func (_ Conn) NewSelect() *SelectQuery {
	return nil
}

func (_ Conn) NewTruncateTable() *TruncateTableQuery {
	return nil
}

func (_ Conn) NewUpdate() *UpdateQuery {
	return nil
}

func (_ Conn) NewValues(_ interface{}) *ValuesQuery {
	return nil
}

func (_ Conn) PingContext(_ context.Context) error {
	return nil
}

func (_ Conn) PrepareContext(_ context.Context, _ string) (*sql.Stmt, error) {
	return nil, nil
}

func (_ Conn) QueryContext(_ context.Context, _ string, _ ...interface{}) (*sql.Rows, error) {
	return nil, nil
}

func (_ Conn) QueryRowContext(_ context.Context, _ string, _ ...interface{}) *sql.Row {
	return nil
}

func (_ Conn) Raw(_ func(interface{}) error) error {
	return nil
}

func (_ Conn) RunInTx(_ context.Context, _ *sql.TxOptions, _ func(context.Context, Tx) error) error {
	return nil
}

type CreateIndexQuery struct{}

func (_ *CreateIndexQuery) AppendNamedArg(_ interface{}, _ []byte, _ string) ([]byte, bool) {
	return nil, false
}

func (_ *CreateIndexQuery) AppendQuery(_ interface{}, _ []byte) ([]byte, error) {
	return nil, nil
}

func (_ *CreateIndexQuery) Column(_ ...string) *CreateIndexQuery {
	return nil
}

func (_ *CreateIndexQuery) ColumnExpr(_ string, _ ...interface{}) *CreateIndexQuery {
	return nil
}

func (_ *CreateIndexQuery) Concurrently() *CreateIndexQuery {
	return nil
}

func (_ *CreateIndexQuery) Conn(_ IConn) *CreateIndexQuery {
	return nil
}

func (_ *CreateIndexQuery) DB() *DB {
	return nil
}

func (_ *CreateIndexQuery) Dialect() interface{} {
	return nil
}

func (_ *CreateIndexQuery) Err(_ error) *CreateIndexQuery {
	return nil
}

func (_ *CreateIndexQuery) ExcludeColumn(_ ...string) *CreateIndexQuery {
	return nil
}

func (_ *CreateIndexQuery) Exec(_ context.Context, _ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *CreateIndexQuery) GetConn() IConn {
	return nil
}

func (_ *CreateIndexQuery) GetModel() interface{} {
	return nil
}

func (_ *CreateIndexQuery) GetTableName() string {
	return ""
}

func (_ *CreateIndexQuery) IfNotExists() *CreateIndexQuery {
	return nil
}

func (_ *CreateIndexQuery) Include(_ ...string) *CreateIndexQuery {
	return nil
}

func (_ *CreateIndexQuery) IncludeExpr(_ string, _ ...interface{}) *CreateIndexQuery {
	return nil
}

func (_ *CreateIndexQuery) Index(_ string) *CreateIndexQuery {
	return nil
}

func (_ *CreateIndexQuery) IndexExpr(_ string, _ ...interface{}) *CreateIndexQuery {
	return nil
}

func (_ *CreateIndexQuery) Model(_ interface{}) *CreateIndexQuery {
	return nil
}

func (_ *CreateIndexQuery) ModelTableExpr(_ string, _ ...interface{}) *CreateIndexQuery {
	return nil
}

func (_ *CreateIndexQuery) NewAddColumn() *AddColumnQuery {
	return nil
}

func (_ *CreateIndexQuery) NewCreateIndex() *CreateIndexQuery {
	return nil
}

func (_ *CreateIndexQuery) NewCreateTable() *CreateTableQuery {
	return nil
}

func (_ *CreateIndexQuery) NewDelete() *DeleteQuery {
	return nil
}

func (_ *CreateIndexQuery) NewDropColumn() *DropColumnQuery {
	return nil
}

func (_ *CreateIndexQuery) NewDropIndex() *DropIndexQuery {
	return nil
}

func (_ *CreateIndexQuery) NewDropTable() *DropTableQuery {
	return nil
}

func (_ *CreateIndexQuery) NewInsert() *InsertQuery {
	return nil
}

func (_ *CreateIndexQuery) NewRaw(_ string, _ ...interface{}) *RawQuery {
	return nil
}

func (_ *CreateIndexQuery) NewSelect() *SelectQuery {
	return nil
}

func (_ *CreateIndexQuery) NewTruncateTable() *TruncateTableQuery {
	return nil
}

func (_ *CreateIndexQuery) NewUpdate() *UpdateQuery {
	return nil
}

func (_ *CreateIndexQuery) NewValues(_ interface{}) *ValuesQuery {
	return nil
}

func (_ *CreateIndexQuery) Operation() string {
	return ""
}

func (_ *CreateIndexQuery) Table(_ ...string) *CreateIndexQuery {
	return nil
}

func (_ *CreateIndexQuery) TableExpr(_ string, _ ...interface{}) *CreateIndexQuery {
	return nil
}

func (_ *CreateIndexQuery) Unique() *CreateIndexQuery {
	return nil
}

func (_ *CreateIndexQuery) Using(_ string, _ ...interface{}) *CreateIndexQuery {
	return nil
}

func (_ *CreateIndexQuery) Where(_ string, _ ...interface{}) *CreateIndexQuery {
	return nil
}

func (_ *CreateIndexQuery) WhereOr(_ string, _ ...interface{}) *CreateIndexQuery {
	return nil
}

type CreateTableQuery struct{}

func (_ *CreateTableQuery) AppendNamedArg(_ interface{}, _ []byte, _ string) ([]byte, bool) {
	return nil, false
}

func (_ *CreateTableQuery) AppendQuery(_ interface{}, _ []byte) ([]byte, error) {
	return nil, nil
}

func (_ *CreateTableQuery) ColumnExpr(_ string, _ ...interface{}) *CreateTableQuery {
	return nil
}

func (_ *CreateTableQuery) Conn(_ IConn) *CreateTableQuery {
	return nil
}

func (_ *CreateTableQuery) DB() *DB {
	return nil
}

func (_ *CreateTableQuery) Dialect() interface{} {
	return nil
}

func (_ *CreateTableQuery) Err(_ error) *CreateTableQuery {
	return nil
}

func (_ *CreateTableQuery) Exec(_ context.Context, _ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *CreateTableQuery) ForeignKey(_ string, _ ...interface{}) *CreateTableQuery {
	return nil
}

func (_ *CreateTableQuery) GetConn() IConn {
	return nil
}

func (_ *CreateTableQuery) GetModel() interface{} {
	return nil
}

func (_ *CreateTableQuery) GetTableName() string {
	return ""
}

func (_ *CreateTableQuery) IfNotExists() *CreateTableQuery {
	return nil
}

func (_ *CreateTableQuery) Model(_ interface{}) *CreateTableQuery {
	return nil
}

func (_ *CreateTableQuery) ModelTableExpr(_ string, _ ...interface{}) *CreateTableQuery {
	return nil
}

func (_ *CreateTableQuery) NewAddColumn() *AddColumnQuery {
	return nil
}

func (_ *CreateTableQuery) NewCreateIndex() *CreateIndexQuery {
	return nil
}

func (_ *CreateTableQuery) NewCreateTable() *CreateTableQuery {
	return nil
}

func (_ *CreateTableQuery) NewDelete() *DeleteQuery {
	return nil
}

func (_ *CreateTableQuery) NewDropColumn() *DropColumnQuery {
	return nil
}

func (_ *CreateTableQuery) NewDropIndex() *DropIndexQuery {
	return nil
}

func (_ *CreateTableQuery) NewDropTable() *DropTableQuery {
	return nil
}

func (_ *CreateTableQuery) NewInsert() *InsertQuery {
	return nil
}

func (_ *CreateTableQuery) NewRaw(_ string, _ ...interface{}) *RawQuery {
	return nil
}

func (_ *CreateTableQuery) NewSelect() *SelectQuery {
	return nil
}

func (_ *CreateTableQuery) NewTruncateTable() *TruncateTableQuery {
	return nil
}

func (_ *CreateTableQuery) NewUpdate() *UpdateQuery {
	return nil
}

func (_ *CreateTableQuery) NewValues(_ interface{}) *ValuesQuery {
	return nil
}

func (_ *CreateTableQuery) Operation() string {
	return ""
}

func (_ *CreateTableQuery) PartitionBy(_ string, _ ...interface{}) *CreateTableQuery {
	return nil
}

func (_ *CreateTableQuery) Table(_ ...string) *CreateTableQuery {
	return nil
}

func (_ *CreateTableQuery) TableExpr(_ string, _ ...interface{}) *CreateTableQuery {
	return nil
}

func (_ *CreateTableQuery) TableSpace(_ string) *CreateTableQuery {
	return nil
}

func (_ *CreateTableQuery) Temp() *CreateTableQuery {
	return nil
}

func (_ *CreateTableQuery) Varchar(_ int) *CreateTableQuery {
	return nil
}

func (_ *CreateTableQuery) WithForeignKeys() *CreateTableQuery {
	return nil
}

type DB struct {
	DB *sql.DB
}

func (_ DB) Close() error {
	return nil
}

func (_ DB) Driver() driver.Driver {
	return nil
}

func (_ DB) Ping() error {
	return nil
}

func (_ DB) PingContext(_ context.Context) error {
	return nil
}

func (_ DB) SetConnMaxIdleTime(_ time.Duration) {}

func (_ DB) SetConnMaxLifetime(_ time.Duration) {}

func (_ DB) SetMaxIdleConns(_ int) {}

func (_ DB) SetMaxOpenConns(_ int) {}

func (_ DB) Stats() sql.DBStats {
	return sql.DBStats{}
}

func (_ *DB) AddQueryHook(_ QueryHook) {}

func (_ *DB) Begin() (Tx, error) {
	return Tx{}, nil
}

func (_ *DB) BeginTx(_ context.Context, _ *sql.TxOptions) (Tx, error) {
	return Tx{}, nil
}

func (_ *DB) Conn(_ context.Context) (Conn, error) {
	return Conn{}, nil
}

func (_ *DB) DBStats() DBStats {
	return DBStats{}
}

func (_ *DB) Dialect() interface{} {
	return nil
}

func (_ *DB) Exec(_ string, _ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *DB) ExecContext(_ context.Context, _ string, _ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *DB) Formatter() interface{} {
	return nil
}

func (_ *DB) HasFeature(_ interface{}) bool {
	return false
}

func (_ *DB) NewAddColumn() *AddColumnQuery {
	return nil
}

func (_ *DB) NewCreateIndex() *CreateIndexQuery {
	return nil
}

func (_ *DB) NewCreateTable() *CreateTableQuery {
	return nil
}

func (_ *DB) NewDelete() *DeleteQuery {
	return nil
}

func (_ *DB) NewDropColumn() *DropColumnQuery {
	return nil
}

func (_ *DB) NewDropIndex() *DropIndexQuery {
	return nil
}

func (_ *DB) NewDropTable() *DropTableQuery {
	return nil
}

func (_ *DB) NewInsert() *InsertQuery {
	return nil
}

func (_ *DB) NewMerge() *MergeQuery {
	return nil
}

func (_ *DB) NewRaw(_ string, _ ...interface{}) *RawQuery {
	return nil
}

func (_ *DB) NewSelect() *SelectQuery {
	return nil
}

func (_ *DB) NewTruncateTable() *TruncateTableQuery {
	return nil
}

func (_ *DB) NewUpdate() *UpdateQuery {
	return nil
}

func (_ *DB) NewValues(_ interface{}) *ValuesQuery {
	return nil
}

func (_ *DB) Prepare(_ string) (Stmt, error) {
	return Stmt{}, nil
}

func (_ *DB) PrepareContext(_ context.Context, _ string) (Stmt, error) {
	return Stmt{}, nil
}

func (_ *DB) Query(_ string, _ ...interface{}) (*sql.Rows, error) {
	return nil, nil
}

func (_ *DB) QueryContext(_ context.Context, _ string, _ ...interface{}) (*sql.Rows, error) {
	return nil, nil
}

func (_ *DB) QueryRow(_ string, _ ...interface{}) *sql.Row {
	return nil
}

func (_ *DB) QueryRowContext(_ context.Context, _ string, _ ...interface{}) *sql.Row {
	return nil
}

func (_ *DB) Raw(_ string, _ ...interface{}) *RawQuery {
	return nil
}

func (_ *DB) RegisterModel(_ ...interface{}) {}

func (_ *DB) ResetModel(_ context.Context, _ ...interface{}) error {
	return nil
}

func (_ *DB) RunInTx(_ context.Context, _ *sql.TxOptions, _ func(context.Context, Tx) error) error {
	return nil
}

func (_ *DB) ScanRow(_ context.Context, _ *sql.Rows, _ ...interface{}) error {
	return nil
}

func (_ *DB) ScanRows(_ context.Context, _ *sql.Rows, _ ...interface{}) error {
	return nil
}

func (_ *DB) String() string {
	return ""
}

func (_ *DB) Table(_ reflect.Type) interface{} {
	return nil
}

func (_ *DB) UpdateFQN(_ string, _ string) interface{} {
	return nil
}

func (_ *DB) WithNamedArg(_ string, _ interface{}) *DB {
	return nil
}

type DBOption func(*DB)

type DBStats struct {
	Queries uint32
	Errors  uint32
}

type DeleteQuery struct{}

func (_ *DeleteQuery) AppendNamedArg(_ interface{}, _ []byte, _ string) ([]byte, bool) {
	return nil, false
}

func (_ *DeleteQuery) AppendQuery(_ interface{}, _ []byte) ([]byte, error) {
	return nil, nil
}

func (_ *DeleteQuery) Apply(_ func(*DeleteQuery) *DeleteQuery) *DeleteQuery {
	return nil
}

func (_ *DeleteQuery) ApplyQueryBuilder(_ func(QueryBuilder) QueryBuilder) *DeleteQuery {
	return nil
}

func (_ *DeleteQuery) Conn(_ IConn) *DeleteQuery {
	return nil
}

func (_ *DeleteQuery) DB() *DB {
	return nil
}

func (_ *DeleteQuery) Dialect() interface{} {
	return nil
}

func (_ *DeleteQuery) Err(_ error) *DeleteQuery {
	return nil
}

func (_ *DeleteQuery) Exec(_ context.Context, _ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *DeleteQuery) ForceDelete() *DeleteQuery {
	return nil
}

func (_ *DeleteQuery) GetConn() IConn {
	return nil
}

func (_ *DeleteQuery) GetModel() interface{} {
	return nil
}

func (_ *DeleteQuery) GetTableName() string {
	return ""
}

func (_ *DeleteQuery) Model(_ interface{}) *DeleteQuery {
	return nil
}

func (_ *DeleteQuery) ModelTableExpr(_ string, _ ...interface{}) *DeleteQuery {
	return nil
}

func (_ *DeleteQuery) NewAddColumn() *AddColumnQuery {
	return nil
}

func (_ *DeleteQuery) NewCreateIndex() *CreateIndexQuery {
	return nil
}

func (_ *DeleteQuery) NewCreateTable() *CreateTableQuery {
	return nil
}

func (_ *DeleteQuery) NewDelete() *DeleteQuery {
	return nil
}

func (_ *DeleteQuery) NewDropColumn() *DropColumnQuery {
	return nil
}

func (_ *DeleteQuery) NewDropIndex() *DropIndexQuery {
	return nil
}

func (_ *DeleteQuery) NewDropTable() *DropTableQuery {
	return nil
}

func (_ *DeleteQuery) NewInsert() *InsertQuery {
	return nil
}

func (_ *DeleteQuery) NewRaw(_ string, _ ...interface{}) *RawQuery {
	return nil
}

func (_ *DeleteQuery) NewSelect() *SelectQuery {
	return nil
}

func (_ *DeleteQuery) NewTruncateTable() *TruncateTableQuery {
	return nil
}

func (_ *DeleteQuery) NewUpdate() *UpdateQuery {
	return nil
}

func (_ *DeleteQuery) NewValues(_ interface{}) *ValuesQuery {
	return nil
}

func (_ *DeleteQuery) Operation() string {
	return ""
}

func (_ *DeleteQuery) QueryBuilder() QueryBuilder {
	return nil
}

func (_ *DeleteQuery) Returning(_ string, _ ...interface{}) *DeleteQuery {
	return nil
}

func (_ *DeleteQuery) Scan(_ context.Context, _ ...interface{}) error {
	return nil
}

func (_ *DeleteQuery) String() string {
	return ""
}

func (_ *DeleteQuery) Table(_ ...string) *DeleteQuery {
	return nil
}

func (_ *DeleteQuery) TableExpr(_ string, _ ...interface{}) *DeleteQuery {
	return nil
}

func (_ *DeleteQuery) Where(_ string, _ ...interface{}) *DeleteQuery {
	return nil
}

func (_ *DeleteQuery) WhereAllWithDeleted() *DeleteQuery {
	return nil
}

func (_ *DeleteQuery) WhereDeleted() *DeleteQuery {
	return nil
}

func (_ *DeleteQuery) WhereGroup(_ string, _ func(*DeleteQuery) *DeleteQuery) *DeleteQuery {
	return nil
}

func (_ *DeleteQuery) WhereOr(_ string, _ ...interface{}) *DeleteQuery {
	return nil
}

func (_ *DeleteQuery) WherePK(_ ...string) *DeleteQuery {
	return nil
}

func (_ *DeleteQuery) With(_ string, _ interface{}) *DeleteQuery {
	return nil
}

func (_ *DeleteQuery) WithRecursive(_ string, _ interface{}) *DeleteQuery {
	return nil
}

type DropColumnQuery struct{}

func (_ *DropColumnQuery) AppendNamedArg(_ interface{}, _ []byte, _ string) ([]byte, bool) {
	return nil, false
}

func (_ *DropColumnQuery) AppendQuery(_ interface{}, _ []byte) ([]byte, error) {
	return nil, nil
}

func (_ *DropColumnQuery) Apply(_ func(*DropColumnQuery) *DropColumnQuery) *DropColumnQuery {
	return nil
}

func (_ *DropColumnQuery) Column(_ ...string) *DropColumnQuery {
	return nil
}

func (_ *DropColumnQuery) ColumnExpr(_ string, _ ...interface{}) *DropColumnQuery {
	return nil
}

func (_ *DropColumnQuery) Conn(_ IConn) *DropColumnQuery {
	return nil
}

func (_ *DropColumnQuery) DB() *DB {
	return nil
}

func (_ *DropColumnQuery) Dialect() interface{} {
	return nil
}

func (_ *DropColumnQuery) Err(_ error) *DropColumnQuery {
	return nil
}

func (_ *DropColumnQuery) Exec(_ context.Context, _ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *DropColumnQuery) GetConn() IConn {
	return nil
}

func (_ *DropColumnQuery) GetModel() interface{} {
	return nil
}

func (_ *DropColumnQuery) GetTableName() string {
	return ""
}

func (_ *DropColumnQuery) Model(_ interface{}) *DropColumnQuery {
	return nil
}

func (_ *DropColumnQuery) ModelTableExpr(_ string, _ ...interface{}) *DropColumnQuery {
	return nil
}

func (_ *DropColumnQuery) NewAddColumn() *AddColumnQuery {
	return nil
}

func (_ *DropColumnQuery) NewCreateIndex() *CreateIndexQuery {
	return nil
}

func (_ *DropColumnQuery) NewCreateTable() *CreateTableQuery {
	return nil
}

func (_ *DropColumnQuery) NewDelete() *DeleteQuery {
	return nil
}

func (_ *DropColumnQuery) NewDropColumn() *DropColumnQuery {
	return nil
}

func (_ *DropColumnQuery) NewDropIndex() *DropIndexQuery {
	return nil
}

func (_ *DropColumnQuery) NewDropTable() *DropTableQuery {
	return nil
}

func (_ *DropColumnQuery) NewInsert() *InsertQuery {
	return nil
}

func (_ *DropColumnQuery) NewRaw(_ string, _ ...interface{}) *RawQuery {
	return nil
}

func (_ *DropColumnQuery) NewSelect() *SelectQuery {
	return nil
}

func (_ *DropColumnQuery) NewTruncateTable() *TruncateTableQuery {
	return nil
}

func (_ *DropColumnQuery) NewUpdate() *UpdateQuery {
	return nil
}

func (_ *DropColumnQuery) NewValues(_ interface{}) *ValuesQuery {
	return nil
}

func (_ *DropColumnQuery) Operation() string {
	return ""
}

func (_ *DropColumnQuery) Table(_ ...string) *DropColumnQuery {
	return nil
}

func (_ *DropColumnQuery) TableExpr(_ string, _ ...interface{}) *DropColumnQuery {
	return nil
}

type DropIndexQuery struct{}

func (_ *DropIndexQuery) AppendNamedArg(_ interface{}, _ []byte, _ string) ([]byte, bool) {
	return nil, false
}

func (_ *DropIndexQuery) AppendQuery(_ interface{}, _ []byte) ([]byte, error) {
	return nil, nil
}

func (_ *DropIndexQuery) Cascade() *DropIndexQuery {
	return nil
}

func (_ *DropIndexQuery) Concurrently() *DropIndexQuery {
	return nil
}

func (_ *DropIndexQuery) Conn(_ IConn) *DropIndexQuery {
	return nil
}

func (_ *DropIndexQuery) DB() *DB {
	return nil
}

func (_ *DropIndexQuery) Dialect() interface{} {
	return nil
}

func (_ *DropIndexQuery) Err(_ error) *DropIndexQuery {
	return nil
}

func (_ *DropIndexQuery) Exec(_ context.Context, _ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *DropIndexQuery) GetConn() IConn {
	return nil
}

func (_ *DropIndexQuery) GetModel() interface{} {
	return nil
}

func (_ *DropIndexQuery) GetTableName() string {
	return ""
}

func (_ *DropIndexQuery) IfExists() *DropIndexQuery {
	return nil
}

func (_ *DropIndexQuery) Index(_ string, _ ...interface{}) *DropIndexQuery {
	return nil
}

func (_ *DropIndexQuery) Model(_ interface{}) *DropIndexQuery {
	return nil
}

func (_ *DropIndexQuery) NewAddColumn() *AddColumnQuery {
	return nil
}

func (_ *DropIndexQuery) NewCreateIndex() *CreateIndexQuery {
	return nil
}

func (_ *DropIndexQuery) NewCreateTable() *CreateTableQuery {
	return nil
}

func (_ *DropIndexQuery) NewDelete() *DeleteQuery {
	return nil
}

func (_ *DropIndexQuery) NewDropColumn() *DropColumnQuery {
	return nil
}

func (_ *DropIndexQuery) NewDropIndex() *DropIndexQuery {
	return nil
}

func (_ *DropIndexQuery) NewDropTable() *DropTableQuery {
	return nil
}

func (_ *DropIndexQuery) NewInsert() *InsertQuery {
	return nil
}

func (_ *DropIndexQuery) NewRaw(_ string, _ ...interface{}) *RawQuery {
	return nil
}

func (_ *DropIndexQuery) NewSelect() *SelectQuery {
	return nil
}

func (_ *DropIndexQuery) NewTruncateTable() *TruncateTableQuery {
	return nil
}

func (_ *DropIndexQuery) NewUpdate() *UpdateQuery {
	return nil
}

func (_ *DropIndexQuery) NewValues(_ interface{}) *ValuesQuery {
	return nil
}

func (_ *DropIndexQuery) Operation() string {
	return ""
}

func (_ *DropIndexQuery) Restrict() *DropIndexQuery {
	return nil
}

type DropTableQuery struct{}

func (_ *DropTableQuery) AppendNamedArg(_ interface{}, _ []byte, _ string) ([]byte, bool) {
	return nil, false
}

func (_ *DropTableQuery) AppendQuery(_ interface{}, _ []byte) ([]byte, error) {
	return nil, nil
}

func (_ *DropTableQuery) Cascade() *DropTableQuery {
	return nil
}

func (_ *DropTableQuery) Conn(_ IConn) *DropTableQuery {
	return nil
}

func (_ *DropTableQuery) DB() *DB {
	return nil
}

func (_ *DropTableQuery) Dialect() interface{} {
	return nil
}

func (_ *DropTableQuery) Err(_ error) *DropTableQuery {
	return nil
}

func (_ *DropTableQuery) Exec(_ context.Context, _ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *DropTableQuery) GetConn() IConn {
	return nil
}

func (_ *DropTableQuery) GetModel() interface{} {
	return nil
}

func (_ *DropTableQuery) GetTableName() string {
	return ""
}

func (_ *DropTableQuery) IfExists() *DropTableQuery {
	return nil
}

func (_ *DropTableQuery) Model(_ interface{}) *DropTableQuery {
	return nil
}

func (_ *DropTableQuery) ModelTableExpr(_ string, _ ...interface{}) *DropTableQuery {
	return nil
}

func (_ *DropTableQuery) NewAddColumn() *AddColumnQuery {
	return nil
}

func (_ *DropTableQuery) NewCreateIndex() *CreateIndexQuery {
	return nil
}

func (_ *DropTableQuery) NewCreateTable() *CreateTableQuery {
	return nil
}

func (_ *DropTableQuery) NewDelete() *DeleteQuery {
	return nil
}

func (_ *DropTableQuery) NewDropColumn() *DropColumnQuery {
	return nil
}

func (_ *DropTableQuery) NewDropIndex() *DropIndexQuery {
	return nil
}

func (_ *DropTableQuery) NewDropTable() *DropTableQuery {
	return nil
}

func (_ *DropTableQuery) NewInsert() *InsertQuery {
	return nil
}

func (_ *DropTableQuery) NewRaw(_ string, _ ...interface{}) *RawQuery {
	return nil
}

func (_ *DropTableQuery) NewSelect() *SelectQuery {
	return nil
}

func (_ *DropTableQuery) NewTruncateTable() *TruncateTableQuery {
	return nil
}

func (_ *DropTableQuery) NewUpdate() *UpdateQuery {
	return nil
}

func (_ *DropTableQuery) NewValues(_ interface{}) *ValuesQuery {
	return nil
}

func (_ *DropTableQuery) Operation() string {
	return ""
}

func (_ *DropTableQuery) Restrict() *DropTableQuery {
	return nil
}

func (_ *DropTableQuery) Table(_ ...string) *DropTableQuery {
	return nil
}

func (_ *DropTableQuery) TableExpr(_ string, _ ...interface{}) *DropTableQuery {
	return nil
}

type IConn interface {
	ExecContext(_ context.Context, _ string, _ ...interface{}) (sql.Result, error)
	QueryContext(_ context.Context, _ string, _ ...interface{}) (*sql.Rows, error)
	QueryRowContext(_ context.Context, _ string, _ ...interface{}) *sql.Row
}

type InsertQuery struct{}

func (_ *InsertQuery) AppendNamedArg(_ interface{}, _ []byte, _ string) ([]byte, bool) {
	return nil, false
}

func (_ *InsertQuery) AppendQuery(_ interface{}, _ []byte) ([]byte, error) {
	return nil, nil
}

func (_ *InsertQuery) Apply(_ func(*InsertQuery) *InsertQuery) *InsertQuery {
	return nil
}

func (_ *InsertQuery) Column(_ ...string) *InsertQuery {
	return nil
}

func (_ *InsertQuery) ColumnExpr(_ string, _ ...interface{}) *InsertQuery {
	return nil
}

func (_ *InsertQuery) Conn(_ IConn) *InsertQuery {
	return nil
}

func (_ *InsertQuery) DB() *DB {
	return nil
}

func (_ *InsertQuery) Dialect() interface{} {
	return nil
}

func (_ *InsertQuery) Err(_ error) *InsertQuery {
	return nil
}

func (_ *InsertQuery) ExcludeColumn(_ ...string) *InsertQuery {
	return nil
}

func (_ *InsertQuery) Exec(_ context.Context, _ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *InsertQuery) GetConn() IConn {
	return nil
}

func (_ *InsertQuery) GetModel() interface{} {
	return nil
}

func (_ *InsertQuery) GetTableName() string {
	return ""
}

func (_ *InsertQuery) Ignore() *InsertQuery {
	return nil
}

func (_ *InsertQuery) Model(_ interface{}) *InsertQuery {
	return nil
}

func (_ *InsertQuery) ModelTableExpr(_ string, _ ...interface{}) *InsertQuery {
	return nil
}

func (_ *InsertQuery) NewAddColumn() *AddColumnQuery {
	return nil
}

func (_ *InsertQuery) NewCreateIndex() *CreateIndexQuery {
	return nil
}

func (_ *InsertQuery) NewCreateTable() *CreateTableQuery {
	return nil
}

func (_ *InsertQuery) NewDelete() *DeleteQuery {
	return nil
}

func (_ *InsertQuery) NewDropColumn() *DropColumnQuery {
	return nil
}

func (_ *InsertQuery) NewDropIndex() *DropIndexQuery {
	return nil
}

func (_ *InsertQuery) NewDropTable() *DropTableQuery {
	return nil
}

func (_ *InsertQuery) NewInsert() *InsertQuery {
	return nil
}

func (_ *InsertQuery) NewRaw(_ string, _ ...interface{}) *RawQuery {
	return nil
}

func (_ *InsertQuery) NewSelect() *SelectQuery {
	return nil
}

func (_ *InsertQuery) NewTruncateTable() *TruncateTableQuery {
	return nil
}

func (_ *InsertQuery) NewUpdate() *UpdateQuery {
	return nil
}

func (_ *InsertQuery) NewValues(_ interface{}) *ValuesQuery {
	return nil
}

func (_ *InsertQuery) On(_ string, _ ...interface{}) *InsertQuery {
	return nil
}

func (_ *InsertQuery) Operation() string {
	return ""
}

func (_ *InsertQuery) Replace() *InsertQuery {
	return nil
}

func (_ *InsertQuery) Returning(_ string, _ ...interface{}) *InsertQuery {
	return nil
}

func (_ *InsertQuery) Scan(_ context.Context, _ ...interface{}) error {
	return nil
}

func (_ *InsertQuery) Set(_ string, _ ...interface{}) *InsertQuery {
	return nil
}

func (_ *InsertQuery) String() string {
	return ""
}

func (_ *InsertQuery) Table(_ ...string) *InsertQuery {
	return nil
}

func (_ *InsertQuery) TableExpr(_ string, _ ...interface{}) *InsertQuery {
	return nil
}

func (_ *InsertQuery) Value(_ string, _ string, _ ...interface{}) *InsertQuery {
	return nil
}

func (_ *InsertQuery) Where(_ string, _ ...interface{}) *InsertQuery {
	return nil
}

func (_ *InsertQuery) WhereOr(_ string, _ ...interface{}) *InsertQuery {
	return nil
}

func (_ *InsertQuery) With(_ string, _ interface{}) *InsertQuery {
	return nil
}

func (_ *InsertQuery) WithRecursive(_ string, _ interface{}) *InsertQuery {
	return nil
}

type MergeQuery struct{}

func (_ *MergeQuery) AppendNamedArg(_ interface{}, _ []byte, _ string) ([]byte, bool) {
	return nil, false
}

func (_ *MergeQuery) AppendQuery(_ interface{}, _ []byte) ([]byte, error) {
	return nil, nil
}

func (_ *MergeQuery) Apply(_ func(*MergeQuery) *MergeQuery) *MergeQuery {
	return nil
}

func (_ *MergeQuery) Conn(_ IConn) *MergeQuery {
	return nil
}

func (_ *MergeQuery) DB() *DB {
	return nil
}

func (_ *MergeQuery) Dialect() interface{} {
	return nil
}

func (_ *MergeQuery) Err(_ error) *MergeQuery {
	return nil
}

func (_ *MergeQuery) Exec(_ context.Context, _ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *MergeQuery) GetConn() IConn {
	return nil
}

func (_ *MergeQuery) GetModel() interface{} {
	return nil
}

func (_ *MergeQuery) GetTableName() string {
	return ""
}

func (_ *MergeQuery) Model(_ interface{}) *MergeQuery {
	return nil
}

func (_ *MergeQuery) ModelTableExpr(_ string, _ ...interface{}) *MergeQuery {
	return nil
}

func (_ *MergeQuery) NewAddColumn() *AddColumnQuery {
	return nil
}

func (_ *MergeQuery) NewCreateIndex() *CreateIndexQuery {
	return nil
}

func (_ *MergeQuery) NewCreateTable() *CreateTableQuery {
	return nil
}

func (_ *MergeQuery) NewDelete() *DeleteQuery {
	return nil
}

func (_ *MergeQuery) NewDropColumn() *DropColumnQuery {
	return nil
}

func (_ *MergeQuery) NewDropIndex() *DropIndexQuery {
	return nil
}

func (_ *MergeQuery) NewDropTable() *DropTableQuery {
	return nil
}

func (_ *MergeQuery) NewInsert() *InsertQuery {
	return nil
}

func (_ *MergeQuery) NewRaw(_ string, _ ...interface{}) *RawQuery {
	return nil
}

func (_ *MergeQuery) NewSelect() *SelectQuery {
	return nil
}

func (_ *MergeQuery) NewTruncateTable() *TruncateTableQuery {
	return nil
}

func (_ *MergeQuery) NewUpdate() *UpdateQuery {
	return nil
}

func (_ *MergeQuery) NewValues(_ interface{}) *ValuesQuery {
	return nil
}

func (_ *MergeQuery) On(_ string, _ ...interface{}) *MergeQuery {
	return nil
}

func (_ *MergeQuery) Operation() string {
	return ""
}

func (_ *MergeQuery) Returning(_ string, _ ...interface{}) *MergeQuery {
	return nil
}

func (_ *MergeQuery) Scan(_ context.Context, _ ...interface{}) error {
	return nil
}

func (_ *MergeQuery) String() string {
	return ""
}

func (_ *MergeQuery) Table(_ ...string) *MergeQuery {
	return nil
}

func (_ *MergeQuery) TableExpr(_ string, _ ...interface{}) *MergeQuery {
	return nil
}

func (_ *MergeQuery) Using(_ string, _ ...interface{}) *MergeQuery {
	return nil
}

func (_ *MergeQuery) When(_ string, _ ...interface{}) *MergeQuery {
	return nil
}

func (_ *MergeQuery) WhenDelete(_ string) *MergeQuery {
	return nil
}

func (_ *MergeQuery) WhenInsert(_ string, _ func(*InsertQuery) *InsertQuery) *MergeQuery {
	return nil
}

func (_ *MergeQuery) WhenUpdate(_ string, _ func(*UpdateQuery) *UpdateQuery) *MergeQuery {
	return nil
}

func (_ *MergeQuery) With(_ string, _ interface{}) *MergeQuery {
	return nil
}

func (_ *MergeQuery) WithRecursive(_ string, _ interface{}) *MergeQuery {
	return nil
}

func NewDB(_ *sql.DB, _ interface{}, _ ...DBOption) *DB {
	return nil
}

func NewRawQuery(_ *DB, _ string, _ ...interface{}) *RawQuery {
	return nil
}

type QueryBuilder interface {
	AppendQuery(_ interface{}, _ []byte) ([]byte, error)
	GetModel() interface{}
	GetTableName() string
	Operation() string
	Unwrap() interface{}
	Where(_ string, _ ...interface{}) QueryBuilder
	WhereAllWithDeleted() QueryBuilder
	WhereDeleted() QueryBuilder
	WhereGroup(_ string, _ func(QueryBuilder) QueryBuilder) QueryBuilder
	WhereOr(_ string, _ ...interface{}) QueryBuilder
	WherePK(_ ...string) QueryBuilder
}

type QueryEvent struct {
	DB            *DB
	QueryAppender interface{}
	IQuery        interface{}
	Query         string
	QueryTemplate string
	QueryArgs     []interface{}
	Model         interface{}
	StartTime     time.Time
	Result        sql.Result
	Err           error
	Stash         map[interface{}]interface{}
}

func (_ *QueryEvent) Operation() string {
	return ""
}

type QueryHook interface {
	AfterQuery(_ context.Context, _ *QueryEvent)
	BeforeQuery(_ context.Context, _ *QueryEvent) context.Context
}

type RawQuery struct{}

func (_ *RawQuery) AppendNamedArg(_ interface{}, _ []byte, _ string) ([]byte, bool) {
	return nil, false
}

func (_ *RawQuery) AppendQuery(_ interface{}, _ []byte) ([]byte, error) {
	return nil, nil
}

func (_ *RawQuery) Conn(_ IConn) *RawQuery {
	return nil
}

func (_ *RawQuery) DB() *DB {
	return nil
}

func (_ *RawQuery) Dialect() interface{} {
	return nil
}

func (_ *RawQuery) Err(_ error) *RawQuery {
	return nil
}

func (_ *RawQuery) Exec(_ context.Context, _ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *RawQuery) GetConn() IConn {
	return nil
}

func (_ *RawQuery) GetModel() interface{} {
	return nil
}

func (_ *RawQuery) GetTableName() string {
	return ""
}

func (_ *RawQuery) NewAddColumn() *AddColumnQuery {
	return nil
}

func (_ *RawQuery) NewCreateIndex() *CreateIndexQuery {
	return nil
}

func (_ *RawQuery) NewCreateTable() *CreateTableQuery {
	return nil
}

func (_ *RawQuery) NewDelete() *DeleteQuery {
	return nil
}

func (_ *RawQuery) NewDropColumn() *DropColumnQuery {
	return nil
}

func (_ *RawQuery) NewDropIndex() *DropIndexQuery {
	return nil
}

func (_ *RawQuery) NewDropTable() *DropTableQuery {
	return nil
}

func (_ *RawQuery) NewInsert() *InsertQuery {
	return nil
}

func (_ *RawQuery) NewRaw(_ string, _ ...interface{}) *RawQuery {
	return nil
}

func (_ *RawQuery) NewSelect() *SelectQuery {
	return nil
}

func (_ *RawQuery) NewTruncateTable() *TruncateTableQuery {
	return nil
}

func (_ *RawQuery) NewUpdate() *UpdateQuery {
	return nil
}

func (_ *RawQuery) NewValues(_ interface{}) *ValuesQuery {
	return nil
}

func (_ *RawQuery) Operation() string {
	return ""
}

func (_ *RawQuery) Scan(_ context.Context, _ ...interface{}) error {
	return nil
}

type SelectQuery struct{}

func (_ *SelectQuery) AppendNamedArg(_ interface{}, _ []byte, _ string) ([]byte, bool) {
	return nil, false
}

func (_ *SelectQuery) AppendQuery(_ interface{}, _ []byte) ([]byte, error) {
	return nil, nil
}

func (_ *SelectQuery) Apply(_ func(*SelectQuery) *SelectQuery) *SelectQuery {
	return nil
}

func (_ *SelectQuery) ApplyQueryBuilder(_ func(QueryBuilder) QueryBuilder) *SelectQuery {
	return nil
}

func (_ *SelectQuery) Column(_ ...string) *SelectQuery {
	return nil
}

func (_ *SelectQuery) ColumnExpr(_ string, _ ...interface{}) *SelectQuery {
	return nil
}

func (_ *SelectQuery) Conn(_ IConn) *SelectQuery {
	return nil
}

func (_ *SelectQuery) Count(_ context.Context) (int, error) {
	return 0, nil
}

func (_ *SelectQuery) DB() *DB {
	return nil
}

func (_ *SelectQuery) Dialect() interface{} {
	return nil
}

func (_ *SelectQuery) Distinct() *SelectQuery {
	return nil
}

func (_ *SelectQuery) DistinctOn(_ string, _ ...interface{}) *SelectQuery {
	return nil
}

func (_ *SelectQuery) Err(_ error) *SelectQuery {
	return nil
}

func (_ *SelectQuery) Except(_ *SelectQuery) *SelectQuery {
	return nil
}

func (_ *SelectQuery) ExceptAll(_ *SelectQuery) *SelectQuery {
	return nil
}

func (_ *SelectQuery) ExcludeColumn(_ ...string) *SelectQuery {
	return nil
}

func (_ *SelectQuery) Exec(_ context.Context, _ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *SelectQuery) Exists(_ context.Context) (bool, error) {
	return false, nil
}

func (_ *SelectQuery) For(_ string, _ ...interface{}) *SelectQuery {
	return nil
}

func (_ *SelectQuery) ForceIndex(_ ...string) *SelectQuery {
	return nil
}

func (_ *SelectQuery) ForceIndexForGroupBy(_ ...string) *SelectQuery {
	return nil
}

func (_ *SelectQuery) ForceIndexForJoin(_ ...string) *SelectQuery {
	return nil
}

func (_ *SelectQuery) ForceIndexForOrderBy(_ ...string) *SelectQuery {
	return nil
}

func (_ *SelectQuery) GetConn() IConn {
	return nil
}

func (_ *SelectQuery) GetModel() interface{} {
	return nil
}

func (_ *SelectQuery) GetTableName() string {
	return ""
}

func (_ *SelectQuery) Group(_ ...string) *SelectQuery {
	return nil
}

func (_ *SelectQuery) GroupExpr(_ string, _ ...interface{}) *SelectQuery {
	return nil
}

func (_ *SelectQuery) Having(_ string, _ ...interface{}) *SelectQuery {
	return nil
}

func (_ *SelectQuery) IgnoreIndex(_ ...string) *SelectQuery {
	return nil
}

func (_ *SelectQuery) IgnoreIndexForGroupBy(_ ...string) *SelectQuery {
	return nil
}

func (_ *SelectQuery) IgnoreIndexForJoin(_ ...string) *SelectQuery {
	return nil
}

func (_ *SelectQuery) IgnoreIndexForOrderBy(_ ...string) *SelectQuery {
	return nil
}

func (_ *SelectQuery) Intersect(_ *SelectQuery) *SelectQuery {
	return nil
}

func (_ *SelectQuery) IntersectAll(_ *SelectQuery) *SelectQuery {
	return nil
}

func (_ *SelectQuery) Join(_ string, _ ...interface{}) *SelectQuery {
	return nil
}

func (_ *SelectQuery) JoinOn(_ string, _ ...interface{}) *SelectQuery {
	return nil
}

func (_ *SelectQuery) JoinOnOr(_ string, _ ...interface{}) *SelectQuery {
	return nil
}

func (_ *SelectQuery) Limit(_ int) *SelectQuery {
	return nil
}

func (_ *SelectQuery) Model(_ interface{}) *SelectQuery {
	return nil
}

func (_ *SelectQuery) ModelTableExpr(_ string, _ ...interface{}) *SelectQuery {
	return nil
}

func (_ *SelectQuery) NewAddColumn() *AddColumnQuery {
	return nil
}

func (_ *SelectQuery) NewCreateIndex() *CreateIndexQuery {
	return nil
}

func (_ *SelectQuery) NewCreateTable() *CreateTableQuery {
	return nil
}

func (_ *SelectQuery) NewDelete() *DeleteQuery {
	return nil
}

func (_ *SelectQuery) NewDropColumn() *DropColumnQuery {
	return nil
}

func (_ *SelectQuery) NewDropIndex() *DropIndexQuery {
	return nil
}

func (_ *SelectQuery) NewDropTable() *DropTableQuery {
	return nil
}

func (_ *SelectQuery) NewInsert() *InsertQuery {
	return nil
}

func (_ *SelectQuery) NewRaw(_ string, _ ...interface{}) *RawQuery {
	return nil
}

func (_ *SelectQuery) NewSelect() *SelectQuery {
	return nil
}

func (_ *SelectQuery) NewTruncateTable() *TruncateTableQuery {
	return nil
}

func (_ *SelectQuery) NewUpdate() *UpdateQuery {
	return nil
}

func (_ *SelectQuery) NewValues(_ interface{}) *ValuesQuery {
	return nil
}

func (_ *SelectQuery) Offset(_ int) *SelectQuery {
	return nil
}

func (_ *SelectQuery) Operation() string {
	return ""
}

func (_ *SelectQuery) Order(_ ...string) *SelectQuery {
	return nil
}

func (_ *SelectQuery) OrderExpr(_ string, _ ...interface{}) *SelectQuery {
	return nil
}

func (_ *SelectQuery) QueryBuilder() QueryBuilder {
	return nil
}

func (_ *SelectQuery) Relation(_ string, _ ...func(*SelectQuery) *SelectQuery) *SelectQuery {
	return nil
}

func (_ *SelectQuery) Rows(_ context.Context) (*sql.Rows, error) {
	return nil, nil
}

func (_ *SelectQuery) Scan(_ context.Context, _ ...interface{}) error {
	return nil
}

func (_ *SelectQuery) ScanAndCount(_ context.Context, _ ...interface{}) (int, error) {
	return 0, nil
}

func (_ *SelectQuery) String() string {
	return ""
}

func (_ *SelectQuery) Table(_ ...string) *SelectQuery {
	return nil
}

func (_ *SelectQuery) TableExpr(_ string, _ ...interface{}) *SelectQuery {
	return nil
}

func (_ *SelectQuery) Union(_ *SelectQuery) *SelectQuery {
	return nil
}

func (_ *SelectQuery) UnionAll(_ *SelectQuery) *SelectQuery {
	return nil
}

func (_ *SelectQuery) UseIndex(_ ...string) *SelectQuery {
	return nil
}

func (_ *SelectQuery) UseIndexForGroupBy(_ ...string) *SelectQuery {
	return nil
}

func (_ *SelectQuery) UseIndexForJoin(_ ...string) *SelectQuery {
	return nil
}

func (_ *SelectQuery) UseIndexForOrderBy(_ ...string) *SelectQuery {
	return nil
}

func (_ *SelectQuery) Where(_ string, _ ...interface{}) *SelectQuery {
	return nil
}

func (_ *SelectQuery) WhereAllWithDeleted() *SelectQuery {
	return nil
}

func (_ *SelectQuery) WhereDeleted() *SelectQuery {
	return nil
}

func (_ *SelectQuery) WhereGroup(_ string, _ func(*SelectQuery) *SelectQuery) *SelectQuery {
	return nil
}

func (_ *SelectQuery) WhereOr(_ string, _ ...interface{}) *SelectQuery {
	return nil
}

func (_ *SelectQuery) WherePK(_ ...string) *SelectQuery {
	return nil
}

func (_ *SelectQuery) With(_ string, _ interface{}) *SelectQuery {
	return nil
}

func (_ *SelectQuery) WithRecursive(_ string, _ interface{}) *SelectQuery {
	return nil
}

type Stmt struct {
	Stmt *sql.Stmt
}

func (_ Stmt) Close() error {
	return nil
}

func (_ Stmt) Exec(_ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ Stmt) ExecContext(_ context.Context, _ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ Stmt) Query(_ ...interface{}) (*sql.Rows, error) {
	return nil, nil
}

func (_ Stmt) QueryContext(_ context.Context, _ ...interface{}) (*sql.Rows, error) {
	return nil, nil
}

func (_ Stmt) QueryRow(_ ...interface{}) *sql.Row {
	return nil
}

func (_ Stmt) QueryRowContext(_ context.Context, _ ...interface{}) *sql.Row {
	return nil
}

type TruncateTableQuery struct{}

func (_ *TruncateTableQuery) AppendNamedArg(_ interface{}, _ []byte, _ string) ([]byte, bool) {
	return nil, false
}

func (_ *TruncateTableQuery) AppendQuery(_ interface{}, _ []byte) ([]byte, error) {
	return nil, nil
}

func (_ *TruncateTableQuery) Cascade() *TruncateTableQuery {
	return nil
}

func (_ *TruncateTableQuery) Conn(_ IConn) *TruncateTableQuery {
	return nil
}

func (_ *TruncateTableQuery) ContinueIdentity() *TruncateTableQuery {
	return nil
}

func (_ *TruncateTableQuery) DB() *DB {
	return nil
}

func (_ *TruncateTableQuery) Dialect() interface{} {
	return nil
}

func (_ *TruncateTableQuery) Err(_ error) *TruncateTableQuery {
	return nil
}

func (_ *TruncateTableQuery) Exec(_ context.Context, _ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *TruncateTableQuery) GetConn() IConn {
	return nil
}

func (_ *TruncateTableQuery) GetModel() interface{} {
	return nil
}

func (_ *TruncateTableQuery) GetTableName() string {
	return ""
}

func (_ *TruncateTableQuery) Model(_ interface{}) *TruncateTableQuery {
	return nil
}

func (_ *TruncateTableQuery) NewAddColumn() *AddColumnQuery {
	return nil
}

func (_ *TruncateTableQuery) NewCreateIndex() *CreateIndexQuery {
	return nil
}

func (_ *TruncateTableQuery) NewCreateTable() *CreateTableQuery {
	return nil
}

func (_ *TruncateTableQuery) NewDelete() *DeleteQuery {
	return nil
}

func (_ *TruncateTableQuery) NewDropColumn() *DropColumnQuery {
	return nil
}

func (_ *TruncateTableQuery) NewDropIndex() *DropIndexQuery {
	return nil
}

func (_ *TruncateTableQuery) NewDropTable() *DropTableQuery {
	return nil
}

func (_ *TruncateTableQuery) NewInsert() *InsertQuery {
	return nil
}

func (_ *TruncateTableQuery) NewRaw(_ string, _ ...interface{}) *RawQuery {
	return nil
}

func (_ *TruncateTableQuery) NewSelect() *SelectQuery {
	return nil
}

func (_ *TruncateTableQuery) NewTruncateTable() *TruncateTableQuery {
	return nil
}

func (_ *TruncateTableQuery) NewUpdate() *UpdateQuery {
	return nil
}

func (_ *TruncateTableQuery) NewValues(_ interface{}) *ValuesQuery {
	return nil
}

func (_ *TruncateTableQuery) Operation() string {
	return ""
}

func (_ *TruncateTableQuery) Restrict() *TruncateTableQuery {
	return nil
}

func (_ *TruncateTableQuery) Table(_ ...string) *TruncateTableQuery {
	return nil
}

func (_ *TruncateTableQuery) TableExpr(_ string, _ ...interface{}) *TruncateTableQuery {
	return nil
}

type Tx struct {
	Tx *sql.Tx
}

func (_ Tx) Begin() (Tx, error) {
	return Tx{}, nil
}

func (_ Tx) BeginTx(_ context.Context, _ *sql.TxOptions) (Tx, error) {
	return Tx{}, nil
}

func (_ Tx) Commit() error {
	return nil
}

func (_ Tx) Dialect() interface{} {
	return nil
}

func (_ Tx) Exec(_ string, _ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ Tx) ExecContext(_ context.Context, _ string, _ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ Tx) NewAddColumn() *AddColumnQuery {
	return nil
}

func (_ Tx) NewCreateIndex() *CreateIndexQuery {
	return nil
}

func (_ Tx) NewCreateTable() *CreateTableQuery {
	return nil
}

func (_ Tx) NewDelete() *DeleteQuery {
	return nil
}

func (_ Tx) NewDropColumn() *DropColumnQuery {
	return nil
}

func (_ Tx) NewDropIndex() *DropIndexQuery {
	return nil
}

func (_ Tx) NewDropTable() *DropTableQuery {
	return nil
}

func (_ Tx) NewInsert() *InsertQuery {
	return nil
}

func (_ Tx) NewMerge() *MergeQuery {
	return nil
}

func (_ Tx) NewRaw(_ string, _ ...interface{}) *RawQuery {
	return nil
}

func (_ Tx) NewSelect() *SelectQuery {
	return nil
}

func (_ Tx) NewTruncateTable() *TruncateTableQuery {
	return nil
}

func (_ Tx) NewUpdate() *UpdateQuery {
	return nil
}

func (_ Tx) NewValues(_ interface{}) *ValuesQuery {
	return nil
}

func (_ Tx) Prepare(_ string) (*sql.Stmt, error) {
	return nil, nil
}

func (_ Tx) PrepareContext(_ context.Context, _ string) (*sql.Stmt, error) {
	return nil, nil
}

func (_ Tx) Query(_ string, _ ...interface{}) (*sql.Rows, error) {
	return nil, nil
}

func (_ Tx) QueryContext(_ context.Context, _ string, _ ...interface{}) (*sql.Rows, error) {
	return nil, nil
}

func (_ Tx) QueryRow(_ string, _ ...interface{}) *sql.Row {
	return nil
}

func (_ Tx) QueryRowContext(_ context.Context, _ string, _ ...interface{}) *sql.Row {
	return nil
}

func (_ Tx) Rollback() error {
	return nil
}

func (_ Tx) RunInTx(_ context.Context, _ *sql.TxOptions, _ func(context.Context, Tx) error) error {
	return nil
}

func (_ Tx) Stmt(_ *sql.Stmt) *sql.Stmt {
	return nil
}

func (_ Tx) StmtContext(_ context.Context, _ *sql.Stmt) *sql.Stmt {
	return nil
}

type UpdateQuery struct{}

func (_ *UpdateQuery) AppendNamedArg(_ interface{}, _ []byte, _ string) ([]byte, bool) {
	return nil, false
}

func (_ *UpdateQuery) AppendQuery(_ interface{}, _ []byte) ([]byte, error) {
	return nil, nil
}

func (_ *UpdateQuery) Apply(_ func(*UpdateQuery) *UpdateQuery) *UpdateQuery {
	return nil
}

func (_ *UpdateQuery) ApplyQueryBuilder(_ func(QueryBuilder) QueryBuilder) *UpdateQuery {
	return nil
}

func (_ *UpdateQuery) Bulk() *UpdateQuery {
	return nil
}

func (_ *UpdateQuery) Column(_ ...string) *UpdateQuery {
	return nil
}

func (_ *UpdateQuery) Conn(_ IConn) *UpdateQuery {
	return nil
}

func (_ *UpdateQuery) DB() *DB {
	return nil
}

func (_ *UpdateQuery) Dialect() interface{} {
	return nil
}

func (_ *UpdateQuery) Err(_ error) *UpdateQuery {
	return nil
}

func (_ *UpdateQuery) ExcludeColumn(_ ...string) *UpdateQuery {
	return nil
}

func (_ *UpdateQuery) Exec(_ context.Context, _ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *UpdateQuery) FQN(_ string) interface{} {
	return nil
}

func (_ *UpdateQuery) ForceIndex(_ ...string) *UpdateQuery {
	return nil
}

func (_ *UpdateQuery) GetConn() IConn {
	return nil
}

func (_ *UpdateQuery) GetModel() interface{} {
	return nil
}

func (_ *UpdateQuery) GetTableName() string {
	return ""
}

func (_ *UpdateQuery) IgnoreIndex(_ ...string) *UpdateQuery {
	return nil
}

func (_ *UpdateQuery) Model(_ interface{}) *UpdateQuery {
	return nil
}

func (_ *UpdateQuery) ModelTableExpr(_ string, _ ...interface{}) *UpdateQuery {
	return nil
}

func (_ *UpdateQuery) NewAddColumn() *AddColumnQuery {
	return nil
}

func (_ *UpdateQuery) NewCreateIndex() *CreateIndexQuery {
	return nil
}

func (_ *UpdateQuery) NewCreateTable() *CreateTableQuery {
	return nil
}

func (_ *UpdateQuery) NewDelete() *DeleteQuery {
	return nil
}

func (_ *UpdateQuery) NewDropColumn() *DropColumnQuery {
	return nil
}

func (_ *UpdateQuery) NewDropIndex() *DropIndexQuery {
	return nil
}

func (_ *UpdateQuery) NewDropTable() *DropTableQuery {
	return nil
}

func (_ *UpdateQuery) NewInsert() *InsertQuery {
	return nil
}

func (_ *UpdateQuery) NewRaw(_ string, _ ...interface{}) *RawQuery {
	return nil
}

func (_ *UpdateQuery) NewSelect() *SelectQuery {
	return nil
}

func (_ *UpdateQuery) NewTruncateTable() *TruncateTableQuery {
	return nil
}

func (_ *UpdateQuery) NewUpdate() *UpdateQuery {
	return nil
}

func (_ *UpdateQuery) NewValues(_ interface{}) *ValuesQuery {
	return nil
}

func (_ *UpdateQuery) OmitZero() *UpdateQuery {
	return nil
}

func (_ *UpdateQuery) Operation() string {
	return ""
}

func (_ *UpdateQuery) QueryBuilder() QueryBuilder {
	return nil
}

func (_ *UpdateQuery) Returning(_ string, _ ...interface{}) *UpdateQuery {
	return nil
}

func (_ *UpdateQuery) Scan(_ context.Context, _ ...interface{}) error {
	return nil
}

func (_ *UpdateQuery) Set(_ string, _ ...interface{}) *UpdateQuery {
	return nil
}

func (_ *UpdateQuery) SetColumn(_ string, _ string, _ ...interface{}) *UpdateQuery {
	return nil
}

func (_ *UpdateQuery) String() string {
	return ""
}

func (_ *UpdateQuery) Table(_ ...string) *UpdateQuery {
	return nil
}

func (_ *UpdateQuery) TableExpr(_ string, _ ...interface{}) *UpdateQuery {
	return nil
}

func (_ *UpdateQuery) UseIndex(_ ...string) *UpdateQuery {
	return nil
}

func (_ *UpdateQuery) Value(_ string, _ string, _ ...interface{}) *UpdateQuery {
	return nil
}

func (_ *UpdateQuery) Where(_ string, _ ...interface{}) *UpdateQuery {
	return nil
}

func (_ *UpdateQuery) WhereAllWithDeleted() *UpdateQuery {
	return nil
}

func (_ *UpdateQuery) WhereDeleted() *UpdateQuery {
	return nil
}

func (_ *UpdateQuery) WhereGroup(_ string, _ func(*UpdateQuery) *UpdateQuery) *UpdateQuery {
	return nil
}

func (_ *UpdateQuery) WhereOr(_ string, _ ...interface{}) *UpdateQuery {
	return nil
}

func (_ *UpdateQuery) WherePK(_ ...string) *UpdateQuery {
	return nil
}

func (_ *UpdateQuery) With(_ string, _ interface{}) *UpdateQuery {
	return nil
}

func (_ *UpdateQuery) WithRecursive(_ string, _ interface{}) *UpdateQuery {
	return nil
}

type ValuesQuery struct{}

func (_ *ValuesQuery) AppendColumns(_ interface{}, _ []byte) ([]byte, error) {
	return nil, nil
}

func (_ *ValuesQuery) AppendNamedArg(_ interface{}, _ []byte, _ string) ([]byte, bool) {
	return nil, false
}

func (_ *ValuesQuery) AppendQuery(_ interface{}, _ []byte) ([]byte, error) {
	return nil, nil
}

func (_ *ValuesQuery) Column(_ ...string) *ValuesQuery {
	return nil
}

func (_ *ValuesQuery) Conn(_ IConn) *ValuesQuery {
	return nil
}

func (_ *ValuesQuery) DB() *DB {
	return nil
}

func (_ *ValuesQuery) Dialect() interface{} {
	return nil
}

func (_ *ValuesQuery) Err(_ error) *ValuesQuery {
	return nil
}

func (_ *ValuesQuery) GetConn() IConn {
	return nil
}

func (_ *ValuesQuery) GetModel() interface{} {
	return nil
}

func (_ *ValuesQuery) GetTableName() string {
	return ""
}

func (_ *ValuesQuery) NewAddColumn() *AddColumnQuery {
	return nil
}

func (_ *ValuesQuery) NewCreateIndex() *CreateIndexQuery {
	return nil
}

func (_ *ValuesQuery) NewCreateTable() *CreateTableQuery {
	return nil
}

func (_ *ValuesQuery) NewDelete() *DeleteQuery {
	return nil
}

func (_ *ValuesQuery) NewDropColumn() *DropColumnQuery {
	return nil
}

func (_ *ValuesQuery) NewDropIndex() *DropIndexQuery {
	return nil
}

func (_ *ValuesQuery) NewDropTable() *DropTableQuery {
	return nil
}

func (_ *ValuesQuery) NewInsert() *InsertQuery {
	return nil
}

func (_ *ValuesQuery) NewRaw(_ string, _ ...interface{}) *RawQuery {
	return nil
}

func (_ *ValuesQuery) NewSelect() *SelectQuery {
	return nil
}

func (_ *ValuesQuery) NewTruncateTable() *TruncateTableQuery {
	return nil
}

func (_ *ValuesQuery) NewUpdate() *UpdateQuery {
	return nil
}

func (_ *ValuesQuery) NewValues(_ interface{}) *ValuesQuery {
	return nil
}

func (_ *ValuesQuery) Operation() string {
	return ""
}

func (_ *ValuesQuery) Value(_ string, _ string, _ ...interface{}) *ValuesQuery {
	return nil
}

func (_ *ValuesQuery) WithOrder() *ValuesQuery {
	return nil
}
