// Code generated by depstubber. DO NOT EDIT.
// This is a simple stub for github.com/gogf/gf/database/gdb, strictly for use in testing.

// See the LICENSE file for information about the licensing of the original library.
// Source: github.com/gogf/gf/database/gdb (exports: DB,Core,TX; functions: )

// Package gdb is a stub of github.com/gogf/gf/database/gdb, generated by depstubber.
package gdb

import (
	context "context"
	sql "database/sql"
	time "time"
)

type ChunkHandler func(Result, error) bool

type ConfigNode struct {
	Host                 string
	Port                 string
	User                 string
	Pass                 string
	Name                 string
	Type                 string
	Link                 string
	Role                 string
	Debug                bool
	Prefix               string
	DryRun               bool
	Weight               int
	Charset              string
	Timezone             string
	MaxIdleConnCount     int
	MaxOpenConnCount     int
	MaxConnLifeTime      time.Duration
	QueryTimeout         time.Duration
	ExecTimeout          time.Duration
	TranTimeout          time.Duration
	PrepareTimeout       time.Duration
	CreatedAt            string
	UpdatedAt            string
	DeletedAt            string
	TimeMaintainDisabled bool
	CtxStrict            bool
}

func (_ *ConfigNode) String() string {
	return ""
}

type Core struct{}

func (_ *Core) Begin() (*TX, error) {
	return nil, nil
}

func (_ *Core) Close(_ context.Context) error {
	return nil
}

func (_ *Core) Ctx(_ context.Context) DB {
	return nil
}

func (_ *Core) Delete(_ string, _ interface{}, _ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *Core) DoCommit(_ context.Context, _ Link, _ string, _ []interface{}) (string, []interface{}, error) {
	return "", nil, nil
}

func (_ *Core) DoDelete(_ context.Context, _ Link, _ string, _ string, _ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *Core) DoExec(_ context.Context, _ Link, _ string, _ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *Core) DoGetAll(_ context.Context, _ Link, _ string, _ ...interface{}) (Result, error) {
	return nil, nil
}

func (_ *Core) DoInsert(_ context.Context, _ Link, _ string, _ []map[string]interface{}, _ DoInsertOption) (sql.Result, error) {
	return nil, nil
}

func (_ *Core) DoPrepare(_ context.Context, _ Link, _ string) (*Stmt, error) {
	return nil, nil
}

func (_ *Core) DoQuery(_ context.Context, _ Link, _ string, _ ...interface{}) (*sql.Rows, error) {
	return nil, nil
}

func (_ *Core) DoUpdate(_ context.Context, _ Link, _ string, _ interface{}, _ string, _ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *Core) Exec(_ string, _ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *Core) GetAll(_ string, _ ...interface{}) (Result, error) {
	return nil, nil
}

func (_ *Core) GetArray(_ string, _ ...interface{}) ([]interface{}, error) {
	return nil, nil
}

func (_ *Core) GetCache() interface{} {
	return nil
}

func (_ *Core) GetChars() (string, string) {
	return "", ""
}

func (_ *Core) GetConfig() *ConfigNode {
	return nil
}

func (_ *Core) GetCore() *Core {
	return nil
}

func (_ *Core) GetCount(_ string, _ ...interface{}) (int, error) {
	return 0, nil
}

func (_ *Core) GetCtx() context.Context {
	return nil
}

func (_ *Core) GetCtxTimeout(_ int, _ context.Context) (context.Context, context.CancelFunc) {
	return nil, nil
}

func (_ *Core) GetDebug() bool {
	return false
}

func (_ *Core) GetDryRun() bool {
	return false
}

func (_ *Core) GetGroup() string {
	return ""
}

func (_ *Core) GetLogger() interface{} {
	return nil
}

func (_ *Core) GetOne(_ string, _ ...interface{}) (Record, error) {
	return nil, nil
}

func (_ *Core) GetPrefix() string {
	return ""
}

func (_ *Core) GetScan(_ interface{}, _ string, _ ...interface{}) error {
	return nil
}

func (_ *Core) GetSchema() string {
	return ""
}

func (_ *Core) GetStruct(_ interface{}, _ string, _ ...interface{}) error {
	return nil
}

func (_ *Core) GetStructs(_ interface{}, _ string, _ ...interface{}) error {
	return nil
}

func (_ *Core) GetValue(_ string, _ ...interface{}) (interface{}, error) {
	return nil, nil
}

func (_ *Core) HasTable(_ string) (bool, error) {
	return false, nil
}

func (_ *Core) Insert(_ string, _ interface{}, _ ...int) (sql.Result, error) {
	return nil, nil
}

func (_ *Core) InsertAndGetId(_ string, _ interface{}, _ ...int) (int64, error) {
	return 0, nil
}

func (_ *Core) InsertIgnore(_ string, _ interface{}, _ ...int) (sql.Result, error) {
	return nil, nil
}

func (_ *Core) MarshalJSON() ([]byte, error) {
	return nil, nil
}

func (_ *Core) Master(_ ...string) (*sql.DB, error) {
	return nil, nil
}

func (_ *Core) MasterLink(_ ...string) (Link, error) {
	return nil, nil
}

func (_ *Core) Model(_ ...interface{}) *Model {
	return nil
}

func (_ *Core) PingMaster() error {
	return nil
}

func (_ *Core) PingSlave() error {
	return nil
}

func (_ *Core) Prepare(_ string, _ ...bool) (*Stmt, error) {
	return nil, nil
}

func (_ *Core) Query(_ string, _ ...interface{}) (*sql.Rows, error) {
	return nil, nil
}

func (_ *Core) QuotePrefixTableName(_ string) string {
	return ""
}

func (_ *Core) QuoteString(_ string) string {
	return ""
}

func (_ *Core) QuoteWord(_ string) string {
	return ""
}

func (_ *Core) Raw(_ string, _ ...interface{}) *Model {
	return nil
}

func (_ *Core) Replace(_ string, _ interface{}, _ ...int) (sql.Result, error) {
	return nil, nil
}

func (_ *Core) Save(_ string, _ interface{}, _ ...int) (sql.Result, error) {
	return nil, nil
}

func (_ *Core) Schema(_ string) *Schema {
	return nil
}

func (_ *Core) SetDebug(_ bool) {}

func (_ *Core) SetDryRun(_ bool) {}

func (_ *Core) SetLogger(_ interface{}) {}

func (_ *Core) SetMaxConnLifeTime(_ time.Duration) {}

func (_ *Core) SetMaxIdleConnCount(_ int) {}

func (_ *Core) SetMaxOpenConnCount(_ int) {}

func (_ *Core) SetSchema(_ string) {}

func (_ *Core) Slave(_ ...string) (*sql.DB, error) {
	return nil, nil
}

func (_ *Core) SlaveLink(_ ...string) (Link, error) {
	return nil, nil
}

func (_ *Core) Table(_ ...interface{}) *Model {
	return nil
}

func (_ *Core) TableFields(_ string, _ ...string) (map[string]*TableField, error) {
	return nil, nil
}

func (_ *Core) Tables(_ ...string) ([]string, error) {
	return nil, nil
}

func (_ *Core) Transaction(_ context.Context, _ func(context.Context, *TX) error) error {
	return nil
}

func (_ *Core) Union(_ ...*Model) *Model {
	return nil
}

func (_ *Core) UnionAll(_ ...*Model) *Model {
	return nil
}

func (_ *Core) Update(_ string, _ interface{}, _ interface{}, _ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *Core) With(_ ...interface{}) *Model {
	return nil
}

type DB interface {
	Begin() (*TX, error)
	Close(_ context.Context) error
	Ctx(_ context.Context) DB
	Delete(_ string, _ interface{}, _ ...interface{}) (sql.Result, error)
	DoCommit(_ context.Context, _ Link, _ string, _ []interface{}) (string, []interface{}, error)
	DoDelete(_ context.Context, _ Link, _ string, _ string, _ ...interface{}) (sql.Result, error)
	DoExec(_ context.Context, _ Link, _ string, _ ...interface{}) (sql.Result, error)
	DoGetAll(_ context.Context, _ Link, _ string, _ ...interface{}) (Result, error)
	DoInsert(_ context.Context, _ Link, _ string, _ []map[string]interface{}, _ DoInsertOption) (sql.Result, error)
	DoPrepare(_ context.Context, _ Link, _ string) (*Stmt, error)
	DoQuery(_ context.Context, _ Link, _ string, _ ...interface{}) (*sql.Rows, error)
	DoUpdate(_ context.Context, _ Link, _ string, _ interface{}, _ string, _ ...interface{}) (sql.Result, error)
	Exec(_ string, _ ...interface{}) (sql.Result, error)
	FilteredLink() string
	GetAll(_ string, _ ...interface{}) (Result, error)
	GetArray(_ string, _ ...interface{}) ([]interface{}, error)
	GetCache() interface{}
	GetChars() (string, string)
	GetConfig() *ConfigNode
	GetCore() *Core
	GetCount(_ string, _ ...interface{}) (int, error)
	GetCtx() context.Context
	GetDebug() bool
	GetDryRun() bool
	GetGroup() string
	GetLogger() interface{}
	GetOne(_ string, _ ...interface{}) (Record, error)
	GetPrefix() string
	GetScan(_ interface{}, _ string, _ ...interface{}) error
	GetSchema() string
	GetValue(_ string, _ ...interface{}) (interface{}, error)
	Insert(_ string, _ interface{}, _ ...int) (sql.Result, error)
	InsertAndGetId(_ string, _ interface{}, _ ...int) (int64, error)
	InsertIgnore(_ string, _ interface{}, _ ...int) (sql.Result, error)
	Master(_ ...string) (*sql.DB, error)
	Model(_ ...interface{}) *Model
	Open(_ *ConfigNode) (*sql.DB, error)
	PingMaster() error
	PingSlave() error
	Prepare(_ string, _ ...bool) (*Stmt, error)
	Query(_ string, _ ...interface{}) (*sql.Rows, error)
	Raw(_ string, _ ...interface{}) *Model
	Replace(_ string, _ interface{}, _ ...int) (sql.Result, error)
	Save(_ string, _ interface{}, _ ...int) (sql.Result, error)
	Schema(_ string) *Schema
	SetDebug(_ bool)
	SetDryRun(_ bool)
	SetLogger(_ interface{})
	SetMaxConnLifeTime(_ time.Duration)
	SetMaxIdleConnCount(_ int)
	SetMaxOpenConnCount(_ int)
	SetSchema(_ string)
	Slave(_ ...string) (*sql.DB, error)
	Table(_ ...interface{}) *Model
	TableFields(_ context.Context, _ string, _ ...string) (map[string]*TableField, error)
	Tables(_ context.Context, _ ...string) ([]string, error)
	Transaction(_ context.Context, _ func(context.Context, *TX) error) error
	Union(_ ...*Model) *Model
	UnionAll(_ ...*Model) *Model
	Update(_ string, _ interface{}, _ interface{}, _ ...interface{}) (sql.Result, error)
	With(_ ...interface{}) *Model
}

type DoInsertOption struct {
	OnDuplicateStr string
	OnDuplicateMap map[string]interface{}
	InsertOption   int
	BatchCount     int
}

type Link interface {
	Exec(_ string, _ ...interface{}) (sql.Result, error)
	ExecContext(_ context.Context, _ string, _ ...interface{}) (sql.Result, error)
	IsTransaction() bool
	Prepare(_ string) (*sql.Stmt, error)
	PrepareContext(_ context.Context, _ string) (*sql.Stmt, error)
	Query(_ string, _ ...interface{}) (*sql.Rows, error)
	QueryContext(_ context.Context, _ string, _ ...interface{}) (*sql.Rows, error)
}

type Model struct{}

func (_ *Model) All(_ ...interface{}) (Result, error) {
	return nil, nil
}

func (_ *Model) And(_ interface{}, _ ...interface{}) *Model {
	return nil
}

func (_ *Model) Args(_ ...interface{}) *Model {
	return nil
}

func (_ *Model) Array(_ ...interface{}) ([]interface{}, error) {
	return nil, nil
}

func (_ *Model) As(_ string) *Model {
	return nil
}

func (_ *Model) Avg(_ string) (float64, error) {
	return 0, nil
}

func (_ *Model) Batch(_ int) *Model {
	return nil
}

func (_ *Model) Cache(_ time.Duration, _ ...string) *Model {
	return nil
}

func (_ *Model) Chunk(_ int, _ ChunkHandler) {}

func (_ *Model) Clone() *Model {
	return nil
}

func (_ *Model) Count(_ ...interface{}) (int, error) {
	return 0, nil
}

func (_ *Model) CountColumn(_ string) (int, error) {
	return 0, nil
}

func (_ *Model) Ctx(_ context.Context) *Model {
	return nil
}

func (_ *Model) DB(_ DB) *Model {
	return nil
}

func (_ *Model) Data(_ ...interface{}) *Model {
	return nil
}

func (_ *Model) Decrement(_ string, _ interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *Model) Delete(_ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *Model) Distinct() *Model {
	return nil
}

func (_ *Model) FieldAvg(_ string, _ ...string) *Model {
	return nil
}

func (_ *Model) FieldCount(_ string, _ ...string) *Model {
	return nil
}

func (_ *Model) FieldMax(_ string, _ ...string) *Model {
	return nil
}

func (_ *Model) FieldMin(_ string, _ ...string) *Model {
	return nil
}

func (_ *Model) FieldSum(_ string, _ ...string) *Model {
	return nil
}

func (_ *Model) Fields(_ ...interface{}) *Model {
	return nil
}

func (_ *Model) FieldsEx(_ ...interface{}) *Model {
	return nil
}

func (_ *Model) FieldsExStr(_ string, _ ...string) string {
	return ""
}

func (_ *Model) FieldsStr(_ ...string) string {
	return ""
}

func (_ *Model) Filter() *Model {
	return nil
}

func (_ *Model) FindAll(_ ...interface{}) (Result, error) {
	return nil, nil
}

func (_ *Model) FindArray(_ ...interface{}) ([]interface{}, error) {
	return nil, nil
}

func (_ *Model) FindCount(_ ...interface{}) (int, error) {
	return 0, nil
}

func (_ *Model) FindOne(_ ...interface{}) (Record, error) {
	return nil, nil
}

func (_ *Model) FindScan(_ interface{}, _ ...interface{}) error {
	return nil
}

func (_ *Model) FindValue(_ ...interface{}) (interface{}, error) {
	return nil, nil
}

func (_ *Model) ForPage(_ int, _ int) *Model {
	return nil
}

func (_ *Model) GetCtx() context.Context {
	return nil
}

func (_ *Model) GetFieldsExStr(_ string, _ ...string) string {
	return ""
}

func (_ *Model) GetFieldsStr(_ ...string) string {
	return ""
}

func (_ *Model) Group(_ ...string) *Model {
	return nil
}

func (_ *Model) GroupBy(_ string) *Model {
	return nil
}

func (_ *Model) Handler(_ ...ModelHandler) *Model {
	return nil
}

func (_ *Model) HasField(_ string) (bool, error) {
	return false, nil
}

func (_ *Model) Having(_ interface{}, _ ...interface{}) *Model {
	return nil
}

func (_ *Model) Increment(_ string, _ interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *Model) InnerJoin(_ ...string) *Model {
	return nil
}

func (_ *Model) Insert(_ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *Model) InsertAndGetId(_ ...interface{}) (int64, error) {
	return 0, nil
}

func (_ *Model) InsertIgnore(_ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *Model) LeftJoin(_ ...string) *Model {
	return nil
}

func (_ *Model) Limit(_ ...int) *Model {
	return nil
}

func (_ *Model) LockShared() *Model {
	return nil
}

func (_ *Model) LockUpdate() *Model {
	return nil
}

func (_ *Model) Master() *Model {
	return nil
}

func (_ *Model) Max(_ string) (float64, error) {
	return 0, nil
}

func (_ *Model) Min(_ string) (float64, error) {
	return 0, nil
}

func (_ *Model) Offset(_ int) *Model {
	return nil
}

func (_ *Model) OmitEmpty() *Model {
	return nil
}

func (_ *Model) OmitEmptyData() *Model {
	return nil
}

func (_ *Model) OmitEmptyWhere() *Model {
	return nil
}

func (_ *Model) OmitNil() *Model {
	return nil
}

func (_ *Model) OmitNilData() *Model {
	return nil
}

func (_ *Model) OmitNilWhere() *Model {
	return nil
}

func (_ *Model) OnDuplicate(_ ...interface{}) *Model {
	return nil
}

func (_ *Model) OnDuplicateEx(_ ...interface{}) *Model {
	return nil
}

func (_ *Model) One(_ ...interface{}) (Record, error) {
	return nil, nil
}

func (_ *Model) Option(_ int) *Model {
	return nil
}

func (_ *Model) Or(_ interface{}, _ ...interface{}) *Model {
	return nil
}

func (_ *Model) Order(_ ...string) *Model {
	return nil
}

func (_ *Model) OrderAsc(_ string) *Model {
	return nil
}

func (_ *Model) OrderBy(_ string) *Model {
	return nil
}

func (_ *Model) OrderDesc(_ string) *Model {
	return nil
}

func (_ *Model) OrderRandom() *Model {
	return nil
}

func (_ *Model) Page(_ int, _ int) *Model {
	return nil
}

func (_ *Model) Raw(_ string, _ ...interface{}) *Model {
	return nil
}

func (_ *Model) Replace(_ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *Model) RightJoin(_ ...string) *Model {
	return nil
}

func (_ *Model) Safe(_ ...bool) *Model {
	return nil
}

func (_ *Model) Save(_ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *Model) Scan(_ interface{}, _ ...interface{}) error {
	return nil
}

func (_ *Model) ScanList(_ interface{}, _ string, _ ...string) error {
	return nil
}

func (_ *Model) Schema(_ string) *Model {
	return nil
}

func (_ *Model) Select(_ ...interface{}) (Result, error) {
	return nil, nil
}

func (_ *Model) Slave() *Model {
	return nil
}

func (_ *Model) Struct(_ interface{}, _ ...interface{}) error {
	return nil
}

func (_ *Model) Structs(_ interface{}, _ ...interface{}) error {
	return nil
}

func (_ *Model) Sum(_ string) (float64, error) {
	return 0, nil
}

func (_ *Model) TX(_ *TX) *Model {
	return nil
}

func (_ *Model) TableFields(_ string, _ ...string) (map[string]*TableField, error) {
	return nil, nil
}

func (_ *Model) Transaction(_ context.Context, _ func(context.Context, *TX) error) error {
	return nil
}

func (_ *Model) Union(_ ...*Model) *Model {
	return nil
}

func (_ *Model) UnionAll(_ ...*Model) *Model {
	return nil
}

func (_ *Model) Unscoped() *Model {
	return nil
}

func (_ *Model) Update(_ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *Model) Value(_ ...interface{}) (interface{}, error) {
	return nil, nil
}

func (_ *Model) Where(_ interface{}, _ ...interface{}) *Model {
	return nil
}

func (_ *Model) WhereBetween(_ string, _ interface{}, _ interface{}) *Model {
	return nil
}

func (_ *Model) WhereGT(_ string, _ interface{}) *Model {
	return nil
}

func (_ *Model) WhereGTE(_ string, _ interface{}) *Model {
	return nil
}

func (_ *Model) WhereIn(_ string, _ interface{}) *Model {
	return nil
}

func (_ *Model) WhereLT(_ string, _ interface{}) *Model {
	return nil
}

func (_ *Model) WhereLTE(_ string, _ interface{}) *Model {
	return nil
}

func (_ *Model) WhereLike(_ string, _ interface{}) *Model {
	return nil
}

func (_ *Model) WhereNot(_ string, _ interface{}) *Model {
	return nil
}

func (_ *Model) WhereNotBetween(_ string, _ interface{}, _ interface{}) *Model {
	return nil
}

func (_ *Model) WhereNotIn(_ string, _ interface{}) *Model {
	return nil
}

func (_ *Model) WhereNotLike(_ string, _ interface{}) *Model {
	return nil
}

func (_ *Model) WhereNotNull(_ ...string) *Model {
	return nil
}

func (_ *Model) WhereNull(_ ...string) *Model {
	return nil
}

func (_ *Model) WhereOr(_ interface{}, _ ...interface{}) *Model {
	return nil
}

func (_ *Model) WhereOrBetween(_ string, _ interface{}, _ interface{}) *Model {
	return nil
}

func (_ *Model) WhereOrGT(_ string, _ interface{}) *Model {
	return nil
}

func (_ *Model) WhereOrGTE(_ string, _ interface{}) *Model {
	return nil
}

func (_ *Model) WhereOrIn(_ string, _ interface{}) *Model {
	return nil
}

func (_ *Model) WhereOrLT(_ string, _ interface{}) *Model {
	return nil
}

func (_ *Model) WhereOrLTE(_ string, _ interface{}) *Model {
	return nil
}

func (_ *Model) WhereOrLike(_ string, _ interface{}) *Model {
	return nil
}

func (_ *Model) WhereOrNotBetween(_ string, _ interface{}, _ interface{}) *Model {
	return nil
}

func (_ *Model) WhereOrNotIn(_ string, _ interface{}) *Model {
	return nil
}

func (_ *Model) WhereOrNotLike(_ string, _ interface{}) *Model {
	return nil
}

func (_ *Model) WhereOrNotNull(_ ...string) *Model {
	return nil
}

func (_ *Model) WhereOrNull(_ ...string) *Model {
	return nil
}

func (_ *Model) WhereOrf(_ string, _ ...interface{}) *Model {
	return nil
}

func (_ *Model) WherePri(_ interface{}, _ ...interface{}) *Model {
	return nil
}

func (_ *Model) Wheref(_ string, _ ...interface{}) *Model {
	return nil
}

func (_ *Model) With(_ ...interface{}) *Model {
	return nil
}

func (_ *Model) WithAll() *Model {
	return nil
}

type ModelHandler func(*Model) *Model

type Record map[string]interface{}

func (_ Record) GMap() interface{} {
	return nil
}

func (_ Record) Interface() interface{} {
	return nil
}

func (_ Record) IsEmpty() bool {
	return false
}

func (_ Record) Json() string {
	return ""
}

func (_ Record) Map() map[string]interface{} {
	return nil
}

func (_ Record) Struct(_ interface{}) error {
	return nil
}

func (_ Record) Xml(_ ...string) string {
	return ""
}

type Result []Record

func (_ Result) Array(_ ...string) []interface{} {
	return nil
}

func (_ Result) Chunk(_ int) []Result {
	return nil
}

func (_ Result) Interface() interface{} {
	return nil
}

func (_ Result) IsEmpty() bool {
	return false
}

func (_ Result) Json() string {
	return ""
}

func (_ Result) Len() int {
	return 0
}

func (_ Result) List() []map[string]interface{} {
	return nil
}

func (_ Result) MapKeyInt(_ string) map[int]map[string]interface{} {
	return nil
}

func (_ Result) MapKeyStr(_ string) map[string]map[string]interface{} {
	return nil
}

func (_ Result) MapKeyUint(_ string) map[uint]map[string]interface{} {
	return nil
}

func (_ Result) MapKeyValue(_ string) map[string]interface{} {
	return nil
}

func (_ Result) RecordKeyInt(_ string) map[int]Record {
	return nil
}

func (_ Result) RecordKeyStr(_ string) map[string]Record {
	return nil
}

func (_ Result) RecordKeyUint(_ string) map[uint]Record {
	return nil
}

func (_ Result) ScanList(_ interface{}, _ string, _ ...string) error {
	return nil
}

func (_ Result) Size() int {
	return 0
}

func (_ Result) Structs(_ interface{}) error {
	return nil
}

func (_ Result) Xml(_ ...string) string {
	return ""
}

type Schema struct{}

func (_ *Schema) Model(_ string) *Model {
	return nil
}

func (_ *Schema) Table(_ string) *Model {
	return nil
}

type Stmt struct {
	Stmt *sql.Stmt
}

func (_ *Stmt) Close() error {
	return nil
}

func (_ *Stmt) Exec(_ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *Stmt) ExecContext(_ context.Context, _ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *Stmt) Query(_ ...interface{}) (*sql.Rows, error) {
	return nil, nil
}

func (_ *Stmt) QueryContext(_ context.Context, _ ...interface{}) (*sql.Rows, error) {
	return nil, nil
}

func (_ *Stmt) QueryRow(_ ...interface{}) *sql.Row {
	return nil
}

func (_ *Stmt) QueryRowContext(_ context.Context, _ ...interface{}) *sql.Row {
	return nil
}

type TX struct{}

func (_ *TX) Begin() error {
	return nil
}

func (_ *TX) Commit() error {
	return nil
}

func (_ *TX) Ctx(_ context.Context) *TX {
	return nil
}

func (_ *TX) Delete(_ string, _ interface{}, _ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *TX) Exec(_ string, _ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *TX) GetAll(_ string, _ ...interface{}) (Result, error) {
	return nil, nil
}

func (_ *TX) GetCount(_ string, _ ...interface{}) (int, error) {
	return 0, nil
}

func (_ *TX) GetOne(_ string, _ ...interface{}) (Record, error) {
	return nil, nil
}

func (_ *TX) GetScan(_ interface{}, _ string, _ ...interface{}) error {
	return nil
}

func (_ *TX) GetStruct(_ interface{}, _ string, _ ...interface{}) error {
	return nil
}

func (_ *TX) GetStructs(_ interface{}, _ string, _ ...interface{}) error {
	return nil
}

func (_ *TX) GetValue(_ string, _ ...interface{}) (interface{}, error) {
	return nil, nil
}

func (_ *TX) Insert(_ string, _ interface{}, _ ...int) (sql.Result, error) {
	return nil, nil
}

func (_ *TX) InsertAndGetId(_ string, _ interface{}, _ ...int) (int64, error) {
	return 0, nil
}

func (_ *TX) InsertIgnore(_ string, _ interface{}, _ ...int) (sql.Result, error) {
	return nil, nil
}

func (_ *TX) IsClosed() bool {
	return false
}

func (_ *TX) Model(_ ...interface{}) *Model {
	return nil
}

func (_ *TX) Prepare(_ string) (*Stmt, error) {
	return nil, nil
}

func (_ *TX) Query(_ string, _ ...interface{}) (*sql.Rows, error) {
	return nil, nil
}

func (_ *TX) Raw(_ string, _ ...interface{}) *Model {
	return nil
}

func (_ *TX) Replace(_ string, _ interface{}, _ ...int) (sql.Result, error) {
	return nil, nil
}

func (_ *TX) Rollback() error {
	return nil
}

func (_ *TX) RollbackTo(_ string) error {
	return nil
}

func (_ *TX) Save(_ string, _ interface{}, _ ...int) (sql.Result, error) {
	return nil, nil
}

func (_ *TX) SavePoint(_ string) error {
	return nil
}

func (_ *TX) Schema(_ string) *Schema {
	return nil
}

func (_ *TX) Transaction(_ context.Context, _ func(context.Context, *TX) error) error {
	return nil
}

func (_ *TX) Update(_ string, _ interface{}, _ interface{}, _ ...interface{}) (sql.Result, error) {
	return nil, nil
}

func (_ *TX) With(_ interface{}) *Model {
	return nil
}

type TableField struct {
	Index   int
	Name    string
	Type    string
	Null    bool
	Key     string
	Default interface{}
	Extra   string
	Comment string
}
