// Code generated by depstubber. DO NOT EDIT.
// This is a simple stub for github.com/uptrace/bun/dialect/sqlitedialect, strictly for use in testing.

// See the LICENSE file for information about the licensing of the original library.
// Source: github.com/uptrace/bun/dialect/sqlitedialect (exports: Dialect; functions: New)

// Package sqlitedialect is a stub of github.com/uptrace/bun/dialect/sqlitedialect, generated by depstubber.
package sqlitedialect

import (
	sql "database/sql"
	time "time"
)

type Dialect struct {
	BaseDialect interface{}
}

func (_ Dialect) AppendBool(_ []byte, _ bool) []byte {
	return nil
}

func (_ Dialect) AppendJSON(_ []byte, _ []byte) []byte {
	return nil
}

func (_ Dialect) AppendString(_ []byte, _ string) []byte {
	return nil
}

func (_ Dialect) AppendTime(_ []byte, _ time.Time) []byte {
	return nil
}

func (_ Dialect) AppendUint32(_ []byte, _ uint32) []byte {
	return nil
}

func (_ Dialect) AppendUint64(_ []byte, _ uint64) []byte {
	return nil
}

func (_ *Dialect) AppendBytes(_ []byte, _ []byte) []byte {
	return nil
}

func (_ *Dialect) DefaultVarcharLen() int {
	return 0
}

func (_ *Dialect) Features() interface{} {
	return nil
}

func (_ *Dialect) IdentQuote() byte {
	return 0
}

func (_ *Dialect) Init(_ *sql.DB) {}

func (_ *Dialect) Name() interface{} {
	return nil
}

func (_ *Dialect) OnTable(_ interface{}) {}

func (_ *Dialect) Tables() interface{} {
	return nil
}

func New() *Dialect {
	return nil
}
