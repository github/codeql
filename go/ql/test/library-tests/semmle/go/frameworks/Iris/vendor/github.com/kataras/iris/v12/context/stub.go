// Code generated by depstubber. DO NOT EDIT.
// This is a simple stub for github.com/kataras/iris/v12/context, strictly for use in testing.

// See the LICENSE file for information about the licensing of the original library.
// Source: github.com/kataras/iris/v12/context (exports: Context; functions: )

// Package context is a stub of github.com/kataras/iris/v12/context, generated by depstubber.
package context

import (
	context "context"
	xml "encoding/xml"
	io "io"
	multipart "mime/multipart"
	http "net/http"
	reflect "reflect"
	time "time"
)

type Application interface {
	ConfigurationReadOnly() ConfigurationReadOnly
	FindClosestPaths(_ string, _ string, _ int) []string
	FireErrorCode(_ *Context)
	GetContextErrorHandler() ErrorHandler
	GetContextPool() *Pool
	GetRouteReadOnly(_ string) RouteReadOnly
	GetRoutesReadOnly() []RouteReadOnly
	I18nReadOnly() I18nReadOnly
	IsDebug() bool
	Logger() interface{}
	Minifier() interface{}
	RouteExists(_ *Context, _ string, _ string) bool
	ServeHTTP(_ http.ResponseWriter, _ *http.Request)
	ServeHTTPC(_ *Context)
	Shutdown(_ context.Context) error
	String() string
	Validate(_ interface{}) error
	View(_ io.Writer, _ string, _ string, _ interface{}) error
}

type ConfigurationReadOnly interface {
	GetCharset() string
	GetDisableAutoFireStatusCode() bool
	GetDisableBodyConsumptionOnUnmarshal() bool
	GetDisablePathCorrection() bool
	GetDisablePathCorrectionRedirection() bool
	GetEnableDynamicHandler() bool
	GetEnableEasyJSON() bool
	GetEnableOptimizations() bool
	GetEnablePathEscape() bool
	GetEnablePathIntelligence() bool
	GetEnableProtoJSON() bool
	GetFallbackViewContextKey() string
	GetFireEmptyFormError() bool
	GetFireMethodNotAllowed() bool
	GetForceLowercaseRouting() bool
	GetHostProxyHeaders() map[string]bool
	GetKeepAlive() time.Duration
	GetLanguageContextKey() string
	GetLanguageInputContextKey() string
	GetLocaleContextKey() string
	GetLogLevel() string
	GetOther() map[string]interface{}
	GetPostMaxMemory() int64
	GetRemoteAddrHeaders() []string
	GetRemoteAddrHeadersForce() bool
	GetRemoteAddrPrivateSubnets() []interface{}
	GetResetOnFireErrorCode() bool
	GetSSLProxyHeaders() map[string]string
	GetSocketSharding() bool
	GetTimeFormat() string
	GetTimeout() time.Duration
	GetTimeoutMessage() string
	GetURLParamSeparator() *string
	GetVHost() string
	GetVersionAliasesContextKey() string
	GetVersionContextKey() string
	GetViewDataContextKey() string
	GetViewEngineContextKey() string
	GetViewLayoutContextKey() string
}

type Context struct{}

func (_ *Context) AbsoluteURI(_ string) string {
	return ""
}

func (_ *Context) AddCookieOptions(_ ...CookieOption) {}

func (_ *Context) AddHandler(_ ...Handler) {}

func (_ *Context) Application() Application {
	return nil
}

func (_ *Context) BeginRequest(_ http.ResponseWriter, _ *http.Request) {}

func (_ *Context) Binary(_ []byte) (int, error) {
	return 0, nil
}

func (_ *Context) CallFunc(_ string, _ ...interface{}) ([]reflect.Value, error) {
	return nil, nil
}

func (_ *Context) CheckIfModifiedSince(_ time.Time) (bool, error) {
	return false, nil
}

func (_ *Context) ClearCookieOptions() {}

func (_ *Context) ClientSupportsEncoding(_ ...string) bool {
	return false
}

func (_ *Context) Clone() *Context {
	return nil
}

func (_ *Context) CompressReader(_ bool) error {
	return nil
}

func (_ *Context) CompressWriter(_ bool) error {
	return nil
}

func (_ *Context) ContentType(_ string) {}

func (_ *Context) Controller() reflect.Value {
	return reflect.Value{}
}

func (_ *Context) Deadline() (time.Time, bool) {
	return time.Time{}, false
}

func (_ *Context) DisablePoolRelease() {}

func (_ *Context) Do(_ Handlers) {}

func (_ *Context) Domain() string {
	return ""
}

func (_ *Context) Done() <-chan struct{} {
	return nil
}

func (_ *Context) EndRequest() {}

func (_ *Context) Err() error {
	return nil
}

func (_ *Context) Exec(_ string, _ string) {}

func (_ *Context) FallbackView(_ ...FallbackViewProvider) {}

func (_ *Context) FindClosest(_ int) []string {
	return nil
}

func (_ *Context) FormFile(_ string) (multipart.File, *multipart.FileHeader, error) {
	return nil, nil, nil
}

func (_ *Context) FormFiles(_ string, _ ...func(*Context, *multipart.FileHeader) bool) ([]multipart.File, []*multipart.FileHeader, error) {
	return nil, nil, nil
}

func (_ *Context) FormValue(_ string) string {
	return ""
}

func (_ *Context) FormValueDefault(_ string, _ string) string {
	return ""
}

func (_ *Context) FormValues() map[string][]string {
	return nil
}

func (_ *Context) FullRequestURI() string {
	return ""
}

func (_ *Context) GetBody() ([]byte, error) {
	return nil, nil
}

func (_ *Context) GetContentLength() int64 {
	return 0
}

func (_ *Context) GetContentType() string {
	return ""
}

func (_ *Context) GetContentTypeRequested() string {
	return ""
}

func (_ *Context) GetCookie(_ string, _ ...CookieOption) string {
	return ""
}

func (_ *Context) GetCurrentRoute() RouteReadOnly {
	return nil
}

func (_ *Context) GetErr() error {
	return nil
}

func (_ *Context) GetErrPublic() (bool, error) {
	return false, nil
}

func (_ *Context) GetFunc(_ string) (*Func, bool) {
	return nil, false
}

func (_ *Context) GetHeader(_ string) string {
	return ""
}

func (_ *Context) GetID() interface{} {
	return nil
}

func (_ *Context) GetLocale() Locale {
	return nil
}

func (_ *Context) GetReferrer() Referrer {
	return Referrer{}
}

func (_ *Context) GetRequestCookie(_ string, _ ...CookieOption) (*http.Cookie, error) {
	return nil, nil
}

func (_ *Context) GetStatusCode() int {
	return 0
}

func (_ *Context) GetViewData() map[string]interface{} {
	return nil
}

func (_ *Context) HTML(_ string, _ ...interface{}) (int, error) {
	return 0, nil
}

func (_ *Context) HandlerFileLine() (string, int) {
	return "", 0
}

func (_ *Context) HandlerIndex(_ int) int {
	return 0
}

func (_ *Context) HandlerName() string {
	return ""
}

func (_ *Context) Handlers() Handlers {
	return nil
}

func (_ *Context) Header(_ string, _ string) {}

func (_ *Context) Host() string {
	return ""
}

func (_ *Context) IsAjax() bool {
	return false
}

func (_ *Context) IsCanceled() bool {
	return false
}

func (_ *Context) IsDebug() bool {
	return false
}

func (_ *Context) IsGRPC() bool {
	return false
}

func (_ *Context) IsHTTP2() bool {
	return false
}

func (_ *Context) IsMobile() bool {
	return false
}

func (_ *Context) IsRecording() (*ResponseRecorder, bool) {
	return nil, false
}

func (_ *Context) IsRecordingBody() bool {
	return false
}

func (_ *Context) IsRecovered() (*ErrPanicRecovery, bool) {
	return nil, false
}

func (_ *Context) IsSSL() bool {
	return false
}

func (_ *Context) IsScript() bool {
	return false
}

func (_ *Context) IsStopped() bool {
	return false
}

func (_ *Context) IsWWW() bool {
	return false
}

func (_ *Context) JSON(_ interface{}, _ ...JSON) error {
	return nil
}

func (_ *Context) JSONP(_ interface{}, _ ...JSONP) error {
	return nil
}

func (_ *Context) Logout(_ ...interface{}) error {
	return nil
}

func (_ *Context) Markdown(_ []byte, _ ...Markdown) error {
	return nil
}

func (_ *Context) MaxAge() int64 {
	return 0
}

func (_ *Context) Method() string {
	return ""
}

func (_ *Context) MsgPack(_ interface{}) (int, error) {
	return 0, nil
}

func (_ *Context) Negotiate(_ interface{}) (int, error) {
	return 0, nil
}

func (_ *Context) Negotiation() *NegotiationBuilder {
	return nil
}

func (_ *Context) Next() {}

func (_ *Context) NextHandler() Handler {
	return nil
}

func (_ *Context) NextOr(_ ...Handler) bool {
	return false
}

func (_ *Context) NextOrNotFound() bool {
	return false
}

func (_ *Context) NotFound() {}

func (_ *Context) OnClose(_ Handler) {}

func (_ *Context) OnCloseErr(_ func() error) {}

func (_ *Context) OnConnectionClose(_ Handler) bool {
	return false
}

func (_ *Context) OnConnectionCloseErr(_ func() error) bool {
	return false
}

func (_ *Context) Params() *RequestParams {
	return nil
}

func (_ *Context) Path() string {
	return ""
}

func (_ *Context) PostValue(_ string) string {
	return ""
}

func (_ *Context) PostValueBool(_ string) (bool, error) {
	return false, nil
}

func (_ *Context) PostValueComplex128(_ string) (complex128, error) {
	return 0, nil
}

func (_ *Context) PostValueComplex128Default(_ string, _ complex128) complex128 {
	return 0
}

func (_ *Context) PostValueComplex64(_ string) (complex64, error) {
	return 0, nil
}

func (_ *Context) PostValueComplex64Default(_ string, _ complex64) complex64 {
	return 0
}

func (_ *Context) PostValueDefault(_ string, _ string) string {
	return ""
}

func (_ *Context) PostValueFloat32(_ string) (float32, error) {
	return 0, nil
}

func (_ *Context) PostValueFloat32Default(_ string, _ float32) float32 {
	return 0
}

func (_ *Context) PostValueFloat64(_ string) (float64, error) {
	return 0, nil
}

func (_ *Context) PostValueFloat64Default(_ string, _ float64) float64 {
	return 0
}

func (_ *Context) PostValueInt(_ string) (int, error) {
	return 0, nil
}

func (_ *Context) PostValueInt16(_ string) (int16, error) {
	return 0, nil
}

func (_ *Context) PostValueInt16Default(_ string, _ int16) int16 {
	return 0
}

func (_ *Context) PostValueInt32(_ string) (int32, error) {
	return 0, nil
}

func (_ *Context) PostValueInt32Default(_ string, _ int32) int32 {
	return 0
}

func (_ *Context) PostValueInt64(_ string) (int64, error) {
	return 0, nil
}

func (_ *Context) PostValueInt64Default(_ string, _ int64) int64 {
	return 0
}

func (_ *Context) PostValueInt8(_ string) (int8, error) {
	return 0, nil
}

func (_ *Context) PostValueInt8Default(_ string, _ int8) int8 {
	return 0
}

func (_ *Context) PostValueIntDefault(_ string, _ int) int {
	return 0
}

func (_ *Context) PostValueMany(_ string) (string, error) {
	return "", nil
}

func (_ *Context) PostValueSimpleDate(_ string) (time.Time, error) {
	return time.Time{}, nil
}

func (_ *Context) PostValueString(_ string) (string, error) {
	return "", nil
}

func (_ *Context) PostValueTime(_ string, _ string) (time.Time, error) {
	return time.Time{}, nil
}

func (_ *Context) PostValueTrim(_ string) string {
	return ""
}

func (_ *Context) PostValueUint(_ string) (uint, error) {
	return 0, nil
}

func (_ *Context) PostValueUint16(_ string) (uint16, error) {
	return 0, nil
}

func (_ *Context) PostValueUint32(_ string) (uint32, error) {
	return 0, nil
}

func (_ *Context) PostValueUint64(_ string) (uint64, error) {
	return 0, nil
}

func (_ *Context) PostValueUint8(_ string) (byte, error) {
	return 0, nil
}

func (_ *Context) PostValueWeekday(_ string) (time.Weekday, error) {
	return 0, nil
}

func (_ *Context) PostValues(_ string) ([]string, error) {
	return nil, nil
}

func (_ *Context) Problem(_ interface{}, _ ...ProblemOptions) error {
	return nil
}

func (_ *Context) Proceed(_ Handler) bool {
	return false
}

func (_ *Context) ProceedAndReportIfStopped(_ Handler) (bool, bool) {
	return false, false
}

func (_ *Context) Protobuf(_ interface{}) (int, error) {
	return 0, nil
}

func (_ *Context) ReadBody(_ interface{}) error {
	return nil
}

func (_ *Context) ReadForm(_ interface{}) error {
	return nil
}

func (_ *Context) ReadHeaders(_ interface{}) error {
	return nil
}

func (_ *Context) ReadJSON(_ interface{}, _ ...JSONReader) error {
	return nil
}

func (_ *Context) ReadJSONProtobuf(_ interface{}, _ ...interface{}) error {
	return nil
}

func (_ *Context) ReadJSONStream(_ func(DecodeFunc) error, _ ...JSONReader) error {
	return nil
}

func (_ *Context) ReadMsgPack(_ interface{}) error {
	return nil
}

func (_ *Context) ReadMultipartRelated() (MultipartRelated, error) {
	return MultipartRelated{}, nil
}

func (_ *Context) ReadParams(_ interface{}) error {
	return nil
}

func (_ *Context) ReadProtobuf(_ interface{}) error {
	return nil
}

func (_ *Context) ReadQuery(_ interface{}) error {
	return nil
}

func (_ *Context) ReadURL(_ interface{}) error {
	return nil
}

func (_ *Context) ReadXML(_ interface{}) error {
	return nil
}

func (_ *Context) ReadYAML(_ interface{}) error {
	return nil
}

func (_ *Context) Record() {}

func (_ *Context) RecordRequestBody(_ bool) {}

func (_ *Context) Recorder() *ResponseRecorder {
	return nil
}

func (_ *Context) Redirect(_ string, _ ...int) {}

func (_ *Context) ReflectValue() []reflect.Value {
	return nil
}

func (_ *Context) RegisterDependency(_ interface{}) {}

func (_ *Context) RemoteAddr() string {
	return ""
}

func (_ *Context) RemoveCookie(_ string, _ ...CookieOption) {}

func (_ *Context) Render(_ int, _ interface {
	Render(_ http.ResponseWriter) error
	WriteContentType(_ http.ResponseWriter)
}) {
}

func (_ *Context) Request() *http.Request {
	return nil
}

func (_ *Context) RequestPath(_ bool) string {
	return ""
}

func (_ *Context) ResetQuery() {}

func (_ *Context) ResetRequest(_ *http.Request) {}

func (_ *Context) ResetResponseWriter(_ ResponseWriter) {}

func (_ *Context) ResponseWriter() ResponseWriter {
	return nil
}

func (_ *Context) ResumeExecution() bool {
	return false
}

func (_ *Context) RouteExists(_ string, _ string) bool {
	return false
}

func (_ *Context) RouteName() string {
	return ""
}

func (_ *Context) SaveFormFile(_ *multipart.FileHeader, _ string) (int64, error) {
	return 0, nil
}

func (_ *Context) Scheme() string {
	return ""
}

func (_ *Context) SendFile(_ string, _ string) error {
	return nil
}

func (_ *Context) SendFileWithRate(_ string, _ string, _ float64, _ int) error {
	return nil
}

func (_ *Context) ServeContent(_ io.ReadSeeker, _ string, _ time.Time) {}

func (_ *Context) ServeContentWithRate(_ io.ReadSeeker, _ string, _ time.Time, _ float64, _ int) {}

func (_ *Context) ServeFile(_ string) error {
	return nil
}

func (_ *Context) ServeFileWithRate(_ string, _ float64, _ int) error {
	return nil
}

func (_ *Context) SetCookie(_ *http.Cookie, _ ...CookieOption) {}

func (_ *Context) SetCookieKV(_ string, _ string, _ ...CookieOption) {}

func (_ *Context) SetCurrentRoute(_ RouteReadOnly) {}

func (_ *Context) SetErr(_ error) {}

func (_ *Context) SetErrPrivate(_ error) {}

func (_ *Context) SetFunc(_ string, _ interface{}, _ ...interface{}) {}

func (_ *Context) SetHandlers(_ Handlers) {}

func (_ *Context) SetID(_ interface{}) {}

func (_ *Context) SetLanguage(_ string) {}

func (_ *Context) SetLastModified(_ time.Time) {}

func (_ *Context) SetLogoutFunc(_ interface{}, _ ...interface{}) {}

func (_ *Context) SetMaxRequestBodySize(_ int64) {}

func (_ *Context) SetUser(_ interface{}) error {
	return nil
}

func (_ *Context) Skip() {}

func (_ *Context) StatusCode(_ int) {}

func (_ *Context) StopExecution() {}

func (_ *Context) StopWithError(_ int, _ error) {}

func (_ *Context) StopWithJSON(_ int, _ interface{}) error {
	return nil
}

func (_ *Context) StopWithPlainError(_ int, _ error) {}

func (_ *Context) StopWithProblem(_ int, _ Problem) error {
	return nil
}

func (_ *Context) StopWithStatus(_ int) {}

func (_ *Context) StopWithText(_ int, _ string, _ ...interface{}) {}

func (_ *Context) StreamWriter(_ func(io.Writer) error) error {
	return nil
}

func (_ *Context) String() string {
	return ""
}

func (_ *Context) Subdomain() string {
	return ""
}

func (_ *Context) SubdomainFull() string {
	return ""
}

func (_ *Context) Text(_ string, _ ...interface{}) (int, error) {
	return 0, nil
}

func (_ *Context) TextYAML(_ interface{}) error {
	return nil
}

func (_ *Context) Tr(_ string, _ ...interface{}) string {
	return ""
}

func (_ *Context) URLParam(_ string) string {
	return ""
}

func (_ *Context) URLParamBool(_ string) (bool, error) {
	return false, nil
}

func (_ *Context) URLParamBoolDefault(_ string, _ bool) bool {
	return false
}

func (_ *Context) URLParamDefault(_ string, _ string) string {
	return ""
}

func (_ *Context) URLParamEscape(_ string) string {
	return ""
}

func (_ *Context) URLParamExists(_ string) bool {
	return false
}

func (_ *Context) URLParamFloat64(_ string) (float64, error) {
	return 0, nil
}

func (_ *Context) URLParamFloat64Default(_ string, _ float64) float64 {
	return 0
}

func (_ *Context) URLParamInt(_ string) (int, error) {
	return 0, nil
}

func (_ *Context) URLParamInt32Default(_ string, _ int32) int32 {
	return 0
}

func (_ *Context) URLParamInt64(_ string) (int64, error) {
	return 0, nil
}

func (_ *Context) URLParamInt64Default(_ string, _ int64) int64 {
	return 0
}

func (_ *Context) URLParamIntDefault(_ string, _ int) int {
	return 0
}

func (_ *Context) URLParamSlice(_ string) []string {
	return nil
}

func (_ *Context) URLParamTrim(_ string) string {
	return ""
}

func (_ *Context) URLParamUint64(_ string) uint64 {
	return 0
}

func (_ *Context) URLParams() map[string]string {
	return nil
}

func (_ *Context) URLParamsSorted() []interface{} {
	return nil
}

func (_ *Context) UnmarshalBody(_ interface{}, _ Unmarshaler) error {
	return nil
}

func (_ *Context) UnregisterDependency(_ reflect.Type) bool {
	return false
}

func (_ *Context) UploadFormFiles(_ string, _ ...func(*Context, *multipart.FileHeader) bool) ([]*multipart.FileHeader, int64, error) {
	return nil, 0, nil
}

func (_ *Context) UpsertCookie(_ *http.Cookie, _ ...CookieOption) bool {
	return false
}

func (_ *Context) User() User {
	return nil
}

func (_ *Context) Value(_ interface{}) interface{} {
	return nil
}

func (_ *Context) Values() interface{} {
	return nil
}

func (_ *Context) View(_ string, _ ...interface{}) error {
	return nil
}

func (_ *Context) ViewData(_ string, _ interface{}) {}

func (_ *Context) ViewEngine(_ ViewEngine) {}

func (_ *Context) ViewLayout(_ string) {}

func (_ *Context) VisitAllCookies(_ func(string, string)) {}

func (_ *Context) Write(_ []byte) (int, error) {
	return 0, nil
}

func (_ *Context) WriteNotModified() {}

func (_ *Context) WriteString(_ string) (int, error) {
	return 0, nil
}

func (_ *Context) WriteWithExpiration(_ []byte, _ time.Time) (int, error) {
	return 0, nil
}

func (_ *Context) Writef(_ string, _ ...interface{}) (int, error) {
	return 0, nil
}

func (_ *Context) XML(_ interface{}, _ ...XML) error {
	return nil
}

func (_ *Context) YAML(_ interface{}) error {
	return nil
}

type CookieOption func(*Context, *http.Cookie, byte)

type DecodeFunc func(interface{}) error

type ErrPanicRecovery struct {
	ErrPrivate         ErrPrivate
	Cause              interface{}
	Callers            []string
	Stack              []byte
	RegisteredHandlers []string
	CurrentHandler     string
}

func (_ ErrPanicRecovery) IrisPrivateError() {}

func (_ *ErrPanicRecovery) Error() string {
	return ""
}

func (_ *ErrPanicRecovery) Is(_ error) bool {
	return false
}

type ErrPrivate interface {
	Error() string
	IrisPrivateError()
}

type ErrViewNotExist struct {
	Name     string
	IsLayout bool
	Data     interface{}
}

func (_ ErrViewNotExist) Error() string {
	return ""
}

type ErrorHandler interface {
	HandleContextError(_ *Context, _ error)
}

type FallbackViewProvider interface {
	FallbackView(_ *Context, _ ErrViewNotExist) error
}

type Func struct {
	RegisterName    string
	Raw             interface{}
	PersistenceArgs []interface{}
	Meta            *FuncMeta
}

type FuncMeta struct {
	Handler                 Handler
	HandlerWithErr          func(*Context) error
	RawFunc                 func()
	RawFuncWithErr          func() error
	RawFuncArgs             func(...interface{})
	RawFuncArgsWithErr      func(...interface{}) error
	Value                   reflect.Value
	Type                    reflect.Type
	ExpectedArgumentsLength int
	PersistenceInputs       []reflect.Value
	AcceptsContext          bool
	ReturnsError            bool
}

type Handler func(*Context)

type Handlers []Handler

type I18nReadOnly interface {
	GetLocale(_ *Context) Locale
	Tags() []interface{}
	Tr(_ string, _ string, _ ...interface{}) string
	TrContext(_ *Context, _ string, _ ...interface{}) string
}

type JSON struct {
	UnescapeHTML     bool
	Indent           string
	Prefix           string
	ASCII            bool
	Secure           bool
	Proto            interface{}
	OmitErrorHandler bool
}

func (_ *JSON) IsDefault() bool {
	return false
}

type JSONP struct {
	Indent           string
	Callback         string
	OmitErrorHandler bool
}

type JSONReader struct {
	DisallowUnknownFields bool
	Optimize              bool
	ArrayStream           bool
}

type Locale interface {
	GetMessage(_ string, _ ...interface{}) string
	Index() int
	Language() string
	Tag() interface{}
}

type Markdown struct {
	Sanitize         bool
	OmitErrorHandler bool
	RenderOptions    interface{}
}

type MultipartRelated struct {
	ContentIDs []string
	Contents   map[string]MultipartRelatedContent
}

type MultipartRelatedContent struct {
	ID      string
	Headers map[string][]string
	Body    []byte
}

type NegotiationAcceptBuilder struct{}

func (_ *NegotiationAcceptBuilder) Binary() *NegotiationAcceptBuilder {
	return nil
}

func (_ *NegotiationAcceptBuilder) Charset(_ ...string) *NegotiationAcceptBuilder {
	return nil
}

func (_ *NegotiationAcceptBuilder) Encoding(_ ...string) *NegotiationAcceptBuilder {
	return nil
}

func (_ *NegotiationAcceptBuilder) EncodingGzip() *NegotiationAcceptBuilder {
	return nil
}

func (_ *NegotiationAcceptBuilder) HTML() *NegotiationAcceptBuilder {
	return nil
}

func (_ *NegotiationAcceptBuilder) JSON() *NegotiationAcceptBuilder {
	return nil
}

func (_ *NegotiationAcceptBuilder) JSONP() *NegotiationAcceptBuilder {
	return nil
}

func (_ *NegotiationAcceptBuilder) MIME(_ ...string) *NegotiationAcceptBuilder {
	return nil
}

func (_ *NegotiationAcceptBuilder) Markdown() *NegotiationAcceptBuilder {
	return nil
}

func (_ *NegotiationAcceptBuilder) MsgPack() *NegotiationAcceptBuilder {
	return nil
}

func (_ *NegotiationAcceptBuilder) Override() *NegotiationAcceptBuilder {
	return nil
}

func (_ *NegotiationAcceptBuilder) Problem() *NegotiationAcceptBuilder {
	return nil
}

func (_ *NegotiationAcceptBuilder) Protobuf() *NegotiationAcceptBuilder {
	return nil
}

func (_ *NegotiationAcceptBuilder) Text() *NegotiationAcceptBuilder {
	return nil
}

func (_ *NegotiationAcceptBuilder) TextYAML() *NegotiationAcceptBuilder {
	return nil
}

func (_ *NegotiationAcceptBuilder) XML() *NegotiationAcceptBuilder {
	return nil
}

func (_ *NegotiationAcceptBuilder) YAML() *NegotiationAcceptBuilder {
	return nil
}

type NegotiationBuilder struct {
	Accept NegotiationAcceptBuilder
}

func (_ *NegotiationBuilder) Any(_ ...interface{}) *NegotiationBuilder {
	return nil
}

func (_ *NegotiationBuilder) Binary(_ ...[]byte) *NegotiationBuilder {
	return nil
}

func (_ *NegotiationBuilder) Build() (string, string, string, interface{}) {
	return "", "", "", nil
}

func (_ *NegotiationBuilder) Charset(_ ...string) *NegotiationBuilder {
	return nil
}

func (_ *NegotiationBuilder) Clear() *NegotiationBuilder {
	return nil
}

func (_ *NegotiationBuilder) Encoding(_ ...string) *NegotiationBuilder {
	return nil
}

func (_ *NegotiationBuilder) EncodingGzip() *NegotiationBuilder {
	return nil
}

func (_ *NegotiationBuilder) HTML(_ ...string) *NegotiationBuilder {
	return nil
}

func (_ *NegotiationBuilder) JSON(_ ...interface{}) *NegotiationBuilder {
	return nil
}

func (_ *NegotiationBuilder) JSONP(_ ...interface{}) *NegotiationBuilder {
	return nil
}

func (_ *NegotiationBuilder) MIME(_ string, _ interface{}) *NegotiationBuilder {
	return nil
}

func (_ *NegotiationBuilder) Markdown(_ ...[]byte) *NegotiationBuilder {
	return nil
}

func (_ *NegotiationBuilder) MsgPack(_ ...interface{}) *NegotiationBuilder {
	return nil
}

func (_ *NegotiationBuilder) Problem(_ ...interface{}) *NegotiationBuilder {
	return nil
}

func (_ *NegotiationBuilder) Protobuf(_ ...interface{}) *NegotiationBuilder {
	return nil
}

func (_ *NegotiationBuilder) Text(_ ...string) *NegotiationBuilder {
	return nil
}

func (_ *NegotiationBuilder) TextYAML(_ ...interface{}) *NegotiationBuilder {
	return nil
}

func (_ *NegotiationBuilder) XML(_ ...interface{}) *NegotiationBuilder {
	return nil
}

func (_ *NegotiationBuilder) YAML(_ ...interface{}) *NegotiationBuilder {
	return nil
}

type Pool struct{}

func (_ *Pool) Acquire(_ http.ResponseWriter, _ *http.Request) *Context {
	return nil
}

func (_ *Pool) Release(_ *Context) {}

func (_ *Pool) ReleaseLight(_ *Context) {}

type Problem map[string]interface{}

func (_ Problem) Cause(_ Problem) Problem {
	return nil
}

func (_ Problem) Detail(_ string) Problem {
	return nil
}

func (_ Problem) DetailErr(_ error) Problem {
	return nil
}

func (_ Problem) Error() string {
	return ""
}

func (_ Problem) GetTempKey(_ string) interface{} {
	return nil
}

func (_ Problem) Instance(_ string) Problem {
	return nil
}

func (_ Problem) Key(_ string, _ interface{}) Problem {
	return nil
}

func (_ Problem) MarshalXML(_ *xml.Encoder, _ xml.StartElement) error {
	return nil
}

func (_ Problem) Status(_ int) Problem {
	return nil
}

func (_ Problem) TempKey(_ string, _ interface{}) Problem {
	return nil
}

func (_ Problem) Title(_ string) Problem {
	return nil
}

func (_ Problem) Type(_ string) Problem {
	return nil
}

func (_ Problem) Validate() bool {
	return false
}

type ProblemOptions struct {
	JSON           JSON
	RenderXML      bool
	XML            XML
	RetryAfter     interface{}
	RetryAfterFunc func(*Context) interface{}
}

func (_ *ProblemOptions) Apply(_ *Context) {}

type Referrer struct {
	Raw        string
	Type       interface{}
	Label      string
	URL        string
	Subdomain  string
	Domain     string
	Tld        string
	Path       string
	Query      string
	GoogleType interface{}
}

func (_ Referrer) String() string {
	return ""
}

type RequestParams struct {
	Store interface{}
}

func (_ RequestParams) Serialize() []byte {
	return nil
}

func (_ *RequestParams) Exists(_ string) bool {
	return false
}

func (_ *RequestParams) Get(_ string) string {
	return ""
}

func (_ *RequestParams) GetBool(_ string) (bool, error) {
	return false, nil
}

func (_ *RequestParams) GetBoolDefault(_ string, _ bool) bool {
	return false
}

func (_ *RequestParams) GetDecoded(_ string) string {
	return ""
}

func (_ *RequestParams) GetDefault(_ string, _ interface{}) interface{} {
	return nil
}

func (_ *RequestParams) GetEntry(_ string) interface{} {
	return nil
}

func (_ *RequestParams) GetEntryAt(_ int) interface{} {
	return nil
}

func (_ *RequestParams) GetEscape(_ string) string {
	return ""
}

func (_ *RequestParams) GetFloat64(_ string) (float64, error) {
	return 0, nil
}

func (_ *RequestParams) GetFloat64Default(_ string, _ float64) float64 {
	return 0
}

func (_ *RequestParams) GetInt(_ string) (int, error) {
	return 0, nil
}

func (_ *RequestParams) GetInt16(_ string) (int16, error) {
	return 0, nil
}

func (_ *RequestParams) GetInt16Default(_ string, _ int16) int16 {
	return 0
}

func (_ *RequestParams) GetInt32(_ string) (int32, error) {
	return 0, nil
}

func (_ *RequestParams) GetInt32Default(_ string, _ int32) int32 {
	return 0
}

func (_ *RequestParams) GetInt64(_ string) (int64, error) {
	return 0, nil
}

func (_ *RequestParams) GetInt64Default(_ string, _ int64) int64 {
	return 0
}

func (_ *RequestParams) GetInt8(_ string) (int8, error) {
	return 0, nil
}

func (_ *RequestParams) GetInt8Default(_ string, _ int8) int8 {
	return 0
}

func (_ *RequestParams) GetIntDefault(_ string, _ int) int {
	return 0
}

func (_ *RequestParams) GetIntUnslashed(_ string) (int, bool) {
	return 0, false
}

func (_ *RequestParams) GetOrSet(_ string, _ func() interface{}) interface{} {
	return nil
}

func (_ *RequestParams) GetString(_ string) string {
	return ""
}

func (_ *RequestParams) GetStringDefault(_ string, _ string) string {
	return ""
}

func (_ *RequestParams) GetStringTrim(_ string) string {
	return ""
}

func (_ *RequestParams) GetTime(_ string) (time.Time, error) {
	return time.Time{}, nil
}

func (_ *RequestParams) GetTrim(_ string) string {
	return ""
}

func (_ *RequestParams) GetTrimFile(_ string) string {
	return ""
}

func (_ *RequestParams) GetTrimFileInt(_ string) int {
	return 0
}

func (_ *RequestParams) GetTrimFileUint(_ string) uint {
	return 0
}

func (_ *RequestParams) GetTrimFileUint64(_ string) uint64 {
	return 0
}

func (_ *RequestParams) GetTrimHTML(_ string) string {
	return ""
}

func (_ *RequestParams) GetTrimJSON(_ string) string {
	return ""
}

func (_ *RequestParams) GetTrimXML(_ string) string {
	return ""
}

func (_ *RequestParams) GetUint(_ string) (uint, error) {
	return 0, nil
}

func (_ *RequestParams) GetUint16(_ string) (uint16, error) {
	return 0, nil
}

func (_ *RequestParams) GetUint16Default(_ string, _ uint16) uint16 {
	return 0
}

func (_ *RequestParams) GetUint32(_ string) (uint32, error) {
	return 0, nil
}

func (_ *RequestParams) GetUint32Default(_ string, _ uint32) uint32 {
	return 0
}

func (_ *RequestParams) GetUint64(_ string) (uint64, error) {
	return 0, nil
}

func (_ *RequestParams) GetUint64Default(_ string, _ uint64) uint64 {
	return 0
}

func (_ *RequestParams) GetUint8(_ string) (byte, error) {
	return 0, nil
}

func (_ *RequestParams) GetUint8Default(_ string, _ byte) byte {
	return 0
}

func (_ *RequestParams) GetUintDefault(_ string, _ uint) uint {
	return 0
}

func (_ *RequestParams) GetWeekday(_ string) (time.Weekday, error) {
	return 0, nil
}

func (_ *RequestParams) Len() int {
	return 0
}

func (_ *RequestParams) Remove(_ string) bool {
	return false
}

func (_ *RequestParams) Reset() {}

func (_ *RequestParams) Save(_ string, _ interface{}, _ bool) (interface{}, bool) {
	return nil, false
}

func (_ *RequestParams) Set(_ string, _ string) {}

func (_ *RequestParams) SetImmutable(_ string, _ interface{}) (interface{}, bool) {
	return nil, false
}

func (_ *RequestParams) SimpleDate(_ string) string {
	return ""
}

func (_ *RequestParams) Visit(_ func(string, string)) {}

type ResponseRecorder struct {
	ResponseWriter ResponseWriter
}

func (_ ResponseRecorder) BeginResponse(_ http.ResponseWriter) {}

func (_ ResponseRecorder) Flusher() (http.Flusher, bool) {
	return nil, false
}

func (_ ResponseRecorder) GetBeforeFlush() func() {
	return nil
}

func (_ ResponseRecorder) IsHijacked() bool {
	return false
}

func (_ ResponseRecorder) SetBeforeFlush(_ func()) {}

func (_ ResponseRecorder) SetWriter(_ http.ResponseWriter) {}

func (_ ResponseRecorder) SetWritten(_ int) {}

func (_ ResponseRecorder) StatusCode() int {
	return 0
}

func (_ ResponseRecorder) WriteHeader(_ int) {}

func (_ ResponseRecorder) Written() int {
	return 0
}

func (_ *ResponseRecorder) BeginRecord(_ ResponseWriter) {}

func (_ *ResponseRecorder) Body() []byte {
	return nil
}

func (_ *ResponseRecorder) ClearHeaders() {}

func (_ *ResponseRecorder) Clone() ResponseWriter {
	return nil
}

func (_ *ResponseRecorder) CopyTo(_ ResponseWriter) {}

func (_ *ResponseRecorder) EndResponse() {}

func (_ *ResponseRecorder) Flush() {}

func (_ *ResponseRecorder) FlushResponse() {}

func (_ *ResponseRecorder) Header() http.Header {
	return nil
}

func (_ *ResponseRecorder) Naive() http.ResponseWriter {
	return nil
}

func (_ *ResponseRecorder) Push(_ string, _ *http.PushOptions) error {
	return nil
}

func (_ *ResponseRecorder) Reset() bool {
	return false
}

func (_ *ResponseRecorder) ResetBody() {}

func (_ *ResponseRecorder) ResetHeaders() {}

func (_ *ResponseRecorder) Result() *http.Response {
	return nil
}

func (_ *ResponseRecorder) SetBody(_ []byte) {}

func (_ *ResponseRecorder) SetBodyString(_ string) {}

func (_ *ResponseRecorder) Write(_ []byte) (int, error) {
	return 0, nil
}

type ResponseWriter interface {
	BeginResponse(_ http.ResponseWriter)
	Clone() ResponseWriter
	CopyTo(_ ResponseWriter)
	EndResponse()
	Flush()
	FlushResponse()
	Flusher() (http.Flusher, bool)
	GetBeforeFlush() func()
	Header() http.Header
	IsHijacked() bool
	Naive() http.ResponseWriter
	SetBeforeFlush(_ func())
	SetWriter(_ http.ResponseWriter)
	SetWritten(_ int)
	StatusCode() int
	Write(_ []byte) (int, error)
	WriteHeader(_ int)
	Written() int
}

type RouteReadOnly interface {
	GetChangeFreq() string
	GetLastMod() time.Time
	GetPriority() float32
	IsOnline() bool
	IsStatic() bool
	MainHandlerIndex() int
	MainHandlerName() string
	Method() string
	Name() string
	Path() string
	Property(_ string) (interface{}, bool)
	ResolvePath(_ ...string) string
	StaticPath() string
	StatusErrorCode() int
	String() string
	Subdomain() string
	Tmpl() interface{}
	Trace(_ io.Writer, _ int)
}

type Unmarshaler interface {
	Unmarshal(_ []byte, _ interface{}) error
}

type User interface {
	GetAuthorization() (string, error)
	GetAuthorizedAt() (time.Time, error)
	GetEmail() (string, error)
	GetField(_ string) (interface{}, error)
	GetID() (string, error)
	GetPassword() (string, error)
	GetRaw() (interface{}, error)
	GetRoles() ([]string, error)
	GetToken() ([]byte, error)
	GetUsername() (string, error)
}

type ViewEngine interface {
	ExecuteWriter(_ io.Writer, _ string, _ string, _ interface{}) error
	Ext() string
	Load() error
	Name() string
}

type XML struct {
	Indent           string
	Prefix           string
	OmitErrorHandler bool
}
