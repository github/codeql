// Code generated by depstubber. DO NOT EDIT.
// This is a simple stub for github.com/revel/revel/session, strictly for use in testing.

// See the LICENSE file for information about the licensing of the original library.
// Source: github.com/revel/revel/session (exports: Session; functions: )

// Package session is a stub of github.com/revel/revel/session, generated by depstubber.
package session

import (
	time "time"
)

type Session map[string]interface{}

func (_ Session) Del(_ string) {}

func (_ Session) Empty() bool {
	return false
}

func (_ Session) Get(_ string) (interface{}, error) {
	return nil, nil
}

func (_ Session) GetDefault(_ string, _ interface{}, _ interface{}) interface{} {
	return nil
}

func (_ Session) GetExpiration(_ time.Duration) time.Time {
	return time.Time{}
}

func (_ Session) GetInto(_ string, _ interface{}, _ bool) (interface{}, error) {
	return nil, nil
}

func (_ Session) GetProperty(_ string, _ interface{}) (interface{}, error) {
	return nil, nil
}

func (_ Session) ID() string {
	return ""
}

func (_ Session) Load(_ map[string]string) {}

func (_ Session) Serialize() map[string]string {
	return nil
}

func (_ Session) SessionTimeoutExpiredOrMissing() bool {
	return false
}

func (_ Session) Set(_ string, _ interface{}) error {
	return nil
}

func (_ Session) SetDefaultExpiration() {}

func (_ Session) SetNoExpiration() {}
