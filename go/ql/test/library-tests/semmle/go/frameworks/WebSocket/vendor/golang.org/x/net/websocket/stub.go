// Code generated by depstubber. DO NOT EDIT.
// This is a simple stub for golang.org/x/net/websocket, strictly for use in testing.

// See the LICENSE file for information about the licensing of the original library.
// Source: golang.org/x/net/websocket (exports: Codec; functions: Dial,NewConfig,DialConfig)

// Package websocket is a stub of golang.org/x/net/websocket, generated by depstubber.
package websocket

import (
	tls "crypto/tls"
	io "io"
	net "net"
	http "net/http"
	url "net/url"
	time "time"
)

type Codec struct {
	Marshal   func(interface{}) ([]byte, byte, error)
	Unmarshal func([]byte, byte, interface{}) error
}

func (_ Codec) Receive(_ *Conn, _ interface{}) error {
	return nil
}

func (_ Codec) Send(_ *Conn, _ interface{}) error {
	return nil
}

type Config struct {
	Location  *url.URL
	Origin    *url.URL
	Protocol  []string
	Version   int
	TlsConfig *tls.Config
	Header    http.Header
	Dialer    *net.Dialer
}

type Conn struct {
	PayloadType     byte
	MaxPayloadBytes int
}

func (_ Conn) HandleFrame(_ interface{}) (interface{}, error) {
	return nil, nil
}

func (_ Conn) HeaderReader() io.Reader {
	return nil
}

func (_ Conn) Len() int {
	return 0
}

func (_ Conn) NewFrameReader() (interface{}, error) {
	return nil, nil
}

func (_ Conn) NewFrameWriter(_ byte) (interface{}, error) {
	return nil, nil
}

func (_ Conn) TrailerReader() io.Reader {
	return nil
}

func (_ Conn) WriteClose(_ int) error {
	return nil
}

func (_ *Conn) Close() error {
	return nil
}

func (_ *Conn) Config() *Config {
	return nil
}

func (_ *Conn) IsClientConn() bool {
	return false
}

func (_ *Conn) IsServerConn() bool {
	return false
}

func (_ *Conn) LocalAddr() net.Addr {
	return nil
}

func (_ *Conn) Read(_ []byte) (int, error) {
	return 0, nil
}

func (_ *Conn) RemoteAddr() net.Addr {
	return nil
}

func (_ *Conn) Request() *http.Request {
	return nil
}

func (_ *Conn) SetDeadline(_ time.Time) error {
	return nil
}

func (_ *Conn) SetReadDeadline(_ time.Time) error {
	return nil
}

func (_ *Conn) SetWriteDeadline(_ time.Time) error {
	return nil
}

func (_ *Conn) Write(_ []byte) (int, error) {
	return 0, nil
}

func Dial(_ string, _ string, _ string) (*Conn, error) {
	return nil, nil
}

func DialConfig(_ *Config) (*Conn, error) {
	return nil, nil
}

func NewConfig(_ string, _ string) (*Config, error) {
	return nil, nil
}
