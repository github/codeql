// Code generated by depstubber. DO NOT EDIT.
// This is a simple stub for nhooyr.io/websocket, strictly for use in testing.

// See the LICENSE file for information about the licensing of the original library.
// Source: nhooyr.io/websocket (exports: ; functions: Dial)

// Package websocket is a stub of nhooyr.io/websocket, generated by depstubber.
package websocket

import (
	context "context"
	io "io"
	http "net/http"
)

type CompressionMode int

type Conn struct{}

func (_ *Conn) Close(_ StatusCode, _ string) error {
	return nil
}

func (_ *Conn) CloseRead(_ context.Context) context.Context {
	return nil
}

func (_ *Conn) Ping(_ context.Context) error {
	return nil
}

func (_ *Conn) Read(_ context.Context) (MessageType, []byte, error) {
	return 0, nil, nil
}

func (_ *Conn) Reader(_ context.Context) (MessageType, io.Reader, error) {
	return 0, nil, nil
}

func (_ *Conn) SetReadLimit(_ int64) {}

func (_ *Conn) Subprotocol() string {
	return ""
}

func (_ *Conn) Write(_ context.Context, _ MessageType, _ []byte) error {
	return nil
}

func (_ *Conn) Writer(_ context.Context, _ MessageType) (io.WriteCloser, error) {
	return nil, nil
}

func Dial(_ context.Context, _ string, _ *DialOptions) (*Conn, *http.Response, error) {
	return nil, nil, nil
}

type DialOptions struct {
	HTTPClient           *http.Client
	HTTPHeader           http.Header
	Subprotocols         []string
	CompressionMode      CompressionMode
	CompressionThreshold int
}

type MessageType int

func (_ MessageType) String() string {
	return ""
}

type StatusCode int

func (_ StatusCode) String() string {
	return ""
}
