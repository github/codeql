// Code generated by depstubber. DO NOT EDIT.
// This is a simple stub for github.com/sacOO7/gowebsocket, strictly for use in testing.

// See the LICENSE file for information about the licensing of the original library.
// Source: github.com/sacOO7/gowebsocket (exports: ; functions: New,BuildProxy)

// Package gowebsocket is a stub of github.com/sacOO7/gowebsocket, generated by depstubber.
package gowebsocket

import (
	http "net/http"
	url "net/url"
)

func BuildProxy(_ string) func(*http.Request) (*url.URL, error) {
	return nil
}

type ConnectionOptions struct {
	UseCompression bool
	UseSSL         bool
	Proxy          func(*http.Request) (*url.URL, error)
	Subprotocols   []string
}

func New(_ string) Socket {
	return Socket{}
}

type Socket struct {
	Conn              interface{}
	WebsocketDialer   interface{}
	Url               string
	ConnectionOptions ConnectionOptions
	RequestHeader     http.Header
	OnConnected       func(Socket)
	OnTextMessage     func(string, Socket)
	OnBinaryMessage   func([]byte, Socket)
	OnConnectError    func(error, Socket)
	OnDisconnected    func(error, Socket)
	OnPingReceived    func(string, Socket)
	OnPongReceived    func(string, Socket)
	IsConnected       bool
}

func (_ Socket) EnableLogging() {}

func (_ Socket) GetLogger() interface{} {
	return nil
}

func (_ *Socket) Close() {}

func (_ *Socket) Connect() {}

func (_ *Socket) SendBinary(_ []byte) {}

func (_ *Socket) SendText(_ string) {}
