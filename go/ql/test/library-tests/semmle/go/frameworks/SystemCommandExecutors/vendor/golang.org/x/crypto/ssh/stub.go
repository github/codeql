// Code generated by depstubber. DO NOT EDIT.
// This is a simple stub for golang.org/x/crypto/ssh, strictly for use in testing.

// Source: golang.org/x/crypto/ssh (exports: Session; functions: )

// Package ssh is a stub of golang.org/x/crypto/ssh, generated by depstubber.
package ssh

import (
	io "io"
)

type Session struct {
	Stdin  io.Reader
	Stdout io.Writer
	Stderr io.Writer
}

func (_ *Session) Close() interface {
	Error() string
} {
	return nil
}

func (_ *Session) CombinedOutput(_ string) ([]uint8, interface {
	Error() string
}) {
	return nil, nil
}

func (_ *Session) Output(_ string) ([]uint8, interface {
	Error() string
}) {
	return nil, nil
}

func (_ *Session) RequestPty(_ string, _ int, _ int, _ TerminalModes) interface {
	Error() string
} {
	return nil
}

func (_ *Session) RequestSubsystem(_ string) interface {
	Error() string
} {
	return nil
}

func (_ *Session) Run(_ string) interface {
	Error() string
} {
	return nil
}

func (_ *Session) SendRequest(_ string, _ bool, _ []uint8) (bool, interface {
	Error() string
}) {
	return false, nil
}

func (_ *Session) Setenv(_ string, _ string) interface {
	Error() string
} {
	return nil
}

func (_ *Session) Shell() interface {
	Error() string
} {
	return nil
}

func (_ *Session) Signal(_ Signal) interface {
	Error() string
} {
	return nil
}

func (_ *Session) Start(_ string) interface {
	Error() string
} {
	return nil
}

func (_ *Session) StderrPipe() (io.Reader, interface {
	Error() string
}) {
	return nil, nil
}

func (_ *Session) StdinPipe() (io.WriteCloser, interface {
	Error() string
}) {
	return nil, nil
}

func (_ *Session) StdoutPipe() (io.Reader, interface {
	Error() string
}) {
	return nil, nil
}

func (_ *Session) Wait() interface {
	Error() string
} {
	return nil
}

func (_ *Session) WindowChange(_ int, _ int) interface {
	Error() string
} {
	return nil
}

type Signal string

type TerminalModes map[uint8]uint32
