<!DOCTYPE qhelp PUBLIC "-//Semmle//qhelp//EN" "qhelp.dtd">

<qhelp>
  <overview>
    <p>If a Data-Source Name (DSN) is built using untrusted user input without proper sanitization,
      the system may be vulnerable to DSN injection vulnerabilities.</p>
  </overview>

  <recommendation>
    <p>If user input must be included in a DSN, additional steps should be taken to sanitize
      untrusted data, such as checking for special characters included in user input.</p>
  </recommendation>

  <example>
    <p>In the following examples, the code accepts the db name from the user,
      which it then uses to build a DSN string.</p>

    <p>The following example uses the unsanitized user input directly
      in the process of constructing a DSN name.
      A malicious user could provide special characters to change the meaning of this string, and
      carry out unexpected database operations.</p>

    <sample src="DsnBad.go" />

    <p>In the following example, the input provided by the user is sanitized before it is included
      in the DSN string.
      This ensures the meaning of the DSN string cannot be changed by a malicious user.</p>

    <sample src="DsnGood.go" />
  </example>

  <references>
    <li>
      CVE-2022-3023: <a href="https://nvd.nist.gov/vuln/detail/CVE-2022-3023/">Data Source Name Injection in pingcap/tidb.</a>
    </li>

  </references>
</qhelp>