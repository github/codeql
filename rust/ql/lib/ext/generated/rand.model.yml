# THIS FILE IS AN AUTO-GENERATED MODELS AS DATA FILE. DO NOT EDIT.
extensions:
  - addsTo:
      pack: codeql/rust-all
      extensible: summaryModel
    data:
      - ["<core::bool as rand::distr::utils::BoolAsSIMD>::any", "Argument[self]", "ReturnValue", "value", "dfc-generated"]
      - ["<core::core_simd::vector::Simd as rand::distr::utils::FloatSIMDScalarUtils>::extract_lane", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<core::core_simd::vector::Simd as rand::distr::utils::FloatSIMDScalarUtils>::replace", "Argument[self]", "ReturnValue", "value", "dfc-generated"]
      - ["<core::f32 as rand::distr::utils::FloatSIMDScalarUtils>::extract_lane", "Argument[self]", "ReturnValue", "value", "dfc-generated"]
      - ["<core::f32 as rand::distr::utils::FloatSIMDScalarUtils>::replace", "Argument[1]", "ReturnValue", "value", "dfc-generated"]
      - ["<core::f32 as rand::distr::utils::FloatSIMDUtils>::cast_from_int", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["<core::f64 as rand::distr::utils::FloatSIMDScalarUtils>::extract_lane", "Argument[self]", "ReturnValue", "value", "dfc-generated"]
      - ["<core::f64 as rand::distr::utils::FloatSIMDScalarUtils>::replace", "Argument[1]", "ReturnValue", "value", "dfc-generated"]
      - ["<core::f64 as rand::distr::utils::FloatSIMDUtils>::cast_from_int", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["<core::u16 as rand::distr::utils::WideningMultiply>::wmul", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["<core::u16 as rand::distr::utils::WideningMultiply>::wmul", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<core::u32 as rand::distr::utils::WideningMultiply>::wmul", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["<core::u32 as rand::distr::utils::WideningMultiply>::wmul", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<core::u32 as rand::seq::index_::UInt>::as_usize", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<core::u64 as rand::distr::utils::WideningMultiply>::wmul", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["<core::u64 as rand::distr::utils::WideningMultiply>::wmul", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<core::u64 as rand::seq::index_::UInt>::as_usize", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<core::u8 as rand::distr::utils::WideningMultiply>::wmul", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["<core::u8 as rand::distr::utils::WideningMultiply>::wmul", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<core::usize as rand::distr::utils::WideningMultiply>::wmul", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["<core::usize as rand::distr::utils::WideningMultiply>::wmul", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::distr::StandardUniform as rand::distr::distribution::Distribution>::sample", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::distr::bernoulli::Bernoulli as core::clone::Clone>::clone", "Argument[self].Field[rand::distr::bernoulli::Bernoulli::p_int].Reference", "ReturnValue.Field[rand::distr::bernoulli::Bernoulli::p_int]", "value", "dfc-generated"]
      - ["<rand::distr::bernoulli::Bernoulli as core::clone::Clone>::clone", "Argument[self].Field[rand::distr::bernoulli::Bernoulli::p_int]", "ReturnValue.Field[rand::distr::bernoulli::Bernoulli::p_int].Reference", "value", "dfc-generated"]
      - ["<rand::distr::bernoulli::Bernoulli as core::clone::Clone>::clone", "Argument[self].Field[rand::distr::bernoulli::Bernoulli::p_int]", "ReturnValue.Field[rand::distr::bernoulli::Bernoulli::p_int]", "value", "dfc-generated"]
      - ["<rand::distr::bernoulli::Bernoulli>::from_ratio", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::distr::bernoulli::Bernoulli>::from_ratio", "Argument[1]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::distr::bernoulli::Bernoulli>::new", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::distr::bernoulli::Bernoulli>::p", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::distr::distribution::Map as rand::distr::distribution::Distribution>::sample", "Argument[0]", "Argument[self]", "taint", "df-generated"]
      - ["<rand::distr::distribution::Map as rand::distr::distribution::Distribution>::sample", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::distr::float::Open01 as rand::distr::distribution::Distribution>::sample", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::distr::float::OpenClosed01 as rand::distr::distribution::Distribution>::sample", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::distr::slice::Choose as core::clone::Clone>::clone", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::distr::slice::Choose>::new", "Argument[0]", "ReturnValue.Field[core::result::Result::Ok(0)].Field[rand::distr::slice::Choose::slice]", "value", "dfc-generated"]
      - ["<rand::distr::slice::Choose>::num_choices", "Argument[self].Field[rand::distr::slice::Choose::num_choices]", "ReturnValue", "value", "dfc-generated"]
      - ["<rand::distr::uniform::float::UniformFloat as rand::distr::uniform::UniformSampler>::sample", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::distr::uniform::float::UniformFloat as rand::distr::uniform::UniformSampler>::sample", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::distr::uniform::float::UniformFloat as rand::distr::uniform::UniformSampler>::sample_single", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::distr::uniform::float::UniformFloat as rand::distr::uniform::UniformSampler>::sample_single", "Argument[1]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::distr::uniform::float::UniformFloat as rand::distr::uniform::UniformSampler>::sample_single", "Argument[2]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::distr::uniform::float::UniformFloat as rand::distr::uniform::UniformSampler>::sample_single_inclusive", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::distr::uniform::float::UniformFloat as rand::distr::uniform::UniformSampler>::sample_single_inclusive", "Argument[1]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::distr::uniform::float::UniformFloat as rand::distr::uniform::UniformSampler>::sample_single_inclusive", "Argument[2]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::distr::uniform::int::UniformInt as rand::distr::uniform::UniformSampler>::new", "Argument[0].Reference.Reference", "ReturnValue.Field[core::result::Result::Ok(0)].Field[rand::distr::uniform::int::UniformInt::low]", "value", "dfc-generated"]
      - ["<rand::distr::uniform::int::UniformInt as rand::distr::uniform::UniformSampler>::new", "Argument[0].Reference", "ReturnValue.Field[core::result::Result::Ok(0)].Field[rand::distr::uniform::int::UniformInt::low]", "value", "dfc-generated"]
      - ["<rand::distr::uniform::int::UniformInt as rand::distr::uniform::UniformSampler>::new", "Argument[0]", "ReturnValue.Field[core::result::Result::Ok(0)].Field[rand::distr::uniform::int::UniformInt::low]", "value", "dfc-generated"]
      - ["<rand::distr::uniform::int::UniformInt as rand::distr::uniform::UniformSampler>::new_inclusive", "Argument[0].Reference", "ReturnValue.Field[core::result::Result::Ok(0)].Field[rand::distr::uniform::int::UniformInt::low]", "value", "dfc-generated"]
      - ["<rand::distr::uniform::int::UniformInt as rand::distr::uniform::UniformSampler>::new_inclusive", "Argument[0]", "ReturnValue.Field[core::result::Result::Ok(0)].Field[rand::distr::uniform::int::UniformInt::low]", "value", "dfc-generated"]
      - ["<rand::distr::uniform::int::UniformInt as rand::distr::uniform::UniformSampler>::sample", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::distr::uniform::int::UniformInt as rand::distr::uniform::UniformSampler>::sample_single", "Argument[2]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::distr::uniform::int::UniformInt as rand::distr::uniform::UniformSampler>::sample_single_inclusive", "Argument[2]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::distr::uniform::int::UniformUsize as core::clone::Clone>::clone", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::distr::uniform::int::UniformUsize as rand::distr::uniform::UniformSampler>::new", "Argument[0].Reference.Reference", "ReturnValue.Field[core::result::Result::Ok(0)].Field[rand::distr::uniform::int::UniformUsize::low]", "value", "dfc-generated"]
      - ["<rand::distr::uniform::int::UniformUsize as rand::distr::uniform::UniformSampler>::new", "Argument[0].Reference", "ReturnValue.Field[core::result::Result::Ok(0)].Field[rand::distr::uniform::int::UniformUsize::low]", "value", "dfc-generated"]
      - ["<rand::distr::uniform::int::UniformUsize as rand::distr::uniform::UniformSampler>::new", "Argument[0]", "ReturnValue.Field[core::result::Result::Ok(0)].Field[rand::distr::uniform::int::UniformUsize::low]", "value", "dfc-generated"]
      - ["<rand::distr::uniform::int::UniformUsize as rand::distr::uniform::UniformSampler>::new_inclusive", "Argument[0].Reference", "ReturnValue.Field[core::result::Result::Ok(0)].Field[rand::distr::uniform::int::UniformUsize::low]", "value", "dfc-generated"]
      - ["<rand::distr::uniform::int::UniformUsize as rand::distr::uniform::UniformSampler>::new_inclusive", "Argument[0]", "ReturnValue.Field[core::result::Result::Ok(0)].Field[rand::distr::uniform::int::UniformUsize::low]", "value", "dfc-generated"]
      - ["<rand::distr::uniform::int::UniformUsize as rand::distr::uniform::UniformSampler>::sample", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::distr::uniform::other::UniformDuration as core::clone::Clone>::clone", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::distr::uniform::other::UniformDuration as rand::distr::uniform::UniformSampler>::sample", "Argument[self].Field[rand::distr::uniform::other::UniformDuration::mode].Field[rand::distr::uniform::other::UniformDurationMode::Small::secs]", "ReturnValue.Field[core::time::Duration::secs]", "value", "dfc-generated"]
      - ["<rand::distr::uniform::other::UniformDurationMode as core::clone::Clone>::clone", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::distr::weighted::weighted_index::WeightedIndex as core::clone::Clone>::clone", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::distr::weighted::weighted_index::WeightedIndex>::total_weight", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::distr::weighted::weighted_index::WeightedIndex>::weight", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::distr::weighted::weighted_index::WeightedIndex>::weights", "Argument[self]", "ReturnValue.Field[rand::distr::weighted::weighted_index::WeightedIndexIter::weighted_index]", "value", "dfc-generated"]
      - ["<rand::distr::weighted::weighted_index::WeightedIndexIter as core::clone::Clone>::clone", "Argument[self].Field[rand::distr::weighted::weighted_index::WeightedIndexIter::index]", "ReturnValue.Field[rand::distr::weighted::weighted_index::WeightedIndexIter::index]", "value", "dfc-generated"]
      - ["<rand::distr::weighted::weighted_index::WeightedIndexIter as core::clone::Clone>::clone", "Argument[self].Field[rand::distr::weighted::weighted_index::WeightedIndexIter::weighted_index]", "ReturnValue.Field[rand::distr::weighted::weighted_index::WeightedIndexIter::weighted_index]", "value", "dfc-generated"]
      - ["<rand::distr::weighted::weighted_index::WeightedIndexIter as core::iter::traits::iterator::Iterator>::next", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::rngs::mock::StepRng as core::clone::Clone>::clone", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::rngs::mock::StepRng as rand_core::RngCore>::next_u32", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::rngs::mock::StepRng as rand_core::RngCore>::next_u64", "Argument[self].Field[rand::rngs::mock::StepRng::v]", "ReturnValue", "value", "dfc-generated"]
      - ["<rand::rngs::mock::StepRng>::new", "Argument[0]", "ReturnValue.Field[rand::rngs::mock::StepRng::v]", "value", "dfc-generated"]
      - ["<rand::rngs::mock::StepRng>::new", "Argument[1]", "ReturnValue.Field[rand::rngs::mock::StepRng::a]", "value", "dfc-generated"]
      - ["<rand::rngs::reseeding::ReseedingCore as core::clone::Clone>::clone", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::rngs::reseeding::ReseedingRng>::new", "Argument[1]", "ReturnValue.Field[rand::rngs::reseeding::ReseedingCore::reseeder]", "value", "dfc-generated"]
      - ["<rand::rngs::small::SmallRng as core::clone::Clone>::clone", "Argument[self].Field[rand::rngs::small::SmallRng(0)].Field[rand::rngs::xoshiro256plusplus::Xoshiro256PlusPlus::s]", "ReturnValue.Field[rand::rngs::small::SmallRng(0)].Field[rand::rngs::xoshiro256plusplus::Xoshiro256PlusPlus::s]", "value", "dfc-generated"]
      - ["<rand::rngs::thread::ThreadRng as core::clone::Clone>::clone", "Argument[self].Field[rand::rngs::thread::ThreadRng::rng].Reference", "ReturnValue.Field[rand::rngs::thread::ThreadRng::rng]", "value", "dfc-generated"]
      - ["<rand::rngs::thread::ThreadRng as core::clone::Clone>::clone", "Argument[self].Field[rand::rngs::thread::ThreadRng::rng]", "ReturnValue.Field[rand::rngs::thread::ThreadRng::rng]", "value", "dfc-generated"]
      - ["<rand::rngs::xoshiro256plusplus::Xoshiro256PlusPlus as core::clone::Clone>::clone", "Argument[self].Field[rand::rngs::xoshiro256plusplus::Xoshiro256PlusPlus::s].Reference", "ReturnValue.Field[rand::rngs::xoshiro256plusplus::Xoshiro256PlusPlus::s]", "value", "dfc-generated"]
      - ["<rand::rngs::xoshiro256plusplus::Xoshiro256PlusPlus as core::clone::Clone>::clone", "Argument[self].Field[rand::rngs::xoshiro256plusplus::Xoshiro256PlusPlus::s]", "ReturnValue.Field[rand::rngs::xoshiro256plusplus::Xoshiro256PlusPlus::s]", "value", "dfc-generated"]
      - ["<rand::seq::coin_flipper::CoinFlipper>::new", "Argument[0]", "ReturnValue.Field[rand::seq::coin_flipper::CoinFlipper::rng]", "value", "dfc-generated"]
      - ["<rand::seq::increasing_uniform::IncreasingUniform>::new", "Argument[0]", "ReturnValue.Field[rand::seq::increasing_uniform::IncreasingUniform::rng]", "value", "dfc-generated"]
      - ["<rand::seq::increasing_uniform::IncreasingUniform>::new", "Argument[1]", "ReturnValue.Field[rand::seq::increasing_uniform::IncreasingUniform::n]", "value", "dfc-generated"]
      - ["<rand::seq::increasing_uniform::IncreasingUniform>::next_index", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::seq::index_::IndexVec as core::clone::Clone>::clone", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::seq::index_::IndexVec as core::convert::From>::from", "Argument[0]", "ReturnValue.Field[rand::seq::index_::IndexVec::U32(0)]", "value", "dfc-generated"]
      - ["<rand::seq::index_::IndexVec as core::convert::From>::from", "Argument[0]", "ReturnValue.Field[rand::seq::index_::IndexVec::U64(0)]", "value", "dfc-generated"]
      - ["<rand::seq::index_::IndexVec>::index", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::seq::index_::IndexVec>::len", "Argument[self].Field[rand::seq::index_::IndexVec::U32(0)].Field[alloc::vec::Vec::len]", "ReturnValue", "value", "dfc-generated"]
      - ["<rand::seq::index_::IndexVec>::len", "Argument[self].Field[rand::seq::index_::IndexVec::U64(0)].Field[alloc::vec::Vec::len]", "ReturnValue", "value", "dfc-generated"]
      - ["<rand::seq::index_::IndexVecIntoIter as core::clone::Clone>::clone", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::seq::index_::IndexVecIntoIter as core::iter::traits::iterator::Iterator>::next", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::seq::index_::IndexVecIntoIter as core::iter::traits::iterator::Iterator>::size_hint", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::seq::index_::IndexVecIter as core::iter::traits::iterator::Iterator>::next", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::seq::index_::IndexVecIter as core::iter::traits::iterator::Iterator>::size_hint", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::seq::iterator::test::ChunkHintedIterator as core::clone::Clone>::clone", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::seq::iterator::test::ChunkHintedIterator as core::iter::traits::iterator::Iterator>::next", "Argument[self].Field[rand::seq::iterator::test::ChunkHintedIterator::chunk_size]", "Argument[self].Field[rand::seq::iterator::test::ChunkHintedIterator::chunk_remaining]", "value", "dfc-generated"]
      - ["<rand::seq::iterator::test::ChunkHintedIterator as core::iter::traits::iterator::Iterator>::next", "Argument[self].Field[rand::seq::iterator::test::ChunkHintedIterator::iter].Element", "ReturnValue.Field[core::option::Option::Some(0)].Field[core::result::Result::Ok(0)]", "value", "dfc-generated"]
      - ["<rand::seq::iterator::test::ChunkHintedIterator as core::iter::traits::iterator::Iterator>::next", "Argument[self].Field[rand::seq::iterator::test::ChunkHintedIterator::iter].Element", "ReturnValue.Field[core::option::Option::Some(0)]", "value", "dfc-generated"]
      - ["<rand::seq::iterator::test::ChunkHintedIterator as core::iter::traits::iterator::Iterator>::size_hint", "Argument[self].Field[rand::seq::iterator::test::ChunkHintedIterator::chunk_remaining]", "ReturnValue.Field[0]", "value", "dfc-generated"]
      - ["<rand::seq::iterator::test::UnhintedIterator as core::iter::traits::iterator::Iterator>::next", "Argument[self].Field[rand::seq::iterator::test::UnhintedIterator::iter].Element", "ReturnValue.Field[core::option::Option::Some(0)].Field[core::result::Result::Ok(0)]", "value", "dfc-generated"]
      - ["<rand::seq::iterator::test::UnhintedIterator as core::iter::traits::iterator::Iterator>::next", "Argument[self].Field[rand::seq::iterator::test::UnhintedIterator::iter].Element", "ReturnValue.Field[core::option::Option::Some(0)]", "value", "dfc-generated"]
      - ["<rand::seq::iterator::test::WindowHintedIterator as core::clone::Clone>::clone", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand::seq::iterator::test::WindowHintedIterator as core::iter::traits::iterator::Iterator>::next", "Argument[self].Field[rand::seq::iterator::test::WindowHintedIterator::iter].Element", "ReturnValue.Field[core::option::Option::Some(0)].Field[core::result::Result::Ok(0)]", "value", "dfc-generated"]
      - ["<rand::seq::iterator::test::WindowHintedIterator as core::iter::traits::iterator::Iterator>::next", "Argument[self].Field[rand::seq::iterator::test::WindowHintedIterator::iter].Element", "ReturnValue.Field[core::option::Option::Some(0)]", "value", "dfc-generated"]
      - ["<rand::seq::iterator::test::WindowHintedIterator as core::iter::traits::iterator::Iterator>::size_hint", "Argument[self].Field[rand::seq::iterator::test::WindowHintedIterator::window_size]", "ReturnValue.Field[0]", "value", "dfc-generated"]
      - ["<rand::seq::slice::SliceChooseIter as core::iter::traits::iterator::Iterator>::next", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand_chacha::chacha::Array64 as core::convert::AsMut>::as_mut", "Argument[self].Field[0]", "ReturnValue.Reference", "value", "dfc-generated"]
      - ["<rand_chacha::chacha::Array64 as core::convert::AsMut>::as_mut", "Argument[self].Field[rand_chacha::chacha::Array64(0)]", "ReturnValue.Reference", "value", "dfc-generated"]
      - ["<rand_chacha::chacha::Array64 as core::convert::AsRef>::as_ref", "Argument[self].Field[0]", "ReturnValue.Reference", "value", "dfc-generated"]
      - ["<rand_chacha::chacha::Array64 as core::convert::AsRef>::as_ref", "Argument[self].Field[rand_chacha::chacha::Array64(0)]", "ReturnValue.Reference", "value", "dfc-generated"]
      - ["<rand_chacha::chacha::ChaCha12Core as core::clone::Clone>::clone", "Argument[self].Field[rand_chacha::chacha::ChaCha12Core::state].Field[rand_chacha::guts::ChaCha::b]", "ReturnValue.Field[rand_chacha::chacha::ChaCha12Core::state].Field[rand_chacha::guts::ChaCha::b]", "value", "dfc-generated"]
      - ["<rand_chacha::chacha::ChaCha12Core as core::clone::Clone>::clone", "Argument[self].Field[rand_chacha::chacha::ChaCha12Core::state].Field[rand_chacha::guts::ChaCha::c]", "ReturnValue.Field[rand_chacha::chacha::ChaCha12Core::state].Field[rand_chacha::guts::ChaCha::c]", "value", "dfc-generated"]
      - ["<rand_chacha::chacha::ChaCha12Core as core::clone::Clone>::clone", "Argument[self].Field[rand_chacha::chacha::ChaCha12Core::state].Field[rand_chacha::guts::ChaCha::d]", "ReturnValue.Field[rand_chacha::chacha::ChaCha12Core::state].Field[rand_chacha::guts::ChaCha::d]", "value", "dfc-generated"]
      - ["<rand_chacha::chacha::ChaCha12Rng as core::clone::Clone>::clone", "Argument[self].Field[rand_chacha::chacha::ChaCha12Rng::rng].Field[rand_core::block::BlockRng::index]", "ReturnValue.Field[rand_chacha::chacha::ChaCha12Rng::rng].Field[rand_core::block::BlockRng::index]", "value", "dfc-generated"]
      - ["<rand_chacha::chacha::ChaCha12Rng as core::convert::From>::from", "Argument[0]", "ReturnValue.Field[rand_chacha::chacha::ChaCha12Rng::rng].Field[rand_core::block::BlockRng::core]", "value", "dfc-generated"]
      - ["<rand_chacha::chacha::ChaCha12Rng as core::convert::From>::from", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["<rand_chacha::chacha::ChaCha12Rng>::get_word_pos", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand_chacha::chacha::ChaCha12Rng>::set_word_pos", "Argument[0]", "Argument[self]", "taint", "df-generated"]
      - ["<rand_chacha::chacha::ChaCha20Core as core::clone::Clone>::clone", "Argument[self].Field[rand_chacha::chacha::ChaCha20Core::state].Field[rand_chacha::guts::ChaCha::b]", "ReturnValue.Field[rand_chacha::chacha::ChaCha20Core::state].Field[rand_chacha::guts::ChaCha::b]", "value", "dfc-generated"]
      - ["<rand_chacha::chacha::ChaCha20Core as core::clone::Clone>::clone", "Argument[self].Field[rand_chacha::chacha::ChaCha20Core::state].Field[rand_chacha::guts::ChaCha::c]", "ReturnValue.Field[rand_chacha::chacha::ChaCha20Core::state].Field[rand_chacha::guts::ChaCha::c]", "value", "dfc-generated"]
      - ["<rand_chacha::chacha::ChaCha20Core as core::clone::Clone>::clone", "Argument[self].Field[rand_chacha::chacha::ChaCha20Core::state].Field[rand_chacha::guts::ChaCha::d]", "ReturnValue.Field[rand_chacha::chacha::ChaCha20Core::state].Field[rand_chacha::guts::ChaCha::d]", "value", "dfc-generated"]
      - ["<rand_chacha::chacha::ChaCha20Rng as core::clone::Clone>::clone", "Argument[self].Field[rand_chacha::chacha::ChaCha20Rng::rng].Field[rand_core::block::BlockRng::index]", "ReturnValue.Field[rand_chacha::chacha::ChaCha20Rng::rng].Field[rand_core::block::BlockRng::index]", "value", "dfc-generated"]
      - ["<rand_chacha::chacha::ChaCha20Rng as core::convert::From>::from", "Argument[0]", "ReturnValue.Field[rand_chacha::chacha::ChaCha20Rng::rng].Field[rand_core::block::BlockRng::core]", "value", "dfc-generated"]
      - ["<rand_chacha::chacha::ChaCha20Rng as core::convert::From>::from", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["<rand_chacha::chacha::ChaCha20Rng>::get_word_pos", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand_chacha::chacha::ChaCha20Rng>::set_word_pos", "Argument[0]", "Argument[self]", "taint", "df-generated"]
      - ["<rand_chacha::chacha::ChaCha8Core as core::clone::Clone>::clone", "Argument[self].Field[rand_chacha::chacha::ChaCha8Core::state].Field[rand_chacha::guts::ChaCha::b]", "ReturnValue.Field[rand_chacha::chacha::ChaCha8Core::state].Field[rand_chacha::guts::ChaCha::b]", "value", "dfc-generated"]
      - ["<rand_chacha::chacha::ChaCha8Core as core::clone::Clone>::clone", "Argument[self].Field[rand_chacha::chacha::ChaCha8Core::state].Field[rand_chacha::guts::ChaCha::c]", "ReturnValue.Field[rand_chacha::chacha::ChaCha8Core::state].Field[rand_chacha::guts::ChaCha::c]", "value", "dfc-generated"]
      - ["<rand_chacha::chacha::ChaCha8Core as core::clone::Clone>::clone", "Argument[self].Field[rand_chacha::chacha::ChaCha8Core::state].Field[rand_chacha::guts::ChaCha::d]", "ReturnValue.Field[rand_chacha::chacha::ChaCha8Core::state].Field[rand_chacha::guts::ChaCha::d]", "value", "dfc-generated"]
      - ["<rand_chacha::chacha::ChaCha8Rng as core::clone::Clone>::clone", "Argument[self].Field[rand_chacha::chacha::ChaCha8Rng::rng].Field[rand_core::block::BlockRng::index]", "ReturnValue.Field[rand_chacha::chacha::ChaCha8Rng::rng].Field[rand_core::block::BlockRng::index]", "value", "dfc-generated"]
      - ["<rand_chacha::chacha::ChaCha8Rng as core::convert::From>::from", "Argument[0]", "ReturnValue.Field[rand_chacha::chacha::ChaCha8Rng::rng].Field[rand_core::block::BlockRng::core]", "value", "dfc-generated"]
      - ["<rand_chacha::chacha::ChaCha8Rng as core::convert::From>::from", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["<rand_chacha::chacha::ChaCha8Rng>::get_word_pos", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand_chacha::chacha::ChaCha8Rng>::set_word_pos", "Argument[0]", "Argument[self]", "taint", "df-generated"]
      - ["<rand_chacha::chacha::abstract12::ChaCha12Rng as core::convert::From>::from", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["<rand_chacha::chacha::abstract20::ChaCha20Rng as core::convert::From>::from", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["<rand_chacha::chacha::abstract8::ChaCha8Rng as core::convert::From>::from", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["<rand_chacha::guts::ChaCha as core::clone::Clone>::clone", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand_core::UnwrapErr as rand_core::RngCore>::next_u32", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand_core::UnwrapErr as rand_core::RngCore>::next_u64", "Argument[self].Field[0].Field[rand::rngs::mock::StepRng::v]", "ReturnValue", "value", "dfc-generated"]
      - ["<rand_core::UnwrapErr as rand_core::RngCore>::next_u64", "Argument[self].Field[rand_core::UnwrapErr(0)].Field[rand::rngs::mock::StepRng::v]", "ReturnValue", "value", "dfc-generated"]
      - ["<rand_core::UnwrapMut as rand_core::RngCore>::next_u32", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand_core::UnwrapMut as rand_core::RngCore>::next_u64", "Argument[self].Field[0].Field[rand::rngs::mock::StepRng::v]", "ReturnValue", "value", "dfc-generated"]
      - ["<rand_core::UnwrapMut as rand_core::RngCore>::next_u64", "Argument[self].Field[rand_core::UnwrapMut(0)].Field[rand::rngs::mock::StepRng::v]", "ReturnValue", "value", "dfc-generated"]
      - ["<rand_core::UnwrapMut>::re", "Argument[self].Field[0]", "ReturnValue.Field[rand_core::UnwrapMut(0)]", "value", "dfc-generated"]
      - ["<rand_core::UnwrapMut>::re", "Argument[self].Field[rand_core::UnwrapMut(0)]", "ReturnValue.Field[rand_core::UnwrapMut(0)]", "value", "dfc-generated"]
      - ["<rand_core::block::BlockRng as core::clone::Clone>::clone", "Argument[self].Field[rand_core::block::BlockRng::index].Reference", "ReturnValue.Field[rand_core::block::BlockRng::index]", "value", "dfc-generated"]
      - ["<rand_core::block::BlockRng as core::clone::Clone>::clone", "Argument[self].Field[rand_core::block::BlockRng::index]", "ReturnValue.Field[rand_core::block::BlockRng::index].Reference", "value", "dfc-generated"]
      - ["<rand_core::block::BlockRng as core::clone::Clone>::clone", "Argument[self].Field[rand_core::block::BlockRng::index]", "ReturnValue.Field[rand_core::block::BlockRng::index]", "value", "dfc-generated"]
      - ["<rand_core::block::BlockRng64 as core::clone::Clone>::clone", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand_core::block::BlockRng64 as rand_core::RngCore>::next_u32", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand_core::block::BlockRng64>::generate_and_set", "Argument[0]", "Argument[self].Field[rand_core::block::BlockRng64::index]", "value", "dfc-generated"]
      - ["<rand_core::block::BlockRng64>::index", "Argument[self].Field[rand_core::block::BlockRng64::index]", "ReturnValue", "value", "dfc-generated"]
      - ["<rand_core::block::BlockRng64>::new", "Argument[0]", "ReturnValue.Field[rand_core::block::BlockRng64::core]", "value", "dfc-generated"]
      - ["<rand_core::block::BlockRng>::generate_and_set", "Argument[0]", "Argument[self].Field[rand_core::block::BlockRng::index]", "value", "dfc-generated"]
      - ["<rand_core::block::BlockRng>::index", "Argument[self].Field[rand_core::block::BlockRng::index]", "ReturnValue", "value", "dfc-generated"]
      - ["<rand_core::block::BlockRng>::new", "Argument[0]", "ReturnValue.Field[rand_core::block::BlockRng::core]", "value", "dfc-generated"]
      - ["<rand_core::block::test::DummyRng as core::clone::Clone>::clone", "Argument[self].Field[rand_core::block::test::DummyRng::counter].Reference", "ReturnValue.Field[rand_core::block::test::DummyRng::counter]", "value", "dfc-generated"]
      - ["<rand_core::block::test::DummyRng as core::clone::Clone>::clone", "Argument[self].Field[rand_core::block::test::DummyRng::counter]", "ReturnValue.Field[rand_core::block::test::DummyRng::counter].Reference", "value", "dfc-generated"]
      - ["<rand_core::block::test::DummyRng as core::clone::Clone>::clone", "Argument[self].Field[rand_core::block::test::DummyRng::counter]", "ReturnValue.Field[rand_core::block::test::DummyRng::counter]", "value", "dfc-generated"]
      - ["<rand_core::block::test::DummyRng64 as core::clone::Clone>::clone", "Argument[self].Field[rand_core::block::test::DummyRng64::counter].Reference", "ReturnValue.Field[rand_core::block::test::DummyRng64::counter]", "value", "dfc-generated"]
      - ["<rand_core::block::test::DummyRng64 as core::clone::Clone>::clone", "Argument[self].Field[rand_core::block::test::DummyRng64::counter]", "ReturnValue.Field[rand_core::block::test::DummyRng64::counter].Reference", "value", "dfc-generated"]
      - ["<rand_core::block::test::DummyRng64 as core::clone::Clone>::clone", "Argument[self].Field[rand_core::block::test::DummyRng64::counter]", "ReturnValue.Field[rand_core::block::test::DummyRng64::counter]", "value", "dfc-generated"]
      - ["<rand_core::os::OsError as core::clone::Clone>::clone", "Argument[self].Field[rand_core::os::OsError(0)].Reference", "ReturnValue.Field[rand_core::os::OsError(0)]", "value", "dfc-generated"]
      - ["<rand_core::os::OsError as core::clone::Clone>::clone", "Argument[self].Field[rand_core::os::OsError(0)]", "ReturnValue.Field[rand_core::os::OsError(0)]", "value", "dfc-generated"]
      - ["<rand_pcg::pcg128::Lcg128Xsl64 as core::clone::Clone>::clone", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand_pcg::pcg128::Lcg128Xsl64>::new", "Argument[0]", "ReturnValue.Field[rand_pcg::pcg128::Lcg128Xsl64::state]", "value", "dfc-generated"]
      - ["<rand_pcg::pcg128::Mcg128Xsl64 as core::clone::Clone>::clone", "Argument[self].Field[rand_pcg::pcg128::Mcg128Xsl64::state].Reference", "ReturnValue.Field[rand_pcg::pcg128::Mcg128Xsl64::state]", "value", "dfc-generated"]
      - ["<rand_pcg::pcg128::Mcg128Xsl64 as core::clone::Clone>::clone", "Argument[self].Field[rand_pcg::pcg128::Mcg128Xsl64::state]", "ReturnValue.Field[rand_pcg::pcg128::Mcg128Xsl64::state].Reference", "value", "dfc-generated"]
      - ["<rand_pcg::pcg128::Mcg128Xsl64 as core::clone::Clone>::clone", "Argument[self].Field[rand_pcg::pcg128::Mcg128Xsl64::state]", "ReturnValue.Field[rand_pcg::pcg128::Mcg128Xsl64::state]", "value", "dfc-generated"]
      - ["<rand_pcg::pcg128::Mcg128Xsl64>::new", "Argument[0]", "ReturnValue", "taint", "df-generated"]
      - ["<rand_pcg::pcg128cm::Lcg128CmDxsm64 as core::clone::Clone>::clone", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand_pcg::pcg128cm::Lcg128CmDxsm64>::new", "Argument[0]", "ReturnValue.Field[rand_pcg::pcg128cm::Lcg128CmDxsm64::state]", "value", "dfc-generated"]
      - ["<rand_pcg::pcg64::Lcg64Xsh32 as core::clone::Clone>::clone", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand_pcg::pcg64::Lcg64Xsh32 as rand_core::RngCore>::next_u64", "Argument[self]", "ReturnValue", "taint", "df-generated"]
      - ["<rand_pcg::pcg64::Lcg64Xsh32>::new", "Argument[0]", "ReturnValue.Field[rand_pcg::pcg64::Lcg64Xsh32::state]", "value", "dfc-generated"]
      - ["<seq_choose::UnhintedIterator as core::iter::traits::iterator::Iterator>::next", "Argument[self].Field[seq_choose::UnhintedIterator::iter].Element", "ReturnValue.Field[core::option::Option::Some(0)].Field[core::result::Result::Ok(0)]", "value", "dfc-generated"]
      - ["<seq_choose::UnhintedIterator as core::iter::traits::iterator::Iterator>::next", "Argument[self].Field[seq_choose::UnhintedIterator::iter].Element", "ReturnValue.Field[core::option::Option::Some(0)]", "value", "dfc-generated"]
      - ["<seq_choose::WindowHintedIterator as core::clone::Clone>::clone", "Argument[self].Field[seq_choose::WindowHintedIterator::window_size].Reference", "ReturnValue.Field[seq_choose::WindowHintedIterator::window_size]", "value", "dfc-generated"]
      - ["<seq_choose::WindowHintedIterator as core::clone::Clone>::clone", "Argument[self].Field[seq_choose::WindowHintedIterator::window_size]", "ReturnValue.Field[seq_choose::WindowHintedIterator::window_size].Reference", "value", "dfc-generated"]
      - ["<seq_choose::WindowHintedIterator as core::clone::Clone>::clone", "Argument[self].Field[seq_choose::WindowHintedIterator::window_size]", "ReturnValue.Field[seq_choose::WindowHintedIterator::window_size]", "value", "dfc-generated"]
      - ["<seq_choose::WindowHintedIterator as core::iter::traits::iterator::Iterator>::next", "Argument[self].Field[seq_choose::WindowHintedIterator::iter].Element", "ReturnValue.Field[core::option::Option::Some(0)].Field[core::result::Result::Ok(0)]", "value", "dfc-generated"]
      - ["<seq_choose::WindowHintedIterator as core::iter::traits::iterator::Iterator>::next", "Argument[self].Field[seq_choose::WindowHintedIterator::iter].Element", "ReturnValue.Field[core::option::Option::Some(0)]", "value", "dfc-generated"]
      - ["<seq_choose::WindowHintedIterator as core::iter::traits::iterator::Iterator>::size_hint", "Argument[self].Field[seq_choose::WindowHintedIterator::window_size]", "ReturnValue.Field[0]", "value", "dfc-generated"]
      - ["rand::seq::index_::sample", "Argument[2]", "ReturnValue", "taint", "df-generated"]
      - ["rand::test::rng", "Argument[0]", "ReturnValue.Field[rand_pcg::pcg64::Lcg64Xsh32::state]", "value", "dfc-generated"]
      - ["rand_chacha::guts::diagonalize", "Argument[0]", "ReturnValue", "value", "dfc-generated"]
      - ["rand_chacha::guts::round", "Argument[0]", "ReturnValue", "value", "dfc-generated"]
      - ["rand_chacha::guts::undiagonalize", "Argument[0]", "ReturnValue", "value", "dfc-generated"]
      - ["rand_core::impls::next_u64_via_u32", "Argument[0]", "ReturnValue", "taint", "df-generated"]
  - addsTo:
      pack: codeql/rust-all
      extensible: sinkModel
    data:
      - ["<rand::distr::distribution::Map as rand::distr::distribution::Distribution>::sample", "Argument[0]", "log-injection", "df-generated"]
      - ["<rand::distr::slice::Choose as rand::distr::distribution::Distribution>::sample", "Argument[0]", "log-injection", "df-generated"]
      - ["<rand::distr::weighted::weighted_index::WeightedIndex as core::clone::Clone>::clone", "Argument[self]", "log-injection", "df-generated"]
      - ["<rand::distr::weighted::weighted_index::WeightedIndex as core::clone::Clone>::clone", "Argument[self]", "pointer-access", "df-generated"]
      - ["<rand::distr::weighted::weighted_index::WeightedIndex>::total_weight", "Argument[self]", "log-injection", "df-generated"]
      - ["<rand::distr::weighted::weighted_index::WeightedIndex>::total_weight", "Argument[self]", "pointer-access", "df-generated"]
      - ["<rand::distr::weighted::weighted_index::WeightedIndex>::weight", "Argument[self]", "log-injection", "df-generated"]
      - ["<rand::distr::weighted::weighted_index::WeightedIndex>::weight", "Argument[self]", "pointer-access", "df-generated"]
      - ["<rand::distr::weighted::weighted_index::WeightedIndexIter as core::iter::traits::iterator::Iterator>::next", "Argument[self]", "log-injection", "df-generated"]
      - ["<rand::distr::weighted::weighted_index::WeightedIndexIter as core::iter::traits::iterator::Iterator>::next", "Argument[self]", "pointer-access", "df-generated"]
      - ["<rand::rngs::reseeding::ReseedingCore as core::clone::Clone>::clone", "Argument[self]", "log-injection", "df-generated"]
      - ["<rand::rngs::reseeding::ReseedingCore as core::clone::Clone>::clone", "Argument[self]", "pointer-access", "df-generated"]
      - ["<rand::rngs::reseeding::ReseedingRng as core::clone::Clone>::clone", "Argument[self]", "log-injection", "df-generated"]
      - ["<rand::rngs::reseeding::ReseedingRng as core::clone::Clone>::clone", "Argument[self]", "pointer-access", "df-generated"]
      - ["<rand::rngs::thread::ThreadRng as core::clone::Clone>::clone", "Argument[self]", "log-injection", "df-generated"]
      - ["<rand::rngs::thread::ThreadRng as core::clone::Clone>::clone", "Argument[self]", "pointer-access", "df-generated"]
      - ["<rand::seq::index_::IndexVecIntoIter as core::clone::Clone>::clone", "Argument[self]", "log-injection", "df-generated"]
      - ["<rand::seq::index_::IndexVecIntoIter as core::clone::Clone>::clone", "Argument[self]", "pointer-access", "df-generated"]
      - ["<rand::seq::iterator::test::ChunkHintedIterator as core::iter::traits::iterator::Iterator>::next", "Argument[self]", "log-injection", "df-generated"]
      - ["<rand::seq::iterator::test::ChunkHintedIterator as core::iter::traits::iterator::Iterator>::next", "Argument[self]", "pointer-access", "df-generated"]
      - ["<rand::seq::iterator::test::UnhintedIterator as core::iter::traits::iterator::Iterator>::next", "Argument[self]", "log-injection", "df-generated"]
      - ["<rand::seq::iterator::test::UnhintedIterator as core::iter::traits::iterator::Iterator>::next", "Argument[self]", "pointer-access", "df-generated"]
      - ["<rand::seq::iterator::test::WindowHintedIterator as core::iter::traits::iterator::Iterator>::next", "Argument[self]", "log-injection", "df-generated"]
      - ["<rand::seq::iterator::test::WindowHintedIterator as core::iter::traits::iterator::Iterator>::next", "Argument[self]", "pointer-access", "df-generated"]
      - ["<seq_choose::UnhintedIterator as core::iter::traits::iterator::Iterator>::next", "Argument[self]", "log-injection", "df-generated"]
      - ["<seq_choose::UnhintedIterator as core::iter::traits::iterator::Iterator>::next", "Argument[self]", "pointer-access", "df-generated"]
      - ["<seq_choose::WindowHintedIterator as core::iter::traits::iterator::Iterator>::next", "Argument[self]", "log-injection", "df-generated"]
      - ["<seq_choose::WindowHintedIterator as core::iter::traits::iterator::Iterator>::next", "Argument[self]", "pointer-access", "df-generated"]
      - ["rand::random_bool", "Argument[0]", "log-injection", "df-generated"]
      - ["rand::random_ratio", "Argument[0]", "log-injection", "df-generated"]
      - ["rand::random_ratio", "Argument[1]", "log-injection", "df-generated"]
