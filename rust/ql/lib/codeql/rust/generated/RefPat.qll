// generated by codegen
/**
 * This module provides the generated definition of `RefPat`.
 * INTERNAL: Do not import directly.
 */

private import codeql.rust.generated.Synth
private import codeql.rust.generated.Raw
import codeql.rust.generated.Pat::Generated as Pat_Gen
import codeql.rust.elements.Pat

/**
 * INTERNAL: This module contains the fully generated definition of `RefPat` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * INTERNAL: Do not reference the `Generated::RefPatImpl` class directly.
   * Use the subclass `RefPat`, where the following predicates are available.
   */
  class RefPatImpl extends Synth::TRefPat, PatImpl {
    override string getAPrimaryQlClass() { result = "RefPat" }

    /**
     * Gets the pat of this reference pat.
     */
    Pat getPat() {
      result = Synth::convertPatFromRaw(Synth::convertRefPatToRaw(this).(Raw::RefPat).getPat())
    }

    /**
     * Holds if this reference pat is mut.
     */
    predicate isMut() { Synth::convertRefPatToRaw(this).(Raw::RefPat).isMut() }
  }

  /**
   * INTERNAL: Do not reference the `Generated::RefPat` class directly.
   * Use the subclass `RefPat`, where the following predicates are available.
   */
  final class RefPat extends PatImpl { }
}
