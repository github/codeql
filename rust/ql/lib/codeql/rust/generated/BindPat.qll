// generated by codegen
/**
 * This module provides the generated definition of `BindPat`.
 * INTERNAL: Do not import directly.
 */

private import codeql.rust.generated.Synth
private import codeql.rust.generated.Raw
import codeql.rust.elements.Pat

/**
 * INTERNAL: This module contains the fully generated definition of `BindPat` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * INTERNAL: Do not reference the `Generated::BindPat` class directly.
   * Use the subclass `BindPat`, where the following predicates are available.
   */
  class BindPat extends Synth::TBindPat, Pat {
    override string getAPrimaryQlClass() { result = "BindPat" }

    /**
     * Gets the binding of this bind pat.
     */
    string getBindingId() {
      result = Synth::convertBindPatToRaw(this).(Raw::BindPat).getBindingId()
    }

    /**
     * Gets the subpat of this bind pat, if it exists.
     */
    Pat getSubpat() {
      result = Synth::convertPatFromRaw(Synth::convertBindPatToRaw(this).(Raw::BindPat).getSubpat())
    }

    /**
     * Holds if `getSubpat()` exists.
     */
    final predicate hasSubpat() { exists(this.getSubpat()) }
  }
}
