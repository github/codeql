// generated by codegen
/**
 * This module provides the generated definition of `Locatable`.
 * INTERNAL: Do not import directly.
 */

private import codeql.rust.generated.Synth
private import codeql.rust.generated.Raw
import codeql.rust.generated.Element::Generated as Element_Gen
import codeql.rust.generated.Location::Generated as Location_Gen
import codeql.rust.elements.Element
import codeql.rust.elements.Location

/**
 * INTERNAL: This module contains the fully generated definition of `Locatable` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * INTERNAL: Do not reference the `Generated::LocatableImpl` class directly.
   * Use the subclass `Locatable`, where the following predicates are available.
   */
  class LocatableImpl extends Synth::TLocatable, ElementImpl {
    /**
     * Gets the location of this locatable, if it exists.
     */
    Location getLocation() {
      result =
        Synth::convertLocationFromRaw(Synth::convertLocatableToRaw(this)
              .(Raw::Locatable)
              .getLocation())
    }

    /**
     * Holds if `getLocation()` exists.
     */
    final predicate hasLocation() { exists(this.getLocation()) }
  }

  /**
   * INTERNAL: Do not reference the `Generated::Locatable` class directly.
   * Use the subclass `Locatable`, where the following predicates are available.
   */
  final class Locatable extends ElementImpl { }
}
