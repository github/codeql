// generated by codegen
/**
 * This module provides the generated definition of `UnaryOpExpr`.
 * INTERNAL: Do not import directly.
 */

private import codeql.rust.generated.Synth
private import codeql.rust.generated.Raw
import codeql.rust.generated.Expr::Generated as Expr_Gen
import codeql.rust.elements.Expr

/**
 * INTERNAL: This module contains the fully generated definition of `UnaryOpExpr` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * INTERNAL: Do not reference the `Generated::UnaryOpExprImpl` class directly.
   * Use the subclass `UnaryOpExpr`, where the following predicates are available.
   */
  class UnaryOpExprImpl extends Synth::TUnaryOpExpr, ExprImpl {
    override string getAPrimaryQlClass() { result = "UnaryOpExpr" }

    /**
     * Gets the expression of this unary op expression.
     */
    Expr getExpr() {
      result =
        Synth::convertExprFromRaw(Synth::convertUnaryOpExprToRaw(this).(Raw::UnaryOpExpr).getExpr())
    }

    /**
     * Gets the op of this unary op expression.
     */
    string getOp() { result = Synth::convertUnaryOpExprToRaw(this).(Raw::UnaryOpExpr).getOp() }
  }

  /**
   * INTERNAL: Do not reference the `Generated::UnaryOpExpr` class directly.
   * Use the subclass `UnaryOpExpr`, where the following predicates are available.
   */
  final class UnaryOpExpr extends ExprImpl { }
}
