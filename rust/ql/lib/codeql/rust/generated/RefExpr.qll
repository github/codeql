// generated by codegen
/**
 * This module provides the generated definition of `RefExpr`.
 * INTERNAL: Do not import directly.
 */

private import codeql.rust.generated.Synth
private import codeql.rust.generated.Raw
import codeql.rust.elements.Expr

/**
 * INTERNAL: This module contains the fully generated definition of `RefExpr` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * INTERNAL: Do not reference the `Generated::RefExpr` class directly.
   * Use the subclass `RefExpr`, where the following predicates are available.
   */
  class RefExpr extends Synth::TRefExpr, Expr {
    override string getAPrimaryQlClass() { result = "RefExpr" }

    /**
     * Gets the expression of this reference expression.
     */
    Expr getExpr() {
      result = Synth::convertExprFromRaw(Synth::convertRefExprToRaw(this).(Raw::RefExpr).getExpr())
    }

    /**
     * Holds if this reference expression is raw.
     */
    predicate isRaw() { Synth::convertRefExprToRaw(this).(Raw::RefExpr).isRaw() }

    /**
     * Holds if this reference expression is mut.
     */
    predicate isMut() { Synth::convertRefExprToRaw(this).(Raw::RefExpr).isMut() }
  }
}
