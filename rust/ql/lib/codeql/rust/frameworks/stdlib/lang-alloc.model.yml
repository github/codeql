extensions:
  - addsTo:
      pack: codeql/rust-all
      extensible: sourceModel
    data:
      # Alloc
      - ["alloc::alloc::dealloc", "Argument[0]", "pointer-invalidate", "manual"]
  - addsTo:
      pack: codeql/rust-all
      extensible: sinkModel
    data:
      # Alloc
      - ["alloc::alloc::alloc", "Argument[0]", "alloc-layout", "manual"]
      - ["alloc::alloc::alloc_zeroed", "Argument[0]", "alloc-layout", "manual"]
      - ["alloc::alloc::realloc", "Argument[2]", "alloc-size", "manual"]
      - ["<_ as core::alloc::global::GlobalAlloc>::alloc", "Argument[0]", "alloc-layout", "manual"]
      - ["<std::alloc::System as core::alloc::global::GlobalAlloc>::alloc", "Argument[0]", "alloc-layout", "manual"]
      - ["<_ as core::alloc::global::GlobalAlloc>::alloc_zeroed", "Argument[0]", "alloc-layout", "manual"]
      - ["<std::alloc::System as core::alloc::global::GlobalAlloc>::alloc_zeroed", "Argument[0]", "alloc-layout", "manual"]
      - ["<std::alloc::System as core::alloc::Allocator>::allocate", "Argument[0]", "alloc-layout", "manual"]
      - ["<std::alloc::System as core::alloc::Allocator>::allocate_zeroed", "Argument[0]", "alloc-layout", "manual"]
      - ["<std::alloc::System as core::alloc::Allocator>::grow", "Argument[2]", "alloc-layout", "manual"]
      - ["<std::alloc::System as core::alloc::Allocator>::grow_zeroed", "Argument[2]", "alloc-layout", "manual"]
      - ["<alloc::alloc::Global as core::alloc::global::GlobalAlloc>::alloc", "Argument[0]", "alloc-layout", "manual"]
      - ["<alloc::alloc::Global as core::alloc::global::GlobalAlloc>::alloc_zeroed", "Argument[0]", "alloc-layout", "manual"]
      - ["<alloc::alloc::Global as core::alloc::Allocator>::allocate", "Argument[0]", "alloc-layout", "manual"]
      - ["<alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed", "Argument[0]", "alloc-layout", "manual"]
      - ["<alloc::alloc::Global as core::alloc::Allocator>::grow", "Argument[2]", "alloc-layout", "manual"]
      - ["<alloc::alloc::Global as core::alloc::Allocator>::grow_zeroed", "Argument[2]", "alloc-layout", "manual"]
  - addsTo:
      pack: codeql/rust-all
      extensible: summaryModel
    data:
      # Box
      - ["<alloc::boxed::Box>::pin", "Argument[0]", "ReturnValue.Reference", "value", "manual"]
      - ["<alloc::boxed::Box>::new", "Argument[0]", "ReturnValue.Reference", "value", "manual"]
      - ["<alloc::boxed::Box>::into_pin", "Argument[0]", "ReturnValue", "value", "manual"]
      # Fmt
      - ["alloc::fmt::format", "Argument[0]", "ReturnValue", "taint", "manual"]
      # String
      - ["<core::str>::as_str", "Argument[self]", "ReturnValue", "value", "manual"]
      - ["<core::str>::as_bytes", "Argument[self]", "ReturnValue", "value", "manual"]
      - ["<alloc::string::String>::as_str", "Argument[self]", "ReturnValue", "value", "manual"]
      - ["<alloc::string::String>::as_bytes", "Argument[self]", "ReturnValue", "value", "manual"]
      - ["<alloc::str as alloc::string::ToString>::to_string", "Argument[self]", "ReturnValue", "taint", "manual"]
      - ["<alloc::string::String as alloc::string::ToString>::to_string", "Argument[self]", "ReturnValue", "taint", "manual"]
      - ["<core::str>::parse", "Argument[self]", "ReturnValue.Field[core::result::Result::Ok(0)]", "taint", "manual"]
      - ["<core::str>::trim", "Argument[self]", "ReturnValue.Reference", "taint", "manual"]
      - ["<alloc::string::String as core::convert::From>::from", "Argument[0]", "ReturnValue", "value", "manual"]
