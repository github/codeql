extensions:
  - addsTo:
      pack: codeql/rust-all
      extensible: sourceModel
    data:
      - ["std::fs::read", "ReturnValue.Field[core::result::Result::Ok(0)]", "file", "manual"]
      - ["std::fs::read_to_string", "ReturnValue.Field[core::result::Result::Ok(0)]", "file", "manual"]
      - ["std::fs::read_link", "ReturnValue.Field[core::result::Result::Ok(0)]", "file", "manual"]
      - ["<std::fs::DirEntry>::path", "ReturnValue", "file", "manual"]
      - ["<std::fs::DirEntry>::file_name", "ReturnValue", "file", "manual"]
      - ["<std::fs::File>::open", "ReturnValue.Field[core::result::Result::Ok(0)]", "file", "manual"]
      - ["<std::fs::File>::open_buffered", "ReturnValue.Field[core::result::Result::Ok(0)]", "file", "manual"]
  - addsTo:
      pack: codeql/rust-all
      extensible: sinkModel
    data:
      - ["std::fs::copy", "Argument[0]", "path-injection", "manual"]
      - ["std::fs::copy", "Argument[1]", "path-injection", "manual"]
      - ["std::fs::create_dir", "Argument[0]", "path-injection", "manual"]
      - ["std::fs::create_dir_all", "Argument[0]", "path-injection", "manual"]
      - ["std::fs::hard_link", "Argument[0]", "path-injection", "manual"]
      - ["std::fs::hard_link", "Argument[1]", "path-injection", "manual"]
      - ["std::fs::metadata", "Argument[0]", "path-injection", "manual"]
      - ["std::fs::read", "Argument[0]", "path-injection", "manual"]
      - ["std::fs::read_dir", "Argument[0]", "path-injection", "manual"]
      - ["std::fs::read_link", "Argument[0]", "path-injection", "manual"]
      - ["std::fs::read_to_string", "Argument[0]", "path-injection", "manual"]
      - ["std::fs::remove_dir", "Argument[0]", "path-injection", "manual"]
      - ["std::fs::remove_dir_all", "Argument[0]", "path-injection", "manual"]
      - ["std::fs::remove_file", "Argument[0]", "path-injection", "manual"]
      - ["std::fs::rename", "Argument[0]", "path-injection", "manual"]
      - ["std::fs::rename", "Argument[1]", "path-injection", "manual"]
      - ["std::fs::set_permissions", "Argument[0]", "path-injection", "manual"]
      - ["std::fs::soft_link", "Argument[0]", "path-injection", "manual"]
      - ["std::fs::soft_link", "Argument[1]", "path-injection", "manual"]
      - ["std::fs::symlink_metadata", "Argument[0]", "path-injection", "manual"]
      - ["std::fs::write", "Argument[0]", "path-injection", "manual"]
      - ["<std::fs::DirBuilder>::create", "Argument[0]", "path-injection", "manual"]
      - ["<std::fs::File>::create", "Argument[0]", "path-injection", "manual"]
      - ["<std::fs::File>::create_buffered", "Argument[0]", "path-injection", "manual"]
      - ["<std::fs::File>::create_new", "Argument[0]", "path-injection", "manual"]
      - ["<std::fs::File>::open", "Argument[0]", "path-injection", "manual"]
      - ["<std::fs::File>::open_buffered", "Argument[0]", "path-injection", "manual"]
  - addsTo:
      pack: codeql/rust-all
      extensible: summaryModel
    data:
      - ["<std::path::PathBuf as core::convert::From>::from", "Argument[0]", "ReturnValue", "taint", "manual"]
      - ["<std::path::Path>::join", "Argument[self]", "ReturnValue", "taint", "manual"]
      - ["<std::path::Path>::join", "Argument[0]", "ReturnValue", "taint", "manual"]
      - ["<std::path::Path>::canonicalize", "Argument[self].OptionalStep[normalize-path]", "ReturnValue.Field[core::result::Result::Ok(0)]", "taint", "manual"]
      - ["<std::path::Path>::canonicalize", "Argument[self].OptionalBarrier[normalize-path]", "ReturnValue.Field[core::result::Result::Ok(0)]", "taint", "manual"]
