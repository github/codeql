// generated by codegen, do not edit
/**
 * This module provides the generated definition of `MissingExpr`.
 * INTERNAL: Do not import directly.
 */

private import codeql.rust.elements.internal.generated.Synth
private import codeql.rust.elements.internal.generated.Raw
import codeql.rust.elements.internal.ExprImpl::Impl as ExprImpl
import codeql.rust.elements.internal.MissingImpl::Impl as MissingImpl

/**
 * INTERNAL: This module contains the fully generated definition of `MissingExpr` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * A missing expression, used as a placeholder for incomplete syntax.
   *
   * ```rust
   * let x = non_existing_macro!();
   * ```
   * INTERNAL: Do not reference the `Generated::MissingExpr` class directly.
   * Use the subclass `MissingExpr`, where the following predicates are available.
   */
  class MissingExpr extends Synth::TMissingExpr, ExprImpl::Expr, MissingImpl::Missing {
    override string getAPrimaryQlClass() { result = "MissingExpr" }
  }
}
