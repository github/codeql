// generated by codegen, do not edit
/**
 * This module provides the generated definition of `BoxExpr`.
 * INTERNAL: Do not import directly.
 */

private import codeql.rust.elements.internal.generated.Synth
private import codeql.rust.elements.internal.generated.Raw
import codeql.rust.elements.Expr
import codeql.rust.elements.internal.ExprImpl::Impl as ExprImpl

/**
 * INTERNAL: This module contains the fully generated definition of `BoxExpr` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * A box expression. For example:
   * ```rust
   * let x = #[rustc_box] Box::new(42);
   * ```
   * INTERNAL: Do not reference the `Generated::BoxExpr` class directly.
   * Use the subclass `BoxExpr`, where the following predicates are available.
   */
  class BoxExpr extends Synth::TBoxExpr, ExprImpl::Expr {
    override string getAPrimaryQlClass() { result = "BoxExpr" }

    /**
     * Gets the expression of this box expression.
     */
    Expr getExpr() {
      result = Synth::convertExprFromRaw(Synth::convertBoxExprToRaw(this).(Raw::BoxExpr).getExpr())
    }
  }
}
