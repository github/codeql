// generated by codegen, do not edit
/**
 * This module provides the generated definition of `UnsafeBlockExpr`.
 * INTERNAL: Do not import directly.
 */

private import codeql.rust.elements.internal.generated.Synth
private import codeql.rust.elements.internal.generated.Raw
import codeql.rust.elements.internal.BlockExprBaseImpl::Impl as BlockExprBaseImpl

/**
 * INTERNAL: This module contains the fully generated definition of `UnsafeBlockExpr` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * An unsafe block expression. For example:
   * ```rust
   * let layout = unsafe {
   *     let x = 42;
   *     Layout::from_size_align_unchecked(size, align)
   * };
   * ```
   * INTERNAL: Do not reference the `Generated::UnsafeBlockExpr` class directly.
   * Use the subclass `UnsafeBlockExpr`, where the following predicates are available.
   */
  class UnsafeBlockExpr extends Synth::TUnsafeBlockExpr, BlockExprBaseImpl::BlockExprBase {
    override string getAPrimaryQlClass() { result = "UnsafeBlockExpr" }
  }
}
