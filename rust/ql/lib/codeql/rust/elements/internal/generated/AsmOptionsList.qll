// generated by codegen, do not edit
/**
 * This module provides the generated definition of `AsmOptionsList`.
 * INTERNAL: Do not import directly.
 */

private import codeql.rust.elements.internal.generated.Synth
private import codeql.rust.elements.internal.generated.Raw
import codeql.rust.elements.AsmOption
import codeql.rust.elements.internal.AsmPieceImpl::Impl as AsmPieceImpl

/**
 * INTERNAL: This module contains the fully generated definition of `AsmOptionsList` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * INTERNAL: Do not reference the `Generated::AsmOptionsList` class directly.
   * Use the subclass `AsmOptionsList`, where the following predicates are available.
   */
  class AsmOptionsList extends Synth::TAsmOptionsList, AsmPieceImpl::AsmPiece {
    override string getAPrimaryQlClass() { result = "AsmOptionsList" }

    /**
     * Gets the `index`th asm option of this asm options list (0-based).
     */
    AsmOption getAsmOption(int index) {
      result =
        Synth::convertAsmOptionFromRaw(Synth::convertAsmOptionsListToRaw(this)
              .(Raw::AsmOptionsList)
              .getAsmOption(index))
    }

    /**
     * Gets any of the asm options of this asm options list.
     */
    final AsmOption getAnAsmOption() { result = this.getAsmOption(_) }

    /**
     * Gets the number of asm options of this asm options list.
     */
    final int getNumberOfAsmOptions() { result = count(int i | exists(this.getAsmOption(i))) }
  }
}
