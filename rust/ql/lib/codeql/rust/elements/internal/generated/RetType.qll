// generated by codegen, do not edit
/**
 * This module provides the generated definition of `RetType`.
 * INTERNAL: Do not import directly.
 */

private import codeql.rust.elements.internal.generated.Synth
private import codeql.rust.elements.internal.generated.Raw
import codeql.rust.elements.internal.AstNodeImpl::Impl as AstNodeImpl
import codeql.rust.elements.TypeRef

/**
 * INTERNAL: This module contains the fully generated definition of `RetType` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * A RetType. For example:
   * ```rust
   * todo!()
   * ```
   * INTERNAL: Do not reference the `Generated::RetType` class directly.
   * Use the subclass `RetType`, where the following predicates are available.
   */
  class RetType extends Synth::TRetType, AstNodeImpl::AstNode {
    override string getAPrimaryQlClass() { result = "RetType" }

    /**
     * Gets the ty of this ret type, if it exists.
     */
    TypeRef getTy() {
      result = Synth::convertTypeRefFromRaw(Synth::convertRetTypeToRaw(this).(Raw::RetType).getTy())
    }

    /**
     * Holds if `getTy()` exists.
     */
    final predicate hasTy() { exists(this.getTy()) }
  }
}
