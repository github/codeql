// generated by codegen, do not edit
/**
 * This module provides the generated definition of `ExternBlock`.
 * INTERNAL: Do not import directly.
 */

private import codeql.rust.elements.internal.generated.Synth
private import codeql.rust.elements.internal.generated.Raw
import codeql.rust.elements.Abi
import codeql.rust.elements.Attr
import codeql.rust.elements.ExternItemList
import codeql.rust.elements.internal.ItemImpl::Impl as ItemImpl

/**
 * INTERNAL: This module contains the fully generated definition of `ExternBlock` and should not
 * be referenced directly.
 */
module Generated {
  /**
   * A ExternBlock. For example:
   * ```rust
   * todo!()
   * ```
   * INTERNAL: Do not reference the `Generated::ExternBlock` class directly.
   * Use the subclass `ExternBlock`, where the following predicates are available.
   */
  class ExternBlock extends Synth::TExternBlock, ItemImpl::Item {
    override string getAPrimaryQlClass() { result = "ExternBlock" }

    /**
     * Gets the abi of this extern block, if it exists.
     */
    Abi getAbi() {
      result =
        Synth::convertAbiFromRaw(Synth::convertExternBlockToRaw(this).(Raw::ExternBlock).getAbi())
    }

    /**
     * Holds if `getAbi()` exists.
     */
    final predicate hasAbi() { exists(this.getAbi()) }

    /**
     * Gets the `index`th attr of this extern block (0-based).
     */
    Attr getAttr(int index) {
      result =
        Synth::convertAttrFromRaw(Synth::convertExternBlockToRaw(this)
              .(Raw::ExternBlock)
              .getAttr(index))
    }

    /**
     * Gets any of the attrs of this extern block.
     */
    final Attr getAnAttr() { result = this.getAttr(_) }

    /**
     * Gets the number of attrs of this extern block.
     */
    final int getNumberOfAttrs() { result = count(int i | exists(this.getAttr(i))) }

    /**
     * Gets the extern item list of this extern block, if it exists.
     */
    ExternItemList getExternItemList() {
      result =
        Synth::convertExternItemListFromRaw(Synth::convertExternBlockToRaw(this)
              .(Raw::ExternBlock)
              .getExternItemList())
    }

    /**
     * Holds if `getExternItemList()` exists.
     */
    final predicate hasExternItemList() { exists(this.getExternItemList()) }
  }
}
