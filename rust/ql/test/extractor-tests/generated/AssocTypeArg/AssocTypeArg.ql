// generated by codegen, do not edit
import codeql.rust.elements
import TestUtils

query predicate instances(AssocTypeArg x) { toBeTested(x) and not x.isUnknown() }

query predicate getConstArg(AssocTypeArg x, ConstArg getConstArg) {
  toBeTested(x) and not x.isUnknown() and getConstArg = x.getConstArg()
}

query predicate getGenericArgList(AssocTypeArg x, GenericArgList getGenericArgList) {
  toBeTested(x) and not x.isUnknown() and getGenericArgList = x.getGenericArgList()
}

query predicate getIdentifier(AssocTypeArg x, NameRef getIdentifier) {
  toBeTested(x) and not x.isUnknown() and getIdentifier = x.getIdentifier()
}

query predicate getParamList(AssocTypeArg x, ParamList getParamList) {
  toBeTested(x) and not x.isUnknown() and getParamList = x.getParamList()
}

query predicate getRetType(AssocTypeArg x, RetTypeRepr getRetType) {
  toBeTested(x) and not x.isUnknown() and getRetType = x.getRetType()
}

query predicate getReturnTypeSyntax(AssocTypeArg x, ReturnTypeSyntax getReturnTypeSyntax) {
  toBeTested(x) and not x.isUnknown() and getReturnTypeSyntax = x.getReturnTypeSyntax()
}

query predicate getTypeRepr(AssocTypeArg x, TypeRepr getTypeRepr) {
  toBeTested(x) and not x.isUnknown() and getTypeRepr = x.getTypeRepr()
}

query predicate getTypeBoundList(AssocTypeArg x, TypeBoundList getTypeBoundList) {
  toBeTested(x) and not x.isUnknown() and getTypeBoundList = x.getTypeBoundList()
}
