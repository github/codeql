// generated by codegen, do not edit
import codeql.rust.elements
import TestUtils

query predicate instances(MacroDef x) { toBeTested(x) and not x.isUnknown() }

query predicate getExtendedCanonicalPath(MacroDef x, string getExtendedCanonicalPath) {
  toBeTested(x) and not x.isUnknown() and getExtendedCanonicalPath = x.getExtendedCanonicalPath()
}

query predicate getCrateOrigin(MacroDef x, string getCrateOrigin) {
  toBeTested(x) and not x.isUnknown() and getCrateOrigin = x.getCrateOrigin()
}

query predicate getAttributeMacroExpansion(MacroDef x, MacroItems getAttributeMacroExpansion) {
  toBeTested(x) and
  not x.isUnknown() and
  getAttributeMacroExpansion = x.getAttributeMacroExpansion()
}

query predicate getArgs(MacroDef x, TokenTree getArgs) {
  toBeTested(x) and not x.isUnknown() and getArgs = x.getArgs()
}

query predicate getAttr(MacroDef x, int index, Attr getAttr) {
  toBeTested(x) and not x.isUnknown() and getAttr = x.getAttr(index)
}

query predicate getBody(MacroDef x, TokenTree getBody) {
  toBeTested(x) and not x.isUnknown() and getBody = x.getBody()
}

query predicate getName(MacroDef x, Name getName) {
  toBeTested(x) and not x.isUnknown() and getName = x.getName()
}

query predicate getVisibility(MacroDef x, Visibility getVisibility) {
  toBeTested(x) and not x.isUnknown() and getVisibility = x.getVisibility()
}
