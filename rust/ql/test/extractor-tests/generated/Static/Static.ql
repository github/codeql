// generated by codegen, do not edit
import codeql.rust.elements
import TestUtils

query predicate instances(
  Static x, string isMut__label, string isMut, string isStatic__label, string isStatic,
  string isUnsafe__label, string isUnsafe
) {
  toBeTested(x) and
  not x.isUnknown() and
  isMut__label = "isMut:" and
  (if x.isMut() then isMut = "yes" else isMut = "no") and
  isStatic__label = "isStatic:" and
  (if x.isStatic() then isStatic = "yes" else isStatic = "no") and
  isUnsafe__label = "isUnsafe:" and
  if x.isUnsafe() then isUnsafe = "yes" else isUnsafe = "no"
}

query predicate getExtendedCanonicalPath(Static x, string getExtendedCanonicalPath) {
  toBeTested(x) and not x.isUnknown() and getExtendedCanonicalPath = x.getExtendedCanonicalPath()
}

query predicate getCrateOrigin(Static x, string getCrateOrigin) {
  toBeTested(x) and not x.isUnknown() and getCrateOrigin = x.getCrateOrigin()
}

query predicate getAttributeMacroExpansion(Static x, MacroItems getAttributeMacroExpansion) {
  toBeTested(x) and
  not x.isUnknown() and
  getAttributeMacroExpansion = x.getAttributeMacroExpansion()
}

query predicate getAttr(Static x, int index, Attr getAttr) {
  toBeTested(x) and not x.isUnknown() and getAttr = x.getAttr(index)
}

query predicate getBody(Static x, Expr getBody) {
  toBeTested(x) and not x.isUnknown() and getBody = x.getBody()
}

query predicate getName(Static x, Name getName) {
  toBeTested(x) and not x.isUnknown() and getName = x.getName()
}

query predicate getTypeRepr(Static x, TypeRepr getTypeRepr) {
  toBeTested(x) and not x.isUnknown() and getTypeRepr = x.getTypeRepr()
}

query predicate getVisibility(Static x, Visibility getVisibility) {
  toBeTested(x) and not x.isUnknown() and getVisibility = x.getVisibility()
}
