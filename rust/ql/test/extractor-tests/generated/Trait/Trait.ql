// generated by codegen, do not edit
import codeql.rust.elements
import TestUtils

query predicate instances(
  Trait x, string isAuto__label, string isAuto, string isUnsafe__label, string isUnsafe
) {
  toBeTested(x) and
  not x.isUnknown() and
  isAuto__label = "isAuto:" and
  (if x.isAuto() then isAuto = "yes" else isAuto = "no") and
  isUnsafe__label = "isUnsafe:" and
  if x.isUnsafe() then isUnsafe = "yes" else isUnsafe = "no"
}

query predicate getExtendedCanonicalPath(Trait x, string getExtendedCanonicalPath) {
  toBeTested(x) and not x.isUnknown() and getExtendedCanonicalPath = x.getExtendedCanonicalPath()
}

query predicate getCrateOrigin(Trait x, string getCrateOrigin) {
  toBeTested(x) and not x.isUnknown() and getCrateOrigin = x.getCrateOrigin()
}

query predicate getAttributeMacroExpansion(Trait x, MacroItems getAttributeMacroExpansion) {
  toBeTested(x) and
  not x.isUnknown() and
  getAttributeMacroExpansion = x.getAttributeMacroExpansion()
}

query predicate getAssocItemList(Trait x, AssocItemList getAssocItemList) {
  toBeTested(x) and not x.isUnknown() and getAssocItemList = x.getAssocItemList()
}

query predicate getAttr(Trait x, int index, Attr getAttr) {
  toBeTested(x) and not x.isUnknown() and getAttr = x.getAttr(index)
}

query predicate getGenericParamList(Trait x, GenericParamList getGenericParamList) {
  toBeTested(x) and not x.isUnknown() and getGenericParamList = x.getGenericParamList()
}

query predicate getName(Trait x, Name getName) {
  toBeTested(x) and not x.isUnknown() and getName = x.getName()
}

query predicate getTypeBoundList(Trait x, TypeBoundList getTypeBoundList) {
  toBeTested(x) and not x.isUnknown() and getTypeBoundList = x.getTypeBoundList()
}

query predicate getVisibility(Trait x, Visibility getVisibility) {
  toBeTested(x) and not x.isUnknown() and getVisibility = x.getVisibility()
}

query predicate getWhereClause(Trait x, WhereClause getWhereClause) {
  toBeTested(x) and not x.isUnknown() and getWhereClause = x.getWhereClause()
}
