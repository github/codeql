// generated by codegen, do not edit
import codeql.rust.elements
import TestUtils

query predicate instances(TypeAlias x, string isDefault__label, string isDefault) {
  toBeTested(x) and
  not x.isUnknown() and
  isDefault__label = "isDefault:" and
  if x.isDefault() then isDefault = "yes" else isDefault = "no"
}

query predicate getExtendedCanonicalPath(TypeAlias x, string getExtendedCanonicalPath) {
  toBeTested(x) and not x.isUnknown() and getExtendedCanonicalPath = x.getExtendedCanonicalPath()
}

query predicate getCrateOrigin(TypeAlias x, string getCrateOrigin) {
  toBeTested(x) and not x.isUnknown() and getCrateOrigin = x.getCrateOrigin()
}

query predicate getAttributeMacroExpansion(TypeAlias x, MacroItems getAttributeMacroExpansion) {
  toBeTested(x) and
  not x.isUnknown() and
  getAttributeMacroExpansion = x.getAttributeMacroExpansion()
}

query predicate getAttr(TypeAlias x, int index, Attr getAttr) {
  toBeTested(x) and not x.isUnknown() and getAttr = x.getAttr(index)
}

query predicate getGenericParamList(TypeAlias x, GenericParamList getGenericParamList) {
  toBeTested(x) and not x.isUnknown() and getGenericParamList = x.getGenericParamList()
}

query predicate getName(TypeAlias x, Name getName) {
  toBeTested(x) and not x.isUnknown() and getName = x.getName()
}

query predicate getTypeRepr(TypeAlias x, TypeRepr getTypeRepr) {
  toBeTested(x) and not x.isUnknown() and getTypeRepr = x.getTypeRepr()
}

query predicate getTypeBoundList(TypeAlias x, TypeBoundList getTypeBoundList) {
  toBeTested(x) and not x.isUnknown() and getTypeBoundList = x.getTypeBoundList()
}

query predicate getVisibility(TypeAlias x, Visibility getVisibility) {
  toBeTested(x) and not x.isUnknown() and getVisibility = x.getVisibility()
}

query predicate getWhereClause(TypeAlias x, WhereClause getWhereClause) {
  toBeTested(x) and not x.isUnknown() and getWhereClause = x.getWhereClause()
}
