extensions:
  - addsTo:
      pack: codeql/rust-all
      extensible: sourceModel
    data:
      - ["main::simple_source", "ReturnValue", "test-source", "manual"]
      - ["main::enum_source", "ReturnValue.Field[main::MyFieldEnum::D::field_d]", "test-source", "manual"]
      - ["<main::MyFieldEnum>::source", "ReturnValue.Field[main::MyFieldEnum::C::field_c]", "test-source", "manual"]
      - ["main::arg_source", "Argument[0]", "test-source", "manual"]
  - addsTo:
      pack: codeql/rust-all
      extensible: sinkModel
    data:
      - ["main::simple_sink", "Argument[0]", "test-sink", "manual"]
      - ["main::enum_sink", "Argument[0].Field[main::MyFieldEnum::C::field_c]", "test-sink", "manual"]
      - ["<main::MyFieldEnum>::sink", "Argument[self].Field[main::MyFieldEnum::D::field_d]", "test-sink", "manual"]
  - addsTo:
      pack: codeql/rust-all
      extensible: summaryModel
    data:
      - ["main::coerce", "Argument[0]", "ReturnValue", "taint", "manual"]
      - ["main::get_var_pos", "Argument[0].Field[main::MyPosEnum::A(0)]", "ReturnValue", "value", "manual"]
      - ["main::set_var_pos", "Argument[0]", "ReturnValue.Field[main::MyPosEnum::B(0)]", "value", "manual"]
      - ["main::get_var_field", "Argument[0].Field[main::MyFieldEnum::C::field_c]", "ReturnValue", "value", "manual"]
      - ["main::set_var_field", "Argument[0]", "ReturnValue.Field[main::MyFieldEnum::D::field_d]", "value", "manual"]
      - ["main::get_struct_field", "Argument[0].Field[main::MyStruct::field1]", "ReturnValue", "value", "manual"]
      - ["main::set_struct_field", "Argument[0]", "ReturnValue.Field[main::MyStruct::field2]", "value", "manual"]
      - ["main::get_array_element", "Argument[0].Element", "ReturnValue", "value", "manual"]
      - ["main::set_array_element", "Argument[0]", "ReturnValue.Element", "value", "manual"]
      - ["main::get_tuple_element", "Argument[0].Field[0]", "ReturnValue", "value", "manual"]
      - ["main::set_tuple_element", "Argument[0]", "ReturnValue.Field[1]", "value", "manual"]
      - ["main::apply", "Argument[0]", "Argument[1].Parameter[0]", "value", "manual"]
      - ["main::apply", "Argument[1].ReturnValue", "ReturnValue", "value", "manual"]
      - ["main::get_async_number", "Argument[0]", "ReturnValue.Future", "value", "manual"]
      - ["<_ as core::cmp::Ord>::max", "Argument[self]", "ReturnValue", "value", "manual"]
      - ["<_ as core::cmp::PartialOrd>::lt", "Argument[self].Reference", "ReturnValue", "taint", "manual"]
