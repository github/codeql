extensions:
  - addsTo: 
      pack: codeql/javascript-all
      extensible: typeModel
    data:
      - [events, "pg-cursor", "", manual]
      - [events, "pg-promise/pg-subset.pg.IClient", "", manual]
      - [events, "pg-promise/pg-subset.pg.IConnection", "", manual]
      - [events, "pg-promise/pg-subset.pg.IPool", "", manual]
      - [events, pg.ClientBase, "", manual]
      - [events, pg.Events, "", manual]
      - [events, pg.Pool, "", manual]
      - [global.NodeJS.EventEmitter, events, "", manual]
      - ["pg-cursor.Static", "pg-cursor", "", manual]
      - ["pg-cursor", "pg-cursor.Static", Instance, manual]
      - ["pg-pool.Static", "pg-pool", "", manual]
      - ["pg-pool", "pg-pool.Static", Instance, manual]
      - ["pg-pool", "pg-pool", "Member[addListener,on,once,prependListener,prependOnceListener, manual].ReturnValue", manual]
      - ["pg-promise.IBaseProtocol", "pg-promise.IConnected", "", manual]
      - ["pg-promise.IBaseProtocol", "pg-promise.IDatabase", "", manual]
      - ["pg-promise.IBaseProtocol", "pg-promise.ITask", "", manual]
      - ["pg-promise.IBaseProtocol", "pg-promise/typescript/pg-promise.IBaseProtocol", "", manual]
      - ["pg-promise.IConnected", "pg-promise.IDatabase", "Member[connect, manual].ReturnValue.Awaited", manual]
      - ["pg-promise.IConnected", "pg-promise/typescript/pg-promise.IConnected", "", manual]
      - ["pg-promise.IDatabase", "pg-promise.IInitOptions", "Member[extend, manual].Argument[0, manual]", manual]
      - ["pg-promise.IDatabase", "pg-promise.IMain", ReturnValue, manual]
      - ["pg-promise.IDatabase", "pg-promise/typescript/pg-promise.IDatabase", "", manual]
      - ["pg-promise.IInitOptions", "pg-promise.ILibConfig", "Member[options, manual]", manual]
      - ["pg-promise.IInitOptions", "pg-promise/typescript/pg-promise.IInitOptions", "", manual]
      - ["pg-promise.IInitOptions", "pg-promise", "Argument[0, manual]", manual]
      - ["pg-promise.ILibConfig", "pg-promise.IDatabase", "Member[$config, manual]", manual]
      - ["pg-promise.ILibConfig", "pg-promise/typescript/pg-promise.ILibConfig", "", manual]
      - ["pg-promise.IMain", "pg-promise.ILibConfig", "Member[pgp, manual]", manual]
      - ["pg-promise.IMain", "pg-promise/typescript/pg-promise.IMain", "", manual]
      - ["pg-promise.IMain", "pg-promise", ReturnValue, manual]
      - ["pg-promise.ITask", "pg-promise.IBaseProtocol", "Member[task,taskIf,tx,txIf, manual].Argument[1, manual].Argument[0, manual]", manual]
      - ["pg-promise.ITask", "pg-promise.IBaseProtocol", "Member[task,taskIf,tx,txIf, manual].WithArity[1, manual].Argument[0, manual].Argument[0, manual]", manual]
      - ["pg-promise.ITask", "pg-promise.IBaseProtocol", "Member[taskIf, manual].WithArity[2, manual].Argument[0, manual].Member[cnd, manual].Argument[0, manual]", manual]
      - ["pg-promise.ITask", "pg-promise.IBaseProtocol", "Member[txIf, manual].WithArity[2, manual].Argument[0, manual].Member[cnd,reusable, manual].Argument[0, manual]", manual]
      - ["pg-promise.ITask", "pg-promise/typescript/pg-promise.ITask", "", manual]
      - ["pg-promise/pg-subset.pg.IClient", "pg-promise.IMain", "Argument[0, manual].TypeVar[pg-promise/pg-subset.pg.IConnectionParameters.0, manual]", manual]
      - ["pg-promise/pg-subset.pg.IClient", "pg-promise.IMain", "ReturnValue.TypeVar[pg-promise.IDatabase.1, manual]", manual]
      - ["pg-promise/pg-subset.pg.IClient", "pg-promise/pg-subset", "Member[Client, manual].Instance", manual]
      - ["pg-promise/pg-subset.pg.IClient", "pg-promise", "Argument[0, manual].TypeVar[pg-promise.IInitOptions.1, manual]", manual]
      - ["pg-promise/pg-subset.pg.IConnection", "pg-promise/pg-subset.pg.IClient", "Member[connection, manual]", manual]
      - ["pg-promise/pg-subset.pg.IPool", "pg-promise.IDatabase", "Member[$pool, manual]", manual]
      - [pg.Client, "pg-pool.Static", "Instance.TypeVar[pg-pool.0, manual]", manual]
      - [pg.Client, "pg-promise/pg-subset.pg.IClient", "", manual]
      - [pg.Client, pg.ClientStatic, Instance, manual]
      - [pg.Client, pg.Events, "Member[addListener,on,once,prependListener,prependOnceListener, manual].Argument[1, manual].Argument[1, manual]", manual]
      - [pg.ClientBase, pg.Client, "", manual]
      - [pg.ClientBase, pg.PoolClient, "", manual]
      - [pg.ClientStatic, pg, "Member[Client, manual]", manual]
      - [pg.Connection, "pg-promise/pg-subset.pg.IConnection", "", manual]
      - [pg.Events, pg.Events, "Member[addListener,on,once,prependListener,prependOnceListener, manual].ReturnValue", manual]
      - [pg.Events, pg.EventsStatic, Instance, manual]
      - [pg.EventsStatic, pg, "Member[Events, manual]", manual]
      - [pg.Pool, "pg-pool", "", manual]
      - [pg.Pool, "pg-promise/pg-subset.pg.IPool", "", manual]
      - [pg.Pool, pg.Pool, "Member[addListener,on,once,prependListener,prependOnceListener, manual].ReturnValue", manual]
      - [pg.Pool, pg.PoolStatic, Instance, manual]
      - [pg.PoolClient, "pg-pool", "Member[addListener,on,once,prependListener,prependOnceListener, manual].WithArity[2, manual].WithStringArgument[0=acquire,0=connect,0=remove, manual].Argument[1, manual].Argument[0, manual]", manual]
      - [pg.PoolClient, "pg-pool", "Member[addListener,on,once,prependListener,prependOnceListener, manual].WithArity[2, manual].WithStringArgument[0=error, manual].Argument[1, manual].Argument[1, manual]", manual]
      - [pg.PoolClient, "pg-pool", "Member[connect, manual].Argument[0, manual].Argument[1, manual]", manual]
      - [pg.PoolClient, "pg-pool", "Member[connect, manual].WithArity[0, manual].ReturnValue.Awaited", manual]
      - [pg.PoolClient, pg.Pool, "Member[addListener,on,once,prependListener,prependOnceListener, manual].WithArity[2, manual].WithStringArgument[0=acquire,0=connect,0=remove, manual].Argument[1, manual].Argument[0, manual]", manual]
      - [pg.PoolClient, pg.Pool, "Member[addListener,on,once,prependListener,prependOnceListener, manual].WithArity[2, manual].WithStringArgument[0=error, manual].Argument[1, manual].Argument[1, manual]", manual]
      - [pg.PoolClient, pg.Pool, "Member[connect, manual].Argument[0, manual].Argument[1, manual]", manual]
      - [pg.PoolClient, pg.Pool, "Member[connect, manual].WithArity[0, manual].ReturnValue.Awaited", manual]
      - [pg.PoolStatic, pg, "Member[Pool, manual]", manual]

  - addsTo: 
      pack: codeql/javascript-all
      extensible: summaryModel
    data:
      - [global.NodeJS.EventEmitter, "", "", "Member[addListener,off,on,once,prependListener,prependOnceListener,removeAllListeners,removeListener,setMaxListeners, manual].ReturnValue", type, manual]
      - ["pg-pool", "", "", "Member[addListener,on,once,prependListener,prependOnceListener, manual].ReturnValue", type, manual]
      - [pg.ClientBase, "", "", "Member[addListener,on,once,prependListener,prependOnceListener, manual].ReturnValue", type, manual]
      - [pg.Events, "", "", "Member[addListener,on,once,prependListener,prependOnceListener, manual].ReturnValue", type, manual]
      - [pg.Pool, "", "", "Member[addListener,on,once,prependListener,prependOnceListener, manual].ReturnValue", type, manual]

  - addsTo: 
      pack: codeql/javascript-all
      extensible: typeVariableModel
    data:
      - ["pg-pool.0", "Member[Client, manual].TypeVar[pg-pool.ClientLikeCtr.0, manual]", manual]
      - ["pg-pool.0", "Member[addListener,on,once,prependListener,prependOnceListener, manual].WithArity[2, manual].WithStringArgument[0=acquire,0=connect,0=remove, manual].Argument[1, manual].Argument[0, manual]", manual]
      - ["pg-pool.0", "Member[addListener,on,once,prependListener,prependOnceListener, manual].WithArity[2, manual].WithStringArgument[0=error, manual].Argument[1, manual].Argument[1, manual]", manual]
      - ["pg-pool.0", "Member[connect, manual].Argument[0, manual].Argument[1, manual]", manual]
      - ["pg-pool.0", "Member[connect, manual].WithArity[0, manual].ReturnValue.Awaited", manual]
      - ["pg-pool.ClientLikeCtr.0", Instance, manual]
      - ["pg-promise.IConnected.1", "Member[client, manual]", manual]
      - ["pg-promise.IConnectionOptions.0", "Member[onLost, manual].Argument[1, manual].TypeVar[pg-promise.ILostContext.0, manual]", manual]
      - ["pg-promise.IDatabase.1", "Member[$cn, manual].TypeVar[pg-promise/pg-subset.pg.IConnectionParameters.0, manual]", manual]
      - ["pg-promise.IDatabase.1", "Member[$config, manual].TypeVar[pg-promise.ILibConfig.1, manual]", manual]
      - ["pg-promise.IDatabase.1", "Member[connect, manual].Argument[0, manual].TypeVar[pg-promise.IConnectionOptions.0, manual]", manual]
      - ["pg-promise.IDatabase.1", "Member[connect, manual].ReturnValue.Awaited.TypeVar[pg-promise.IConnected.1, manual]", manual]
      - ["pg-promise.IEventContext.0", "Member[client, manual]", manual]
      - ["pg-promise.IInitOptions.1", "Member[connect,disconnect, manual].Argument[0, manual]", manual]
      - ["pg-promise.IInitOptions.1", "Member[error, manual].Argument[1, manual].TypeVar[pg-promise.IEventContext.0, manual]", manual]
      - ["pg-promise.IInitOptions.1", "Member[extend, manual].Argument[0, manual].TypeVar[pg-promise.IDatabase.1, manual]", manual]
      - ["pg-promise.IInitOptions.1", "Member[query,task,transact, manual].Argument[0, manual].TypeVar[pg-promise.IEventContext.0, manual]", manual]
      - ["pg-promise.IInitOptions.1", "Member[receive, manual].Argument[2, manual].TypeVar[pg-promise.IEventContext.0, manual]", manual]
      - ["pg-promise.ILibConfig.1", "Member[options, manual].TypeVar[pg-promise.IInitOptions.1, manual]", manual]
      - ["pg-promise.ILibConfig.1", "Member[pgp, manual].TypeVar[pg-promise.IMain.1, manual]", manual]
      - ["pg-promise.ILostContext.0", "Member[client, manual]", manual]
      - ["pg-promise/pg-promise.XPromise.0", Awaited, manual]
      - ["pg-promise/pg-subset.pg.IConnectionParameters.0", "Member[Client, manual].Instance", manual]
