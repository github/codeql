extensions:
  - addsTo: 
      pack: codeql/javascript-all
      extensible: sinkModel
    data:
      - [mongodb.Collection, "Member[aggregate,count,countDocuments,deleteMany,deleteOne,find,findOne,findOneAndDelete,findOneAndReplace,remove,replaceOne,watch, manual].Argument[0, manual]", mongodb.sink, manual]
      - [mongodb.Collection, "Member[distinct, manual].Argument[1, manual]", mongodb.sink, manual]
      - [mongodb.Collection, "Member[findOneAndUpdate,update,updateMany,updateOne, manual].Argument[0,1, manual]", mongodb.sink, manual]
      - [mongodb.Db, "Member[aggregate,watch, manual].Argument[0, manual]", mongodb.sink, manual]
      - [mongodb.DeleteManyModel, "Member[filter, manual]", mongodb.sink, manual]
      - [mongodb.DeleteOneModel, "Member[filter, manual]", mongodb.sink, manual]
      - [mongodb.MongoClient, "Member[watch, manual].Argument[0, manual]", mongodb.sink, manual]
      - [mongodb.UpdateManyModel, "Member[filter,update, manual]", mongodb.sink, manual]
      - [mongodb.UpdateOneModel, "Member[filter,update, manual]", mongodb.sink, manual]
      - [mongoose.CollectionBase, "Member[findAndModify, manual].Argument[0, manual]", mongodb.sink, manual]
      - [mongoose.Connection, "Member[watch, manual].Argument[0, manual]", mongodb.sink, manual]
      - [mongoose.Document, "Member[update,updateOne, manual].Argument[0, manual]", mongodb.sink, manual]
      - [mongoose.Model, "Member[$where,aggregate,exists,find,findById,findByIdAndDelete,findByIdAndRemove,findOne,findOneAndDelete,findOneAndRemove,findOneAndReplace,geoSearch,remove,replaceOne,watch, manual].Argument[0, manual]", mongodb.sink, manual]
      - [mongoose.Model, "Member[count,where, manual].WithArity[1,2, manual].Argument[0, manual]", mongodb.sink, manual]
      - [mongoose.Model, "Member[countDocuments, manual].WithArity[1,2,3, manual].Argument[0, manual]", mongodb.sink, manual]
      - [mongoose.Model, "Member[deleteMany,deleteOne, manual].WithArity[0,1,2,3, manual].Argument[0, manual]", mongodb.sink, manual]
      - [mongoose.Model, "Member[distinct,where, manual].Argument[1, manual]", mongodb.sink, manual]
      - [mongoose.Model, "Member[findByIdAndUpdate,findOneAndUpdate,update,updateMany,updateOne, manual].Argument[0,1, manual]", mongodb.sink, manual]
      - [mongoose.Model, "Member[find, manual].WithArity[1,2,3,4, manual].Argument[0, manual]", mongodb.sink, manual]
      - [mongoose.Query, "Member[$where,and,find,findByIdAndDelete,findOne,findOneAndDelete,findOneAndRemove,nor,or,remove,replaceOne,setUpdate, manual].Argument[0, manual]", mongodb.sink, manual]
      - [mongoose.Query, "Member[count,where, manual].WithArity[1,2, manual].Argument[0, manual]", mongodb.sink, manual]
      - [mongoose.Query, "Member[deleteMany,deleteOne, manual].WithArity[0,1,2,3, manual].Argument[0, manual]", mongodb.sink, manual]
      - [mongoose.Query, "Member[distinct,where, manual].Argument[1, manual]", mongodb.sink, manual]
      - [mongoose.Query, "Member[findByIdAndUpdate,findOneAndUpdate,update,updateMany,updateOne, manual].Argument[0,1, manual]", mongodb.sink, manual]
      - [mongoose.Query, "Member[find, manual].WithArity[1,2,3,4, manual].Argument[0, manual]", mongodb.sink, manual]
      - [mongoose.QueryStatic, "Argument[2, manual]", mongodb.sink, manual]

  - addsTo: 
      pack: codeql/javascript-all
      extensible: typeModel
    data:
      - [mongodb.AbstractCursor, mongodb.FindCursor, "", manual]
      - [mongodb.AbstractCursor, mongodb.ListCollectionsCursor, "", manual]
      - [mongodb.AbstractCursor, mongodb.ListIndexesCursor, "", manual]
      - [mongodb.AbstractCursorOptions, mongodb.AggregationCursorOptions, "", manual]
      - [mongodb.AbstractCursorOptions, "mongodb/mongodb.AbstractCursorOptions", "", manual]
      - [mongodb.AbstractCursorOptions, mongoose.mongodb.AbstractCursorOptions, "", manual]
      - [mongodb.AddUserOptions, mongodb.Admin, "Member[addUser, manual].Argument[1,2, manual]", manual]
      - [mongodb.AddUserOptions, mongodb.Db, "Member[addUser, manual].Argument[1,2, manual]", manual]
      - [mongodb.AddUserOptions, "mongodb/mongodb.AddUserOptions", "", manual]
      - [mongodb.AddUserOptions, mongoose.mongodb.AddUserOptions, "", manual]
      - [mongodb.Admin, mongodb.AdminStatic, Instance, manual]
      - [mongodb.Admin, mongodb.Db, "Member[admin, manual].ReturnValue", manual]
      - [mongodb.Admin, "mongodb/mongodb.Admin", "", manual]
      - [mongodb.Admin, mongoose.mongodb.Admin, "", manual]
      - [mongodb.AdminStatic, "mongodb/mongodb.AdminStatic", "", manual]
      - [mongodb.AdminStatic, mongodb, "Member[Admin, manual]", manual]
      - [mongodb.AdminStatic, mongoose.mongodb.AdminStatic, "", manual]
      - [mongodb.AggregateOptions, mongodb.AggregationCursorOptions, "", manual]
      - [mongodb.AggregateOptions, mongodb.ChangeStreamOptions, "", manual]
      - [mongodb.AggregateOptions, mongodb.Collection, "Member[aggregate, manual].Argument[1, manual]", manual]
      - [mongodb.AggregateOptions, mongodb.CountDocumentsOptions, "", manual]
      - [mongodb.AggregateOptions, mongodb.Db, "Member[aggregate, manual].Argument[1, manual]", manual]
      - [mongodb.AggregateOptions, "mongodb/mongodb.AggregateOptions", "", manual]
      - [mongodb.AggregateOptions, mongoose.mongodb.AggregateOptions, "", manual]
      - [mongodb.AggregationCursorOptions, "mongodb/mongodb.AggregationCursorOptions", "", manual]
      - [mongodb.AggregationCursorOptions, mongoose.mongodb.AggregationCursorOptions, "", manual]
      - [mongodb.AnyBulkWriteOperation, mongodb.BulkOperationBase, "Member[raw, manual].Argument[0, manual]", manual]
      - [mongodb.AnyBulkWriteOperation, mongodb.Collection, "Member[bulkWrite, manual].Argument[0, manual].ArrayElement", manual]
      - [mongodb.AnyBulkWriteOperation, "mongodb/mongodb.AnyBulkWriteOperation", "", manual]
      - [mongodb.AnyBulkWriteOperation, mongoose.mongodb.AnyBulkWriteOperation, "", manual]
      - [mongodb.Auth, mongodb.MongoClientOptions, "Member[auth, manual]", manual]
      - [mongodb.Auth, "mongodb/mongodb.Auth", "", manual]
      - [mongodb.Auth, mongoose.mongodb.Auth, "", manual]
      - [mongodb.AutoEncrypter, mongodb.AutoEncrypter, Instance, manual]
      - [mongodb.AutoEncrypter, mongodb.ConnectionOptions, "Member[autoEncrypter, manual]", manual]
      - [mongodb.AutoEncrypter, mongodb.MongoClient, "Member[autoEncrypter, manual]", manual]
      - [mongodb.AutoEncrypter, mongodb.MongoOptions, "Member[autoEncrypter, manual]", manual]
      - [mongodb.AutoEncrypter, "mongodb/mongodb.AutoEncrypter", "", manual]
      - [mongodb.AutoEncrypter, mongoose.mongodb.AutoEncrypter, "", manual]
      - [mongodb.AutoEncryptionOptions, mongodb.AutoEncrypter, "Argument[1, manual]", manual]
      - [mongodb.AutoEncryptionOptions, mongodb.MongoClientOptions, "Member[autoEncryption, manual]", manual]
      - [mongodb.AutoEncryptionOptions, "mongodb/mongodb.AutoEncryptionOptions", "", manual]
      - [mongodb.AutoEncryptionOptions, mongoose.mongodb.AutoEncryptionOptions, "", manual]
      - [mongodb.BulkOperationBase, mongodb.BulkOperationBase, "Member[addToOperationsList,insert,raw, manual].ReturnValue", manual]
      - [mongodb.BulkOperationBase, mongodb.BulkOperationBaseStatic, Instance, manual]
      - [mongodb.BulkOperationBase, mongodb.FindOperators, "Member[bulkOperation, manual]", manual]
      - [mongodb.BulkOperationBase, mongodb.FindOperators, "Member[delete,deleteOne,replaceOne,update,updateOne, manual].ReturnValue", manual]
      - [mongodb.BulkOperationBase, mongodb.OrderedBulkOperation, "", manual]
      - [mongodb.BulkOperationBase, mongodb.UnorderedBulkOperation, "", manual]
      - [mongodb.BulkOperationBase, "mongodb/mongodb.BulkOperationBase", "", manual]
      - [mongodb.BulkOperationBase, mongoose.mongodb.BulkOperationBase, "", manual]
      - [mongodb.BulkOperationBaseStatic, "mongodb/mongodb.BulkOperationBaseStatic", "", manual]
      - [mongodb.BulkOperationBaseStatic, mongodb, "Member[BulkOperationBase, manual]", manual]
      - [mongodb.BulkOperationBaseStatic, mongoose.mongodb.BulkOperationBaseStatic, "", manual]
      - [mongodb.BulkWriteOptions, mongodb.BulkOperationBase, "Member[execute, manual].WithArity[0,1,2, manual].Argument[0, manual]", manual]
      - [mongodb.BulkWriteOptions, mongodb.Collection, "Member[bulkWrite,insert,insertMany, manual].Argument[1, manual]", manual]
      - [mongodb.BulkWriteOptions, mongodb.Collection, "Member[initializeOrderedBulkOp,initializeUnorderedBulkOp, manual].Argument[0, manual]", manual]
      - [mongodb.BulkWriteOptions, mongodb.OrderedBulkOperationStatic, "Argument[1, manual]", manual]
      - [mongodb.BulkWriteOptions, mongodb.UnorderedBulkOperationStatic, "Argument[1, manual]", manual]
      - [mongodb.BulkWriteOptions, "mongodb/mongodb.BulkWriteOptions", "", manual]
      - [mongodb.BulkWriteOptions, mongoose.mongodb.BulkWriteOptions, "", manual]
      - [mongodb.ChangeStream, mongodb.ChangeStreamStatic, Instance, manual]
      - [mongodb.ChangeStream, mongodb.Collection, "Member[watch, manual].ReturnValue", manual]
      - [mongodb.ChangeStream, mongodb.Db, "Member[watch, manual].ReturnValue", manual]
      - [mongodb.ChangeStream, mongodb.MongoClient, "Member[watch, manual].ReturnValue", manual]
      - [mongodb.ChangeStream, "mongodb/mongodb.ChangeStream", "", manual]
      - [mongodb.ChangeStream, mongoose.mongodb.ChangeStream, "", manual]
      - [mongodb.ChangeStreamOptions, mongodb.ChangeStream, "Member[options, manual]", manual]
      - [mongodb.ChangeStreamOptions, mongodb.Collection, "Member[watch, manual].Argument[1, manual]", manual]
      - [mongodb.ChangeStreamOptions, mongodb.Db, "Member[watch, manual].Argument[1, manual]", manual]
      - [mongodb.ChangeStreamOptions, mongodb.MongoClient, "Member[watch, manual].Argument[1, manual]", manual]
      - [mongodb.ChangeStreamOptions, "mongodb/mongodb.ChangeStreamOptions", "", manual]
      - [mongodb.ChangeStreamOptions, mongoose.mongodb.ChangeStreamOptions, "", manual]
      - [mongodb.ChangeStreamStatic, "mongodb/mongodb.ChangeStreamStatic", "", manual]
      - [mongodb.ChangeStreamStatic, mongodb, "Member[ChangeStream, manual]", manual]
      - [mongodb.ChangeStreamStatic, mongoose.mongodb.ChangeStreamStatic, "", manual]
      - [mongodb.ClientSession, mongodb.AbstractCursorOptions, "Member[session, manual]", manual]
      - [mongodb.ClientSession, mongodb.ClientSession, "Member[equals, manual].Argument[0, manual]", manual]
      - [mongodb.ClientSession, mongodb.ClientSessionEvents, "Member[ended, manual].Argument[0, manual]", manual]
      - [mongodb.ClientSession, mongodb.ClientSessionStatic, Instance, manual]
      - [mongodb.ClientSession, mongodb.IndexInformationOptions, "Member[session, manual]", manual]
      - [mongodb.ClientSession, mongodb.MongoClient, "Member[startSession, manual].ReturnValue", manual]
      - [mongodb.ClientSession, mongodb.OperationOptions, "Member[session, manual]", manual]
      - [mongodb.ClientSession, mongodb.ReadPreferenceFromOptions, "Member[session, manual]", manual]
      - [mongodb.ClientSession, mongodb.SelectServerOptions, "Member[session, manual]", manual]
      - [mongodb.ClientSession, mongodb.WithSessionCallback, "Argument[0, manual]", manual]
      - [mongodb.ClientSession, mongodb.WithTransactionCallback, "Argument[0, manual]", manual]
      - [mongodb.ClientSession, "mongodb/mongodb.ClientSession", "", manual]
      - [mongodb.ClientSession, mongoose.mongodb.ClientSession, "", manual]
      - [mongodb.ClientSessionEvents, "mongodb/mongodb.ClientSessionEvents", "", manual]
      - [mongodb.ClientSessionEvents, mongoose.mongodb.ClientSessionEvents, "", manual]
      - [mongodb.ClientSessionOptions, mongodb.MongoClient, "Member[startSession, manual].Argument[0, manual]", manual]
      - [mongodb.ClientSessionOptions, mongodb.MongoClient, "Member[withSession, manual].WithArity[2, manual].Argument[0, manual]", manual]
      - [mongodb.ClientSessionOptions, "mongodb/mongodb.ClientSessionOptions", "", manual]
      - [mongodb.ClientSessionOptions, mongoose.mongodb.ClientSessionOptions, "", manual]
      - [mongodb.ClientSessionStatic, "mongodb/mongodb.ClientSessionStatic", "", manual]
      - [mongodb.ClientSessionStatic, mongodb, "Member[ClientSession, manual]", manual]
      - [mongodb.ClientSessionStatic, mongoose.mongodb.ClientSessionStatic, "", manual]
      - [mongodb.CollStatsOptions, mongodb.Collection, "Member[stats, manual].Argument[0, manual]", manual]
      - [mongodb.CollStatsOptions, "mongodb/mongodb.CollStatsOptions", "", manual]
      - [mongodb.CollStatsOptions, mongoose.mongodb.CollStatsOptions, "", manual]
      - [mongodb.Collection, mongodb.ChangeStream, "Member[parent, manual]", manual]
      - [mongodb.Collection, mongodb.Collection, "Member[rename, manual].Argument[1,2, manual].TypeVar[mongodb.Callback.0, manual]", manual]
      - [mongodb.Collection, mongodb.Collection, "Member[rename, manual].WithArity[1,2, manual].ReturnValue.Awaited", manual]
      - [mongodb.Collection, mongodb.CollectionStatic, Instance, manual]
      - [mongodb.Collection, mongodb.Db, "Member[collection, manual].ReturnValue", manual]
      - [mongodb.Collection, mongodb.Db, "Member[collections, manual].Argument[0,1, manual].TypeVar[mongodb.Callback.0, manual].ArrayElement", manual]
      - [mongodb.Collection, mongodb.Db, "Member[collections, manual].WithArity[0,1, manual].ReturnValue.Awaited.ArrayElement", manual]
      - [mongodb.Collection, mongodb.Db, "Member[createCollection, manual].Argument[2, manual].TypeVar[mongodb.Callback.0, manual]", manual]
      - [mongodb.Collection, mongodb.Db, "Member[createCollection, manual].WithArity[1,2, manual].ReturnValue.Awaited", manual]
      - [mongodb.Collection, mongodb.Db, "Member[createCollection, manual].WithArity[2, manual].Argument[1, manual].TypeVar[mongodb.Callback.0, manual]", manual]
      - [mongodb.Collection, mongodb.Db, "Member[renameCollection, manual].Argument[2,3, manual].TypeVar[mongodb.Callback.0, manual]", manual]
      - [mongodb.Collection, mongodb.Db, "Member[renameCollection, manual].WithArity[2,3, manual].ReturnValue.Awaited", manual]
      - [mongodb.Collection, mongodb.GridFSBucketWriteStream, "Member[chunks,files, manual]", manual]
      - [mongodb.Collection, mongodb.ListIndexesCursor, "Member[parent, manual]", manual]
      - [mongodb.Collection, mongodb.ListIndexesCursorStatic, "Argument[0, manual]", manual]
      - [mongodb.Collection, mongodb.OrderedBulkOperationStatic, "Argument[0, manual]", manual]
      - [mongodb.Collection, mongodb.UnorderedBulkOperationStatic, "Argument[0, manual]", manual]
      - [mongodb.Collection, "mongodb/mongodb.Collection", "", manual]
      - [mongodb.Collection, mongoose.mongodb.Collection, "", manual]
      - [mongodb.CollectionStatic, "mongodb/mongodb.CollectionStatic", "", manual]
      - [mongodb.CollectionStatic, mongodb, "Member[Collection, manual]", manual]
      - [mongodb.CollectionStatic, mongoose.mongodb.CollectionStatic, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.AddUserOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.Admin, "Member[buildInfo,ping,replSetGetStatus,serverInfo,serverStatus, manual].Argument[0, manual]", manual]
      - [mongodb.CommandOperationOptions, mongodb.AggregateOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.BulkWriteOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.CollStatsOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.CountOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.CreateCollectionOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.CreateIndexesOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.DbStatsOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.DeleteOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.DistinctOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.DropCollectionOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.DropDatabaseOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.DropIndexesOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.EstimatedDocumentCountOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.EvalOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.FindOneAndDeleteOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.FindOneAndReplaceOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.FindOneAndUpdateOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.FindOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.InsertOneOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.ListCollectionsOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.ListDatabasesOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.ListIndexesOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.MapReduceOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.ProfilingLevelOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.RemoveUserOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.RenameOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.ReplaceOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.RunCommandOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.SetProfilingLevelOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.TransactionOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.UpdateOptions, "", manual]
      - [mongodb.CommandOperationOptions, mongodb.ValidateCollectionOptions, "", manual]
      - [mongodb.CommandOperationOptions, "mongodb/mongodb.CommandOperationOptions", "", manual]
      - [mongodb.CommandOperationOptions, mongoose.mongodb.CommandOperationOptions, "", manual]
      - [mongodb.ConnectionOptions, "mongodb/mongodb.ConnectionOptions", "", manual]
      - [mongodb.ConnectionOptions, mongoose.mongodb.ConnectionOptions, "", manual]
      - [mongodb.CountDocumentsOptions, mongodb.Collection, "Member[countDocuments, manual].Argument[1, manual]", manual]
      - [mongodb.CountDocumentsOptions, "mongodb/mongodb.CountDocumentsOptions", "", manual]
      - [mongodb.CountDocumentsOptions, mongoose.mongodb.CountDocumentsOptions, "", manual]
      - [mongodb.CountOptions, mongodb.Collection, "Member[count, manual].Argument[1, manual]", manual]
      - [mongodb.CountOptions, mongodb.FindCursor, "Member[count, manual].Argument[0, manual]", manual]
      - [mongodb.CountOptions, "mongodb/mongodb.CountOptions", "", manual]
      - [mongodb.CountOptions, mongoose.mongodb.CountOptions, "", manual]
      - [mongodb.CreateCollectionOptions, mongodb.Db, "Member[createCollection, manual].WithArity[1,2,3, manual].Argument[1, manual]", manual]
      - [mongodb.CreateCollectionOptions, "mongodb/mongodb.CreateCollectionOptions", "", manual]
      - [mongodb.CreateCollectionOptions, mongoose.mongodb.CreateCollectionOptions, "", manual]
      - [mongodb.CreateIndexesOptions, mongodb.Collection, "Member[createIndex,createIndexes, manual].Argument[1, manual]", manual]
      - [mongodb.CreateIndexesOptions, mongodb.Db, "Member[createIndex, manual].Argument[2, manual]", manual]
      - [mongodb.CreateIndexesOptions, "mongodb/mongodb.CreateIndexesOptions", "", manual]
      - [mongodb.CreateIndexesOptions, mongoose.mongodb.CreateIndexesOptions, "", manual]
      - [mongodb.Db, mongodb.ChangeStream, "Member[parent, manual]", manual]
      - [mongodb.Db, mongodb.DbStatic, Instance, manual]
      - [mongodb.Db, mongodb.GridFSBucketStatic, "Argument[0, manual]", manual]
      - [mongodb.Db, mongodb.ListCollectionsCursor, "Member[parent, manual]", manual]
      - [mongodb.Db, mongodb.ListCollectionsCursorStatic, "Argument[0, manual]", manual]
      - [mongodb.Db, mongodb.MongoClient, "Member[db, manual].ReturnValue", manual]
      - [mongodb.Db, "mongodb/mongodb.Db", "", manual]
      - [mongodb.Db, mongoose.mongodb.Db, "", manual]
      - [mongodb.DbStatic, "mongodb/mongodb.DbStatic", "", manual]
      - [mongodb.DbStatic, mongodb, "Member[Db, manual]", manual]
      - [mongodb.DbStatic, mongoose.mongodb.DbStatic, "", manual]
      - [mongodb.DbStatsOptions, mongodb.Db, "Member[stats, manual].Argument[0, manual]", manual]
      - [mongodb.DbStatsOptions, "mongodb/mongodb.DbStatsOptions", "", manual]
      - [mongodb.DbStatsOptions, mongoose.mongodb.DbStatsOptions, "", manual]
      - [mongodb.DeleteManyModel, mongodb.AnyBulkWriteOperation, "Member[deleteMany, manual]", manual]
      - [mongodb.DeleteManyModel, "mongodb/mongodb.DeleteManyModel", "", manual]
      - [mongodb.DeleteManyModel, mongoose.mongodb.DeleteManyModel, "", manual]
      - [mongodb.DeleteOneModel, mongodb.AnyBulkWriteOperation, "Member[deleteOne, manual]", manual]
      - [mongodb.DeleteOneModel, "mongodb/mongodb.DeleteOneModel", "", manual]
      - [mongodb.DeleteOneModel, mongoose.mongodb.DeleteOneModel, "", manual]
      - [mongodb.DeleteOptions, mongodb.Collection, "Member[deleteMany,deleteOne,remove, manual].Argument[1, manual]", manual]
      - [mongodb.DeleteOptions, "mongodb/mongodb.DeleteOptions", "", manual]
      - [mongodb.DeleteOptions, mongoose.mongodb.DeleteOptions, "", manual]
      - [mongodb.DistinctOptions, mongodb.Collection, "Member[distinct, manual].Argument[2, manual]", manual]
      - [mongodb.DistinctOptions, "mongodb/mongodb.DistinctOptions", "", manual]
      - [mongodb.DistinctOptions, mongoose.mongodb.DistinctOptions, "", manual]
      - [mongodb.DropCollectionOptions, mongodb.Collection, "Member[drop, manual].Argument[0, manual]", manual]
      - [mongodb.DropCollectionOptions, mongodb.Db, "Member[dropCollection, manual].Argument[1, manual]", manual]
      - [mongodb.DropCollectionOptions, "mongodb/mongodb.DropCollectionOptions", "", manual]
      - [mongodb.DropCollectionOptions, mongoose.mongodb.DropCollectionOptions, "", manual]
      - [mongodb.DropDatabaseOptions, mongodb.Db, "Member[dropDatabase, manual].Argument[0, manual]", manual]
      - [mongodb.DropDatabaseOptions, "mongodb/mongodb.DropDatabaseOptions", "", manual]
      - [mongodb.DropDatabaseOptions, mongoose.mongodb.DropDatabaseOptions, "", manual]
      - [mongodb.DropIndexesOptions, mongodb.Collection, "Member[dropIndex, manual].Argument[1, manual]", manual]
      - [mongodb.DropIndexesOptions, mongodb.Collection, "Member[dropIndexes, manual].Argument[0, manual]", manual]
      - [mongodb.DropIndexesOptions, "mongodb/mongodb.DropIndexesOptions", "", manual]
      - [mongodb.DropIndexesOptions, mongoose.mongodb.DropIndexesOptions, "", manual]
      - [mongodb.EstimatedDocumentCountOptions, mongodb.Collection, "Member[estimatedDocumentCount, manual].Argument[0, manual]", manual]
      - [mongodb.EstimatedDocumentCountOptions, "mongodb/mongodb.EstimatedDocumentCountOptions", "", manual]
      - [mongodb.EstimatedDocumentCountOptions, mongoose.mongodb.EstimatedDocumentCountOptions, "", manual]
      - [mongodb.EvalOptions, "mongodb/mongodb.EvalOptions", "", manual]
      - [mongodb.EvalOptions, mongoose.mongodb.EvalOptions, "", manual]
      - [mongodb.FindCursor, mongodb.Collection, "Member[find, manual].WithArity[0,1,2, manual].ReturnValue", manual]
      - [mongodb.FindCursor, mongodb.FindCursor, "Member[addQueryModifier,allowDiskUse,clone,collation,comment,filter,hint,limit,map,max,maxAwaitTimeMS,maxTimeMS,min,project,returnKey,showRecordId,skip,sort, manual].ReturnValue", manual]
      - [mongodb.FindCursor, mongodb.FindCursorStatic, Instance, manual]
      - [mongodb.FindCursor, mongodb.GridFSBucket, "Member[find, manual].ReturnValue", manual]
      - [mongodb.FindCursor, "mongodb/mongodb.FindCursor", "", manual]
      - [mongodb.FindCursor, mongoose.mongodb.FindCursor, "", manual]
      - [mongodb.FindCursorStatic, "mongodb/mongodb.FindCursorStatic", "", manual]
      - [mongodb.FindCursorStatic, mongodb, "Member[FindCursor, manual]", manual]
      - [mongodb.FindCursorStatic, mongoose.mongodb.FindCursorStatic, "", manual]
      - [mongodb.FindOneAndDeleteOptions, mongodb.Collection, "Member[findOneAndDelete, manual].Argument[1, manual]", manual]
      - [mongodb.FindOneAndDeleteOptions, "mongodb/mongodb.FindOneAndDeleteOptions", "", manual]
      - [mongodb.FindOneAndDeleteOptions, mongoose.mongodb.FindOneAndDeleteOptions, "", manual]
      - [mongodb.FindOneAndReplaceOptions, mongodb.Collection, "Member[findOneAndReplace, manual].Argument[2, manual]", manual]
      - [mongodb.FindOneAndReplaceOptions, "mongodb/mongodb.FindOneAndReplaceOptions", "", manual]
      - [mongodb.FindOneAndReplaceOptions, mongoose.mongodb.FindOneAndReplaceOptions, "", manual]
      - [mongodb.FindOneAndUpdateOptions, mongodb.Collection, "Member[findOneAndUpdate, manual].Argument[2, manual]", manual]
      - [mongodb.FindOneAndUpdateOptions, "mongodb/mongodb.FindOneAndUpdateOptions", "", manual]
      - [mongodb.FindOneAndUpdateOptions, mongoose.mongodb.FindOneAndUpdateOptions, "", manual]
      - [mongodb.FindOperators, mongodb.BulkOperationBase, "Member[find, manual].ReturnValue", manual]
      - [mongodb.FindOperators, mongodb.FindOperators, "Member[arrayFilters,collation,upsert, manual].ReturnValue", manual]
      - [mongodb.FindOperators, mongodb.FindOperatorsStatic, Instance, manual]
      - [mongodb.FindOperators, "mongodb/mongodb.FindOperators", "", manual]
      - [mongodb.FindOperators, mongoose.mongodb.FindOperators, "", manual]
      - [mongodb.FindOperatorsStatic, "mongodb/mongodb.FindOperatorsStatic", "", manual]
      - [mongodb.FindOperatorsStatic, mongodb, "Member[FindOperators, manual]", manual]
      - [mongodb.FindOperatorsStatic, mongoose.mongodb.FindOperatorsStatic, "", manual]
      - [mongodb.FindOptions, mongodb.Collection, "Member[find,findOne, manual].Argument[1, manual]", manual]
      - [mongodb.FindOptions, mongodb.GridFSBucket, "Member[find, manual].Argument[1, manual]", manual]
      - [mongodb.FindOptions, "mongodb/mongodb.FindOptions", "", manual]
      - [mongodb.FindOptions, mongoose.mongodb.FindOptions, "", manual]
      - [mongodb.GridFSBucket, mongodb.GridFSBucketStatic, Instance, manual]
      - [mongodb.GridFSBucket, mongodb.GridFSBucketWriteStream, "Member[bucket, manual]", manual]
      - [mongodb.GridFSBucket, "mongodb/mongodb.GridFSBucket", "", manual]
      - [mongodb.GridFSBucket, mongoose.mongodb.GridFSBucket, "", manual]
      - [mongodb.GridFSBucketStatic, "mongodb/mongodb.GridFSBucketStatic", "", manual]
      - [mongodb.GridFSBucketStatic, mongodb, "Member[GridFSBucket, manual]", manual]
      - [mongodb.GridFSBucketStatic, mongoose.mongodb.GridFSBucketStatic, "", manual]
      - [mongodb.GridFSBucketWriteStream, mongodb.GridFSBucket, "Member[openUploadStream,openUploadStreamWithId, manual].ReturnValue", manual]
      - [mongodb.GridFSBucketWriteStream, mongodb.GridFSBucketWriteStream, "Member[end, manual].ReturnValue", manual]
      - [mongodb.GridFSBucketWriteStream, mongodb.GridFSBucketWriteStreamStatic, Instance, manual]
      - [mongodb.GridFSBucketWriteStream, "mongodb/mongodb.GridFSBucketWriteStream", "", manual]
      - [mongodb.GridFSBucketWriteStream, mongoose.mongodb.GridFSBucketWriteStream, "", manual]
      - [mongodb.GridFSBucketWriteStreamStatic, "mongodb/mongodb.GridFSBucketWriteStreamStatic", "", manual]
      - [mongodb.GridFSBucketWriteStreamStatic, mongodb, "Member[GridFSBucketWriteStream, manual]", manual]
      - [mongodb.GridFSBucketWriteStreamStatic, mongoose.mongodb.GridFSBucketWriteStreamStatic, "", manual]
      - [mongodb.IndexInformationOptions, mongodb.Collection, "Member[indexExists, manual].Argument[1, manual]", manual]
      - [mongodb.IndexInformationOptions, mongodb.Collection, "Member[indexInformation,indexes, manual].Argument[0, manual]", manual]
      - [mongodb.IndexInformationOptions, mongodb.Db, "Member[indexInformation, manual].Argument[1, manual]", manual]
      - [mongodb.IndexInformationOptions, "mongodb/mongodb.IndexInformationOptions", "", manual]
      - [mongodb.IndexInformationOptions, mongoose.mongodb.IndexInformationOptions, "", manual]
      - [mongodb.InsertOneOptions, mongodb.Collection, "Member[insertOne, manual].Argument[1, manual]", manual]
      - [mongodb.InsertOneOptions, "mongodb/mongodb.InsertOneOptions", "", manual]
      - [mongodb.InsertOneOptions, mongoose.mongodb.InsertOneOptions, "", manual]
      - [mongodb.ListCollectionsCursor, mongodb.Db, "Member[listCollections, manual].WithArity[0,1,2, manual].ReturnValue", manual]
      - [mongodb.ListCollectionsCursor, mongodb.ListCollectionsCursor, "Member[clone, manual].ReturnValue", manual]
      - [mongodb.ListCollectionsCursor, mongodb.ListCollectionsCursorStatic, Instance, manual]
      - [mongodb.ListCollectionsCursor, "mongodb/mongodb.ListCollectionsCursor", "", manual]
      - [mongodb.ListCollectionsCursor, mongoose.mongodb.ListCollectionsCursor, "", manual]
      - [mongodb.ListCollectionsCursorStatic, "mongodb/mongodb.ListCollectionsCursorStatic", "", manual]
      - [mongodb.ListCollectionsCursorStatic, mongodb, "Member[ListCollectionsCursor, manual]", manual]
      - [mongodb.ListCollectionsCursorStatic, mongoose.mongodb.ListCollectionsCursorStatic, "", manual]
      - [mongodb.ListCollectionsOptions, mongodb.Db, "Member[collections, manual].Argument[0, manual]", manual]
      - [mongodb.ListCollectionsOptions, mongodb.Db, "Member[listCollections, manual].WithArity[0,1,2, manual].Argument[1, manual]", manual]
      - [mongodb.ListCollectionsOptions, mongodb.ListCollectionsCursor, "Member[options, manual]", manual]
      - [mongodb.ListCollectionsOptions, mongodb.ListCollectionsCursorStatic, "Argument[2, manual]", manual]
      - [mongodb.ListCollectionsOptions, "mongodb/mongodb.ListCollectionsOptions", "", manual]
      - [mongodb.ListCollectionsOptions, mongoose.mongodb.ListCollectionsOptions, "", manual]
      - [mongodb.ListDatabasesOptions, mongodb.Admin, "Member[listDatabases, manual].Argument[0, manual]", manual]
      - [mongodb.ListDatabasesOptions, "mongodb/mongodb.ListDatabasesOptions", "", manual]
      - [mongodb.ListDatabasesOptions, mongoose.mongodb.ListDatabasesOptions, "", manual]
      - [mongodb.ListIndexesCursor, mongodb.Collection, "Member[listIndexes, manual].ReturnValue", manual]
      - [mongodb.ListIndexesCursor, mongodb.ListIndexesCursor, "Member[clone, manual].ReturnValue", manual]
      - [mongodb.ListIndexesCursor, mongodb.ListIndexesCursorStatic, Instance, manual]
      - [mongodb.ListIndexesCursor, "mongodb/mongodb.ListIndexesCursor", "", manual]
      - [mongodb.ListIndexesCursor, mongoose.mongodb.ListIndexesCursor, "", manual]
      - [mongodb.ListIndexesCursorStatic, "mongodb/mongodb.ListIndexesCursorStatic", "", manual]
      - [mongodb.ListIndexesCursorStatic, mongodb, "Member[ListIndexesCursor, manual]", manual]
      - [mongodb.ListIndexesCursorStatic, mongoose.mongodb.ListIndexesCursorStatic, "", manual]
      - [mongodb.ListIndexesOptions, mongodb.Collection, "Member[listIndexes, manual].Argument[0, manual]", manual]
      - [mongodb.ListIndexesOptions, mongodb.ListIndexesCursor, "Member[options, manual]", manual]
      - [mongodb.ListIndexesOptions, mongodb.ListIndexesCursorStatic, "Argument[1, manual]", manual]
      - [mongodb.ListIndexesOptions, "mongodb/mongodb.ListIndexesOptions", "", manual]
      - [mongodb.ListIndexesOptions, mongoose.mongodb.ListIndexesOptions, "", manual]
      - [mongodb.MapReduceOptions, mongodb.Collection, "Member[mapReduce, manual].Argument[2, manual]", manual]
      - [mongodb.MapReduceOptions, "mongodb/mongodb.MapReduceOptions", "", manual]
      - [mongodb.MapReduceOptions, mongoose.mongodb.MapReduceOptions, "", manual]
      - [mongodb.MongoClient, mongodb.AutoEncrypter, "Argument[0, manual]", manual]
      - [mongodb.MongoClient, mongodb.AutoEncryptionOptions, "Member[keyVaultClient, manual]", manual]
      - [mongodb.MongoClient, mongodb.ChangeStream, "Member[parent, manual]", manual]
      - [mongodb.MongoClient, mongodb.DbStatic, "Argument[0, manual]", manual]
      - [mongodb.MongoClient, mongodb.MongoClient, "Member[connect, manual].Argument[0, manual].TypeVar[mongodb.Callback.0, manual]", manual]
      - [mongodb.MongoClient, mongodb.MongoClient, "Member[connect, manual].WithArity[0, manual].ReturnValue.Awaited", manual]
      - [mongodb.MongoClient, mongodb.MongoClientEvents, "Member[open, manual].Argument[0, manual]", manual]
      - [mongodb.MongoClient, mongodb.MongoClientStatic, Instance, manual]
      - [mongodb.MongoClient, mongodb.MongoClientStatic, "Member[connect, manual].Argument[1,2, manual].TypeVar[mongodb.Callback.0, manual]", manual]
      - [mongodb.MongoClient, mongodb.MongoClientStatic, "Member[connect, manual].WithArity[1,2, manual].ReturnValue.Awaited", manual]
      - [mongodb.MongoClient, "mongodb/mongodb.MongoClient", "", manual]
      - [mongodb.MongoClient, mongoose.mongodb.MongoClient, "", manual]
      - [mongodb.MongoClientEvents, "mongodb/mongodb.MongoClientEvents", "", manual]
      - [mongodb.MongoClientEvents, mongoose.mongodb.MongoClientEvents, "", manual]
      - [mongodb.MongoClientOptions, mongodb.MongoClientStatic, "Argument[1, manual]", manual]
      - [mongodb.MongoClientOptions, mongodb.MongoClientStatic, "Member[connect, manual].Argument[1, manual]", manual]
      - [mongodb.MongoClientOptions, "mongodb/mongodb.MongoClientOptions", "", manual]
      - [mongodb.MongoClientOptions, mongoose.mongodb.MongoClientOptions, "", manual]
      - [mongodb.MongoClientStatic, "mongodb/mongodb.MongoClientStatic", "", manual]
      - [mongodb.MongoClientStatic, mongodb, "Member[MongoClient, manual]", manual]
      - [mongodb.MongoClientStatic, mongoose.mongodb.MongoClientStatic, "", manual]
      - [mongodb.MongoOptions, mongodb.ClientSession, "Member[clientOptions, manual]", manual]
      - [mongodb.MongoOptions, mongodb.MongoClient, "Member[options, manual]", manual]
      - [mongodb.MongoOptions, "mongodb/mongodb.MongoOptions", "", manual]
      - [mongodb.MongoOptions, mongoose.mongodb.MongoOptions, "", manual]
      - [mongodb.OperationOptions, mongodb.Collection, "Member[isCapped,options, manual].Argument[0, manual]", manual]
      - [mongodb.OperationOptions, mongodb.CommandOperationOptions, "", manual]
      - [mongodb.OperationOptions, "mongodb/mongodb.OperationOptions", "", manual]
      - [mongodb.OperationOptions, mongoose.mongodb.OperationOptions, "", manual]
      - [mongodb.OrderedBulkOperation, mongodb.Collection, "Member[initializeOrderedBulkOp, manual].ReturnValue", manual]
      - [mongodb.OrderedBulkOperation, mongodb.OrderedBulkOperation, "Member[addToOperationsList, manual].ReturnValue", manual]
      - [mongodb.OrderedBulkOperation, mongodb.OrderedBulkOperationStatic, Instance, manual]
      - [mongodb.OrderedBulkOperation, "mongodb/mongodb.OrderedBulkOperation", "", manual]
      - [mongodb.OrderedBulkOperation, mongoose.mongodb.OrderedBulkOperation, "", manual]
      - [mongodb.OrderedBulkOperationStatic, "mongodb/mongodb.OrderedBulkOperationStatic", "", manual]
      - [mongodb.OrderedBulkOperationStatic, mongodb, "Member[OrderedBulkOperation, manual]", manual]
      - [mongodb.OrderedBulkOperationStatic, mongoose.mongodb.OrderedBulkOperationStatic, "", manual]
      - [mongodb.ProfilingLevelOptions, mongodb.Db, "Member[profilingLevel, manual].Argument[0, manual]", manual]
      - [mongodb.ProfilingLevelOptions, "mongodb/mongodb.ProfilingLevelOptions", "", manual]
      - [mongodb.ProfilingLevelOptions, mongoose.mongodb.ProfilingLevelOptions, "", manual]
      - [mongodb.ReadPreferenceFromOptions, mongodb.ReadPreferenceStatic, "Member[fromOptions, manual].Argument[0, manual]", manual]
      - [mongodb.ReadPreferenceFromOptions, "mongodb/mongodb.ReadPreferenceFromOptions", "", manual]
      - [mongodb.ReadPreferenceFromOptions, mongoose.mongodb.ReadPreferenceFromOptions, "", manual]
      - [mongodb.ReadPreferenceStatic, "mongodb/mongodb.ReadPreferenceStatic", "", manual]
      - [mongodb.ReadPreferenceStatic, mongodb, "Member[ReadPreference, manual]", manual]
      - [mongodb.ReadPreferenceStatic, mongoose.mongodb.ReadPreferenceStatic, "", manual]
      - [mongodb.RemoveUserOptions, mongodb.Admin, "Member[removeUser, manual].Argument[1, manual]", manual]
      - [mongodb.RemoveUserOptions, mongodb.Db, "Member[removeUser, manual].Argument[1, manual]", manual]
      - [mongodb.RemoveUserOptions, "mongodb/mongodb.RemoveUserOptions", "", manual]
      - [mongodb.RemoveUserOptions, mongoose.mongodb.RemoveUserOptions, "", manual]
      - [mongodb.RenameOptions, mongodb.Collection, "Member[rename, manual].Argument[1, manual]", manual]
      - [mongodb.RenameOptions, mongodb.Db, "Member[renameCollection, manual].Argument[2, manual]", manual]
      - [mongodb.RenameOptions, "mongodb/mongodb.RenameOptions", "", manual]
      - [mongodb.RenameOptions, mongoose.mongodb.RenameOptions, "", manual]
      - [mongodb.ReplaceOptions, mongodb.Collection, "Member[replaceOne, manual].Argument[2, manual]", manual]
      - [mongodb.ReplaceOptions, "mongodb/mongodb.ReplaceOptions", "", manual]
      - [mongodb.ReplaceOptions, mongoose.mongodb.ReplaceOptions, "", manual]
      - [mongodb.RunCommandOptions, mongodb.Admin, "Member[command, manual].Argument[1, manual]", manual]
      - [mongodb.RunCommandOptions, mongodb.Db, "Member[command, manual].Argument[1, manual]", manual]
      - [mongodb.RunCommandOptions, "mongodb/mongodb.RunCommandOptions", "", manual]
      - [mongodb.RunCommandOptions, mongoose.mongodb.RunCommandOptions, "", manual]
      - [mongodb.SelectServerOptions, "mongodb/mongodb.SelectServerOptions", "", manual]
      - [mongodb.SelectServerOptions, mongoose.mongodb.SelectServerOptions, "", manual]
      - [mongodb.SetProfilingLevelOptions, mongodb.Db, "Member[setProfilingLevel, manual].Argument[1, manual]", manual]
      - [mongodb.SetProfilingLevelOptions, "mongodb/mongodb.SetProfilingLevelOptions", "", manual]
      - [mongodb.SetProfilingLevelOptions, mongoose.mongodb.SetProfilingLevelOptions, "", manual]
      - [mongodb.Transaction, mongodb.ClientSession, "Member[transaction, manual]", manual]
      - [mongodb.Transaction, mongodb.TransactionStatic, Instance, manual]
      - [mongodb.Transaction, "mongodb/mongodb.Transaction", "", manual]
      - [mongodb.Transaction, mongoose.mongodb.Transaction, "", manual]
      - [mongodb.TransactionOptions, mongodb.ClientSession, "Member[defaultTransactionOptions, manual]", manual]
      - [mongodb.TransactionOptions, mongodb.ClientSession, "Member[startTransaction, manual].Argument[0, manual]", manual]
      - [mongodb.TransactionOptions, mongodb.ClientSession, "Member[withTransaction, manual].Argument[1, manual]", manual]
      - [mongodb.TransactionOptions, mongodb.ClientSessionOptions, "Member[defaultTransactionOptions, manual]", manual]
      - [mongodb.TransactionOptions, mongodb.Transaction, "Member[options, manual]", manual]
      - [mongodb.TransactionOptions, "mongodb/mongodb.TransactionOptions", "", manual]
      - [mongodb.TransactionOptions, mongoose.mongodb.TransactionOptions, "", manual]
      - [mongodb.TransactionStatic, "mongodb/mongodb.TransactionStatic", "", manual]
      - [mongodb.TransactionStatic, mongodb, "Member[Transaction, manual]", manual]
      - [mongodb.TransactionStatic, mongoose.mongodb.TransactionStatic, "", manual]
      - [mongodb.TypedEventEmitter, mongodb.AbstractCursor, "", manual]
      - [mongodb.TypedEventEmitter, mongodb.ChangeStream, "", manual]
      - [mongodb.TypedEventEmitter, mongodb.ClientSession, "", manual]
      - [mongodb.TypedEventEmitter, mongodb.GridFSBucket, "", manual]
      - [mongodb.TypedEventEmitter, mongodb.MongoClient, "", manual]
      - [mongodb.UnorderedBulkOperation, mongodb.Collection, "Member[initializeUnorderedBulkOp, manual].ReturnValue", manual]
      - [mongodb.UnorderedBulkOperation, mongodb.UnorderedBulkOperation, "Member[addToOperationsList, manual].ReturnValue", manual]
      - [mongodb.UnorderedBulkOperation, mongodb.UnorderedBulkOperationStatic, Instance, manual]
      - [mongodb.UnorderedBulkOperation, "mongodb/mongodb.UnorderedBulkOperation", "", manual]
      - [mongodb.UnorderedBulkOperation, mongoose.mongodb.UnorderedBulkOperation, "", manual]
      - [mongodb.UnorderedBulkOperationStatic, "mongodb/mongodb.UnorderedBulkOperationStatic", "", manual]
      - [mongodb.UnorderedBulkOperationStatic, mongodb, "Member[UnorderedBulkOperation, manual]", manual]
      - [mongodb.UnorderedBulkOperationStatic, mongoose.mongodb.UnorderedBulkOperationStatic, "", manual]
      - [mongodb.UpdateManyModel, mongodb.AnyBulkWriteOperation, "Member[updateMany, manual]", manual]
      - [mongodb.UpdateManyModel, "mongodb/mongodb.UpdateManyModel", "", manual]
      - [mongodb.UpdateManyModel, mongoose.mongodb.UpdateManyModel, "", manual]
      - [mongodb.UpdateOneModel, mongodb.AnyBulkWriteOperation, "Member[updateOne, manual]", manual]
      - [mongodb.UpdateOneModel, "mongodb/mongodb.UpdateOneModel", "", manual]
      - [mongodb.UpdateOneModel, mongoose.mongodb.UpdateOneModel, "", manual]
      - [mongodb.UpdateOptions, mongodb.Collection, "Member[update,updateMany,updateOne, manual].Argument[2, manual]", manual]
      - [mongodb.UpdateOptions, "mongodb/mongodb.UpdateOptions", "", manual]
      - [mongodb.UpdateOptions, mongoose.mongodb.UpdateOptions, "", manual]
      - [mongodb.ValidateCollectionOptions, mongodb.Admin, "Member[validateCollection, manual].Argument[1, manual]", manual]
      - [mongodb.ValidateCollectionOptions, "mongodb/mongodb.ValidateCollectionOptions", "", manual]
      - [mongodb.ValidateCollectionOptions, mongoose.mongodb.ValidateCollectionOptions, "", manual]
      - [mongodb.WithSessionCallback, mongodb.MongoClient, "Member[withSession, manual].Argument[1, manual]", manual]
      - [mongodb.WithSessionCallback, mongodb.MongoClient, "Member[withSession, manual].WithArity[1, manual].Argument[0, manual]", manual]
      - [mongodb.WithSessionCallback, "mongodb/mongodb.WithSessionCallback", "", manual]
      - [mongodb.WithSessionCallback, mongoose.mongodb.WithSessionCallback, "", manual]
      - [mongodb.WithTransactionCallback, mongodb.ClientSession, "Member[withTransaction, manual].Argument[0, manual]", manual]
      - [mongodb.WithTransactionCallback, "mongodb/mongodb.WithTransactionCallback", "", manual]
      - [mongodb.WithTransactionCallback, mongoose.mongodb.WithTransactionCallback, "", manual]
      - [mongodb, mongoose, "Member[mongodb, manual]", manual]
      - [mongoose.AcceptsDiscriminator, mongoose.Model, "", manual]
      - [mongoose.AcceptsDiscriminator, mongoose.Schema.Types.Array, "", manual]
      - [mongoose.AcceptsDiscriminator, mongoose.Schema.Types.DocumentArray, "", manual]
      - [mongoose.AcceptsDiscriminator, mongoose.Schema.Types.Subdocument, "", manual]
      - [mongoose.Aggregate, mongoose.Aggregate, "Member[addCursorFlag,addFields,allowDiskUse,append,collation,count,facet,graphLookup,group,hint,limit,lookup,match,model,near,option,project,read,readConcern,redact,replaceRoot,sample,search,session,skip,sort,sortByCount,unionWith,unwind, manual].ReturnValue", manual]
      - [mongoose.Aggregate, mongoose.AggregateStatic, Instance, manual]
      - [mongoose.Aggregate, mongoose.Model, "Member[aggregate, manual].ReturnValue", manual]
      - [mongoose.AggregateStatic, mongoose, "Member[Aggregate, manual]", manual]
      - [mongoose.Collection, mongoose.Collection, Instance, manual]
      - [mongoose.Collection, mongoose.Connection, "Member[collection, manual].ReturnValue", manual]
      - [mongoose.Collection, mongoose.Connection, "Member[collections, manual].AnyMember", manual]
      - [mongoose.Collection, mongoose.Document, "Member[collection, manual]", manual]
      - [mongoose.Collection, mongoose.Model, "Member[collection, manual]", manual]
      - [mongoose.Collection, mongoose, "Member[Collection, manual]", manual]
      - [mongoose.CollectionBase, mongoose.Collection, "", manual]
      - [mongoose.CompileModelOptions, mongoose.Connection, "Member[model, manual].Argument[3, manual]", manual]
      - [mongoose.CompileModelOptions, mongoose, "Member[model, manual].Argument[3, manual]", manual]
      - [mongoose.ConnectOptions, mongoose.Connection, "Member[openUri, manual].WithArity[1,2,3, manual].Argument[1, manual]", manual]
      - [mongoose.ConnectOptions, mongoose, "Member[connect,createConnection, manual].WithArity[1,2,3, manual].Argument[1, manual]", manual]
      - [mongoose.Connection, mongoose.Collection, "Argument[1, manual]", manual]
      - [mongoose.Connection, mongoose.CollectionBase, "Member[conn, manual]", manual]
      - [mongoose.Connection, mongoose.CompileModelOptions, "Member[connection, manual]", manual]
      - [mongoose.Connection, mongoose.Connection, "Member[asPromise, manual].ReturnValue.Awaited", manual]
      - [mongoose.Connection, mongoose.Connection, "Member[deleteModel,plugin,setClient,useDb, manual].ReturnValue", manual]
      - [mongoose.Connection, mongoose.Connection, "Member[openUri, manual].Argument[2, manual].TypeVar[mongoose.Callback.0, manual]", manual]
      - [mongoose.Connection, mongoose.Connection, "Member[openUri, manual].WithArity[1,2, manual].ReturnValue.Awaited", manual]
      - [mongoose.Connection, mongoose.Connection, "Member[openUri, manual].WithArity[2,3, manual].ReturnValue", manual]
      - [mongoose.Connection, mongoose.Connection, "Member[openUri, manual].WithArity[2, manual].Argument[1, manual].TypeVar[mongoose.Callback.0, manual]", manual]
      - [mongoose.Connection, mongoose.ConnectionStatic, Instance, manual]
      - [mongoose.Connection, mongoose.Document, "Member[db, manual]", manual]
      - [mongoose.Connection, mongoose.Model, "Member[db, manual]", manual]
      - [mongoose.Connection, mongoose, "Member[connection, manual]", manual]
      - [mongoose.Connection, mongoose, "Member[connections, manual].ArrayElement", manual]
      - [mongoose.Connection, mongoose, "Member[createConnection, manual].Argument[2, manual].TypeVar[mongoose.Callback.0, manual]", manual]
      - [mongoose.Connection, mongoose, "Member[createConnection, manual].WithArity[0,1,2, manual].ReturnValue", manual]
      - [mongoose.Connection, mongoose, "Member[createConnection, manual].WithArity[2, manual].Argument[1, manual].TypeVar[mongoose.Callback.0, manual]", manual]
      - [mongoose.ConnectionStatic, mongoose, "Member[Connection, manual]", manual]
      - [mongoose.Cursor, mongoose.Query, "Member[cursor, manual].ReturnValue", manual]
      - [mongoose.DiscriminatorModel, mongoose.DiscriminatorSchema, "TypeVar[mongoose.Schema.1, manual]", manual]
      - [mongoose.Document, mongoose.Document, "Member[$getAllSubdocs,$getPopulatedDocs, manual].ReturnValue.ArrayElement", manual]
      - [mongoose.Document, mongoose.Document, "Member[$inc,$parent,$set,depopulate,increment,init,overwrite,set, manual].ReturnValue", manual]
      - [mongoose.Document, mongoose.Document, "Member[delete,deleteOne, manual].WithArity[0,1, manual].ReturnValue.TypeVar[mongoose.QueryWithHelpers.1, manual]", manual]
      - [mongoose.Document, mongoose.Document, "Member[equals, manual].Argument[0, manual]", manual]
      - [mongoose.Document, mongoose.Document, "Member[init, manual].Argument[2, manual].TypeVar[mongoose.Callback.0, manual]", manual]
      - [mongoose.Document, mongoose.Document, "Member[remove,save, manual].WithArity[0,1, manual].ReturnValue.Awaited", manual]
      - [mongoose.Document, mongoose.Document, "Member[replaceOne,update,updateOne, manual].ReturnValue.TypeVar[mongoose.Query.1, manual]", manual]
      - [mongoose.Document, mongoose.Document, "Member[save, manual].Argument[1, manual].TypeVar[mongoose.Callback.0, manual]", manual]
      - [mongoose.Document, mongoose.Document, "Member[save, manual].WithArity[1, manual].Argument[0, manual].TypeVar[mongoose.Callback.0, manual]", manual]
      - [mongoose.Document, mongoose.DocumentStatic, Instance, manual]
      - [mongoose.Document, mongoose.Error.VersionErrorStatic, "Argument[0, manual]", manual]
      - [mongoose.Document, mongoose.HydratedDocument, "", manual]
      - [mongoose.Document, mongoose.HydratedDocument, "TypeVar[mongoose.Require_id.0, manual]", manual]
      - [mongoose.Document, mongoose.Model, "Member[bulkSave, manual].Argument[0, manual].ArrayElement", manual]
      - [mongoose.Document, mongoose.TVirtualPathFN, "Argument[2, manual]", manual]
      - [mongoose.Document, mongoose.Types.Subdocument, "", manual]
      - [mongoose.Document, mongoose.Types.Subdocument, "Member[$parent,ownerDocument,parent, manual].ReturnValue", manual]
      - [mongoose.Document, mongoose.VirtualType, "Member[applyGetters,applySetters, manual].Argument[1, manual]", manual]
      - [mongoose.DocumentStatic, mongoose, "Member[Document, manual]", manual]
      - [mongoose.Error.VersionErrorStatic, mongoose, "Member[Error, manual].Member[VersionError, manual]", manual]
      - [mongoose.HydratedDocument, mongoose.Model, Instance, manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[$where,count,countDocuments,deleteMany,deleteOne,distinct,estimatedDocumentCount,find,geoSearch,remove,replaceOne,update,updateMany,updateOne,where, manual].ReturnValue.TypeVar[mongoose.QueryWithHelpers.1, manual]", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[$where,find,geoSearch,where, manual].ReturnValue.TypeVar[mongoose.QueryWithHelpers.0, manual].ArrayElement", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[create,insertMany, manual].WithArity[2, manual].Argument[1, manual].TypeVar[mongoose.Callback.0, manual].ArrayElement", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[create, manual].WithArity[0..,1,2, manual].ReturnValue.Awaited.ArrayElement", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[create, manual].WithArity[1, manual].ReturnValue.Awaited", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[create, manual].WithArity[2, manual].Argument[1, manual].TypeVar[mongoose.Callback.0, manual]", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[exists, manual].WithArity[1,2, manual].ReturnValue.TypeVar[mongoose.QueryWithHelpers.1, manual]", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[find,insertMany, manual].WithArity[3, manual].Argument[2, manual].TypeVar[mongoose.Callback.0, manual].ArrayElement", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[findById,findByIdAndDelete,findByIdAndRemove,findOne,findOneAndDelete,findOneAndRemove, manual].ReturnValue.TypeVar[mongoose.QueryWithHelpers.0,mongoose.QueryWithHelpers.1, manual]", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[findById,findOne, manual].Argument[3, manual].TypeVar[mongoose.Callback.0, manual]", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[findByIdAndDelete,findByIdAndRemove,findOneAndDelete,findOneAndRemove, manual].Argument[2, manual].Argument[1, manual]", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[findByIdAndUpdate,findOneAndReplace,findOneAndUpdate, manual].WithArity[0,1,2,3,4, manual].ReturnValue.TypeVar[mongoose.QueryWithHelpers.0,mongoose.QueryWithHelpers.1, manual]", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[findByIdAndUpdate,findOneAndReplace,findOneAndUpdate, manual].WithArity[3,4, manual].ReturnValue.TypeVar[mongoose.QueryWithHelpers.0, manual].TypeVar[mongoose.ModifyResult.0, manual]", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[findByIdAndUpdate, manual].WithArity[0,1,2,4, manual].Argument[3, manual].Argument[1, manual]", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[findByIdAndUpdate, manual].WithArity[3, manual].Argument[2,3, manual].Argument[1, manual]", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[findById, manual].WithArity[1,2,3, manual].Argument[2, manual].TypeVar[mongoose.Callback.0, manual]", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[findOneAndReplace, manual].WithArity[0,1,2,3,4, manual].Argument[3, manual].Argument[1, manual]", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[findOneAndUpdate, manual].WithArity[3,4, manual].Argument[3, manual].Argument[1, manual]", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[findOne, manual].WithArity[0,1,2, manual].Argument[1,2, manual].TypeVar[mongoose.Callback.0, manual]", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[findOne, manual].WithArity[3, manual].Argument[2, manual].TypeVar[mongoose.Callback.0, manual]", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[find, manual].Argument[3, manual].TypeVar[mongoose.Callback.0, manual].ArrayElement", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[find, manual].WithArity[0, manual].Argument[0, manual].TypeVar[mongoose.Callback.0, manual].ArrayElement", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[find, manual].WithArity[1, manual].Argument[0,1,2, manual].TypeVar[mongoose.Callback.0, manual].ArrayElement", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[find, manual].WithArity[2, manual].Argument[1,2, manual].TypeVar[mongoose.Callback.0, manual].ArrayElement", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[geoSearch, manual].Argument[2, manual].TypeVar[mongoose.Callback.0, manual].ArrayElement", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[hydrate, manual].ReturnValue", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[init, manual].ReturnValue.Awaited", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[insertMany, manual].WithArity[1,2, manual].ReturnValue.Awaited.ArrayElement", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[populate, manual].WithArity[2,3, manual].Argument[2, manual].TypeVar[mongoose.Callback.0, manual]", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[populate, manual].WithArity[2,3, manual].Argument[2, manual].TypeVar[mongoose.Callback.0, manual].ArrayElement", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[populate, manual].WithArity[2,3, manual].ReturnValue.Awaited", manual]
      - [mongoose.HydratedDocument, mongoose.Model, "Member[populate, manual].WithArity[2,3, manual].ReturnValue.Awaited.ArrayElement", manual]
      - [mongoose.HydratedDocument, mongoose.TVirtualPathFN, "Argument[1, manual].TypeVar[mongoose.VirtualType.0, manual]", manual]
      - [mongoose.HydratedDocument, mongoose.VirtualPathFunctions, "Member[options, manual].TypeVar[mongoose.VirtualTypeOptions.0, manual]", manual]
      - [mongoose.InsertManyOptions, mongoose.Model, "Member[insertMany, manual].WithArity[2,3, manual].Argument[1, manual]", manual]
      - [mongoose.Model, mongoose.AcceptsDiscriminator, "Member[discriminator, manual].WithArity[2,3, manual].ReturnValue", manual]
      - [mongoose.Model, mongoose.Aggregate, "Member[model, manual].Argument[0, manual]", manual]
      - [mongoose.Model, mongoose.Connection, "Member[model, manual].WithArity[1,2,3,4, manual].ReturnValue", manual]
      - [mongoose.Model, mongoose.Connection, "Member[models, manual].AnyMember", manual]
      - [mongoose.Model, mongoose.DiscriminatorModel, "", manual]
      - [mongoose.Model, mongoose.Document, "Member[$model, manual].ReturnValue", manual]
      - [mongoose.Model, mongoose.Document, "Member[populate, manual].Argument[2, manual]", manual]
      - [mongoose.Model, mongoose.Model, "Member[discriminators, manual].AnyMember", manual]
      - [mongoose.Model, mongoose.Models, AnyMember, manual]
      - [mongoose.Model, mongoose.PopulateOptions, "Member[model, manual]", manual]
      - [mongoose.Model, mongoose.Query, "Member[cast, manual].Argument[0, manual]", manual]
      - [mongoose.Model, mongoose.Query, "Member[populate, manual].Argument[2, manual]", manual]
      - [mongoose.Model, mongoose.Schema.Types.Array, "Member[discriminator, manual].WithArity[2,3, manual].ReturnValue", manual]
      - [mongoose.Model, mongoose.Schema.Types.DocumentArray, "Member[discriminator, manual].WithArity[2,3, manual].ReturnValue", manual]
      - [mongoose.Model, mongoose.Schema.Types.Subdocument, "Member[discriminator, manual].WithArity[2,3, manual].ReturnValue", manual]
      - [mongoose.Model, mongoose.SchemaStatic, "Instance.TypeVar[mongoose.Schema.1, manual]", manual]
      - [mongoose.Model, mongoose, "Member[Model, manual]", manual]
      - [mongoose.Model, mongoose, "Member[model, manual].ReturnValue", manual]
      - [mongoose.Models, mongoose, "Member[models, manual]", manual]
      - [mongoose.PopulateOption, mongoose.InsertManyOptions, "", manual]
      - [mongoose.PopulateOption, mongoose.QueryOptions, "", manual]
      - [mongoose.PopulateOptions, mongoose.Document, "Member[populate, manual].Argument[4, manual]", manual]
      - [mongoose.PopulateOptions, mongoose.Document, "Member[populate, manual].WithArity[1,2, manual].Argument[0, manual]", manual]
      - [mongoose.PopulateOptions, mongoose.Document, "Member[populate, manual].WithArity[1,2, manual].Argument[0, manual].ArrayElement", manual]
      - [mongoose.PopulateOptions, mongoose.Model, "Member[populate, manual].Argument[1, manual]", manual]
      - [mongoose.PopulateOptions, mongoose.Model, "Member[populate, manual].Argument[1, manual].ArrayElement", manual]
      - [mongoose.PopulateOptions, mongoose.PopulateOption, "Member[populate, manual]", manual]
      - [mongoose.PopulateOptions, mongoose.PopulateOption, "Member[populate, manual].ArrayElement", manual]
      - [mongoose.PopulateOptions, mongoose.PopulateOptions, "Member[populate, manual]", manual]
      - [mongoose.PopulateOptions, mongoose.PopulateOptions, "Member[populate, manual].ArrayElement", manual]
      - [mongoose.PopulateOptions, mongoose.Query, "Member[populate, manual].WithArity[1, manual].Argument[0, manual]", manual]
      - [mongoose.PopulateOptions, mongoose.Query, "Member[populate, manual].WithArity[1, manual].Argument[0, manual].ArrayElement", manual]
      - [mongoose.Query, mongoose.Document, "Member[replaceOne,update,updateOne, manual].ReturnValue", manual]
      - [mongoose.Query, mongoose.HydratedDocument, "TypeVar[mongoose.Require_id.0, manual]", manual]
      - [mongoose.Query, mongoose.Query, "Member[all,allowDiskUse,and,batchSize,box,circle,clone,collation,comment,elemMatch,equals,exists,explain,geometry,gt,gte,hint,in,intersects,j,limit,lt,lte,maxDistance,maxScan,maxTimeMS,merge,mod,ne,near,nin,nor,or,polygon,read,readConcern,regex,remove,select,session,set,setOptions,size,skip,slice,snapshot,sort,tailable,w,where,within,wtimeout, manual].ReturnValue", manual]
      - [mongoose.Query, mongoose.Query, "Member[error, manual].WithArity[1, manual].ReturnValue", manual]
      - [mongoose.Query, mongoose.Query, "Member[merge, manual].Argument[0, manual]", manual]
      - [mongoose.Query, mongoose.QueryStatic, Instance, manual]
      - [mongoose.Query, mongoose.QueryWithHelpers, "", manual]
      - [mongoose.QueryOptions, mongoose.Document, "Member[delete,deleteOne,remove, manual].WithArity[0,1,2, manual].Argument[0, manual]", manual]
      - [mongoose.QueryOptions, mongoose.Document, "Member[replaceOne,update,updateOne, manual].Argument[1, manual]", manual]
      - [mongoose.QueryOptions, mongoose.Model, "Member[countDocuments,findByIdAndDelete,findByIdAndRemove,findOneAndDelete,findOneAndRemove, manual].Argument[1, manual]", manual]
      - [mongoose.QueryOptions, mongoose.Model, "Member[deleteMany,deleteOne, manual].WithArity[0,1,2,3, manual].Argument[1, manual]", manual]
      - [mongoose.QueryOptions, mongoose.Model, "Member[estimatedDocumentCount, manual].Argument[0, manual]", manual]
      - [mongoose.QueryOptions, mongoose.Model, "Member[find,findById, manual].WithArity[1,2,3,4, manual].Argument[2, manual]", manual]
      - [mongoose.QueryOptions, mongoose.Model, "Member[findByIdAndUpdate,findOne,findOneAndReplace,findOneAndUpdate, manual].WithArity[0,1,2,3,4, manual].Argument[2, manual]", manual]
      - [mongoose.QueryOptions, mongoose.Model, "Member[replaceOne,update,updateMany,updateOne, manual].Argument[2, manual]", manual]
      - [mongoose.QueryOptions, mongoose.PopulateOptions, "Member[options, manual]", manual]
      - [mongoose.QueryOptions, mongoose.Query, "Member[countDocuments,findByIdAndDelete,findOneAndDelete,findOneAndRemove, manual].Argument[1, manual]", manual]
      - [mongoose.QueryOptions, mongoose.Query, "Member[cursor,estimatedDocumentCount,setOptions, manual].Argument[0, manual]", manual]
      - [mongoose.QueryOptions, mongoose.Query, "Member[cursor, manual].ReturnValue.TypeVar[mongoose.Cursor.1, manual]", manual]
      - [mongoose.QueryOptions, mongoose.Query, "Member[deleteMany,deleteOne, manual].WithArity[0,1,2,3, manual].Argument[1, manual]", manual]
      - [mongoose.QueryOptions, mongoose.Query, "Member[findByIdAndUpdate,findOne,findOneAndUpdate, manual].WithArity[0,1,2,3,4, manual].Argument[2, manual]", manual]
      - [mongoose.QueryOptions, mongoose.Query, "Member[find, manual].WithArity[1,2,3,4, manual].Argument[2, manual]", manual]
      - [mongoose.QueryOptions, mongoose.Query, "Member[getOptions, manual].ReturnValue", manual]
      - [mongoose.QueryOptions, mongoose.Query, "Member[replaceOne,update,updateMany,updateOne, manual].Argument[2, manual]", manual]
      - [mongoose.QueryOptions, mongoose.VirtualTypeOptions, "Member[options, manual]", manual]
      - [mongoose.QueryStatic, mongoose, "Member[Query, manual]", manual]
      - [mongoose.QueryWithHelpers, mongoose.Document, "Member[delete,deleteOne, manual].WithArity[0,1, manual].ReturnValue", manual]
      - [mongoose.QueryWithHelpers, mongoose.Model, "Member[$where,count,countDocuments,deleteMany,deleteOne,distinct,estimatedDocumentCount,find,findById,findByIdAndDelete,findByIdAndRemove,findOne,findOneAndDelete,findOneAndRemove,geoSearch,remove,replaceOne,update,updateMany,updateOne,where, manual].ReturnValue", manual]
      - [mongoose.QueryWithHelpers, mongoose.Model, "Member[exists, manual].WithArity[1,2, manual].ReturnValue", manual]
      - [mongoose.QueryWithHelpers, mongoose.Model, "Member[findByIdAndUpdate,findOneAndReplace,findOneAndUpdate, manual].WithArity[0,1,2,3,4, manual].ReturnValue", manual]
      - [mongoose.QueryWithHelpers, mongoose.Query, "Member[$where,count,countDocuments,deleteMany,deleteOne,distinct,estimatedDocumentCount,find,findByIdAndDelete,findOne,findOneAndDelete,findOneAndRemove,lean,orFail,populate,replaceOne,transform,update,updateMany,updateOne, manual].ReturnValue", manual]
      - [mongoose.QueryWithHelpers, mongoose.Query, "Member[findByIdAndUpdate,findOneAndUpdate, manual].WithArity[0,1,2,3,4, manual].ReturnValue", manual]
      - [mongoose.QueryWithHelpers, mongoose.Query, "Member[toConstructor, manual].ReturnValue.Instance", manual]
      - [mongoose.Schema.Types.Array, mongoose.Schema.Types.Array, "Member[enum, manual].ReturnValue", manual]
      - [mongoose.Schema.Types.Array, mongoose.Schema.Types.ArrayStatic, Instance, manual]
      - [mongoose.Schema.Types.ArrayStatic, mongoose, "Member[Schema, manual].Member[Types, manual].Member[Array, manual]", manual]
      - [mongoose.Schema.Types.DocumentArray, mongoose.Schema.Types.DocumentArrayStatic, Instance, manual]
      - [mongoose.Schema.Types.DocumentArrayStatic, mongoose, "Member[Schema, manual].Member[Types, manual].Member[DocumentArray, manual]", manual]
      - [mongoose.Schema.Types.Subdocument, mongoose.Schema.Types.SubdocumentStatic, Instance, manual]
      - [mongoose.Schema.Types.SubdocumentStatic, mongoose.Schema.Types.DocumentArray, "Member[caster, manual]", manual]
      - [mongoose.Schema.Types.SubdocumentStatic, mongoose, "Member[Schema, manual].Member[Types, manual].Member[Subdocument, manual]", manual]
      - [mongoose.SchemaStatic, mongoose, "Member[Schema, manual]", manual]
      - [mongoose.SessionOperation, mongoose.Aggregate, "", manual]
      - [mongoose.SessionOperation, mongoose.Query, "", manual]
      - [mongoose.TVirtualPathFN, mongoose.VirtualPathFunctions, "Member[get,set, manual]", manual]
      - [mongoose.Types.Array, mongoose.Types.DocumentArray, "", manual]
      - [mongoose.Types.ArraySubdocument, mongoose.Types.ArraySubdocumentStatic, Instance, manual]
      - [mongoose.Types.ArraySubdocumentStatic, mongoose, "Member[Types, manual].Member[ArraySubdocument, manual]", manual]
      - [mongoose.Types.DocumentArray, mongoose.Types.ArraySubdocument, "Member[parentArray, manual].ReturnValue", manual]
      - [mongoose.Types.DocumentArray, mongoose.Types.DocumentArrayStatic, Instance, manual]
      - [mongoose.Types.DocumentArray, "mongoose/inferschematype.ResolvePathType", "TypeVar[mongoose.IfEquals.3, manual]", manual]
      - [mongoose.Types.DocumentArrayStatic, mongoose, "Member[Types, manual].Member[DocumentArray, manual]", manual]
      - [mongoose.Types.ObjectId, "mongoose/inferschematype.ResolvePathType", "", manual]
      - [mongoose.Types.Subdocument, mongoose.Types.ArraySubdocument, "", manual]
      - [mongoose.Types.Subdocument, mongoose.Types.DocumentArray, "Member[create,id, manual].ReturnValue", manual]
      - [mongoose.Types.Subdocument, mongoose.Types.DocumentArray, "TypeVar[mongoose.Types.Array.0, manual]", manual]
      - [mongoose.Types.Subdocument, mongoose.Types.SubdocumentStatic, Instance, manual]
      - [mongoose.Types.SubdocumentStatic, mongoose, "Member[Types, manual].Member[Subdocument, manual]", manual]
      - [mongoose.VirtualType, mongoose.TVirtualPathFN, "Argument[1, manual]", manual]
      - [mongoose.VirtualType, mongoose.VirtualType, "Member[get,set, manual].Argument[0, manual].Argument[1, manual]", manual]
      - [mongoose.VirtualType, mongoose.VirtualType, "Member[get,set, manual].ReturnValue", manual]
      - [mongoose.VirtualType, mongoose.VirtualTypeStatic, Instance, manual]
      - [mongoose.VirtualTypeOptions, mongoose.VirtualPathFunctions, "Member[options, manual]", manual]
      - [mongoose.VirtualTypeStatic, mongoose, "Member[VirtualType, manual]", manual]
      - ["mongoose/inferschematype.ResolvePathType", "mongoose/inferschematype.ObtainDocumentPathType", "", manual]
      - ["mongoose/inferschematype.ResolvePathType", "mongoose/inferschematype.ResolvePathType", "TypeVar[mongoose.IfEquals.3, manual].ArrayElement", manual]
      - ["mongoose/inferschematype.ResolvePathType", "mongoose/inferschematype.ResolvePathType", "TypeVar[mongoose.IfEquals.3, manual].TypeVar[mongoose.Types.DocumentArray.0, manual]", manual]
      - [mongoose, mongoose, "Member[mongoose, manual]", manual]

  - addsTo: 
      pack: codeql/javascript-all
      extensible: summaryModel
    data:
      - [mongodb.AbstractCursor, "", "", "Member[addCursorFlag,batchSize,maxTimeMS,withReadConcern,withReadPreference, manual].ReturnValue", type, manual]
      - [mongodb.BulkOperationBase, "", "", "Member[addToOperationsList,raw, manual].ReturnValue", type, manual]
      - [mongodb.FindCursor, "", "", "Member[addQueryModifier,allowDiskUse,collation,comment,filter,hint,limit,max,maxAwaitTimeMS,maxTimeMS,min,returnKey,showRecordId,skip,sort, manual].ReturnValue", type, manual]
      - [mongodb.FindOperators, "", "", "Member[arrayFilters,collation,upsert, manual].ReturnValue", type, manual]
      - [mongodb.GridFSBucketWriteStream, "", "", "Member[end, manual].ReturnValue", type, manual]
      - [mongodb.MongoClient, "", "", "Member[connect, manual].Argument[0, manual].TypeVar[mongodb.Callback.0, manual]", type, manual]
      - [mongodb.MongoClient, "", "", "Member[connect, manual].WithArity[0, manual].ReturnValue.Awaited", type, manual]
      - [mongodb.OrderedBulkOperation, "", "", "Member[addToOperationsList, manual].ReturnValue", type, manual]
      - [mongodb.TypedEventEmitter, "", "", "Member[addListener,off,on,once,prependListener,prependOnceListener,removeAllListeners,removeListener,setMaxListeners, manual].ReturnValue", type, manual]
      - [mongodb.UnorderedBulkOperation, "", "", "Member[addToOperationsList, manual].ReturnValue", type, manual]
      - [mongoose.Aggregate, "", "", "Member[addCursorFlag,addFields,allowDiskUse,append,collation,count,facet,graphLookup,group,hint,limit,lookup,match,model,near,option,project,read,readConcern,redact,replaceRoot,sample,search,session,skip,sort,sortByCount,unionWith,unwind, manual].ReturnValue", type, manual]
      - [mongoose.Connection, "", "", "Member[asPromise, manual].ReturnValue.Awaited", type, manual]
      - [mongoose.Connection, "", "", "Member[deleteModel,setClient, manual].ReturnValue", type, manual]
      - [mongoose.Cursor, "", "", "Member[addCursorFlag, manual].ReturnValue", type, manual]
      - [mongoose.Document, "", "", "Member[$inc,$set,depopulate,increment,init,overwrite,set, manual].ReturnValue", type, manual]
      - [mongoose.Document, "", "", "Member[delete,deleteOne, manual].WithArity[0,1, manual].ReturnValue.TypeVar[mongoose.QueryWithHelpers.1, manual]", type, manual]
      - [mongoose.Document, "", "", "Member[getChanges, manual].ReturnValue.TypeVar[mongoose.UpdateQuery.0, manual]", type, manual]
      - [mongoose.Document, "", "", "Member[init, manual].Argument[2, manual].TypeVar[mongoose.Callback.0, manual]", type, manual]
      - [mongoose.Document, "", "", "Member[populate, manual].Argument[1,5, manual].TypeVar[mongoose.Callback.0, manual].TypeVar[mongoose.MergeType.0, manual]", type, manual]
      - [mongoose.Document, "", "", "Member[populate, manual].WithArity[1,2,3,4,5, manual].ReturnValue.Awaited.TypeVar[mongoose.MergeType.0, manual]", type, manual]
      - [mongoose.Document, "", "", "Member[remove,save, manual].WithArity[0,1, manual].ReturnValue.Awaited", type, manual]
      - [mongoose.Document, "", "", "Member[replaceOne,update,updateOne, manual].ReturnValue.TypeVar[mongoose.Query.1, manual]", type, manual]
      - [mongoose.Document, "", "", "Member[save, manual].Argument[1, manual].TypeVar[mongoose.Callback.0, manual]", type, manual]
      - [mongoose.Document, "", "", "Member[save, manual].WithArity[1, manual].Argument[0, manual].TypeVar[mongoose.Callback.0, manual]", type, manual]
      - [mongoose.Document, "", "", "Member[update,updateOne, manual].Argument[0, manual].TypeVar[mongoose.UpdateQuery.0, manual]", type, manual]
      - [mongoose.Query, "", "", "Member[all,allowDiskUse,and,batchSize,box,circle,clone,collation,comment,elemMatch,equals,exists,explain,geometry,gt,gte,hint,in,intersects,j,limit,lt,lte,maxDistance,maxScan,maxTimeMS,merge,mod,ne,near,nin,nor,or,polygon,read,readConcern,regex,select,session,set,setOptions,size,skip,slice,snapshot,sort,tailable,w,where,within,wtimeout, manual].ReturnValue", type, manual]
      - [mongoose.Query, "", "", "Member[error, manual].WithArity[1, manual].ReturnValue", type, manual]
      - [mongoose.Schema.Types.Array, "", "", "Member[enum, manual].ReturnValue", type, manual]
      - [mongoose.SessionOperation, "", "", "Member[session, manual].ReturnValue", type, manual]
      - [mongoose.Types.Array, "", "", "Member[pull,remove,set, manual].ReturnValue", type, manual]
      - [mongoose.Types.ObjectId, "", "", "Member[_id, manual]", type, manual]
      - [mongoose.VirtualType, "", "", "Member[get,set, manual].ReturnValue", type, manual]

  - addsTo: 
      pack: codeql/javascript-all
      extensible: typeVariableModel
    data:
      - [mongodb.Callback.0, "Argument[1, manual]", manual]
      - [mongoose.Callback.0, "Argument[1, manual]", manual]
      - [mongoose.Cursor.0, "Member[eachAsync, manual].WithArity[1,2,3, manual].Argument[0, manual].Argument[0, manual]", manual]
      - [mongoose.Cursor.0, "Member[eachAsync, manual].WithArity[2,3, manual].Argument[0, manual].Argument[0, manual].ArrayElement", manual]
      - [mongoose.Cursor.0, "Member[map, manual].Argument[0, manual].Argument[0, manual]", manual]
      - [mongoose.Cursor.0, "Member[next, manual].Argument[0, manual].TypeVar[mongoose.Callback.0, manual]", manual]
      - [mongoose.Cursor.0, "Member[next, manual].WithArity[0, manual].ReturnValue.Awaited", manual]
      - [mongoose.Cursor.1, "Member[map, manual].ReturnValue.TypeVar[mongoose.Cursor.1, manual]", manual]
      - [mongoose.Cursor.1, "Member[options, manual]", manual]
      - [mongoose.DiscriminatorSchema.1, "TypeVar[mongoose.Schema.1, manual]", manual]
      - [mongoose.DiscriminatorSchema.1, "TypeVar[mongoose.Schema.1, manual].TypeVar[mongoose.DiscriminatorModel.1, manual]", manual]
      - [mongoose.Document.0, "Member[_id, manual]", manual]
      - [mongoose.Document.0, "Member[equals, manual].Argument[0, manual].TypeVar[mongoose.Document.0, manual]", manual]
      - [mongoose.FilterQuery.0, "TypeVar[mongoose._FilterQuery.0, manual]", manual]
      - [mongoose.IfAny.1, "", manual]
      - [mongoose.IfAny.2, "", manual]
      - [mongoose.IfEquals.3, "", manual]
      - [mongoose.LeanDocumentOrArray.0, "", manual]
      - [mongoose.LeanDocumentOrArray.0, "TypeVar[mongoose.LeanDocument.0, manual]", manual]
      - [mongoose.LeanDocumentOrArrayWithRawType.0, "", manual]
      - [mongoose.ModifyResult.0, "Member[value, manual].TypeVar[mongoose.Require_id.0, manual]", manual]
      - [mongoose.PluginFunction.1, "Argument[0, manual].TypeVar[mongoose.Schema.1, manual]", manual]
      - [mongoose.PostMiddlewareFunction.1, "Argument[0, manual]", manual]
      - [mongoose.Query.0, "Member[exec, manual].Argument[0, manual].TypeVar[mongoose.Callback.0, manual]", manual]
      - [mongoose.Query.0, "Member[exec, manual].WithArity[0, manual].ReturnValue.Awaited", manual]
      - [mongoose.Query.0, "Member[lean, manual].ReturnValue.TypeVar[mongoose.QueryWithHelpers.0, manual].TypeVar[mongoose.LeanDocumentOrArray.0,mongoose.LeanDocumentOrArrayWithRawType.0, manual]", manual]
      - [mongoose.Query.0, "Member[orFail, manual].ReturnValue.TypeVar[mongoose.QueryWithHelpers.0, manual]", manual]
      - [mongoose.Query.0, "Member[populate, manual].ReturnValue.TypeVar[mongoose.QueryWithHelpers.0, manual].TypeVar[mongoose.UnpackedIntersection.0, manual]", manual]
      - [mongoose.Query.0, "Member[then,transform, manual].Argument[0, manual].Argument[0, manual]", manual]
      - [mongoose.Query.0, "Member[toConstructor, manual].ReturnValue.Instance.TypeVar[mongoose.QueryWithHelpers.0, manual]", manual]
      - [mongoose.Query.1, "Member[$where,count,countDocuments,deleteMany,deleteOne,distinct,estimatedDocumentCount,find,lean,orFail,populate,replaceOne,transform,update,updateMany,updateOne, manual].ReturnValue.TypeVar[mongoose.QueryWithHelpers.1, manual]", manual]
      - [mongoose.Query.1, "Member[$where,find, manual].ReturnValue.TypeVar[mongoose.QueryWithHelpers.0, manual].ArrayElement", manual]
      - [mongoose.Query.1, "Member[_mongooseOptions, manual].TypeVar[mongoose.MongooseQueryOptions.0, manual]", manual]
      - [mongoose.Query.1, "Member[and,nor,or, manual].Argument[0, manual].ArrayElement.TypeVar[mongoose.FilterQuery.0, manual]", manual]
      - [mongoose.Query.1, "Member[countDocuments,findByIdAndDelete,findOneAndDelete,findOneAndRemove, manual].Argument[1, manual].TypeVar[mongoose.QueryOptions.0, manual]", manual]
      - [mongoose.Query.1, "Member[countDocuments, manual].WithArity[1,2,3, manual].Argument[0, manual].TypeVar[mongoose.FilterQuery.0, manual]", manual]
      - [mongoose.Query.1, "Member[count, manual].WithArity[1,2, manual].Argument[0, manual].TypeVar[mongoose.FilterQuery.0, manual]", manual]
      - [mongoose.Query.1, "Member[cursor,estimatedDocumentCount,setOptions, manual].Argument[0, manual].TypeVar[mongoose.QueryOptions.0, manual]", manual]
      - [mongoose.Query.1, "Member[cursor, manual].ReturnValue.TypeVar[mongoose.Cursor.0, manual]", manual]
      - [mongoose.Query.1, "Member[cursor, manual].ReturnValue.TypeVar[mongoose.Cursor.1, manual].TypeVar[mongoose.QueryOptions.0, manual]", manual]
      - [mongoose.Query.1, "Member[deleteMany,deleteOne, manual].WithArity[0,1,2,3, manual].Argument[0, manual].TypeVar[mongoose.FilterQuery.0, manual]", manual]
      - [mongoose.Query.1, "Member[deleteMany,deleteOne, manual].WithArity[0,1,2,3, manual].Argument[1, manual].TypeVar[mongoose.QueryOptions.0, manual]", manual]
      - [mongoose.Query.1, "Member[distinct, manual].Argument[1, manual].TypeVar[mongoose.FilterQuery.0, manual]", manual]
      - [mongoose.Query.1, "Member[findByIdAndDelete,findOne,findOneAndDelete,findOneAndRemove, manual].ReturnValue.TypeVar[mongoose.QueryWithHelpers.0,mongoose.QueryWithHelpers.1, manual]", manual]
      - [mongoose.Query.1, "Member[findByIdAndDelete,findOneAndDelete,findOneAndRemove, manual].Argument[2, manual].Argument[1, manual]", manual]
      - [mongoose.Query.1, "Member[findByIdAndUpdate,findOneAndUpdate,update,updateMany,updateOne, manual].Argument[1, manual].TypeVar[mongoose.UpdateQuery.0, manual]", manual]
      - [mongoose.Query.1, "Member[findByIdAndUpdate,findOneAndUpdate, manual].WithArity[0,1,2,3,4, manual].Argument[2, manual].TypeVar[mongoose.QueryOptions.0, manual]", manual]
      - [mongoose.Query.1, "Member[findByIdAndUpdate,findOneAndUpdate, manual].WithArity[0,1,2,3,4, manual].ReturnValue.TypeVar[mongoose.QueryWithHelpers.0,mongoose.QueryWithHelpers.1, manual]", manual]
      - [mongoose.Query.1, "Member[findByIdAndUpdate, manual].WithArity[0,1,2,4, manual].Argument[3, manual].Argument[1, manual]", manual]
      - [mongoose.Query.1, "Member[findByIdAndUpdate, manual].WithArity[3, manual].Argument[2,3, manual].Argument[1, manual]", manual]
      - [mongoose.Query.1, "Member[findOne,findOneAndDelete,findOneAndRemove,findOneAndUpdate,merge,remove,replaceOne,setQuery,update,updateMany,updateOne, manual].Argument[0, manual].TypeVar[mongoose.FilterQuery.0, manual]", manual]
      - [mongoose.Query.1, "Member[findOneAndUpdate, manual].Argument[3, manual].Argument[1, manual]", manual]
      - [mongoose.Query.1, "Member[findOneAndUpdate, manual].Argument[3, manual].Argument[2, manual].TypeVar[mongoose.ModifyResult.0, manual]", manual]
      - [mongoose.Query.1, "Member[findOneAndUpdate, manual].WithArity[3,4, manual].ReturnValue.TypeVar[mongoose.QueryWithHelpers.0, manual].TypeVar[mongoose.ModifyResult.0, manual]", manual]
      - [mongoose.Query.1, "Member[findOne, manual].Argument[3, manual].TypeVar[mongoose.Callback.0, manual]", manual]
      - [mongoose.Query.1, "Member[findOne, manual].WithArity[0,1,2,3, manual].Argument[2, manual].TypeVar[mongoose.Callback.0,mongoose.QueryOptions.0, manual]", manual]
      - [mongoose.Query.1, "Member[findOne, manual].WithArity[0,1,2, manual].Argument[1, manual].TypeVar[mongoose.Callback.0,mongoose.ProjectionType.0, manual]", manual]
      - [mongoose.Query.1, "Member[findOne, manual].WithArity[3,4, manual].Argument[1, manual].TypeVar[mongoose.ProjectionType.0, manual]", manual]
      - [mongoose.Query.1, "Member[findOne, manual].WithArity[4, manual].Argument[2, manual].TypeVar[mongoose.QueryOptions.0, manual]", manual]
      - [mongoose.Query.1, "Member[find, manual].Argument[3, manual].TypeVar[mongoose.Callback.0, manual].ArrayElement", manual]
      - [mongoose.Query.1, "Member[find, manual].WithArity[0, manual].Argument[0, manual].TypeVar[mongoose.Callback.0, manual].ArrayElement", manual]
      - [mongoose.Query.1, "Member[find, manual].WithArity[1,2,3,4, manual].Argument[0, manual].TypeVar[mongoose.FilterQuery.0, manual]", manual]
      - [mongoose.Query.1, "Member[find, manual].WithArity[1,2,3,4, manual].Argument[1, manual].TypeVar[mongoose.ProjectionType.0, manual]", manual]
      - [mongoose.Query.1, "Member[find, manual].WithArity[1,2,3,4, manual].Argument[2, manual].TypeVar[mongoose.QueryOptions.0, manual]", manual]
      - [mongoose.Query.1, "Member[find, manual].WithArity[1, manual].Argument[0,1,2, manual].TypeVar[mongoose.Callback.0, manual].ArrayElement", manual]
      - [mongoose.Query.1, "Member[find, manual].WithArity[2, manual].Argument[1,2, manual].TypeVar[mongoose.Callback.0, manual].ArrayElement", manual]
      - [mongoose.Query.1, "Member[find, manual].WithArity[3, manual].Argument[2, manual].TypeVar[mongoose.Callback.0, manual].ArrayElement", manual]
      - [mongoose.Query.1, "Member[getFilter,getQuery, manual].ReturnValue.TypeVar[mongoose.FilterQuery.0, manual]", manual]
      - [mongoose.Query.1, "Member[getOptions, manual].ReturnValue.TypeVar[mongoose.QueryOptions.0, manual]", manual]
      - [mongoose.Query.1, "Member[getUpdate, manual].ReturnValue.TypeVar[mongoose.UpdateQuery.0, manual]", manual]
      - [mongoose.Query.1, "Member[projection, manual].WithArity[0,1, manual].Argument[0, manual].TypeVar[mongoose.ProjectionFields.0, manual]", manual]
      - [mongoose.Query.1, "Member[projection, manual].WithArity[0,1, manual].ReturnValue.TypeVar[mongoose.ProjectionFields.0, manual]", manual]
      - [mongoose.Query.1, "Member[remove, manual].ReturnValue.TypeVar[mongoose.Query.1, manual]", manual]
      - [mongoose.Query.1, "Member[replaceOne,update,updateMany,updateOne, manual].Argument[2, manual].TypeVar[mongoose.QueryOptions.0, manual]", manual]
      - [mongoose.Query.1, "Member[replaceOne, manual].Argument[1, manual]", manual]
      - [mongoose.Query.1, "Member[setUpdate, manual].Argument[0, manual].TypeVar[mongoose.UpdateQuery.0, manual]", manual]
      - [mongoose.Query.1, "Member[toConstructor, manual].ReturnValue.Instance.TypeVar[mongoose.QueryWithHelpers.1, manual]", manual]
      - [mongoose.QueryOptions.0, "Member[projection, manual].TypeVar[mongoose.ProjectionType.0, manual]", manual]
      - [mongoose.QueryWithHelpers.0, "TypeVar[mongoose.Query.0, manual]", manual]
      - [mongoose.QueryWithHelpers.1, "TypeVar[mongoose.Query.1, manual]", manual]
      - [mongoose.Require_id.0, "", manual]
      - [mongoose.Require_id.0, "TypeVar[mongoose.IfAny.1,mongoose.IfAny.2, manual]", manual]
      - [mongoose.RootQuerySelector.0, "Member[$and,$nor,$or, manual].ArrayElement.TypeVar[mongoose.FilterQuery.0, manual]", manual]
      - [mongoose.Schema.1, "Member[discriminator, manual].ReturnValue.TypeVar[mongoose.DiscriminatorSchema.1, manual]", manual]
      - [mongoose.Schema.1, "Member[plugin, manual].Argument[0, manual].TypeVar[mongoose.PluginFunction.1, manual]", manual]
      - [mongoose.Schema.1, "Member[post, manual].Argument[2, manual].TypeVar[mongoose.ErrorHandlingMiddlewareFunction.0,mongoose.PostMiddlewareFunction.0,mongoose.PostMiddlewareFunction.1, manual]", manual]
      - [mongoose.Schema.1, "Member[post, manual].WithArity[2, manual].WithStringArgument[0=insertMany, manual].Argument[1, manual].TypeVar[mongoose.ErrorHandlingMiddlewareFunction.0,mongoose.PostMiddlewareFunction.0,mongoose.PostMiddlewareFunction.1, manual]", manual]
      - [mongoose.Types.Array.0, "Member[$pop,$shift,shift, manual].ReturnValue", manual]
      - [mongoose.Types.Array.0, "Member[set, manual].Argument[1, manual]", manual]
      - [mongoose.Types.DocumentArray.0, "Member[create,id, manual].ReturnValue", manual]
      - [mongoose.Types.DocumentArray.0, "Member[create,id, manual].ReturnValue.TypeVar[mongoose.Types.Subdocument.0, manual].TypeVar[mongoose.InferId.0, manual]", manual]
      - [mongoose.Types.DocumentArray.0, "Member[push, manual].Argument[0, manual].ArrayElement.TypeVar[mongoose.AnyKeys.0, manual]", manual]
      - [mongoose.Types.DocumentArray.0, "TypeVar[mongoose.Types.Array.0, manual]", manual]
      - [mongoose.Types.DocumentArray.0, "TypeVar[mongoose.Types.Array.0, manual].TypeVar[mongoose.Types.Subdocument.0, manual].TypeVar[mongoose.InferId.0, manual]", manual]
      - [mongoose.Types.Subdocument.0, "TypeVar[mongoose.Document.0, manual]", manual]
      - [mongoose.UnpackedIntersection.0, "", manual]
      - [mongoose.UpdateQuery.0, "TypeVar[mongoose._UpdateQuery.0, manual].TypeVar[mongoose._UpdateQueryDef.0, manual]", manual]
      - [mongoose.VirtualType.0, "Member[get,set, manual].Argument[0, manual].Argument[1, manual].TypeVar[mongoose.VirtualType.0, manual]", manual]
      - [mongoose.VirtualType.0, "Member[get,set, manual].Argument[0, manual].Argument[2, manual]", manual]
      - [mongoose.VirtualTypeOptions.0, "Member[foreignField,localField, manual].Argument[0, manual]", manual]
      - [mongoose._FilterQuery.0, "TypeVar[mongoose.RootQuerySelector.0, manual]", manual]
      - [mongoose._UpdateQuery.0, "Member[$currentDate,$inc,$max,$min,$mul,$pop,$pull,$pullAll,$push,$set,$setOnInsert,$unset, manual].TypeVar[mongoose.AnyKeys.0, manual]", manual]
