{
    "packages": {
        "mongodb": "4.6.0",
        "mongoose": "6.5.2"
    },
    "resolutions": {
        "base64-js": "1.5.1",
        "bson": "4.6.4",
        "buffer": "5.7.1",
        "denque": "2.0.1",
        "ieee754": "1.2.1",
        "sift": "16.0.0",
        "smart-buffer": "4.2.0",
        "socks": "2.6.2"
    },
    "language": "javascript",
    "replaceTypeParameters": [
        "mongoose.HydratedDocument;0;mongoose.Document",
        "mongoose.HydratedDocument;0;mongoose.Query"
    ],
    "usedTypes": {
        "sinks": [
            "mongoose.ConnectOptions",
            "mongodb.Auth"
        ]
    },
    "ignoredTypes": {
        "sourcesAndSinks": [
            "mongoose.Schema",
            "mongoose.SchemaType",
            "mongoose.SchemaTypeOptions"
        ]
    },
    "model": {
        "sinks": [
            "mongodb.Collection;Member[aggregate,count,countDocuments,deleteMany,deleteOne,find,findOne,findOneAndDelete,findOneAndReplace,remove,replaceOne,watch].Argument[0];mongodb.sink",
            "mongodb.Collection;Member[distinct].Argument[1];mongodb.sink",
            "mongodb.Collection;Member[findOneAndUpdate,update,updateMany,updateOne].Argument[0,1];mongodb.sink",
            "mongodb.Db;Member[aggregate,watch].Argument[0];mongodb.sink",
            "mongodb.DeleteManyModel;Member[filter];mongodb.sink",
            "mongodb.DeleteOneModel;Member[filter];mongodb.sink",
            "mongodb.MongoClient;Member[watch].Argument[0];mongodb.sink",
            "mongodb.UpdateManyModel;Member[filter,update];mongodb.sink",
            "mongodb.UpdateOneModel;Member[filter,update];mongodb.sink",
            "mongoose.CollectionBase;Member[findAndModify].Argument[0];mongodb.sink",
            "mongoose.Connection;Member[watch].Argument[0];mongodb.sink",
            "mongoose.Document;Member[update,updateOne].Argument[0];mongodb.sink",
            "mongoose.Model;Member[$where,aggregate,exists,find,findById,findByIdAndDelete,findByIdAndRemove,findOne,findOneAndDelete,findOneAndRemove,findOneAndReplace,geoSearch,remove,replaceOne,watch].Argument[0];mongodb.sink",
            "mongoose.Model;Member[count,where].WithArity[1,2].Argument[0];mongodb.sink",
            "mongoose.Model;Member[countDocuments].WithArity[1,2,3].Argument[0];mongodb.sink",
            "mongoose.Model;Member[deleteMany,deleteOne].WithArity[0,1,2,3].Argument[0];mongodb.sink",
            "mongoose.Model;Member[distinct,where].Argument[1];mongodb.sink",
            "mongoose.Model;Member[findByIdAndUpdate,findOneAndUpdate,update,updateMany,updateOne].Argument[0,1];mongodb.sink",
            "mongoose.Model;Member[find].WithArity[1,2,3,4].Argument[0];mongodb.sink",
            "mongoose.Query;Member[$where,and,find,findByIdAndDelete,findOne,findOneAndDelete,findOneAndRemove,nor,or,remove,replaceOne,setUpdate].Argument[0];mongodb.sink",
            "mongoose.Query;Member[count,where].WithArity[1,2].Argument[0];mongodb.sink",
            "mongoose.Query;Member[deleteMany,deleteOne].WithArity[0,1,2,3].Argument[0];mongodb.sink",
            "mongoose.Query;Member[distinct,where].Argument[1];mongodb.sink",
            "mongoose.Query;Member[findByIdAndUpdate,findOneAndUpdate,update,updateMany,updateOne].Argument[0,1];mongodb.sink",
            "mongoose.Query;Member[find].WithArity[1,2,3,4].Argument[0];mongodb.sink",
            "mongoose.QueryStatic;Argument[2];mongodb.sink"
        ]
    },
    "generatedModel": {
        "//": "Autogenerated section. Manual edits in here will be lost.",
        "typeDefinitions": [
            "mongodb.AbstractCursor;mongodb.FindCursor;",
            "mongodb.AbstractCursor;mongodb.ListCollectionsCursor;",
            "mongodb.AbstractCursor;mongodb.ListIndexesCursor;",
            "mongodb.AbstractCursorOptions;mongodb.AggregationCursorOptions;",
            "mongodb.AbstractCursorOptions;mongodb/mongodb.AbstractCursorOptions;",
            "mongodb.AbstractCursorOptions;mongoose.mongodb.AbstractCursorOptions;",
            "mongodb.AddUserOptions;mongodb.Admin;Member[addUser].Argument[1,2]",
            "mongodb.AddUserOptions;mongodb.Db;Member[addUser].Argument[1,2]",
            "mongodb.AddUserOptions;mongodb/mongodb.AddUserOptions;",
            "mongodb.AddUserOptions;mongoose.mongodb.AddUserOptions;",
            "mongodb.Admin;mongodb.AdminStatic;Instance",
            "mongodb.Admin;mongodb.Db;Member[admin].ReturnValue",
            "mongodb.Admin;mongodb/mongodb.Admin;",
            "mongodb.Admin;mongoose.mongodb.Admin;",
            "mongodb.AdminStatic;mongodb/mongodb.AdminStatic;",
            "mongodb.AdminStatic;mongodb;Member[Admin]",
            "mongodb.AdminStatic;mongoose.mongodb.AdminStatic;",
            "mongodb.AggregateOptions;mongodb.AggregationCursorOptions;",
            "mongodb.AggregateOptions;mongodb.ChangeStreamOptions;",
            "mongodb.AggregateOptions;mongodb.Collection;Member[aggregate].Argument[1]",
            "mongodb.AggregateOptions;mongodb.CountDocumentsOptions;",
            "mongodb.AggregateOptions;mongodb.Db;Member[aggregate].Argument[1]",
            "mongodb.AggregateOptions;mongodb/mongodb.AggregateOptions;",
            "mongodb.AggregateOptions;mongoose.mongodb.AggregateOptions;",
            "mongodb.AggregationCursorOptions;mongodb/mongodb.AggregationCursorOptions;",
            "mongodb.AggregationCursorOptions;mongoose.mongodb.AggregationCursorOptions;",
            "mongodb.AnyBulkWriteOperation;mongodb.BulkOperationBase;Member[raw].Argument[0]",
            "mongodb.AnyBulkWriteOperation;mongodb.Collection;Member[bulkWrite].Argument[0].ArrayElement",
            "mongodb.AnyBulkWriteOperation;mongodb/mongodb.AnyBulkWriteOperation;",
            "mongodb.AnyBulkWriteOperation;mongoose.mongodb.AnyBulkWriteOperation;",
            "mongodb.Auth;mongodb.MongoClientOptions;Member[auth]",
            "mongodb.Auth;mongodb/mongodb.Auth;",
            "mongodb.Auth;mongoose.mongodb.Auth;",
            "mongodb.AutoEncrypter;mongodb.AutoEncrypter;Instance",
            "mongodb.AutoEncrypter;mongodb.ConnectionOptions;Member[autoEncrypter]",
            "mongodb.AutoEncrypter;mongodb.MongoClient;Member[autoEncrypter]",
            "mongodb.AutoEncrypter;mongodb.MongoOptions;Member[autoEncrypter]",
            "mongodb.AutoEncrypter;mongodb/mongodb.AutoEncrypter;",
            "mongodb.AutoEncrypter;mongoose.mongodb.AutoEncrypter;",
            "mongodb.AutoEncryptionOptions;mongodb.AutoEncrypter;Argument[1]",
            "mongodb.AutoEncryptionOptions;mongodb.MongoClientOptions;Member[autoEncryption]",
            "mongodb.AutoEncryptionOptions;mongodb/mongodb.AutoEncryptionOptions;",
            "mongodb.AutoEncryptionOptions;mongoose.mongodb.AutoEncryptionOptions;",
            "mongodb.BulkOperationBase;mongodb.BulkOperationBase;Member[addToOperationsList,insert,raw].ReturnValue",
            "mongodb.BulkOperationBase;mongodb.BulkOperationBaseStatic;Instance",
            "mongodb.BulkOperationBase;mongodb.FindOperators;Member[bulkOperation]",
            "mongodb.BulkOperationBase;mongodb.FindOperators;Member[delete,deleteOne,replaceOne,update,updateOne].ReturnValue",
            "mongodb.BulkOperationBase;mongodb.OrderedBulkOperation;",
            "mongodb.BulkOperationBase;mongodb.UnorderedBulkOperation;",
            "mongodb.BulkOperationBase;mongodb/mongodb.BulkOperationBase;",
            "mongodb.BulkOperationBase;mongoose.mongodb.BulkOperationBase;",
            "mongodb.BulkOperationBaseStatic;mongodb/mongodb.BulkOperationBaseStatic;",
            "mongodb.BulkOperationBaseStatic;mongodb;Member[BulkOperationBase]",
            "mongodb.BulkOperationBaseStatic;mongoose.mongodb.BulkOperationBaseStatic;",
            "mongodb.BulkWriteOptions;mongodb.BulkOperationBase;Member[execute].WithArity[0,1,2].Argument[0]",
            "mongodb.BulkWriteOptions;mongodb.Collection;Member[bulkWrite,insert,insertMany].Argument[1]",
            "mongodb.BulkWriteOptions;mongodb.Collection;Member[initializeOrderedBulkOp,initializeUnorderedBulkOp].Argument[0]",
            "mongodb.BulkWriteOptions;mongodb.OrderedBulkOperationStatic;Argument[1]",
            "mongodb.BulkWriteOptions;mongodb.UnorderedBulkOperationStatic;Argument[1]",
            "mongodb.BulkWriteOptions;mongodb/mongodb.BulkWriteOptions;",
            "mongodb.BulkWriteOptions;mongoose.mongodb.BulkWriteOptions;",
            "mongodb.ChangeStream;mongodb.ChangeStreamStatic;Instance",
            "mongodb.ChangeStream;mongodb.Collection;Member[watch].ReturnValue",
            "mongodb.ChangeStream;mongodb.Db;Member[watch].ReturnValue",
            "mongodb.ChangeStream;mongodb.MongoClient;Member[watch].ReturnValue",
            "mongodb.ChangeStream;mongodb/mongodb.ChangeStream;",
            "mongodb.ChangeStream;mongoose.mongodb.ChangeStream;",
            "mongodb.ChangeStreamOptions;mongodb.ChangeStream;Member[options]",
            "mongodb.ChangeStreamOptions;mongodb.Collection;Member[watch].Argument[1]",
            "mongodb.ChangeStreamOptions;mongodb.Db;Member[watch].Argument[1]",
            "mongodb.ChangeStreamOptions;mongodb.MongoClient;Member[watch].Argument[1]",
            "mongodb.ChangeStreamOptions;mongodb/mongodb.ChangeStreamOptions;",
            "mongodb.ChangeStreamOptions;mongoose.mongodb.ChangeStreamOptions;",
            "mongodb.ChangeStreamStatic;mongodb/mongodb.ChangeStreamStatic;",
            "mongodb.ChangeStreamStatic;mongodb;Member[ChangeStream]",
            "mongodb.ChangeStreamStatic;mongoose.mongodb.ChangeStreamStatic;",
            "mongodb.ClientSession;mongodb.AbstractCursorOptions;Member[session]",
            "mongodb.ClientSession;mongodb.ClientSession;Member[equals].Argument[0]",
            "mongodb.ClientSession;mongodb.ClientSessionEvents;Member[ended].Argument[0]",
            "mongodb.ClientSession;mongodb.ClientSessionStatic;Instance",
            "mongodb.ClientSession;mongodb.IndexInformationOptions;Member[session]",
            "mongodb.ClientSession;mongodb.MongoClient;Member[startSession].ReturnValue",
            "mongodb.ClientSession;mongodb.OperationOptions;Member[session]",
            "mongodb.ClientSession;mongodb.ReadPreferenceFromOptions;Member[session]",
            "mongodb.ClientSession;mongodb.SelectServerOptions;Member[session]",
            "mongodb.ClientSession;mongodb.WithSessionCallback;Argument[0]",
            "mongodb.ClientSession;mongodb.WithTransactionCallback;Argument[0]",
            "mongodb.ClientSession;mongodb/mongodb.ClientSession;",
            "mongodb.ClientSession;mongoose.mongodb.ClientSession;",
            "mongodb.ClientSessionEvents;mongodb/mongodb.ClientSessionEvents;",
            "mongodb.ClientSessionEvents;mongoose.mongodb.ClientSessionEvents;",
            "mongodb.ClientSessionOptions;mongodb.MongoClient;Member[startSession].Argument[0]",
            "mongodb.ClientSessionOptions;mongodb.MongoClient;Member[withSession].WithArity[2].Argument[0]",
            "mongodb.ClientSessionOptions;mongodb/mongodb.ClientSessionOptions;",
            "mongodb.ClientSessionOptions;mongoose.mongodb.ClientSessionOptions;",
            "mongodb.ClientSessionStatic;mongodb/mongodb.ClientSessionStatic;",
            "mongodb.ClientSessionStatic;mongodb;Member[ClientSession]",
            "mongodb.ClientSessionStatic;mongoose.mongodb.ClientSessionStatic;",
            "mongodb.CollStatsOptions;mongodb.Collection;Member[stats].Argument[0]",
            "mongodb.CollStatsOptions;mongodb/mongodb.CollStatsOptions;",
            "mongodb.CollStatsOptions;mongoose.mongodb.CollStatsOptions;",
            "mongodb.Collection;mongodb.ChangeStream;Member[parent]",
            "mongodb.Collection;mongodb.Collection;Member[rename].Argument[1,2].TypeVar[mongodb.Callback.0]",
            "mongodb.Collection;mongodb.Collection;Member[rename].WithArity[1,2].ReturnValue.Awaited",
            "mongodb.Collection;mongodb.CollectionStatic;Instance",
            "mongodb.Collection;mongodb.Db;Member[collection].ReturnValue",
            "mongodb.Collection;mongodb.Db;Member[collections].Argument[0,1].TypeVar[mongodb.Callback.0].ArrayElement",
            "mongodb.Collection;mongodb.Db;Member[collections].WithArity[0,1].ReturnValue.Awaited.ArrayElement",
            "mongodb.Collection;mongodb.Db;Member[createCollection].Argument[2].TypeVar[mongodb.Callback.0]",
            "mongodb.Collection;mongodb.Db;Member[createCollection].WithArity[1,2].ReturnValue.Awaited",
            "mongodb.Collection;mongodb.Db;Member[createCollection].WithArity[2].Argument[1].TypeVar[mongodb.Callback.0]",
            "mongodb.Collection;mongodb.Db;Member[renameCollection].Argument[2,3].TypeVar[mongodb.Callback.0]",
            "mongodb.Collection;mongodb.Db;Member[renameCollection].WithArity[2,3].ReturnValue.Awaited",
            "mongodb.Collection;mongodb.GridFSBucketWriteStream;Member[chunks,files]",
            "mongodb.Collection;mongodb.ListIndexesCursor;Member[parent]",
            "mongodb.Collection;mongodb.ListIndexesCursorStatic;Argument[0]",
            "mongodb.Collection;mongodb.OrderedBulkOperationStatic;Argument[0]",
            "mongodb.Collection;mongodb.UnorderedBulkOperationStatic;Argument[0]",
            "mongodb.Collection;mongodb/mongodb.Collection;",
            "mongodb.Collection;mongoose.mongodb.Collection;",
            "mongodb.CollectionStatic;mongodb/mongodb.CollectionStatic;",
            "mongodb.CollectionStatic;mongodb;Member[Collection]",
            "mongodb.CollectionStatic;mongoose.mongodb.CollectionStatic;",
            "mongodb.CommandOperationOptions;mongodb.AddUserOptions;",
            "mongodb.CommandOperationOptions;mongodb.Admin;Member[buildInfo,ping,replSetGetStatus,serverInfo,serverStatus].Argument[0]",
            "mongodb.CommandOperationOptions;mongodb.AggregateOptions;",
            "mongodb.CommandOperationOptions;mongodb.BulkWriteOptions;",
            "mongodb.CommandOperationOptions;mongodb.CollStatsOptions;",
            "mongodb.CommandOperationOptions;mongodb.CountOptions;",
            "mongodb.CommandOperationOptions;mongodb.CreateCollectionOptions;",
            "mongodb.CommandOperationOptions;mongodb.CreateIndexesOptions;",
            "mongodb.CommandOperationOptions;mongodb.DbStatsOptions;",
            "mongodb.CommandOperationOptions;mongodb.DeleteOptions;",
            "mongodb.CommandOperationOptions;mongodb.DistinctOptions;",
            "mongodb.CommandOperationOptions;mongodb.DropCollectionOptions;",
            "mongodb.CommandOperationOptions;mongodb.DropDatabaseOptions;",
            "mongodb.CommandOperationOptions;mongodb.DropIndexesOptions;",
            "mongodb.CommandOperationOptions;mongodb.EstimatedDocumentCountOptions;",
            "mongodb.CommandOperationOptions;mongodb.EvalOptions;",
            "mongodb.CommandOperationOptions;mongodb.FindOneAndDeleteOptions;",
            "mongodb.CommandOperationOptions;mongodb.FindOneAndReplaceOptions;",
            "mongodb.CommandOperationOptions;mongodb.FindOneAndUpdateOptions;",
            "mongodb.CommandOperationOptions;mongodb.FindOptions;",
            "mongodb.CommandOperationOptions;mongodb.InsertOneOptions;",
            "mongodb.CommandOperationOptions;mongodb.ListCollectionsOptions;",
            "mongodb.CommandOperationOptions;mongodb.ListDatabasesOptions;",
            "mongodb.CommandOperationOptions;mongodb.ListIndexesOptions;",
            "mongodb.CommandOperationOptions;mongodb.MapReduceOptions;",
            "mongodb.CommandOperationOptions;mongodb.ProfilingLevelOptions;",
            "mongodb.CommandOperationOptions;mongodb.RemoveUserOptions;",
            "mongodb.CommandOperationOptions;mongodb.RenameOptions;",
            "mongodb.CommandOperationOptions;mongodb.ReplaceOptions;",
            "mongodb.CommandOperationOptions;mongodb.RunCommandOptions;",
            "mongodb.CommandOperationOptions;mongodb.SetProfilingLevelOptions;",
            "mongodb.CommandOperationOptions;mongodb.TransactionOptions;",
            "mongodb.CommandOperationOptions;mongodb.UpdateOptions;",
            "mongodb.CommandOperationOptions;mongodb.ValidateCollectionOptions;",
            "mongodb.CommandOperationOptions;mongodb/mongodb.CommandOperationOptions;",
            "mongodb.CommandOperationOptions;mongoose.mongodb.CommandOperationOptions;",
            "mongodb.ConnectionOptions;mongodb/mongodb.ConnectionOptions;",
            "mongodb.ConnectionOptions;mongoose.mongodb.ConnectionOptions;",
            "mongodb.CountDocumentsOptions;mongodb.Collection;Member[countDocuments].Argument[1]",
            "mongodb.CountDocumentsOptions;mongodb/mongodb.CountDocumentsOptions;",
            "mongodb.CountDocumentsOptions;mongoose.mongodb.CountDocumentsOptions;",
            "mongodb.CountOptions;mongodb.Collection;Member[count].Argument[1]",
            "mongodb.CountOptions;mongodb.FindCursor;Member[count].Argument[0]",
            "mongodb.CountOptions;mongodb/mongodb.CountOptions;",
            "mongodb.CountOptions;mongoose.mongodb.CountOptions;",
            "mongodb.CreateCollectionOptions;mongodb.Db;Member[createCollection].WithArity[1,2,3].Argument[1]",
            "mongodb.CreateCollectionOptions;mongodb/mongodb.CreateCollectionOptions;",
            "mongodb.CreateCollectionOptions;mongoose.mongodb.CreateCollectionOptions;",
            "mongodb.CreateIndexesOptions;mongodb.Collection;Member[createIndex,createIndexes].Argument[1]",
            "mongodb.CreateIndexesOptions;mongodb.Db;Member[createIndex].Argument[2]",
            "mongodb.CreateIndexesOptions;mongodb/mongodb.CreateIndexesOptions;",
            "mongodb.CreateIndexesOptions;mongoose.mongodb.CreateIndexesOptions;",
            "mongodb.Db;mongodb.ChangeStream;Member[parent]",
            "mongodb.Db;mongodb.DbStatic;Instance",
            "mongodb.Db;mongodb.GridFSBucketStatic;Argument[0]",
            "mongodb.Db;mongodb.ListCollectionsCursor;Member[parent]",
            "mongodb.Db;mongodb.ListCollectionsCursorStatic;Argument[0]",
            "mongodb.Db;mongodb.MongoClient;Member[db].ReturnValue",
            "mongodb.Db;mongodb/mongodb.Db;",
            "mongodb.Db;mongoose.mongodb.Db;",
            "mongodb.DbStatic;mongodb/mongodb.DbStatic;",
            "mongodb.DbStatic;mongodb;Member[Db]",
            "mongodb.DbStatic;mongoose.mongodb.DbStatic;",
            "mongodb.DbStatsOptions;mongodb.Db;Member[stats].Argument[0]",
            "mongodb.DbStatsOptions;mongodb/mongodb.DbStatsOptions;",
            "mongodb.DbStatsOptions;mongoose.mongodb.DbStatsOptions;",
            "mongodb.DeleteManyModel;mongodb.AnyBulkWriteOperation;Member[deleteMany]",
            "mongodb.DeleteManyModel;mongodb/mongodb.DeleteManyModel;",
            "mongodb.DeleteManyModel;mongoose.mongodb.DeleteManyModel;",
            "mongodb.DeleteOneModel;mongodb.AnyBulkWriteOperation;Member[deleteOne]",
            "mongodb.DeleteOneModel;mongodb/mongodb.DeleteOneModel;",
            "mongodb.DeleteOneModel;mongoose.mongodb.DeleteOneModel;",
            "mongodb.DeleteOptions;mongodb.Collection;Member[deleteMany,deleteOne,remove].Argument[1]",
            "mongodb.DeleteOptions;mongodb/mongodb.DeleteOptions;",
            "mongodb.DeleteOptions;mongoose.mongodb.DeleteOptions;",
            "mongodb.DistinctOptions;mongodb.Collection;Member[distinct].Argument[2]",
            "mongodb.DistinctOptions;mongodb/mongodb.DistinctOptions;",
            "mongodb.DistinctOptions;mongoose.mongodb.DistinctOptions;",
            "mongodb.DropCollectionOptions;mongodb.Collection;Member[drop].Argument[0]",
            "mongodb.DropCollectionOptions;mongodb.Db;Member[dropCollection].Argument[1]",
            "mongodb.DropCollectionOptions;mongodb/mongodb.DropCollectionOptions;",
            "mongodb.DropCollectionOptions;mongoose.mongodb.DropCollectionOptions;",
            "mongodb.DropDatabaseOptions;mongodb.Db;Member[dropDatabase].Argument[0]",
            "mongodb.DropDatabaseOptions;mongodb/mongodb.DropDatabaseOptions;",
            "mongodb.DropDatabaseOptions;mongoose.mongodb.DropDatabaseOptions;",
            "mongodb.DropIndexesOptions;mongodb.Collection;Member[dropIndex].Argument[1]",
            "mongodb.DropIndexesOptions;mongodb.Collection;Member[dropIndexes].Argument[0]",
            "mongodb.DropIndexesOptions;mongodb/mongodb.DropIndexesOptions;",
            "mongodb.DropIndexesOptions;mongoose.mongodb.DropIndexesOptions;",
            "mongodb.EstimatedDocumentCountOptions;mongodb.Collection;Member[estimatedDocumentCount].Argument[0]",
            "mongodb.EstimatedDocumentCountOptions;mongodb/mongodb.EstimatedDocumentCountOptions;",
            "mongodb.EstimatedDocumentCountOptions;mongoose.mongodb.EstimatedDocumentCountOptions;",
            "mongodb.EvalOptions;mongodb/mongodb.EvalOptions;",
            "mongodb.EvalOptions;mongoose.mongodb.EvalOptions;",
            "mongodb.FindCursor;mongodb.Collection;Member[find].WithArity[0,1,2].ReturnValue",
            "mongodb.FindCursor;mongodb.FindCursor;Member[addQueryModifier,allowDiskUse,clone,collation,comment,filter,hint,limit,map,max,maxAwaitTimeMS,maxTimeMS,min,project,returnKey,showRecordId,skip,sort].ReturnValue",
            "mongodb.FindCursor;mongodb.FindCursorStatic;Instance",
            "mongodb.FindCursor;mongodb.GridFSBucket;Member[find].ReturnValue",
            "mongodb.FindCursor;mongodb/mongodb.FindCursor;",
            "mongodb.FindCursor;mongoose.mongodb.FindCursor;",
            "mongodb.FindCursorStatic;mongodb/mongodb.FindCursorStatic;",
            "mongodb.FindCursorStatic;mongodb;Member[FindCursor]",
            "mongodb.FindCursorStatic;mongoose.mongodb.FindCursorStatic;",
            "mongodb.FindOneAndDeleteOptions;mongodb.Collection;Member[findOneAndDelete].Argument[1]",
            "mongodb.FindOneAndDeleteOptions;mongodb/mongodb.FindOneAndDeleteOptions;",
            "mongodb.FindOneAndDeleteOptions;mongoose.mongodb.FindOneAndDeleteOptions;",
            "mongodb.FindOneAndReplaceOptions;mongodb.Collection;Member[findOneAndReplace].Argument[2]",
            "mongodb.FindOneAndReplaceOptions;mongodb/mongodb.FindOneAndReplaceOptions;",
            "mongodb.FindOneAndReplaceOptions;mongoose.mongodb.FindOneAndReplaceOptions;",
            "mongodb.FindOneAndUpdateOptions;mongodb.Collection;Member[findOneAndUpdate].Argument[2]",
            "mongodb.FindOneAndUpdateOptions;mongodb/mongodb.FindOneAndUpdateOptions;",
            "mongodb.FindOneAndUpdateOptions;mongoose.mongodb.FindOneAndUpdateOptions;",
            "mongodb.FindOperators;mongodb.BulkOperationBase;Member[find].ReturnValue",
            "mongodb.FindOperators;mongodb.FindOperators;Member[arrayFilters,collation,upsert].ReturnValue",
            "mongodb.FindOperators;mongodb.FindOperatorsStatic;Instance",
            "mongodb.FindOperators;mongodb/mongodb.FindOperators;",
            "mongodb.FindOperators;mongoose.mongodb.FindOperators;",
            "mongodb.FindOperatorsStatic;mongodb/mongodb.FindOperatorsStatic;",
            "mongodb.FindOperatorsStatic;mongodb;Member[FindOperators]",
            "mongodb.FindOperatorsStatic;mongoose.mongodb.FindOperatorsStatic;",
            "mongodb.FindOptions;mongodb.Collection;Member[find,findOne].Argument[1]",
            "mongodb.FindOptions;mongodb.GridFSBucket;Member[find].Argument[1]",
            "mongodb.FindOptions;mongodb/mongodb.FindOptions;",
            "mongodb.FindOptions;mongoose.mongodb.FindOptions;",
            "mongodb.GridFSBucket;mongodb.GridFSBucketStatic;Instance",
            "mongodb.GridFSBucket;mongodb.GridFSBucketWriteStream;Member[bucket]",
            "mongodb.GridFSBucket;mongodb/mongodb.GridFSBucket;",
            "mongodb.GridFSBucket;mongoose.mongodb.GridFSBucket;",
            "mongodb.GridFSBucketStatic;mongodb/mongodb.GridFSBucketStatic;",
            "mongodb.GridFSBucketStatic;mongodb;Member[GridFSBucket]",
            "mongodb.GridFSBucketStatic;mongoose.mongodb.GridFSBucketStatic;",
            "mongodb.GridFSBucketWriteStream;mongodb.GridFSBucket;Member[openUploadStream,openUploadStreamWithId].ReturnValue",
            "mongodb.GridFSBucketWriteStream;mongodb.GridFSBucketWriteStream;Member[end].ReturnValue",
            "mongodb.GridFSBucketWriteStream;mongodb.GridFSBucketWriteStreamStatic;Instance",
            "mongodb.GridFSBucketWriteStream;mongodb/mongodb.GridFSBucketWriteStream;",
            "mongodb.GridFSBucketWriteStream;mongoose.mongodb.GridFSBucketWriteStream;",
            "mongodb.GridFSBucketWriteStreamStatic;mongodb/mongodb.GridFSBucketWriteStreamStatic;",
            "mongodb.GridFSBucketWriteStreamStatic;mongodb;Member[GridFSBucketWriteStream]",
            "mongodb.GridFSBucketWriteStreamStatic;mongoose.mongodb.GridFSBucketWriteStreamStatic;",
            "mongodb.IndexInformationOptions;mongodb.Collection;Member[indexExists].Argument[1]",
            "mongodb.IndexInformationOptions;mongodb.Collection;Member[indexInformation,indexes].Argument[0]",
            "mongodb.IndexInformationOptions;mongodb.Db;Member[indexInformation].Argument[1]",
            "mongodb.IndexInformationOptions;mongodb/mongodb.IndexInformationOptions;",
            "mongodb.IndexInformationOptions;mongoose.mongodb.IndexInformationOptions;",
            "mongodb.InsertOneOptions;mongodb.Collection;Member[insertOne].Argument[1]",
            "mongodb.InsertOneOptions;mongodb/mongodb.InsertOneOptions;",
            "mongodb.InsertOneOptions;mongoose.mongodb.InsertOneOptions;",
            "mongodb.ListCollectionsCursor;mongodb.Db;Member[listCollections].WithArity[0,1,2].ReturnValue",
            "mongodb.ListCollectionsCursor;mongodb.ListCollectionsCursor;Member[clone].ReturnValue",
            "mongodb.ListCollectionsCursor;mongodb.ListCollectionsCursorStatic;Instance",
            "mongodb.ListCollectionsCursor;mongodb/mongodb.ListCollectionsCursor;",
            "mongodb.ListCollectionsCursor;mongoose.mongodb.ListCollectionsCursor;",
            "mongodb.ListCollectionsCursorStatic;mongodb/mongodb.ListCollectionsCursorStatic;",
            "mongodb.ListCollectionsCursorStatic;mongodb;Member[ListCollectionsCursor]",
            "mongodb.ListCollectionsCursorStatic;mongoose.mongodb.ListCollectionsCursorStatic;",
            "mongodb.ListCollectionsOptions;mongodb.Db;Member[collections].Argument[0]",
            "mongodb.ListCollectionsOptions;mongodb.Db;Member[listCollections].WithArity[0,1,2].Argument[1]",
            "mongodb.ListCollectionsOptions;mongodb.ListCollectionsCursor;Member[options]",
            "mongodb.ListCollectionsOptions;mongodb.ListCollectionsCursorStatic;Argument[2]",
            "mongodb.ListCollectionsOptions;mongodb/mongodb.ListCollectionsOptions;",
            "mongodb.ListCollectionsOptions;mongoose.mongodb.ListCollectionsOptions;",
            "mongodb.ListDatabasesOptions;mongodb.Admin;Member[listDatabases].Argument[0]",
            "mongodb.ListDatabasesOptions;mongodb/mongodb.ListDatabasesOptions;",
            "mongodb.ListDatabasesOptions;mongoose.mongodb.ListDatabasesOptions;",
            "mongodb.ListIndexesCursor;mongodb.Collection;Member[listIndexes].ReturnValue",
            "mongodb.ListIndexesCursor;mongodb.ListIndexesCursor;Member[clone].ReturnValue",
            "mongodb.ListIndexesCursor;mongodb.ListIndexesCursorStatic;Instance",
            "mongodb.ListIndexesCursor;mongodb/mongodb.ListIndexesCursor;",
            "mongodb.ListIndexesCursor;mongoose.mongodb.ListIndexesCursor;",
            "mongodb.ListIndexesCursorStatic;mongodb/mongodb.ListIndexesCursorStatic;",
            "mongodb.ListIndexesCursorStatic;mongodb;Member[ListIndexesCursor]",
            "mongodb.ListIndexesCursorStatic;mongoose.mongodb.ListIndexesCursorStatic;",
            "mongodb.ListIndexesOptions;mongodb.Collection;Member[listIndexes].Argument[0]",
            "mongodb.ListIndexesOptions;mongodb.ListIndexesCursor;Member[options]",
            "mongodb.ListIndexesOptions;mongodb.ListIndexesCursorStatic;Argument[1]",
            "mongodb.ListIndexesOptions;mongodb/mongodb.ListIndexesOptions;",
            "mongodb.ListIndexesOptions;mongoose.mongodb.ListIndexesOptions;",
            "mongodb.MapReduceOptions;mongodb.Collection;Member[mapReduce].Argument[2]",
            "mongodb.MapReduceOptions;mongodb/mongodb.MapReduceOptions;",
            "mongodb.MapReduceOptions;mongoose.mongodb.MapReduceOptions;",
            "mongodb.MongoClient;mongodb.AutoEncrypter;Argument[0]",
            "mongodb.MongoClient;mongodb.AutoEncryptionOptions;Member[keyVaultClient]",
            "mongodb.MongoClient;mongodb.ChangeStream;Member[parent]",
            "mongodb.MongoClient;mongodb.DbStatic;Argument[0]",
            "mongodb.MongoClient;mongodb.MongoClient;Member[connect].Argument[0].TypeVar[mongodb.Callback.0]",
            "mongodb.MongoClient;mongodb.MongoClient;Member[connect].WithArity[0].ReturnValue.Awaited",
            "mongodb.MongoClient;mongodb.MongoClientEvents;Member[open].Argument[0]",
            "mongodb.MongoClient;mongodb.MongoClientStatic;Instance",
            "mongodb.MongoClient;mongodb.MongoClientStatic;Member[connect].Argument[1,2].TypeVar[mongodb.Callback.0]",
            "mongodb.MongoClient;mongodb.MongoClientStatic;Member[connect].WithArity[1,2].ReturnValue.Awaited",
            "mongodb.MongoClient;mongodb/mongodb.MongoClient;",
            "mongodb.MongoClient;mongoose.mongodb.MongoClient;",
            "mongodb.MongoClientEvents;mongodb/mongodb.MongoClientEvents;",
            "mongodb.MongoClientEvents;mongoose.mongodb.MongoClientEvents;",
            "mongodb.MongoClientOptions;mongodb.MongoClientStatic;Argument[1]",
            "mongodb.MongoClientOptions;mongodb.MongoClientStatic;Member[connect].Argument[1]",
            "mongodb.MongoClientOptions;mongodb/mongodb.MongoClientOptions;",
            "mongodb.MongoClientOptions;mongoose.mongodb.MongoClientOptions;",
            "mongodb.MongoClientStatic;mongodb/mongodb.MongoClientStatic;",
            "mongodb.MongoClientStatic;mongodb;Member[MongoClient]",
            "mongodb.MongoClientStatic;mongoose.mongodb.MongoClientStatic;",
            "mongodb.MongoOptions;mongodb.ClientSession;Member[clientOptions]",
            "mongodb.MongoOptions;mongodb.MongoClient;Member[options]",
            "mongodb.MongoOptions;mongodb/mongodb.MongoOptions;",
            "mongodb.MongoOptions;mongoose.mongodb.MongoOptions;",
            "mongodb.OperationOptions;mongodb.Collection;Member[isCapped,options].Argument[0]",
            "mongodb.OperationOptions;mongodb.CommandOperationOptions;",
            "mongodb.OperationOptions;mongodb/mongodb.OperationOptions;",
            "mongodb.OperationOptions;mongoose.mongodb.OperationOptions;",
            "mongodb.OrderedBulkOperation;mongodb.Collection;Member[initializeOrderedBulkOp].ReturnValue",
            "mongodb.OrderedBulkOperation;mongodb.OrderedBulkOperation;Member[addToOperationsList].ReturnValue",
            "mongodb.OrderedBulkOperation;mongodb.OrderedBulkOperationStatic;Instance",
            "mongodb.OrderedBulkOperation;mongodb/mongodb.OrderedBulkOperation;",
            "mongodb.OrderedBulkOperation;mongoose.mongodb.OrderedBulkOperation;",
            "mongodb.OrderedBulkOperationStatic;mongodb/mongodb.OrderedBulkOperationStatic;",
            "mongodb.OrderedBulkOperationStatic;mongodb;Member[OrderedBulkOperation]",
            "mongodb.OrderedBulkOperationStatic;mongoose.mongodb.OrderedBulkOperationStatic;",
            "mongodb.ProfilingLevelOptions;mongodb.Db;Member[profilingLevel].Argument[0]",
            "mongodb.ProfilingLevelOptions;mongodb/mongodb.ProfilingLevelOptions;",
            "mongodb.ProfilingLevelOptions;mongoose.mongodb.ProfilingLevelOptions;",
            "mongodb.ReadPreferenceFromOptions;mongodb.ReadPreferenceStatic;Member[fromOptions].Argument[0]",
            "mongodb.ReadPreferenceFromOptions;mongodb/mongodb.ReadPreferenceFromOptions;",
            "mongodb.ReadPreferenceFromOptions;mongoose.mongodb.ReadPreferenceFromOptions;",
            "mongodb.ReadPreferenceStatic;mongodb/mongodb.ReadPreferenceStatic;",
            "mongodb.ReadPreferenceStatic;mongodb;Member[ReadPreference]",
            "mongodb.ReadPreferenceStatic;mongoose.mongodb.ReadPreferenceStatic;",
            "mongodb.RemoveUserOptions;mongodb.Admin;Member[removeUser].Argument[1]",
            "mongodb.RemoveUserOptions;mongodb.Db;Member[removeUser].Argument[1]",
            "mongodb.RemoveUserOptions;mongodb/mongodb.RemoveUserOptions;",
            "mongodb.RemoveUserOptions;mongoose.mongodb.RemoveUserOptions;",
            "mongodb.RenameOptions;mongodb.Collection;Member[rename].Argument[1]",
            "mongodb.RenameOptions;mongodb.Db;Member[renameCollection].Argument[2]",
            "mongodb.RenameOptions;mongodb/mongodb.RenameOptions;",
            "mongodb.RenameOptions;mongoose.mongodb.RenameOptions;",
            "mongodb.ReplaceOptions;mongodb.Collection;Member[replaceOne].Argument[2]",
            "mongodb.ReplaceOptions;mongodb/mongodb.ReplaceOptions;",
            "mongodb.ReplaceOptions;mongoose.mongodb.ReplaceOptions;",
            "mongodb.RunCommandOptions;mongodb.Admin;Member[command].Argument[1]",
            "mongodb.RunCommandOptions;mongodb.Db;Member[command].Argument[1]",
            "mongodb.RunCommandOptions;mongodb/mongodb.RunCommandOptions;",
            "mongodb.RunCommandOptions;mongoose.mongodb.RunCommandOptions;",
            "mongodb.SelectServerOptions;mongodb/mongodb.SelectServerOptions;",
            "mongodb.SelectServerOptions;mongoose.mongodb.SelectServerOptions;",
            "mongodb.SetProfilingLevelOptions;mongodb.Db;Member[setProfilingLevel].Argument[1]",
            "mongodb.SetProfilingLevelOptions;mongodb/mongodb.SetProfilingLevelOptions;",
            "mongodb.SetProfilingLevelOptions;mongoose.mongodb.SetProfilingLevelOptions;",
            "mongodb.Transaction;mongodb.ClientSession;Member[transaction]",
            "mongodb.Transaction;mongodb.TransactionStatic;Instance",
            "mongodb.Transaction;mongodb/mongodb.Transaction;",
            "mongodb.Transaction;mongoose.mongodb.Transaction;",
            "mongodb.TransactionOptions;mongodb.ClientSession;Member[defaultTransactionOptions]",
            "mongodb.TransactionOptions;mongodb.ClientSession;Member[startTransaction].Argument[0]",
            "mongodb.TransactionOptions;mongodb.ClientSession;Member[withTransaction].Argument[1]",
            "mongodb.TransactionOptions;mongodb.ClientSessionOptions;Member[defaultTransactionOptions]",
            "mongodb.TransactionOptions;mongodb.Transaction;Member[options]",
            "mongodb.TransactionOptions;mongodb/mongodb.TransactionOptions;",
            "mongodb.TransactionOptions;mongoose.mongodb.TransactionOptions;",
            "mongodb.TransactionStatic;mongodb/mongodb.TransactionStatic;",
            "mongodb.TransactionStatic;mongodb;Member[Transaction]",
            "mongodb.TransactionStatic;mongoose.mongodb.TransactionStatic;",
            "mongodb.TypedEventEmitter;mongodb.AbstractCursor;",
            "mongodb.TypedEventEmitter;mongodb.ChangeStream;",
            "mongodb.TypedEventEmitter;mongodb.ClientSession;",
            "mongodb.TypedEventEmitter;mongodb.GridFSBucket;",
            "mongodb.TypedEventEmitter;mongodb.MongoClient;",
            "mongodb.UnorderedBulkOperation;mongodb.Collection;Member[initializeUnorderedBulkOp].ReturnValue",
            "mongodb.UnorderedBulkOperation;mongodb.UnorderedBulkOperation;Member[addToOperationsList].ReturnValue",
            "mongodb.UnorderedBulkOperation;mongodb.UnorderedBulkOperationStatic;Instance",
            "mongodb.UnorderedBulkOperation;mongodb/mongodb.UnorderedBulkOperation;",
            "mongodb.UnorderedBulkOperation;mongoose.mongodb.UnorderedBulkOperation;",
            "mongodb.UnorderedBulkOperationStatic;mongodb/mongodb.UnorderedBulkOperationStatic;",
            "mongodb.UnorderedBulkOperationStatic;mongodb;Member[UnorderedBulkOperation]",
            "mongodb.UnorderedBulkOperationStatic;mongoose.mongodb.UnorderedBulkOperationStatic;",
            "mongodb.UpdateManyModel;mongodb.AnyBulkWriteOperation;Member[updateMany]",
            "mongodb.UpdateManyModel;mongodb/mongodb.UpdateManyModel;",
            "mongodb.UpdateManyModel;mongoose.mongodb.UpdateManyModel;",
            "mongodb.UpdateOneModel;mongodb.AnyBulkWriteOperation;Member[updateOne]",
            "mongodb.UpdateOneModel;mongodb/mongodb.UpdateOneModel;",
            "mongodb.UpdateOneModel;mongoose.mongodb.UpdateOneModel;",
            "mongodb.UpdateOptions;mongodb.Collection;Member[update,updateMany,updateOne].Argument[2]",
            "mongodb.UpdateOptions;mongodb/mongodb.UpdateOptions;",
            "mongodb.UpdateOptions;mongoose.mongodb.UpdateOptions;",
            "mongodb.ValidateCollectionOptions;mongodb.Admin;Member[validateCollection].Argument[1]",
            "mongodb.ValidateCollectionOptions;mongodb/mongodb.ValidateCollectionOptions;",
            "mongodb.ValidateCollectionOptions;mongoose.mongodb.ValidateCollectionOptions;",
            "mongodb.WithSessionCallback;mongodb.MongoClient;Member[withSession].Argument[1]",
            "mongodb.WithSessionCallback;mongodb.MongoClient;Member[withSession].WithArity[1].Argument[0]",
            "mongodb.WithSessionCallback;mongodb/mongodb.WithSessionCallback;",
            "mongodb.WithSessionCallback;mongoose.mongodb.WithSessionCallback;",
            "mongodb.WithTransactionCallback;mongodb.ClientSession;Member[withTransaction].Argument[0]",
            "mongodb.WithTransactionCallback;mongodb/mongodb.WithTransactionCallback;",
            "mongodb.WithTransactionCallback;mongoose.mongodb.WithTransactionCallback;",
            "mongodb;mongoose;Member[mongodb]",
            "mongoose.AcceptsDiscriminator;mongoose.Model;",
            "mongoose.AcceptsDiscriminator;mongoose.Schema.Types.Array;",
            "mongoose.AcceptsDiscriminator;mongoose.Schema.Types.DocumentArray;",
            "mongoose.AcceptsDiscriminator;mongoose.Schema.Types.Subdocument;",
            "mongoose.Aggregate;mongoose.Aggregate;Member[addCursorFlag,addFields,allowDiskUse,append,collation,count,facet,graphLookup,group,hint,limit,lookup,match,model,near,option,project,read,readConcern,redact,replaceRoot,sample,search,session,skip,sort,sortByCount,unionWith,unwind].ReturnValue",
            "mongoose.Aggregate;mongoose.AggregateStatic;Instance",
            "mongoose.Aggregate;mongoose.Model;Member[aggregate].ReturnValue",
            "mongoose.AggregateStatic;mongoose;Member[Aggregate]",
            "mongoose.Collection;mongoose.Collection;Instance",
            "mongoose.Collection;mongoose.Connection;Member[collection].ReturnValue",
            "mongoose.Collection;mongoose.Connection;Member[collections].AnyMember",
            "mongoose.Collection;mongoose.Document;Member[collection]",
            "mongoose.Collection;mongoose.Model;Member[collection]",
            "mongoose.Collection;mongoose;Member[Collection]",
            "mongoose.CollectionBase;mongoose.Collection;",
            "mongoose.CompileModelOptions;mongoose.Connection;Member[model].Argument[3]",
            "mongoose.CompileModelOptions;mongoose;Member[model].Argument[3]",
            "mongoose.ConnectOptions;mongoose.Connection;Member[openUri].WithArity[1,2,3].Argument[1]",
            "mongoose.ConnectOptions;mongoose;Member[connect,createConnection].WithArity[1,2,3].Argument[1]",
            "mongoose.Connection;mongoose.Collection;Argument[1]",
            "mongoose.Connection;mongoose.CollectionBase;Member[conn]",
            "mongoose.Connection;mongoose.CompileModelOptions;Member[connection]",
            "mongoose.Connection;mongoose.Connection;Member[asPromise].ReturnValue.Awaited",
            "mongoose.Connection;mongoose.Connection;Member[deleteModel,plugin,setClient,useDb].ReturnValue",
            "mongoose.Connection;mongoose.Connection;Member[openUri].Argument[2].TypeVar[mongoose.Callback.0]",
            "mongoose.Connection;mongoose.Connection;Member[openUri].WithArity[1,2].ReturnValue.Awaited",
            "mongoose.Connection;mongoose.Connection;Member[openUri].WithArity[2,3].ReturnValue",
            "mongoose.Connection;mongoose.Connection;Member[openUri].WithArity[2].Argument[1].TypeVar[mongoose.Callback.0]",
            "mongoose.Connection;mongoose.ConnectionStatic;Instance",
            "mongoose.Connection;mongoose.Document;Member[db]",
            "mongoose.Connection;mongoose.Model;Member[db]",
            "mongoose.Connection;mongoose;Member[connection]",
            "mongoose.Connection;mongoose;Member[connections].ArrayElement",
            "mongoose.Connection;mongoose;Member[createConnection].Argument[2].TypeVar[mongoose.Callback.0]",
            "mongoose.Connection;mongoose;Member[createConnection].WithArity[0,1,2].ReturnValue",
            "mongoose.Connection;mongoose;Member[createConnection].WithArity[2].Argument[1].TypeVar[mongoose.Callback.0]",
            "mongoose.ConnectionStatic;mongoose;Member[Connection]",
            "mongoose.Cursor;mongoose.Query;Member[cursor].ReturnValue",
            "mongoose.DiscriminatorModel;mongoose.DiscriminatorSchema;TypeVar[mongoose.Schema.1]",
            "mongoose.Document;mongoose.Document;Member[$getAllSubdocs,$getPopulatedDocs].ReturnValue.ArrayElement",
            "mongoose.Document;mongoose.Document;Member[$inc,$parent,$set,depopulate,increment,init,overwrite,set].ReturnValue",
            "mongoose.Document;mongoose.Document;Member[delete,deleteOne].WithArity[0,1].ReturnValue.TypeVar[mongoose.QueryWithHelpers.1]",
            "mongoose.Document;mongoose.Document;Member[equals].Argument[0]",
            "mongoose.Document;mongoose.Document;Member[init].Argument[2].TypeVar[mongoose.Callback.0]",
            "mongoose.Document;mongoose.Document;Member[remove,save].WithArity[0,1].ReturnValue.Awaited",
            "mongoose.Document;mongoose.Document;Member[replaceOne,update,updateOne].ReturnValue.TypeVar[mongoose.Query.1]",
            "mongoose.Document;mongoose.Document;Member[save].Argument[1].TypeVar[mongoose.Callback.0]",
            "mongoose.Document;mongoose.Document;Member[save].WithArity[1].Argument[0].TypeVar[mongoose.Callback.0]",
            "mongoose.Document;mongoose.DocumentStatic;Instance",
            "mongoose.Document;mongoose.Error.VersionErrorStatic;Argument[0]",
            "mongoose.Document;mongoose.HydratedDocument;",
            "mongoose.Document;mongoose.HydratedDocument;TypeVar[mongoose.Require_id.0]",
            "mongoose.Document;mongoose.Model;Member[bulkSave].Argument[0].ArrayElement",
            "mongoose.Document;mongoose.TVirtualPathFN;Argument[2]",
            "mongoose.Document;mongoose.Types.Subdocument;",
            "mongoose.Document;mongoose.Types.Subdocument;Member[$parent,ownerDocument,parent].ReturnValue",
            "mongoose.Document;mongoose.VirtualType;Member[applyGetters,applySetters].Argument[1]",
            "mongoose.DocumentStatic;mongoose;Member[Document]",
            "mongoose.Error.VersionErrorStatic;mongoose;Member[Error].Member[VersionError]",
            "mongoose.HydratedDocument;mongoose.Model;Instance",
            "mongoose.HydratedDocument;mongoose.Model;Member[$where,count,countDocuments,deleteMany,deleteOne,distinct,estimatedDocumentCount,find,geoSearch,remove,replaceOne,update,updateMany,updateOne,where].ReturnValue.TypeVar[mongoose.QueryWithHelpers.1]",
            "mongoose.HydratedDocument;mongoose.Model;Member[$where,find,geoSearch,where].ReturnValue.TypeVar[mongoose.QueryWithHelpers.0].ArrayElement",
            "mongoose.HydratedDocument;mongoose.Model;Member[create,insertMany].WithArity[2].Argument[1].TypeVar[mongoose.Callback.0].ArrayElement",
            "mongoose.HydratedDocument;mongoose.Model;Member[create].WithArity[0..,1,2].ReturnValue.Awaited.ArrayElement",
            "mongoose.HydratedDocument;mongoose.Model;Member[create].WithArity[1].ReturnValue.Awaited",
            "mongoose.HydratedDocument;mongoose.Model;Member[create].WithArity[2].Argument[1].TypeVar[mongoose.Callback.0]",
            "mongoose.HydratedDocument;mongoose.Model;Member[exists].WithArity[1,2].ReturnValue.TypeVar[mongoose.QueryWithHelpers.1]",
            "mongoose.HydratedDocument;mongoose.Model;Member[find,insertMany].WithArity[3].Argument[2].TypeVar[mongoose.Callback.0].ArrayElement",
            "mongoose.HydratedDocument;mongoose.Model;Member[findById,findByIdAndDelete,findByIdAndRemove,findOne,findOneAndDelete,findOneAndRemove].ReturnValue.TypeVar[mongoose.QueryWithHelpers.0,mongoose.QueryWithHelpers.1]",
            "mongoose.HydratedDocument;mongoose.Model;Member[findById,findOne].Argument[3].TypeVar[mongoose.Callback.0]",
            "mongoose.HydratedDocument;mongoose.Model;Member[findByIdAndDelete,findByIdAndRemove,findOneAndDelete,findOneAndRemove].Argument[2].Argument[1]",
            "mongoose.HydratedDocument;mongoose.Model;Member[findByIdAndUpdate,findOneAndReplace,findOneAndUpdate].WithArity[0,1,2,3,4].ReturnValue.TypeVar[mongoose.QueryWithHelpers.0,mongoose.QueryWithHelpers.1]",
            "mongoose.HydratedDocument;mongoose.Model;Member[findByIdAndUpdate,findOneAndReplace,findOneAndUpdate].WithArity[3,4].ReturnValue.TypeVar[mongoose.QueryWithHelpers.0].TypeVar[mongoose.ModifyResult.0]",
            "mongoose.HydratedDocument;mongoose.Model;Member[findByIdAndUpdate].WithArity[0,1,2,4].Argument[3].Argument[1]",
            "mongoose.HydratedDocument;mongoose.Model;Member[findByIdAndUpdate].WithArity[3].Argument[2,3].Argument[1]",
            "mongoose.HydratedDocument;mongoose.Model;Member[findById].WithArity[1,2,3].Argument[2].TypeVar[mongoose.Callback.0]",
            "mongoose.HydratedDocument;mongoose.Model;Member[findOneAndReplace].WithArity[0,1,2,3,4].Argument[3].Argument[1]",
            "mongoose.HydratedDocument;mongoose.Model;Member[findOneAndUpdate].WithArity[3,4].Argument[3].Argument[1]",
            "mongoose.HydratedDocument;mongoose.Model;Member[findOne].WithArity[0,1,2].Argument[1,2].TypeVar[mongoose.Callback.0]",
            "mongoose.HydratedDocument;mongoose.Model;Member[findOne].WithArity[3].Argument[2].TypeVar[mongoose.Callback.0]",
            "mongoose.HydratedDocument;mongoose.Model;Member[find].Argument[3].TypeVar[mongoose.Callback.0].ArrayElement",
            "mongoose.HydratedDocument;mongoose.Model;Member[find].WithArity[0].Argument[0].TypeVar[mongoose.Callback.0].ArrayElement",
            "mongoose.HydratedDocument;mongoose.Model;Member[find].WithArity[1].Argument[0,1,2].TypeVar[mongoose.Callback.0].ArrayElement",
            "mongoose.HydratedDocument;mongoose.Model;Member[find].WithArity[2].Argument[1,2].TypeVar[mongoose.Callback.0].ArrayElement",
            "mongoose.HydratedDocument;mongoose.Model;Member[geoSearch].Argument[2].TypeVar[mongoose.Callback.0].ArrayElement",
            "mongoose.HydratedDocument;mongoose.Model;Member[hydrate].ReturnValue",
            "mongoose.HydratedDocument;mongoose.Model;Member[init].ReturnValue.Awaited",
            "mongoose.HydratedDocument;mongoose.Model;Member[insertMany].WithArity[1,2].ReturnValue.Awaited.ArrayElement",
            "mongoose.HydratedDocument;mongoose.Model;Member[populate].WithArity[2,3].Argument[2].TypeVar[mongoose.Callback.0]",
            "mongoose.HydratedDocument;mongoose.Model;Member[populate].WithArity[2,3].Argument[2].TypeVar[mongoose.Callback.0].ArrayElement",
            "mongoose.HydratedDocument;mongoose.Model;Member[populate].WithArity[2,3].ReturnValue.Awaited",
            "mongoose.HydratedDocument;mongoose.Model;Member[populate].WithArity[2,3].ReturnValue.Awaited.ArrayElement",
            "mongoose.HydratedDocument;mongoose.TVirtualPathFN;Argument[1].TypeVar[mongoose.VirtualType.0]",
            "mongoose.HydratedDocument;mongoose.VirtualPathFunctions;Member[options].TypeVar[mongoose.VirtualTypeOptions.0]",
            "mongoose.InsertManyOptions;mongoose.Model;Member[insertMany].WithArity[2,3].Argument[1]",
            "mongoose.Model;mongoose.AcceptsDiscriminator;Member[discriminator].WithArity[2,3].ReturnValue",
            "mongoose.Model;mongoose.Aggregate;Member[model].Argument[0]",
            "mongoose.Model;mongoose.Connection;Member[model].WithArity[1,2,3,4].ReturnValue",
            "mongoose.Model;mongoose.Connection;Member[models].AnyMember",
            "mongoose.Model;mongoose.DiscriminatorModel;",
            "mongoose.Model;mongoose.Document;Member[$model].ReturnValue",
            "mongoose.Model;mongoose.Document;Member[populate].Argument[2]",
            "mongoose.Model;mongoose.Model;Member[discriminators].AnyMember",
            "mongoose.Model;mongoose.Models;AnyMember",
            "mongoose.Model;mongoose.PopulateOptions;Member[model]",
            "mongoose.Model;mongoose.Query;Member[cast].Argument[0]",
            "mongoose.Model;mongoose.Query;Member[populate].Argument[2]",
            "mongoose.Model;mongoose.Schema.Types.Array;Member[discriminator].WithArity[2,3].ReturnValue",
            "mongoose.Model;mongoose.Schema.Types.DocumentArray;Member[discriminator].WithArity[2,3].ReturnValue",
            "mongoose.Model;mongoose.Schema.Types.Subdocument;Member[discriminator].WithArity[2,3].ReturnValue",
            "mongoose.Model;mongoose.SchemaStatic;Instance.TypeVar[mongoose.Schema.1]",
            "mongoose.Model;mongoose;Member[Model]",
            "mongoose.Model;mongoose;Member[model].ReturnValue",
            "mongoose.Models;mongoose;Member[models]",
            "mongoose.PopulateOption;mongoose.InsertManyOptions;",
            "mongoose.PopulateOption;mongoose.QueryOptions;",
            "mongoose.PopulateOptions;mongoose.Document;Member[populate].Argument[4]",
            "mongoose.PopulateOptions;mongoose.Document;Member[populate].WithArity[1,2].Argument[0]",
            "mongoose.PopulateOptions;mongoose.Document;Member[populate].WithArity[1,2].Argument[0].ArrayElement",
            "mongoose.PopulateOptions;mongoose.Model;Member[populate].Argument[1]",
            "mongoose.PopulateOptions;mongoose.Model;Member[populate].Argument[1].ArrayElement",
            "mongoose.PopulateOptions;mongoose.PopulateOption;Member[populate]",
            "mongoose.PopulateOptions;mongoose.PopulateOption;Member[populate].ArrayElement",
            "mongoose.PopulateOptions;mongoose.PopulateOptions;Member[populate]",
            "mongoose.PopulateOptions;mongoose.PopulateOptions;Member[populate].ArrayElement",
            "mongoose.PopulateOptions;mongoose.Query;Member[populate].WithArity[1].Argument[0]",
            "mongoose.PopulateOptions;mongoose.Query;Member[populate].WithArity[1].Argument[0].ArrayElement",
            "mongoose.Query;mongoose.Document;Member[replaceOne,update,updateOne].ReturnValue",
            "mongoose.Query;mongoose.HydratedDocument;TypeVar[mongoose.Require_id.0]",
            "mongoose.Query;mongoose.Query;Member[all,allowDiskUse,and,batchSize,box,circle,clone,collation,comment,elemMatch,equals,exists,explain,geometry,gt,gte,hint,in,intersects,j,limit,lt,lte,maxDistance,maxScan,maxTimeMS,merge,mod,ne,near,nin,nor,or,polygon,read,readConcern,regex,remove,select,session,set,setOptions,size,skip,slice,snapshot,sort,tailable,w,where,within,wtimeout].ReturnValue",
            "mongoose.Query;mongoose.Query;Member[error].WithArity[1].ReturnValue",
            "mongoose.Query;mongoose.Query;Member[merge].Argument[0]",
            "mongoose.Query;mongoose.QueryStatic;Instance",
            "mongoose.Query;mongoose.QueryWithHelpers;",
            "mongoose.QueryOptions;mongoose.Document;Member[delete,deleteOne,remove].WithArity[0,1,2].Argument[0]",
            "mongoose.QueryOptions;mongoose.Document;Member[replaceOne,update,updateOne].Argument[1]",
            "mongoose.QueryOptions;mongoose.Model;Member[countDocuments,findByIdAndDelete,findByIdAndRemove,findOneAndDelete,findOneAndRemove].Argument[1]",
            "mongoose.QueryOptions;mongoose.Model;Member[deleteMany,deleteOne].WithArity[0,1,2,3].Argument[1]",
            "mongoose.QueryOptions;mongoose.Model;Member[estimatedDocumentCount].Argument[0]",
            "mongoose.QueryOptions;mongoose.Model;Member[find,findById].WithArity[1,2,3,4].Argument[2]",
            "mongoose.QueryOptions;mongoose.Model;Member[findByIdAndUpdate,findOne,findOneAndReplace,findOneAndUpdate].WithArity[0,1,2,3,4].Argument[2]",
            "mongoose.QueryOptions;mongoose.Model;Member[replaceOne,update,updateMany,updateOne].Argument[2]",
            "mongoose.QueryOptions;mongoose.PopulateOptions;Member[options]",
            "mongoose.QueryOptions;mongoose.Query;Member[countDocuments,findByIdAndDelete,findOneAndDelete,findOneAndRemove].Argument[1]",
            "mongoose.QueryOptions;mongoose.Query;Member[cursor,estimatedDocumentCount,setOptions].Argument[0]",
            "mongoose.QueryOptions;mongoose.Query;Member[cursor].ReturnValue.TypeVar[mongoose.Cursor.1]",
            "mongoose.QueryOptions;mongoose.Query;Member[deleteMany,deleteOne].WithArity[0,1,2,3].Argument[1]",
            "mongoose.QueryOptions;mongoose.Query;Member[findByIdAndUpdate,findOne,findOneAndUpdate].WithArity[0,1,2,3,4].Argument[2]",
            "mongoose.QueryOptions;mongoose.Query;Member[find].WithArity[1,2,3,4].Argument[2]",
            "mongoose.QueryOptions;mongoose.Query;Member[getOptions].ReturnValue",
            "mongoose.QueryOptions;mongoose.Query;Member[replaceOne,update,updateMany,updateOne].Argument[2]",
            "mongoose.QueryOptions;mongoose.VirtualTypeOptions;Member[options]",
            "mongoose.QueryStatic;mongoose;Member[Query]",
            "mongoose.QueryWithHelpers;mongoose.Document;Member[delete,deleteOne].WithArity[0,1].ReturnValue",
            "mongoose.QueryWithHelpers;mongoose.Model;Member[$where,count,countDocuments,deleteMany,deleteOne,distinct,estimatedDocumentCount,find,findById,findByIdAndDelete,findByIdAndRemove,findOne,findOneAndDelete,findOneAndRemove,geoSearch,remove,replaceOne,update,updateMany,updateOne,where].ReturnValue",
            "mongoose.QueryWithHelpers;mongoose.Model;Member[exists].WithArity[1,2].ReturnValue",
            "mongoose.QueryWithHelpers;mongoose.Model;Member[findByIdAndUpdate,findOneAndReplace,findOneAndUpdate].WithArity[0,1,2,3,4].ReturnValue",
            "mongoose.QueryWithHelpers;mongoose.Query;Member[$where,count,countDocuments,deleteMany,deleteOne,distinct,estimatedDocumentCount,find,findByIdAndDelete,findOne,findOneAndDelete,findOneAndRemove,lean,orFail,populate,replaceOne,transform,update,updateMany,updateOne].ReturnValue",
            "mongoose.QueryWithHelpers;mongoose.Query;Member[findByIdAndUpdate,findOneAndUpdate].WithArity[0,1,2,3,4].ReturnValue",
            "mongoose.QueryWithHelpers;mongoose.Query;Member[toConstructor].ReturnValue.Instance",
            "mongoose.Schema.Types.Array;mongoose.Schema.Types.Array;Member[enum].ReturnValue",
            "mongoose.Schema.Types.Array;mongoose.Schema.Types.ArrayStatic;Instance",
            "mongoose.Schema.Types.ArrayStatic;mongoose;Member[Schema].Member[Types].Member[Array]",
            "mongoose.Schema.Types.DocumentArray;mongoose.Schema.Types.DocumentArrayStatic;Instance",
            "mongoose.Schema.Types.DocumentArrayStatic;mongoose;Member[Schema].Member[Types].Member[DocumentArray]",
            "mongoose.Schema.Types.Subdocument;mongoose.Schema.Types.SubdocumentStatic;Instance",
            "mongoose.Schema.Types.SubdocumentStatic;mongoose.Schema.Types.DocumentArray;Member[caster]",
            "mongoose.Schema.Types.SubdocumentStatic;mongoose;Member[Schema].Member[Types].Member[Subdocument]",
            "mongoose.SchemaStatic;mongoose;Member[Schema]",
            "mongoose.SessionOperation;mongoose.Aggregate;",
            "mongoose.SessionOperation;mongoose.Query;",
            "mongoose.TVirtualPathFN;mongoose.VirtualPathFunctions;Member[get,set]",
            "mongoose.Types.Array;mongoose.Types.DocumentArray;",
            "mongoose.Types.ArraySubdocument;mongoose.Types.ArraySubdocumentStatic;Instance",
            "mongoose.Types.ArraySubdocumentStatic;mongoose;Member[Types].Member[ArraySubdocument]",
            "mongoose.Types.DocumentArray;mongoose.Types.ArraySubdocument;Member[parentArray].ReturnValue",
            "mongoose.Types.DocumentArray;mongoose.Types.DocumentArrayStatic;Instance",
            "mongoose.Types.DocumentArray;mongoose/inferschematype.ResolvePathType;TypeVar[mongoose.IfEquals.3]",
            "mongoose.Types.DocumentArrayStatic;mongoose;Member[Types].Member[DocumentArray]",
            "mongoose.Types.ObjectId;mongoose/inferschematype.ResolvePathType;",
            "mongoose.Types.Subdocument;mongoose.Types.ArraySubdocument;",
            "mongoose.Types.Subdocument;mongoose.Types.DocumentArray;Member[create,id].ReturnValue",
            "mongoose.Types.Subdocument;mongoose.Types.DocumentArray;TypeVar[mongoose.Types.Array.0]",
            "mongoose.Types.Subdocument;mongoose.Types.SubdocumentStatic;Instance",
            "mongoose.Types.SubdocumentStatic;mongoose;Member[Types].Member[Subdocument]",
            "mongoose.VirtualType;mongoose.TVirtualPathFN;Argument[1]",
            "mongoose.VirtualType;mongoose.VirtualType;Member[get,set].Argument[0].Argument[1]",
            "mongoose.VirtualType;mongoose.VirtualType;Member[get,set].ReturnValue",
            "mongoose.VirtualType;mongoose.VirtualTypeStatic;Instance",
            "mongoose.VirtualTypeOptions;mongoose.VirtualPathFunctions;Member[options]",
            "mongoose.VirtualTypeStatic;mongoose;Member[VirtualType]",
            "mongoose/inferschematype.ResolvePathType;mongoose/inferschematype.ObtainDocumentPathType;",
            "mongoose/inferschematype.ResolvePathType;mongoose/inferschematype.ResolvePathType;TypeVar[mongoose.IfEquals.3].ArrayElement",
            "mongoose/inferschematype.ResolvePathType;mongoose/inferschematype.ResolvePathType;TypeVar[mongoose.IfEquals.3].TypeVar[mongoose.Types.DocumentArray.0]",
            "mongoose;mongoose;Member[mongoose]"
        ],
        "summaries": [
            "mongodb.AbstractCursor;;;Member[addCursorFlag,batchSize,maxTimeMS,withReadConcern,withReadPreference].ReturnValue;type",
            "mongodb.BulkOperationBase;;;Member[addToOperationsList,raw].ReturnValue;type",
            "mongodb.FindCursor;;;Member[addQueryModifier,allowDiskUse,collation,comment,filter,hint,limit,max,maxAwaitTimeMS,maxTimeMS,min,returnKey,showRecordId,skip,sort].ReturnValue;type",
            "mongodb.FindOperators;;;Member[arrayFilters,collation,upsert].ReturnValue;type",
            "mongodb.GridFSBucketWriteStream;;;Member[end].ReturnValue;type",
            "mongodb.MongoClient;;;Member[connect].Argument[0].TypeVar[mongodb.Callback.0];type",
            "mongodb.MongoClient;;;Member[connect].WithArity[0].ReturnValue.Awaited;type",
            "mongodb.OrderedBulkOperation;;;Member[addToOperationsList].ReturnValue;type",
            "mongodb.TypedEventEmitter;;;Member[addListener,off,on,once,prependListener,prependOnceListener,removeAllListeners,removeListener,setMaxListeners].ReturnValue;type",
            "mongodb.UnorderedBulkOperation;;;Member[addToOperationsList].ReturnValue;type",
            "mongoose.Aggregate;;;Member[addCursorFlag,addFields,allowDiskUse,append,collation,count,facet,graphLookup,group,hint,limit,lookup,match,model,near,option,project,read,readConcern,redact,replaceRoot,sample,search,session,skip,sort,sortByCount,unionWith,unwind].ReturnValue;type",
            "mongoose.Connection;;;Member[asPromise].ReturnValue.Awaited;type",
            "mongoose.Connection;;;Member[deleteModel,setClient].ReturnValue;type",
            "mongoose.Cursor;;;Member[addCursorFlag].ReturnValue;type",
            "mongoose.Document;;;Member[$inc,$set,depopulate,increment,init,overwrite,set].ReturnValue;type",
            "mongoose.Document;;;Member[delete,deleteOne].WithArity[0,1].ReturnValue.TypeVar[mongoose.QueryWithHelpers.1];type",
            "mongoose.Document;;;Member[getChanges].ReturnValue.TypeVar[mongoose.UpdateQuery.0];type",
            "mongoose.Document;;;Member[init].Argument[2].TypeVar[mongoose.Callback.0];type",
            "mongoose.Document;;;Member[populate].Argument[1,5].TypeVar[mongoose.Callback.0].TypeVar[mongoose.MergeType.0];type",
            "mongoose.Document;;;Member[populate].WithArity[1,2,3,4,5].ReturnValue.Awaited.TypeVar[mongoose.MergeType.0];type",
            "mongoose.Document;;;Member[remove,save].WithArity[0,1].ReturnValue.Awaited;type",
            "mongoose.Document;;;Member[replaceOne,update,updateOne].ReturnValue.TypeVar[mongoose.Query.1];type",
            "mongoose.Document;;;Member[save].Argument[1].TypeVar[mongoose.Callback.0];type",
            "mongoose.Document;;;Member[save].WithArity[1].Argument[0].TypeVar[mongoose.Callback.0];type",
            "mongoose.Document;;;Member[update,updateOne].Argument[0].TypeVar[mongoose.UpdateQuery.0];type",
            "mongoose.Query;;;Member[all,allowDiskUse,and,batchSize,box,circle,clone,collation,comment,elemMatch,equals,exists,explain,geometry,gt,gte,hint,in,intersects,j,limit,lt,lte,maxDistance,maxScan,maxTimeMS,merge,mod,ne,near,nin,nor,or,polygon,read,readConcern,regex,select,session,set,setOptions,size,skip,slice,snapshot,sort,tailable,w,where,within,wtimeout].ReturnValue;type",
            "mongoose.Query;;;Member[error].WithArity[1].ReturnValue;type",
            "mongoose.Schema.Types.Array;;;Member[enum].ReturnValue;type",
            "mongoose.SessionOperation;;;Member[session].ReturnValue;type",
            "mongoose.Types.Array;;;Member[pull,remove,set].ReturnValue;type",
            "mongoose.Types.ObjectId;;;Member[_id];type",
            "mongoose.VirtualType;;;Member[get,set].ReturnValue;type"
        ],
        "typeVariables": [
            "mongodb.Callback.0;Argument[1]",
            "mongoose.Callback.0;Argument[1]",
            "mongoose.Cursor.0;Member[eachAsync].WithArity[1,2,3].Argument[0].Argument[0]",
            "mongoose.Cursor.0;Member[eachAsync].WithArity[2,3].Argument[0].Argument[0].ArrayElement",
            "mongoose.Cursor.0;Member[map].Argument[0].Argument[0]",
            "mongoose.Cursor.0;Member[next].Argument[0].TypeVar[mongoose.Callback.0]",
            "mongoose.Cursor.0;Member[next].WithArity[0].ReturnValue.Awaited",
            "mongoose.Cursor.1;Member[map].ReturnValue.TypeVar[mongoose.Cursor.1]",
            "mongoose.Cursor.1;Member[options]",
            "mongoose.DiscriminatorSchema.1;TypeVar[mongoose.Schema.1]",
            "mongoose.DiscriminatorSchema.1;TypeVar[mongoose.Schema.1].TypeVar[mongoose.DiscriminatorModel.1]",
            "mongoose.Document.0;Member[_id]",
            "mongoose.Document.0;Member[equals].Argument[0].TypeVar[mongoose.Document.0]",
            "mongoose.FilterQuery.0;TypeVar[mongoose._FilterQuery.0]",
            "mongoose.IfAny.1;",
            "mongoose.IfAny.2;",
            "mongoose.IfEquals.3;",
            "mongoose.LeanDocumentOrArray.0;",
            "mongoose.LeanDocumentOrArray.0;TypeVar[mongoose.LeanDocument.0]",
            "mongoose.LeanDocumentOrArrayWithRawType.0;",
            "mongoose.ModifyResult.0;Member[value].TypeVar[mongoose.Require_id.0]",
            "mongoose.PluginFunction.1;Argument[0].TypeVar[mongoose.Schema.1]",
            "mongoose.PostMiddlewareFunction.1;Argument[0]",
            "mongoose.Query.0;Member[exec].Argument[0].TypeVar[mongoose.Callback.0]",
            "mongoose.Query.0;Member[exec].WithArity[0].ReturnValue.Awaited",
            "mongoose.Query.0;Member[lean].ReturnValue.TypeVar[mongoose.QueryWithHelpers.0].TypeVar[mongoose.LeanDocumentOrArray.0,mongoose.LeanDocumentOrArrayWithRawType.0]",
            "mongoose.Query.0;Member[orFail].ReturnValue.TypeVar[mongoose.QueryWithHelpers.0]",
            "mongoose.Query.0;Member[populate].ReturnValue.TypeVar[mongoose.QueryWithHelpers.0].TypeVar[mongoose.UnpackedIntersection.0]",
            "mongoose.Query.0;Member[then,transform].Argument[0].Argument[0]",
            "mongoose.Query.0;Member[toConstructor].ReturnValue.Instance.TypeVar[mongoose.QueryWithHelpers.0]",
            "mongoose.Query.1;Member[$where,count,countDocuments,deleteMany,deleteOne,distinct,estimatedDocumentCount,find,lean,orFail,populate,replaceOne,transform,update,updateMany,updateOne].ReturnValue.TypeVar[mongoose.QueryWithHelpers.1]",
            "mongoose.Query.1;Member[$where,find].ReturnValue.TypeVar[mongoose.QueryWithHelpers.0].ArrayElement",
            "mongoose.Query.1;Member[_mongooseOptions].TypeVar[mongoose.MongooseQueryOptions.0]",
            "mongoose.Query.1;Member[and,nor,or].Argument[0].ArrayElement.TypeVar[mongoose.FilterQuery.0]",
            "mongoose.Query.1;Member[countDocuments,findByIdAndDelete,findOneAndDelete,findOneAndRemove].Argument[1].TypeVar[mongoose.QueryOptions.0]",
            "mongoose.Query.1;Member[countDocuments].WithArity[1,2,3].Argument[0].TypeVar[mongoose.FilterQuery.0]",
            "mongoose.Query.1;Member[count].WithArity[1,2].Argument[0].TypeVar[mongoose.FilterQuery.0]",
            "mongoose.Query.1;Member[cursor,estimatedDocumentCount,setOptions].Argument[0].TypeVar[mongoose.QueryOptions.0]",
            "mongoose.Query.1;Member[cursor].ReturnValue.TypeVar[mongoose.Cursor.0]",
            "mongoose.Query.1;Member[cursor].ReturnValue.TypeVar[mongoose.Cursor.1].TypeVar[mongoose.QueryOptions.0]",
            "mongoose.Query.1;Member[deleteMany,deleteOne].WithArity[0,1,2,3].Argument[0].TypeVar[mongoose.FilterQuery.0]",
            "mongoose.Query.1;Member[deleteMany,deleteOne].WithArity[0,1,2,3].Argument[1].TypeVar[mongoose.QueryOptions.0]",
            "mongoose.Query.1;Member[distinct].Argument[1].TypeVar[mongoose.FilterQuery.0]",
            "mongoose.Query.1;Member[findByIdAndDelete,findOne,findOneAndDelete,findOneAndRemove].ReturnValue.TypeVar[mongoose.QueryWithHelpers.0,mongoose.QueryWithHelpers.1]",
            "mongoose.Query.1;Member[findByIdAndDelete,findOneAndDelete,findOneAndRemove].Argument[2].Argument[1]",
            "mongoose.Query.1;Member[findByIdAndUpdate,findOneAndUpdate,update,updateMany,updateOne].Argument[1].TypeVar[mongoose.UpdateQuery.0]",
            "mongoose.Query.1;Member[findByIdAndUpdate,findOneAndUpdate].WithArity[0,1,2,3,4].Argument[2].TypeVar[mongoose.QueryOptions.0]",
            "mongoose.Query.1;Member[findByIdAndUpdate,findOneAndUpdate].WithArity[0,1,2,3,4].ReturnValue.TypeVar[mongoose.QueryWithHelpers.0,mongoose.QueryWithHelpers.1]",
            "mongoose.Query.1;Member[findByIdAndUpdate].WithArity[0,1,2,4].Argument[3].Argument[1]",
            "mongoose.Query.1;Member[findByIdAndUpdate].WithArity[3].Argument[2,3].Argument[1]",
            "mongoose.Query.1;Member[findOne,findOneAndDelete,findOneAndRemove,findOneAndUpdate,merge,remove,replaceOne,setQuery,update,updateMany,updateOne].Argument[0].TypeVar[mongoose.FilterQuery.0]",
            "mongoose.Query.1;Member[findOneAndUpdate].Argument[3].Argument[1]",
            "mongoose.Query.1;Member[findOneAndUpdate].Argument[3].Argument[2].TypeVar[mongoose.ModifyResult.0]",
            "mongoose.Query.1;Member[findOneAndUpdate].WithArity[3,4].ReturnValue.TypeVar[mongoose.QueryWithHelpers.0].TypeVar[mongoose.ModifyResult.0]",
            "mongoose.Query.1;Member[findOne].Argument[3].TypeVar[mongoose.Callback.0]",
            "mongoose.Query.1;Member[findOne].WithArity[0,1,2,3].Argument[2].TypeVar[mongoose.Callback.0,mongoose.QueryOptions.0]",
            "mongoose.Query.1;Member[findOne].WithArity[0,1,2].Argument[1].TypeVar[mongoose.Callback.0,mongoose.ProjectionType.0]",
            "mongoose.Query.1;Member[findOne].WithArity[3,4].Argument[1].TypeVar[mongoose.ProjectionType.0]",
            "mongoose.Query.1;Member[findOne].WithArity[4].Argument[2].TypeVar[mongoose.QueryOptions.0]",
            "mongoose.Query.1;Member[find].Argument[3].TypeVar[mongoose.Callback.0].ArrayElement",
            "mongoose.Query.1;Member[find].WithArity[0].Argument[0].TypeVar[mongoose.Callback.0].ArrayElement",
            "mongoose.Query.1;Member[find].WithArity[1,2,3,4].Argument[0].TypeVar[mongoose.FilterQuery.0]",
            "mongoose.Query.1;Member[find].WithArity[1,2,3,4].Argument[1].TypeVar[mongoose.ProjectionType.0]",
            "mongoose.Query.1;Member[find].WithArity[1,2,3,4].Argument[2].TypeVar[mongoose.QueryOptions.0]",
            "mongoose.Query.1;Member[find].WithArity[1].Argument[0,1,2].TypeVar[mongoose.Callback.0].ArrayElement",
            "mongoose.Query.1;Member[find].WithArity[2].Argument[1,2].TypeVar[mongoose.Callback.0].ArrayElement",
            "mongoose.Query.1;Member[find].WithArity[3].Argument[2].TypeVar[mongoose.Callback.0].ArrayElement",
            "mongoose.Query.1;Member[getFilter,getQuery].ReturnValue.TypeVar[mongoose.FilterQuery.0]",
            "mongoose.Query.1;Member[getOptions].ReturnValue.TypeVar[mongoose.QueryOptions.0]",
            "mongoose.Query.1;Member[getUpdate].ReturnValue.TypeVar[mongoose.UpdateQuery.0]",
            "mongoose.Query.1;Member[projection].WithArity[0,1].Argument[0].TypeVar[mongoose.ProjectionFields.0]",
            "mongoose.Query.1;Member[projection].WithArity[0,1].ReturnValue.TypeVar[mongoose.ProjectionFields.0]",
            "mongoose.Query.1;Member[remove].ReturnValue.TypeVar[mongoose.Query.1]",
            "mongoose.Query.1;Member[replaceOne,update,updateMany,updateOne].Argument[2].TypeVar[mongoose.QueryOptions.0]",
            "mongoose.Query.1;Member[replaceOne].Argument[1]",
            "mongoose.Query.1;Member[setUpdate].Argument[0].TypeVar[mongoose.UpdateQuery.0]",
            "mongoose.Query.1;Member[toConstructor].ReturnValue.Instance.TypeVar[mongoose.QueryWithHelpers.1]",
            "mongoose.QueryOptions.0;Member[projection].TypeVar[mongoose.ProjectionType.0]",
            "mongoose.QueryWithHelpers.0;TypeVar[mongoose.Query.0]",
            "mongoose.QueryWithHelpers.1;TypeVar[mongoose.Query.1]",
            "mongoose.Require_id.0;",
            "mongoose.Require_id.0;TypeVar[mongoose.IfAny.1,mongoose.IfAny.2]",
            "mongoose.RootQuerySelector.0;Member[$and,$nor,$or].ArrayElement.TypeVar[mongoose.FilterQuery.0]",
            "mongoose.Schema.1;Member[discriminator].ReturnValue.TypeVar[mongoose.DiscriminatorSchema.1]",
            "mongoose.Schema.1;Member[plugin].Argument[0].TypeVar[mongoose.PluginFunction.1]",
            "mongoose.Schema.1;Member[post].Argument[2].TypeVar[mongoose.ErrorHandlingMiddlewareFunction.0,mongoose.PostMiddlewareFunction.0,mongoose.PostMiddlewareFunction.1]",
            "mongoose.Schema.1;Member[post].WithArity[2].WithStringArgument[0=insertMany].Argument[1].TypeVar[mongoose.ErrorHandlingMiddlewareFunction.0,mongoose.PostMiddlewareFunction.0,mongoose.PostMiddlewareFunction.1]",
            "mongoose.Types.Array.0;Member[$pop,$shift,shift].ReturnValue",
            "mongoose.Types.Array.0;Member[set].Argument[1]",
            "mongoose.Types.DocumentArray.0;Member[create,id].ReturnValue",
            "mongoose.Types.DocumentArray.0;Member[create,id].ReturnValue.TypeVar[mongoose.Types.Subdocument.0].TypeVar[mongoose.InferId.0]",
            "mongoose.Types.DocumentArray.0;Member[push].Argument[0].ArrayElement.TypeVar[mongoose.AnyKeys.0]",
            "mongoose.Types.DocumentArray.0;TypeVar[mongoose.Types.Array.0]",
            "mongoose.Types.DocumentArray.0;TypeVar[mongoose.Types.Array.0].TypeVar[mongoose.Types.Subdocument.0].TypeVar[mongoose.InferId.0]",
            "mongoose.Types.Subdocument.0;TypeVar[mongoose.Document.0]",
            "mongoose.UnpackedIntersection.0;",
            "mongoose.UpdateQuery.0;TypeVar[mongoose._UpdateQuery.0].TypeVar[mongoose._UpdateQueryDef.0]",
            "mongoose.VirtualType.0;Member[get,set].Argument[0].Argument[1].TypeVar[mongoose.VirtualType.0]",
            "mongoose.VirtualType.0;Member[get,set].Argument[0].Argument[2]",
            "mongoose.VirtualTypeOptions.0;Member[foreignField,localField].Argument[0]",
            "mongoose._FilterQuery.0;TypeVar[mongoose.RootQuerySelector.0]",
            "mongoose._UpdateQuery.0;Member[$currentDate,$inc,$max,$min,$mul,$pop,$pull,$pullAll,$push,$set,$setOnInsert,$unset].TypeVar[mongoose.AnyKeys.0]"
        ]
    }
}
