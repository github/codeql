extensions:
  - addsTo:
      pack: codeql/javascript-all
      extensible: sinkModel
    data:
      - [sequelize.Sequelize, "Member[query, manual].Argument[0, manual].Member[query, manual]", "sql-injection", manual]
      - [sequelize.Sequelize, "Member[query, manual].Argument[0, manual]", "sql-injection", manual]
      - [sequelize.SequelizeStaticAndInstance, "Member[asIs,literal, manual].Argument[0, manual]", "sql-injection", manual]
      - [sequelize, "Argument[0.., manual].Member[password, manual]", "credentials-password", manual]
      - [sequelize, "Argument[0.., manual].Member[username, manual]", "credentials-username", manual]
      - [sequelize, "Argument[1, manual]", "credentials-username", manual]
      - [sequelize, "Argument[2, manual]", "credentials-password", manual]

  - addsTo:
      pack: codeql/javascript-all
      extensible: typeModel
    data:
      - ["sequelize-typescript.AssociationCountOptions", "sequelize-typescript.Model", "Member[$count, manual].Argument[1, manual]", manual]
      - ["sequelize-typescript.AssociationCountOptions", "sequelize-typescript/model/model/association/association-count-options.AssociationCountOptions", "", manual]
      - ["sequelize-typescript.AssociationGetOptions", "sequelize-typescript.Model", "Member[$get, manual].Argument[1, manual]", manual]
      - ["sequelize-typescript.AssociationGetOptions", "sequelize-typescript.Model", "Member[$has, manual].Argument[2, manual]", manual]
      - ["sequelize-typescript.AssociationGetOptions", "sequelize-typescript/model/model/association/association-get-options.AssociationGetOptions", "", manual]
      - ["sequelize-typescript.BaseAssociation", "sequelize-typescript.BaseAssociationStatic", Instance, manual]
      - ["sequelize-typescript.BaseAssociation", "sequelize-typescript.BelongsToAssociation", "", manual]
      - ["sequelize-typescript.BaseAssociation", "sequelize-typescript.BelongsToManyAssociation", "", manual]
      - ["sequelize-typescript.BaseAssociation", "sequelize-typescript.HasAssociation", "", manual]
      - ["sequelize-typescript.BaseAssociation", "sequelize-typescript/associations/shared/association-service", "Member[addAssociation, manual].Argument[1, manual]", manual]
      - ["sequelize-typescript.BaseAssociation", "sequelize-typescript/associations/shared/association-service", "Member[getAssociations,getAssociationsByRelation, manual].ReturnValue.ArrayElement", manual]
      - ["sequelize-typescript.BaseAssociation", "sequelize-typescript/associations/shared/association-service", "Member[setAssociations, manual].Argument[1, manual].ArrayElement", manual]
      - ["sequelize-typescript.BaseAssociation", "sequelize-typescript/associations/shared/base-association.BaseAssociation", "", manual]
      - ["sequelize-typescript.BaseAssociation", "sequelize-typescript", "Member[addAssociation, manual].Argument[1, manual]", manual]
      - ["sequelize-typescript.BaseAssociation", "sequelize-typescript", "Member[getAssociations,getAssociationsByRelation, manual].ReturnValue.ArrayElement", manual]
      - ["sequelize-typescript.BaseAssociation", "sequelize-typescript", "Member[setAssociations, manual].Argument[1, manual].ArrayElement", manual]
      - ["sequelize-typescript.BaseAssociationStatic", "sequelize-typescript/associations/shared/base-association.BaseAssociationStatic", "", manual]
      - ["sequelize-typescript.BaseAssociationStatic", "sequelize-typescript/associations/shared/base-association", "Member[BaseAssociation, manual]", manual]
      - ["sequelize-typescript.BaseAssociationStatic", "sequelize-typescript", "Member[BaseAssociation, manual]", manual]
      - ["sequelize-typescript.BelongsToAssociation", "sequelize-typescript.BelongsToAssociationStatic", Instance, manual]
      - ["sequelize-typescript.BelongsToAssociation", "sequelize-typescript/associations/belongs-to/belongs-to-association.BelongsToAssociation", "", manual]
      - ["sequelize-typescript.BelongsToAssociationStatic", "sequelize-typescript/associations/belongs-to/belongs-to-association.BelongsToAssociationStatic", "", manual]
      - ["sequelize-typescript.BelongsToAssociationStatic", "sequelize-typescript/associations/belongs-to/belongs-to-association", "Member[BelongsToAssociation, manual]", manual]
      - ["sequelize-typescript.BelongsToAssociationStatic", "sequelize-typescript", "Member[BelongsToAssociation, manual]", manual]
      - ["sequelize-typescript.BelongsToManyAssociation", "sequelize-typescript.BelongsToManyAssociationStatic", Instance, manual]
      - ["sequelize-typescript.BelongsToManyAssociation", "sequelize-typescript/associations/belongs-to-many/belongs-to-many-association.BelongsToManyAssociation", "", manual]
      - ["sequelize-typescript.BelongsToManyAssociationStatic", "sequelize-typescript/associations/belongs-to-many/belongs-to-many-association.BelongsToManyAssociationStatic", "", manual]
      - ["sequelize-typescript.BelongsToManyAssociationStatic", "sequelize-typescript/associations/belongs-to-many/belongs-to-many-association", "Member[BelongsToManyAssociation, manual]", manual]
      - ["sequelize-typescript.BelongsToManyAssociationStatic", "sequelize-typescript", "Member[BelongsToManyAssociation, manual]", manual]
      - ["sequelize-typescript.DefaultScopeGetter", "sequelize-typescript.ScopeOptionsGetters", "Member[getDefaultScope, manual]", manual]
      - ["sequelize-typescript.DefaultScopeGetter", "sequelize-typescript/scopes/default-scope", "Member[DefaultScope, manual].Argument[0, manual]", manual]
      - ["sequelize-typescript.DefaultScopeGetter", "sequelize-typescript/scopes/scope-options.DefaultScopeGetter", "", manual]
      - ["sequelize-typescript.DefaultScopeGetter", "sequelize-typescript", "Member[DefaultScope, manual].Argument[0, manual]", manual]
      - ["sequelize-typescript.HasAssociation", "sequelize-typescript.HasAssociationStatic", Instance, manual]
      - ["sequelize-typescript.HasAssociation", "sequelize-typescript/associations/has/has-association.HasAssociation", "", manual]
      - ["sequelize-typescript.HasAssociationStatic", "sequelize-typescript/associations/has/has-association.HasAssociationStatic", "", manual]
      - ["sequelize-typescript.HasAssociationStatic", "sequelize-typescript/associations/has/has-association", "Member[HasAssociation, manual]", manual]
      - ["sequelize-typescript.HasAssociationStatic", "sequelize-typescript", "Member[HasAssociation, manual]", manual]
      - ["sequelize-typescript.Model", "sequelize-typescript.Model", "Member[$add,$has,$remove,$set, manual].Argument[1, manual]", manual]
      - ["sequelize-typescript.Model", "sequelize-typescript.Model", "Member[$add,$has,$remove,$set, manual].Argument[1, manual].ArrayElement", manual]
      - ["sequelize-typescript.Model", "sequelize-typescript.Model", "Member[$create,reload, manual].ReturnValue.Awaited", manual]
      - ["sequelize-typescript.Model", "sequelize-typescript.ModelStatic~", Instance, manual]
      - ["sequelize-typescript.Model", "sequelize-typescript.ModelStatic~", "Member[initialize, manual].ReturnValue.TypeVar[sequelize-typescript.ModelStatic.0, manual]", manual]
      - ["sequelize-typescript.Model", "sequelize-typescript.ModelType", Instance, manual]
      - ["sequelize-typescript.Model", "sequelize-typescript.Sequelize", "Member[getRepository, manual].Argument[0, manual].Instance", manual]
      - ["sequelize-typescript.Model", "sequelize-typescript.Sequelize", "Member[getRepository, manual].ReturnValue.TypeVar[sequelize-typescript.Repository.0, manual]", manual]
      - ["sequelize-typescript.Model", "sequelize-typescript/model/model/model.Model", "", manual]
      - ["sequelize-typescript.ModelClassGetter", "sequelize-typescript.BaseAssociationStatic", "Argument[0, manual]", manual]
      - ["sequelize-typescript.ModelClassGetter", "sequelize-typescript.BelongsToAssociationStatic", "Argument[0, manual]", manual]
      - ["sequelize-typescript.ModelClassGetter", "sequelize-typescript.BelongsToManyAssociationStatic", "Argument[0, manual]", manual]
      - ["sequelize-typescript.ModelClassGetter", "sequelize-typescript.HasAssociationStatic", "Argument[0, manual]", manual]
      - ["sequelize-typescript.ModelClassGetter", "sequelize-typescript/associations/belongs-to-many/belongs-to-many", "Member[BelongsToMany, manual].Argument[0,1, manual]", manual]
      - ["sequelize-typescript.ModelClassGetter", "sequelize-typescript/associations/belongs-to/belongs-to", "Member[BelongsTo, manual].Argument[0, manual]", manual]
      - ["sequelize-typescript.ModelClassGetter", "sequelize-typescript/associations/foreign-key/foreign-key-meta.ForeignKeyMeta", "Member[relatedClassGetter, manual]", manual]
      - ["sequelize-typescript.ModelClassGetter", "sequelize-typescript/associations/foreign-key/foreign-key-service", "Member[addForeignKey, manual].Argument[1, manual]", manual]
      - ["sequelize-typescript.ModelClassGetter", "sequelize-typescript/associations/foreign-key/foreign-key", "Member[ForeignKey, manual].Argument[0, manual]", manual]
      - ["sequelize-typescript.ModelClassGetter", "sequelize-typescript/associations/has/has-many", "Member[HasMany, manual].Argument[0, manual]", manual]
      - ["sequelize-typescript.ModelClassGetter", "sequelize-typescript/associations/has/has-one", "Member[HasOne, manual].Argument[0, manual]", manual]
      - ["sequelize-typescript.ModelClassGetter", "sequelize-typescript/model/shared/model-class-getter.ModelClassGetter", "", manual]
      - ["sequelize-typescript.ModelClassGetter", "sequelize-typescript", "Member[BelongsTo,ForeignKey,HasMany,HasOne, manual].Argument[0, manual]", manual]
      - ["sequelize-typescript.ModelClassGetter", "sequelize-typescript", "Member[BelongsToMany, manual].Argument[0,1, manual]", manual]
      - ["sequelize-typescript.ModelStatic~", "sequelize-typescript/model/model/model.ModelStatic~", "", manual]
      - ["sequelize-typescript.ModelStatic~", "sequelize-typescript/model/model/model", "Member[Model, manual]", manual]
      - ["sequelize-typescript.ModelStatic~", "sequelize-typescript/model/shared/model-not-initialized-error.ModelNotInitializedErrorStatic", "Argument[0, manual]", manual]
      - ["sequelize-typescript.ModelStatic~", "sequelize-typescript", "Member[Model, manual]", manual]
      - ["sequelize-typescript.ModelType", "sequelize-typescript.BaseAssociation", "Member[getAssociatedClass, manual].ReturnValue", manual]
      - ["sequelize-typescript.ModelType", "sequelize-typescript.BaseAssociation", "Member[getSequelizeOptions, manual].Argument[0, manual]", manual]
      - ["sequelize-typescript.ModelType", "sequelize-typescript.BelongsToAssociation", "Member[getSequelizeOptions, manual].Argument[0, manual]", manual]
      - ["sequelize-typescript.ModelType", "sequelize-typescript.BelongsToManyAssociation", "Member[getSequelizeOptions, manual].Argument[0, manual]", manual]
      - ["sequelize-typescript.ModelType", "sequelize-typescript.HasAssociation", "Member[getSequelizeOptions, manual].Argument[0, manual]", manual]
      - ["sequelize-typescript.ModelType", "sequelize-typescript.ModelClassGetter", ReturnValue, manual]
      - ["sequelize-typescript.ModelType", "sequelize-typescript.Sequelize", "Member[model, manual].Argument[0, manual]", manual]
      - ["sequelize-typescript.ModelType", "sequelize-typescript/associations/foreign-key/foreign-key-service", "Member[getForeignKeyOptions, manual].Argument[0,1, manual]", manual]
      - ["sequelize-typescript.ModelType", "sequelize-typescript/model/model/model.ModelType", "", manual]
      - ["sequelize-typescript.ScopeOptionsGetters", "sequelize-typescript/scopes/scope-options.ScopeOptionsGetters", "", manual]
      - ["sequelize-typescript.ScopeOptionsGetters", "sequelize-typescript/scopes/scope-service", "Member[addScopeOptionsGetter,setScopeOptionsGetters, manual].Argument[1, manual]", manual]
      - ["sequelize-typescript.ScopeOptionsGetters", "sequelize-typescript/scopes/scope-service", "Member[getScopeOptionsGetters, manual].ReturnValue", manual]
      - ["sequelize-typescript.ScopeOptionsGetters", "sequelize-typescript", "Member[addScopeOptionsGetter,setScopeOptionsGetters, manual].Argument[1, manual]", manual]
      - ["sequelize-typescript.ScopeOptionsGetters", "sequelize-typescript", "Member[getScopeOptionsGetters, manual].ReturnValue", manual]
      - ["sequelize-typescript.ScopesOptions", "sequelize-typescript.ScopesOptionsGetter", ReturnValue.AnyMember, manual]
      - ["sequelize-typescript.ScopesOptions", "sequelize-typescript/scopes/scope-options.ScopesOptions", "", manual]
      - ["sequelize-typescript.ScopesOptions", "sequelize-typescript/scopes/scope-service", "Member[resolveScope, manual].Argument[2, manual]", manual]
      - ["sequelize-typescript.ScopesOptions", "sequelize-typescript", "Member[resolveScope, manual].Argument[2, manual]", manual]
      - ["sequelize-typescript.ScopesOptionsGetter", "sequelize-typescript.ScopeOptionsGetters", "Member[getScopes, manual]", manual]
      - ["sequelize-typescript.ScopesOptionsGetter", "sequelize-typescript/scopes/scope-options.ScopesOptionsGetter", "", manual]
      - ["sequelize-typescript.ScopesOptionsGetter", "sequelize-typescript/scopes/scopes", "Member[Scopes, manual].Argument[0, manual]", manual]
      - ["sequelize-typescript.ScopesOptionsGetter", "sequelize-typescript", "Member[Scopes, manual].Argument[0, manual]", manual]
      - ["sequelize-typescript.Sequelize", "sequelize-typescript.BaseAssociation", "Member[getSequelizeOptions, manual].Argument[1, manual]", manual]
      - ["sequelize-typescript.Sequelize", "sequelize-typescript.BelongsToManyAssociation", "Member[getSequelizeOptions, manual].Argument[1, manual]", manual]
      - ["sequelize-typescript.Sequelize", "sequelize-typescript.SequelizeStatic", Instance, manual]
      - ["sequelize-typescript.Sequelize", "sequelize-typescript/sequelize/sequelize/sequelize.Sequelize", "", manual]
      - ["sequelize-typescript.SequelizeOptions", "sequelize-typescript.Sequelize", "Member[options, manual]", manual]
      - ["sequelize-typescript.SequelizeOptions", "sequelize-typescript.SequelizeStatic", "Argument[3, manual]", manual]
      - ["sequelize-typescript.SequelizeOptions", "sequelize-typescript.SequelizeStatic", "WithArity[0, manual].Argument[0, manual]", manual]
      - ["sequelize-typescript.SequelizeOptions", "sequelize-typescript.SequelizeStatic", "WithArity[1, manual].Argument[0,1, manual]", manual]
      - ["sequelize-typescript.SequelizeOptions", "sequelize-typescript.SequelizeStatic", "WithArity[2, manual].Argument[1,2, manual]", manual]
      - ["sequelize-typescript.SequelizeOptions", "sequelize-typescript.SequelizeStatic", "WithArity[3, manual].Argument[2, manual]", manual]
      - ["sequelize-typescript.SequelizeOptions", "sequelize-typescript/sequelize/sequelize/sequelize-options.SequelizeOptions", "", manual]
      - ["sequelize-typescript.SequelizeOptions", "sequelize-typescript/sequelize/sequelize/sequelize-service", "Member[prepareArgs, manual].ReturnValue.Member[options, manual]", manual]
      - ["sequelize-typescript.SequelizeOptions", "sequelize-typescript/sequelize/sequelize/sequelize-service", "Member[prepareOptions, manual].Argument[0, manual]", manual]
      - ["sequelize-typescript.SequelizeOptions", "sequelize-typescript/sequelize/sequelize/sequelize-service", "Member[prepareOptions, manual].ReturnValue", manual]
      - ["sequelize-typescript.SequelizeOptions", "sequelize-typescript", "Member[prepareArgs, manual].ReturnValue.Member[options, manual]", manual]
      - ["sequelize-typescript.SequelizeOptions", "sequelize-typescript", "Member[prepareOptions, manual].Argument[0, manual]", manual]
      - ["sequelize-typescript.SequelizeOptions", "sequelize-typescript", "Member[prepareOptions, manual].ReturnValue", manual]
      - ["sequelize-typescript.SequelizeStatic", "sequelize-typescript/sequelize/sequelize/sequelize.SequelizeStatic", "", manual]
      - ["sequelize-typescript.SequelizeStatic", "sequelize-typescript/sequelize/sequelize/sequelize", "Member[Sequelize, manual]", manual]
      - ["sequelize-typescript.SequelizeStatic", "sequelize-typescript", "Member[Sequelize, manual]", manual]
      - ["sequelize-typescript/associations/foreign-key/foreign-key-meta.ForeignKeyMeta", "sequelize-typescript/associations/foreign-key/foreign-key-service", "Member[getForeignKeys, manual].ReturnValue.ArrayElement", manual]
      - ["sequelize-typescript/model/model/association/association-create-options.AssociationCreateOptions", "sequelize-typescript.Model", "Member[$create, manual].Argument[2, manual]", manual]
      - ["sequelize-typescript/model/shared/model-not-initialized-error.ModelNotInitializedErrorStatic", "sequelize-typescript/model/shared/model-not-initialized-error", "Member[ModelNotInitializedError, manual]", manual]
      - [sequelize.AnyFindOptions, sequelize.BelongsToManyAddAssociationMixin, "Argument[1, manual]", manual]
      - [sequelize.AnyFindOptions, sequelize.BelongsToManyAddAssociationsMixin, "Argument[1, manual]", manual]
      - [sequelize.AnyFindOptions, sequelize.BelongsToManySetAssociationsMixin, "Argument[1, manual]", manual]
      - [sequelize.AnyFindOptions, sequelize.DefineOptions, "Member[defaultScope, manual]", manual]
      - [sequelize.AnyFindOptions, sequelize.DefineScopeOptions, AnyMember, manual]
      - [sequelize.AnyFindOptions, sequelize.HasManySetAssociationsMixin, "Argument[1, manual]", manual]
      - [sequelize.AnyFindOptions, sequelize.Instance, "Member[reload, manual].Argument[0, manual]", manual]
      - [sequelize.AnyFindOptions, sequelize.Model, "Member[addScope, manual].Argument[1, manual]", manual]
      - [sequelize.AssociationOptionsBelongsToMany, sequelize.Associations, "Member[belongsToMany, manual].Argument[1, manual]", manual]
      - [sequelize.Associations, sequelize.Model, "", manual]
      - [sequelize.Associations, sequelize.SequelizeStaticAndInstance.Model, "", manual]
      - [sequelize.BuildOptions, "sequelize-typescript.ModelStatic~", "Argument[1, manual]", manual]
      - [sequelize.BuildOptions, sequelize.CreateOptions, "", manual]
      - [sequelize.BuildOptions, sequelize.Model, "Member[build,bulkBuild, manual].Argument[1, manual]", manual]
      - [sequelize.CountOptions, sequelize.Model, "Member[count, manual].Argument[0, manual]", manual]
      - [sequelize.CreateOptions, "sequelize-typescript/model/model/association/association-create-options.AssociationCreateOptions", "", manual]
      - [sequelize.CreateOptions, sequelize.BelongsToCreateAssociationMixin, "Argument[1, manual]", manual]
      - [sequelize.CreateOptions, sequelize.BelongsToManyCreateAssociationMixin, "Argument[1, manual]", manual]
      - [sequelize.CreateOptions, sequelize.HasManyCreateAssociationMixin, "Argument[1, manual]", manual]
      - [sequelize.CreateOptions, sequelize.HasOneCreateAssociationMixin, "Argument[1, manual]", manual]
      - [sequelize.CreateOptions, sequelize.Model, "Member[create, manual].Argument[1, manual]", manual]
      - [sequelize.DefineAttributeColumnOptions, sequelize.DefineAttributes, AnyMember, manual]
      - [sequelize.DefineAttributeColumnOptions, sequelize.QueryInterface, "Member[addColumn,changeColumn, manual].Argument[2, manual]", manual]
      - [sequelize.DefineAttributeColumnReferencesOptions, sequelize.DefineAttributeColumnOptions, "Member[references, manual]", manual]
      - [sequelize.DefineAttributes, sequelize.Hooks, "Member[beforeDefine, manual].Argument[1, manual].Argument[0, manual]", manual]
      - [sequelize.DefineAttributes, sequelize.Hooks, "Member[beforeDefine, manual].WithArity[1, manual].Argument[0, manual].Argument[0, manual]", manual]
      - [sequelize.DefineAttributes, sequelize.QueryInterface, "Member[createTable, manual].Argument[1, manual]", manual]
      - [sequelize.DefineOptions, sequelize.Options, "Member[define, manual]", manual]
      - [sequelize.DefineOptions, sequelize.Sequelize, "Member[define, manual].Argument[2, manual]", manual]
      - [sequelize.DefineScopeOptions, sequelize.DefineOptions, "Member[scopes, manual]", manual]
      - [sequelize.FindCreateFindOptions, sequelize.Model, "Member[findCreateFind, manual].Argument[0, manual]", manual]
      - [sequelize.FindOptions, "sequelize-typescript.AssociationCountOptions", "", manual]
      - [sequelize.FindOptions, "sequelize-typescript.AssociationGetOptions", "", manual]
      - [sequelize.FindOptions, "sequelize-typescript.DefaultScopeGetter", ReturnValue, manual]
      - [sequelize.FindOptions, "sequelize-typescript.Model", "Member[reload, manual].Argument[0, manual]", manual]
      - [sequelize.FindOptions, "sequelize-typescript.ScopesOptions", "", manual]
      - [sequelize.FindOptions, "sequelize-typescript.ScopesOptions", ReturnValue, manual]
      - [sequelize.FindOptions, sequelize.AnyFindOptions, "", manual]
      - [sequelize.FindOptions, sequelize.FindCreateFindOptions, "", manual]
      - [sequelize.FindOptions, sequelize.FindOrInitializeOptions, "", manual]
      - [sequelize.FindOptions, sequelize.Model, "Member[all,find,findAll,findAndCount,findAndCountAll,findOne, manual].Argument[0, manual]", manual]
      - [sequelize.FindOptionsOrderArray, sequelize.FindOptions, "Member[order, manual]", manual]
      - [sequelize.FindOptionsOrderArray, sequelize.FindOptions, "Member[order, manual].ArrayElement", manual]
      - [sequelize.FindOrInitializeOptions, sequelize.Model, "Member[findOrBuild,findOrCreate,findOrInitialize, manual].Argument[0, manual]", manual]
      - [sequelize.HasManyGetAssociationsMixinOptions, sequelize.HasManyGetAssociationsMixin, "Argument[0, manual]", manual]
      - [sequelize.HasManyGetAssociationsMixinOptions, sequelize.HasManyHasAssociationMixin, "Argument[1, manual]", manual]
      - [sequelize.HasManyGetAssociationsMixinOptions, sequelize.HasManyHasAssociationsMixin, "Argument[1, manual]", manual]
      - [sequelize.Hooks, sequelize.Hooks, "Member[addHook,hook,removeHook, manual].ReturnValue", manual]
      - [sequelize.Hooks, sequelize.Model, "", manual]
      - [sequelize.Hooks, sequelize.Sequelize, "", manual]
      - [sequelize.Hooks, sequelize.SequelizeStaticAndInstance.Model, "", manual]
      - [sequelize.IncludeAssociation, sequelize.Associations, "Member[belongsTo,belongsToMany,hasMany,hasOne, manual].ReturnValue", manual]
      - [sequelize.IncludeAssociation, sequelize.IncludeOptions, "Member[association, manual]", manual]
      - [sequelize.IncludeOptions, sequelize.BuildOptions, "Member[include, manual].ArrayElement", manual]
      - [sequelize.IncludeOptions, sequelize.CountOptions, "Member[include, manual]", manual]
      - [sequelize.IncludeOptions, sequelize.CountOptions, "Member[include, manual].ArrayElement", manual]
      - [sequelize.IncludeOptions, sequelize.FindOptions, "Member[include, manual]", manual]
      - [sequelize.IncludeOptions, sequelize.FindOptions, "Member[include, manual].ArrayElement", manual]
      - [sequelize.IncludeOptions, sequelize.HasManyGetAssociationsMixinOptions, "Member[include, manual]", manual]
      - [sequelize.IncludeOptions, sequelize.IncludeOptions, "Member[include, manual]", manual]
      - [sequelize.IncludeOptions, sequelize.IncludeOptions, "Member[include, manual].ArrayElement", manual]
      - [sequelize.Instance, sequelize.Instance, "Member[decrement,increment,reload,save,update,updateAttributes, manual].ReturnValue.Awaited", manual]
      - [sequelize.Instance, sequelize.Instance, "Member[equalsOneOf, manual].Argument[0, manual].ArrayElement", manual]
      - [sequelize.Instance, sequelize.Instance, "Member[equals, manual].Argument[0, manual]", manual]
      - [sequelize.Instance, sequelize.Instance, "Member[set,setAttributes, manual].ReturnValue", manual]
      - [sequelize.Instance, sequelize.Model, "Member[Instance,build, manual].ReturnValue", manual]
      - [sequelize.Instance, sequelize.Model, "Member[all,bulkCreate,findAll, manual].ReturnValue.Awaited.ArrayElement", manual]
      - [sequelize.Instance, sequelize.Model, "Member[bulkBuild, manual].ReturnValue.ArrayElement", manual]
      - [sequelize.Instance, sequelize.Model, "Member[create,find,findById,findByPk,findByPrimary,findOne, manual].ReturnValue.Awaited", manual]
      - [sequelize.Instance, sequelize.Model, "Member[findAndCount,findAndCountAll, manual].ReturnValue.Awaited.Member[rows, manual].ArrayElement", manual]
      - [sequelize.Instance, sequelize.QueryInterface, "Member[delete,increment,insert,update, manual].Argument[0, manual]", manual]
      - [sequelize.Instance, sequelize.QueryOptions, "Member[instance, manual]", manual]
      - [sequelize.Instance, sequelize.SequelizeStaticAndInstance, "Member[Instance, manual]", manual]
      - [sequelize.Model, sequelize.AssociationOptionsBelongsToMany, "Member[through, manual]", manual]
      - [sequelize.Model, sequelize.Associations, "Member[belongsTo,belongsToMany,hasMany,hasOne, manual].Argument[0, manual]", manual]
      - [sequelize.Model, sequelize.BuildOptions, "Member[include, manual].ArrayElement", manual]
      - [sequelize.Model, sequelize.CountOptions, "Member[include, manual]", manual]
      - [sequelize.Model, sequelize.CountOptions, "Member[include, manual].ArrayElement", manual]
      - [sequelize.Model, sequelize.DefineAttributeColumnReferencesOptions, "Member[model, manual]", manual]
      - [sequelize.Model, sequelize.FindOptions, "Member[include, manual]", manual]
      - [sequelize.Model, sequelize.FindOptions, "Member[include, manual].ArrayElement", manual]
      - [sequelize.Model, sequelize.FindOptions, "Member[lock, manual].Member[of, manual]", manual]
      - [sequelize.Model, sequelize.FindOptionsOrderArray, ArrayElement, manual]
      - [sequelize.Model, sequelize.FindOptionsOrderArray, "ArrayElement.Member[model, manual]", manual]
      - [sequelize.Model, sequelize.Hooks, "Member[afterDefine, manual].Argument[1, manual].Argument[0, manual]", manual]
      - [sequelize.Model, sequelize.Hooks, "Member[afterDefine, manual].WithArity[1, manual].Argument[0, manual].Argument[0, manual]", manual]
      - [sequelize.Model, sequelize.IncludeAssociation, "Member[source,target, manual]", manual]
      - [sequelize.Model, sequelize.IncludeOptions, "Member[include,model, manual]", manual]
      - [sequelize.Model, sequelize.IncludeOptions, "Member[include, manual].ArrayElement", manual]
      - [sequelize.Model, sequelize.Instance, "Member[Model, manual]", manual]
      - [sequelize.Model, sequelize.Model, "Member[schema,scope,unscoped, manual].ReturnValue", manual]
      - [sequelize.Model, sequelize.Model, "Member[sync, manual].ReturnValue.Awaited", manual]
      - [sequelize.Model, sequelize.Models, AnyMember, manual]
      - [sequelize.Model, sequelize.ModelsHashInterface, AnyMember, manual]
      - [sequelize.Model, sequelize.QueryInterface, "Member[bulkDelete,rawSelect,upsert, manual].Argument[3, manual]", manual]
      - [sequelize.Model, sequelize.QueryInterface, "Member[select, manual].Argument[0, manual]", manual]
      - [sequelize.Model, sequelize.QueryOptions, "Member[model, manual]", manual]
      - [sequelize.Model, sequelize.Sequelize, "Member[define,import,model, manual].ReturnValue", manual]
      - [sequelize.Model, sequelize.Sequelize, "Member[import, manual].Argument[1, manual].ReturnValue", manual]
      - [sequelize.Model, sequelize.SequelizeStaticAndInstance, "Member[Model, manual]", manual]
      - [sequelize.Model, sequelize.ThroughOptions, "Member[model, manual]", manual]
      - [sequelize.Model, sequelize.Utils, "Member[mapOptionFieldNames, manual].Argument[1, manual]", manual]
      - [sequelize.Model, sequelize.Utils, "Member[mapValueFieldNames, manual].Argument[2, manual]", manual]
      - [sequelize.Models, sequelize.Model, "Member[associate, manual].Argument[0, manual]", manual]
      - [sequelize.ModelsHashInterface, sequelize.Sequelize, "Member[models, manual]", manual]
      - [sequelize.Options, "sequelize-typescript.SequelizeOptions", "", manual]
      - [sequelize.Options, sequelize.Sequelize, "Member[options, manual]", manual]
      - [sequelize.Options, sequelize.SequelizeStatic, "Argument[3, manual]", manual]
      - [sequelize.Options, sequelize.SequelizeStatic, "WithArity[1, manual].Argument[0,1, manual]", manual]
      - [sequelize.Options, sequelize.SequelizeStatic, "WithArity[2, manual].Argument[1,2, manual]", manual]
      - [sequelize.Options, sequelize.SequelizeStatic, "WithArity[3, manual].Argument[2, manual]", manual]
      - [sequelize.QueryInterface, sequelize.Sequelize, "Member[getQueryInterface, manual].ReturnValue", manual]
      - [sequelize.QueryOptions, sequelize.Options, "Member[query, manual]", manual]
      - [sequelize.QueryOptions, sequelize.QueryInterface, "Member[bulkDelete,bulkInsert,createTable,select,setAutocommit,setIsolationLevel, manual].Argument[2, manual]", manual]
      - [sequelize.QueryOptions, sequelize.QueryInterface, "Member[bulkUpdate,delete,insert, manual].Argument[3, manual]", manual]
      - [sequelize.QueryOptions, sequelize.QueryInterface, "Member[commitTransaction,deferConstraints,dropTable,rawSelect,rollbackTransaction,showIndex,startTransaction, manual].Argument[1, manual]", manual]
      - [sequelize.QueryOptions, sequelize.QueryInterface, "Member[createFunction, manual].Argument[5, manual]", manual]
      - [sequelize.QueryOptions, sequelize.QueryInterface, "Member[dropAllEnums,dropAllTables,showAllSchemas,showAllTables, manual].Argument[0, manual]", manual]
      - [sequelize.QueryOptions, sequelize.QueryInterface, "Member[increment,update,upsert, manual].Argument[4, manual]", manual]
      - [sequelize.QueryOptions, sequelize.Sequelize, "Member[authenticate,validate, manual].Argument[0, manual]", manual]
      - [sequelize.QueryOptions, sequelize.Sequelize, "Member[query, manual].Argument[1, manual]", manual]
      - [sequelize.Sequelize, "sequelize-typescript.Sequelize", "", manual]
      - [sequelize.Sequelize, sequelize.Hooks, "Member[afterInit, manual].Argument[1, manual].Argument[0, manual]", manual]
      - [sequelize.Sequelize, sequelize.Hooks, "Member[afterInit, manual].WithArity[1, manual].Argument[0, manual].Argument[0, manual]", manual]
      - [sequelize.Sequelize, sequelize.Instance, "Member[sequelize, manual]", manual]
      - [sequelize.Sequelize, sequelize.QueryInterface, "Member[sequelize, manual]", manual]
      - [sequelize.Sequelize, sequelize.Sequelize, "Member[import, manual].Argument[1, manual].Argument[0, manual]", manual]
      - [sequelize.Sequelize, sequelize.SequelizeStatic, Instance, manual]
      - [sequelize.Sequelize, sequelize.SequelizeStatic, "Member[useCLS, manual].ReturnValue", manual]
      - [sequelize.SequelizeStatic, "sequelize-typescript.Sequelize", "", manual]
      - [sequelize.SequelizeStatic, sequelize.Sequelize, "Member[Sequelize, manual]", manual]
      - [sequelize.SequelizeStatic, sequelize.SequelizeStatic, "Member[Sequelize,default, manual]", manual]
      - [sequelize.SequelizeStatic, sequelize, "", manual]
      - [sequelize.SequelizeStaticAndInstance.Model, "sequelize-typescript.Model", "", manual]
      - [sequelize.SequelizeStaticAndInstance, sequelize.Sequelize, "", manual]
      - [sequelize.SequelizeStaticAndInstance, sequelize.SequelizeStatic, "", manual]
      - [sequelize.ThroughOptions, sequelize.AssociationOptionsBelongsToMany, "Member[through, manual]", manual]
      - [sequelize.Utils, sequelize.SequelizeStaticAndInstance, "Member[Utils, manual]", manual]

  - addsTo:
      pack: codeql/javascript-all
      extensible: summaryModel
    data:
      - ["sequelize-typescript.Model", "", "", "Member[reload, manual].ReturnValue.Awaited", type, manual]
      - [sequelize.Instance, "", "", "Member[decrement,increment,reload,save,update,updateAttributes, manual].ReturnValue.Awaited", type, manual]
      - [sequelize.Instance, "", "", "Member[set,setAttributes, manual].ReturnValue", type, manual]
      - [sequelize.Model, "", "", "Member[schema,scope,unscoped, manual].ReturnValue", type, manual]
      - [sequelize.Model, "", "", "Member[sync, manual].ReturnValue.Awaited", type, manual]

  - addsTo:
      pack: codeql/javascript-all
      extensible: typeVariableModel
    data:
      - ["sequelize-typescript.ModelStatic.0", Instance, manual]
      - ["sequelize-typescript.Repository.0", Instance, manual]
